### YamlMime:ManagedReference
items:
- uid: SharpSDL3.Mixer.Mixer
  commentId: T:SharpSDL3.Mixer.Mixer
  id: Mixer
  parent: SharpSDL3.Mixer
  children:
  - SharpSDL3.Mixer.Mixer.ChannelFinished(SharpSDL3.Mixer.Mixer.Mix_ChannelFinishedCallback)
  - SharpSDL3.Mixer.Mixer.Channels
  - SharpSDL3.Mixer.Mixer.CloseAudio
  - SharpSDL3.Mixer.Mixer.DefaultChannels
  - SharpSDL3.Mixer.Mixer.DefaultFormat
  - SharpSDL3.Mixer.Mixer.DefaultFrequency
  - SharpSDL3.Mixer.Mixer.EffectDone(System.Int32,System.IntPtr)
  - SharpSDL3.Mixer.Mixer.EffectMaxSpeed
  - SharpSDL3.Mixer.Mixer.ExpireChannel(System.Int32,System.Int32)
  - SharpSDL3.Mixer.Mixer.FadeInChannel(System.Int32,SharpSDL3.Mixer.Chunk,System.Int32,System.Int32)
  - SharpSDL3.Mixer.Mixer.FadeInChannelTimed(System.Int32,SharpSDL3.Mixer.Chunk,System.Int32,System.Int32,System.Int32)
  - SharpSDL3.Mixer.Mixer.FadeInMusic(SharpSDL3.Mixer.Music,System.Int32,System.Int32)
  - SharpSDL3.Mixer.Mixer.FadeInMusicPos(SharpSDL3.Mixer.Music,System.Int32,System.Int32,System.Double)
  - SharpSDL3.Mixer.Mixer.FadeOutChannel(System.Int32,System.Int32)
  - SharpSDL3.Mixer.Mixer.FadeOutGroup(System.Int32,System.Int32)
  - SharpSDL3.Mixer.Mixer.FadeOutMusic(System.Int32)
  - SharpSDL3.Mixer.Mixer.FadingChannel(System.Int32)
  - SharpSDL3.Mixer.Mixer.FadingMusic
  - SharpSDL3.Mixer.Mixer.FreeChunk(SharpSDL3.Mixer.Chunk)
  - SharpSDL3.Mixer.Mixer.FreeChunk(System.IntPtr)
  - SharpSDL3.Mixer.Mixer.FreeMusic(SharpSDL3.Mixer.Music)
  - SharpSDL3.Mixer.Mixer.FreeMusic(System.IntPtr)
  - SharpSDL3.Mixer.Mixer.GetChunk(System.Int32)
  - SharpSDL3.Mixer.Mixer.GetMusicHookData
  - SharpSDL3.Mixer.Mixer.GetMusicLoopEndTime(SharpSDL3.Mixer.Music)
  - SharpSDL3.Mixer.Mixer.GetMusicLoopEndTime(System.IntPtr)
  - SharpSDL3.Mixer.Mixer.GetMusicLoopLengthTime(SharpSDL3.Mixer.Music)
  - SharpSDL3.Mixer.Mixer.GetMusicLoopLengthTime(System.IntPtr)
  - SharpSDL3.Mixer.Mixer.GetMusicLoopStartTime(SharpSDL3.Mixer.Music)
  - SharpSDL3.Mixer.Mixer.GetMusicLoopStartTime(System.IntPtr)
  - SharpSDL3.Mixer.Mixer.GetMusicPosition(SharpSDL3.Mixer.Music)
  - SharpSDL3.Mixer.Mixer.GetMusicPosition(System.IntPtr)
  - SharpSDL3.Mixer.Mixer.GetMusicVolume(SharpSDL3.Mixer.Music)
  - SharpSDL3.Mixer.Mixer.GetMusicVolume(System.IntPtr)
  - SharpSDL3.Mixer.Mixer.GetNumTracks(SharpSDL3.Mixer.Music)
  - SharpSDL3.Mixer.Mixer.GetNumTracks(System.IntPtr)
  - SharpSDL3.Mixer.Mixer.GetSoundFonts
  - SharpSDL3.Mixer.Mixer.GetTimidityCfg
  - SharpSDL3.Mixer.Mixer.GroupAvailable(System.Int32)
  - SharpSDL3.Mixer.Mixer.GroupChannel(System.Int32,System.Int32)
  - SharpSDL3.Mixer.Mixer.GroupChannels(System.Int32,System.Int32,System.Int32)
  - SharpSDL3.Mixer.Mixer.GroupCount(System.Int32)
  - SharpSDL3.Mixer.Mixer.GroupNewer(System.Int32)
  - SharpSDL3.Mixer.Mixer.GroupOldest(System.Int32)
  - SharpSDL3.Mixer.Mixer.HaltChannel(System.Int32)
  - SharpSDL3.Mixer.Mixer.HaltGroup(System.Int32)
  - SharpSDL3.Mixer.Mixer.HaltMusic
  - SharpSDL3.Mixer.Mixer.HookMusic(SharpSDL3.Mixer.Mixer.Mix_MixCallback,System.IntPtr)
  - SharpSDL3.Mixer.Mixer.HookMusicFinished(SharpSDL3.Mixer.Mixer.MusicFinishedCallback)
  - SharpSDL3.Mixer.Mixer.Initialize(SharpSDL3.Mixer.Mixer.MixInit)
  - SharpSDL3.Mixer.Mixer.LoadMusic(System.String)
  - SharpSDL3.Mixer.Mixer.LoadWav(System.String)
  - SharpSDL3.Mixer.Mixer.MIX_CHANNEL_POST
  - SharpSDL3.Mixer.Mixer.MIX_MAX_VOLUME
  - SharpSDL3.Mixer.Mixer.Major
  - SharpSDL3.Mixer.Mixer.MasterVolume(System.Int32)
  - SharpSDL3.Mixer.Mixer.MaxVolume
  - SharpSDL3.Mixer.Mixer.Micro
  - SharpSDL3.Mixer.Mixer.Minor
  - SharpSDL3.Mixer.Mixer.MixerVersion
  - SharpSDL3.Mixer.Mixer.MixerVersionAtLeast(System.Int32,System.Int32,System.Int32)
  - SharpSDL3.Mixer.Mixer.ModMusicJumpToOrder(System.Int32)
  - SharpSDL3.Mixer.Mixer.MusicDuration(SharpSDL3.Mixer.Music)
  - SharpSDL3.Mixer.Mixer.MusicDuration(System.IntPtr)
  - SharpSDL3.Mixer.Mixer.OpenAudio(SharpSDL3.Mixer.AudioDeviceId,System.Nullable{SharpSDL3.Structs.AudioSpec})
  - SharpSDL3.Mixer.Mixer.Pause(System.Int32)
  - SharpSDL3.Mixer.Mixer.PauseGroup(System.Int32)
  - SharpSDL3.Mixer.Mixer.PauseMusic
  - SharpSDL3.Mixer.Mixer.Paused(System.Int32)
  - SharpSDL3.Mixer.Mixer.PausedMusic
  - SharpSDL3.Mixer.Mixer.PlayChannel(SharpSDL3.Mixer.Chunk,System.Int32,System.Int32)
  - SharpSDL3.Mixer.Mixer.PlayChannel(System.Int32,SharpSDL3.Mixer.Chunk,System.Int32)
  - SharpSDL3.Mixer.Mixer.PlayChannelTimed(System.Int32,SharpSDL3.Mixer.Chunk,System.Int32,System.Int32)
  - SharpSDL3.Mixer.Mixer.PlayMusic(SharpSDL3.Mixer.Music,System.Int32)
  - SharpSDL3.Mixer.Mixer.PlayMusic(System.IntPtr,System.Int32)
  - SharpSDL3.Mixer.Mixer.Playing(System.Int32)
  - SharpSDL3.Mixer.Mixer.PlayingMusic
  - SharpSDL3.Mixer.Mixer.Quit
  - SharpSDL3.Mixer.Mixer.RegisterEffect(System.Int32,SharpSDL3.Mixer.Mixer.Mix_EffectFunc_t,SharpSDL3.Mixer.Mixer.Mix_EffectDone_t,System.IntPtr)
  - SharpSDL3.Mixer.Mixer.ReserveChannels(System.Int32)
  - SharpSDL3.Mixer.Mixer.Resume(System.Int32)
  - SharpSDL3.Mixer.Mixer.ResumeGroup(System.Int32)
  - SharpSDL3.Mixer.Mixer.ResumeMusic
  - SharpSDL3.Mixer.Mixer.RewindMusic
  - SharpSDL3.Mixer.Mixer.SetDistance(System.Int32,System.Byte)
  - SharpSDL3.Mixer.Mixer.SetMusicPosition(System.Double)
  - SharpSDL3.Mixer.Mixer.SetPanning(System.Int32,System.Byte,System.Byte)
  - SharpSDL3.Mixer.Mixer.SetPosition(System.Int32,System.Int16,System.Byte)
  - SharpSDL3.Mixer.Mixer.SetPostMix(SharpSDL3.Mixer.Mixer.Mix_MixCallback,System.IntPtr)
  - SharpSDL3.Mixer.Mixer.SetReverseStereo(System.Int32,System.Int32)
  - SharpSDL3.Mixer.Mixer.SetSoundFonts(System.String)
  - SharpSDL3.Mixer.Mixer.SetTimidityCfg(System.String)
  - SharpSDL3.Mixer.Mixer.StartTrack(SharpSDL3.Mixer.Music,System.Int32)
  - SharpSDL3.Mixer.Mixer.UnregisterAllEffects(System.Int32)
  - SharpSDL3.Mixer.Mixer.UnregisterEffect(System.Int32,SharpSDL3.Mixer.Mixer.Mix_EffectFunc_t)
  - SharpSDL3.Mixer.Mixer.Volume(System.Int32,System.Int32)
  - SharpSDL3.Mixer.Mixer.VolumeChunk(SharpSDL3.Mixer.Chunk,System.Int32)
  - SharpSDL3.Mixer.Mixer.VolumeChunk(System.IntPtr,System.Int32)
  - SharpSDL3.Mixer.Mixer.VolumeMusic(System.Int32)
  langs:
  - csharp
  - vb
  name: Mixer
  nameWithType: Mixer
  fullName: SharpSDL3.Mixer.Mixer
  type: Class
  source:
    id: Mixer
    path: Microsoft.Interop.LibraryImportGenerator\Microsoft.Interop.LibraryImportGenerator\LibraryImports.g.cs
    startLine: 10254
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static class Mixer
    content.vb: Public Module Mixer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: SharpSDL3.Mixer.Mixer.EffectMaxSpeed
  commentId: F:SharpSDL3.Mixer.Mixer.EffectMaxSpeed
  id: EffectMaxSpeed
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: EffectMaxSpeed
  nameWithType: Mixer.EffectMaxSpeed
  fullName: SharpSDL3.Mixer.Mixer.EffectMaxSpeed
  type: Field
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: EffectMaxSpeed
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 10
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public const string EffectMaxSpeed = "MIX_EFFECTSMAXSPEED"
    return:
      type: System.String
    content.vb: Public Const EffectMaxSpeed As String = "MIX_EFFECTSMAXSPEED"
- uid: SharpSDL3.Mixer.Mixer.Major
  commentId: F:SharpSDL3.Mixer.Mixer.Major
  id: Major
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: Major
  nameWithType: Mixer.Major
  fullName: SharpSDL3.Mixer.Mixer.Major
  type: Field
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: Major
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 15
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  summary: 'Printable format: "%d.%d.%d", MAJOR, MINOR, MICRO'
  example: []
  syntax:
    content: public const int Major = 3
    return:
      type: System.Int32
    content.vb: Public Const Major As Integer = 3
- uid: SharpSDL3.Mixer.Mixer.Micro
  commentId: F:SharpSDL3.Mixer.Mixer.Micro
  id: Micro
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: Micro
  nameWithType: Mixer.Micro
  fullName: SharpSDL3.Mixer.Mixer.Micro
  type: Field
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: Micro
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 16
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public const int Micro = 0
    return:
      type: System.Int32
    content.vb: Public Const Micro As Integer = 0
- uid: SharpSDL3.Mixer.Mixer.Minor
  commentId: F:SharpSDL3.Mixer.Mixer.Minor
  id: Minor
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: Minor
  nameWithType: Mixer.Minor
  fullName: SharpSDL3.Mixer.Mixer.Minor
  type: Field
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: Minor
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 17
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public const int Minor = 0
    return:
      type: System.Int32
    content.vb: Public Const Minor As Integer = 0
- uid: SharpSDL3.Mixer.Mixer.ChannelFinished(SharpSDL3.Mixer.Mixer.Mix_ChannelFinishedCallback)
  commentId: M:SharpSDL3.Mixer.Mixer.ChannelFinished(SharpSDL3.Mixer.Mixer.Mix_ChannelFinishedCallback)
  id: ChannelFinished(SharpSDL3.Mixer.Mixer.Mix_ChannelFinishedCallback)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: ChannelFinished(Mix_ChannelFinishedCallback)
  nameWithType: Mixer.ChannelFinished(Mixer.Mix_ChannelFinishedCallback)
  fullName: SharpSDL3.Mixer.Mixer.ChannelFinished(SharpSDL3.Mixer.Mixer.Mix_ChannelFinishedCallback)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ChannelFinished
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 78
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  summary: Sets a callback that runs when a channel has finished playing.
  remarks: >-
    This method ensures that the callback is properly registered and provides a layer of abstraction

    over the native method to make it less trivial.
  example: []
  syntax:
    content: public static void ChannelFinished(Mixer.Mix_ChannelFinishedCallback channelFinishedCallback)
    parameters:
    - id: channelFinishedCallback
      type: SharpSDL3.Mixer.Mixer.Mix_ChannelFinishedCallback
      description: The callback function to be invoked when a channel finishes playing.
    content.vb: Public Shared Sub ChannelFinished(channelFinishedCallback As Mixer.Mix_ChannelFinishedCallback)
  overload: SharpSDL3.Mixer.Mixer.ChannelFinished*
- uid: SharpSDL3.Mixer.Mixer.EffectDone(System.Int32,System.IntPtr)
  commentId: M:SharpSDL3.Mixer.Mixer.EffectDone(System.Int32,System.IntPtr)
  id: EffectDone(System.Int32,System.IntPtr)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: EffectDone(int, nint)
  nameWithType: Mixer.EffectDone(int, nint)
  fullName: SharpSDL3.Mixer.Mixer.EffectDone(int, nint)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: EffectDone
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 86
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static void EffectDone(int channel, nint udata)
    parameters:
    - id: channel
      type: System.Int32
    - id: udata
      type: System.IntPtr
    content.vb: Public Shared Sub EffectDone(channel As Integer, udata As IntPtr)
  overload: SharpSDL3.Mixer.Mixer.EffectDone*
  nameWithType.vb: Mixer.EffectDone(Integer, IntPtr)
  fullName.vb: SharpSDL3.Mixer.Mixer.EffectDone(Integer, System.IntPtr)
  name.vb: EffectDone(Integer, IntPtr)
- uid: SharpSDL3.Mixer.Mixer.ExpireChannel(System.Int32,System.Int32)
  commentId: M:SharpSDL3.Mixer.Mixer.ExpireChannel(System.Int32,System.Int32)
  id: ExpireChannel(System.Int32,System.Int32)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: ExpireChannel(int, int)
  nameWithType: Mixer.ExpireChannel(int, int)
  fullName: SharpSDL3.Mixer.Mixer.ExpireChannel(int, int)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ExpireChannel
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 95
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static int ExpireChannel(int channel, int ticks)
    parameters:
    - id: channel
      type: System.Int32
    - id: ticks
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function ExpireChannel(channel As Integer, ticks As Integer) As Integer
  overload: SharpSDL3.Mixer.Mixer.ExpireChannel*
  nameWithType.vb: Mixer.ExpireChannel(Integer, Integer)
  fullName.vb: SharpSDL3.Mixer.Mixer.ExpireChannel(Integer, Integer)
  name.vb: ExpireChannel(Integer, Integer)
- uid: SharpSDL3.Mixer.Mixer.FadeInChannel(System.Int32,SharpSDL3.Mixer.Chunk,System.Int32,System.Int32)
  commentId: M:SharpSDL3.Mixer.Mixer.FadeInChannel(System.Int32,SharpSDL3.Mixer.Chunk,System.Int32,System.Int32)
  id: FadeInChannel(System.Int32,SharpSDL3.Mixer.Chunk,System.Int32,System.Int32)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: FadeInChannel(int, Chunk, int, int)
  nameWithType: Mixer.FadeInChannel(int, Chunk, int, int)
  fullName: SharpSDL3.Mixer.Mixer.FadeInChannel(int, SharpSDL3.Mixer.Chunk, int, int)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: FadeInChannel
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 101
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static int FadeInChannel(int channel, Chunk chunk, int loops, int ms)
    parameters:
    - id: channel
      type: System.Int32
    - id: chunk
      type: SharpSDL3.Mixer.Chunk
    - id: loops
      type: System.Int32
    - id: ms
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function FadeInChannel(channel As Integer, chunk As Chunk, loops As Integer, ms As Integer) As Integer
  overload: SharpSDL3.Mixer.Mixer.FadeInChannel*
  nameWithType.vb: Mixer.FadeInChannel(Integer, Chunk, Integer, Integer)
  fullName.vb: SharpSDL3.Mixer.Mixer.FadeInChannel(Integer, SharpSDL3.Mixer.Chunk, Integer, Integer)
  name.vb: FadeInChannel(Integer, Chunk, Integer, Integer)
- uid: SharpSDL3.Mixer.Mixer.FadeInChannelTimed(System.Int32,SharpSDL3.Mixer.Chunk,System.Int32,System.Int32,System.Int32)
  commentId: M:SharpSDL3.Mixer.Mixer.FadeInChannelTimed(System.Int32,SharpSDL3.Mixer.Chunk,System.Int32,System.Int32,System.Int32)
  id: FadeInChannelTimed(System.Int32,SharpSDL3.Mixer.Chunk,System.Int32,System.Int32,System.Int32)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: FadeInChannelTimed(int, Chunk, int, int, int)
  nameWithType: Mixer.FadeInChannelTimed(int, Chunk, int, int, int)
  fullName: SharpSDL3.Mixer.Mixer.FadeInChannelTimed(int, SharpSDL3.Mixer.Chunk, int, int, int)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: FadeInChannelTimed
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 119
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static int FadeInChannelTimed(int channel, Chunk chunk, int loops, int ms, int ticks)
    parameters:
    - id: channel
      type: System.Int32
    - id: chunk
      type: SharpSDL3.Mixer.Chunk
    - id: loops
      type: System.Int32
    - id: ms
      type: System.Int32
    - id: ticks
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function FadeInChannelTimed(channel As Integer, chunk As Chunk, loops As Integer, ms As Integer, ticks As Integer) As Integer
  overload: SharpSDL3.Mixer.Mixer.FadeInChannelTimed*
  nameWithType.vb: Mixer.FadeInChannelTimed(Integer, Chunk, Integer, Integer, Integer)
  fullName.vb: SharpSDL3.Mixer.Mixer.FadeInChannelTimed(Integer, SharpSDL3.Mixer.Chunk, Integer, Integer, Integer)
  name.vb: FadeInChannelTimed(Integer, Chunk, Integer, Integer, Integer)
- uid: SharpSDL3.Mixer.Mixer.FadeInMusic(SharpSDL3.Mixer.Music,System.Int32,System.Int32)
  commentId: M:SharpSDL3.Mixer.Mixer.FadeInMusic(SharpSDL3.Mixer.Music,System.Int32,System.Int32)
  id: FadeInMusic(SharpSDL3.Mixer.Music,System.Int32,System.Int32)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: FadeInMusic(Music, int, int)
  nameWithType: Mixer.FadeInMusic(Music, int, int)
  fullName: SharpSDL3.Mixer.Mixer.FadeInMusic(SharpSDL3.Mixer.Music, int, int)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: FadeInMusic
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 134
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static bool FadeInMusic(Music music, int loops, int ms)
    parameters:
    - id: music
      type: SharpSDL3.Mixer.Music
    - id: loops
      type: System.Int32
    - id: ms
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function FadeInMusic(music As Music, loops As Integer, ms As Integer) As Boolean
  overload: SharpSDL3.Mixer.Mixer.FadeInMusic*
  nameWithType.vb: Mixer.FadeInMusic(Music, Integer, Integer)
  fullName.vb: SharpSDL3.Mixer.Mixer.FadeInMusic(SharpSDL3.Mixer.Music, Integer, Integer)
  name.vb: FadeInMusic(Music, Integer, Integer)
- uid: SharpSDL3.Mixer.Mixer.FadeInMusicPos(SharpSDL3.Mixer.Music,System.Int32,System.Int32,System.Double)
  commentId: M:SharpSDL3.Mixer.Mixer.FadeInMusicPos(SharpSDL3.Mixer.Music,System.Int32,System.Int32,System.Double)
  id: FadeInMusicPos(SharpSDL3.Mixer.Music,System.Int32,System.Int32,System.Double)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: FadeInMusicPos(Music, int, int, double)
  nameWithType: Mixer.FadeInMusicPos(Music, int, int, double)
  fullName: SharpSDL3.Mixer.Mixer.FadeInMusicPos(SharpSDL3.Mixer.Music, int, int, double)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: FadeInMusicPos
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 143
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static bool FadeInMusicPos(Music music, int loops, int ms, double position)
    parameters:
    - id: music
      type: SharpSDL3.Mixer.Music
    - id: loops
      type: System.Int32
    - id: ms
      type: System.Int32
    - id: position
      type: System.Double
    return:
      type: System.Boolean
    content.vb: Public Shared Function FadeInMusicPos(music As Music, loops As Integer, ms As Integer, position As Double) As Boolean
  overload: SharpSDL3.Mixer.Mixer.FadeInMusicPos*
  nameWithType.vb: Mixer.FadeInMusicPos(Music, Integer, Integer, Double)
  fullName.vb: SharpSDL3.Mixer.Mixer.FadeInMusicPos(SharpSDL3.Mixer.Music, Integer, Integer, Double)
  name.vb: FadeInMusicPos(Music, Integer, Integer, Double)
- uid: SharpSDL3.Mixer.Mixer.FadeOutChannel(System.Int32,System.Int32)
  commentId: M:SharpSDL3.Mixer.Mixer.FadeOutChannel(System.Int32,System.Int32)
  id: FadeOutChannel(System.Int32,System.Int32)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: FadeOutChannel(int, int)
  nameWithType: Mixer.FadeOutChannel(int, int)
  fullName: SharpSDL3.Mixer.Mixer.FadeOutChannel(int, int)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: FadeOutChannel
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 151
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static int FadeOutChannel(int which, int ms)
    parameters:
    - id: which
      type: System.Int32
    - id: ms
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function FadeOutChannel(which As Integer, ms As Integer) As Integer
  overload: SharpSDL3.Mixer.Mixer.FadeOutChannel*
  nameWithType.vb: Mixer.FadeOutChannel(Integer, Integer)
  fullName.vb: SharpSDL3.Mixer.Mixer.FadeOutChannel(Integer, Integer)
  name.vb: FadeOutChannel(Integer, Integer)
- uid: SharpSDL3.Mixer.Mixer.FadeOutGroup(System.Int32,System.Int32)
  commentId: M:SharpSDL3.Mixer.Mixer.FadeOutGroup(System.Int32,System.Int32)
  id: FadeOutGroup(System.Int32,System.Int32)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: FadeOutGroup(int, int)
  nameWithType: Mixer.FadeOutGroup(int, int)
  fullName: SharpSDL3.Mixer.Mixer.FadeOutGroup(int, int)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: FadeOutGroup
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 157
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static int FadeOutGroup(int tag, int ms)
    parameters:
    - id: tag
      type: System.Int32
    - id: ms
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function FadeOutGroup(tag As Integer, ms As Integer) As Integer
  overload: SharpSDL3.Mixer.Mixer.FadeOutGroup*
  nameWithType.vb: Mixer.FadeOutGroup(Integer, Integer)
  fullName.vb: SharpSDL3.Mixer.Mixer.FadeOutGroup(Integer, Integer)
  name.vb: FadeOutGroup(Integer, Integer)
- uid: SharpSDL3.Mixer.Mixer.FadeOutMusic(System.Int32)
  commentId: M:SharpSDL3.Mixer.Mixer.FadeOutMusic(System.Int32)
  id: FadeOutMusic(System.Int32)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: FadeOutMusic(int)
  nameWithType: Mixer.FadeOutMusic(int)
  fullName: SharpSDL3.Mixer.Mixer.FadeOutMusic(int)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: FadeOutMusic
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 163
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static bool FadeOutMusic(int ms)
    parameters:
    - id: ms
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function FadeOutMusic(ms As Integer) As Boolean
  overload: SharpSDL3.Mixer.Mixer.FadeOutMusic*
  nameWithType.vb: Mixer.FadeOutMusic(Integer)
  fullName.vb: SharpSDL3.Mixer.Mixer.FadeOutMusic(Integer)
  name.vb: FadeOutMusic(Integer)
- uid: SharpSDL3.Mixer.Mixer.FadingChannel(System.Int32)
  commentId: M:SharpSDL3.Mixer.Mixer.FadingChannel(System.Int32)
  id: FadingChannel(System.Int32)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: FadingChannel(int)
  nameWithType: Mixer.FadingChannel(int)
  fullName: SharpSDL3.Mixer.Mixer.FadingChannel(int)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: FadingChannel
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 169
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static Fading FadingChannel(int which)
    parameters:
    - id: which
      type: System.Int32
    return:
      type: SharpSDL3.Mixer.Fading
    content.vb: Public Shared Function FadingChannel(which As Integer) As Fading
  overload: SharpSDL3.Mixer.Mixer.FadingChannel*
  nameWithType.vb: Mixer.FadingChannel(Integer)
  fullName.vb: SharpSDL3.Mixer.Mixer.FadingChannel(Integer)
  name.vb: FadingChannel(Integer)
- uid: SharpSDL3.Mixer.Mixer.FadingMusic
  commentId: M:SharpSDL3.Mixer.Mixer.FadingMusic
  id: FadingMusic
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: FadingMusic()
  nameWithType: Mixer.FadingMusic()
  fullName: SharpSDL3.Mixer.Mixer.FadingMusic()
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: FadingMusic
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 175
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static Fading FadingMusic()
    return:
      type: SharpSDL3.Mixer.Fading
    content.vb: Public Shared Function FadingMusic() As Fading
  overload: SharpSDL3.Mixer.Mixer.FadingMusic*
- uid: SharpSDL3.Mixer.Mixer.GetChunk(System.Int32)
  commentId: M:SharpSDL3.Mixer.Mixer.GetChunk(System.Int32)
  id: GetChunk(System.Int32)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: GetChunk(int)
  nameWithType: Mixer.GetChunk(int)
  fullName: SharpSDL3.Mixer.Mixer.GetChunk(int)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetChunk
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 177
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static nint GetChunk(int channel)
    parameters:
    - id: channel
      type: System.Int32
    return:
      type: System.IntPtr
    content.vb: Public Shared Function GetChunk(channel As Integer) As IntPtr
  overload: SharpSDL3.Mixer.Mixer.GetChunk*
  nameWithType.vb: Mixer.GetChunk(Integer)
  fullName.vb: SharpSDL3.Mixer.Mixer.GetChunk(Integer)
  name.vb: GetChunk(Integer)
- uid: SharpSDL3.Mixer.Mixer.GetMusicHookData
  commentId: M:SharpSDL3.Mixer.Mixer.GetMusicHookData
  id: GetMusicHookData
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: GetMusicHookData()
  nameWithType: Mixer.GetMusicHookData()
  fullName: SharpSDL3.Mixer.Mixer.GetMusicHookData()
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetMusicHookData
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 183
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static nint GetMusicHookData()
    return:
      type: System.IntPtr
    content.vb: Public Shared Function GetMusicHookData() As IntPtr
  overload: SharpSDL3.Mixer.Mixer.GetMusicHookData*
- uid: SharpSDL3.Mixer.Mixer.GetMusicLoopEndTime(SharpSDL3.Mixer.Music)
  commentId: M:SharpSDL3.Mixer.Mixer.GetMusicLoopEndTime(SharpSDL3.Mixer.Music)
  id: GetMusicLoopEndTime(SharpSDL3.Mixer.Music)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: GetMusicLoopEndTime(Music)
  nameWithType: Mixer.GetMusicLoopEndTime(Music)
  fullName: SharpSDL3.Mixer.Mixer.GetMusicLoopEndTime(SharpSDL3.Mixer.Music)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetMusicLoopEndTime
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 185
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static double GetMusicLoopEndTime(Music music)
    parameters:
    - id: music
      type: SharpSDL3.Mixer.Music
    return:
      type: System.Double
    content.vb: Public Shared Function GetMusicLoopEndTime(music As Music) As Double
  overload: SharpSDL3.Mixer.Mixer.GetMusicLoopEndTime*
- uid: SharpSDL3.Mixer.Mixer.GetMusicLoopEndTime(System.IntPtr)
  commentId: M:SharpSDL3.Mixer.Mixer.GetMusicLoopEndTime(System.IntPtr)
  id: GetMusicLoopEndTime(System.IntPtr)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: GetMusicLoopEndTime(nint)
  nameWithType: Mixer.GetMusicLoopEndTime(nint)
  fullName: SharpSDL3.Mixer.Mixer.GetMusicLoopEndTime(nint)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetMusicLoopEndTime
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 191
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static double GetMusicLoopEndTime(nint music)
    parameters:
    - id: music
      type: System.IntPtr
    return:
      type: System.Double
    content.vb: Public Shared Function GetMusicLoopEndTime(music As IntPtr) As Double
  overload: SharpSDL3.Mixer.Mixer.GetMusicLoopEndTime*
  nameWithType.vb: Mixer.GetMusicLoopEndTime(IntPtr)
  fullName.vb: SharpSDL3.Mixer.Mixer.GetMusicLoopEndTime(System.IntPtr)
  name.vb: GetMusicLoopEndTime(IntPtr)
- uid: SharpSDL3.Mixer.Mixer.GetMusicLoopLengthTime(SharpSDL3.Mixer.Music)
  commentId: M:SharpSDL3.Mixer.Mixer.GetMusicLoopLengthTime(SharpSDL3.Mixer.Music)
  id: GetMusicLoopLengthTime(SharpSDL3.Mixer.Music)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: GetMusicLoopLengthTime(Music)
  nameWithType: Mixer.GetMusicLoopLengthTime(Music)
  fullName: SharpSDL3.Mixer.Mixer.GetMusicLoopLengthTime(SharpSDL3.Mixer.Music)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetMusicLoopLengthTime
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 197
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static double GetMusicLoopLengthTime(Music music)
    parameters:
    - id: music
      type: SharpSDL3.Mixer.Music
    return:
      type: System.Double
    content.vb: Public Shared Function GetMusicLoopLengthTime(music As Music) As Double
  overload: SharpSDL3.Mixer.Mixer.GetMusicLoopLengthTime*
- uid: SharpSDL3.Mixer.Mixer.GetMusicLoopLengthTime(System.IntPtr)
  commentId: M:SharpSDL3.Mixer.Mixer.GetMusicLoopLengthTime(System.IntPtr)
  id: GetMusicLoopLengthTime(System.IntPtr)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: GetMusicLoopLengthTime(nint)
  nameWithType: Mixer.GetMusicLoopLengthTime(nint)
  fullName: SharpSDL3.Mixer.Mixer.GetMusicLoopLengthTime(nint)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetMusicLoopLengthTime
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 203
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static double GetMusicLoopLengthTime(nint music)
    parameters:
    - id: music
      type: System.IntPtr
    return:
      type: System.Double
    content.vb: Public Shared Function GetMusicLoopLengthTime(music As IntPtr) As Double
  overload: SharpSDL3.Mixer.Mixer.GetMusicLoopLengthTime*
  nameWithType.vb: Mixer.GetMusicLoopLengthTime(IntPtr)
  fullName.vb: SharpSDL3.Mixer.Mixer.GetMusicLoopLengthTime(System.IntPtr)
  name.vb: GetMusicLoopLengthTime(IntPtr)
- uid: SharpSDL3.Mixer.Mixer.GetMusicLoopStartTime(SharpSDL3.Mixer.Music)
  commentId: M:SharpSDL3.Mixer.Mixer.GetMusicLoopStartTime(SharpSDL3.Mixer.Music)
  id: GetMusicLoopStartTime(SharpSDL3.Mixer.Music)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: GetMusicLoopStartTime(Music)
  nameWithType: Mixer.GetMusicLoopStartTime(Music)
  fullName: SharpSDL3.Mixer.Mixer.GetMusicLoopStartTime(SharpSDL3.Mixer.Music)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetMusicLoopStartTime
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 209
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static double GetMusicLoopStartTime(Music music)
    parameters:
    - id: music
      type: SharpSDL3.Mixer.Music
    return:
      type: System.Double
    content.vb: Public Shared Function GetMusicLoopStartTime(music As Music) As Double
  overload: SharpSDL3.Mixer.Mixer.GetMusicLoopStartTime*
- uid: SharpSDL3.Mixer.Mixer.GetMusicLoopStartTime(System.IntPtr)
  commentId: M:SharpSDL3.Mixer.Mixer.GetMusicLoopStartTime(System.IntPtr)
  id: GetMusicLoopStartTime(System.IntPtr)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: GetMusicLoopStartTime(nint)
  nameWithType: Mixer.GetMusicLoopStartTime(nint)
  fullName: SharpSDL3.Mixer.Mixer.GetMusicLoopStartTime(nint)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetMusicLoopStartTime
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 215
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static double GetMusicLoopStartTime(nint music)
    parameters:
    - id: music
      type: System.IntPtr
    return:
      type: System.Double
    content.vb: Public Shared Function GetMusicLoopStartTime(music As IntPtr) As Double
  overload: SharpSDL3.Mixer.Mixer.GetMusicLoopStartTime*
  nameWithType.vb: Mixer.GetMusicLoopStartTime(IntPtr)
  fullName.vb: SharpSDL3.Mixer.Mixer.GetMusicLoopStartTime(System.IntPtr)
  name.vb: GetMusicLoopStartTime(IntPtr)
- uid: SharpSDL3.Mixer.Mixer.GetMusicPosition(SharpSDL3.Mixer.Music)
  commentId: M:SharpSDL3.Mixer.Mixer.GetMusicPosition(SharpSDL3.Mixer.Music)
  id: GetMusicPosition(SharpSDL3.Mixer.Music)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: GetMusicPosition(Music)
  nameWithType: Mixer.GetMusicPosition(Music)
  fullName: SharpSDL3.Mixer.Mixer.GetMusicPosition(SharpSDL3.Mixer.Music)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetMusicPosition
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 221
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static double GetMusicPosition(Music music)
    parameters:
    - id: music
      type: SharpSDL3.Mixer.Music
    return:
      type: System.Double
    content.vb: Public Shared Function GetMusicPosition(music As Music) As Double
  overload: SharpSDL3.Mixer.Mixer.GetMusicPosition*
- uid: SharpSDL3.Mixer.Mixer.GetMusicPosition(System.IntPtr)
  commentId: M:SharpSDL3.Mixer.Mixer.GetMusicPosition(System.IntPtr)
  id: GetMusicPosition(System.IntPtr)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: GetMusicPosition(nint)
  nameWithType: Mixer.GetMusicPosition(nint)
  fullName: SharpSDL3.Mixer.Mixer.GetMusicPosition(nint)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetMusicPosition
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 227
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static double GetMusicPosition(nint music)
    parameters:
    - id: music
      type: System.IntPtr
    return:
      type: System.Double
    content.vb: Public Shared Function GetMusicPosition(music As IntPtr) As Double
  overload: SharpSDL3.Mixer.Mixer.GetMusicPosition*
  nameWithType.vb: Mixer.GetMusicPosition(IntPtr)
  fullName.vb: SharpSDL3.Mixer.Mixer.GetMusicPosition(System.IntPtr)
  name.vb: GetMusicPosition(IntPtr)
- uid: SharpSDL3.Mixer.Mixer.GetMusicVolume(SharpSDL3.Mixer.Music)
  commentId: M:SharpSDL3.Mixer.Mixer.GetMusicVolume(SharpSDL3.Mixer.Music)
  id: GetMusicVolume(SharpSDL3.Mixer.Music)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: GetMusicVolume(Music)
  nameWithType: Mixer.GetMusicVolume(Music)
  fullName: SharpSDL3.Mixer.Mixer.GetMusicVolume(SharpSDL3.Mixer.Music)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetMusicVolume
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 233
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static int GetMusicVolume(Music music)
    parameters:
    - id: music
      type: SharpSDL3.Mixer.Music
    return:
      type: System.Int32
    content.vb: Public Shared Function GetMusicVolume(music As Music) As Integer
  overload: SharpSDL3.Mixer.Mixer.GetMusicVolume*
- uid: SharpSDL3.Mixer.Mixer.GetMusicVolume(System.IntPtr)
  commentId: M:SharpSDL3.Mixer.Mixer.GetMusicVolume(System.IntPtr)
  id: GetMusicVolume(System.IntPtr)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: GetMusicVolume(nint)
  nameWithType: Mixer.GetMusicVolume(nint)
  fullName: SharpSDL3.Mixer.Mixer.GetMusicVolume(nint)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetMusicVolume
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 239
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static int GetMusicVolume(nint music)
    parameters:
    - id: music
      type: System.IntPtr
    return:
      type: System.Int32
    content.vb: Public Shared Function GetMusicVolume(music As IntPtr) As Integer
  overload: SharpSDL3.Mixer.Mixer.GetMusicVolume*
  nameWithType.vb: Mixer.GetMusicVolume(IntPtr)
  fullName.vb: SharpSDL3.Mixer.Mixer.GetMusicVolume(System.IntPtr)
  name.vb: GetMusicVolume(IntPtr)
- uid: SharpSDL3.Mixer.Mixer.GetNumTracks(SharpSDL3.Mixer.Music)
  commentId: M:SharpSDL3.Mixer.Mixer.GetNumTracks(SharpSDL3.Mixer.Music)
  id: GetNumTracks(SharpSDL3.Mixer.Music)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: GetNumTracks(Music)
  nameWithType: Mixer.GetNumTracks(Music)
  fullName: SharpSDL3.Mixer.Mixer.GetNumTracks(SharpSDL3.Mixer.Music)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetNumTracks
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 245
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static int GetNumTracks(Music music)
    parameters:
    - id: music
      type: SharpSDL3.Mixer.Music
    return:
      type: System.Int32
    content.vb: Public Shared Function GetNumTracks(music As Music) As Integer
  overload: SharpSDL3.Mixer.Mixer.GetNumTracks*
- uid: SharpSDL3.Mixer.Mixer.GetNumTracks(System.IntPtr)
  commentId: M:SharpSDL3.Mixer.Mixer.GetNumTracks(System.IntPtr)
  id: GetNumTracks(System.IntPtr)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: GetNumTracks(nint)
  nameWithType: Mixer.GetNumTracks(nint)
  fullName: SharpSDL3.Mixer.Mixer.GetNumTracks(nint)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetNumTracks
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 251
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static int GetNumTracks(nint music)
    parameters:
    - id: music
      type: System.IntPtr
    return:
      type: System.Int32
    content.vb: Public Shared Function GetNumTracks(music As IntPtr) As Integer
  overload: SharpSDL3.Mixer.Mixer.GetNumTracks*
  nameWithType.vb: Mixer.GetNumTracks(IntPtr)
  fullName.vb: SharpSDL3.Mixer.Mixer.GetNumTracks(System.IntPtr)
  name.vb: GetNumTracks(IntPtr)
- uid: SharpSDL3.Mixer.Mixer.GetSoundFonts
  commentId: M:SharpSDL3.Mixer.Mixer.GetSoundFonts
  id: GetSoundFonts
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: GetSoundFonts()
  nameWithType: Mixer.GetSoundFonts()
  fullName: SharpSDL3.Mixer.Mixer.GetSoundFonts()
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetSoundFonts
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 257
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static string GetSoundFonts()
    return:
      type: System.String
    content.vb: Public Shared Function GetSoundFonts() As String
  overload: SharpSDL3.Mixer.Mixer.GetSoundFonts*
- uid: SharpSDL3.Mixer.Mixer.GetTimidityCfg
  commentId: M:SharpSDL3.Mixer.Mixer.GetTimidityCfg
  id: GetTimidityCfg
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: GetTimidityCfg()
  nameWithType: Mixer.GetTimidityCfg()
  fullName: SharpSDL3.Mixer.Mixer.GetTimidityCfg()
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetTimidityCfg
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 264
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static string GetTimidityCfg()
    return:
      type: System.String
    content.vb: Public Shared Function GetTimidityCfg() As String
  overload: SharpSDL3.Mixer.Mixer.GetTimidityCfg*
- uid: SharpSDL3.Mixer.Mixer.GroupAvailable(System.Int32)
  commentId: M:SharpSDL3.Mixer.Mixer.GroupAvailable(System.Int32)
  id: GroupAvailable(System.Int32)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: GroupAvailable(int)
  nameWithType: Mixer.GroupAvailable(int)
  fullName: SharpSDL3.Mixer.Mixer.GroupAvailable(int)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GroupAvailable
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 271
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static int GroupAvailable(int tag)
    parameters:
    - id: tag
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function GroupAvailable(tag As Integer) As Integer
  overload: SharpSDL3.Mixer.Mixer.GroupAvailable*
  nameWithType.vb: Mixer.GroupAvailable(Integer)
  fullName.vb: SharpSDL3.Mixer.Mixer.GroupAvailable(Integer)
  name.vb: GroupAvailable(Integer)
- uid: SharpSDL3.Mixer.Mixer.GroupChannel(System.Int32,System.Int32)
  commentId: M:SharpSDL3.Mixer.Mixer.GroupChannel(System.Int32,System.Int32)
  id: GroupChannel(System.Int32,System.Int32)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: GroupChannel(int, int)
  nameWithType: Mixer.GroupChannel(int, int)
  fullName: SharpSDL3.Mixer.Mixer.GroupChannel(int, int)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GroupChannel
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 277
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static bool GroupChannel(int which, int tag)
    parameters:
    - id: which
      type: System.Int32
    - id: tag
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function GroupChannel(which As Integer, tag As Integer) As Boolean
  overload: SharpSDL3.Mixer.Mixer.GroupChannel*
  nameWithType.vb: Mixer.GroupChannel(Integer, Integer)
  fullName.vb: SharpSDL3.Mixer.Mixer.GroupChannel(Integer, Integer)
  name.vb: GroupChannel(Integer, Integer)
- uid: SharpSDL3.Mixer.Mixer.GroupChannels(System.Int32,System.Int32,System.Int32)
  commentId: M:SharpSDL3.Mixer.Mixer.GroupChannels(System.Int32,System.Int32,System.Int32)
  id: GroupChannels(System.Int32,System.Int32,System.Int32)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: GroupChannels(int, int, int)
  nameWithType: Mixer.GroupChannels(int, int, int)
  fullName: SharpSDL3.Mixer.Mixer.GroupChannels(int, int, int)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GroupChannels
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 285
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static bool GroupChannels(int from, int to, int tag)
    parameters:
    - id: from
      type: System.Int32
    - id: to
      type: System.Int32
    - id: tag
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function GroupChannels(from As Integer, [to] As Integer, tag As Integer) As Boolean
  overload: SharpSDL3.Mixer.Mixer.GroupChannels*
  nameWithType.vb: Mixer.GroupChannels(Integer, Integer, Integer)
  fullName.vb: SharpSDL3.Mixer.Mixer.GroupChannels(Integer, Integer, Integer)
  name.vb: GroupChannels(Integer, Integer, Integer)
- uid: SharpSDL3.Mixer.Mixer.GroupCount(System.Int32)
  commentId: M:SharpSDL3.Mixer.Mixer.GroupCount(System.Int32)
  id: GroupCount(System.Int32)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: GroupCount(int)
  nameWithType: Mixer.GroupCount(int)
  fullName: SharpSDL3.Mixer.Mixer.GroupCount(int)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GroupCount
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 295
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static int GroupCount(int tag)
    parameters:
    - id: tag
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function GroupCount(tag As Integer) As Integer
  overload: SharpSDL3.Mixer.Mixer.GroupCount*
  nameWithType.vb: Mixer.GroupCount(Integer)
  fullName.vb: SharpSDL3.Mixer.Mixer.GroupCount(Integer)
  name.vb: GroupCount(Integer)
- uid: SharpSDL3.Mixer.Mixer.GroupNewer(System.Int32)
  commentId: M:SharpSDL3.Mixer.Mixer.GroupNewer(System.Int32)
  id: GroupNewer(System.Int32)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: GroupNewer(int)
  nameWithType: Mixer.GroupNewer(int)
  fullName: SharpSDL3.Mixer.Mixer.GroupNewer(int)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GroupNewer
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 301
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static int GroupNewer(int tag)
    parameters:
    - id: tag
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function GroupNewer(tag As Integer) As Integer
  overload: SharpSDL3.Mixer.Mixer.GroupNewer*
  nameWithType.vb: Mixer.GroupNewer(Integer)
  fullName.vb: SharpSDL3.Mixer.Mixer.GroupNewer(Integer)
  name.vb: GroupNewer(Integer)
- uid: SharpSDL3.Mixer.Mixer.GroupOldest(System.Int32)
  commentId: M:SharpSDL3.Mixer.Mixer.GroupOldest(System.Int32)
  id: GroupOldest(System.Int32)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: GroupOldest(int)
  nameWithType: Mixer.GroupOldest(int)
  fullName: SharpSDL3.Mixer.Mixer.GroupOldest(int)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GroupOldest
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 307
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static int GroupOldest(int tag)
    parameters:
    - id: tag
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function GroupOldest(tag As Integer) As Integer
  overload: SharpSDL3.Mixer.Mixer.GroupOldest*
  nameWithType.vb: Mixer.GroupOldest(Integer)
  fullName.vb: SharpSDL3.Mixer.Mixer.GroupOldest(Integer)
  name.vb: GroupOldest(Integer)
- uid: SharpSDL3.Mixer.Mixer.HaltChannel(System.Int32)
  commentId: M:SharpSDL3.Mixer.Mixer.HaltChannel(System.Int32)
  id: HaltChannel(System.Int32)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: HaltChannel(int)
  nameWithType: Mixer.HaltChannel(int)
  fullName: SharpSDL3.Mixer.Mixer.HaltChannel(int)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: HaltChannel
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 313
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static void HaltChannel(int channel)
    parameters:
    - id: channel
      type: System.Int32
    content.vb: Public Shared Sub HaltChannel(channel As Integer)
  overload: SharpSDL3.Mixer.Mixer.HaltChannel*
  nameWithType.vb: Mixer.HaltChannel(Integer)
  fullName.vb: SharpSDL3.Mixer.Mixer.HaltChannel(Integer)
  name.vb: HaltChannel(Integer)
- uid: SharpSDL3.Mixer.Mixer.HaltGroup(System.Int32)
  commentId: M:SharpSDL3.Mixer.Mixer.HaltGroup(System.Int32)
  id: HaltGroup(System.Int32)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: HaltGroup(int)
  nameWithType: Mixer.HaltGroup(int)
  fullName: SharpSDL3.Mixer.Mixer.HaltGroup(int)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: HaltGroup
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 319
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static void HaltGroup(int tag)
    parameters:
    - id: tag
      type: System.Int32
    content.vb: Public Shared Sub HaltGroup(tag As Integer)
  overload: SharpSDL3.Mixer.Mixer.HaltGroup*
  nameWithType.vb: Mixer.HaltGroup(Integer)
  fullName.vb: SharpSDL3.Mixer.Mixer.HaltGroup(Integer)
  name.vb: HaltGroup(Integer)
- uid: SharpSDL3.Mixer.Mixer.HaltMusic
  commentId: M:SharpSDL3.Mixer.Mixer.HaltMusic
  id: HaltMusic
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: HaltMusic()
  nameWithType: Mixer.HaltMusic()
  fullName: SharpSDL3.Mixer.Mixer.HaltMusic()
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: HaltMusic
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 325
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static void HaltMusic()
    content.vb: Public Shared Sub HaltMusic()
  overload: SharpSDL3.Mixer.Mixer.HaltMusic*
- uid: SharpSDL3.Mixer.Mixer.HookMusic(SharpSDL3.Mixer.Mixer.Mix_MixCallback,System.IntPtr)
  commentId: M:SharpSDL3.Mixer.Mixer.HookMusic(SharpSDL3.Mixer.Mixer.Mix_MixCallback,System.IntPtr)
  id: HookMusic(SharpSDL3.Mixer.Mixer.Mix_MixCallback,System.IntPtr)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: HookMusic(Mix_MixCallback, nint)
  nameWithType: Mixer.HookMusic(Mixer.Mix_MixCallback, nint)
  fullName: SharpSDL3.Mixer.Mixer.HookMusic(SharpSDL3.Mixer.Mixer.Mix_MixCallback, nint)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: HookMusic
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 327
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static void HookMusic(Mixer.Mix_MixCallback mix_func, nint arg)
    parameters:
    - id: mix_func
      type: SharpSDL3.Mixer.Mixer.Mix_MixCallback
    - id: arg
      type: System.IntPtr
    content.vb: Public Shared Sub HookMusic(mix_func As Mixer.Mix_MixCallback, arg As IntPtr)
  overload: SharpSDL3.Mixer.Mixer.HookMusic*
  nameWithType.vb: Mixer.HookMusic(Mixer.Mix_MixCallback, IntPtr)
  fullName.vb: SharpSDL3.Mixer.Mixer.HookMusic(SharpSDL3.Mixer.Mixer.Mix_MixCallback, System.IntPtr)
  name.vb: HookMusic(Mix_MixCallback, IntPtr)
- uid: SharpSDL3.Mixer.Mixer.HookMusicFinished(SharpSDL3.Mixer.Mixer.MusicFinishedCallback)
  commentId: M:SharpSDL3.Mixer.Mixer.HookMusicFinished(SharpSDL3.Mixer.Mixer.MusicFinishedCallback)
  id: HookMusicFinished(SharpSDL3.Mixer.Mixer.MusicFinishedCallback)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: HookMusicFinished(MusicFinishedCallback)
  nameWithType: Mixer.HookMusicFinished(Mixer.MusicFinishedCallback)
  fullName: SharpSDL3.Mixer.Mixer.HookMusicFinished(SharpSDL3.Mixer.Mixer.MusicFinishedCallback)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: HookMusicFinished
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 333
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static void HookMusicFinished(Mixer.MusicFinishedCallback music_finished)
    parameters:
    - id: music_finished
      type: SharpSDL3.Mixer.Mixer.MusicFinishedCallback
    content.vb: Public Shared Sub HookMusicFinished(music_finished As Mixer.MusicFinishedCallback)
  overload: SharpSDL3.Mixer.Mixer.HookMusicFinished*
- uid: SharpSDL3.Mixer.Mixer.MasterVolume(System.Int32)
  commentId: M:SharpSDL3.Mixer.Mixer.MasterVolume(System.Int32)
  id: MasterVolume(System.Int32)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: MasterVolume(int)
  nameWithType: Mixer.MasterVolume(int)
  fullName: SharpSDL3.Mixer.Mixer.MasterVolume(int)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: MasterVolume
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 339
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static int MasterVolume(int volume)
    parameters:
    - id: volume
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function MasterVolume(volume As Integer) As Integer
  overload: SharpSDL3.Mixer.Mixer.MasterVolume*
  nameWithType.vb: Mixer.MasterVolume(Integer)
  fullName.vb: SharpSDL3.Mixer.Mixer.MasterVolume(Integer)
  name.vb: MasterVolume(Integer)
- uid: SharpSDL3.Mixer.Mixer.MixerVersion
  commentId: M:SharpSDL3.Mixer.Mixer.MixerVersion
  id: MixerVersion
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: MixerVersion()
  nameWithType: Mixer.MixerVersion()
  fullName: SharpSDL3.Mixer.Mixer.MixerVersion()
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: MixerVersion
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 348
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  summary: This is the version number macro for the current SDL_mixer version.
  example: []
  syntax:
    content: public static string MixerVersion()
    return:
      type: System.String
    content.vb: Public Shared Function MixerVersion() As String
  overload: SharpSDL3.Mixer.Mixer.MixerVersion*
- uid: SharpSDL3.Mixer.Mixer.MixerVersionAtLeast(System.Int32,System.Int32,System.Int32)
  commentId: M:SharpSDL3.Mixer.Mixer.MixerVersionAtLeast(System.Int32,System.Int32,System.Int32)
  id: MixerVersionAtLeast(System.Int32,System.Int32,System.Int32)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: MixerVersionAtLeast(int, int, int)
  nameWithType: Mixer.MixerVersionAtLeast(int, int, int)
  fullName: SharpSDL3.Mixer.Mixer.MixerVersionAtLeast(int, int, int)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: MixerVersionAtLeast
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 357
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  summary: Checks if the compiled SDL3_mixer version is at least the specified version.
  example: []
  syntax:
    content: public static bool MixerVersionAtLeast(int major, int minor, int micro)
    parameters:
    - id: major
      type: System.Int32
      description: The major version to check.
    - id: minor
      type: System.Int32
      description: The minor version to check.
    - id: micro
      type: System.Int32
      description: The micro version to check.
    return:
      type: System.Boolean
      description: True if the compiled version is at least the specified version; otherwise, false.
    content.vb: Public Shared Function MixerVersionAtLeast(major As Integer, minor As Integer, micro As Integer) As Boolean
  overload: SharpSDL3.Mixer.Mixer.MixerVersionAtLeast*
  nameWithType.vb: Mixer.MixerVersionAtLeast(Integer, Integer, Integer)
  fullName.vb: SharpSDL3.Mixer.Mixer.MixerVersionAtLeast(Integer, Integer, Integer)
  name.vb: MixerVersionAtLeast(Integer, Integer, Integer)
- uid: SharpSDL3.Mixer.Mixer.CloseAudio
  commentId: M:SharpSDL3.Mixer.Mixer.CloseAudio
  id: CloseAudio
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: CloseAudio()
  nameWithType: Mixer.CloseAudio()
  fullName: SharpSDL3.Mixer.Mixer.CloseAudio()
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CloseAudio
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 371
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  summary: Closes the currently open audio device, halting all playback.
  remarks: >-
    This triggers any registered channel and music finished callbacks.

    Ensure all <xref href="SharpSDL3.Mixer.Chunk" data-throw-if-not-resolved="false"></xref> and <xref href="SharpSDL3.Mixer.Music" data-throw-if-not-resolved="false"></xref> objects are disposed before calling.
  example: []
  syntax:
    content: public static void CloseAudio()
    content.vb: Public Shared Sub CloseAudio()
  overload: SharpSDL3.Mixer.Mixer.CloseAudio*
- uid: SharpSDL3.Mixer.Mixer.Initialize(SharpSDL3.Mixer.Mixer.MixInit)
  commentId: M:SharpSDL3.Mixer.Mixer.Initialize(SharpSDL3.Mixer.Mixer.MixInit)
  id: Initialize(SharpSDL3.Mixer.Mixer.MixInit)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: Initialize(MixInit)
  nameWithType: Mixer.Initialize(Mixer.MixInit)
  fullName: SharpSDL3.Mixer.Mixer.Initialize(SharpSDL3.Mixer.Mixer.MixInit)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: Initialize
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 384
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  summary: Initializes SDL3_mixer with the specified audio format support.
  remarks: >-
    Call this before opening an audio device to ensure support for specific audio formats.

    You can call this multiple times to initialize additional formats.

    Use <xref href="SharpSDL3.Mixer.Mixer.Quit" data-throw-if-not-resolved="false"></xref> to deinitialize when done.
  example: []
  syntax:
    content: public static Mixer.MixInit Initialize(Mixer.MixInit flags)
    parameters:
    - id: flags
      type: SharpSDL3.Mixer.Mixer.MixInit
      description: Flags indicating which audio formats to initialize (e.g., MixInit.MIX_INIT_WAV).
    return:
      type: SharpSDL3.Mixer.Mixer.MixInit
      description: The flags that were successfully initialized.
    content.vb: Public Shared Function Initialize(flags As Mixer.MixInit) As Mixer.MixInit
  overload: SharpSDL3.Mixer.Mixer.Initialize*
  exceptions:
  - type: SharpSDL3.SdlException
    commentId: T:SharpSDL3.SdlException
    description: Thrown if initialization fails for any requested flags.
- uid: SharpSDL3.Mixer.Mixer.OpenAudio(SharpSDL3.Mixer.AudioDeviceId,System.Nullable{SharpSDL3.Structs.AudioSpec})
  commentId: M:SharpSDL3.Mixer.Mixer.OpenAudio(SharpSDL3.Mixer.AudioDeviceId,System.Nullable{SharpSDL3.Structs.AudioSpec})
  id: OpenAudio(SharpSDL3.Mixer.AudioDeviceId,System.Nullable{SharpSDL3.Structs.AudioSpec})
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: OpenAudio(AudioDeviceId, AudioSpec?)
  nameWithType: Mixer.OpenAudio(AudioDeviceId, AudioSpec?)
  fullName: SharpSDL3.Mixer.Mixer.OpenAudio(SharpSDL3.Mixer.AudioDeviceId, SharpSDL3.Structs.AudioSpec?)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: OpenAudio
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 401
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  summary: Opens an audio device for playback with the specified settings.
  remarks: >-
    Call <xref href="SharpSDL3.Mixer.Mixer.CloseAudio" data-throw-if-not-resolved="false"></xref> when done to close the device.

    If <code class="paramref">spec</code> is null, SDL3_mixer uses reasonable defaults.
  example: []
  syntax:
    content: public static void OpenAudio(AudioDeviceId deviceId, AudioSpec? spec = null)
    parameters:
    - id: deviceId
      type: SharpSDL3.Mixer.AudioDeviceId
      description: The ID of the audio device to open, or 0 for the default device.
    - id: spec
      type: System.Nullable{SharpSDL3.Structs.AudioSpec}
      description: The desired audio specification, or null for default settings.
    content.vb: Public Shared Sub OpenAudio(deviceId As AudioDeviceId, spec As AudioSpec? = Nothing)
  overload: SharpSDL3.Mixer.Mixer.OpenAudio*
  exceptions:
  - type: SharpSDL3.SdlException
    commentId: T:SharpSDL3.SdlException
    description: Thrown if the audio device cannot be opened.
- uid: SharpSDL3.Mixer.Mixer.Quit
  commentId: M:SharpSDL3.Mixer.Mixer.Quit
  id: Quit
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: Quit()
  nameWithType: Mixer.Quit()
  fullName: SharpSDL3.Mixer.Mixer.Quit()
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: Quit
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 415
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  summary: Deinitializes SDL3_mixer, unloading all audio format support.
  remarks: >-
    Call this after closing all audio devices and freeing resources.

    This method is safe to call multiple times.
  example: []
  syntax:
    content: public static void Quit()
    content.vb: Public Shared Sub Quit()
  overload: SharpSDL3.Mixer.Mixer.Quit*
- uid: SharpSDL3.Mixer.Mixer.FreeChunk(SharpSDL3.Mixer.Chunk)
  commentId: M:SharpSDL3.Mixer.Mixer.FreeChunk(SharpSDL3.Mixer.Chunk)
  id: FreeChunk(SharpSDL3.Mixer.Chunk)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: FreeChunk(Chunk)
  nameWithType: Mixer.FreeChunk(Chunk)
  fullName: SharpSDL3.Mixer.Mixer.FreeChunk(SharpSDL3.Mixer.Chunk)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: FreeChunk
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 434
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static void FreeChunk(Chunk chunk)
    parameters:
    - id: chunk
      type: SharpSDL3.Mixer.Chunk
    content.vb: Public Shared Sub FreeChunk(chunk As Chunk)
  overload: SharpSDL3.Mixer.Mixer.FreeChunk*
- uid: SharpSDL3.Mixer.Mixer.FreeChunk(System.IntPtr)
  commentId: M:SharpSDL3.Mixer.Mixer.FreeChunk(System.IntPtr)
  id: FreeChunk(System.IntPtr)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: FreeChunk(nint)
  nameWithType: Mixer.FreeChunk(nint)
  fullName: SharpSDL3.Mixer.Mixer.FreeChunk(nint)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: FreeChunk
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 442
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static void FreeChunk(nint chunk)
    parameters:
    - id: chunk
      type: System.IntPtr
    content.vb: Public Shared Sub FreeChunk(chunk As IntPtr)
  overload: SharpSDL3.Mixer.Mixer.FreeChunk*
  nameWithType.vb: Mixer.FreeChunk(IntPtr)
  fullName.vb: SharpSDL3.Mixer.Mixer.FreeChunk(System.IntPtr)
  name.vb: FreeChunk(IntPtr)
- uid: SharpSDL3.Mixer.Mixer.FreeMusic(SharpSDL3.Mixer.Music)
  commentId: M:SharpSDL3.Mixer.Mixer.FreeMusic(SharpSDL3.Mixer.Music)
  id: FreeMusic(SharpSDL3.Mixer.Music)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: FreeMusic(Music)
  nameWithType: Mixer.FreeMusic(Music)
  fullName: SharpSDL3.Mixer.Mixer.FreeMusic(SharpSDL3.Mixer.Music)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: FreeMusic
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 451
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static void FreeMusic(Music music)
    parameters:
    - id: music
      type: SharpSDL3.Mixer.Music
    content.vb: Public Shared Sub FreeMusic(music As Music)
  overload: SharpSDL3.Mixer.Mixer.FreeMusic*
- uid: SharpSDL3.Mixer.Mixer.FreeMusic(System.IntPtr)
  commentId: M:SharpSDL3.Mixer.Mixer.FreeMusic(System.IntPtr)
  id: FreeMusic(System.IntPtr)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: FreeMusic(nint)
  nameWithType: Mixer.FreeMusic(nint)
  fullName: SharpSDL3.Mixer.Mixer.FreeMusic(nint)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: FreeMusic
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 460
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static void FreeMusic(nint music)
    parameters:
    - id: music
      type: System.IntPtr
    content.vb: Public Shared Sub FreeMusic(music As IntPtr)
  overload: SharpSDL3.Mixer.Mixer.FreeMusic*
  nameWithType.vb: Mixer.FreeMusic(IntPtr)
  fullName.vb: SharpSDL3.Mixer.Mixer.FreeMusic(System.IntPtr)
  name.vb: FreeMusic(IntPtr)
- uid: SharpSDL3.Mixer.Mixer.LoadMusic(System.String)
  commentId: M:SharpSDL3.Mixer.Mixer.LoadMusic(System.String)
  id: LoadMusic(System.String)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: LoadMusic(string)
  nameWithType: Mixer.LoadMusic(string)
  fullName: SharpSDL3.Mixer.Mixer.LoadMusic(string)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LoadMusic
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 478
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  summary: Loads a music object from a file.
  remarks: Dispose of the returned <xref href="SharpSDL3.Mixer.Music" data-throw-if-not-resolved="false"></xref> when no longer needed.
  example: []
  syntax:
    content: public static Music LoadMusic(string filePath)
    parameters:
    - id: filePath
      type: System.String
      description: The path to the music file (e.g., MP3, OGG).
    return:
      type: SharpSDL3.Mixer.Music
      description: A <xref href="SharpSDL3.Mixer.Music" data-throw-if-not-resolved="false"></xref> object representing the loaded music.
    content.vb: Public Shared Function LoadMusic(filePath As String) As Music
  overload: SharpSDL3.Mixer.Mixer.LoadMusic*
  exceptions:
  - type: SharpSDL3.SdlException
    commentId: T:SharpSDL3.SdlException
    description: Thrown if the file cannot be loaded.
  nameWithType.vb: Mixer.LoadMusic(String)
  fullName.vb: SharpSDL3.Mixer.Mixer.LoadMusic(String)
  name.vb: LoadMusic(String)
- uid: SharpSDL3.Mixer.Mixer.LoadWav(System.String)
  commentId: M:SharpSDL3.Mixer.Mixer.LoadWav(System.String)
  id: LoadWav(System.String)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: LoadWav(string)
  nameWithType: Mixer.LoadWav(string)
  fullName: SharpSDL3.Mixer.Mixer.LoadWav(string)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LoadWav
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 508
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  summary: Loads an audio chunk from a file.
  remarks: Dispose of the returned <xref href="SharpSDL3.Mixer.Chunk" data-throw-if-not-resolved="false"></xref> when no longer needed.
  example: []
  syntax:
    content: public static Chunk LoadWav(string filePath)
    parameters:
    - id: filePath
      type: System.String
      description: The path to the audio file (e.g., WAV).
    return:
      type: SharpSDL3.Mixer.Chunk
      description: A <xref href="SharpSDL3.Mixer.Chunk" data-throw-if-not-resolved="false"></xref> object representing the loaded audio.
    content.vb: Public Shared Function LoadWav(filePath As String) As Chunk
  overload: SharpSDL3.Mixer.Mixer.LoadWav*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if the file path is null or empty.
  - type: SharpSDL3.SdlException
    commentId: T:SharpSDL3.SdlException
    description: Thrown if the file cannot be loaded.
  nameWithType.vb: Mixer.LoadWav(String)
  fullName.vb: SharpSDL3.Mixer.Mixer.LoadWav(String)
  name.vb: LoadWav(String)
- uid: SharpSDL3.Mixer.Mixer.PlayChannel(SharpSDL3.Mixer.Chunk,System.Int32,System.Int32)
  commentId: M:SharpSDL3.Mixer.Mixer.PlayChannel(SharpSDL3.Mixer.Chunk,System.Int32,System.Int32)
  id: PlayChannel(SharpSDL3.Mixer.Chunk,System.Int32,System.Int32)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: PlayChannel(Chunk, int, int)
  nameWithType: Mixer.PlayChannel(Chunk, int, int)
  fullName: SharpSDL3.Mixer.Mixer.PlayChannel(SharpSDL3.Mixer.Chunk, int, int)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: PlayChannel
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 534
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  summary: Plays an audio chunk on a specific channel or the first available channel.
  example: []
  syntax:
    content: public static int PlayChannel(Chunk chunk, int loops, int channel = -1)
    parameters:
    - id: chunk
      type: SharpSDL3.Mixer.Chunk
      description: The <xref href="SharpSDL3.Mixer.Chunk" data-throw-if-not-resolved="false"></xref> to play.
    - id: loops
      type: System.Int32
      description: The number of times to loop the sound (-1 for infinite, 0 for once).
    - id: channel
      type: System.Int32
      description: The channel to play on, or -1 for the first available channel.
    return:
      type: System.Int32
      description: The channel used for playback, or -1 if no channel was available.
    content.vb: Public Shared Function PlayChannel(chunk As Chunk, loops As Integer, channel As Integer = -1) As Integer
  overload: SharpSDL3.Mixer.Mixer.PlayChannel*
  exceptions:
  - type: SharpSDL3.SdlException
    commentId: T:SharpSDL3.SdlException
    description: Thrown if playback fails.
  nameWithType.vb: Mixer.PlayChannel(Chunk, Integer, Integer)
  fullName.vb: SharpSDL3.Mixer.Mixer.PlayChannel(SharpSDL3.Mixer.Chunk, Integer, Integer)
  name.vb: PlayChannel(Chunk, Integer, Integer)
- uid: SharpSDL3.Mixer.Mixer.PlayChannel(System.Int32,SharpSDL3.Mixer.Chunk,System.Int32)
  commentId: M:SharpSDL3.Mixer.Mixer.PlayChannel(System.Int32,SharpSDL3.Mixer.Chunk,System.Int32)
  id: PlayChannel(System.Int32,SharpSDL3.Mixer.Chunk,System.Int32)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: PlayChannel(int, Chunk, int)
  nameWithType: Mixer.PlayChannel(int, Chunk, int)
  fullName: SharpSDL3.Mixer.Mixer.PlayChannel(int, SharpSDL3.Mixer.Chunk, int)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: PlayChannel
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 548
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static int PlayChannel(int channel, Chunk chunk, int loops)
    parameters:
    - id: channel
      type: System.Int32
    - id: chunk
      type: SharpSDL3.Mixer.Chunk
    - id: loops
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function PlayChannel(channel As Integer, chunk As Chunk, loops As Integer) As Integer
  overload: SharpSDL3.Mixer.Mixer.PlayChannel*
  nameWithType.vb: Mixer.PlayChannel(Integer, Chunk, Integer)
  fullName.vb: SharpSDL3.Mixer.Mixer.PlayChannel(Integer, SharpSDL3.Mixer.Chunk, Integer)
  name.vb: PlayChannel(Integer, Chunk, Integer)
- uid: SharpSDL3.Mixer.Mixer.PlayChannelTimed(System.Int32,SharpSDL3.Mixer.Chunk,System.Int32,System.Int32)
  commentId: M:SharpSDL3.Mixer.Mixer.PlayChannelTimed(System.Int32,SharpSDL3.Mixer.Chunk,System.Int32,System.Int32)
  id: PlayChannelTimed(System.Int32,SharpSDL3.Mixer.Chunk,System.Int32,System.Int32)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: PlayChannelTimed(int, Chunk, int, int)
  nameWithType: Mixer.PlayChannelTimed(int, Chunk, int, int)
  fullName: SharpSDL3.Mixer.Mixer.PlayChannelTimed(int, SharpSDL3.Mixer.Chunk, int, int)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: PlayChannelTimed
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 552
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static int PlayChannelTimed(int channel, Chunk chunk, int loops, int ticks)
    parameters:
    - id: channel
      type: System.Int32
    - id: chunk
      type: SharpSDL3.Mixer.Chunk
    - id: loops
      type: System.Int32
    - id: ticks
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function PlayChannelTimed(channel As Integer, chunk As Chunk, loops As Integer, ticks As Integer) As Integer
  overload: SharpSDL3.Mixer.Mixer.PlayChannelTimed*
  nameWithType.vb: Mixer.PlayChannelTimed(Integer, Chunk, Integer, Integer)
  fullName.vb: SharpSDL3.Mixer.Mixer.PlayChannelTimed(Integer, SharpSDL3.Mixer.Chunk, Integer, Integer)
  name.vb: PlayChannelTimed(Integer, Chunk, Integer, Integer)
- uid: SharpSDL3.Mixer.Mixer.RegisterEffect(System.Int32,SharpSDL3.Mixer.Mixer.Mix_EffectFunc_t,SharpSDL3.Mixer.Mixer.Mix_EffectDone_t,System.IntPtr)
  commentId: M:SharpSDL3.Mixer.Mixer.RegisterEffect(System.Int32,SharpSDL3.Mixer.Mixer.Mix_EffectFunc_t,SharpSDL3.Mixer.Mixer.Mix_EffectDone_t,System.IntPtr)
  id: RegisterEffect(System.Int32,SharpSDL3.Mixer.Mixer.Mix_EffectFunc_t,SharpSDL3.Mixer.Mixer.Mix_EffectDone_t,System.IntPtr)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: RegisterEffect(int, Mix_EffectFunc_t, Mix_EffectDone_t, nint)
  nameWithType: Mixer.RegisterEffect(int, Mixer.Mix_EffectFunc_t, Mixer.Mix_EffectDone_t, nint)
  fullName: SharpSDL3.Mixer.Mixer.RegisterEffect(int, SharpSDL3.Mixer.Mixer.Mix_EffectFunc_t, SharpSDL3.Mixer.Mixer.Mix_EffectDone_t, nint)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RegisterEffect
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 594
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  summary: Registers a custom audio effect for a channel or the final mix.
  remarks: The effect callback must be kept alive for the duration of its use.
  example: []
  syntax:
    content: public static void RegisterEffect(int channel, Mixer.Mix_EffectFunc_t effect, Mixer.Mix_EffectDone_t done, nint userData)
    parameters:
    - id: channel
      type: System.Int32
      description: The channel to apply the effect to, or <xref href="SharpSDL3.Mixer.Mixer.MIX_CHANNEL_POST" data-throw-if-not-resolved="false"></xref> for the final mix.
    - id: effect
      type: SharpSDL3.Mixer.Mixer.Mix_EffectFunc_t
      description: The effect callback that processes audio data.
    - id: done
      type: SharpSDL3.Mixer.Mixer.Mix_EffectDone_t
      description: The callback invoked when the effect is unregistered (optional).
    - id: userData
      type: System.IntPtr
      description: User-defined data passed to the callbacks.
    content.vb: Public Shared Sub RegisterEffect(channel As Integer, effect As Mixer.Mix_EffectFunc_t, done As Mixer.Mix_EffectDone_t, userData As IntPtr)
  overload: SharpSDL3.Mixer.Mixer.RegisterEffect*
  exceptions:
  - type: SharpSDL3.SdlException
    commentId: T:SharpSDL3.SdlException
    description: Thrown if the effect cannot be registered.
  nameWithType.vb: Mixer.RegisterEffect(Integer, Mixer.Mix_EffectFunc_t, Mixer.Mix_EffectDone_t, IntPtr)
  fullName.vb: SharpSDL3.Mixer.Mixer.RegisterEffect(Integer, SharpSDL3.Mixer.Mixer.Mix_EffectFunc_t, SharpSDL3.Mixer.Mixer.Mix_EffectDone_t, System.IntPtr)
  name.vb: RegisterEffect(Integer, Mix_EffectFunc_t, Mix_EffectDone_t, IntPtr)
- uid: SharpSDL3.Mixer.Mixer.SetPanning(System.Int32,System.Byte,System.Byte)
  commentId: M:SharpSDL3.Mixer.Mixer.SetPanning(System.Int32,System.Byte,System.Byte)
  id: SetPanning(System.Int32,System.Byte,System.Byte)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: SetPanning(int, byte, byte)
  nameWithType: Mixer.SetPanning(int, byte, byte)
  fullName: SharpSDL3.Mixer.Mixer.SetPanning(int, byte, byte)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetPanning
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 609
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  summary: Sets the stereo panning for a specific channel or the final mix.
  remarks: This has no effect if the audio device is not in stereo mode.
  example: []
  syntax:
    content: public static void SetPanning(int channel, byte left, byte right)
    parameters:
    - id: channel
      type: System.Int32
      description: The channel to apply panning to, or <xref href="SharpSDL3.Mixer.Mixer.MIX_CHANNEL_POST" data-throw-if-not-resolved="false"></xref> for the final mix.
    - id: left
      type: System.Byte
      description: The volume of the left channel (0 to 255, where 0 is silent and 255 is full volume).
    - id: right
      type: System.Byte
      description: The volume of the right channel (0 to 255, where 0 is silent and 255 is full volume).
    content.vb: Public Shared Sub SetPanning(channel As Integer, left As Byte, right As Byte)
  overload: SharpSDL3.Mixer.Mixer.SetPanning*
  exceptions:
  - type: SharpSDL3.SdlException
    commentId: T:SharpSDL3.SdlException
    description: Thrown if panning cannot be set.
  nameWithType.vb: Mixer.SetPanning(Integer, Byte, Byte)
  fullName.vb: SharpSDL3.Mixer.Mixer.SetPanning(Integer, Byte, Byte)
  name.vb: SetPanning(Integer, Byte, Byte)
- uid: SharpSDL3.Mixer.Mixer.Channels
  commentId: F:SharpSDL3.Mixer.Mixer.Channels
  id: Channels
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: Channels
  nameWithType: Mixer.Channels
  fullName: SharpSDL3.Mixer.Mixer.Channels
  type: Field
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: Channels
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 621
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  summary: The default number of mixing channels.
  example: []
  syntax:
    content: public const int Channels = 8
    return:
      type: System.Int32
    content.vb: Public Const Channels As Integer = 8
- uid: SharpSDL3.Mixer.Mixer.DefaultChannels
  commentId: F:SharpSDL3.Mixer.Mixer.DefaultChannels
  id: DefaultChannels
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: DefaultChannels
  nameWithType: Mixer.DefaultChannels
  fullName: SharpSDL3.Mixer.Mixer.DefaultChannels
  type: Field
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: DefaultChannels
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 626
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  summary: The default number of audio channels (stereo).
  example: []
  syntax:
    content: public const int DefaultChannels = 2
    return:
      type: System.Int32
    content.vb: Public Const DefaultChannels As Integer = 2
- uid: SharpSDL3.Mixer.Mixer.DefaultFormat
  commentId: F:SharpSDL3.Mixer.Mixer.DefaultFormat
  id: DefaultFormat
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: DefaultFormat
  nameWithType: Mixer.DefaultFormat
  fullName: SharpSDL3.Mixer.Mixer.DefaultFormat
  type: Field
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: DefaultFormat
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 631
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  summary: The default audio format (16-bit signed).
  example: []
  syntax:
    content: public const AudioFormat DefaultFormat = S16
    return:
      type: SharpSDL3.Enums.AudioFormat
    content.vb: Public Const DefaultFormat As AudioFormat = S16
- uid: SharpSDL3.Mixer.Mixer.DefaultFrequency
  commentId: F:SharpSDL3.Mixer.Mixer.DefaultFrequency
  id: DefaultFrequency
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: DefaultFrequency
  nameWithType: Mixer.DefaultFrequency
  fullName: SharpSDL3.Mixer.Mixer.DefaultFrequency
  type: Field
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: DefaultFrequency
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 636
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  summary: The default audio frequency (44100 Hz).
  example: []
  syntax:
    content: public const int DefaultFrequency = 44100
    return:
      type: System.Int32
    content.vb: Public Const DefaultFrequency As Integer = 44100
- uid: SharpSDL3.Mixer.Mixer.MaxVolume
  commentId: F:SharpSDL3.Mixer.Mixer.MaxVolume
  id: MaxVolume
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: MaxVolume
  nameWithType: Mixer.MaxVolume
  fullName: SharpSDL3.Mixer.Mixer.MaxVolume
  type: Field
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: MaxVolume
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 641
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  summary: The maximum volume for a chunk or channel (128).
  example: []
  syntax:
    content: public const int MaxVolume = 128
    return:
      type: System.Int32
    content.vb: Public Const MaxVolume As Integer = 128
- uid: SharpSDL3.Mixer.Mixer.MIX_CHANNEL_POST
  commentId: F:SharpSDL3.Mixer.Mixer.MIX_CHANNEL_POST
  id: MIX_CHANNEL_POST
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: MIX_CHANNEL_POST
  nameWithType: Mixer.MIX_CHANNEL_POST
  fullName: SharpSDL3.Mixer.Mixer.MIX_CHANNEL_POST
  type: Field
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: MIX_CHANNEL_POST
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 646
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  summary: Special channel value for applying effects to the final mixed stream.
  example: []
  syntax:
    content: public const int MIX_CHANNEL_POST = -2
    return:
      type: System.Int32
    content.vb: Public Const MIX_CHANNEL_POST As Integer = -2
- uid: SharpSDL3.Mixer.Mixer.MIX_MAX_VOLUME
  commentId: F:SharpSDL3.Mixer.Mixer.MIX_MAX_VOLUME
  id: MIX_MAX_VOLUME
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: MIX_MAX_VOLUME
  nameWithType: Mixer.MIX_MAX_VOLUME
  fullName: SharpSDL3.Mixer.Mixer.MIX_MAX_VOLUME
  type: Field
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: MIX_MAX_VOLUME
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 651
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  summary: Alias for <xref href="SharpSDL3.Mixer.Mixer.MaxVolume" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public const int MIX_MAX_VOLUME = 128
    return:
      type: System.Int32
    content.vb: Public Const MIX_MAX_VOLUME As Integer = 128
- uid: SharpSDL3.Mixer.Mixer.ModMusicJumpToOrder(System.Int32)
  commentId: M:SharpSDL3.Mixer.Mixer.ModMusicJumpToOrder(System.Int32)
  id: ModMusicJumpToOrder(System.Int32)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: ModMusicJumpToOrder(int)
  nameWithType: Mixer.ModMusicJumpToOrder(int)
  fullName: SharpSDL3.Mixer.Mixer.ModMusicJumpToOrder(int)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ModMusicJumpToOrder
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 692
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  example: []
  syntax:
    content: public static bool ModMusicJumpToOrder(int order)
    parameters:
    - id: order
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function ModMusicJumpToOrder(order As Integer) As Boolean
  overload: SharpSDL3.Mixer.Mixer.ModMusicJumpToOrder*
  nameWithType.vb: Mixer.ModMusicJumpToOrder(Integer)
  fullName.vb: SharpSDL3.Mixer.Mixer.ModMusicJumpToOrder(Integer)
  name.vb: ModMusicJumpToOrder(Integer)
- uid: SharpSDL3.Mixer.Mixer.MusicDuration(SharpSDL3.Mixer.Music)
  commentId: M:SharpSDL3.Mixer.Mixer.MusicDuration(SharpSDL3.Mixer.Music)
  id: MusicDuration(SharpSDL3.Mixer.Music)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: MusicDuration(Music)
  nameWithType: Mixer.MusicDuration(Music)
  fullName: SharpSDL3.Mixer.Mixer.MusicDuration(SharpSDL3.Mixer.Music)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: MusicDuration
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 698
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static double MusicDuration(Music music)
    parameters:
    - id: music
      type: SharpSDL3.Mixer.Music
    return:
      type: System.Double
    content.vb: Public Shared Function MusicDuration(music As Music) As Double
  overload: SharpSDL3.Mixer.Mixer.MusicDuration*
- uid: SharpSDL3.Mixer.Mixer.MusicDuration(System.IntPtr)
  commentId: M:SharpSDL3.Mixer.Mixer.MusicDuration(System.IntPtr)
  id: MusicDuration(System.IntPtr)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: MusicDuration(nint)
  nameWithType: Mixer.MusicDuration(nint)
  fullName: SharpSDL3.Mixer.Mixer.MusicDuration(nint)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: MusicDuration
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 704
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static double MusicDuration(nint music)
    parameters:
    - id: music
      type: System.IntPtr
    return:
      type: System.Double
    content.vb: Public Shared Function MusicDuration(music As IntPtr) As Double
  overload: SharpSDL3.Mixer.Mixer.MusicDuration*
  nameWithType.vb: Mixer.MusicDuration(IntPtr)
  fullName.vb: SharpSDL3.Mixer.Mixer.MusicDuration(System.IntPtr)
  name.vb: MusicDuration(IntPtr)
- uid: SharpSDL3.Mixer.Mixer.Pause(System.Int32)
  commentId: M:SharpSDL3.Mixer.Mixer.Pause(System.Int32)
  id: Pause(System.Int32)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: Pause(int)
  nameWithType: Mixer.Pause(int)
  fullName: SharpSDL3.Mixer.Mixer.Pause(int)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: Pause
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 710
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static void Pause(int channel)
    parameters:
    - id: channel
      type: System.Int32
    content.vb: Public Shared Sub Pause(channel As Integer)
  overload: SharpSDL3.Mixer.Mixer.Pause*
  nameWithType.vb: Mixer.Pause(Integer)
  fullName.vb: SharpSDL3.Mixer.Mixer.Pause(Integer)
  name.vb: Pause(Integer)
- uid: SharpSDL3.Mixer.Mixer.Paused(System.Int32)
  commentId: M:SharpSDL3.Mixer.Mixer.Paused(System.Int32)
  id: Paused(System.Int32)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: Paused(int)
  nameWithType: Mixer.Paused(int)
  fullName: SharpSDL3.Mixer.Mixer.Paused(int)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: Paused
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 716
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static int Paused(int channel)
    parameters:
    - id: channel
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function Paused(channel As Integer) As Integer
  overload: SharpSDL3.Mixer.Mixer.Paused*
  nameWithType.vb: Mixer.Paused(Integer)
  fullName.vb: SharpSDL3.Mixer.Mixer.Paused(Integer)
  name.vb: Paused(Integer)
- uid: SharpSDL3.Mixer.Mixer.PausedMusic
  commentId: M:SharpSDL3.Mixer.Mixer.PausedMusic
  id: PausedMusic
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: PausedMusic()
  nameWithType: Mixer.PausedMusic()
  fullName: SharpSDL3.Mixer.Mixer.PausedMusic()
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: PausedMusic
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 722
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static bool PausedMusic()
    return:
      type: System.Boolean
    content.vb: Public Shared Function PausedMusic() As Boolean
  overload: SharpSDL3.Mixer.Mixer.PausedMusic*
- uid: SharpSDL3.Mixer.Mixer.PauseGroup(System.Int32)
  commentId: M:SharpSDL3.Mixer.Mixer.PauseGroup(System.Int32)
  id: PauseGroup(System.Int32)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: PauseGroup(int)
  nameWithType: Mixer.PauseGroup(int)
  fullName: SharpSDL3.Mixer.Mixer.PauseGroup(int)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: PauseGroup
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 724
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static void PauseGroup(int tag)
    parameters:
    - id: tag
      type: System.Int32
    content.vb: Public Shared Sub PauseGroup(tag As Integer)
  overload: SharpSDL3.Mixer.Mixer.PauseGroup*
  nameWithType.vb: Mixer.PauseGroup(Integer)
  fullName.vb: SharpSDL3.Mixer.Mixer.PauseGroup(Integer)
  name.vb: PauseGroup(Integer)
- uid: SharpSDL3.Mixer.Mixer.PauseMusic
  commentId: M:SharpSDL3.Mixer.Mixer.PauseMusic
  id: PauseMusic
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: PauseMusic()
  nameWithType: Mixer.PauseMusic()
  fullName: SharpSDL3.Mixer.Mixer.PauseMusic()
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: PauseMusic
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 730
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static void PauseMusic()
    content.vb: Public Shared Sub PauseMusic()
  overload: SharpSDL3.Mixer.Mixer.PauseMusic*
- uid: SharpSDL3.Mixer.Mixer.Playing(System.Int32)
  commentId: M:SharpSDL3.Mixer.Mixer.Playing(System.Int32)
  id: Playing(System.Int32)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: Playing(int)
  nameWithType: Mixer.Playing(int)
  fullName: SharpSDL3.Mixer.Mixer.Playing(int)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: Playing
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 732
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static int Playing(int channel)
    parameters:
    - id: channel
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function Playing(channel As Integer) As Integer
  overload: SharpSDL3.Mixer.Mixer.Playing*
  nameWithType.vb: Mixer.Playing(Integer)
  fullName.vb: SharpSDL3.Mixer.Mixer.Playing(Integer)
  name.vb: Playing(Integer)
- uid: SharpSDL3.Mixer.Mixer.PlayingMusic
  commentId: M:SharpSDL3.Mixer.Mixer.PlayingMusic
  id: PlayingMusic
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: PlayingMusic()
  nameWithType: Mixer.PlayingMusic()
  fullName: SharpSDL3.Mixer.Mixer.PlayingMusic()
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: PlayingMusic
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 738
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static bool PlayingMusic()
    return:
      type: System.Boolean
    content.vb: Public Shared Function PlayingMusic() As Boolean
  overload: SharpSDL3.Mixer.Mixer.PlayingMusic*
- uid: SharpSDL3.Mixer.Mixer.PlayMusic(SharpSDL3.Mixer.Music,System.Int32)
  commentId: M:SharpSDL3.Mixer.Mixer.PlayMusic(SharpSDL3.Mixer.Music,System.Int32)
  id: PlayMusic(SharpSDL3.Mixer.Music,System.Int32)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: PlayMusic(Music, int)
  nameWithType: Mixer.PlayMusic(Music, int)
  fullName: SharpSDL3.Mixer.Mixer.PlayMusic(SharpSDL3.Mixer.Music, int)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: PlayMusic
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 750
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  summary: Plays a music object.
  remarks: Only one music object can play at a time. This halts any currently playing music.
  example: []
  syntax:
    content: public static bool PlayMusic(Music music, int loops)
    parameters:
    - id: music
      type: SharpSDL3.Mixer.Music
      description: The <xref href="SharpSDL3.Mixer.Music" data-throw-if-not-resolved="false"></xref> to play.
    - id: loops
      type: System.Int32
      description: The number of times to loop the music (0 for once, -1 for infinite).
    return:
      type: System.Boolean
    content.vb: Public Shared Function PlayMusic(music As Music, loops As Integer) As Boolean
  overload: SharpSDL3.Mixer.Mixer.PlayMusic*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code class="paramref">music</code> is null.
  - type: SharpSDL3.SdlException
    commentId: T:SharpSDL3.SdlException
    description: Thrown if playback fails.
  nameWithType.vb: Mixer.PlayMusic(Music, Integer)
  fullName.vb: SharpSDL3.Mixer.Mixer.PlayMusic(SharpSDL3.Mixer.Music, Integer)
  name.vb: PlayMusic(Music, Integer)
- uid: SharpSDL3.Mixer.Mixer.PlayMusic(System.IntPtr,System.Int32)
  commentId: M:SharpSDL3.Mixer.Mixer.PlayMusic(System.IntPtr,System.Int32)
  id: PlayMusic(System.IntPtr,System.Int32)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: PlayMusic(nint, int)
  nameWithType: Mixer.PlayMusic(nint, int)
  fullName: SharpSDL3.Mixer.Mixer.PlayMusic(nint, int)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: PlayMusic
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 754
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static bool PlayMusic(nint music, int loops)
    parameters:
    - id: music
      type: System.IntPtr
    - id: loops
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function PlayMusic(music As IntPtr, loops As Integer) As Boolean
  overload: SharpSDL3.Mixer.Mixer.PlayMusic*
  nameWithType.vb: Mixer.PlayMusic(IntPtr, Integer)
  fullName.vb: SharpSDL3.Mixer.Mixer.PlayMusic(System.IntPtr, Integer)
  name.vb: PlayMusic(IntPtr, Integer)
- uid: SharpSDL3.Mixer.Mixer.ReserveChannels(System.Int32)
  commentId: M:SharpSDL3.Mixer.Mixer.ReserveChannels(System.Int32)
  id: ReserveChannels(System.Int32)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: ReserveChannels(int)
  nameWithType: Mixer.ReserveChannels(int)
  fullName: SharpSDL3.Mixer.Mixer.ReserveChannels(int)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ReserveChannels
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 769
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static int ReserveChannels(int num)
    parameters:
    - id: num
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function ReserveChannels(num As Integer) As Integer
  overload: SharpSDL3.Mixer.Mixer.ReserveChannels*
  nameWithType.vb: Mixer.ReserveChannels(Integer)
  fullName.vb: SharpSDL3.Mixer.Mixer.ReserveChannels(Integer)
  name.vb: ReserveChannels(Integer)
- uid: SharpSDL3.Mixer.Mixer.Resume(System.Int32)
  commentId: M:SharpSDL3.Mixer.Mixer.Resume(System.Int32)
  id: Resume(System.Int32)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: Resume(int)
  nameWithType: Mixer.Resume(int)
  fullName: SharpSDL3.Mixer.Mixer.Resume(int)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: Resume
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 775
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static void Resume(int channel)
    parameters:
    - id: channel
      type: System.Int32
    content.vb: Public Shared Sub [Resume](channel As Integer)
  overload: SharpSDL3.Mixer.Mixer.Resume*
  nameWithType.vb: Mixer.Resume(Integer)
  fullName.vb: SharpSDL3.Mixer.Mixer.Resume(Integer)
  name.vb: Resume(Integer)
- uid: SharpSDL3.Mixer.Mixer.ResumeGroup(System.Int32)
  commentId: M:SharpSDL3.Mixer.Mixer.ResumeGroup(System.Int32)
  id: ResumeGroup(System.Int32)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: ResumeGroup(int)
  nameWithType: Mixer.ResumeGroup(int)
  fullName: SharpSDL3.Mixer.Mixer.ResumeGroup(int)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ResumeGroup
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 781
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static void ResumeGroup(int tag)
    parameters:
    - id: tag
      type: System.Int32
    content.vb: Public Shared Sub ResumeGroup(tag As Integer)
  overload: SharpSDL3.Mixer.Mixer.ResumeGroup*
  nameWithType.vb: Mixer.ResumeGroup(Integer)
  fullName.vb: SharpSDL3.Mixer.Mixer.ResumeGroup(Integer)
  name.vb: ResumeGroup(Integer)
- uid: SharpSDL3.Mixer.Mixer.ResumeMusic
  commentId: M:SharpSDL3.Mixer.Mixer.ResumeMusic
  id: ResumeMusic
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: ResumeMusic()
  nameWithType: Mixer.ResumeMusic()
  fullName: SharpSDL3.Mixer.Mixer.ResumeMusic()
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ResumeMusic
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 787
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static void ResumeMusic()
    content.vb: Public Shared Sub ResumeMusic()
  overload: SharpSDL3.Mixer.Mixer.ResumeMusic*
- uid: SharpSDL3.Mixer.Mixer.RewindMusic
  commentId: M:SharpSDL3.Mixer.Mixer.RewindMusic
  id: RewindMusic
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: RewindMusic()
  nameWithType: Mixer.RewindMusic()
  fullName: SharpSDL3.Mixer.Mixer.RewindMusic()
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RewindMusic
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 789
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static void RewindMusic()
    content.vb: Public Shared Sub RewindMusic()
  overload: SharpSDL3.Mixer.Mixer.RewindMusic*
- uid: SharpSDL3.Mixer.Mixer.SetDistance(System.Int32,System.Byte)
  commentId: M:SharpSDL3.Mixer.Mixer.SetDistance(System.Int32,System.Byte)
  id: SetDistance(System.Int32,System.Byte)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: SetDistance(int, byte)
  nameWithType: Mixer.SetDistance(int, byte)
  fullName: SharpSDL3.Mixer.Mixer.SetDistance(int, byte)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetDistance
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 791
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static bool SetDistance(int channel, byte distance)
    parameters:
    - id: channel
      type: System.Int32
    - id: distance
      type: System.Byte
    return:
      type: System.Boolean
    content.vb: Public Shared Function SetDistance(channel As Integer, distance As Byte) As Boolean
  overload: SharpSDL3.Mixer.Mixer.SetDistance*
  nameWithType.vb: Mixer.SetDistance(Integer, Byte)
  fullName.vb: SharpSDL3.Mixer.Mixer.SetDistance(Integer, Byte)
  name.vb: SetDistance(Integer, Byte)
- uid: SharpSDL3.Mixer.Mixer.SetMusicPosition(System.Double)
  commentId: M:SharpSDL3.Mixer.Mixer.SetMusicPosition(System.Double)
  id: SetMusicPosition(System.Double)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: SetMusicPosition(double)
  nameWithType: Mixer.SetMusicPosition(double)
  fullName: SharpSDL3.Mixer.Mixer.SetMusicPosition(double)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetMusicPosition
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 799
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static bool SetMusicPosition(double position)
    parameters:
    - id: position
      type: System.Double
    return:
      type: System.Boolean
    content.vb: Public Shared Function SetMusicPosition(position As Double) As Boolean
  overload: SharpSDL3.Mixer.Mixer.SetMusicPosition*
  nameWithType.vb: Mixer.SetMusicPosition(Double)
  fullName.vb: SharpSDL3.Mixer.Mixer.SetMusicPosition(Double)
  name.vb: SetMusicPosition(Double)
- uid: SharpSDL3.Mixer.Mixer.SetPosition(System.Int32,System.Int16,System.Byte)
  commentId: M:SharpSDL3.Mixer.Mixer.SetPosition(System.Int32,System.Int16,System.Byte)
  id: SetPosition(System.Int32,System.Int16,System.Byte)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: SetPosition(int, short, byte)
  nameWithType: Mixer.SetPosition(int, short, byte)
  fullName: SharpSDL3.Mixer.Mixer.SetPosition(int, short, byte)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetPosition
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 805
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static bool SetPosition(int channel, short angle, byte distance)
    parameters:
    - id: channel
      type: System.Int32
    - id: angle
      type: System.Int16
    - id: distance
      type: System.Byte
    return:
      type: System.Boolean
    content.vb: Public Shared Function SetPosition(channel As Integer, angle As Short, distance As Byte) As Boolean
  overload: SharpSDL3.Mixer.Mixer.SetPosition*
  nameWithType.vb: Mixer.SetPosition(Integer, Short, Byte)
  fullName.vb: SharpSDL3.Mixer.Mixer.SetPosition(Integer, Short, Byte)
  name.vb: SetPosition(Integer, Short, Byte)
- uid: SharpSDL3.Mixer.Mixer.SetPostMix(SharpSDL3.Mixer.Mixer.Mix_MixCallback,System.IntPtr)
  commentId: M:SharpSDL3.Mixer.Mixer.SetPostMix(SharpSDL3.Mixer.Mixer.Mix_MixCallback,System.IntPtr)
  id: SetPostMix(SharpSDL3.Mixer.Mixer.Mix_MixCallback,System.IntPtr)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: SetPostMix(Mix_MixCallback, nint)
  nameWithType: Mixer.SetPostMix(Mixer.Mix_MixCallback, nint)
  fullName: SharpSDL3.Mixer.Mixer.SetPostMix(SharpSDL3.Mixer.Mixer.Mix_MixCallback, nint)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetPostMix
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 815
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static void SetPostMix(Mixer.Mix_MixCallback mix_func, nint arg)
    parameters:
    - id: mix_func
      type: SharpSDL3.Mixer.Mixer.Mix_MixCallback
    - id: arg
      type: System.IntPtr
    content.vb: Public Shared Sub SetPostMix(mix_func As Mixer.Mix_MixCallback, arg As IntPtr)
  overload: SharpSDL3.Mixer.Mixer.SetPostMix*
  nameWithType.vb: Mixer.SetPostMix(Mixer.Mix_MixCallback, IntPtr)
  fullName.vb: SharpSDL3.Mixer.Mixer.SetPostMix(SharpSDL3.Mixer.Mixer.Mix_MixCallback, System.IntPtr)
  name.vb: SetPostMix(Mix_MixCallback, IntPtr)
- uid: SharpSDL3.Mixer.Mixer.SetReverseStereo(System.Int32,System.Int32)
  commentId: M:SharpSDL3.Mixer.Mixer.SetReverseStereo(System.Int32,System.Int32)
  id: SetReverseStereo(System.Int32,System.Int32)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: SetReverseStereo(int, int)
  nameWithType: Mixer.SetReverseStereo(int, int)
  fullName: SharpSDL3.Mixer.Mixer.SetReverseStereo(int, int)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetReverseStereo
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 821
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static bool SetReverseStereo(int channel, int flip)
    parameters:
    - id: channel
      type: System.Int32
    - id: flip
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function SetReverseStereo(channel As Integer, flip As Integer) As Boolean
  overload: SharpSDL3.Mixer.Mixer.SetReverseStereo*
  nameWithType.vb: Mixer.SetReverseStereo(Integer, Integer)
  fullName.vb: SharpSDL3.Mixer.Mixer.SetReverseStereo(Integer, Integer)
  name.vb: SetReverseStereo(Integer, Integer)
- uid: SharpSDL3.Mixer.Mixer.SetSoundFonts(System.String)
  commentId: M:SharpSDL3.Mixer.Mixer.SetSoundFonts(System.String)
  id: SetSoundFonts(System.String)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: SetSoundFonts(string)
  nameWithType: Mixer.SetSoundFonts(string)
  fullName: SharpSDL3.Mixer.Mixer.SetSoundFonts(string)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetSoundFonts
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 829
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static bool SetSoundFonts(string paths)
    parameters:
    - id: paths
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function SetSoundFonts(paths As String) As Boolean
  overload: SharpSDL3.Mixer.Mixer.SetSoundFonts*
  nameWithType.vb: Mixer.SetSoundFonts(String)
  fullName.vb: SharpSDL3.Mixer.Mixer.SetSoundFonts(String)
  name.vb: SetSoundFonts(String)
- uid: SharpSDL3.Mixer.Mixer.SetTimidityCfg(System.String)
  commentId: M:SharpSDL3.Mixer.Mixer.SetTimidityCfg(System.String)
  id: SetTimidityCfg(System.String)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: SetTimidityCfg(string)
  nameWithType: Mixer.SetTimidityCfg(string)
  fullName: SharpSDL3.Mixer.Mixer.SetTimidityCfg(string)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetTimidityCfg
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 835
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static bool SetTimidityCfg(string path)
    parameters:
    - id: path
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function SetTimidityCfg(path As String) As Boolean
  overload: SharpSDL3.Mixer.Mixer.SetTimidityCfg*
  nameWithType.vb: Mixer.SetTimidityCfg(String)
  fullName.vb: SharpSDL3.Mixer.Mixer.SetTimidityCfg(String)
  name.vb: SetTimidityCfg(String)
- uid: SharpSDL3.Mixer.Mixer.StartTrack(SharpSDL3.Mixer.Music,System.Int32)
  commentId: M:SharpSDL3.Mixer.Mixer.StartTrack(SharpSDL3.Mixer.Music,System.Int32)
  id: StartTrack(SharpSDL3.Mixer.Music,System.Int32)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: StartTrack(Music, int)
  nameWithType: Mixer.StartTrack(Music, int)
  fullName: SharpSDL3.Mixer.Mixer.StartTrack(SharpSDL3.Mixer.Music, int)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: StartTrack
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 841
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static bool StartTrack(Music music, int track)
    parameters:
    - id: music
      type: SharpSDL3.Mixer.Music
    - id: track
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function StartTrack(music As Music, track As Integer) As Boolean
  overload: SharpSDL3.Mixer.Mixer.StartTrack*
  nameWithType.vb: Mixer.StartTrack(Music, Integer)
  fullName.vb: SharpSDL3.Mixer.Mixer.StartTrack(SharpSDL3.Mixer.Music, Integer)
  name.vb: StartTrack(Music, Integer)
- uid: SharpSDL3.Mixer.Mixer.UnregisterAllEffects(System.Int32)
  commentId: M:SharpSDL3.Mixer.Mixer.UnregisterAllEffects(System.Int32)
  id: UnregisterAllEffects(System.Int32)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: UnregisterAllEffects(int)
  nameWithType: Mixer.UnregisterAllEffects(int)
  fullName: SharpSDL3.Mixer.Mixer.UnregisterAllEffects(int)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: UnregisterAllEffects
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 849
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static bool UnregisterAllEffects(int channel)
    parameters:
    - id: channel
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function UnregisterAllEffects(channel As Integer) As Boolean
  overload: SharpSDL3.Mixer.Mixer.UnregisterAllEffects*
  nameWithType.vb: Mixer.UnregisterAllEffects(Integer)
  fullName.vb: SharpSDL3.Mixer.Mixer.UnregisterAllEffects(Integer)
  name.vb: UnregisterAllEffects(Integer)
- uid: SharpSDL3.Mixer.Mixer.UnregisterEffect(System.Int32,SharpSDL3.Mixer.Mixer.Mix_EffectFunc_t)
  commentId: M:SharpSDL3.Mixer.Mixer.UnregisterEffect(System.Int32,SharpSDL3.Mixer.Mixer.Mix_EffectFunc_t)
  id: UnregisterEffect(System.Int32,SharpSDL3.Mixer.Mixer.Mix_EffectFunc_t)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: UnregisterEffect(int, Mix_EffectFunc_t)
  nameWithType: Mixer.UnregisterEffect(int, Mixer.Mix_EffectFunc_t)
  fullName: SharpSDL3.Mixer.Mixer.UnregisterEffect(int, SharpSDL3.Mixer.Mixer.Mix_EffectFunc_t)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: UnregisterEffect
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 855
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static bool UnregisterEffect(int channel, Mixer.Mix_EffectFunc_t f)
    parameters:
    - id: channel
      type: System.Int32
    - id: f
      type: SharpSDL3.Mixer.Mixer.Mix_EffectFunc_t
    return:
      type: System.Boolean
    content.vb: Public Shared Function UnregisterEffect(channel As Integer, f As Mixer.Mix_EffectFunc_t) As Boolean
  overload: SharpSDL3.Mixer.Mixer.UnregisterEffect*
  nameWithType.vb: Mixer.UnregisterEffect(Integer, Mixer.Mix_EffectFunc_t)
  fullName.vb: SharpSDL3.Mixer.Mixer.UnregisterEffect(Integer, SharpSDL3.Mixer.Mixer.Mix_EffectFunc_t)
  name.vb: UnregisterEffect(Integer, Mix_EffectFunc_t)
- uid: SharpSDL3.Mixer.Mixer.Volume(System.Int32,System.Int32)
  commentId: M:SharpSDL3.Mixer.Mixer.Volume(System.Int32,System.Int32)
  id: Volume(System.Int32,System.Int32)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: Volume(int, int)
  nameWithType: Mixer.Volume(int, int)
  fullName: SharpSDL3.Mixer.Mixer.Volume(int, int)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: Volume
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 863
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static int Volume(int channel, int volume)
    parameters:
    - id: channel
      type: System.Int32
    - id: volume
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function Volume(channel As Integer, volume As Integer) As Integer
  overload: SharpSDL3.Mixer.Mixer.Volume*
  nameWithType.vb: Mixer.Volume(Integer, Integer)
  fullName.vb: SharpSDL3.Mixer.Mixer.Volume(Integer, Integer)
  name.vb: Volume(Integer, Integer)
- uid: SharpSDL3.Mixer.Mixer.VolumeChunk(SharpSDL3.Mixer.Chunk,System.Int32)
  commentId: M:SharpSDL3.Mixer.Mixer.VolumeChunk(SharpSDL3.Mixer.Chunk,System.Int32)
  id: VolumeChunk(SharpSDL3.Mixer.Chunk,System.Int32)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: VolumeChunk(Chunk, int)
  nameWithType: Mixer.VolumeChunk(Chunk, int)
  fullName: SharpSDL3.Mixer.Mixer.VolumeChunk(SharpSDL3.Mixer.Chunk, int)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: VolumeChunk
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 871
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static int VolumeChunk(Chunk chunk, int volume)
    parameters:
    - id: chunk
      type: SharpSDL3.Mixer.Chunk
    - id: volume
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function VolumeChunk(chunk As Chunk, volume As Integer) As Integer
  overload: SharpSDL3.Mixer.Mixer.VolumeChunk*
  nameWithType.vb: Mixer.VolumeChunk(Chunk, Integer)
  fullName.vb: SharpSDL3.Mixer.Mixer.VolumeChunk(SharpSDL3.Mixer.Chunk, Integer)
  name.vb: VolumeChunk(Chunk, Integer)
- uid: SharpSDL3.Mixer.Mixer.VolumeChunk(System.IntPtr,System.Int32)
  commentId: M:SharpSDL3.Mixer.Mixer.VolumeChunk(System.IntPtr,System.Int32)
  id: VolumeChunk(System.IntPtr,System.Int32)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: VolumeChunk(nint, int)
  nameWithType: Mixer.VolumeChunk(nint, int)
  fullName: SharpSDL3.Mixer.Mixer.VolumeChunk(nint, int)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: VolumeChunk
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 875
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static int VolumeChunk(nint chunk, int volume)
    parameters:
    - id: chunk
      type: System.IntPtr
    - id: volume
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function VolumeChunk(chunk As IntPtr, volume As Integer) As Integer
  overload: SharpSDL3.Mixer.Mixer.VolumeChunk*
  nameWithType.vb: Mixer.VolumeChunk(IntPtr, Integer)
  fullName.vb: SharpSDL3.Mixer.Mixer.VolumeChunk(System.IntPtr, Integer)
  name.vb: VolumeChunk(IntPtr, Integer)
- uid: SharpSDL3.Mixer.Mixer.VolumeMusic(System.Int32)
  commentId: M:SharpSDL3.Mixer.Mixer.VolumeMusic(System.Int32)
  id: VolumeMusic(System.Int32)
  parent: SharpSDL3.Mixer.Mixer
  langs:
  - csharp
  - vb
  name: VolumeMusic(int)
  nameWithType: Mixer.VolumeMusic(int)
  fullName: SharpSDL3.Mixer.Mixer.VolumeMusic(int)
  type: Method
  source:
    remote:
      path: SDL3/Mixer/Mixer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: VolumeMusic
    path: ../../repos/SDL3-CS/SDL3/Mixer/Mixer.cs
    startLine: 883
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3.Mixer
  syntax:
    content: public static int VolumeMusic(int volume)
    parameters:
    - id: volume
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function VolumeMusic(volume As Integer) As Integer
  overload: SharpSDL3.Mixer.Mixer.VolumeMusic*
  nameWithType.vb: Mixer.VolumeMusic(Integer)
  fullName.vb: SharpSDL3.Mixer.Mixer.VolumeMusic(Integer)
  name.vb: VolumeMusic(Integer)
references:
- uid: SharpSDL3.Mixer
  commentId: N:SharpSDL3.Mixer
  href: SharpSDL3.html
  name: SharpSDL3.Mixer
  nameWithType: SharpSDL3.Mixer
  fullName: SharpSDL3.Mixer
  spec.csharp:
  - uid: SharpSDL3
    name: SharpSDL3
    href: SharpSDL3.html
  - name: .
  - uid: SharpSDL3.Mixer
    name: Mixer
    href: SharpSDL3.Mixer.html
  spec.vb:
  - uid: SharpSDL3
    name: SharpSDL3
    href: SharpSDL3.html
  - name: .
  - uid: SharpSDL3.Mixer
    name: Mixer
    href: SharpSDL3.Mixer.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: SharpSDL3.Mixer.Mixer.ChannelFinished*
  commentId: Overload:SharpSDL3.Mixer.Mixer.ChannelFinished
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_ChannelFinished_SharpSDL3_Mixer_Mixer_Mix_ChannelFinishedCallback_
  name: ChannelFinished
  nameWithType: Mixer.ChannelFinished
  fullName: SharpSDL3.Mixer.Mixer.ChannelFinished
- uid: SharpSDL3.Mixer.Mixer.Mix_ChannelFinishedCallback
  commentId: T:SharpSDL3.Mixer.Mixer.Mix_ChannelFinishedCallback
  parent: SharpSDL3.Mixer
  href: SharpSDL3.Mixer.Mixer.html
  name: Mixer.Mix_ChannelFinishedCallback
  nameWithType: Mixer.Mix_ChannelFinishedCallback
  fullName: SharpSDL3.Mixer.Mixer.Mix_ChannelFinishedCallback
  spec.csharp:
  - uid: SharpSDL3.Mixer.Mixer
    name: Mixer
    href: SharpSDL3.Mixer.Mixer.html
  - name: .
  - uid: SharpSDL3.Mixer.Mixer.Mix_ChannelFinishedCallback
    name: Mix_ChannelFinishedCallback
    href: SharpSDL3.Mixer.Mixer.Mix_ChannelFinishedCallback.html
  spec.vb:
  - uid: SharpSDL3.Mixer.Mixer
    name: Mixer
    href: SharpSDL3.Mixer.Mixer.html
  - name: .
  - uid: SharpSDL3.Mixer.Mixer.Mix_ChannelFinishedCallback
    name: Mix_ChannelFinishedCallback
    href: SharpSDL3.Mixer.Mixer.Mix_ChannelFinishedCallback.html
- uid: SharpSDL3.Mixer.Mixer.EffectDone*
  commentId: Overload:SharpSDL3.Mixer.Mixer.EffectDone
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_EffectDone_System_Int32_System_IntPtr_
  name: EffectDone
  nameWithType: Mixer.EffectDone
  fullName: SharpSDL3.Mixer.Mixer.EffectDone
- uid: System.IntPtr
  commentId: T:System.IntPtr
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.intptr
  name: nint
  nameWithType: nint
  fullName: nint
  nameWithType.vb: IntPtr
  fullName.vb: System.IntPtr
  name.vb: IntPtr
- uid: SharpSDL3.Mixer.Mixer.ExpireChannel*
  commentId: Overload:SharpSDL3.Mixer.Mixer.ExpireChannel
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_ExpireChannel_System_Int32_System_Int32_
  name: ExpireChannel
  nameWithType: Mixer.ExpireChannel
  fullName: SharpSDL3.Mixer.Mixer.ExpireChannel
- uid: SharpSDL3.Mixer.Mixer.FadeInChannel*
  commentId: Overload:SharpSDL3.Mixer.Mixer.FadeInChannel
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_FadeInChannel_System_Int32_SharpSDL3_Mixer_Chunk_System_Int32_System_Int32_
  name: FadeInChannel
  nameWithType: Mixer.FadeInChannel
  fullName: SharpSDL3.Mixer.Mixer.FadeInChannel
- uid: SharpSDL3.Mixer.Chunk
  commentId: T:SharpSDL3.Mixer.Chunk
  parent: SharpSDL3.Mixer
  href: SharpSDL3.Mixer.Chunk.html
  name: Chunk
  nameWithType: Chunk
  fullName: SharpSDL3.Mixer.Chunk
- uid: SharpSDL3.Mixer.Mixer.FadeInChannelTimed*
  commentId: Overload:SharpSDL3.Mixer.Mixer.FadeInChannelTimed
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_FadeInChannelTimed_System_Int32_SharpSDL3_Mixer_Chunk_System_Int32_System_Int32_System_Int32_
  name: FadeInChannelTimed
  nameWithType: Mixer.FadeInChannelTimed
  fullName: SharpSDL3.Mixer.Mixer.FadeInChannelTimed
- uid: SharpSDL3.Mixer.Mixer.FadeInMusic*
  commentId: Overload:SharpSDL3.Mixer.Mixer.FadeInMusic
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_FadeInMusic_SharpSDL3_Mixer_Music_System_Int32_System_Int32_
  name: FadeInMusic
  nameWithType: Mixer.FadeInMusic
  fullName: SharpSDL3.Mixer.Mixer.FadeInMusic
- uid: SharpSDL3.Mixer.Music
  commentId: T:SharpSDL3.Mixer.Music
  parent: SharpSDL3.Mixer
  href: SharpSDL3.Mixer.Music.html
  name: Music
  nameWithType: Music
  fullName: SharpSDL3.Mixer.Music
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SharpSDL3.Mixer.Mixer.FadeInMusicPos*
  commentId: Overload:SharpSDL3.Mixer.Mixer.FadeInMusicPos
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_FadeInMusicPos_SharpSDL3_Mixer_Music_System_Int32_System_Int32_System_Double_
  name: FadeInMusicPos
  nameWithType: Mixer.FadeInMusicPos
  fullName: SharpSDL3.Mixer.Mixer.FadeInMusicPos
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: SharpSDL3.Mixer.Mixer.FadeOutChannel*
  commentId: Overload:SharpSDL3.Mixer.Mixer.FadeOutChannel
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_FadeOutChannel_System_Int32_System_Int32_
  name: FadeOutChannel
  nameWithType: Mixer.FadeOutChannel
  fullName: SharpSDL3.Mixer.Mixer.FadeOutChannel
- uid: SharpSDL3.Mixer.Mixer.FadeOutGroup*
  commentId: Overload:SharpSDL3.Mixer.Mixer.FadeOutGroup
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_FadeOutGroup_System_Int32_System_Int32_
  name: FadeOutGroup
  nameWithType: Mixer.FadeOutGroup
  fullName: SharpSDL3.Mixer.Mixer.FadeOutGroup
- uid: SharpSDL3.Mixer.Mixer.FadeOutMusic*
  commentId: Overload:SharpSDL3.Mixer.Mixer.FadeOutMusic
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_FadeOutMusic_System_Int32_
  name: FadeOutMusic
  nameWithType: Mixer.FadeOutMusic
  fullName: SharpSDL3.Mixer.Mixer.FadeOutMusic
- uid: SharpSDL3.Mixer.Mixer.FadingChannel*
  commentId: Overload:SharpSDL3.Mixer.Mixer.FadingChannel
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_FadingChannel_System_Int32_
  name: FadingChannel
  nameWithType: Mixer.FadingChannel
  fullName: SharpSDL3.Mixer.Mixer.FadingChannel
- uid: SharpSDL3.Mixer.Fading
  commentId: T:SharpSDL3.Mixer.Fading
  parent: SharpSDL3.Mixer
  href: SharpSDL3.Mixer.Fading.html
  name: Fading
  nameWithType: Fading
  fullName: SharpSDL3.Mixer.Fading
- uid: SharpSDL3.Mixer.Mixer.FadingMusic*
  commentId: Overload:SharpSDL3.Mixer.Mixer.FadingMusic
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_FadingMusic
  name: FadingMusic
  nameWithType: Mixer.FadingMusic
  fullName: SharpSDL3.Mixer.Mixer.FadingMusic
- uid: SharpSDL3.Mixer.Mixer.GetChunk*
  commentId: Overload:SharpSDL3.Mixer.Mixer.GetChunk
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_GetChunk_System_Int32_
  name: GetChunk
  nameWithType: Mixer.GetChunk
  fullName: SharpSDL3.Mixer.Mixer.GetChunk
- uid: SharpSDL3.Mixer.Mixer.GetMusicHookData*
  commentId: Overload:SharpSDL3.Mixer.Mixer.GetMusicHookData
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_GetMusicHookData
  name: GetMusicHookData
  nameWithType: Mixer.GetMusicHookData
  fullName: SharpSDL3.Mixer.Mixer.GetMusicHookData
- uid: SharpSDL3.Mixer.Mixer.GetMusicLoopEndTime*
  commentId: Overload:SharpSDL3.Mixer.Mixer.GetMusicLoopEndTime
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_GetMusicLoopEndTime_SharpSDL3_Mixer_Music_
  name: GetMusicLoopEndTime
  nameWithType: Mixer.GetMusicLoopEndTime
  fullName: SharpSDL3.Mixer.Mixer.GetMusicLoopEndTime
- uid: SharpSDL3.Mixer.Mixer.GetMusicLoopLengthTime*
  commentId: Overload:SharpSDL3.Mixer.Mixer.GetMusicLoopLengthTime
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_GetMusicLoopLengthTime_SharpSDL3_Mixer_Music_
  name: GetMusicLoopLengthTime
  nameWithType: Mixer.GetMusicLoopLengthTime
  fullName: SharpSDL3.Mixer.Mixer.GetMusicLoopLengthTime
- uid: SharpSDL3.Mixer.Mixer.GetMusicLoopStartTime*
  commentId: Overload:SharpSDL3.Mixer.Mixer.GetMusicLoopStartTime
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_GetMusicLoopStartTime_SharpSDL3_Mixer_Music_
  name: GetMusicLoopStartTime
  nameWithType: Mixer.GetMusicLoopStartTime
  fullName: SharpSDL3.Mixer.Mixer.GetMusicLoopStartTime
- uid: SharpSDL3.Mixer.Mixer.GetMusicPosition*
  commentId: Overload:SharpSDL3.Mixer.Mixer.GetMusicPosition
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_GetMusicPosition_SharpSDL3_Mixer_Music_
  name: GetMusicPosition
  nameWithType: Mixer.GetMusicPosition
  fullName: SharpSDL3.Mixer.Mixer.GetMusicPosition
- uid: SharpSDL3.Mixer.Mixer.GetMusicVolume*
  commentId: Overload:SharpSDL3.Mixer.Mixer.GetMusicVolume
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_GetMusicVolume_SharpSDL3_Mixer_Music_
  name: GetMusicVolume
  nameWithType: Mixer.GetMusicVolume
  fullName: SharpSDL3.Mixer.Mixer.GetMusicVolume
- uid: SharpSDL3.Mixer.Mixer.GetNumTracks*
  commentId: Overload:SharpSDL3.Mixer.Mixer.GetNumTracks
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_GetNumTracks_SharpSDL3_Mixer_Music_
  name: GetNumTracks
  nameWithType: Mixer.GetNumTracks
  fullName: SharpSDL3.Mixer.Mixer.GetNumTracks
- uid: SharpSDL3.Mixer.Mixer.GetSoundFonts*
  commentId: Overload:SharpSDL3.Mixer.Mixer.GetSoundFonts
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_GetSoundFonts
  name: GetSoundFonts
  nameWithType: Mixer.GetSoundFonts
  fullName: SharpSDL3.Mixer.Mixer.GetSoundFonts
- uid: SharpSDL3.Mixer.Mixer.GetTimidityCfg*
  commentId: Overload:SharpSDL3.Mixer.Mixer.GetTimidityCfg
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_GetTimidityCfg
  name: GetTimidityCfg
  nameWithType: Mixer.GetTimidityCfg
  fullName: SharpSDL3.Mixer.Mixer.GetTimidityCfg
- uid: SharpSDL3.Mixer.Mixer.GroupAvailable*
  commentId: Overload:SharpSDL3.Mixer.Mixer.GroupAvailable
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_GroupAvailable_System_Int32_
  name: GroupAvailable
  nameWithType: Mixer.GroupAvailable
  fullName: SharpSDL3.Mixer.Mixer.GroupAvailable
- uid: SharpSDL3.Mixer.Mixer.GroupChannel*
  commentId: Overload:SharpSDL3.Mixer.Mixer.GroupChannel
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_GroupChannel_System_Int32_System_Int32_
  name: GroupChannel
  nameWithType: Mixer.GroupChannel
  fullName: SharpSDL3.Mixer.Mixer.GroupChannel
- uid: SharpSDL3.Mixer.Mixer.GroupChannels*
  commentId: Overload:SharpSDL3.Mixer.Mixer.GroupChannels
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_GroupChannels_System_Int32_System_Int32_System_Int32_
  name: GroupChannels
  nameWithType: Mixer.GroupChannels
  fullName: SharpSDL3.Mixer.Mixer.GroupChannels
- uid: SharpSDL3.Mixer.Mixer.GroupCount*
  commentId: Overload:SharpSDL3.Mixer.Mixer.GroupCount
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_GroupCount_System_Int32_
  name: GroupCount
  nameWithType: Mixer.GroupCount
  fullName: SharpSDL3.Mixer.Mixer.GroupCount
- uid: SharpSDL3.Mixer.Mixer.GroupNewer*
  commentId: Overload:SharpSDL3.Mixer.Mixer.GroupNewer
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_GroupNewer_System_Int32_
  name: GroupNewer
  nameWithType: Mixer.GroupNewer
  fullName: SharpSDL3.Mixer.Mixer.GroupNewer
- uid: SharpSDL3.Mixer.Mixer.GroupOldest*
  commentId: Overload:SharpSDL3.Mixer.Mixer.GroupOldest
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_GroupOldest_System_Int32_
  name: GroupOldest
  nameWithType: Mixer.GroupOldest
  fullName: SharpSDL3.Mixer.Mixer.GroupOldest
- uid: SharpSDL3.Mixer.Mixer.HaltChannel*
  commentId: Overload:SharpSDL3.Mixer.Mixer.HaltChannel
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_HaltChannel_System_Int32_
  name: HaltChannel
  nameWithType: Mixer.HaltChannel
  fullName: SharpSDL3.Mixer.Mixer.HaltChannel
- uid: SharpSDL3.Mixer.Mixer.HaltGroup*
  commentId: Overload:SharpSDL3.Mixer.Mixer.HaltGroup
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_HaltGroup_System_Int32_
  name: HaltGroup
  nameWithType: Mixer.HaltGroup
  fullName: SharpSDL3.Mixer.Mixer.HaltGroup
- uid: SharpSDL3.Mixer.Mixer.HaltMusic*
  commentId: Overload:SharpSDL3.Mixer.Mixer.HaltMusic
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_HaltMusic
  name: HaltMusic
  nameWithType: Mixer.HaltMusic
  fullName: SharpSDL3.Mixer.Mixer.HaltMusic
- uid: SharpSDL3.Mixer.Mixer.HookMusic*
  commentId: Overload:SharpSDL3.Mixer.Mixer.HookMusic
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_HookMusic_SharpSDL3_Mixer_Mixer_Mix_MixCallback_System_IntPtr_
  name: HookMusic
  nameWithType: Mixer.HookMusic
  fullName: SharpSDL3.Mixer.Mixer.HookMusic
- uid: SharpSDL3.Mixer.Mixer.Mix_MixCallback
  commentId: T:SharpSDL3.Mixer.Mixer.Mix_MixCallback
  parent: SharpSDL3.Mixer
  href: SharpSDL3.Mixer.Mixer.html
  name: Mixer.Mix_MixCallback
  nameWithType: Mixer.Mix_MixCallback
  fullName: SharpSDL3.Mixer.Mixer.Mix_MixCallback
  spec.csharp:
  - uid: SharpSDL3.Mixer.Mixer
    name: Mixer
    href: SharpSDL3.Mixer.Mixer.html
  - name: .
  - uid: SharpSDL3.Mixer.Mixer.Mix_MixCallback
    name: Mix_MixCallback
    href: SharpSDL3.Mixer.Mixer.Mix_MixCallback.html
  spec.vb:
  - uid: SharpSDL3.Mixer.Mixer
    name: Mixer
    href: SharpSDL3.Mixer.Mixer.html
  - name: .
  - uid: SharpSDL3.Mixer.Mixer.Mix_MixCallback
    name: Mix_MixCallback
    href: SharpSDL3.Mixer.Mixer.Mix_MixCallback.html
- uid: SharpSDL3.Mixer.Mixer.HookMusicFinished*
  commentId: Overload:SharpSDL3.Mixer.Mixer.HookMusicFinished
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_HookMusicFinished_SharpSDL3_Mixer_Mixer_MusicFinishedCallback_
  name: HookMusicFinished
  nameWithType: Mixer.HookMusicFinished
  fullName: SharpSDL3.Mixer.Mixer.HookMusicFinished
- uid: SharpSDL3.Mixer.Mixer.MusicFinishedCallback
  commentId: T:SharpSDL3.Mixer.Mixer.MusicFinishedCallback
  parent: SharpSDL3.Mixer
  href: SharpSDL3.Mixer.Mixer.html
  name: Mixer.MusicFinishedCallback
  nameWithType: Mixer.MusicFinishedCallback
  fullName: SharpSDL3.Mixer.Mixer.MusicFinishedCallback
  spec.csharp:
  - uid: SharpSDL3.Mixer.Mixer
    name: Mixer
    href: SharpSDL3.Mixer.Mixer.html
  - name: .
  - uid: SharpSDL3.Mixer.Mixer.MusicFinishedCallback
    name: MusicFinishedCallback
    href: SharpSDL3.Mixer.Mixer.MusicFinishedCallback.html
  spec.vb:
  - uid: SharpSDL3.Mixer.Mixer
    name: Mixer
    href: SharpSDL3.Mixer.Mixer.html
  - name: .
  - uid: SharpSDL3.Mixer.Mixer.MusicFinishedCallback
    name: MusicFinishedCallback
    href: SharpSDL3.Mixer.Mixer.MusicFinishedCallback.html
- uid: SharpSDL3.Mixer.Mixer.MasterVolume*
  commentId: Overload:SharpSDL3.Mixer.Mixer.MasterVolume
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_MasterVolume_System_Int32_
  name: MasterVolume
  nameWithType: Mixer.MasterVolume
  fullName: SharpSDL3.Mixer.Mixer.MasterVolume
- uid: SharpSDL3.Mixer.Mixer.MixerVersion*
  commentId: Overload:SharpSDL3.Mixer.Mixer.MixerVersion
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_MixerVersion
  name: MixerVersion
  nameWithType: Mixer.MixerVersion
  fullName: SharpSDL3.Mixer.Mixer.MixerVersion
- uid: SharpSDL3.Mixer.Mixer.MixerVersionAtLeast*
  commentId: Overload:SharpSDL3.Mixer.Mixer.MixerVersionAtLeast
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_MixerVersionAtLeast_System_Int32_System_Int32_System_Int32_
  name: MixerVersionAtLeast
  nameWithType: Mixer.MixerVersionAtLeast
  fullName: SharpSDL3.Mixer.Mixer.MixerVersionAtLeast
- uid: SharpSDL3.Mixer.Mixer.CloseAudio*
  commentId: Overload:SharpSDL3.Mixer.Mixer.CloseAudio
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_CloseAudio
  name: CloseAudio
  nameWithType: Mixer.CloseAudio
  fullName: SharpSDL3.Mixer.Mixer.CloseAudio
- uid: SharpSDL3.Mixer.Mixer.Quit
  commentId: M:SharpSDL3.Mixer.Mixer.Quit
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_Quit
  name: Quit()
  nameWithType: Mixer.Quit()
  fullName: SharpSDL3.Mixer.Mixer.Quit()
  spec.csharp:
  - uid: SharpSDL3.Mixer.Mixer.Quit
    name: Quit
    href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_Quit
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Mixer.Mixer.Quit
    name: Quit
    href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_Quit
  - name: (
  - name: )
- uid: SharpSDL3.SdlException
  commentId: T:SharpSDL3.SdlException
  href: SharpSDL3.SdlException.html
  name: SdlException
  nameWithType: SdlException
  fullName: SharpSDL3.SdlException
- uid: SharpSDL3.Mixer.Mixer.Initialize*
  commentId: Overload:SharpSDL3.Mixer.Mixer.Initialize
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_Initialize_SharpSDL3_Mixer_Mixer_MixInit_
  name: Initialize
  nameWithType: Mixer.Initialize
  fullName: SharpSDL3.Mixer.Mixer.Initialize
- uid: SharpSDL3.Mixer.Mixer.MixInit
  commentId: T:SharpSDL3.Mixer.Mixer.MixInit
  parent: SharpSDL3.Mixer
  href: SharpSDL3.Mixer.Mixer.html
  name: Mixer.MixInit
  nameWithType: Mixer.MixInit
  fullName: SharpSDL3.Mixer.Mixer.MixInit
  spec.csharp:
  - uid: SharpSDL3.Mixer.Mixer
    name: Mixer
    href: SharpSDL3.Mixer.Mixer.html
  - name: .
  - uid: SharpSDL3.Mixer.Mixer.MixInit
    name: MixInit
    href: SharpSDL3.Mixer.Mixer.MixInit.html
  spec.vb:
  - uid: SharpSDL3.Mixer.Mixer
    name: Mixer
    href: SharpSDL3.Mixer.Mixer.html
  - name: .
  - uid: SharpSDL3.Mixer.Mixer.MixInit
    name: MixInit
    href: SharpSDL3.Mixer.Mixer.MixInit.html
- uid: SharpSDL3.Mixer.Mixer.CloseAudio
  commentId: M:SharpSDL3.Mixer.Mixer.CloseAudio
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_CloseAudio
  name: CloseAudio()
  nameWithType: Mixer.CloseAudio()
  fullName: SharpSDL3.Mixer.Mixer.CloseAudio()
  spec.csharp:
  - uid: SharpSDL3.Mixer.Mixer.CloseAudio
    name: CloseAudio
    href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_CloseAudio
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Mixer.Mixer.CloseAudio
    name: CloseAudio
    href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_CloseAudio
  - name: (
  - name: )
- uid: SharpSDL3.Mixer.Mixer.OpenAudio*
  commentId: Overload:SharpSDL3.Mixer.Mixer.OpenAudio
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_OpenAudio_SharpSDL3_Mixer_AudioDeviceId_System_Nullable_SharpSDL3_Structs_AudioSpec__
  name: OpenAudio
  nameWithType: Mixer.OpenAudio
  fullName: SharpSDL3.Mixer.Mixer.OpenAudio
- uid: SharpSDL3.Mixer.AudioDeviceId
  commentId: T:SharpSDL3.Mixer.AudioDeviceId
  parent: SharpSDL3.Mixer
  href: SharpSDL3.Mixer.AudioDeviceId.html
  name: AudioDeviceId
  nameWithType: AudioDeviceId
  fullName: SharpSDL3.Mixer.AudioDeviceId
- uid: System.Nullable{SharpSDL3.Structs.AudioSpec}
  commentId: T:System.Nullable{SharpSDL3.Structs.AudioSpec}
  parent: System
  definition: System.Nullable`1
  href: SharpSDL3.Structs.AudioSpec.html
  name: AudioSpec?
  nameWithType: AudioSpec?
  fullName: SharpSDL3.Structs.AudioSpec?
  spec.csharp:
  - uid: SharpSDL3.Structs.AudioSpec
    name: AudioSpec
    href: SharpSDL3.Structs.AudioSpec.html
  - name: '?'
  spec.vb:
  - uid: SharpSDL3.Structs.AudioSpec
    name: AudioSpec
    href: SharpSDL3.Structs.AudioSpec.html
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: SharpSDL3.Mixer.Mixer.Quit*
  commentId: Overload:SharpSDL3.Mixer.Mixer.Quit
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_Quit
  name: Quit
  nameWithType: Mixer.Quit
  fullName: SharpSDL3.Mixer.Mixer.Quit
- uid: SharpSDL3.Mixer.Mixer.FreeChunk*
  commentId: Overload:SharpSDL3.Mixer.Mixer.FreeChunk
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_FreeChunk_SharpSDL3_Mixer_Chunk_
  name: FreeChunk
  nameWithType: Mixer.FreeChunk
  fullName: SharpSDL3.Mixer.Mixer.FreeChunk
- uid: SharpSDL3.Mixer.Mixer.FreeMusic*
  commentId: Overload:SharpSDL3.Mixer.Mixer.FreeMusic
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_FreeMusic_SharpSDL3_Mixer_Music_
  name: FreeMusic
  nameWithType: Mixer.FreeMusic
  fullName: SharpSDL3.Mixer.Mixer.FreeMusic
- uid: SharpSDL3.Mixer.Mixer.LoadMusic*
  commentId: Overload:SharpSDL3.Mixer.Mixer.LoadMusic
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_LoadMusic_System_String_
  name: LoadMusic
  nameWithType: Mixer.LoadMusic
  fullName: SharpSDL3.Mixer.Mixer.LoadMusic
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: SharpSDL3.Mixer.Mixer.LoadWav*
  commentId: Overload:SharpSDL3.Mixer.Mixer.LoadWav
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_LoadWav_System_String_
  name: LoadWav
  nameWithType: Mixer.LoadWav
  fullName: SharpSDL3.Mixer.Mixer.LoadWav
- uid: SharpSDL3.Mixer.Mixer.PlayChannel*
  commentId: Overload:SharpSDL3.Mixer.Mixer.PlayChannel
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_PlayChannel_SharpSDL3_Mixer_Chunk_System_Int32_System_Int32_
  name: PlayChannel
  nameWithType: Mixer.PlayChannel
  fullName: SharpSDL3.Mixer.Mixer.PlayChannel
- uid: SharpSDL3.Mixer.Mixer.PlayChannelTimed*
  commentId: Overload:SharpSDL3.Mixer.Mixer.PlayChannelTimed
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_PlayChannelTimed_System_Int32_SharpSDL3_Mixer_Chunk_System_Int32_System_Int32_
  name: PlayChannelTimed
  nameWithType: Mixer.PlayChannelTimed
  fullName: SharpSDL3.Mixer.Mixer.PlayChannelTimed
- uid: SharpSDL3.Mixer.Mixer.MIX_CHANNEL_POST
  commentId: F:SharpSDL3.Mixer.Mixer.MIX_CHANNEL_POST
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_MIX_CHANNEL_POST
  name: MIX_CHANNEL_POST
  nameWithType: Mixer.MIX_CHANNEL_POST
  fullName: SharpSDL3.Mixer.Mixer.MIX_CHANNEL_POST
- uid: SharpSDL3.Mixer.Mixer.RegisterEffect*
  commentId: Overload:SharpSDL3.Mixer.Mixer.RegisterEffect
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_RegisterEffect_System_Int32_SharpSDL3_Mixer_Mixer_Mix_EffectFunc_t_SharpSDL3_Mixer_Mixer_Mix_EffectDone_t_System_IntPtr_
  name: RegisterEffect
  nameWithType: Mixer.RegisterEffect
  fullName: SharpSDL3.Mixer.Mixer.RegisterEffect
- uid: SharpSDL3.Mixer.Mixer.Mix_EffectFunc_t
  commentId: T:SharpSDL3.Mixer.Mixer.Mix_EffectFunc_t
  parent: SharpSDL3.Mixer
  href: SharpSDL3.Mixer.Mixer.html
  name: Mixer.Mix_EffectFunc_t
  nameWithType: Mixer.Mix_EffectFunc_t
  fullName: SharpSDL3.Mixer.Mixer.Mix_EffectFunc_t
  spec.csharp:
  - uid: SharpSDL3.Mixer.Mixer
    name: Mixer
    href: SharpSDL3.Mixer.Mixer.html
  - name: .
  - uid: SharpSDL3.Mixer.Mixer.Mix_EffectFunc_t
    name: Mix_EffectFunc_t
    href: SharpSDL3.Mixer.Mixer.Mix_EffectFunc_t.html
  spec.vb:
  - uid: SharpSDL3.Mixer.Mixer
    name: Mixer
    href: SharpSDL3.Mixer.Mixer.html
  - name: .
  - uid: SharpSDL3.Mixer.Mixer.Mix_EffectFunc_t
    name: Mix_EffectFunc_t
    href: SharpSDL3.Mixer.Mixer.Mix_EffectFunc_t.html
- uid: SharpSDL3.Mixer.Mixer.Mix_EffectDone_t
  commentId: T:SharpSDL3.Mixer.Mixer.Mix_EffectDone_t
  parent: SharpSDL3.Mixer
  href: SharpSDL3.Mixer.Mixer.html
  name: Mixer.Mix_EffectDone_t
  nameWithType: Mixer.Mix_EffectDone_t
  fullName: SharpSDL3.Mixer.Mixer.Mix_EffectDone_t
  spec.csharp:
  - uid: SharpSDL3.Mixer.Mixer
    name: Mixer
    href: SharpSDL3.Mixer.Mixer.html
  - name: .
  - uid: SharpSDL3.Mixer.Mixer.Mix_EffectDone_t
    name: Mix_EffectDone_t
    href: SharpSDL3.Mixer.Mixer.Mix_EffectDone_t.html
  spec.vb:
  - uid: SharpSDL3.Mixer.Mixer
    name: Mixer
    href: SharpSDL3.Mixer.Mixer.html
  - name: .
  - uid: SharpSDL3.Mixer.Mixer.Mix_EffectDone_t
    name: Mix_EffectDone_t
    href: SharpSDL3.Mixer.Mixer.Mix_EffectDone_t.html
- uid: SharpSDL3.Mixer.Mixer.SetPanning*
  commentId: Overload:SharpSDL3.Mixer.Mixer.SetPanning
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_SetPanning_System_Int32_System_Byte_System_Byte_
  name: SetPanning
  nameWithType: Mixer.SetPanning
  fullName: SharpSDL3.Mixer.Mixer.SetPanning
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte
  nameWithType: byte
  fullName: byte
  nameWithType.vb: Byte
  fullName.vb: Byte
  name.vb: Byte
- uid: SharpSDL3.Enums.AudioFormat
  commentId: T:SharpSDL3.Enums.AudioFormat
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.AudioFormat.html
  name: AudioFormat
  nameWithType: AudioFormat
  fullName: SharpSDL3.Enums.AudioFormat
- uid: SharpSDL3.Enums
  commentId: N:SharpSDL3.Enums
  href: SharpSDL3.html
  name: SharpSDL3.Enums
  nameWithType: SharpSDL3.Enums
  fullName: SharpSDL3.Enums
  spec.csharp:
  - uid: SharpSDL3
    name: SharpSDL3
    href: SharpSDL3.html
  - name: .
  - uid: SharpSDL3.Enums
    name: Enums
    href: SharpSDL3.Enums.html
  spec.vb:
  - uid: SharpSDL3
    name: SharpSDL3
    href: SharpSDL3.html
  - name: .
  - uid: SharpSDL3.Enums
    name: Enums
    href: SharpSDL3.Enums.html
- uid: SharpSDL3.Mixer.Mixer.MaxVolume
  commentId: F:SharpSDL3.Mixer.Mixer.MaxVolume
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_MaxVolume
  name: MaxVolume
  nameWithType: Mixer.MaxVolume
  fullName: SharpSDL3.Mixer.Mixer.MaxVolume
- uid: SharpSDL3.Mixer.Mixer.ModMusicJumpToOrder*
  commentId: Overload:SharpSDL3.Mixer.Mixer.ModMusicJumpToOrder
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_ModMusicJumpToOrder_System_Int32_
  name: ModMusicJumpToOrder
  nameWithType: Mixer.ModMusicJumpToOrder
  fullName: SharpSDL3.Mixer.Mixer.ModMusicJumpToOrder
- uid: SharpSDL3.Mixer.Mixer.MusicDuration*
  commentId: Overload:SharpSDL3.Mixer.Mixer.MusicDuration
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_MusicDuration_SharpSDL3_Mixer_Music_
  name: MusicDuration
  nameWithType: Mixer.MusicDuration
  fullName: SharpSDL3.Mixer.Mixer.MusicDuration
- uid: SharpSDL3.Mixer.Mixer.Pause*
  commentId: Overload:SharpSDL3.Mixer.Mixer.Pause
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_Pause_System_Int32_
  name: Pause
  nameWithType: Mixer.Pause
  fullName: SharpSDL3.Mixer.Mixer.Pause
- uid: SharpSDL3.Mixer.Mixer.Paused*
  commentId: Overload:SharpSDL3.Mixer.Mixer.Paused
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_Paused_System_Int32_
  name: Paused
  nameWithType: Mixer.Paused
  fullName: SharpSDL3.Mixer.Mixer.Paused
- uid: SharpSDL3.Mixer.Mixer.PausedMusic*
  commentId: Overload:SharpSDL3.Mixer.Mixer.PausedMusic
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_PausedMusic
  name: PausedMusic
  nameWithType: Mixer.PausedMusic
  fullName: SharpSDL3.Mixer.Mixer.PausedMusic
- uid: SharpSDL3.Mixer.Mixer.PauseGroup*
  commentId: Overload:SharpSDL3.Mixer.Mixer.PauseGroup
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_PauseGroup_System_Int32_
  name: PauseGroup
  nameWithType: Mixer.PauseGroup
  fullName: SharpSDL3.Mixer.Mixer.PauseGroup
- uid: SharpSDL3.Mixer.Mixer.PauseMusic*
  commentId: Overload:SharpSDL3.Mixer.Mixer.PauseMusic
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_PauseMusic
  name: PauseMusic
  nameWithType: Mixer.PauseMusic
  fullName: SharpSDL3.Mixer.Mixer.PauseMusic
- uid: SharpSDL3.Mixer.Mixer.Playing*
  commentId: Overload:SharpSDL3.Mixer.Mixer.Playing
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_Playing_System_Int32_
  name: Playing
  nameWithType: Mixer.Playing
  fullName: SharpSDL3.Mixer.Mixer.Playing
- uid: SharpSDL3.Mixer.Mixer.PlayingMusic*
  commentId: Overload:SharpSDL3.Mixer.Mixer.PlayingMusic
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_PlayingMusic
  name: PlayingMusic
  nameWithType: Mixer.PlayingMusic
  fullName: SharpSDL3.Mixer.Mixer.PlayingMusic
- uid: SharpSDL3.Mixer.Mixer.PlayMusic*
  commentId: Overload:SharpSDL3.Mixer.Mixer.PlayMusic
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_PlayMusic_SharpSDL3_Mixer_Music_System_Int32_
  name: PlayMusic
  nameWithType: Mixer.PlayMusic
  fullName: SharpSDL3.Mixer.Mixer.PlayMusic
- uid: SharpSDL3.Mixer.Mixer.ReserveChannels*
  commentId: Overload:SharpSDL3.Mixer.Mixer.ReserveChannels
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_ReserveChannels_System_Int32_
  name: ReserveChannels
  nameWithType: Mixer.ReserveChannels
  fullName: SharpSDL3.Mixer.Mixer.ReserveChannels
- uid: SharpSDL3.Mixer.Mixer.Resume*
  commentId: Overload:SharpSDL3.Mixer.Mixer.Resume
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_Resume_System_Int32_
  name: Resume
  nameWithType: Mixer.Resume
  fullName: SharpSDL3.Mixer.Mixer.Resume
- uid: SharpSDL3.Mixer.Mixer.ResumeGroup*
  commentId: Overload:SharpSDL3.Mixer.Mixer.ResumeGroup
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_ResumeGroup_System_Int32_
  name: ResumeGroup
  nameWithType: Mixer.ResumeGroup
  fullName: SharpSDL3.Mixer.Mixer.ResumeGroup
- uid: SharpSDL3.Mixer.Mixer.ResumeMusic*
  commentId: Overload:SharpSDL3.Mixer.Mixer.ResumeMusic
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_ResumeMusic
  name: ResumeMusic
  nameWithType: Mixer.ResumeMusic
  fullName: SharpSDL3.Mixer.Mixer.ResumeMusic
- uid: SharpSDL3.Mixer.Mixer.RewindMusic*
  commentId: Overload:SharpSDL3.Mixer.Mixer.RewindMusic
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_RewindMusic
  name: RewindMusic
  nameWithType: Mixer.RewindMusic
  fullName: SharpSDL3.Mixer.Mixer.RewindMusic
- uid: SharpSDL3.Mixer.Mixer.SetDistance*
  commentId: Overload:SharpSDL3.Mixer.Mixer.SetDistance
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_SetDistance_System_Int32_System_Byte_
  name: SetDistance
  nameWithType: Mixer.SetDistance
  fullName: SharpSDL3.Mixer.Mixer.SetDistance
- uid: SharpSDL3.Mixer.Mixer.SetMusicPosition*
  commentId: Overload:SharpSDL3.Mixer.Mixer.SetMusicPosition
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_SetMusicPosition_System_Double_
  name: SetMusicPosition
  nameWithType: Mixer.SetMusicPosition
  fullName: SharpSDL3.Mixer.Mixer.SetMusicPosition
- uid: SharpSDL3.Mixer.Mixer.SetPosition*
  commentId: Overload:SharpSDL3.Mixer.Mixer.SetPosition
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_SetPosition_System_Int32_System_Int16_System_Byte_
  name: SetPosition
  nameWithType: Mixer.SetPosition
  fullName: SharpSDL3.Mixer.Mixer.SetPosition
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int16
  name: short
  nameWithType: short
  fullName: short
  nameWithType.vb: Short
  fullName.vb: Short
  name.vb: Short
- uid: SharpSDL3.Mixer.Mixer.SetPostMix*
  commentId: Overload:SharpSDL3.Mixer.Mixer.SetPostMix
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_SetPostMix_SharpSDL3_Mixer_Mixer_Mix_MixCallback_System_IntPtr_
  name: SetPostMix
  nameWithType: Mixer.SetPostMix
  fullName: SharpSDL3.Mixer.Mixer.SetPostMix
- uid: SharpSDL3.Mixer.Mixer.SetReverseStereo*
  commentId: Overload:SharpSDL3.Mixer.Mixer.SetReverseStereo
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_SetReverseStereo_System_Int32_System_Int32_
  name: SetReverseStereo
  nameWithType: Mixer.SetReverseStereo
  fullName: SharpSDL3.Mixer.Mixer.SetReverseStereo
- uid: SharpSDL3.Mixer.Mixer.SetSoundFonts*
  commentId: Overload:SharpSDL3.Mixer.Mixer.SetSoundFonts
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_SetSoundFonts_System_String_
  name: SetSoundFonts
  nameWithType: Mixer.SetSoundFonts
  fullName: SharpSDL3.Mixer.Mixer.SetSoundFonts
- uid: SharpSDL3.Mixer.Mixer.SetTimidityCfg*
  commentId: Overload:SharpSDL3.Mixer.Mixer.SetTimidityCfg
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_SetTimidityCfg_System_String_
  name: SetTimidityCfg
  nameWithType: Mixer.SetTimidityCfg
  fullName: SharpSDL3.Mixer.Mixer.SetTimidityCfg
- uid: SharpSDL3.Mixer.Mixer.StartTrack*
  commentId: Overload:SharpSDL3.Mixer.Mixer.StartTrack
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_StartTrack_SharpSDL3_Mixer_Music_System_Int32_
  name: StartTrack
  nameWithType: Mixer.StartTrack
  fullName: SharpSDL3.Mixer.Mixer.StartTrack
- uid: SharpSDL3.Mixer.Mixer.UnregisterAllEffects*
  commentId: Overload:SharpSDL3.Mixer.Mixer.UnregisterAllEffects
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_UnregisterAllEffects_System_Int32_
  name: UnregisterAllEffects
  nameWithType: Mixer.UnregisterAllEffects
  fullName: SharpSDL3.Mixer.Mixer.UnregisterAllEffects
- uid: SharpSDL3.Mixer.Mixer.UnregisterEffect*
  commentId: Overload:SharpSDL3.Mixer.Mixer.UnregisterEffect
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_UnregisterEffect_System_Int32_SharpSDL3_Mixer_Mixer_Mix_EffectFunc_t_
  name: UnregisterEffect
  nameWithType: Mixer.UnregisterEffect
  fullName: SharpSDL3.Mixer.Mixer.UnregisterEffect
- uid: SharpSDL3.Mixer.Mixer.Volume*
  commentId: Overload:SharpSDL3.Mixer.Mixer.Volume
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_Volume_System_Int32_System_Int32_
  name: Volume
  nameWithType: Mixer.Volume
  fullName: SharpSDL3.Mixer.Mixer.Volume
- uid: SharpSDL3.Mixer.Mixer.VolumeChunk*
  commentId: Overload:SharpSDL3.Mixer.Mixer.VolumeChunk
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_VolumeChunk_SharpSDL3_Mixer_Chunk_System_Int32_
  name: VolumeChunk
  nameWithType: Mixer.VolumeChunk
  fullName: SharpSDL3.Mixer.Mixer.VolumeChunk
- uid: SharpSDL3.Mixer.Mixer.VolumeMusic*
  commentId: Overload:SharpSDL3.Mixer.Mixer.VolumeMusic
  href: SharpSDL3.Mixer.Mixer.html#SharpSDL3_Mixer_Mixer_VolumeMusic_System_Int32_
  name: VolumeMusic
  nameWithType: Mixer.VolumeMusic
  fullName: SharpSDL3.Mixer.Mixer.VolumeMusic
