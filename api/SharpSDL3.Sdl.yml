### YamlMime:ManagedReference
items:
- uid: SharpSDL3.Sdl
  commentId: T:SharpSDL3.Sdl
  id: Sdl
  parent: SharpSDL3
  children:
  - SharpSDL3.Sdl.AcquireCameraFrame(System.IntPtr,System.UInt64@)
  - SharpSDL3.Sdl.AcquireGPUCommandBuffer(System.IntPtr)
  - SharpSDL3.Sdl.AcquireGPUSwapchainTexture(System.IntPtr,System.IntPtr,System.IntPtr@,System.UInt32@,System.UInt32@)
  - SharpSDL3.Sdl.AddAtomicInt(SharpSDL3.Structs.AtomicInt@,System.Int32)
  - SharpSDL3.Sdl.AddEventWatch(SharpSDL3.Delegates.SdlEventFilter,System.IntPtr)
  - SharpSDL3.Sdl.AddGamepadMapping(System.String)
  - SharpSDL3.Sdl.AddGamepadMappingsFromFile(System.String)
  - SharpSDL3.Sdl.AddGamepadMappingsFromIO(System.IntPtr,SharpSDL3.Structs.SdlBool)
  - SharpSDL3.Sdl.AddHintCallback(System.String,SharpSDL3.Delegates.SdlHintCallback,System.IntPtr)
  - SharpSDL3.Sdl.AddSurfaceAlternateImage(System.IntPtr,System.IntPtr)
  - SharpSDL3.Sdl.AddTimer(System.UInt32,SharpSDL3.Delegates.SdlTimerCallback,System.IntPtr)
  - SharpSDL3.Sdl.AddTimerNS(System.UInt64,SharpSDL3.Delegates.SdlNsTimerCallback,System.IntPtr)
  - SharpSDL3.Sdl.AddVulkanRenderSemaphores(System.IntPtr,System.UInt32,System.Int64,System.Int64)
  - SharpSDL3.Sdl.AsyncIOFromFile(System.String,System.String)
  - SharpSDL3.Sdl.AttachVirtualJoystick(SharpSDL3.Structs.VirtualJoystickDesc@)
  - SharpSDL3.Sdl.AudioDevicePaused(System.UInt32)
  - SharpSDL3.Sdl.AudioStreamDevicePaused(System.IntPtr)
  - SharpSDL3.Sdl.BeginGPUComputePass(System.IntPtr,System.Span{SharpSDL3.Structs.GpuStorageTextureReadWriteBinding},System.UInt32,System.Span{SharpSDL3.Structs.GpuStorageBufferReadWriteBinding},System.UInt32)
  - SharpSDL3.Sdl.BeginGPUCopyPass(System.IntPtr)
  - SharpSDL3.Sdl.BeginGPURenderPass(System.IntPtr,System.Span{SharpSDL3.Structs.GpuColorTargetInfo},System.UInt32,SharpSDL3.Structs.GpuDepthStencilTargetInfo@)
  - SharpSDL3.Sdl.BindAudioStream(System.UInt32,System.IntPtr)
  - SharpSDL3.Sdl.BindAudioStreams(System.UInt32,System.Span{System.IntPtr})
  - SharpSDL3.Sdl.BindGPUComputePipeline(System.IntPtr,System.IntPtr)
  - SharpSDL3.Sdl.BindGPUComputeSamplers(System.IntPtr,System.UInt32,System.Span{SharpSDL3.Structs.GpuTextureSamplerBinding},System.UInt32)
  - SharpSDL3.Sdl.BindGPUComputeStorageBuffers(System.IntPtr,System.UInt32,System.Span{System.IntPtr},System.UInt32)
  - SharpSDL3.Sdl.BindGPUComputeStorageTextures(System.IntPtr,System.UInt32,System.Span{System.IntPtr},System.UInt32)
  - SharpSDL3.Sdl.BindGPUFragmentSamplers(System.IntPtr,System.UInt32,System.Span{SharpSDL3.Structs.GpuTextureSamplerBinding},System.UInt32)
  - SharpSDL3.Sdl.BindGPUFragmentStorageBuffers(System.IntPtr,System.UInt32,System.Span{System.IntPtr},System.UInt32)
  - SharpSDL3.Sdl.BindGPUFragmentStorageTextures(System.IntPtr,System.UInt32,System.Span{System.IntPtr},System.UInt32)
  - SharpSDL3.Sdl.BindGPUGraphicsPipeline(System.IntPtr,System.IntPtr)
  - SharpSDL3.Sdl.BindGPUIndexBuffer(System.IntPtr,SharpSDL3.Structs.GpuBufferBinding@,SharpSDL3.Enums.GpuIndexElementSize)
  - SharpSDL3.Sdl.BindGPUVertexBuffers(System.IntPtr,System.UInt32,System.Span{SharpSDL3.Structs.GpuBufferBinding},System.UInt32)
  - SharpSDL3.Sdl.BindGPUVertexSamplers(System.IntPtr,System.UInt32,System.Span{SharpSDL3.Structs.GpuTextureSamplerBinding},System.UInt32)
  - SharpSDL3.Sdl.BindGPUVertexStorageBuffers(System.IntPtr,System.UInt32,System.Span{System.IntPtr},System.UInt32)
  - SharpSDL3.Sdl.BindGPUVertexStorageTextures(System.IntPtr,System.UInt32,System.Span{System.IntPtr},System.UInt32)
  - SharpSDL3.Sdl.BleScan(SharpSDL3.Structs.SdlBool)
  - SharpSDL3.Sdl.BlitGPUTexture(System.IntPtr,SharpSDL3.Structs.GpuBlitInfo@)
  - SharpSDL3.Sdl.BlitSurface(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - SharpSDL3.Sdl.BlitSurface9Grid(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.Single,SharpSDL3.Enums.ScaleMode,System.IntPtr,System.IntPtr)
  - SharpSDL3.Sdl.BlitSurfaceScaled(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,SharpSDL3.Enums.ScaleMode)
  - SharpSDL3.Sdl.BlitSurfaceTiled(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - SharpSDL3.Sdl.BlitSurfaceTiledWithScale(System.IntPtr,System.IntPtr,System.Single,SharpSDL3.Enums.ScaleMode,System.IntPtr,System.IntPtr)
  - SharpSDL3.Sdl.BlitSurfaceUnchecked(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - SharpSDL3.Sdl.BlitSurfaceUncheckedScaled(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,SharpSDL3.Enums.ScaleMode)
  - SharpSDL3.Sdl.BroadcastCondition(System.IntPtr)
  - SharpSDL3.Sdl.CalculateGPUTextureFormatSize(SharpSDL3.Enums.GpuTextureFormat,System.UInt32,System.UInt32,System.UInt32)
  - SharpSDL3.Sdl.CancelGPUCommandBuffer(System.IntPtr)
  - SharpSDL3.Sdl.CaptureMouse(System.Boolean)
  - SharpSDL3.Sdl.ClaimWindowForGPUDevice(System.IntPtr,System.IntPtr)
  - SharpSDL3.Sdl.CleanupTls
  - SharpSDL3.Sdl.ClearAudioStream(System.IntPtr)
  - SharpSDL3.Sdl.ClearClipboardData
  - SharpSDL3.Sdl.ClearComposition(System.IntPtr)
  - SharpSDL3.Sdl.ClearError
  - SharpSDL3.Sdl.ClearProperty(System.UInt32,System.String)
  - SharpSDL3.Sdl.ClearSurface(System.IntPtr,System.Single,System.Single,System.Single,System.Single)
  - SharpSDL3.Sdl.ClickTrayEntry(System.IntPtr)
  - SharpSDL3.Sdl.Close(System.IntPtr)
  - SharpSDL3.Sdl.CloseAsyncIO(System.IntPtr,SharpSDL3.Structs.SdlBool,System.IntPtr,System.IntPtr)
  - SharpSDL3.Sdl.CloseAudioDevice(System.UInt32)
  - SharpSDL3.Sdl.CloseCamera(System.IntPtr)
  - SharpSDL3.Sdl.CloseGamepad(System.IntPtr)
  - SharpSDL3.Sdl.CloseHaptic(System.IntPtr)
  - SharpSDL3.Sdl.CloseIO(SharpSDL3.Structs.IOStream)
  - SharpSDL3.Sdl.CloseJoystick(System.IntPtr)
  - SharpSDL3.Sdl.CloseSensor(System.IntPtr)
  - SharpSDL3.Sdl.CloseStorage(System.IntPtr)
  - SharpSDL3.Sdl.CompareAndSwapAtomicInt(SharpSDL3.Structs.AtomicInt@,System.Int32,System.Int32)
  - SharpSDL3.Sdl.CompareAndSwapAtomicPointer(System.IntPtr@,System.IntPtr,System.IntPtr)
  - SharpSDL3.Sdl.CompareAndSwapAtomicU32(SharpSDL3.Structs.AtomicU32@,System.UInt32,System.UInt32)
  - SharpSDL3.Sdl.ComposeCustomBlendMode(SharpSDL3.Enums.BlendFactor,SharpSDL3.Enums.BlendFactor,SharpSDL3.Enums.BlendOperation,SharpSDL3.Enums.BlendFactor,SharpSDL3.Enums.BlendFactor,SharpSDL3.Enums.BlendOperation)
  - SharpSDL3.Sdl.ConvertAudioSamples(SharpSDL3.Structs.AudioSpec@,System.IntPtr,System.Int32,SharpSDL3.Structs.AudioSpec@,System.IntPtr,System.Int32@)
  - SharpSDL3.Sdl.ConvertEventToRenderCoordinates(System.IntPtr,SharpSDL3.Structs.Event@)
  - SharpSDL3.Sdl.ConvertPixels(System.Int32,System.Int32,SharpSDL3.Enums.PixelFormat,System.IntPtr,System.Int32,SharpSDL3.Enums.PixelFormat,System.IntPtr,System.Int32)
  - SharpSDL3.Sdl.ConvertPixelsAndColorspace(System.Int32,System.Int32,SharpSDL3.Enums.PixelFormat,SharpSDL3.Enums.Colorspace,System.UInt32,System.IntPtr,System.Int32,SharpSDL3.Enums.PixelFormat,SharpSDL3.Enums.Colorspace,System.UInt32,System.IntPtr,System.Int32)
  - SharpSDL3.Sdl.ConvertSurface(System.IntPtr,SharpSDL3.Enums.PixelFormat)
  - SharpSDL3.Sdl.ConvertSurfaceAndColorspace(System.IntPtr,SharpSDL3.Enums.PixelFormat,System.IntPtr,SharpSDL3.Enums.Colorspace,System.UInt32)
  - SharpSDL3.Sdl.CopyFile(System.String,System.String)
  - SharpSDL3.Sdl.CopyGPUBufferToBuffer(System.IntPtr,SharpSDL3.Structs.GpuBufferLocation@,SharpSDL3.Structs.GpuBufferLocation@,System.UInt32,System.Boolean)
  - SharpSDL3.Sdl.CopyGPUTextureToTexture(System.IntPtr,SharpSDL3.Structs.GpuTextureLocation@,SharpSDL3.Structs.GpuTextureLocation@,System.UInt32,System.UInt32,System.UInt32,System.Boolean)
  - SharpSDL3.Sdl.CopyProperties(System.UInt32,System.UInt32)
  - SharpSDL3.Sdl.CopyStorageFile(System.IntPtr,System.String,System.String)
  - SharpSDL3.Sdl.Create(System.UInt32)
  - SharpSDL3.Sdl.CreateAsyncIOQueue
  - SharpSDL3.Sdl.CreateAudioStream(SharpSDL3.Structs.AudioSpec@,SharpSDL3.Structs.AudioSpec@)
  - SharpSDL3.Sdl.CreateColorCursor(System.IntPtr,System.Int32,System.Int32)
  - SharpSDL3.Sdl.CreateCondition
  - SharpSDL3.Sdl.CreateCursor(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)
  - SharpSDL3.Sdl.CreateDirectory(System.String)
  - SharpSDL3.Sdl.CreateGPUBuffer(System.IntPtr,SharpSDL3.Structs.GpuBufferCreateInfo@)
  - SharpSDL3.Sdl.CreateGPUComputePipeline(System.IntPtr,SharpSDL3.Structs.GpuComputePipelineCreateInfo@)
  - SharpSDL3.Sdl.CreateGPUDevice(SharpSDL3.Enums.GpuShaderFormat,System.Boolean,System.String)
  - SharpSDL3.Sdl.CreateGPUDeviceWithProperties(System.UInt32)
  - SharpSDL3.Sdl.CreateGPUGraphicsPipeline(System.IntPtr,SharpSDL3.Structs.GpuGraphicsPipelineCreateInfo@)
  - SharpSDL3.Sdl.CreateGPUSampler(System.IntPtr,SharpSDL3.Structs.GpuSamplerCreateInfo@)
  - SharpSDL3.Sdl.CreateGPUShader(System.IntPtr,SharpSDL3.Structs.GpuShaderCreateInfo@)
  - SharpSDL3.Sdl.CreateGPUTexture(System.IntPtr,SharpSDL3.Structs.GpuTextureCreateInfo@)
  - SharpSDL3.Sdl.CreateGPUTransferBuffer(System.IntPtr,SharpSDL3.Structs.GpuTransferBufferCreateInfo@)
  - SharpSDL3.Sdl.CreateHapticEffect(System.IntPtr,SharpSDL3.Structs.HapticEffect@)
  - SharpSDL3.Sdl.CreateMutex
  - SharpSDL3.Sdl.CreatePalette(System.Int32)
  - SharpSDL3.Sdl.CreatePopupWindow(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,SharpSDL3.Enums.WindowFlags)
  - SharpSDL3.Sdl.CreateProcess(System.IntPtr,SharpSDL3.Structs.SdlBool)
  - SharpSDL3.Sdl.CreateProcessWithProperties(System.UInt32)
  - SharpSDL3.Sdl.CreateProperties
  - SharpSDL3.Sdl.CreateRWLock
  - SharpSDL3.Sdl.CreateRenderer(System.IntPtr,System.String)
  - SharpSDL3.Sdl.CreateRendererWithProperties(System.UInt32)
  - SharpSDL3.Sdl.CreateSoftwareRenderer(System.IntPtr)
  - SharpSDL3.Sdl.CreateStorageDirectory(System.IntPtr,System.String)
  - SharpSDL3.Sdl.CreateSurface(System.Int32,System.Int32,SharpSDL3.Enums.PixelFormat)
  - SharpSDL3.Sdl.CreateSurfaceFrom(System.Int32,System.Int32,SharpSDL3.Enums.PixelFormat,System.IntPtr,System.Int32)
  - SharpSDL3.Sdl.CreateSurfacePalette(System.IntPtr)
  - SharpSDL3.Sdl.CreateSystemCursor(SharpSDL3.Enums.SystemCursor)
  - SharpSDL3.Sdl.CreateTexture(System.IntPtr,SharpSDL3.Enums.PixelFormat,SharpSDL3.Enums.TextureAccess,System.Int32,System.Int32)
  - SharpSDL3.Sdl.CreateTextureFromSurface(System.IntPtr,System.IntPtr)
  - SharpSDL3.Sdl.CreateTextureWithProperties(System.IntPtr,System.UInt32)
  - SharpSDL3.Sdl.CreateThreadRuntime(SharpSDL3.Delegates.SdlThreadFunction,System.String,System.IntPtr,System.IntPtr,System.IntPtr)
  - SharpSDL3.Sdl.CreateThreadWithPropertiesRuntime(System.UInt32,System.IntPtr,System.IntPtr)
  - SharpSDL3.Sdl.CreateTray(System.IntPtr,System.String)
  - SharpSDL3.Sdl.CreateTrayMenu(System.IntPtr)
  - SharpSDL3.Sdl.CreateTraySubmenu(System.IntPtr)
  - SharpSDL3.Sdl.CreateView(System.IntPtr)
  - SharpSDL3.Sdl.CreateWindow(System.String,System.Int32,System.Int32,SharpSDL3.Enums.WindowFlags)
  - SharpSDL3.Sdl.CreateWindowAndRenderer(System.String,System.Int32,System.Int32,SharpSDL3.Enums.WindowFlags,System.IntPtr@)
  - SharpSDL3.Sdl.CreateWindowAndRenderer(System.String,System.Int32,System.Int32,SharpSDL3.Enums.WindowFlags,System.IntPtr@,System.IntPtr@)
  - SharpSDL3.Sdl.CreateWindowWithProperties(System.UInt32)
  - SharpSDL3.Sdl.CursorVisible
  - SharpSDL3.Sdl.DateTimeToTime(SharpSDL3.Structs.DateTime@,System.IntPtr)
  - SharpSDL3.Sdl.Delay(System.UInt32)
  - SharpSDL3.Sdl.DelayNS(System.UInt64)
  - SharpSDL3.Sdl.DelayPrecise(System.UInt64)
  - SharpSDL3.Sdl.Destroy(System.IntPtr)
  - SharpSDL3.Sdl.DestroyAsyncIOQueue(System.IntPtr)
  - SharpSDL3.Sdl.DestroyAudioStream(System.IntPtr)
  - SharpSDL3.Sdl.DestroyCondition(System.IntPtr)
  - SharpSDL3.Sdl.DestroyCursor(System.IntPtr)
  - SharpSDL3.Sdl.DestroyGPUDevice(System.IntPtr)
  - SharpSDL3.Sdl.DestroyHapticEffect(System.IntPtr,System.Int32)
  - SharpSDL3.Sdl.DestroyMutex(System.IntPtr)
  - SharpSDL3.Sdl.DestroyPalette(System.IntPtr)
  - SharpSDL3.Sdl.DestroyProcess(System.IntPtr)
  - SharpSDL3.Sdl.DestroyProperties(System.UInt32)
  - SharpSDL3.Sdl.DestroyRWLock(System.IntPtr)
  - SharpSDL3.Sdl.DestroyRenderer(System.IntPtr)
  - SharpSDL3.Sdl.DestroySurface(System.IntPtr)
  - SharpSDL3.Sdl.DestroyTexture(System.IntPtr)
  - SharpSDL3.Sdl.DestroyTray(System.IntPtr)
  - SharpSDL3.Sdl.DestroyView(System.IntPtr)
  - SharpSDL3.Sdl.DestroyWindow(System.IntPtr)
  - SharpSDL3.Sdl.DestroyWindowSurface(System.IntPtr)
  - SharpSDL3.Sdl.DetachThread(System.IntPtr)
  - SharpSDL3.Sdl.DetachVirtualJoystick(System.UInt32)
  - SharpSDL3.Sdl.DeviceChangeCount
  - SharpSDL3.Sdl.DisableScreenSaver
  - SharpSDL3.Sdl.DispatchGPUCompute(System.IntPtr,System.UInt32,System.UInt32,System.UInt32)
  - SharpSDL3.Sdl.DispatchGPUComputeIndirect(System.IntPtr,System.IntPtr,System.UInt32)
  - SharpSDL3.Sdl.DownloadFromGPUBuffer(System.IntPtr,SharpSDL3.Structs.GpuBufferRegion@,SharpSDL3.Structs.GpuTransferBufferLocation@)
  - SharpSDL3.Sdl.DownloadFromGPUTexture(System.IntPtr,SharpSDL3.Structs.GpuTextureRegion@,SharpSDL3.Structs.GpuTextureTransferInfo@)
  - SharpSDL3.Sdl.DrawGPUIndexedPrimitives(System.IntPtr,System.UInt32,System.UInt32,System.UInt32,System.Int32,System.UInt32)
  - SharpSDL3.Sdl.DrawGPUIndexedPrimitivesIndirect(System.IntPtr,System.IntPtr,System.UInt32,System.UInt32)
  - SharpSDL3.Sdl.DrawGPUPrimitives(System.IntPtr,System.UInt32,System.UInt32,System.UInt32,System.UInt32)
  - SharpSDL3.Sdl.DrawGPUPrimitivesIndirect(System.IntPtr,System.IntPtr,System.UInt32,System.UInt32)
  - SharpSDL3.Sdl.DuplicateSurface(System.IntPtr)
  - SharpSDL3.Sdl.EglGetCurrentConfig
  - SharpSDL3.Sdl.EglGetCurrentDisplay
  - SharpSDL3.Sdl.EglGetProcAddress(System.String)
  - SharpSDL3.Sdl.EglGetWindowSurface(System.IntPtr)
  - SharpSDL3.Sdl.EglSetAttributeCallbacks(SharpSDL3.Delegates.SdlEglAttribArrayCallback,SharpSDL3.Delegates.SdlEglIntArrayCallback,SharpSDL3.Delegates.SdlEglIntArrayCallback,System.IntPtr)
  - SharpSDL3.Sdl.EnableScreenSaver
  - SharpSDL3.Sdl.EndGPUComputePass(System.IntPtr)
  - SharpSDL3.Sdl.EndGPUCopyPass(System.IntPtr)
  - SharpSDL3.Sdl.EndGPURenderPass(System.IntPtr)
  - SharpSDL3.Sdl.EnterAppMainCallbacks(System.Int32,System.IntPtr,SharpSDL3.Delegates.SdlAppInitFunc,SharpSDL3.Delegates.SdlAppIterateFunc,SharpSDL3.Delegates.SdlAppEventFunc,SharpSDL3.Delegates.SdlAppQuitFunc)
  - SharpSDL3.Sdl.Enumerate(System.UInt16,System.UInt16)
  - SharpSDL3.Sdl.EnumerateDirectory(System.String,SharpSDL3.Delegates.SdlEnumerateDirectoryCallback,System.IntPtr)
  - SharpSDL3.Sdl.EnumerateProperties(System.UInt32,SharpSDL3.Delegates.SdlEnumeratePropertiesCallback,System.IntPtr)
  - SharpSDL3.Sdl.EnumerateStorageDirectory(System.IntPtr,System.String,SharpSDL3.Delegates.SdlEnumerateDirectoryCallback,System.IntPtr)
  - SharpSDL3.Sdl.EventEnabled(System.UInt32)
  - SharpSDL3.Sdl.Exit
  - SharpSDL3.Sdl.FillSurfaceRect(System.IntPtr,SharpSDL3.Structs.Rect,System.UInt32)
  - SharpSDL3.Sdl.FillSurfaceRects(System.IntPtr,System.Span{SharpSDL3.Structs.Rect},System.UInt32)
  - SharpSDL3.Sdl.FilterEvents(SharpSDL3.Delegates.SdlEventFilter,System.IntPtr)
  - SharpSDL3.Sdl.FlashWindow(System.IntPtr,SharpSDL3.Enums.FlashOperation)
  - SharpSDL3.Sdl.FlipSurface(System.IntPtr,SharpSDL3.Enums.FlipMode)
  - SharpSDL3.Sdl.FlushAudioStream(System.IntPtr)
  - SharpSDL3.Sdl.FlushEvent(System.UInt32)
  - SharpSDL3.Sdl.FlushEvents(System.UInt32,System.UInt32)
  - SharpSDL3.Sdl.FlushIO(SharpSDL3.Structs.IOStream)
  - SharpSDL3.Sdl.FlushRenderer(System.IntPtr)
  - SharpSDL3.Sdl.Free(System.IntPtr)
  - SharpSDL3.Sdl.FreeAnimation(System.IntPtr)
  - SharpSDL3.Sdl.FreeEnumeration(System.IntPtr)
  - SharpSDL3.Sdl.GDKSuspendComplete
  - SharpSDL3.Sdl.GPUSupportsProperties(System.UInt32)
  - SharpSDL3.Sdl.GPUSupportsShaderFormats(SharpSDL3.Enums.GpuShaderFormat,System.String)
  - SharpSDL3.Sdl.GPUTextureFormatTexelBlockSize(SharpSDL3.Enums.GpuTextureFormat)
  - SharpSDL3.Sdl.GPUTextureSupportsFormat(System.IntPtr,SharpSDL3.Enums.GpuTextureFormat,SharpSDL3.Enums.GpuTextureType,SharpSDL3.Enums.GpuTextureUsageFlags)
  - SharpSDL3.Sdl.GPUTextureSupportsSampleCount(System.IntPtr,SharpSDL3.Enums.GpuTextureFormat,SharpSDL3.Enums.GpuSampleCount)
  - SharpSDL3.Sdl.GamepadConnected(System.IntPtr)
  - SharpSDL3.Sdl.GamepadHasAxis(System.IntPtr,SharpSDL3.Enums.GamepadAxis)
  - SharpSDL3.Sdl.GamepadHasButton(System.IntPtr,SharpSDL3.Enums.GamepadButton)
  - SharpSDL3.Sdl.GamepadHasSensor(System.IntPtr,SharpSDL3.Enums.SensorType)
  - SharpSDL3.Sdl.GamepadSensorEnabled(System.IntPtr,SharpSDL3.Enums.SensorType)
  - SharpSDL3.Sdl.GenerateMipmapsForGPUTexture(System.IntPtr,System.IntPtr)
  - SharpSDL3.Sdl.GetAppMetadataProperty(System.String)
  - SharpSDL3.Sdl.GetAssertionHandler(System.IntPtr@)
  - SharpSDL3.Sdl.GetAssertionReport
  - SharpSDL3.Sdl.GetAsyncIOResult(System.IntPtr,SharpSDL3.Structs.AsyncIoOutcome@)
  - SharpSDL3.Sdl.GetAsyncIOSize(System.IntPtr)
  - SharpSDL3.Sdl.GetAtomicInt(SharpSDL3.Structs.AtomicInt@)
  - SharpSDL3.Sdl.GetAtomicPointer(System.IntPtr@)
  - SharpSDL3.Sdl.GetAtomicU32(SharpSDL3.Structs.AtomicU32@)
  - SharpSDL3.Sdl.GetAudioDeviceChannelMap(System.UInt32)
  - SharpSDL3.Sdl.GetAudioDeviceFormat(System.UInt32,SharpSDL3.Structs.AudioSpec@,System.Int32@)
  - SharpSDL3.Sdl.GetAudioDeviceGain(System.UInt32)
  - SharpSDL3.Sdl.GetAudioDeviceName(System.UInt32)
  - SharpSDL3.Sdl.GetAudioDriver(System.Int32)
  - SharpSDL3.Sdl.GetAudioFormatName(SharpSDL3.Enums.AudioFormat)
  - SharpSDL3.Sdl.GetAudioPlaybackDevices(System.Int32@)
  - SharpSDL3.Sdl.GetAudioRecordingDevices(System.Int32@)
  - SharpSDL3.Sdl.GetAudioStreamAvailable(System.IntPtr)
  - SharpSDL3.Sdl.GetAudioStreamData(System.IntPtr,System.IntPtr,System.Int32)
  - SharpSDL3.Sdl.GetAudioStreamDevice(System.IntPtr)
  - SharpSDL3.Sdl.GetAudioStreamFormat(System.IntPtr,SharpSDL3.Structs.AudioSpec@,SharpSDL3.Structs.AudioSpec@)
  - SharpSDL3.Sdl.GetAudioStreamFrequencyRatio(System.IntPtr)
  - SharpSDL3.Sdl.GetAudioStreamGain(System.IntPtr)
  - SharpSDL3.Sdl.GetAudioStreamInputChannelMap(System.IntPtr,System.Int32@)
  - SharpSDL3.Sdl.GetAudioStreamOutputChannelMap(System.IntPtr,System.Int32@)
  - SharpSDL3.Sdl.GetAudioStreamProperties(System.IntPtr)
  - SharpSDL3.Sdl.GetAudioStreamQueued(System.IntPtr)
  - SharpSDL3.Sdl.GetBasePath
  - SharpSDL3.Sdl.GetBooleanProperty(System.UInt32,System.String,System.Boolean)
  - SharpSDL3.Sdl.GetCPUCacheLineSize
  - SharpSDL3.Sdl.GetCameraDriver(System.Int32)
  - SharpSDL3.Sdl.GetCameraFormat(System.IntPtr,SharpSDL3.Structs.CameraSpec@)
  - SharpSDL3.Sdl.GetCameraID(System.IntPtr)
  - SharpSDL3.Sdl.GetCameraName(System.UInt32)
  - SharpSDL3.Sdl.GetCameraPermissionState(System.IntPtr)
  - SharpSDL3.Sdl.GetCameraPosition(System.UInt32)
  - SharpSDL3.Sdl.GetCameraProperties(System.IntPtr)
  - SharpSDL3.Sdl.GetCameraSupportedFormats(System.UInt32,System.Int32@)
  - SharpSDL3.Sdl.GetCameras(System.Int32@)
  - SharpSDL3.Sdl.GetClipboardData(System.String)
  - SharpSDL3.Sdl.GetClipboardMimeTypes
  - SharpSDL3.Sdl.GetClipboardMimeTypes(System.UIntPtr@)
  - SharpSDL3.Sdl.GetClipboardText
  - SharpSDL3.Sdl.GetClosestFullscreenDisplayMode(System.UInt32,System.Int32,System.Int32,System.Single,System.Boolean,SharpSDL3.Structs.DisplayMode@)
  - SharpSDL3.Sdl.GetCurrentAudioDriver
  - SharpSDL3.Sdl.GetCurrentCameraDriver
  - SharpSDL3.Sdl.GetCurrentDirectory
  - SharpSDL3.Sdl.GetCurrentDisplayMode(System.UInt32)
  - SharpSDL3.Sdl.GetCurrentDisplayMode(System.UInt32,SharpSDL3.Structs.DisplayMode@)
  - SharpSDL3.Sdl.GetCurrentDisplayOrientation(System.UInt32)
  - SharpSDL3.Sdl.GetCurrentRenderOutputSize(System.IntPtr)
  - SharpSDL3.Sdl.GetCurrentRenderOutputSize(System.IntPtr,System.Int32@,System.Int32@)
  - SharpSDL3.Sdl.GetCurrentThreadID
  - SharpSDL3.Sdl.GetCurrentTime(System.IntPtr)
  - SharpSDL3.Sdl.GetCurrentVideoDriver
  - SharpSDL3.Sdl.GetCursor
  - SharpSDL3.Sdl.GetDateTimeLocalePreferences(SharpSDL3.Enums.DateFormat@,SharpSDL3.Enums.TimeFormat@)
  - SharpSDL3.Sdl.GetDayOfWeek(System.Int32,System.Int32,System.Int32)
  - SharpSDL3.Sdl.GetDayOfYear(System.Int32,System.Int32,System.Int32)
  - SharpSDL3.Sdl.GetDaysInMonth(System.Int32,System.Int32)
  - SharpSDL3.Sdl.GetDefaultAssertionHandler
  - SharpSDL3.Sdl.GetDefaultCursor
  - SharpSDL3.Sdl.GetDefaultLogOutputFunction
  - SharpSDL3.Sdl.GetDesktopDisplayMode(System.UInt32)
  - SharpSDL3.Sdl.GetDesktopDisplayMode(System.UInt32,SharpSDL3.Structs.DisplayMode@)
  - SharpSDL3.Sdl.GetDeviceInfo(System.IntPtr)
  - SharpSDL3.Sdl.GetDisplayBounds(System.UInt32,SharpSDL3.Structs.Rect@)
  - SharpSDL3.Sdl.GetDisplayContentScale(System.UInt32)
  - SharpSDL3.Sdl.GetDisplayForPoint(SharpSDL3.Structs.Point@)
  - SharpSDL3.Sdl.GetDisplayForRect(SharpSDL3.Structs.Rect@)
  - SharpSDL3.Sdl.GetDisplayForWindow(System.IntPtr)
  - SharpSDL3.Sdl.GetDisplayName(System.UInt32)
  - SharpSDL3.Sdl.GetDisplayProperties(System.UInt32)
  - SharpSDL3.Sdl.GetDisplayUsableBounds(System.UInt32,SharpSDL3.Structs.Rect@)
  - SharpSDL3.Sdl.GetDisplays
  - SharpSDL3.Sdl.GetDisplays(System.Int32@)
  - SharpSDL3.Sdl.GetError
  - SharpSDL3.Sdl.GetEventFilter(SharpSDL3.Delegates.SdlEventFilter@,System.IntPtr@)
  - SharpSDL3.Sdl.GetFeatureReport(System.IntPtr,System.IntPtr,System.UIntPtr)
  - SharpSDL3.Sdl.GetFloatProperty(System.UInt32,System.String,System.Single)
  - SharpSDL3.Sdl.GetFullscreenDisplayModes(System.UInt32)
  - SharpSDL3.Sdl.GetFullscreenDisplayModes(System.UInt32,System.Int32@)
  - SharpSDL3.Sdl.GetGPUDeviceDriver(System.IntPtr)
  - SharpSDL3.Sdl.GetGPUDriver(System.Int32)
  - SharpSDL3.Sdl.GetGPUShaderFormats(System.IntPtr)
  - SharpSDL3.Sdl.GetGPUSwapchainTextureFormat(System.IntPtr,System.IntPtr)
  - SharpSDL3.Sdl.GetGamepadAppleSFSymbolsNameForAxis(System.IntPtr,SharpSDL3.Enums.GamepadAxis)
  - SharpSDL3.Sdl.GetGamepadAppleSFSymbolsNameForButton(System.IntPtr,SharpSDL3.Enums.GamepadButton)
  - SharpSDL3.Sdl.GetGamepadAxis(System.IntPtr,SharpSDL3.Enums.GamepadAxis)
  - SharpSDL3.Sdl.GetGamepadAxisFromString(System.String)
  - SharpSDL3.Sdl.GetGamepadButton(System.IntPtr,SharpSDL3.Enums.GamepadButton)
  - SharpSDL3.Sdl.GetGamepadButtonFromString(System.String)
  - SharpSDL3.Sdl.GetGamepadButtonLabel(System.IntPtr,SharpSDL3.Enums.GamepadButton)
  - SharpSDL3.Sdl.GetGamepadButtonLabelForType(SharpSDL3.Enums.GamepadType,SharpSDL3.Enums.GamepadButton)
  - SharpSDL3.Sdl.GetGamepadConnectionState(System.IntPtr)
  - SharpSDL3.Sdl.GetGamepadFirmwareVersion(System.IntPtr)
  - SharpSDL3.Sdl.GetGamepadFromID(System.UInt32)
  - SharpSDL3.Sdl.GetGamepadFromPlayerIndex(System.Int32)
  - SharpSDL3.Sdl.GetGamepadGUIDForID(System.UInt32)
  - SharpSDL3.Sdl.GetGamepadID(System.IntPtr)
  - SharpSDL3.Sdl.GetGamepadJoystick(System.IntPtr)
  - SharpSDL3.Sdl.GetGamepadMapping(System.IntPtr)
  - SharpSDL3.Sdl.GetGamepadMappingForGUID(SharpSDL3.Structs.SdlGuid)
  - SharpSDL3.Sdl.GetGamepadMappingForID(System.UInt32)
  - SharpSDL3.Sdl.GetGamepadName(System.IntPtr)
  - SharpSDL3.Sdl.GetGamepadNameForID(System.UInt32)
  - SharpSDL3.Sdl.GetGamepadPath(System.IntPtr)
  - SharpSDL3.Sdl.GetGamepadPathForID(System.UInt32)
  - SharpSDL3.Sdl.GetGamepadPlayerIndex(System.IntPtr)
  - SharpSDL3.Sdl.GetGamepadPlayerIndexForID(System.UInt32)
  - SharpSDL3.Sdl.GetGamepadPowerInfo(System.IntPtr,System.Int32@)
  - SharpSDL3.Sdl.GetGamepadProduct(System.IntPtr)
  - SharpSDL3.Sdl.GetGamepadProductForID(System.UInt32)
  - SharpSDL3.Sdl.GetGamepadProductVersion(System.IntPtr)
  - SharpSDL3.Sdl.GetGamepadProductVersionForID(System.UInt32)
  - SharpSDL3.Sdl.GetGamepadProperties(System.IntPtr)
  - SharpSDL3.Sdl.GetGamepadSensorDataRate(System.IntPtr,SharpSDL3.Enums.SensorType)
  - SharpSDL3.Sdl.GetGamepadSerial(System.IntPtr)
  - SharpSDL3.Sdl.GetGamepadSteamHandle(System.IntPtr)
  - SharpSDL3.Sdl.GetGamepadStringForAxis(SharpSDL3.Enums.GamepadAxis)
  - SharpSDL3.Sdl.GetGamepadStringForButton(SharpSDL3.Enums.GamepadButton)
  - SharpSDL3.Sdl.GetGamepadStringForType(SharpSDL3.Enums.GamepadType)
  - SharpSDL3.Sdl.GetGamepadTouchpadFinger(System.IntPtr,System.Int32,System.Int32,System.Boolean@,System.Single@,System.Single@,System.Single@)
  - SharpSDL3.Sdl.GetGamepadType(System.IntPtr)
  - SharpSDL3.Sdl.GetGamepadTypeForID(System.UInt32)
  - SharpSDL3.Sdl.GetGamepadTypeFromString(System.String)
  - SharpSDL3.Sdl.GetGamepadVendor(System.IntPtr)
  - SharpSDL3.Sdl.GetGamepadVendorForID(System.UInt32)
  - SharpSDL3.Sdl.GetGlobalMouseState(System.Single@,System.Single@)
  - SharpSDL3.Sdl.GetGlobalProperties
  - SharpSDL3.Sdl.GetGrabbedWindow
  - SharpSDL3.Sdl.GetHapticEffectStatus(System.IntPtr,System.Int32)
  - SharpSDL3.Sdl.GetHapticFeatures(System.IntPtr)
  - SharpSDL3.Sdl.GetHapticFromId(System.UInt32)
  - SharpSDL3.Sdl.GetHapticId(System.IntPtr)
  - SharpSDL3.Sdl.GetHapticName(System.IntPtr)
  - SharpSDL3.Sdl.GetHapticNameforId(System.UInt32)
  - SharpSDL3.Sdl.GetHaptics
  - SharpSDL3.Sdl.GetHint(System.String)
  - SharpSDL3.Sdl.GetHintBoolean(System.String,System.Boolean)
  - SharpSDL3.Sdl.GetIOProperties(SharpSDL3.Structs.IOStream)
  - SharpSDL3.Sdl.GetIOSize(SharpSDL3.Structs.IOStream)
  - SharpSDL3.Sdl.GetIOStatus(SharpSDL3.Structs.IOStream)
  - SharpSDL3.Sdl.GetImageVersion
  - SharpSDL3.Sdl.GetIndexedString(System.IntPtr,System.Int32,System.String,System.UIntPtr)
  - SharpSDL3.Sdl.GetInputReport(System.IntPtr,System.IntPtr,System.UIntPtr)
  - SharpSDL3.Sdl.GetJoystickAxis(System.IntPtr,System.Int32)
  - SharpSDL3.Sdl.GetJoystickAxisInitialState(System.IntPtr,System.Int32,System.Int16@)
  - SharpSDL3.Sdl.GetJoystickBall(System.IntPtr,System.Int32,System.Int32@,System.Int32@)
  - SharpSDL3.Sdl.GetJoystickButton(System.IntPtr,System.Int32)
  - SharpSDL3.Sdl.GetJoystickConnectionState(System.IntPtr)
  - SharpSDL3.Sdl.GetJoystickFirmwareVersion(System.IntPtr)
  - SharpSDL3.Sdl.GetJoystickFromId(System.UInt32)
  - SharpSDL3.Sdl.GetJoystickFromPlayerIndex(System.Int32)
  - SharpSDL3.Sdl.GetJoystickGUIDInfo(SharpSDL3.Structs.SdlGuid,System.UInt16@,System.UInt16@,System.UInt16@,System.UInt16@)
  - SharpSDL3.Sdl.GetJoystickGuid(System.IntPtr)
  - SharpSDL3.Sdl.GetJoystickGuidForId(System.UInt32)
  - SharpSDL3.Sdl.GetJoystickHat(System.IntPtr,System.Int32)
  - SharpSDL3.Sdl.GetJoystickID(System.IntPtr)
  - SharpSDL3.Sdl.GetJoystickName(System.IntPtr)
  - SharpSDL3.Sdl.GetJoystickNameForId(System.UInt32)
  - SharpSDL3.Sdl.GetJoystickPath(System.IntPtr)
  - SharpSDL3.Sdl.GetJoystickPathForId(System.UInt32)
  - SharpSDL3.Sdl.GetJoystickPlayerIndex(System.IntPtr)
  - SharpSDL3.Sdl.GetJoystickPlayerIndexForId(System.UInt32)
  - SharpSDL3.Sdl.GetJoystickPowerInfo(System.IntPtr,System.Int32@)
  - SharpSDL3.Sdl.GetJoystickProduct(System.IntPtr)
  - SharpSDL3.Sdl.GetJoystickProductForId(System.UInt32)
  - SharpSDL3.Sdl.GetJoystickProductVersion(System.IntPtr)
  - SharpSDL3.Sdl.GetJoystickProductVersionForId(System.UInt32)
  - SharpSDL3.Sdl.GetJoystickProperties(System.IntPtr)
  - SharpSDL3.Sdl.GetJoystickSerial(System.IntPtr)
  - SharpSDL3.Sdl.GetJoystickType(System.IntPtr)
  - SharpSDL3.Sdl.GetJoystickTypeForId(System.UInt32)
  - SharpSDL3.Sdl.GetJoystickVendor(System.IntPtr)
  - SharpSDL3.Sdl.GetJoystickVendorForId(System.UInt32)
  - SharpSDL3.Sdl.GetJoysticks(System.Int32@)
  - SharpSDL3.Sdl.GetKeyFromName(System.String)
  - SharpSDL3.Sdl.GetKeyFromScancode(SharpSDL3.Enums.Scancode,SharpSDL3.Enums.KeyMod,System.Boolean)
  - SharpSDL3.Sdl.GetKeyName(SharpSDL3.Enums.Keycode)
  - SharpSDL3.Sdl.GetKeyboardFocus
  - SharpSDL3.Sdl.GetKeyboardNameForId(System.UInt32)
  - SharpSDL3.Sdl.GetKeyboardState(System.Int32@)
  - SharpSDL3.Sdl.GetKeyboards
  - SharpSDL3.Sdl.GetKeyboards(System.Int32@)
  - SharpSDL3.Sdl.GetLayer(System.IntPtr)
  - SharpSDL3.Sdl.GetLogOutputFunction(SharpSDL3.Delegates.SdlLogOutputFunction@,System.IntPtr@)
  - SharpSDL3.Sdl.GetLogPriority(SharpSDL3.Enums.LogCategory)
  - SharpSDL3.Sdl.GetManufacturerString(System.IntPtr,System.String,System.UIntPtr)
  - SharpSDL3.Sdl.GetMasksForPixelFormat(SharpSDL3.Enums.PixelFormat,System.Int32@,System.UInt32@,System.UInt32@,System.UInt32@,System.UInt32@)
  - SharpSDL3.Sdl.GetMaxHapticEffects(System.IntPtr)
  - SharpSDL3.Sdl.GetMaxHapticEffectsPlaying(System.IntPtr)
  - SharpSDL3.Sdl.GetMice(System.Int32@)
  - SharpSDL3.Sdl.GetModState
  - SharpSDL3.Sdl.GetMonth(System.Int32,System.Boolean)
  - SharpSDL3.Sdl.GetMouseFocus
  - SharpSDL3.Sdl.GetMouseNameForID(System.UInt32)
  - SharpSDL3.Sdl.GetMouseState(System.Single@,System.Single@)
  - SharpSDL3.Sdl.GetNaturalDisplayOrientation(System.UInt32)
  - SharpSDL3.Sdl.GetNumAudioDrivers
  - SharpSDL3.Sdl.GetNumCameraDrivers
  - SharpSDL3.Sdl.GetNumGPUDrivers
  - SharpSDL3.Sdl.GetNumGamepadTouchpadFingers(System.IntPtr,System.Int32)
  - SharpSDL3.Sdl.GetNumGamepadTouchpads(System.IntPtr)
  - SharpSDL3.Sdl.GetNumHapticAxes(System.IntPtr)
  - SharpSDL3.Sdl.GetNumJoystickAxes(System.IntPtr)
  - SharpSDL3.Sdl.GetNumJoystickBalls(System.IntPtr)
  - SharpSDL3.Sdl.GetNumJoystickButtons(System.IntPtr)
  - SharpSDL3.Sdl.GetNumJoystickHats(System.IntPtr)
  - SharpSDL3.Sdl.GetNumLogicalCPUCores
  - SharpSDL3.Sdl.GetNumRenderDrivers
  - SharpSDL3.Sdl.GetNumVideoDrivers
  - SharpSDL3.Sdl.GetNumberProperty(System.UInt32,System.String,System.Int64)
  - SharpSDL3.Sdl.GetPathInfo(System.String,SharpSDL3.Structs.PathInfo@)
  - SharpSDL3.Sdl.GetPerformanceCounter
  - SharpSDL3.Sdl.GetPerformanceFrequency
  - SharpSDL3.Sdl.GetPixelFormatDetails(SharpSDL3.Enums.PixelFormat)
  - SharpSDL3.Sdl.GetPixelFormatForMasks(System.Int32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)
  - SharpSDL3.Sdl.GetPixelFormatName(SharpSDL3.Enums.PixelFormat)
  - SharpSDL3.Sdl.GetPlatform
  - SharpSDL3.Sdl.GetPointerProperty(System.UInt32,System.String,System.IntPtr)
  - SharpSDL3.Sdl.GetPowerInfo(System.Int32@,System.Int32@)
  - SharpSDL3.Sdl.GetPrefPath(System.String,System.String)
  - SharpSDL3.Sdl.GetPreferredLocales
  - SharpSDL3.Sdl.GetPrimaryDisplay
  - SharpSDL3.Sdl.GetPrimarySelectionText
  - SharpSDL3.Sdl.GetProcessInput(System.IntPtr)
  - SharpSDL3.Sdl.GetProcessOutput(System.IntPtr)
  - SharpSDL3.Sdl.GetProcessProperties(System.IntPtr)
  - SharpSDL3.Sdl.GetProductString(System.IntPtr,System.String,System.UIntPtr)
  - SharpSDL3.Sdl.GetPropertyType(System.UInt32,System.String)
  - SharpSDL3.Sdl.GetRealGamepadType(System.IntPtr)
  - SharpSDL3.Sdl.GetRealGamepadTypeForID(System.UInt32)
  - SharpSDL3.Sdl.GetRectAndLineIntersection(SharpSDL3.Structs.Rect@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)
  - SharpSDL3.Sdl.GetRectAndLineIntersectionFloat(SharpSDL3.Structs.FRect@,System.Single@,System.Single@,System.Single@,System.Single@)
  - SharpSDL3.Sdl.GetRectEnclosingPoints(System.Span{SharpSDL3.Structs.Point},System.Int32,SharpSDL3.Structs.Rect@,SharpSDL3.Structs.Rect@)
  - SharpSDL3.Sdl.GetRectEnclosingPointsFloat(System.Span{SharpSDL3.Structs.FPoint},System.Int32,SharpSDL3.Structs.FRect@,SharpSDL3.Structs.FRect@)
  - SharpSDL3.Sdl.GetRectIntersection(SharpSDL3.Structs.Rect@,SharpSDL3.Structs.Rect@,SharpSDL3.Structs.Rect@)
  - SharpSDL3.Sdl.GetRectIntersectionFloat(SharpSDL3.Structs.FRect@,SharpSDL3.Structs.FRect@,SharpSDL3.Structs.FRect@)
  - SharpSDL3.Sdl.GetRectUnion(SharpSDL3.Structs.Rect@,SharpSDL3.Structs.Rect@,SharpSDL3.Structs.Rect@)
  - SharpSDL3.Sdl.GetRectUnionFloat(SharpSDL3.Structs.FRect@,SharpSDL3.Structs.FRect@,SharpSDL3.Structs.FRect@)
  - SharpSDL3.Sdl.GetRelativeMouseState(System.Single@,System.Single@)
  - SharpSDL3.Sdl.GetRenderClipRect(System.IntPtr)
  - SharpSDL3.Sdl.GetRenderClipRect(System.IntPtr,SharpSDL3.Structs.Rect@)
  - SharpSDL3.Sdl.GetRenderColorScale(System.IntPtr)
  - SharpSDL3.Sdl.GetRenderColorScale(System.IntPtr,System.Single@)
  - SharpSDL3.Sdl.GetRenderDrawBlendMode(System.IntPtr,System.IntPtr)
  - SharpSDL3.Sdl.GetRenderDrawColor(System.IntPtr)
  - SharpSDL3.Sdl.GetRenderDrawColor(System.IntPtr,System.Byte@,System.Byte@,System.Byte@,System.Byte@)
  - SharpSDL3.Sdl.GetRenderDrawColorFloat(System.IntPtr)
  - SharpSDL3.Sdl.GetRenderDrawColorFloat(System.IntPtr,System.Single@,System.Single@,System.Single@,System.Single@)
  - SharpSDL3.Sdl.GetRenderDriver(System.Int32)
  - SharpSDL3.Sdl.GetRenderLogicalPresentation(System.IntPtr,SharpSDL3.Enums.RendererLogicalPresentation@)
  - SharpSDL3.Sdl.GetRenderLogicalPresentation(System.IntPtr,System.Int32@,System.Int32@,SharpSDL3.Enums.RendererLogicalPresentation@)
  - SharpSDL3.Sdl.GetRenderLogicalPresentationRect(System.IntPtr)
  - SharpSDL3.Sdl.GetRenderLogicalPresentationRect(System.IntPtr,SharpSDL3.Structs.FRect@)
  - SharpSDL3.Sdl.GetRenderMetalCommandEncoder(System.IntPtr)
  - SharpSDL3.Sdl.GetRenderMetalLayer(System.IntPtr)
  - SharpSDL3.Sdl.GetRenderOutputSize(System.IntPtr)
  - SharpSDL3.Sdl.GetRenderOutputSize(System.IntPtr,System.Int32@,System.Int32@)
  - SharpSDL3.Sdl.GetRenderSafeArea(System.IntPtr)
  - SharpSDL3.Sdl.GetRenderSafeArea(System.IntPtr,SharpSDL3.Structs.Rect@)
  - SharpSDL3.Sdl.GetRenderScale(System.IntPtr)
  - SharpSDL3.Sdl.GetRenderScale(System.IntPtr,System.Single@,System.Single@)
  - SharpSDL3.Sdl.GetRenderTarget(System.IntPtr)
  - SharpSDL3.Sdl.GetRenderVSync(System.IntPtr,System.Int32@)
  - SharpSDL3.Sdl.GetRenderViewport(System.IntPtr,SharpSDL3.Structs.Rect@)
  - SharpSDL3.Sdl.GetRenderVsync(System.IntPtr)
  - SharpSDL3.Sdl.GetRenderWindow(System.IntPtr)
  - SharpSDL3.Sdl.GetRenderer(System.IntPtr)
  - SharpSDL3.Sdl.GetRendererFromTexture(System.IntPtr)
  - SharpSDL3.Sdl.GetRendererName(System.IntPtr)
  - SharpSDL3.Sdl.GetRendererProperties(System.IntPtr)
  - SharpSDL3.Sdl.GetReportDescriptor(System.IntPtr,System.IntPtr,System.UIntPtr)
  - SharpSDL3.Sdl.GetRevision
  - SharpSDL3.Sdl.GetRgb(System.UInt32,System.IntPtr,System.IntPtr)
  - SharpSDL3.Sdl.GetRgba(System.UInt32,System.IntPtr,System.IntPtr)
  - SharpSDL3.Sdl.GetSIMDAlignment
  - SharpSDL3.Sdl.GetSandbox
  - SharpSDL3.Sdl.GetScancodeFromKey(System.UInt32,System.IntPtr)
  - SharpSDL3.Sdl.GetScancodeFromName(System.String)
  - SharpSDL3.Sdl.GetScancodeName(SharpSDL3.Enums.Scancode)
  - SharpSDL3.Sdl.GetSensorData(System.IntPtr,System.IntPtr,System.Int32)
  - SharpSDL3.Sdl.GetSensorFromID(System.UInt32)
  - SharpSDL3.Sdl.GetSensorID(System.IntPtr)
  - SharpSDL3.Sdl.GetSensorName(System.IntPtr)
  - SharpSDL3.Sdl.GetSensorNameForID(System.UInt32)
  - SharpSDL3.Sdl.GetSensorNonPortableType(System.IntPtr)
  - SharpSDL3.Sdl.GetSensorNonPortableTypeForID(System.UInt32)
  - SharpSDL3.Sdl.GetSensorProperties(System.IntPtr)
  - SharpSDL3.Sdl.GetSensorType(System.IntPtr)
  - SharpSDL3.Sdl.GetSensorTypeForID(System.UInt32)
  - SharpSDL3.Sdl.GetSensors(System.Int32@)
  - SharpSDL3.Sdl.GetSerialNumberString(System.IntPtr,System.String,System.UIntPtr)
  - SharpSDL3.Sdl.GetSilenceValueForFormat(SharpSDL3.Enums.AudioFormat)
  - SharpSDL3.Sdl.GetStorageFileSize(System.IntPtr,System.String)
  - SharpSDL3.Sdl.GetStoragePathInfo(System.IntPtr,System.String)
  - SharpSDL3.Sdl.GetStorageSpaceRemaining(System.IntPtr)
  - SharpSDL3.Sdl.GetStringProperty(System.UInt32,System.String,System.String)
  - SharpSDL3.Sdl.GetSurfaceAlphaMod(System.IntPtr,System.Byte@)
  - SharpSDL3.Sdl.GetSurfaceBlendMode(System.IntPtr,System.IntPtr)
  - SharpSDL3.Sdl.GetSurfaceClipRect(System.IntPtr,SharpSDL3.Structs.Rect@)
  - SharpSDL3.Sdl.GetSurfaceColorKey(System.IntPtr,System.UInt32@)
  - SharpSDL3.Sdl.GetSurfaceColorMod(System.IntPtr,System.Byte@,System.Byte@,System.Byte@)
  - SharpSDL3.Sdl.GetSurfaceImages(System.IntPtr,System.Int32@)
  - SharpSDL3.Sdl.GetSurfacePalette(System.IntPtr)
  - SharpSDL3.Sdl.GetSurfaceProperties(System.IntPtr)
  - SharpSDL3.Sdl.GetSystemRAM
  - SharpSDL3.Sdl.GetSystemTheme
  - SharpSDL3.Sdl.GetTextInputArea(System.IntPtr,SharpSDL3.Structs.Rect@,System.Int32@)
  - SharpSDL3.Sdl.GetTextureAlphaMod(System.IntPtr)
  - SharpSDL3.Sdl.GetTextureAlphaMod(System.IntPtr,System.Byte@)
  - SharpSDL3.Sdl.GetTextureAlphaModFloat(System.IntPtr)
  - SharpSDL3.Sdl.GetTextureAlphaModFloat(System.IntPtr,System.Single@)
  - SharpSDL3.Sdl.GetTextureBlendMode(System.IntPtr,System.IntPtr)
  - SharpSDL3.Sdl.GetTextureColorMod(System.IntPtr)
  - SharpSDL3.Sdl.GetTextureColorMod(System.IntPtr,System.Byte@,System.Byte@,System.Byte@)
  - SharpSDL3.Sdl.GetTextureColorModFloat(System.IntPtr)
  - SharpSDL3.Sdl.GetTextureColorModFloat(System.IntPtr,System.Single@,System.Single@,System.Single@)
  - SharpSDL3.Sdl.GetTextureProperties(System.IntPtr)
  - SharpSDL3.Sdl.GetTextureScaleMode(System.IntPtr)
  - SharpSDL3.Sdl.GetTextureScaleMode(System.IntPtr,SharpSDL3.Enums.ScaleMode@)
  - SharpSDL3.Sdl.GetTextureSize(System.IntPtr)
  - SharpSDL3.Sdl.GetTextureSize(System.IntPtr,System.Single@,System.Single@)
  - SharpSDL3.Sdl.GetThreadId(System.IntPtr)
  - SharpSDL3.Sdl.GetThreadName(System.IntPtr)
  - SharpSDL3.Sdl.GetThreadState(System.IntPtr)
  - SharpSDL3.Sdl.GetTicks
  - SharpSDL3.Sdl.GetTicksNS
  - SharpSDL3.Sdl.GetTls(System.IntPtr)
  - SharpSDL3.Sdl.GetTouchDeviceName(System.UInt64)
  - SharpSDL3.Sdl.GetTouchDeviceType(System.UInt64)
  - SharpSDL3.Sdl.GetTouchDevices
  - SharpSDL3.Sdl.GetTouchFingers(System.UInt64)
  - SharpSDL3.Sdl.GetTouchFingers(System.UInt64,System.Int32@)
  - SharpSDL3.Sdl.GetTrayEntries(System.IntPtr)
  - SharpSDL3.Sdl.GetTrayEntryChecked(System.IntPtr)
  - SharpSDL3.Sdl.GetTrayEntryEnabled(System.IntPtr)
  - SharpSDL3.Sdl.GetTrayEntryLabel(System.IntPtr)
  - SharpSDL3.Sdl.GetTrayEntryParent(System.IntPtr)
  - SharpSDL3.Sdl.GetTrayMenu(System.IntPtr)
  - SharpSDL3.Sdl.GetTrayMenuParentEntry(System.IntPtr)
  - SharpSDL3.Sdl.GetTrayMenuParentTray(System.IntPtr)
  - SharpSDL3.Sdl.GetTraySubmenu(System.IntPtr)
  - SharpSDL3.Sdl.GetUserFolder(SharpSDL3.Enums.Folder)
  - SharpSDL3.Sdl.GetValue(System.IntPtr)
  - SharpSDL3.Sdl.GetVersion
  - SharpSDL3.Sdl.GetVideoDriver(System.Int32)
  - SharpSDL3.Sdl.GetWindowAspectRatio(System.IntPtr,System.Single@,System.Single@)
  - SharpSDL3.Sdl.GetWindowBordersSize(System.IntPtr)
  - SharpSDL3.Sdl.GetWindowBordersSize(System.IntPtr,System.Int32@,System.Int32@,System.Int32@,System.Int32@)
  - SharpSDL3.Sdl.GetWindowDisplayScale(System.IntPtr)
  - SharpSDL3.Sdl.GetWindowFlags(System.IntPtr)
  - SharpSDL3.Sdl.GetWindowFromEvent(SharpSDL3.Structs.Event@)
  - SharpSDL3.Sdl.GetWindowFromId(System.UInt32)
  - SharpSDL3.Sdl.GetWindowFullScreenMode(System.IntPtr)
  - SharpSDL3.Sdl.GetWindowFullscreenMode(System.IntPtr)
  - SharpSDL3.Sdl.GetWindowICCProfile(System.IntPtr,System.UIntPtr@)
  - SharpSDL3.Sdl.GetWindowId(System.IntPtr)
  - SharpSDL3.Sdl.GetWindowKeyboardGrab(System.IntPtr)
  - SharpSDL3.Sdl.GetWindowMaximumSize(System.IntPtr)
  - SharpSDL3.Sdl.GetWindowMaximumSize(System.IntPtr,System.Int32@,System.Int32@)
  - SharpSDL3.Sdl.GetWindowMinimumSize(System.IntPtr)
  - SharpSDL3.Sdl.GetWindowMinimumSize(System.IntPtr,System.Int32@,System.Int32@)
  - SharpSDL3.Sdl.GetWindowMouseGrab(System.IntPtr)
  - SharpSDL3.Sdl.GetWindowMouseRect(System.IntPtr)
  - SharpSDL3.Sdl.GetWindowMouseRectPtr(System.IntPtr)
  - SharpSDL3.Sdl.GetWindowOpacity(System.IntPtr)
  - SharpSDL3.Sdl.GetWindowParent(System.IntPtr)
  - SharpSDL3.Sdl.GetWindowPixelDensity(System.IntPtr)
  - SharpSDL3.Sdl.GetWindowPixelFormat(System.IntPtr)
  - SharpSDL3.Sdl.GetWindowPosition(System.IntPtr)
  - SharpSDL3.Sdl.GetWindowPosition(System.IntPtr,System.Int32@,System.Int32@)
  - SharpSDL3.Sdl.GetWindowProperties(System.IntPtr)
  - SharpSDL3.Sdl.GetWindowRelativeMouseMode(System.IntPtr)
  - SharpSDL3.Sdl.GetWindowSafeArea(System.IntPtr)
  - SharpSDL3.Sdl.GetWindowSafeArea(System.IntPtr,SharpSDL3.Structs.Rect@)
  - SharpSDL3.Sdl.GetWindowSize(System.IntPtr)
  - SharpSDL3.Sdl.GetWindowSize(System.IntPtr,System.Int32@,System.Int32@)
  - SharpSDL3.Sdl.GetWindowSizeInPixels(System.IntPtr)
  - SharpSDL3.Sdl.GetWindowSizeInPixels(System.IntPtr,System.Int32@,System.Int32@)
  - SharpSDL3.Sdl.GetWindowSurface(System.IntPtr)
  - SharpSDL3.Sdl.GetWindowSurfaceVSync(System.IntPtr)
  - SharpSDL3.Sdl.GetWindowSurfaceVSync(System.IntPtr,System.Int32@)
  - SharpSDL3.Sdl.GetWindowTitle(System.IntPtr)
  - SharpSDL3.Sdl.GetWindows
  - SharpSDL3.Sdl.GetWindows(System.Int32@)
  - SharpSDL3.Sdl.GlCreateContext(System.IntPtr)
  - SharpSDL3.Sdl.GlDestroyContext(System.IntPtr)
  - SharpSDL3.Sdl.GlExtensionSupported(System.String)
  - SharpSDL3.Sdl.GlGetAttribute(SharpSDL3.Enums.GlAttr,System.Int32@)
  - SharpSDL3.Sdl.GlGetCurrentContext
  - SharpSDL3.Sdl.GlGetCurrentWindow
  - SharpSDL3.Sdl.GlGetProcAddress(System.String)
  - SharpSDL3.Sdl.GlGetSwapInterval(System.Int32@)
  - SharpSDL3.Sdl.GlLoadLibrary(System.String)
  - SharpSDL3.Sdl.GlMakeCurrent(System.IntPtr,System.IntPtr)
  - SharpSDL3.Sdl.GlResetAttributes
  - SharpSDL3.Sdl.GlSetAttribute(SharpSDL3.Enums.GlAttr,System.Int32)
  - SharpSDL3.Sdl.GlSetSwapInterval(System.Int32)
  - SharpSDL3.Sdl.GlSwapWindow(System.IntPtr)
  - SharpSDL3.Sdl.GlUnloadLibrary
  - SharpSDL3.Sdl.GlobStorageDirectory(System.IntPtr,System.String,System.String,SharpSDL3.Enums.GlobFlags,System.Int32@)
  - SharpSDL3.Sdl.GuidToString(SharpSDL3.Structs.SdlGuid,System.String,System.Int32)
  - SharpSDL3.Sdl.HasARMSIMD
  - SharpSDL3.Sdl.HasAVX
  - SharpSDL3.Sdl.HasAVX2
  - SharpSDL3.Sdl.HasAVX512F
  - SharpSDL3.Sdl.HasAltiVec
  - SharpSDL3.Sdl.HasClipboardData(System.String)
  - SharpSDL3.Sdl.HasClipboardText
  - SharpSDL3.Sdl.HasEvent(System.UInt32)
  - SharpSDL3.Sdl.HasEvents(System.UInt32,System.UInt32)
  - SharpSDL3.Sdl.HasJoystick
  - SharpSDL3.Sdl.HasKeyboard
  - SharpSDL3.Sdl.HasLASX
  - SharpSDL3.Sdl.HasLSX
  - SharpSDL3.Sdl.HasMMX
  - SharpSDL3.Sdl.HasMouse
  - SharpSDL3.Sdl.HasNEON
  - SharpSDL3.Sdl.HasPrimarySelectionText
  - SharpSDL3.Sdl.HasProperty(System.UInt32,System.String)
  - SharpSDL3.Sdl.HasRectIntersection(SharpSDL3.Structs.Rect@,SharpSDL3.Structs.Rect@)
  - SharpSDL3.Sdl.HasRectIntersectionFloat(SharpSDL3.Structs.FRect@,SharpSDL3.Structs.FRect@)
  - SharpSDL3.Sdl.HasSSE
  - SharpSDL3.Sdl.HasSSE2
  - SharpSDL3.Sdl.HasSSE3
  - SharpSDL3.Sdl.HasSSE41
  - SharpSDL3.Sdl.HasSSE42
  - SharpSDL3.Sdl.HasScreenKeyboardSupport
  - SharpSDL3.Sdl.HideCursor
  - SharpSDL3.Sdl.HideWindow(System.IntPtr)
  - SharpSDL3.Sdl.IOFromConstMem(System.IntPtr,System.UIntPtr)
  - SharpSDL3.Sdl.IOFromDynamicMem
  - SharpSDL3.Sdl.IOFromFile(System.String,System.String)
  - SharpSDL3.Sdl.IOFromMem(System.IntPtr,System.UIntPtr)
  - SharpSDL3.Sdl.IOprintf(SharpSDL3.Structs.IOStream,System.String)
  - SharpSDL3.Sdl.ImageMajor
  - SharpSDL3.Sdl.ImageMicro
  - SharpSDL3.Sdl.ImageMinor
  - SharpSDL3.Sdl.ImageVersion
  - SharpSDL3.Sdl.ImageVersionAtLeast(System.Int32,System.Int32,System.Int32)
  - SharpSDL3.Sdl.Init
  - SharpSDL3.Sdl.Init(SharpSDL3.Enums.InitFlags)
  - SharpSDL3.Sdl.InitHapticRumble(System.IntPtr)
  - SharpSDL3.Sdl.InitSubSystem(SharpSDL3.Enums.InitFlags)
  - SharpSDL3.Sdl.InsertGPUDebugLabel(System.IntPtr,System.String)
  - SharpSDL3.Sdl.InsertTrayEntryAt(System.IntPtr,System.Int32,System.String,SharpSDL3.Enums.TrayEntryFlags)
  - SharpSDL3.Sdl.IsAVIF(System.IntPtr)
  - SharpSDL3.Sdl.IsAudioDevicePhysical(System.UInt32)
  - SharpSDL3.Sdl.IsAudioDevicePlayback(System.UInt32)
  - SharpSDL3.Sdl.IsBMP(System.IntPtr)
  - SharpSDL3.Sdl.IsCUR(System.IntPtr)
  - SharpSDL3.Sdl.IsGIF(System.IntPtr)
  - SharpSDL3.Sdl.IsGamepad(System.UInt32)
  - SharpSDL3.Sdl.IsHapticEffectSupported(System.IntPtr,SharpSDL3.Structs.HapticEffect@)
  - SharpSDL3.Sdl.IsHapticRumbleSupported(System.IntPtr)
  - SharpSDL3.Sdl.IsICO(System.IntPtr)
  - SharpSDL3.Sdl.IsJPG(System.IntPtr)
  - SharpSDL3.Sdl.IsJXL(System.IntPtr)
  - SharpSDL3.Sdl.IsJoystickHaptic(System.IntPtr)
  - SharpSDL3.Sdl.IsJoystickVirtual(System.UInt32)
  - SharpSDL3.Sdl.IsLBM(System.IntPtr)
  - SharpSDL3.Sdl.IsMainThread
  - SharpSDL3.Sdl.IsMouseHaptic
  - SharpSDL3.Sdl.IsPCX(System.IntPtr)
  - SharpSDL3.Sdl.IsPNG(System.IntPtr)
  - SharpSDL3.Sdl.IsPNM(System.IntPtr)
  - SharpSDL3.Sdl.IsQOI(System.IntPtr)
  - SharpSDL3.Sdl.IsSVG(System.IntPtr)
  - SharpSDL3.Sdl.IsStorageReady(System.IntPtr)
  - SharpSDL3.Sdl.IsTIF(System.IntPtr)
  - SharpSDL3.Sdl.IsTV
  - SharpSDL3.Sdl.IsTablet
  - SharpSDL3.Sdl.IsWEBP(System.IntPtr)
  - SharpSDL3.Sdl.IsXCF(System.IntPtr)
  - SharpSDL3.Sdl.IsXPM(System.IntPtr)
  - SharpSDL3.Sdl.IsXV(System.IntPtr)
  - SharpSDL3.Sdl.JoystickConnected(System.IntPtr)
  - SharpSDL3.Sdl.JoystickEventsEnabled
  - SharpSDL3.Sdl.KillProcess(System.IntPtr,SharpSDL3.Structs.SdlBool)
  - SharpSDL3.Sdl.LoadAnimation(System.String)
  - SharpSDL3.Sdl.LoadAnimationIo(System.IntPtr,System.Boolean)
  - SharpSDL3.Sdl.LoadAnimationTypedIo(System.IntPtr,System.Boolean,System.String)
  - SharpSDL3.Sdl.LoadAvifIo(System.IntPtr)
  - SharpSDL3.Sdl.LoadBmp(System.String)
  - SharpSDL3.Sdl.LoadBmpIO(System.IntPtr,System.Boolean)
  - SharpSDL3.Sdl.LoadBmpIo(System.IntPtr)
  - SharpSDL3.Sdl.LoadCurIo(System.IntPtr)
  - SharpSDL3.Sdl.LoadFile(System.String,System.UIntPtr@)
  - SharpSDL3.Sdl.LoadFileAsync(System.String,System.IntPtr,System.IntPtr)
  - SharpSDL3.Sdl.LoadFileIO(SharpSDL3.Structs.IOStream,System.UIntPtr@,System.Boolean)
  - SharpSDL3.Sdl.LoadFunction(System.IntPtr,System.String)
  - SharpSDL3.Sdl.LoadGifAnimationIo(System.IntPtr)
  - SharpSDL3.Sdl.LoadGifIo(System.IntPtr)
  - SharpSDL3.Sdl.LoadIcoIo(System.IntPtr)
  - SharpSDL3.Sdl.LoadImage(System.String)
  - SharpSDL3.Sdl.LoadImageIo(System.IntPtr,System.Boolean)
  - SharpSDL3.Sdl.LoadJpgIo(System.IntPtr)
  - SharpSDL3.Sdl.LoadJxlIo(System.IntPtr)
  - SharpSDL3.Sdl.LoadLbmIo(System.IntPtr)
  - SharpSDL3.Sdl.LoadObject(System.String)
  - SharpSDL3.Sdl.LoadPcxIo(System.IntPtr)
  - SharpSDL3.Sdl.LoadPngIo(System.IntPtr)
  - SharpSDL3.Sdl.LoadPnmIo(System.IntPtr)
  - SharpSDL3.Sdl.LoadQoiIo(System.IntPtr)
  - SharpSDL3.Sdl.LoadSizedSvgIo(System.IntPtr,System.Int32,System.Int32)
  - SharpSDL3.Sdl.LoadSvgIo(System.IntPtr)
  - SharpSDL3.Sdl.LoadTexture(System.IntPtr,System.String)
  - SharpSDL3.Sdl.LoadTextureIo(System.IntPtr,System.IntPtr,System.Boolean)
  - SharpSDL3.Sdl.LoadTextureTypedIo(System.IntPtr,System.IntPtr,System.Boolean,System.String)
  - SharpSDL3.Sdl.LoadTgaIo(System.IntPtr)
  - SharpSDL3.Sdl.LoadTifIo(System.IntPtr)
  - SharpSDL3.Sdl.LoadTypedImage(System.IntPtr,System.Boolean,System.String)
  - SharpSDL3.Sdl.LoadWav(System.String,SharpSDL3.Structs.AudioSpec@,System.IntPtr@,System.UInt32@)
  - SharpSDL3.Sdl.LoadWavIo(System.IntPtr,SharpSDL3.Structs.SdlBool,SharpSDL3.Structs.AudioSpec@,System.IntPtr@,System.UInt32@)
  - SharpSDL3.Sdl.LoadWebpAnimationIo(System.IntPtr)
  - SharpSDL3.Sdl.LoadWebpIo(System.IntPtr)
  - SharpSDL3.Sdl.LoadXcfIo(System.IntPtr)
  - SharpSDL3.Sdl.LoadXpmIo(System.IntPtr)
  - SharpSDL3.Sdl.LoadXvIo(System.IntPtr)
  - SharpSDL3.Sdl.LockAudioStream(System.IntPtr)
  - SharpSDL3.Sdl.LockJoysticks
  - SharpSDL3.Sdl.LockMutex(System.IntPtr)
  - SharpSDL3.Sdl.LockProperties(System.UInt32)
  - SharpSDL3.Sdl.LockRWLockForReading(System.IntPtr)
  - SharpSDL3.Sdl.LockRWLockForWriting(System.IntPtr)
  - SharpSDL3.Sdl.LockSpinlock(System.IntPtr)
  - SharpSDL3.Sdl.LockSurface(System.IntPtr)
  - SharpSDL3.Sdl.LockTexture(System.IntPtr,SharpSDL3.Structs.Rect@,System.IntPtr@,System.Int32@)
  - SharpSDL3.Sdl.LockTexture(System.IntPtr,System.IntPtr,System.IntPtr@,System.Int32@)
  - SharpSDL3.Sdl.LockTextureToSurface(System.IntPtr,SharpSDL3.Structs.Rect@,System.IntPtr@)
  - SharpSDL3.Sdl.Log(System.String)
  - SharpSDL3.Sdl.LogCritical(SharpSDL3.Enums.LogCategory,System.String)
  - SharpSDL3.Sdl.LogDebug(SharpSDL3.Enums.LogCategory,System.String)
  - SharpSDL3.Sdl.LogError(SharpSDL3.Enums.LogCategory,System.String)
  - SharpSDL3.Sdl.LogInfo(SharpSDL3.Enums.LogCategory,System.String)
  - SharpSDL3.Sdl.LogMessage(SharpSDL3.Enums.LogCategory,SharpSDL3.Enums.LogPriority,System.String)
  - SharpSDL3.Sdl.LogTrace(SharpSDL3.Enums.LogCategory,System.String)
  - SharpSDL3.Sdl.LogVerbose(SharpSDL3.Enums.LogCategory,System.String)
  - SharpSDL3.Sdl.LogWarn(SharpSDL3.Enums.LogCategory,System.String)
  - SharpSDL3.Sdl.Malloc(System.UIntPtr)
  - SharpSDL3.Sdl.MapGPUTransferBuffer(System.IntPtr,System.IntPtr,System.Boolean)
  - SharpSDL3.Sdl.MapRgb(System.IntPtr,System.IntPtr,System.Byte,System.Byte,System.Byte)
  - SharpSDL3.Sdl.MapRgba(System.IntPtr,System.IntPtr,System.Byte,System.Byte,System.Byte,System.Byte)
  - SharpSDL3.Sdl.MapSurfaceRgb(System.IntPtr,SharpSDL3.Structs.Color)
  - SharpSDL3.Sdl.MapSurfaceRgb(System.IntPtr,System.Byte,System.Byte,System.Byte)
  - SharpSDL3.Sdl.MapSurfaceRgba(System.IntPtr,SharpSDL3.Structs.Color)
  - SharpSDL3.Sdl.MapSurfaceRgba(System.IntPtr,System.Byte,System.Byte,System.Byte,System.Byte)
  - SharpSDL3.Sdl.MaximizeWindow(System.IntPtr)
  - SharpSDL3.Sdl.MemoryBarrierAcquire
  - SharpSDL3.Sdl.MemoryBarrierRelease
  - SharpSDL3.Sdl.MinimizeWindow(System.IntPtr)
  - SharpSDL3.Sdl.MixAudio(System.IntPtr,System.IntPtr,SharpSDL3.Enums.AudioFormat,System.UInt32,System.Single)
  - SharpSDL3.Sdl.OnApplicationDidEnterBackground
  - SharpSDL3.Sdl.OnApplicationDidEnterForeground
  - SharpSDL3.Sdl.OnApplicationDidReceiveMemoryWarning
  - SharpSDL3.Sdl.OnApplicationWillEnterBackground
  - SharpSDL3.Sdl.OnApplicationWillEnterForeground
  - SharpSDL3.Sdl.OnApplicationWillTerminate
  - SharpSDL3.Sdl.Open(System.UInt16,System.UInt16,System.String)
  - SharpSDL3.Sdl.OpenAudioDevice(System.UInt32,SharpSDL3.Structs.AudioSpec@)
  - SharpSDL3.Sdl.OpenAudioDeviceStream(System.UInt32,SharpSDL3.Structs.AudioSpec@,SharpSDL3.Delegates.SdlAudioStreamCallback,System.IntPtr)
  - SharpSDL3.Sdl.OpenCamera(System.UInt32,SharpSDL3.Structs.CameraSpec@)
  - SharpSDL3.Sdl.OpenFile(SharpSDL3.Delegates.SdlDialogFileCallback,System.IntPtr,System.IntPtr,System.Span{SharpSDL3.Structs.DialogFileFilter},System.Int32,System.String,SharpSDL3.Structs.SdlBool)
  - SharpSDL3.Sdl.OpenFileStorage(System.String)
  - SharpSDL3.Sdl.OpenFolder(SharpSDL3.Delegates.SdlDialogFileCallback,System.IntPtr,System.IntPtr,System.String,SharpSDL3.Structs.SdlBool)
  - SharpSDL3.Sdl.OpenGamepad(System.UInt32)
  - SharpSDL3.Sdl.OpenHaptic(System.UInt32)
  - SharpSDL3.Sdl.OpenHapticFromJoystick(System.IntPtr)
  - SharpSDL3.Sdl.OpenHapticFromMouse
  - SharpSDL3.Sdl.OpenIO(SharpSDL3.Structs.IOStreamInterface@,System.IntPtr)
  - SharpSDL3.Sdl.OpenJoystick(System.UInt32)
  - SharpSDL3.Sdl.OpenPath(System.String)
  - SharpSDL3.Sdl.OpenSensor(System.UInt32)
  - SharpSDL3.Sdl.OpenStorage(SharpSDL3.Structs.StorageInterface@,System.IntPtr)
  - SharpSDL3.Sdl.OpenTitleStorage(System.String,System.UInt32)
  - SharpSDL3.Sdl.OpenURL(System.String)
  - SharpSDL3.Sdl.OpenUserStorage(System.String,System.String,System.UInt32)
  - SharpSDL3.Sdl.OutOfMemory
  - SharpSDL3.Sdl.PauseAudioDevice(System.UInt32)
  - SharpSDL3.Sdl.PauseAudioStreamDevice(System.IntPtr)
  - SharpSDL3.Sdl.PauseHaptic(System.IntPtr)
  - SharpSDL3.Sdl.PeepEvents(SharpSDL3.Structs.Event[]@,System.Int32,SharpSDL3.Enums.EventAction,SharpSDL3.Enums.EventType,SharpSDL3.Enums.EventType)
  - SharpSDL3.Sdl.PlayHapticRumble(System.IntPtr,System.Single,System.UInt32)
  - SharpSDL3.Sdl.PointerToStructure``1(System.IntPtr)
  - SharpSDL3.Sdl.PollEvent(SharpSDL3.Structs.Event@)
  - SharpSDL3.Sdl.PopGPUDebugGroup(System.IntPtr)
  - SharpSDL3.Sdl.PremultiplyAlpha(SharpSDL3.Structs.Rect,SharpSDL3.Enums.PixelFormat,System.IntPtr,System.Int32,SharpSDL3.Enums.PixelFormat,System.IntPtr,System.Int32,System.Boolean)
  - SharpSDL3.Sdl.PremultiplyAlpha(System.Int32,System.Int32,SharpSDL3.Enums.PixelFormat,System.IntPtr,System.Int32,SharpSDL3.Enums.PixelFormat,System.IntPtr,System.Int32,System.Boolean)
  - SharpSDL3.Sdl.PremultiplySurfaceAlpha(System.IntPtr,System.Boolean)
  - SharpSDL3.Sdl.PumpEvents
  - SharpSDL3.Sdl.PushEvent(SharpSDL3.Structs.Event@)
  - SharpSDL3.Sdl.PushGPUComputeUniformData(System.IntPtr,System.UInt32,System.IntPtr,System.UInt32)
  - SharpSDL3.Sdl.PushGPUDebugGroup(System.IntPtr,System.String)
  - SharpSDL3.Sdl.PushGPUFragmentUniformData(System.IntPtr,System.UInt32,System.IntPtr,System.UInt32)
  - SharpSDL3.Sdl.PushGPUVertexUniformData(System.IntPtr,System.UInt32,System.IntPtr,System.UInt32)
  - SharpSDL3.Sdl.PutAudioStreamData(System.IntPtr,System.IntPtr,System.Int32)
  - SharpSDL3.Sdl.QueryGPUFence(System.IntPtr,System.IntPtr)
  - SharpSDL3.Sdl.Quit
  - SharpSDL3.Sdl.QuitSubSystem(SharpSDL3.Enums.InitFlags)
  - SharpSDL3.Sdl.RaiseWindow(System.IntPtr)
  - SharpSDL3.Sdl.Read(System.IntPtr,System.IntPtr,System.UIntPtr)
  - SharpSDL3.Sdl.ReadAsyncIO(System.IntPtr,System.IntPtr,System.UInt64,System.UInt64,System.IntPtr,System.IntPtr)
  - SharpSDL3.Sdl.ReadIO(SharpSDL3.Structs.IOStream,System.IntPtr,System.UIntPtr)
  - SharpSDL3.Sdl.ReadProcess(System.IntPtr,System.UIntPtr@,System.Int32@)
  - SharpSDL3.Sdl.ReadS16BE(SharpSDL3.Structs.IOStream,System.Int16@)
  - SharpSDL3.Sdl.ReadS16LE(SharpSDL3.Structs.IOStream,System.Int16@)
  - SharpSDL3.Sdl.ReadS32BE(SharpSDL3.Structs.IOStream,System.Int32@)
  - SharpSDL3.Sdl.ReadS32LE(SharpSDL3.Structs.IOStream,System.Int32@)
  - SharpSDL3.Sdl.ReadS64BE(SharpSDL3.Structs.IOStream,System.Int64@)
  - SharpSDL3.Sdl.ReadS64LE(SharpSDL3.Structs.IOStream,System.Int64@)
  - SharpSDL3.Sdl.ReadS8(SharpSDL3.Structs.IOStream,System.SByte@)
  - SharpSDL3.Sdl.ReadStorageFile(System.IntPtr,System.String,System.IntPtr,System.UInt64)
  - SharpSDL3.Sdl.ReadSurfacePixel(System.IntPtr,System.Int32,System.Int32)
  - SharpSDL3.Sdl.ReadSurfacePixel(System.IntPtr,System.Int32,System.Int32,SharpSDL3.Structs.Color@)
  - SharpSDL3.Sdl.ReadSurfacePixel(System.IntPtr,System.Int32,System.Int32,System.Byte@,System.Byte@,System.Byte@,System.Byte@)
  - SharpSDL3.Sdl.ReadSurfacePixelFloat(System.IntPtr,System.Int32,System.Int32)
  - SharpSDL3.Sdl.ReadSurfacePixelFloat(System.IntPtr,System.Int32,System.Int32,SharpSDL3.Structs.FColor@)
  - SharpSDL3.Sdl.ReadSurfacePixelFloat(System.IntPtr,System.Int32,System.Int32,System.Single@,System.Single@,System.Single@,System.Single@)
  - SharpSDL3.Sdl.ReadTimeout(System.IntPtr,System.IntPtr,System.UIntPtr,System.Int32)
  - SharpSDL3.Sdl.ReadU16BE(SharpSDL3.Structs.IOStream,System.UInt16@)
  - SharpSDL3.Sdl.ReadU16LE(SharpSDL3.Structs.IOStream,System.UInt16@)
  - SharpSDL3.Sdl.ReadU32BE(SharpSDL3.Structs.IOStream,System.UInt32@)
  - SharpSDL3.Sdl.ReadU32LE(SharpSDL3.Structs.IOStream,System.UInt32@)
  - SharpSDL3.Sdl.ReadU64BE(SharpSDL3.Structs.IOStream,System.UInt64@)
  - SharpSDL3.Sdl.ReadU64LE(SharpSDL3.Structs.IOStream,System.UInt64@)
  - SharpSDL3.Sdl.ReadU8(SharpSDL3.Structs.IOStream,System.Byte@)
  - SharpSDL3.Sdl.ReadXpmFromArray(System.String[])
  - SharpSDL3.Sdl.ReadXpmFromArrayToRgb888(System.String[])
  - SharpSDL3.Sdl.RegisterEvents(System.Int32)
  - SharpSDL3.Sdl.ReleaseCameraFrame(System.IntPtr,System.IntPtr)
  - SharpSDL3.Sdl.ReleaseGPUBuffer(System.IntPtr,System.IntPtr)
  - SharpSDL3.Sdl.ReleaseGPUComputePipeline(System.IntPtr,System.IntPtr)
  - SharpSDL3.Sdl.ReleaseGPUFence(System.IntPtr,System.IntPtr)
  - SharpSDL3.Sdl.ReleaseGPUGraphicsPipeline(System.IntPtr,System.IntPtr)
  - SharpSDL3.Sdl.ReleaseGPUSampler(System.IntPtr,System.IntPtr)
  - SharpSDL3.Sdl.ReleaseGPUShader(System.IntPtr,System.IntPtr)
  - SharpSDL3.Sdl.ReleaseGPUTexture(System.IntPtr,System.IntPtr)
  - SharpSDL3.Sdl.ReleaseGPUTransferBuffer(System.IntPtr,System.IntPtr)
  - SharpSDL3.Sdl.ReleaseWindowFromGPUDevice(System.IntPtr,System.IntPtr)
  - SharpSDL3.Sdl.RemoveEventWatch(SharpSDL3.Delegates.SdlEventFilter,System.IntPtr)
  - SharpSDL3.Sdl.RemoveHintCallback(System.String,SharpSDL3.Delegates.SdlHintCallback,System.IntPtr)
  - SharpSDL3.Sdl.RemovePath(System.String)
  - SharpSDL3.Sdl.RemoveStoragePath(System.IntPtr,System.String)
  - SharpSDL3.Sdl.RemoveSurfaceAlternateImages(System.IntPtr)
  - SharpSDL3.Sdl.RemoveTimer(System.UInt32)
  - SharpSDL3.Sdl.RemoveTrayEntry(System.IntPtr)
  - SharpSDL3.Sdl.RenamePath(System.String,System.String)
  - SharpSDL3.Sdl.RenameStoragePath(System.IntPtr,System.String,System.String)
  - SharpSDL3.Sdl.RenderClear(System.IntPtr)
  - SharpSDL3.Sdl.RenderClipEnabled(System.IntPtr)
  - SharpSDL3.Sdl.RenderCoordinatesFromWindow(System.IntPtr,SharpSDL3.Structs.FPoint)
  - SharpSDL3.Sdl.RenderCoordinatesFromWindow(System.IntPtr,System.Single,System.Single,System.Single@,System.Single@)
  - SharpSDL3.Sdl.RenderCoordinatesToWindow(System.IntPtr,SharpSDL3.Structs.FPoint)
  - SharpSDL3.Sdl.RenderCoordinatesToWindow(System.IntPtr,System.Single,System.Single)
  - SharpSDL3.Sdl.RenderCoordinatesToWindow(System.IntPtr,System.Single,System.Single,System.Single@,System.Single@)
  - SharpSDL3.Sdl.RenderDebugText(System.IntPtr,SharpSDL3.Structs.FPoint,System.String)
  - SharpSDL3.Sdl.RenderDebugText(System.IntPtr,System.Single,System.Single,System.String)
  - SharpSDL3.Sdl.RenderDebugTextFormat(System.IntPtr,SharpSDL3.Structs.FPoint,System.String)
  - SharpSDL3.Sdl.RenderDebugTextFormat(System.IntPtr,System.Single,System.Single,System.String)
  - SharpSDL3.Sdl.RenderFillRect(System.IntPtr,SharpSDL3.Structs.FRect@)
  - SharpSDL3.Sdl.RenderFillRects(System.IntPtr,SharpSDL3.Structs.FRect[])
  - SharpSDL3.Sdl.RenderFillRects(System.IntPtr,System.Span{SharpSDL3.Structs.FRect})
  - SharpSDL3.Sdl.RenderGeometry(System.IntPtr,System.IntPtr,SharpSDL3.Structs.Vertex[],System.Int32[])
  - SharpSDL3.Sdl.RenderGeometry(System.IntPtr,System.IntPtr,SharpSDL3.Structs.Vertex[],System.Span{System.Int32})
  - SharpSDL3.Sdl.RenderGeometry(System.IntPtr,System.IntPtr,System.Span{SharpSDL3.Structs.Vertex},System.Int32[])
  - SharpSDL3.Sdl.RenderGeometry(System.IntPtr,System.IntPtr,System.Span{SharpSDL3.Structs.Vertex},System.Span{System.Int32})
  - SharpSDL3.Sdl.RenderGeometryRaw(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.Int32,System.IntPtr,System.Int32,System.Int32)
  - SharpSDL3.Sdl.RenderLine(System.IntPtr,SharpSDL3.Structs.FPoint,SharpSDL3.Structs.FPoint)
  - SharpSDL3.Sdl.RenderLine(System.IntPtr,System.Single,System.Single,System.Single,System.Single)
  - SharpSDL3.Sdl.RenderLines(System.IntPtr,SharpSDL3.Structs.FPoint[])
  - SharpSDL3.Sdl.RenderLines(System.IntPtr,System.Span{SharpSDL3.Structs.FPoint})
  - SharpSDL3.Sdl.RenderPoint(System.IntPtr,SharpSDL3.Structs.FPoint)
  - SharpSDL3.Sdl.RenderPoint(System.IntPtr,System.Single,System.Single)
  - SharpSDL3.Sdl.RenderPoints(System.IntPtr,SharpSDL3.Structs.FPoint[])
  - SharpSDL3.Sdl.RenderPoints(System.IntPtr,System.Span{SharpSDL3.Structs.FPoint})
  - SharpSDL3.Sdl.RenderPresent(System.IntPtr)
  - SharpSDL3.Sdl.RenderReadPixels(System.IntPtr,SharpSDL3.Structs.Rect@)
  - SharpSDL3.Sdl.RenderRect(System.IntPtr,SharpSDL3.Structs.FRect@)
  - SharpSDL3.Sdl.RenderRects(System.IntPtr,SharpSDL3.Structs.FRect[])
  - SharpSDL3.Sdl.RenderRects(System.IntPtr,System.Span{SharpSDL3.Structs.FRect})
  - SharpSDL3.Sdl.RenderTexture(System.IntPtr,System.IntPtr,SharpSDL3.Structs.FRect@,SharpSDL3.Structs.FRect@)
  - SharpSDL3.Sdl.RenderTexture(System.IntPtr,System.IntPtr,SharpSDL3.Structs.FRect@,System.IntPtr)
  - SharpSDL3.Sdl.RenderTexture(System.IntPtr,System.IntPtr,System.IntPtr,SharpSDL3.Structs.FRect@)
  - SharpSDL3.Sdl.RenderTexture(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - SharpSDL3.Sdl.RenderTexture9Grid(System.IntPtr,System.IntPtr,SharpSDL3.Structs.FRect@,System.Single,System.Single,System.Single,System.Single,System.Single,SharpSDL3.Structs.FRect@)
  - SharpSDL3.Sdl.RenderTextureAffine(System.IntPtr,System.IntPtr,SharpSDL3.Structs.FRect@,SharpSDL3.Structs.FPoint@,SharpSDL3.Structs.FPoint@,SharpSDL3.Structs.FPoint@)
  - SharpSDL3.Sdl.RenderTextureRotated(System.IntPtr,System.IntPtr,SharpSDL3.Structs.FRect@,SharpSDL3.Structs.FRect@,System.Double,SharpSDL3.Structs.FPoint@,SharpSDL3.Enums.FlipMode)
  - SharpSDL3.Sdl.RenderTextureRotated(System.IntPtr,System.IntPtr,SharpSDL3.Structs.FRect@,System.IntPtr,System.Double,SharpSDL3.Structs.FPoint@,SharpSDL3.Enums.FlipMode)
  - SharpSDL3.Sdl.RenderTextureRotated(System.IntPtr,System.IntPtr,SharpSDL3.Structs.FRect@,System.IntPtr,System.Double,System.IntPtr,SharpSDL3.Enums.FlipMode)
  - SharpSDL3.Sdl.RenderTextureRotated(System.IntPtr,System.IntPtr,System.IntPtr,SharpSDL3.Structs.FRect@,System.Double,SharpSDL3.Structs.FPoint@,SharpSDL3.Enums.FlipMode)
  - SharpSDL3.Sdl.RenderTextureRotated(System.IntPtr,System.IntPtr,System.IntPtr,SharpSDL3.Structs.FRect@,System.Double,System.IntPtr,SharpSDL3.Enums.FlipMode)
  - SharpSDL3.Sdl.RenderTextureTiled(System.IntPtr,System.IntPtr,SharpSDL3.Structs.FRect@,System.Single,SharpSDL3.Structs.FRect@)
  - SharpSDL3.Sdl.RenderViewportSet(System.IntPtr)
  - SharpSDL3.Sdl.ReportAssertion(SharpSDL3.Structs.AssertData@,System.String,System.String,System.Int32)
  - SharpSDL3.Sdl.ResetAssertionReport
  - SharpSDL3.Sdl.ResetHint(System.String)
  - SharpSDL3.Sdl.ResetHints
  - SharpSDL3.Sdl.ResetKeyboard
  - SharpSDL3.Sdl.ResetLogPriorities
  - SharpSDL3.Sdl.RestoreWindow(System.IntPtr)
  - SharpSDL3.Sdl.ResumeAudioDevice(System.UInt32)
  - SharpSDL3.Sdl.ResumeAudioStreamDevice(System.IntPtr)
  - SharpSDL3.Sdl.ResumeHaptic(System.IntPtr)
  - SharpSDL3.Sdl.RumbleGamepad(System.IntPtr,System.UInt16,System.UInt16,System.UInt32)
  - SharpSDL3.Sdl.RumbleGamepadTriggers(System.IntPtr,System.UInt16,System.UInt16,System.UInt32)
  - SharpSDL3.Sdl.RumbleJoystick(System.IntPtr,System.UInt16,System.UInt16,System.UInt32)
  - SharpSDL3.Sdl.RumbleJoystickTriggers(System.IntPtr,System.UInt16,System.UInt16,System.UInt32)
  - SharpSDL3.Sdl.RunApp(System.Int32,System.IntPtr,SharpSDL3.Delegates.SdlMainFunc,System.IntPtr)
  - SharpSDL3.Sdl.RunHapticEffect(System.IntPtr,System.Int32,System.UInt32)
  - SharpSDL3.Sdl.RunOnMainThread(SharpSDL3.Delegates.SdlMainThreadCallback,System.IntPtr,System.Boolean)
  - SharpSDL3.Sdl.SaveAvif(System.IntPtr,System.String,System.Int32)
  - SharpSDL3.Sdl.SaveAvifIo(System.IntPtr,System.IntPtr,System.Boolean,System.Int32)
  - SharpSDL3.Sdl.SaveBmp(System.IntPtr,System.String)
  - SharpSDL3.Sdl.SaveBmpIO(System.IntPtr,System.IntPtr,System.Boolean)
  - SharpSDL3.Sdl.SaveFile(SharpSDL3.Delegates.SdlDialogFileCallback,System.IntPtr,System.IntPtr,System.Span{SharpSDL3.Structs.DialogFileFilter},System.Int32,System.String)
  - SharpSDL3.Sdl.SaveFile(System.String,System.IntPtr,System.UIntPtr)
  - SharpSDL3.Sdl.SaveFileIO(System.IntPtr,System.IntPtr,System.UIntPtr,System.Boolean)
  - SharpSDL3.Sdl.SaveJpg(System.IntPtr,System.String,System.Int32)
  - SharpSDL3.Sdl.SaveJpgIo(System.IntPtr,System.IntPtr,System.Boolean,System.Int32)
  - SharpSDL3.Sdl.SavePng(System.IntPtr,System.String)
  - SharpSDL3.Sdl.SavePngIo(System.IntPtr,System.IntPtr,System.Boolean)
  - SharpSDL3.Sdl.ScaleSurface(System.IntPtr,System.Int32,System.Int32,SharpSDL3.Enums.ScaleMode)
  - SharpSDL3.Sdl.ScreenKeyboardShown(System.IntPtr)
  - SharpSDL3.Sdl.ScreenSaverEnabled
  - SharpSDL3.Sdl.SeekIO(SharpSDL3.Structs.IOStream,System.Int64,SharpSDL3.Enums.IoWhence)
  - SharpSDL3.Sdl.SendFeatureReport(System.IntPtr,System.IntPtr,System.UIntPtr)
  - SharpSDL3.Sdl.SendGamepadEffect(System.IntPtr,System.IntPtr,System.Int32)
  - SharpSDL3.Sdl.SendJoystickEffect(System.IntPtr,System.IntPtr,System.Int32)
  - SharpSDL3.Sdl.SendJoystickVirtualSensorData(System.IntPtr,SharpSDL3.Enums.SensorType,System.UInt64,System.IntPtr,System.Int32)
  - SharpSDL3.Sdl.SendJoystickVirtualSensorData(System.IntPtr,SharpSDL3.Enums.SensorType,System.UInt64,System.Single[])
  - SharpSDL3.Sdl.SetAppMetadata(System.String,System.String,System.String)
  - SharpSDL3.Sdl.SetAppMetadataProperty(System.String,System.String)
  - SharpSDL3.Sdl.SetAssertionHandler(SharpSDL3.Delegates.SdlAssertionHandler,System.IntPtr)
  - SharpSDL3.Sdl.SetAtomicInt(SharpSDL3.Structs.AtomicInt@,System.Int32)
  - SharpSDL3.Sdl.SetAtomicPointer(System.IntPtr@,System.IntPtr)
  - SharpSDL3.Sdl.SetAtomicU32(SharpSDL3.Structs.AtomicU32@,System.UInt32)
  - SharpSDL3.Sdl.SetAudioDeviceGain(System.UInt32,System.Single)
  - SharpSDL3.Sdl.SetAudioPostmixCallback(System.UInt32,SharpSDL3.Delegates.SdlAudioPostmixCallback,System.IntPtr)
  - SharpSDL3.Sdl.SetAudioStreamFormat(System.IntPtr,SharpSDL3.Structs.AudioSpec@,SharpSDL3.Structs.AudioSpec@)
  - SharpSDL3.Sdl.SetAudioStreamFrequencyRatio(System.IntPtr,System.Single)
  - SharpSDL3.Sdl.SetAudioStreamGetCallback(System.IntPtr,SharpSDL3.Delegates.SdlAudioStreamCallback,System.IntPtr)
  - SharpSDL3.Sdl.SetAudioStreamInputChannelMap(System.IntPtr,System.Span{System.Int32},System.Int32)
  - SharpSDL3.Sdl.SetAudioStreamOutputChannelMap(System.IntPtr,System.Span{System.Int32},System.Int32)
  - SharpSDL3.Sdl.SetAudioStreamPutCallback(System.IntPtr,SharpSDL3.Delegates.SdlAudioStreamCallback,System.IntPtr)
  - SharpSDL3.Sdl.SetBooleanProperty(System.UInt32,System.String,System.Boolean)
  - SharpSDL3.Sdl.SetClipboardData(SharpSDL3.Delegates.SdlClipboardDataCallback,SharpSDL3.Delegates.SdlClipboardCleanupCallback,System.IntPtr,System.IntPtr,System.UIntPtr)
  - SharpSDL3.Sdl.SetClipboardText(System.String)
  - SharpSDL3.Sdl.SetCurrentThreadPriority(SharpSDL3.Enums.ThreadPriority)
  - SharpSDL3.Sdl.SetCursor(System.IntPtr)
  - SharpSDL3.Sdl.SetError(System.String,System.Object[])
  - SharpSDL3.Sdl.SetEventEnabled(System.UInt32,System.Boolean)
  - SharpSDL3.Sdl.SetEventFilter(SharpSDL3.Delegates.SdlEventFilter,System.IntPtr)
  - SharpSDL3.Sdl.SetFloatProperty(System.UInt32,System.String,System.Single)
  - SharpSDL3.Sdl.SetGPUAllowedFramesInFlight(System.IntPtr,System.UInt32)
  - SharpSDL3.Sdl.SetGPUBlendConstants(System.IntPtr,SharpSDL3.Structs.FColor)
  - SharpSDL3.Sdl.SetGPUBufferName(System.IntPtr,System.IntPtr,System.String)
  - SharpSDL3.Sdl.SetGPUScissor(System.IntPtr,SharpSDL3.Structs.Rect@)
  - SharpSDL3.Sdl.SetGPUStencilReference(System.IntPtr,System.Byte)
  - SharpSDL3.Sdl.SetGPUSwapchainParameters(System.IntPtr,System.IntPtr,SharpSDL3.Enums.GpuSwapchainComposition,SharpSDL3.Enums.GpuPresentMode)
  - SharpSDL3.Sdl.SetGPUTextureName(System.IntPtr,System.IntPtr,System.String)
  - SharpSDL3.Sdl.SetGPUViewport(System.IntPtr,SharpSDL3.Structs.GpuViewport@)
  - SharpSDL3.Sdl.SetGamepadEventsEnabled(System.Boolean)
  - SharpSDL3.Sdl.SetGamepadLED(System.IntPtr,System.Byte,System.Byte,System.Byte)
  - SharpSDL3.Sdl.SetGamepadMapping(System.UInt32,System.String)
  - SharpSDL3.Sdl.SetGamepadPlayerIndex(System.IntPtr,System.Int32)
  - SharpSDL3.Sdl.SetGamepadSensorEnabled(System.IntPtr,SharpSDL3.Enums.SensorType,System.Boolean)
  - SharpSDL3.Sdl.SetHapticAutocenter(System.IntPtr,System.Int32)
  - SharpSDL3.Sdl.SetHapticGain(System.IntPtr,System.Int32)
  - SharpSDL3.Sdl.SetHint(System.String,System.String)
  - SharpSDL3.Sdl.SetHintWithPriority(System.String,System.String,SharpSDL3.Enums.HintPriority)
  - SharpSDL3.Sdl.SetInitialized(SharpSDL3.Structs.InitState@,SharpSDL3.Structs.SdlBool)
  - SharpSDL3.Sdl.SetJoystickEventsEnabled(System.Boolean)
  - SharpSDL3.Sdl.SetJoystickLED(System.IntPtr,System.Byte,System.Byte,System.Byte)
  - SharpSDL3.Sdl.SetJoystickPlayerIndex(System.IntPtr,System.Int32)
  - SharpSDL3.Sdl.SetJoystickVirtualAxis(System.IntPtr,System.Int32,System.Int16)
  - SharpSDL3.Sdl.SetJoystickVirtualBall(System.IntPtr,System.Int32,System.Int16,System.Int16)
  - SharpSDL3.Sdl.SetJoystickVirtualButton(System.IntPtr,System.Int32,SharpSDL3.Structs.SdlBool)
  - SharpSDL3.Sdl.SetJoystickVirtualHat(System.IntPtr,System.Int32,System.Byte)
  - SharpSDL3.Sdl.SetJoystickVirtualTouchpad(System.IntPtr,System.Int32,System.Int32,SharpSDL3.Structs.SdlBool,System.Single,System.Single,System.Single)
  - SharpSDL3.Sdl.SetLogOutputFunction(SharpSDL3.Delegates.SdlLogOutputFunction,System.IntPtr)
  - SharpSDL3.Sdl.SetLogPriorities(SharpSDL3.Enums.LogPriority)
  - SharpSDL3.Sdl.SetLogPriority(SharpSDL3.Enums.LogCategory,SharpSDL3.Enums.LogPriority)
  - SharpSDL3.Sdl.SetLogPriorityPrefix(SharpSDL3.Enums.LogPriority)
  - SharpSDL3.Sdl.SetLogPriorityPrefix(SharpSDL3.Enums.LogPriority,System.String)
  - SharpSDL3.Sdl.SetMainReady
  - SharpSDL3.Sdl.SetModState(SharpSDL3.Enums.KeyMod)
  - SharpSDL3.Sdl.SetNonblocking(System.IntPtr,System.Int32)
  - SharpSDL3.Sdl.SetNumberProperty(System.UInt32,System.String,System.Int64)
  - SharpSDL3.Sdl.SetPaletteColors(System.IntPtr,System.Span{SharpSDL3.Structs.Color},System.Int32,System.Int32)
  - SharpSDL3.Sdl.SetPointerProperty(System.UInt32,System.String,System.IntPtr)
  - SharpSDL3.Sdl.SetPointerPropertyWithCleanup(System.UInt32,System.String,System.IntPtr,SharpSDL3.Delegates.SdlCleanupPropertyCallback,System.IntPtr)
  - SharpSDL3.Sdl.SetPrimarySelectionText(System.String)
  - SharpSDL3.Sdl.SetRenderClipRect(System.IntPtr,SharpSDL3.Structs.Rect@)
  - SharpSDL3.Sdl.SetRenderColorScale(System.IntPtr,System.Single)
  - SharpSDL3.Sdl.SetRenderDrawBlendMode(System.IntPtr,SharpSDL3.Enums.BlendMode)
  - SharpSDL3.Sdl.SetRenderDrawBlendMode(System.IntPtr,System.UInt32)
  - SharpSDL3.Sdl.SetRenderDrawColor(System.IntPtr,SharpSDL3.Structs.Color)
  - SharpSDL3.Sdl.SetRenderDrawColor(System.IntPtr,System.Byte,System.Byte,System.Byte,System.Byte)
  - SharpSDL3.Sdl.SetRenderDrawColorFloat(System.IntPtr,SharpSDL3.Structs.FColor)
  - SharpSDL3.Sdl.SetRenderDrawColorFloat(System.IntPtr,System.Single,System.Single,System.Single,System.Single)
  - SharpSDL3.Sdl.SetRenderLogicalPresentation(System.IntPtr,System.Int32,System.Int32,SharpSDL3.Enums.RendererLogicalPresentation)
  - SharpSDL3.Sdl.SetRenderScale(System.IntPtr,System.Single,System.Single)
  - SharpSDL3.Sdl.SetRenderTarget(System.IntPtr,System.IntPtr)
  - SharpSDL3.Sdl.SetRenderVSync(System.IntPtr,System.Int32)
  - SharpSDL3.Sdl.SetRenderViewport(System.IntPtr,SharpSDL3.Structs.Rect@)
  - SharpSDL3.Sdl.SetScancodeName(SharpSDL3.Enums.Scancode,System.String)
  - SharpSDL3.Sdl.SetStringProperty(System.UInt32,System.String,System.String)
  - SharpSDL3.Sdl.SetSurfaceAlphaMod(System.IntPtr,System.Byte)
  - SharpSDL3.Sdl.SetSurfaceBlendMode(System.IntPtr,System.UInt32)
  - SharpSDL3.Sdl.SetSurfaceClipRect(System.IntPtr,SharpSDL3.Structs.Rect@)
  - SharpSDL3.Sdl.SetSurfaceColorKey(System.IntPtr,System.Boolean,System.UInt32)
  - SharpSDL3.Sdl.SetSurfaceColorMod(System.IntPtr,SharpSDL3.Structs.Color)
  - SharpSDL3.Sdl.SetSurfaceColorMod(System.IntPtr,System.Byte,System.Byte,System.Byte)
  - SharpSDL3.Sdl.SetSurfaceColorspace(System.IntPtr,SharpSDL3.Enums.Colorspace)
  - SharpSDL3.Sdl.SetSurfacePalette(System.IntPtr,System.IntPtr)
  - SharpSDL3.Sdl.SetSurfaceRLE(System.IntPtr,System.Boolean)
  - SharpSDL3.Sdl.SetTextInputArea(System.IntPtr,SharpSDL3.Structs.Rect@,System.Int32)
  - SharpSDL3.Sdl.SetTextureAlphaMod(System.IntPtr,System.Byte)
  - SharpSDL3.Sdl.SetTextureAlphaModFloat(System.IntPtr,System.Single)
  - SharpSDL3.Sdl.SetTextureBlendMode(System.IntPtr,System.UInt32)
  - SharpSDL3.Sdl.SetTextureColorMod(System.IntPtr,SharpSDL3.Structs.Color)
  - SharpSDL3.Sdl.SetTextureColorMod(System.IntPtr,System.Byte,System.Byte,System.Byte)
  - SharpSDL3.Sdl.SetTextureColorModFloat(System.IntPtr,SharpSDL3.Structs.FColor)
  - SharpSDL3.Sdl.SetTextureColorModFloat(System.IntPtr,System.Single,System.Single,System.Single)
  - SharpSDL3.Sdl.SetTextureScaleMode(System.IntPtr,SharpSDL3.Enums.ScaleMode)
  - SharpSDL3.Sdl.SetTls(System.IntPtr,System.IntPtr,SharpSDL3.Delegates.SdlTlsDestructorCallback)
  - SharpSDL3.Sdl.SetTrayEntryCallback(System.IntPtr,SharpSDL3.Delegates.SdlTrayCallback,System.IntPtr)
  - SharpSDL3.Sdl.SetTrayEntryChecked(System.IntPtr,System.Boolean)
  - SharpSDL3.Sdl.SetTrayEntryEnabled(System.IntPtr,System.Boolean)
  - SharpSDL3.Sdl.SetTrayEntryLabel(System.IntPtr,System.String)
  - SharpSDL3.Sdl.SetTrayIcon(System.IntPtr,System.IntPtr)
  - SharpSDL3.Sdl.SetTrayTooltip(System.IntPtr,System.String)
  - SharpSDL3.Sdl.SetWindowAlwaysOnTop(System.IntPtr,System.Boolean)
  - SharpSDL3.Sdl.SetWindowAspectRatio(System.IntPtr,System.Single,System.Single)
  - SharpSDL3.Sdl.SetWindowBordered(System.IntPtr,System.Boolean)
  - SharpSDL3.Sdl.SetWindowFocusable(System.IntPtr,System.Boolean)
  - SharpSDL3.Sdl.SetWindowFullscreen(System.IntPtr,System.Boolean)
  - SharpSDL3.Sdl.SetWindowFullscreenMode(System.IntPtr,SharpSDL3.Structs.DisplayMode@)
  - SharpSDL3.Sdl.SetWindowHitTest(System.IntPtr,SharpSDL3.Delegates.SdlHitTest,System.IntPtr)
  - SharpSDL3.Sdl.SetWindowIcon(System.IntPtr,System.IntPtr)
  - SharpSDL3.Sdl.SetWindowKeyboardGrab(System.IntPtr,System.Boolean)
  - SharpSDL3.Sdl.SetWindowMaximumSize(System.IntPtr,System.Int32,System.Int32)
  - SharpSDL3.Sdl.SetWindowMinimumSize(System.IntPtr,System.Int32,System.Int32)
  - SharpSDL3.Sdl.SetWindowModal(System.IntPtr,System.Boolean)
  - SharpSDL3.Sdl.SetWindowMouseGrab(System.IntPtr,System.Boolean)
  - SharpSDL3.Sdl.SetWindowMouseRect(System.IntPtr,SharpSDL3.Structs.Rect@)
  - SharpSDL3.Sdl.SetWindowOpacity(System.IntPtr,System.Single)
  - SharpSDL3.Sdl.SetWindowParent(System.IntPtr,System.IntPtr)
  - SharpSDL3.Sdl.SetWindowPosition(System.IntPtr,SharpSDL3.Structs.Point)
  - SharpSDL3.Sdl.SetWindowPosition(System.IntPtr,System.Int32,System.Int32)
  - SharpSDL3.Sdl.SetWindowRelativeMouseMode(System.IntPtr,System.Boolean)
  - SharpSDL3.Sdl.SetWindowResizable(System.IntPtr,System.Boolean)
  - SharpSDL3.Sdl.SetWindowShape(System.IntPtr,System.IntPtr)
  - SharpSDL3.Sdl.SetWindowSize(System.IntPtr,SharpSDL3.Structs.Rect)
  - SharpSDL3.Sdl.SetWindowSize(System.IntPtr,System.Int32,System.Int32)
  - SharpSDL3.Sdl.SetWindowSurfaceVSync(System.IntPtr,System.Int32)
  - SharpSDL3.Sdl.SetWindowTitle(System.IntPtr,System.String)
  - SharpSDL3.Sdl.ShouldInit(SharpSDL3.Structs.InitState@)
  - SharpSDL3.Sdl.ShouldQuit(SharpSDL3.Structs.InitState@)
  - SharpSDL3.Sdl.ShowCursor
  - SharpSDL3.Sdl.ShowFileDialogWithProperties(SharpSDL3.Enums.FileDialogType,SharpSDL3.Delegates.SdlDialogFileCallback,System.IntPtr,System.UInt32)
  - SharpSDL3.Sdl.ShowMessageBox(SharpSDL3.Structs.MessageBoxData@,System.Int32@)
  - SharpSDL3.Sdl.ShowMessageBox(System.IntPtr,System.String,System.String)
  - SharpSDL3.Sdl.ShowMessageBox(System.IntPtr,System.String,System.String,SharpSDL3.Enums.MessageBoxFlags)
  - SharpSDL3.Sdl.ShowMessageBox(System.IntPtr,System.String,System.String,SharpSDL3.Enums.MessageBoxFlags,SharpSDL3.Enums.MessageBoxButtons)
  - SharpSDL3.Sdl.ShowMessageBox(System.IntPtr,System.String,System.String,SharpSDL3.Enums.MessageBoxFlags,SharpSDL3.Enums.MessageBoxButtons,SharpSDL3.Enums.MessageBoxDefaultButton)
  - SharpSDL3.Sdl.ShowMessageBox(System.IntPtr,System.String,System.String,SharpSDL3.Enums.MessageBoxFlags,SharpSDL3.Enums.MessageBoxButtons,SharpSDL3.Enums.MessageBoxDefaultButton,SharpSDL3.Structs.MessageBoxColorScheme@)
  - SharpSDL3.Sdl.ShowMessageBox(System.String)
  - SharpSDL3.Sdl.ShowMessageBox(System.String,System.String)
  - SharpSDL3.Sdl.ShowSimpleMessageBox(SharpSDL3.Enums.MessageBoxFlags,System.String,System.String,System.IntPtr)
  - SharpSDL3.Sdl.ShowWindow(System.IntPtr)
  - SharpSDL3.Sdl.ShowWindowSystemMenu(System.IntPtr,SharpSDL3.Structs.Point)
  - SharpSDL3.Sdl.ShowWindowSystemMenu(System.IntPtr,System.Int32,System.Int32)
  - SharpSDL3.Sdl.Signal(System.IntPtr)
  - SharpSDL3.Sdl.SignalAsyncIOQueue(System.IntPtr)
  - SharpSDL3.Sdl.SignalCondition(System.IntPtr)
  - SharpSDL3.Sdl.SizeOf``1
  - SharpSDL3.Sdl.StartTextInput(System.IntPtr)
  - SharpSDL3.Sdl.StartTextInputWithProperties(System.IntPtr,System.UInt32)
  - SharpSDL3.Sdl.StopHapticEffect(System.IntPtr,System.Int32)
  - SharpSDL3.Sdl.StopHapticEffects(System.IntPtr)
  - SharpSDL3.Sdl.StopHapticRumble(System.IntPtr)
  - SharpSDL3.Sdl.StopTextInput(System.IntPtr)
  - SharpSDL3.Sdl.StringToGUID(System.String)
  - SharpSDL3.Sdl.StructureToPointer``1(``0@)
  - SharpSDL3.Sdl.SubmitGPUCommandBuffer(System.IntPtr)
  - SharpSDL3.Sdl.SubmitGPUCommandBufferAndAcquireFence(System.IntPtr)
  - SharpSDL3.Sdl.SurfaceHasAlternateImages(System.IntPtr)
  - SharpSDL3.Sdl.SurfaceHasColorKey(System.IntPtr)
  - SharpSDL3.Sdl.SurfaceHasRLE(System.IntPtr)
  - SharpSDL3.Sdl.SyncWindow(System.IntPtr)
  - SharpSDL3.Sdl.TellIO(SharpSDL3.Structs.IOStream)
  - SharpSDL3.Sdl.TextInputActive(System.IntPtr)
  - SharpSDL3.Sdl.TimeFromWindows(System.UInt32,System.UInt32)
  - SharpSDL3.Sdl.TimeToDateTime(System.Int64,SharpSDL3.Structs.DateTime@,System.Boolean)
  - SharpSDL3.Sdl.TimeToWindows(System.Int64,System.UInt32@,System.UInt32@)
  - SharpSDL3.Sdl.TryLockMutex(System.IntPtr)
  - SharpSDL3.Sdl.TryLockRWLockForReading(System.IntPtr)
  - SharpSDL3.Sdl.TryLockRWLockForWriting(System.IntPtr)
  - SharpSDL3.Sdl.TryWait(System.IntPtr)
  - SharpSDL3.Sdl.UnbindAudioStream(System.IntPtr)
  - SharpSDL3.Sdl.UnbindAudioStreams(System.Span{System.IntPtr})
  - SharpSDL3.Sdl.UnloadObject(System.IntPtr)
  - SharpSDL3.Sdl.UnlockAudioStream(System.IntPtr)
  - SharpSDL3.Sdl.UnlockJoysticks
  - SharpSDL3.Sdl.UnlockMutex(System.IntPtr)
  - SharpSDL3.Sdl.UnlockProperties(System.UInt32)
  - SharpSDL3.Sdl.UnlockRWLock(System.IntPtr)
  - SharpSDL3.Sdl.UnlockSpinlock(System.IntPtr)
  - SharpSDL3.Sdl.UnlockSurface(System.IntPtr)
  - SharpSDL3.Sdl.UnlockTexture(System.IntPtr)
  - SharpSDL3.Sdl.UnmapGPUTransferBuffer(System.IntPtr,System.IntPtr)
  - SharpSDL3.Sdl.UpdateHapticEffect(System.IntPtr,System.Int32,SharpSDL3.Structs.HapticEffect@)
  - SharpSDL3.Sdl.UpdateJoysticks
  - SharpSDL3.Sdl.UpdateNVTexture(System.IntPtr,SharpSDL3.Structs.Rect@,System.IntPtr,System.Int32,System.IntPtr,System.Int32)
  - SharpSDL3.Sdl.UpdateSensors
  - SharpSDL3.Sdl.UpdateTexture(System.IntPtr,SharpSDL3.Structs.Rect@,System.IntPtr,System.Int32)
  - SharpSDL3.Sdl.UpdateWindowSurface(System.IntPtr)
  - SharpSDL3.Sdl.UpdateWindowSurfaceRects(System.IntPtr,SharpSDL3.Structs.Rect[])
  - SharpSDL3.Sdl.UpdateWindowSurfaceRects(System.IntPtr,System.Span{SharpSDL3.Structs.Rect},System.Int32)
  - SharpSDL3.Sdl.UpdateYUVTexture(System.IntPtr,SharpSDL3.Structs.Rect@,System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.IntPtr,System.Int32)
  - SharpSDL3.Sdl.UploadToGPUBuffer(System.IntPtr,SharpSDL3.Structs.GpuTransferBufferLocation@,SharpSDL3.Structs.GpuBufferRegion@,System.Boolean)
  - SharpSDL3.Sdl.UploadToGPUTexture(System.IntPtr,SharpSDL3.Structs.GpuTextureTransferInfo@,SharpSDL3.Structs.GpuTextureRegion@,System.Boolean)
  - SharpSDL3.Sdl.VersionNum(System.Int32,System.Int32,System.Int32)
  - SharpSDL3.Sdl.Wait(System.IntPtr)
  - SharpSDL3.Sdl.WaitAndAcquireGPUSwapchainTexture(System.IntPtr,System.IntPtr,System.IntPtr@,System.UInt32@,System.UInt32@)
  - SharpSDL3.Sdl.WaitAsyncIOResult(System.IntPtr,SharpSDL3.Structs.AsyncIoOutcome@,System.Int32)
  - SharpSDL3.Sdl.WaitCondition(System.IntPtr,System.IntPtr)
  - SharpSDL3.Sdl.WaitConditionTimeout(System.IntPtr,System.IntPtr,System.Int32)
  - SharpSDL3.Sdl.WaitEvent(SharpSDL3.Structs.Event@)
  - SharpSDL3.Sdl.WaitEventTimeout(SharpSDL3.Structs.Event@,System.Int32)
  - SharpSDL3.Sdl.WaitForGPUFences(System.IntPtr,System.Boolean,System.Span{System.IntPtr},System.UInt32)
  - SharpSDL3.Sdl.WaitForGPUIdle(System.IntPtr)
  - SharpSDL3.Sdl.WaitForGPUSwapchain(System.IntPtr,System.IntPtr)
  - SharpSDL3.Sdl.WaitProcess(System.IntPtr,SharpSDL3.Structs.SdlBool,System.Int32@)
  - SharpSDL3.Sdl.WaitThread(System.IntPtr,System.IntPtr)
  - SharpSDL3.Sdl.WaitTimeout(System.IntPtr,System.Int32)
  - SharpSDL3.Sdl.WarpMouseGlobal(System.Single,System.Single)
  - SharpSDL3.Sdl.WarpMouseInWindow(System.IntPtr,System.Single,System.Single)
  - SharpSDL3.Sdl.WasInit(SharpSDL3.Enums.InitFlags)
  - SharpSDL3.Sdl.WindowHasSurface(System.IntPtr)
  - SharpSDL3.Sdl.WindowSupportsGPUPresentMode(System.IntPtr,System.IntPtr,SharpSDL3.Enums.GpuPresentMode)
  - SharpSDL3.Sdl.WindowSupportsGPUSwapchainComposition(System.IntPtr,System.IntPtr,SharpSDL3.Enums.GpuSwapchainComposition)
  - SharpSDL3.Sdl.Write(System.IntPtr,System.IntPtr,System.UIntPtr)
  - SharpSDL3.Sdl.WriteAsyncIO(System.IntPtr,System.IntPtr,System.UInt64,System.UInt64,System.IntPtr,System.IntPtr)
  - SharpSDL3.Sdl.WriteIO(SharpSDL3.Structs.IOStream,System.IntPtr,System.UIntPtr)
  - SharpSDL3.Sdl.WriteS16BE(SharpSDL3.Structs.IOStream,System.Int16)
  - SharpSDL3.Sdl.WriteS16LE(SharpSDL3.Structs.IOStream,System.Int16)
  - SharpSDL3.Sdl.WriteS32BE(SharpSDL3.Structs.IOStream,System.Int32)
  - SharpSDL3.Sdl.WriteS32LE(SharpSDL3.Structs.IOStream,System.Int32)
  - SharpSDL3.Sdl.WriteS64BE(SharpSDL3.Structs.IOStream,System.Int64)
  - SharpSDL3.Sdl.WriteS64LE(SharpSDL3.Structs.IOStream,System.Int64)
  - SharpSDL3.Sdl.WriteS8(SharpSDL3.Structs.IOStream,System.SByte)
  - SharpSDL3.Sdl.WriteStorageFile(System.IntPtr,System.String,System.IntPtr,System.UInt64)
  - SharpSDL3.Sdl.WriteSurfacePixel(System.IntPtr,SharpSDL3.Structs.Point,SharpSDL3.Structs.Color)
  - SharpSDL3.Sdl.WriteSurfacePixel(System.IntPtr,SharpSDL3.Structs.Point,System.Byte,System.Byte,System.Byte,System.Byte)
  - SharpSDL3.Sdl.WriteSurfacePixel(System.IntPtr,System.Int32,System.Int32,SharpSDL3.Structs.Color)
  - SharpSDL3.Sdl.WriteSurfacePixel(System.IntPtr,System.Int32,System.Int32,System.Byte,System.Byte,System.Byte,System.Byte)
  - SharpSDL3.Sdl.WriteSurfacePixelFloat(System.IntPtr,SharpSDL3.Structs.Point,SharpSDL3.Structs.FColor)
  - SharpSDL3.Sdl.WriteSurfacePixelFloat(System.IntPtr,SharpSDL3.Structs.Point,System.Single,System.Single,System.Single,System.Single)
  - SharpSDL3.Sdl.WriteSurfacePixelFloat(System.IntPtr,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single)
  - SharpSDL3.Sdl.WriteU16BE(SharpSDL3.Structs.IOStream,System.UInt16)
  - SharpSDL3.Sdl.WriteU16LE(SharpSDL3.Structs.IOStream,System.UInt16)
  - SharpSDL3.Sdl.WriteU32BE(SharpSDL3.Structs.IOStream,System.UInt32)
  - SharpSDL3.Sdl.WriteU32LE(SharpSDL3.Structs.IOStream,System.UInt32)
  - SharpSDL3.Sdl.WriteU64BE(SharpSDL3.Structs.IOStream,System.UInt64)
  - SharpSDL3.Sdl.WriteU64LE(SharpSDL3.Structs.IOStream,System.UInt64)
  - SharpSDL3.Sdl.WriteU8(SharpSDL3.Structs.IOStream,System.Byte)
  langs:
  - csharp
  - vb
  name: Sdl
  nameWithType: Sdl
  fullName: SharpSDL3.Sdl
  type: Class
  source:
    id: Sdl
    path: Microsoft.Interop.LibraryImportGenerator\Microsoft.Interop.LibraryImportGenerator\LibraryImports.g.cs
    startLine: 20513
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static class Sdl
    content.vb: Public Module Sdl
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: SharpSDL3.Sdl.GetAssertionHandler(System.IntPtr@)
  commentId: M:SharpSDL3.Sdl.GetAssertionHandler(System.IntPtr@)
  id: GetAssertionHandler(System.IntPtr@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetAssertionHandler(out nint)
  nameWithType: Sdl.GetAssertionHandler(out nint)
  fullName: SharpSDL3.Sdl.GetAssertionHandler(out nint)
  type: Method
  source:
    remote:
      path: SDL3/Assertion.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetAssertionHandler
    path: ../../repos/SDL3-CS/SDL3/Assertion.cs
    startLine: 25
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the current assertion handler.
  remarks: >-
    This returns the function pointer that is called when an assertion is

    triggered. This is either the value last passed to

    SDL_SetAssertionHandler(), or if no

    application-specified function is set, is equivalent to calling

    SDL_GetDefaultAssertionHandler().

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetAssertionHandler(SharpSDL3.Delegates.SdlAssertionHandler%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static Delegates.SdlAssertionHandler GetAssertionHandler(out nint puserdata)
    parameters:
    - id: puserdata
      type: System.IntPtr
      description: pointer which is filled with the "userdata" pointer that was passed to SDL_SetAssertionHandler().
    return:
      type: SharpSDL3.Delegates.SdlAssertionHandler
      description: Returns theSDL_AssertionHandler that is called when an asserttriggers.
    content.vb: Public Shared Function GetAssertionHandler(puserdata As IntPtr) As Delegates.SdlAssertionHandler
  overload: SharpSDL3.Sdl.GetAssertionHandler*
  nameWithType.vb: Sdl.GetAssertionHandler(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetAssertionHandler(System.IntPtr)
  name.vb: GetAssertionHandler(IntPtr)
- uid: SharpSDL3.Sdl.GetAssertionReport
  commentId: M:SharpSDL3.Sdl.GetAssertionReport
  id: GetAssertionReport
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetAssertionReport()
  nameWithType: Sdl.GetAssertionReport()
  fullName: SharpSDL3.Sdl.GetAssertionReport()
  type: Method
  source:
    remote:
      path: SDL3/Assertion.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetAssertionReport
    path: ../../repos/SDL3-CS/SDL3/Assertion.cs
    startLine: 40
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get a list of all assertion failures.
  remarks: >-
    This function gets all assertions triggered since the last call to

    <xref href="SharpSDL3.Sdl.ResetAssertionReport" data-throw-if-not-resolved="false"></xref>, or the start of the

    program.

    <p><strong>Thread Safety:</strong> This function is not thread safe. Other threads calling<xref href="SharpSDL3.Sdl.ResetAssertionReport" data-throw-if-not-resolved="false"></xref> simultaneously, mayrender the returned pointer invalid.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.ResetAssertionReport" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint GetAssertionReport()
    return:
      type: System.IntPtr
      description: (const SDL_AssertData *) Returns a list of all failedassertions or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if the list is empty. This memory should not be modifiedor freed by the application. This pointer remains valid until the next callto <xref href="SharpSDL3.Sdl.Quit" data-throw-if-not-resolved="false"></xref> or <xref href="SharpSDL3.Sdl.ResetAssertionReport" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function GetAssertionReport() As IntPtr
  overload: SharpSDL3.Sdl.GetAssertionReport*
- uid: SharpSDL3.Sdl.GetDefaultAssertionHandler
  commentId: M:SharpSDL3.Sdl.GetDefaultAssertionHandler
  id: GetDefaultAssertionHandler
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetDefaultAssertionHandler()
  nameWithType: Sdl.GetDefaultAssertionHandler()
  fullName: SharpSDL3.Sdl.GetDefaultAssertionHandler()
  type: Method
  source:
    remote:
      path: SDL3/Assertion.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetDefaultAssertionHandler
    path: ../../repos/SDL3-CS/SDL3/Assertion.cs
    startLine: 61
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the default assertion handler.
  remarks: >-
    This returns the function pointer that is called by default when an

    assertion is triggered. This is an internal function provided by SDL, that

    is used for assertions when

    SDL_SetAssertionHandler() hasn't been used to

    provide a different function.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetAssertionHandler(System.IntPtr%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static Delegates.SdlAssertionHandler GetDefaultAssertionHandler()
    return:
      type: SharpSDL3.Delegates.SdlAssertionHandler
      description: Returns the defaultSDL_AssertionHandler that is called when an asserttriggers.
    content.vb: Public Shared Function GetDefaultAssertionHandler() As Delegates.SdlAssertionHandler
  overload: SharpSDL3.Sdl.GetDefaultAssertionHandler*
- uid: SharpSDL3.Sdl.ReportAssertion(SharpSDL3.Structs.AssertData@,System.String,System.String,System.Int32)
  commentId: M:SharpSDL3.Sdl.ReportAssertion(SharpSDL3.Structs.AssertData@,System.String,System.String,System.Int32)
  id: ReportAssertion(SharpSDL3.Structs.AssertData@,System.String,System.String,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ReportAssertion(ref AssertData, string, string, int)
  nameWithType: Sdl.ReportAssertion(ref AssertData, string, string, int)
  fullName: SharpSDL3.Sdl.ReportAssertion(ref SharpSDL3.Structs.AssertData, string, string, int)
  type: Method
  source:
    remote:
      path: SDL3/Assertion.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ReportAssertion
    path: ../../repos/SDL3-CS/SDL3/Assertion.cs
    startLine: 79
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Never call this directly.
  remarks: >-
    Use the SDL_assert macros instead.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static AssertState ReportAssertion(ref AssertData data, string func, string file, int line)
    parameters:
    - id: data
      type: SharpSDL3.Structs.AssertData
      description: assert data structure.
    - id: func
      type: System.String
      description: function name.
    - id: file
      type: System.String
      description: file name.
    - id: line
      type: System.Int32
      description: line number.
    return:
      type: SharpSDL3.Enums.AssertState
      description: Returns assert state.
    content.vb: Public Shared Function ReportAssertion(data As AssertData, func As String, file As String, line As Integer) As AssertState
  overload: SharpSDL3.Sdl.ReportAssertion*
  nameWithType.vb: Sdl.ReportAssertion(AssertData, String, String, Integer)
  fullName.vb: SharpSDL3.Sdl.ReportAssertion(SharpSDL3.Structs.AssertData, String, String, Integer)
  name.vb: ReportAssertion(AssertData, String, String, Integer)
- uid: SharpSDL3.Sdl.ResetAssertionReport
  commentId: M:SharpSDL3.Sdl.ResetAssertionReport
  id: ResetAssertionReport
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ResetAssertionReport()
  nameWithType: Sdl.ResetAssertionReport()
  fullName: SharpSDL3.Sdl.ResetAssertionReport()
  type: Method
  source:
    remote:
      path: SDL3/Assertion.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ResetAssertionReport
    path: ../../repos/SDL3-CS/SDL3/Assertion.cs
    startLine: 126
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Clear the list of all assertion failures.
  remarks: >-
    This function will clear the list of all assertions triggered up to that

    point. Immediately following this call,

    SDL_GetAssertionReport will return no items. In

    addition, any previously-triggered assertions will be reset to a

    trigger_count of zero, and their always_ignore state will be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.

    <p><strong>Thread Safety:</strong> This function is not thread safe. Other threads triggering an assertion, orsimultaneously calling this function may cause memory leaks or crashes.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetAssertionReport" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void ResetAssertionReport()
    content.vb: Public Shared Sub ResetAssertionReport()
  overload: SharpSDL3.Sdl.ResetAssertionReport*
- uid: SharpSDL3.Sdl.SetAssertionHandler(SharpSDL3.Delegates.SdlAssertionHandler,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.SetAssertionHandler(SharpSDL3.Delegates.SdlAssertionHandler,System.IntPtr)
  id: SetAssertionHandler(SharpSDL3.Delegates.SdlAssertionHandler,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetAssertionHandler(SdlAssertionHandler, nint)
  nameWithType: Sdl.SetAssertionHandler(Delegates.SdlAssertionHandler, nint)
  fullName: SharpSDL3.Sdl.SetAssertionHandler(SharpSDL3.Delegates.SdlAssertionHandler, nint)
  type: Method
  source:
    remote:
      path: SDL3/Assertion.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetAssertionHandler
    path: ../../repos/SDL3-CS/SDL3/Assertion.cs
    startLine: 144
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set an application-defined assertion handler.
  remarks: >-
    This function allows an application to show its own assertion UI and/or

    force the response to an assertion failure. If the application doesn't

    provide this, SDL will try to do the right thing, popping up a

    system-specific GUI dialog, and probably minimizing any fullscreen windows.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetAssertionHandler(System.IntPtr%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void SetAssertionHandler(Delegates.SdlAssertionHandler handler, nint userdata)
    parameters:
    - id: handler
      type: SharpSDL3.Delegates.SdlAssertionHandler
      description: the SDL_AssertionHandler function to call when an assertion fails or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for the default handler.
    - id: userdata
      type: System.IntPtr
      description: a pointer that is passed to handler.
    content.vb: Public Shared Sub SetAssertionHandler(handler As Delegates.SdlAssertionHandler, userdata As IntPtr)
  overload: SharpSDL3.Sdl.SetAssertionHandler*
  nameWithType.vb: Sdl.SetAssertionHandler(Delegates.SdlAssertionHandler, IntPtr)
  fullName.vb: SharpSDL3.Sdl.SetAssertionHandler(SharpSDL3.Delegates.SdlAssertionHandler, System.IntPtr)
  name.vb: SetAssertionHandler(SdlAssertionHandler, IntPtr)
- uid: SharpSDL3.Sdl.AsyncIOFromFile(System.String,System.String)
  commentId: M:SharpSDL3.Sdl.AsyncIOFromFile(System.String,System.String)
  id: AsyncIOFromFile(System.String,System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: AsyncIOFromFile(string, string)
  nameWithType: Sdl.AsyncIOFromFile(string, string)
  fullName: SharpSDL3.Sdl.AsyncIOFromFile(string, string)
  type: Method
  source:
    remote:
      path: SDL3/AsyncIO.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: AsyncIOFromFile
    path: ../../repos/SDL3-CS/SDL3/AsyncIO.cs
    startLine: 21
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Use this function to create a new SDL_AsyncIO object for reading from and/or writing to a named file.
  remarks: >-
    The mode string understands the following values:

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CloseAsyncIO(System.IntPtr%2cSharpSDL3.Structs.SdlBool%2cSystem.IntPtr%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.ReadAsyncIO(System.IntPtr%2cSystem.IntPtr%2cSystem.UInt64%2cSystem.UInt64%2cSystem.IntPtr%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.WriteAsyncIO(System.IntPtr%2cSystem.IntPtr%2cSystem.UInt64%2cSystem.UInt64%2cSystem.IntPtr%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint AsyncIOFromFile(string file, string mode)
    parameters:
    - id: file
      type: System.String
      description: a UTF-8 string representing the filename to open.
    - id: mode
      type: System.String
      description: an ASCII string representing the mode to be used for opening the file.
    return:
      type: System.IntPtr
      description: (SDL_AsyncIO *) Returns a pointer to theSDL_AsyncIO structure that is created or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure;call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function AsyncIOFromFile(file As String, mode As String) As IntPtr
  overload: SharpSDL3.Sdl.AsyncIOFromFile*
  nameWithType.vb: Sdl.AsyncIOFromFile(String, String)
  fullName.vb: SharpSDL3.Sdl.AsyncIOFromFile(String, String)
  name.vb: AsyncIOFromFile(String, String)
- uid: SharpSDL3.Sdl.CloseAsyncIO(System.IntPtr,SharpSDL3.Structs.SdlBool,System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.CloseAsyncIO(System.IntPtr,SharpSDL3.Structs.SdlBool,System.IntPtr,System.IntPtr)
  id: CloseAsyncIO(System.IntPtr,SharpSDL3.Structs.SdlBool,System.IntPtr,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CloseAsyncIO(nint, SdlBool, nint, nint)
  nameWithType: Sdl.CloseAsyncIO(nint, SdlBool, nint, nint)
  fullName: SharpSDL3.Sdl.CloseAsyncIO(nint, SharpSDL3.Structs.SdlBool, nint, nint)
  type: Method
  source:
    remote:
      path: SDL3/AsyncIO.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CloseAsyncIO
    path: ../../repos/SDL3-CS/SDL3/AsyncIO.cs
    startLine: 37
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static SdlBool CloseAsyncIO(nint asyncio, SdlBool flush, nint queue, nint userdata)
    parameters:
    - id: asyncio
      type: System.IntPtr
    - id: flush
      type: SharpSDL3.Structs.SdlBool
    - id: queue
      type: System.IntPtr
    - id: userdata
      type: System.IntPtr
    return:
      type: SharpSDL3.Structs.SdlBool
    content.vb: Public Shared Function CloseAsyncIO(asyncio As IntPtr, flush As SdlBool, queue As IntPtr, userdata As IntPtr) As SdlBool
  overload: SharpSDL3.Sdl.CloseAsyncIO*
  nameWithType.vb: Sdl.CloseAsyncIO(IntPtr, SdlBool, IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.CloseAsyncIO(System.IntPtr, SharpSDL3.Structs.SdlBool, System.IntPtr, System.IntPtr)
  name.vb: CloseAsyncIO(IntPtr, SdlBool, IntPtr, IntPtr)
- uid: SharpSDL3.Sdl.CreateAsyncIOQueue
  commentId: M:SharpSDL3.Sdl.CreateAsyncIOQueue
  id: CreateAsyncIOQueue
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CreateAsyncIOQueue()
  nameWithType: Sdl.CreateAsyncIOQueue()
  fullName: SharpSDL3.Sdl.CreateAsyncIOQueue()
  type: Method
  source:
    remote:
      path: SDL3/AsyncIO.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CreateAsyncIOQueue
    path: ../../repos/SDL3-CS/SDL3/AsyncIO.cs
    startLine: 59
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Create a task queue for tracking multiple I/O operations.
  remarks: >-
    Async I/O operations are assigned to a queue when started. The queue can be

    checked for completed tasks thereafter.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.DestroyAsyncIOQueue(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetAsyncIOResult(System.IntPtr%2cSharpSDL3.Structs.AsyncIoOutcome%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.WaitAsyncIOResult(System.IntPtr%2cSharpSDL3.Structs.AsyncIoOutcome%40%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint CreateAsyncIOQueue()
    return:
      type: System.IntPtr
      description: (SDL_AsyncIOQueue *) Returns a new task queue object or<a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if there was an error; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function CreateAsyncIOQueue() As IntPtr
  overload: SharpSDL3.Sdl.CreateAsyncIOQueue*
- uid: SharpSDL3.Sdl.DestroyAsyncIOQueue(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.DestroyAsyncIOQueue(System.IntPtr)
  id: DestroyAsyncIOQueue(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: DestroyAsyncIOQueue(nint)
  nameWithType: Sdl.DestroyAsyncIOQueue(nint)
  fullName: SharpSDL3.Sdl.DestroyAsyncIOQueue(nint)
  type: Method
  source:
    remote:
      path: SDL3/AsyncIO.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: DestroyAsyncIOQueue
    path: ../../repos/SDL3-CS/SDL3/AsyncIO.cs
    startLine: 77
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Destroy a previously-created async I/O task queue.
  remarks: >-
    If there are still tasks pending for this queue, this call will block until

    those tasks are finished. All those tasks will be deallocated. Their

    results will be lost to the app.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread, so long as no otherthread is waiting on the queue withSDL_WaitAsyncIOResult.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static void DestroyAsyncIOQueue(nint queue)
    parameters:
    - id: queue
      type: System.IntPtr
      description: the task queue to destroy.
    content.vb: Public Shared Sub DestroyAsyncIOQueue(queue As IntPtr)
  overload: SharpSDL3.Sdl.DestroyAsyncIOQueue*
  nameWithType.vb: Sdl.DestroyAsyncIOQueue(IntPtr)
  fullName.vb: SharpSDL3.Sdl.DestroyAsyncIOQueue(System.IntPtr)
  name.vb: DestroyAsyncIOQueue(IntPtr)
- uid: SharpSDL3.Sdl.GetAsyncIOResult(System.IntPtr,SharpSDL3.Structs.AsyncIoOutcome@)
  commentId: M:SharpSDL3.Sdl.GetAsyncIOResult(System.IntPtr,SharpSDL3.Structs.AsyncIoOutcome@)
  id: GetAsyncIOResult(System.IntPtr,SharpSDL3.Structs.AsyncIoOutcome@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetAsyncIOResult(nint, out AsyncIoOutcome)
  nameWithType: Sdl.GetAsyncIOResult(nint, out AsyncIoOutcome)
  fullName: SharpSDL3.Sdl.GetAsyncIOResult(nint, out SharpSDL3.Structs.AsyncIoOutcome)
  type: Method
  source:
    remote:
      path: SDL3/AsyncIO.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetAsyncIOResult
    path: ../../repos/SDL3-CS/SDL3/AsyncIO.cs
    startLine: 98
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Query an async I/O task queue for completed tasks.
  remarks: >-
    If a task assigned to this queue has finished, this will return true and

    fill in outcome with the details of the task. If no task in the queue has

    finished, this function will return false. This function does not block.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.WaitAsyncIOResult(System.IntPtr%2cSharpSDL3.Structs.AsyncIoOutcome%40%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static SdlBool GetAsyncIOResult(nint queue, out AsyncIoOutcome outcome)
    parameters:
    - id: queue
      type: System.IntPtr
      description: the async I/O task queue to query.
    - id: outcome
      type: SharpSDL3.Structs.AsyncIoOutcome
      description: details of a finished task will be written here. May not be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if a task has completed, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Public Shared Function GetAsyncIOResult(queue As IntPtr, outcome As AsyncIoOutcome) As SdlBool
  overload: SharpSDL3.Sdl.GetAsyncIOResult*
  nameWithType.vb: Sdl.GetAsyncIOResult(IntPtr, AsyncIoOutcome)
  fullName.vb: SharpSDL3.Sdl.GetAsyncIOResult(System.IntPtr, SharpSDL3.Structs.AsyncIoOutcome)
  name.vb: GetAsyncIOResult(IntPtr, AsyncIoOutcome)
- uid: SharpSDL3.Sdl.GetAsyncIOSize(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetAsyncIOSize(System.IntPtr)
  id: GetAsyncIOSize(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetAsyncIOSize(nint)
  nameWithType: Sdl.GetAsyncIOSize(nint)
  fullName: SharpSDL3.Sdl.GetAsyncIOSize(nint)
  type: Method
  source:
    remote:
      path: SDL3/AsyncIO.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetAsyncIOSize
    path: ../../repos/SDL3-CS/SDL3/AsyncIO.cs
    startLine: 120
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Use this function to get the size of the data stream in an SDL_AsyncIO.
  remarks: >-
    This call is not asynchronous; it assumes that obtaining this info is a

    non-blocking operation in most reasonable cases.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static long GetAsyncIOSize(nint asyncio)
    parameters:
    - id: asyncio
      type: System.IntPtr
      description: the SDL_AsyncIO to get the size of the data stream from.
    return:
      type: System.Int64
      description: Returns the size of the data stream in theSDL_IOStream on success or a negative error code on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetAsyncIOSize(asyncio As IntPtr) As Long
  overload: SharpSDL3.Sdl.GetAsyncIOSize*
  nameWithType.vb: Sdl.GetAsyncIOSize(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetAsyncIOSize(System.IntPtr)
  name.vb: GetAsyncIOSize(IntPtr)
- uid: SharpSDL3.Sdl.LoadFileAsync(System.String,System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.LoadFileAsync(System.String,System.IntPtr,System.IntPtr)
  id: LoadFileAsync(System.String,System.IntPtr,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LoadFileAsync(string, nint, nint)
  nameWithType: Sdl.LoadFileAsync(string, nint, nint)
  fullName: SharpSDL3.Sdl.LoadFileAsync(string, nint, nint)
  type: Method
  source:
    remote:
      path: SDL3/AsyncIO.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LoadFileAsync
    path: ../../repos/SDL3-CS/SDL3/AsyncIO.cs
    startLine: 139
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Load all the data from a file path, asynchronously.
  remarks: >-
    This function returns as quickly as possible; it does not wait for the read

    to complete. On a successful return, this work will continue in the

    background. If the work begins, even failure is asynchronous: a failing

    return value from this function only means the work couldn't start at all.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    LoadFile_IO
  example: []
  syntax:
    content: public static SdlBool LoadFileAsync(string file, nint queue, nint userdata)
    parameters:
    - id: file
      type: System.String
      description: the path to read all available data from.
    - id: queue
      type: System.IntPtr
      description: a queue to add the new SDL_AsyncIO to.
    - id: userdata
      type: System.IntPtr
      description: an app-defined pointer that will be provided with the task results.
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function LoadFileAsync(file As String, queue As IntPtr, userdata As IntPtr) As SdlBool
  overload: SharpSDL3.Sdl.LoadFileAsync*
  nameWithType.vb: Sdl.LoadFileAsync(String, IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.LoadFileAsync(String, System.IntPtr, System.IntPtr)
  name.vb: LoadFileAsync(String, IntPtr, IntPtr)
- uid: SharpSDL3.Sdl.ReadAsyncIO(System.IntPtr,System.IntPtr,System.UInt64,System.UInt64,System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.ReadAsyncIO(System.IntPtr,System.IntPtr,System.UInt64,System.UInt64,System.IntPtr,System.IntPtr)
  id: ReadAsyncIO(System.IntPtr,System.IntPtr,System.UInt64,System.UInt64,System.IntPtr,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ReadAsyncIO(nint, nint, ulong, ulong, nint, nint)
  nameWithType: Sdl.ReadAsyncIO(nint, nint, ulong, ulong, nint, nint)
  fullName: SharpSDL3.Sdl.ReadAsyncIO(nint, nint, ulong, ulong, nint, nint)
  type: Method
  source:
    remote:
      path: SDL3/AsyncIO.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ReadAsyncIO
    path: ../../repos/SDL3-CS/SDL3/AsyncIO.cs
    startLine: 149
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static SdlBool ReadAsyncIO(nint asyncio, nint ptr, ulong offset, ulong size, nint queue, nint userdata)
    parameters:
    - id: asyncio
      type: System.IntPtr
    - id: ptr
      type: System.IntPtr
    - id: offset
      type: System.UInt64
    - id: size
      type: System.UInt64
    - id: queue
      type: System.IntPtr
    - id: userdata
      type: System.IntPtr
    return:
      type: SharpSDL3.Structs.SdlBool
    content.vb: Public Shared Function ReadAsyncIO(asyncio As IntPtr, ptr As IntPtr, offset As ULong, size As ULong, queue As IntPtr, userdata As IntPtr) As SdlBool
  overload: SharpSDL3.Sdl.ReadAsyncIO*
  nameWithType.vb: Sdl.ReadAsyncIO(IntPtr, IntPtr, ULong, ULong, IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.ReadAsyncIO(System.IntPtr, System.IntPtr, ULong, ULong, System.IntPtr, System.IntPtr)
  name.vb: ReadAsyncIO(IntPtr, IntPtr, ULong, ULong, IntPtr, IntPtr)
- uid: SharpSDL3.Sdl.SignalAsyncIOQueue(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.SignalAsyncIOQueue(System.IntPtr)
  id: SignalAsyncIOQueue(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SignalAsyncIOQueue(nint)
  nameWithType: Sdl.SignalAsyncIOQueue(nint)
  fullName: SharpSDL3.Sdl.SignalAsyncIOQueue(nint)
  type: Method
  source:
    remote:
      path: SDL3/AsyncIO.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SignalAsyncIOQueue
    path: ../../repos/SDL3-CS/SDL3/AsyncIO.cs
    startLine: 174
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Wake up any threads that are blocking in SDL_WaitAsyncIOResult().
  remarks: >-
    This will unblock any threads that are sleeping in a call to

    SDL_WaitAsyncIOResult for the specified queue, and

    cause them to return from that function.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.WaitAsyncIOResult(System.IntPtr%2cSharpSDL3.Structs.AsyncIoOutcome%40%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void SignalAsyncIOQueue(nint queue)
    parameters:
    - id: queue
      type: System.IntPtr
      description: the async I/O task queue to signal.
    content.vb: Public Shared Sub SignalAsyncIOQueue(queue As IntPtr)
  overload: SharpSDL3.Sdl.SignalAsyncIOQueue*
  nameWithType.vb: Sdl.SignalAsyncIOQueue(IntPtr)
  fullName.vb: SharpSDL3.Sdl.SignalAsyncIOQueue(System.IntPtr)
  name.vb: SignalAsyncIOQueue(IntPtr)
- uid: SharpSDL3.Sdl.WaitAsyncIOResult(System.IntPtr,SharpSDL3.Structs.AsyncIoOutcome@,System.Int32)
  commentId: M:SharpSDL3.Sdl.WaitAsyncIOResult(System.IntPtr,SharpSDL3.Structs.AsyncIoOutcome@,System.Int32)
  id: WaitAsyncIOResult(System.IntPtr,SharpSDL3.Structs.AsyncIoOutcome@,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: WaitAsyncIOResult(nint, out AsyncIoOutcome, int)
  nameWithType: Sdl.WaitAsyncIOResult(nint, out AsyncIoOutcome, int)
  fullName: SharpSDL3.Sdl.WaitAsyncIOResult(nint, out SharpSDL3.Structs.AsyncIoOutcome, int)
  type: Method
  source:
    remote:
      path: SDL3/AsyncIO.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: WaitAsyncIOResult
    path: ../../repos/SDL3-CS/SDL3/AsyncIO.cs
    startLine: 195
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Block until an async I/O task queue has a completed task.
  remarks: >-
    This function puts the calling thread to sleep until there a task assigned

    to the queue that has finished.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SignalAsyncIOQueue(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static SdlBool WaitAsyncIOResult(nint queue, out AsyncIoOutcome outcome, int timeoutMs)
    parameters:
    - id: queue
      type: System.IntPtr
      description: the async I/O task queue to wait on.
    - id: outcome
      type: SharpSDL3.Structs.AsyncIoOutcome
      description: details of a finished task will be written here. May not be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    - id: timeoutMs
      type: System.Int32
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if task has completed, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Public Shared Function WaitAsyncIOResult(queue As IntPtr, outcome As AsyncIoOutcome, timeoutMs As Integer) As SdlBool
  overload: SharpSDL3.Sdl.WaitAsyncIOResult*
  nameWithType.vb: Sdl.WaitAsyncIOResult(IntPtr, AsyncIoOutcome, Integer)
  fullName.vb: SharpSDL3.Sdl.WaitAsyncIOResult(System.IntPtr, SharpSDL3.Structs.AsyncIoOutcome, Integer)
  name.vb: WaitAsyncIOResult(IntPtr, AsyncIoOutcome, Integer)
- uid: SharpSDL3.Sdl.WriteAsyncIO(System.IntPtr,System.IntPtr,System.UInt64,System.UInt64,System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.WriteAsyncIO(System.IntPtr,System.IntPtr,System.UInt64,System.UInt64,System.IntPtr,System.IntPtr)
  id: WriteAsyncIO(System.IntPtr,System.IntPtr,System.UInt64,System.UInt64,System.IntPtr,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: WriteAsyncIO(nint, nint, ulong, ulong, nint, nint)
  nameWithType: Sdl.WriteAsyncIO(nint, nint, ulong, ulong, nint, nint)
  fullName: SharpSDL3.Sdl.WriteAsyncIO(nint, nint, ulong, ulong, nint, nint)
  type: Method
  source:
    remote:
      path: SDL3/AsyncIO.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: WriteAsyncIO
    path: ../../repos/SDL3-CS/SDL3/AsyncIO.cs
    startLine: 203
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static SdlBool WriteAsyncIO(nint asyncio, nint ptr, ulong offset, ulong size, nint queue, nint userdata)
    parameters:
    - id: asyncio
      type: System.IntPtr
    - id: ptr
      type: System.IntPtr
    - id: offset
      type: System.UInt64
    - id: size
      type: System.UInt64
    - id: queue
      type: System.IntPtr
    - id: userdata
      type: System.IntPtr
    return:
      type: SharpSDL3.Structs.SdlBool
    content.vb: Public Shared Function WriteAsyncIO(asyncio As IntPtr, ptr As IntPtr, offset As ULong, size As ULong, queue As IntPtr, userdata As IntPtr) As SdlBool
  overload: SharpSDL3.Sdl.WriteAsyncIO*
  nameWithType.vb: Sdl.WriteAsyncIO(IntPtr, IntPtr, ULong, ULong, IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.WriteAsyncIO(System.IntPtr, System.IntPtr, ULong, ULong, System.IntPtr, System.IntPtr)
  name.vb: WriteAsyncIO(IntPtr, IntPtr, ULong, ULong, IntPtr, IntPtr)
- uid: SharpSDL3.Sdl.AddAtomicInt(SharpSDL3.Structs.AtomicInt@,System.Int32)
  commentId: M:SharpSDL3.Sdl.AddAtomicInt(SharpSDL3.Structs.AtomicInt@,System.Int32)
  id: AddAtomicInt(SharpSDL3.Structs.AtomicInt@,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: AddAtomicInt(ref AtomicInt, int)
  nameWithType: Sdl.AddAtomicInt(ref AtomicInt, int)
  fullName: SharpSDL3.Sdl.AddAtomicInt(ref SharpSDL3.Structs.AtomicInt, int)
  type: Method
  source:
    remote:
      path: SDL3/Atomic.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: AddAtomicInt
    path: ../../repos/SDL3-CS/SDL3/Atomic.cs
    startLine: 23
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Add to an atomic variable.
  remarks: >-
    This function also acts as a full memory barrier.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    AtomicDecRef

    AtomicIncRef
  example: []
  syntax:
    content: public static int AddAtomicInt(ref AtomicInt a, int v)
    parameters:
    - id: a
      type: SharpSDL3.Structs.AtomicInt
      description: a pointer to an SDL_AtomicInt variable to be modified.
    - id: v
      type: System.Int32
      description: the desired value to add.
    return:
      type: System.Int32
      description: Returns the previous value of the atomic variable.
    content.vb: Public Shared Function AddAtomicInt(a As AtomicInt, v As Integer) As Integer
  overload: SharpSDL3.Sdl.AddAtomicInt*
  nameWithType.vb: Sdl.AddAtomicInt(AtomicInt, Integer)
  fullName.vb: SharpSDL3.Sdl.AddAtomicInt(SharpSDL3.Structs.AtomicInt, Integer)
  name.vb: AddAtomicInt(AtomicInt, Integer)
- uid: SharpSDL3.Sdl.CompareAndSwapAtomicInt(SharpSDL3.Structs.AtomicInt@,System.Int32,System.Int32)
  commentId: M:SharpSDL3.Sdl.CompareAndSwapAtomicInt(SharpSDL3.Structs.AtomicInt@,System.Int32,System.Int32)
  id: CompareAndSwapAtomicInt(SharpSDL3.Structs.AtomicInt@,System.Int32,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CompareAndSwapAtomicInt(ref AtomicInt, int, int)
  nameWithType: Sdl.CompareAndSwapAtomicInt(ref AtomicInt, int, int)
  fullName: SharpSDL3.Sdl.CompareAndSwapAtomicInt(ref SharpSDL3.Structs.AtomicInt, int, int)
  type: Method
  source:
    remote:
      path: SDL3/Atomic.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CompareAndSwapAtomicInt
    path: ../../repos/SDL3-CS/SDL3/Atomic.cs
    startLine: 47
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set an atomic variable to a new value if it is currently an old value.
  remarks: >-
    Note: If you don't know what this function is for, you shouldn't use

    it!

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetAtomicInt(SharpSDL3.Structs.AtomicInt%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetAtomicInt(SharpSDL3.Structs.AtomicInt%40%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool CompareAndSwapAtomicInt(ref AtomicInt a, int oldval, int newval)
    parameters:
    - id: a
      type: SharpSDL3.Structs.AtomicInt
      description: a pointer to an SDL_AtomicInt variable to be modified.
    - id: oldval
      type: System.Int32
      description: the old value.
    - id: newval
      type: System.Int32
      description: the new value.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the atomic variable was set, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Public Shared Function CompareAndSwapAtomicInt(a As AtomicInt, oldval As Integer, newval As Integer) As Boolean
  overload: SharpSDL3.Sdl.CompareAndSwapAtomicInt*
  nameWithType.vb: Sdl.CompareAndSwapAtomicInt(AtomicInt, Integer, Integer)
  fullName.vb: SharpSDL3.Sdl.CompareAndSwapAtomicInt(SharpSDL3.Structs.AtomicInt, Integer, Integer)
  name.vb: CompareAndSwapAtomicInt(AtomicInt, Integer, Integer)
- uid: SharpSDL3.Sdl.CompareAndSwapAtomicPointer(System.IntPtr@,System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.CompareAndSwapAtomicPointer(System.IntPtr@,System.IntPtr,System.IntPtr)
  id: CompareAndSwapAtomicPointer(System.IntPtr@,System.IntPtr,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CompareAndSwapAtomicPointer(ref nint, nint, nint)
  nameWithType: Sdl.CompareAndSwapAtomicPointer(ref nint, nint, nint)
  fullName: SharpSDL3.Sdl.CompareAndSwapAtomicPointer(ref nint, nint, nint)
  type: Method
  source:
    remote:
      path: SDL3/Atomic.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CompareAndSwapAtomicPointer
    path: ../../repos/SDL3-CS/SDL3/Atomic.cs
    startLine: 72
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set a pointer to a new value if it is currently an old value.
  remarks: >-
    Note: If you don't know what this function is for, you shouldn't use

    it!

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CompareAndSwapAtomicInt(SharpSDL3.Structs.AtomicInt%40%2cSystem.Int32%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetAtomicPointer(System.IntPtr%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetAtomicPointer(System.IntPtr%40%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool CompareAndSwapAtomicPointer(ref nint a, nint oldval, nint newval)
    parameters:
    - id: a
      type: System.IntPtr
      description: a pointer to a pointer.
    - id: oldval
      type: System.IntPtr
      description: the old pointer value.
    - id: newval
      type: System.IntPtr
      description: the new pointer value.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the pointer was set, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Public Shared Function CompareAndSwapAtomicPointer(a As IntPtr, oldval As IntPtr, newval As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.CompareAndSwapAtomicPointer*
  nameWithType.vb: Sdl.CompareAndSwapAtomicPointer(IntPtr, IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.CompareAndSwapAtomicPointer(System.IntPtr, System.IntPtr, System.IntPtr)
  name.vb: CompareAndSwapAtomicPointer(IntPtr, IntPtr, IntPtr)
- uid: SharpSDL3.Sdl.CompareAndSwapAtomicU32(SharpSDL3.Structs.AtomicU32@,System.UInt32,System.UInt32)
  commentId: M:SharpSDL3.Sdl.CompareAndSwapAtomicU32(SharpSDL3.Structs.AtomicU32@,System.UInt32,System.UInt32)
  id: CompareAndSwapAtomicU32(SharpSDL3.Structs.AtomicU32@,System.UInt32,System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CompareAndSwapAtomicU32(ref AtomicU32, uint, uint)
  nameWithType: Sdl.CompareAndSwapAtomicU32(ref AtomicU32, uint, uint)
  fullName: SharpSDL3.Sdl.CompareAndSwapAtomicU32(ref SharpSDL3.Structs.AtomicU32, uint, uint)
  type: Method
  source:
    remote:
      path: SDL3/Atomic.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CompareAndSwapAtomicU32
    path: ../../repos/SDL3-CS/SDL3/Atomic.cs
    startLine: 96
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set an atomic variable to a new value if it is currently an old value.
  remarks: >-
    Note: If you don't know what this function is for, you shouldn't use

    it!

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetAtomicU32(SharpSDL3.Structs.AtomicU32%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetAtomicU32(SharpSDL3.Structs.AtomicU32%40%2cSystem.UInt32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool CompareAndSwapAtomicU32(ref AtomicU32 a, uint oldval, uint newval)
    parameters:
    - id: a
      type: SharpSDL3.Structs.AtomicU32
      description: a pointer to an SDL_AtomicU32 variable to be modified.
    - id: oldval
      type: System.UInt32
      description: the old value.
    - id: newval
      type: System.UInt32
      description: the new value.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the atomic variable was set, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Public Shared Function CompareAndSwapAtomicU32(a As AtomicU32, oldval As UInteger, newval As UInteger) As Boolean
  overload: SharpSDL3.Sdl.CompareAndSwapAtomicU32*
  nameWithType.vb: Sdl.CompareAndSwapAtomicU32(AtomicU32, UInteger, UInteger)
  fullName.vb: SharpSDL3.Sdl.CompareAndSwapAtomicU32(SharpSDL3.Structs.AtomicU32, UInteger, UInteger)
  name.vb: CompareAndSwapAtomicU32(AtomicU32, UInteger, UInteger)
- uid: SharpSDL3.Sdl.GetAtomicInt(SharpSDL3.Structs.AtomicInt@)
  commentId: M:SharpSDL3.Sdl.GetAtomicInt(SharpSDL3.Structs.AtomicInt@)
  id: GetAtomicInt(SharpSDL3.Structs.AtomicInt@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetAtomicInt(ref AtomicInt)
  nameWithType: Sdl.GetAtomicInt(ref AtomicInt)
  fullName: SharpSDL3.Sdl.GetAtomicInt(ref SharpSDL3.Structs.AtomicInt)
  type: Method
  source:
    remote:
      path: SDL3/Atomic.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetAtomicInt
    path: ../../repos/SDL3-CS/SDL3/Atomic.cs
    startLine: 117
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the value of an atomic variable.
  remarks: >-
    Note: If you don't know what this function is for, you shouldn't use

    it!

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetAtomicInt(SharpSDL3.Structs.AtomicInt%40%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static int GetAtomicInt(ref AtomicInt a)
    parameters:
    - id: a
      type: SharpSDL3.Structs.AtomicInt
      description: a pointer to an SDL_AtomicInt variable.
    return:
      type: System.Int32
      description: Returns the current value of an atomic variable.
    content.vb: Public Shared Function GetAtomicInt(a As AtomicInt) As Integer
  overload: SharpSDL3.Sdl.GetAtomicInt*
  nameWithType.vb: Sdl.GetAtomicInt(AtomicInt)
  fullName.vb: SharpSDL3.Sdl.GetAtomicInt(SharpSDL3.Structs.AtomicInt)
  name.vb: GetAtomicInt(AtomicInt)
- uid: SharpSDL3.Sdl.GetAtomicPointer(System.IntPtr@)
  commentId: M:SharpSDL3.Sdl.GetAtomicPointer(System.IntPtr@)
  id: GetAtomicPointer(System.IntPtr@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetAtomicPointer(ref nint)
  nameWithType: Sdl.GetAtomicPointer(ref nint)
  fullName: SharpSDL3.Sdl.GetAtomicPointer(ref nint)
  type: Method
  source:
    remote:
      path: SDL3/Atomic.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetAtomicPointer
    path: ../../repos/SDL3-CS/SDL3/Atomic.cs
    startLine: 139
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the value of a pointer atomically.
  remarks: >-
    Note: If you don't know what this function is for, you shouldn't use

    it!

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CompareAndSwapAtomicPointer(System.IntPtr%40%2cSystem.IntPtr%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetAtomicPointer(System.IntPtr%40%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint GetAtomicPointer(ref nint a)
    parameters:
    - id: a
      type: System.IntPtr
      description: a pointer to a pointer.
    return:
      type: System.IntPtr
      description: (void *) Returns the current value of a pointer.
    content.vb: Public Shared Function GetAtomicPointer(a As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.GetAtomicPointer*
  nameWithType.vb: Sdl.GetAtomicPointer(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetAtomicPointer(System.IntPtr)
  name.vb: GetAtomicPointer(IntPtr)
- uid: SharpSDL3.Sdl.GetAtomicU32(SharpSDL3.Structs.AtomicU32@)
  commentId: M:SharpSDL3.Sdl.GetAtomicU32(SharpSDL3.Structs.AtomicU32@)
  id: GetAtomicU32(SharpSDL3.Structs.AtomicU32@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetAtomicU32(ref AtomicU32)
  nameWithType: Sdl.GetAtomicU32(ref AtomicU32)
  fullName: SharpSDL3.Sdl.GetAtomicU32(ref SharpSDL3.Structs.AtomicU32)
  type: Method
  source:
    remote:
      path: SDL3/Atomic.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetAtomicU32
    path: ../../repos/SDL3-CS/SDL3/Atomic.cs
    startLine: 160
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the value of an atomic variable.
  remarks: >-
    Note: If you don't know what this function is for, you shouldn't use

    it!

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetAtomicU32(SharpSDL3.Structs.AtomicU32%40%2cSystem.UInt32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static uint GetAtomicU32(ref AtomicU32 a)
    parameters:
    - id: a
      type: SharpSDL3.Structs.AtomicU32
      description: a pointer to an SDL_AtomicU32 variable.
    return:
      type: System.UInt32
      description: Returns the current value of an atomic variable.
    content.vb: Public Shared Function GetAtomicU32(a As AtomicU32) As UInteger
  overload: SharpSDL3.Sdl.GetAtomicU32*
  nameWithType.vb: Sdl.GetAtomicU32(AtomicU32)
  fullName.vb: SharpSDL3.Sdl.GetAtomicU32(SharpSDL3.Structs.AtomicU32)
  name.vb: GetAtomicU32(AtomicU32)
- uid: SharpSDL3.Sdl.LockSpinlock(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.LockSpinlock(System.IntPtr)
  id: LockSpinlock(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LockSpinlock(nint)
  nameWithType: Sdl.LockSpinlock(nint)
  fullName: SharpSDL3.Sdl.LockSpinlock(nint)
  type: Method
  source:
    remote:
      path: SDL3/Atomic.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LockSpinlock
    path: ../../repos/SDL3-CS/SDL3/Atomic.cs
    startLine: 181
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Lock a spin lock by setting it to a non-zero value.
  remarks: >-
    Please note that spinlocks are dangerous if you don't know what you're

    doing. Please be careful using any sort of spinlock!

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    TryLockSpinlock

    <xref href="SharpSDL3.Sdl.UnlockSpinlock(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void LockSpinlock(nint @lock)
    parameters:
    - id: lock
      type: System.IntPtr
      description: a pointer to a lock variable.
    content.vb: Public Shared Sub LockSpinlock(lock As IntPtr)
  overload: SharpSDL3.Sdl.LockSpinlock*
  nameWithType.vb: Sdl.LockSpinlock(IntPtr)
  fullName.vb: SharpSDL3.Sdl.LockSpinlock(System.IntPtr)
  name.vb: LockSpinlock(IntPtr)
- uid: SharpSDL3.Sdl.MemoryBarrierAcquire
  commentId: M:SharpSDL3.Sdl.MemoryBarrierAcquire
  id: MemoryBarrierAcquire
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: MemoryBarrierAcquire()
  nameWithType: Sdl.MemoryBarrierAcquire()
  fullName: SharpSDL3.Sdl.MemoryBarrierAcquire()
  type: Method
  source:
    remote:
      path: SDL3/Atomic.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: MemoryBarrierAcquire
    path: ../../repos/SDL3-CS/SDL3/Atomic.cs
    startLine: 197
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Insert a memory acquire barrier (macro version).
  remarks: >-
    Please see SDL_MemoryBarrierRelease for the

    details on what memory barriers are and when to use them.

    <p><strong>Thread Safety:</strong> Obviously this macro is safe to use from any thread at any time, but if youfind yourself needing this, you are probably dealing with some verysensitive code; be careful!</p>

    <p><strong>Version:</strong> This macro is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.MemoryBarrierRelease" data-throw-if-not-resolved="false"></xref>

    MemoryBarrierAcquireFunction
  example: []
  syntax:
    content: public static void MemoryBarrierAcquire()
    content.vb: Public Shared Sub MemoryBarrierAcquire()
  overload: SharpSDL3.Sdl.MemoryBarrierAcquire*
- uid: SharpSDL3.Sdl.MemoryBarrierRelease
  commentId: M:SharpSDL3.Sdl.MemoryBarrierRelease
  id: MemoryBarrierRelease
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: MemoryBarrierRelease()
  nameWithType: Sdl.MemoryBarrierRelease()
  fullName: SharpSDL3.Sdl.MemoryBarrierRelease()
  type: Method
  source:
    remote:
      path: SDL3/Atomic.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: MemoryBarrierRelease
    path: ../../repos/SDL3-CS/SDL3/Atomic.cs
    startLine: 211
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Insert a memory release barrier (macro version).
  remarks: >-
    Memory barriers are designed to prevent reads and writes from being

    reordered by the compiler and being seen out of order on multi-core CPUs.

    <p><strong>Thread Safety:</strong> Obviously this macro is safe to use from any thread at any time, but if youfind yourself needing this, you are probably dealing with some verysensitive code; be careful!</p>

    <p><strong>Version:</strong> This macro is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.MemoryBarrierAcquire" data-throw-if-not-resolved="false"></xref>

    MemoryBarrierReleaseFunction
  example: []
  syntax:
    content: public static void MemoryBarrierRelease()
    content.vb: Public Shared Sub MemoryBarrierRelease()
  overload: SharpSDL3.Sdl.MemoryBarrierRelease*
- uid: SharpSDL3.Sdl.SetAtomicInt(SharpSDL3.Structs.AtomicInt@,System.Int32)
  commentId: M:SharpSDL3.Sdl.SetAtomicInt(SharpSDL3.Structs.AtomicInt@,System.Int32)
  id: SetAtomicInt(SharpSDL3.Structs.AtomicInt@,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetAtomicInt(ref AtomicInt, int)
  nameWithType: Sdl.SetAtomicInt(ref AtomicInt, int)
  fullName: SharpSDL3.Sdl.SetAtomicInt(ref SharpSDL3.Structs.AtomicInt, int)
  type: Method
  source:
    remote:
      path: SDL3/Atomic.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetAtomicInt
    path: ../../repos/SDL3-CS/SDL3/Atomic.cs
    startLine: 227
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set an atomic variable to a value.
  remarks: >-
    This function also acts as a full memory barrier.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetAtomicInt(SharpSDL3.Structs.AtomicInt%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static int SetAtomicInt(ref AtomicInt a, int v)
    parameters:
    - id: a
      type: SharpSDL3.Structs.AtomicInt
      description: a pointer to an SDL_AtomicInt variable to be modified.
    - id: v
      type: System.Int32
      description: the desired value.
    return:
      type: System.Int32
      description: Returns the previous value of the atomic variable.
    content.vb: Public Shared Function SetAtomicInt(a As AtomicInt, v As Integer) As Integer
  overload: SharpSDL3.Sdl.SetAtomicInt*
  nameWithType.vb: Sdl.SetAtomicInt(AtomicInt, Integer)
  fullName.vb: SharpSDL3.Sdl.SetAtomicInt(SharpSDL3.Structs.AtomicInt, Integer)
  name.vb: SetAtomicInt(AtomicInt, Integer)
- uid: SharpSDL3.Sdl.SetAtomicPointer(System.IntPtr@,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.SetAtomicPointer(System.IntPtr@,System.IntPtr)
  id: SetAtomicPointer(System.IntPtr@,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetAtomicPointer(ref nint, nint)
  nameWithType: Sdl.SetAtomicPointer(ref nint, nint)
  fullName: SharpSDL3.Sdl.SetAtomicPointer(ref nint, nint)
  type: Method
  source:
    remote:
      path: SDL3/Atomic.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetAtomicPointer
    path: ../../repos/SDL3-CS/SDL3/Atomic.cs
    startLine: 250
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set a pointer to a value atomically.
  remarks: >-
    Note: If you don't know what this function is for, you shouldn't use

    it!

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CompareAndSwapAtomicPointer(System.IntPtr%40%2cSystem.IntPtr%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetAtomicPointer(System.IntPtr%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint SetAtomicPointer(ref nint a, nint v)
    parameters:
    - id: a
      type: System.IntPtr
      description: a pointer to a pointer.
    - id: v
      type: System.IntPtr
      description: the desired pointer value.
    return:
      type: System.IntPtr
      description: (void *) Returns the previous value of the pointer.
    content.vb: Public Shared Function SetAtomicPointer(a As IntPtr, v As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.SetAtomicPointer*
  nameWithType.vb: Sdl.SetAtomicPointer(IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.SetAtomicPointer(System.IntPtr, System.IntPtr)
  name.vb: SetAtomicPointer(IntPtr, IntPtr)
- uid: SharpSDL3.Sdl.SetAtomicU32(SharpSDL3.Structs.AtomicU32@,System.UInt32)
  commentId: M:SharpSDL3.Sdl.SetAtomicU32(SharpSDL3.Structs.AtomicU32@,System.UInt32)
  id: SetAtomicU32(SharpSDL3.Structs.AtomicU32@,System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetAtomicU32(ref AtomicU32, uint)
  nameWithType: Sdl.SetAtomicU32(ref AtomicU32, uint)
  fullName: SharpSDL3.Sdl.SetAtomicU32(ref SharpSDL3.Structs.AtomicU32, uint)
  type: Method
  source:
    remote:
      path: SDL3/Atomic.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetAtomicU32
    path: ../../repos/SDL3-CS/SDL3/Atomic.cs
    startLine: 271
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set an atomic variable to a value.
  remarks: >-
    This function also acts as a full memory barrier.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetAtomicU32(SharpSDL3.Structs.AtomicU32%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static uint SetAtomicU32(ref AtomicU32 a, uint v)
    parameters:
    - id: a
      type: SharpSDL3.Structs.AtomicU32
      description: a pointer to an SDL_AtomicU32 variable to be modified.
    - id: v
      type: System.UInt32
      description: the desired value.
    return:
      type: System.UInt32
      description: Returns the previous value of the atomic variable.
    content.vb: Public Shared Function SetAtomicU32(a As AtomicU32, v As UInteger) As UInteger
  overload: SharpSDL3.Sdl.SetAtomicU32*
  nameWithType.vb: Sdl.SetAtomicU32(AtomicU32, UInteger)
  fullName.vb: SharpSDL3.Sdl.SetAtomicU32(SharpSDL3.Structs.AtomicU32, UInteger)
  name.vb: SetAtomicU32(AtomicU32, UInteger)
- uid: SharpSDL3.Sdl.UnlockSpinlock(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.UnlockSpinlock(System.IntPtr)
  id: UnlockSpinlock(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: UnlockSpinlock(nint)
  nameWithType: Sdl.UnlockSpinlock(nint)
  fullName: SharpSDL3.Sdl.UnlockSpinlock(nint)
  type: Method
  source:
    remote:
      path: SDL3/Atomic.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: UnlockSpinlock
    path: ../../repos/SDL3-CS/SDL3/Atomic.cs
    startLine: 291
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Unlock a spin lock by setting it to 0.
  remarks: >-
    Always returns immediately.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.LockSpinlock(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    TryLockSpinlock
  example: []
  syntax:
    content: public static void UnlockSpinlock(nint @lock)
    parameters:
    - id: lock
      type: System.IntPtr
      description: a pointer to a lock variable.
    content.vb: Public Shared Sub UnlockSpinlock(lock As IntPtr)
  overload: SharpSDL3.Sdl.UnlockSpinlock*
  nameWithType.vb: Sdl.UnlockSpinlock(IntPtr)
  fullName.vb: SharpSDL3.Sdl.UnlockSpinlock(System.IntPtr)
  name.vb: UnlockSpinlock(IntPtr)
- uid: SharpSDL3.Sdl.AudioDevicePaused(System.UInt32)
  commentId: M:SharpSDL3.Sdl.AudioDevicePaused(System.UInt32)
  id: AudioDevicePaused(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: AudioDevicePaused(uint)
  nameWithType: Sdl.AudioDevicePaused(uint)
  fullName: SharpSDL3.Sdl.AudioDevicePaused(uint)
  type: Method
  source:
    remote:
      path: SDL3/Audio.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: AudioDevicePaused
    path: ../../repos/SDL3-CS/SDL3/Audio.cs
    startLine: 24
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Use this function to query if an audio device is paused.
  remarks: >-
    Unlike in SDL2, audio devices start in an unpaused state, since an app

    has to bind a stream before any audio will flow.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.PauseAudioDevice(System.UInt32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.ResumeAudioDevice(System.UInt32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool AudioDevicePaused(uint dev)
    parameters:
    - id: dev
      type: System.UInt32
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if device is valid and paused, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Public Shared Function AudioDevicePaused(dev As UInteger) As Boolean
  overload: SharpSDL3.Sdl.AudioDevicePaused*
  nameWithType.vb: Sdl.AudioDevicePaused(UInteger)
  fullName.vb: SharpSDL3.Sdl.AudioDevicePaused(UInteger)
  name.vb: AudioDevicePaused(UInteger)
- uid: SharpSDL3.Sdl.AudioStreamDevicePaused(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.AudioStreamDevicePaused(System.IntPtr)
  id: AudioStreamDevicePaused(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: AudioStreamDevicePaused(nint)
  nameWithType: Sdl.AudioStreamDevicePaused(nint)
  fullName: SharpSDL3.Sdl.AudioStreamDevicePaused(nint)
  type: Method
  source:
    remote:
      path: SDL3/Audio.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: AudioStreamDevicePaused
    path: ../../repos/SDL3-CS/SDL3/Audio.cs
    startLine: 46
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Use this function to query if an audio device associated with a stream is paused.
  remarks: >-
    Unlike in SDL2, audio devices start in an unpaused state, since an app

    has to bind a stream before any audio will flow.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.PauseAudioStreamDevice(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.ResumeAudioStreamDevice(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool AudioStreamDevicePaused(nint stream)
    parameters:
    - id: stream
      type: System.IntPtr
      description: the audio stream associated with the audio device to query.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if device is valid and paused, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Public Shared Function AudioStreamDevicePaused(stream As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.AudioStreamDevicePaused*
  nameWithType.vb: Sdl.AudioStreamDevicePaused(IntPtr)
  fullName.vb: SharpSDL3.Sdl.AudioStreamDevicePaused(System.IntPtr)
  name.vb: AudioStreamDevicePaused(IntPtr)
- uid: SharpSDL3.Sdl.BindAudioStream(System.UInt32,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.BindAudioStream(System.UInt32,System.IntPtr)
  id: BindAudioStream(System.UInt32,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: BindAudioStream(uint, nint)
  nameWithType: Sdl.BindAudioStream(uint, nint)
  fullName: SharpSDL3.Sdl.BindAudioStream(uint, nint)
  type: Method
  source:
    remote:
      path: SDL3/Audio.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: BindAudioStream
    path: ../../repos/SDL3-CS/SDL3/Audio.cs
    startLine: 70
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Bind a single audio stream to an audio device.
  remarks: >-
    This is a convenience function, equivalent to calling

    SDL_BindAudioStreams(devid, &amp;stream, 1).

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.BindAudioStreams(System.UInt32%2cSystem.Span%7bSystem.IntPtr%7d)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.UnbindAudioStream(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetAudioStreamDevice(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool BindAudioStream(uint devid, nint stream)
    parameters:
    - id: devid
      type: System.UInt32
      description: an audio device to bind a stream to.
    - id: stream
      type: System.IntPtr
      description: an audio stream to bind to a device.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function BindAudioStream(devid As UInteger, stream As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.BindAudioStream*
  nameWithType.vb: Sdl.BindAudioStream(UInteger, IntPtr)
  fullName.vb: SharpSDL3.Sdl.BindAudioStream(UInteger, System.IntPtr)
  name.vb: BindAudioStream(UInteger, IntPtr)
- uid: SharpSDL3.Sdl.BindAudioStreams(System.UInt32,System.Span{System.IntPtr})
  commentId: M:SharpSDL3.Sdl.BindAudioStreams(System.UInt32,System.Span{System.IntPtr})
  id: BindAudioStreams(System.UInt32,System.Span{System.IntPtr})
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: BindAudioStreams(uint, Span<nint>)
  nameWithType: Sdl.BindAudioStreams(uint, Span<nint>)
  fullName: SharpSDL3.Sdl.BindAudioStreams(uint, System.Span<nint>)
  type: Method
  source:
    remote:
      path: SDL3/Audio.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: BindAudioStreams
    path: ../../repos/SDL3-CS/SDL3/Audio.cs
    startLine: 97
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Bind a list of audio streams to an audio device.
  remarks: >-
    Audio data will flow through any bound streams. For a playback device, data

    for all bound streams will be mixed together and fed to the device. For a

    recording device, a copy of recorded data will be provided to each bound

    stream.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.BindAudioStreams(System.UInt32%2cSystem.Span%7bSystem.IntPtr%7d)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.UnbindAudioStream(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetAudioStreamDevice(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool BindAudioStreams(uint devid, Span<nint> streams)
    parameters:
    - id: devid
      type: System.UInt32
      description: an audio device to bind a stream to.
    - id: streams
      type: System.Span{System.IntPtr}
      description: an array of audio streams to bind.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function BindAudioStreams(devid As UInteger, streams As Span(Of IntPtr)) As Boolean
  overload: SharpSDL3.Sdl.BindAudioStreams*
  nameWithType.vb: Sdl.BindAudioStreams(UInteger, Span(Of IntPtr))
  fullName.vb: SharpSDL3.Sdl.BindAudioStreams(UInteger, System.Span(Of System.IntPtr))
  name.vb: BindAudioStreams(UInteger, Span(Of IntPtr))
- uid: SharpSDL3.Sdl.ClearAudioStream(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.ClearAudioStream(System.IntPtr)
  id: ClearAudioStream(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ClearAudioStream(nint)
  nameWithType: Sdl.ClearAudioStream(nint)
  fullName: SharpSDL3.Sdl.ClearAudioStream(nint)
  type: Method
  source:
    remote:
      path: SDL3/Audio.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ClearAudioStream
    path: ../../repos/SDL3-CS/SDL3/Audio.cs
    startLine: 121
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Clear any pending data in the stream.
  remarks: >-
    This drops any queued data, so there will be nothing to read from the

    stream until more is added.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetAudioStreamAvailable(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetAudioStreamData(System.IntPtr%2cSystem.IntPtr%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetAudioStreamQueued(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.PutAudioStreamData(System.IntPtr%2cSystem.IntPtr%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool ClearAudioStream(nint stream)
    parameters:
    - id: stream
      type: System.IntPtr
      description: the audio stream to clear.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function ClearAudioStream(stream As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.ClearAudioStream*
  nameWithType.vb: Sdl.ClearAudioStream(IntPtr)
  fullName.vb: SharpSDL3.Sdl.ClearAudioStream(System.IntPtr)
  name.vb: ClearAudioStream(IntPtr)
- uid: SharpSDL3.Sdl.CloseAudioDevice(System.UInt32)
  commentId: M:SharpSDL3.Sdl.CloseAudioDevice(System.UInt32)
  id: CloseAudioDevice(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CloseAudioDevice(uint)
  nameWithType: Sdl.CloseAudioDevice(uint)
  fullName: SharpSDL3.Sdl.CloseAudioDevice(uint)
  type: Method
  source:
    remote:
      path: SDL3/Audio.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CloseAudioDevice
    path: ../../repos/SDL3-CS/SDL3/Audio.cs
    startLine: 141
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Close a previously-opened audio device.
  remarks: >-
    The application should close open audio devices once they are no longer

    needed.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.OpenAudioDevice(System.UInt32%2cSharpSDL3.Structs.AudioSpec%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void CloseAudioDevice(uint devid)
    parameters:
    - id: devid
      type: System.UInt32
      description: an audio device id previously returned by SDL_OpenAudioDevice().
    content.vb: Public Shared Sub CloseAudioDevice(devid As UInteger)
  overload: SharpSDL3.Sdl.CloseAudioDevice*
  nameWithType.vb: Sdl.CloseAudioDevice(UInteger)
  fullName.vb: SharpSDL3.Sdl.CloseAudioDevice(UInteger)
  name.vb: CloseAudioDevice(UInteger)
- uid: SharpSDL3.Sdl.ConvertAudioSamples(SharpSDL3.Structs.AudioSpec@,System.IntPtr,System.Int32,SharpSDL3.Structs.AudioSpec@,System.IntPtr,System.Int32@)
  commentId: M:SharpSDL3.Sdl.ConvertAudioSamples(SharpSDL3.Structs.AudioSpec@,System.IntPtr,System.Int32,SharpSDL3.Structs.AudioSpec@,System.IntPtr,System.Int32@)
  id: ConvertAudioSamples(SharpSDL3.Structs.AudioSpec@,System.IntPtr,System.Int32,SharpSDL3.Structs.AudioSpec@,System.IntPtr,System.Int32@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ConvertAudioSamples(ref AudioSpec, nint, int, ref AudioSpec, nint, out int)
  nameWithType: Sdl.ConvertAudioSamples(ref AudioSpec, nint, int, ref AudioSpec, nint, out int)
  fullName: SharpSDL3.Sdl.ConvertAudioSamples(ref SharpSDL3.Structs.AudioSpec, nint, int, ref SharpSDL3.Structs.AudioSpec, nint, out int)
  type: Method
  source:
    remote:
      path: SDL3/Audio.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ConvertAudioSamples
    path: ../../repos/SDL3-CS/SDL3/Audio.cs
    startLine: 178
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Convert some audio data of one format to another format.
  remarks: >-
    Please note that this function is for convenience, but should not be used

    to resample audio in blocks, as it will introduce audio artifacts on the

    boundaries. You should only use this function if you are converting audio

    data in its entirety in one call. If you want to convert audio in smaller

    chunks, use an SDL_AudioStream, which is designed for

    this situation.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool ConvertAudioSamples(ref AudioSpec srcSpec, nint srcData, int srcLen, ref AudioSpec dstSpec, nint dstData, out int dstLen)
    parameters:
    - id: srcSpec
      type: SharpSDL3.Structs.AudioSpec
    - id: srcData
      type: System.IntPtr
    - id: srcLen
      type: System.Int32
    - id: dstSpec
      type: SharpSDL3.Structs.AudioSpec
    - id: dstData
      type: System.IntPtr
    - id: dstLen
      type: System.Int32
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function ConvertAudioSamples(srcSpec As AudioSpec, srcData As IntPtr, srcLen As Integer, dstSpec As AudioSpec, dstData As IntPtr, dstLen As Integer) As Boolean
  overload: SharpSDL3.Sdl.ConvertAudioSamples*
  nameWithType.vb: Sdl.ConvertAudioSamples(AudioSpec, IntPtr, Integer, AudioSpec, IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.ConvertAudioSamples(SharpSDL3.Structs.AudioSpec, System.IntPtr, Integer, SharpSDL3.Structs.AudioSpec, System.IntPtr, Integer)
  name.vb: ConvertAudioSamples(AudioSpec, IntPtr, Integer, AudioSpec, IntPtr, Integer)
- uid: SharpSDL3.Sdl.CreateAudioStream(SharpSDL3.Structs.AudioSpec@,SharpSDL3.Structs.AudioSpec@)
  commentId: M:SharpSDL3.Sdl.CreateAudioStream(SharpSDL3.Structs.AudioSpec@,SharpSDL3.Structs.AudioSpec@)
  id: CreateAudioStream(SharpSDL3.Structs.AudioSpec@,SharpSDL3.Structs.AudioSpec@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CreateAudioStream(ref AudioSpec, ref AudioSpec)
  nameWithType: Sdl.CreateAudioStream(ref AudioSpec, ref AudioSpec)
  fullName: SharpSDL3.Sdl.CreateAudioStream(ref SharpSDL3.Structs.AudioSpec, ref SharpSDL3.Structs.AudioSpec)
  type: Method
  source:
    remote:
      path: SDL3/Audio.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CreateAudioStream
    path: ../../repos/SDL3-CS/SDL3/Audio.cs
    startLine: 205
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Create a new audio stream.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.PutAudioStreamData(System.IntPtr%2cSystem.IntPtr%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetAudioStreamData(System.IntPtr%2cSystem.IntPtr%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetAudioStreamAvailable(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.FlushAudioStream(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.ClearAudioStream(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetAudioStreamFormat(System.IntPtr%2cSharpSDL3.Structs.AudioSpec%40%2cSharpSDL3.Structs.AudioSpec%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.DestroyAudioStream(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint CreateAudioStream(ref AudioSpec srcSpec, ref AudioSpec dstSpec)
    parameters:
    - id: srcSpec
      type: SharpSDL3.Structs.AudioSpec
    - id: dstSpec
      type: SharpSDL3.Structs.AudioSpec
    return:
      type: System.IntPtr
      description: (SDL_AudioStream *) Returns a new audio stream on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function CreateAudioStream(srcSpec As AudioSpec, dstSpec As AudioSpec) As IntPtr
  overload: SharpSDL3.Sdl.CreateAudioStream*
  nameWithType.vb: Sdl.CreateAudioStream(AudioSpec, AudioSpec)
  fullName.vb: SharpSDL3.Sdl.CreateAudioStream(SharpSDL3.Structs.AudioSpec, SharpSDL3.Structs.AudioSpec)
  name.vb: CreateAudioStream(AudioSpec, AudioSpec)
- uid: SharpSDL3.Sdl.DestroyAudioStream(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.DestroyAudioStream(System.IntPtr)
  id: DestroyAudioStream(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: DestroyAudioStream(nint)
  nameWithType: Sdl.DestroyAudioStream(nint)
  fullName: SharpSDL3.Sdl.DestroyAudioStream(nint)
  type: Method
  source:
    remote:
      path: SDL3/Audio.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: DestroyAudioStream
    path: ../../repos/SDL3-CS/SDL3/Audio.cs
    startLine: 225
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Free an audio stream.
  remarks: >-
    This will release all allocated data, including any audio that is still

    queued. You do not need to manually clear the stream first.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateAudioStream(SharpSDL3.Structs.AudioSpec%40%2cSharpSDL3.Structs.AudioSpec%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void DestroyAudioStream(nint stream)
    parameters:
    - id: stream
      type: System.IntPtr
      description: the audio stream to destroy.
    content.vb: Public Shared Sub DestroyAudioStream(stream As IntPtr)
  overload: SharpSDL3.Sdl.DestroyAudioStream*
  nameWithType.vb: Sdl.DestroyAudioStream(IntPtr)
  fullName.vb: SharpSDL3.Sdl.DestroyAudioStream(System.IntPtr)
  name.vb: DestroyAudioStream(IntPtr)
- uid: SharpSDL3.Sdl.FlushAudioStream(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.FlushAudioStream(System.IntPtr)
  id: FlushAudioStream(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: FlushAudioStream(nint)
  nameWithType: Sdl.FlushAudioStream(nint)
  fullName: SharpSDL3.Sdl.FlushAudioStream(nint)
  type: Method
  source:
    remote:
      path: SDL3/Audio.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: FlushAudioStream
    path: ../../repos/SDL3-CS/SDL3/Audio.cs
    startLine: 253
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Tell the stream that you're done sending data, and anything being buffered should be converted/resampled and made available immediately.
  remarks: >-
    It is legal to add more data to a stream after flushing, but there may be

    audio gaps in the output. Generally this is intended to signal the end of

    input, so the complete output becomes available.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.PutAudioStreamData(System.IntPtr%2cSystem.IntPtr%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool FlushAudioStream(nint stream)
    parameters:
    - id: stream
      type: System.IntPtr
      description: the audio stream to flush.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function FlushAudioStream(stream As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.FlushAudioStream*
  nameWithType.vb: Sdl.FlushAudioStream(IntPtr)
  fullName.vb: SharpSDL3.Sdl.FlushAudioStream(System.IntPtr)
  name.vb: FlushAudioStream(IntPtr)
- uid: SharpSDL3.Sdl.GetAudioDeviceChannelMap(System.UInt32)
  commentId: M:SharpSDL3.Sdl.GetAudioDeviceChannelMap(System.UInt32)
  id: GetAudioDeviceChannelMap(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetAudioDeviceChannelMap(uint)
  nameWithType: Sdl.GetAudioDeviceChannelMap(uint)
  fullName: SharpSDL3.Sdl.GetAudioDeviceChannelMap(uint)
  type: Method
  source:
    remote:
      path: SDL3/Audio.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetAudioDeviceChannelMap
    path: ../../repos/SDL3-CS/SDL3/Audio.cs
    startLine: 275
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the current channel map of an audio device.
  remarks: >-
    Channel maps are optional; most things do not need them, instead passing

    data in the order that SDL expects.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetAudioStreamInputChannelMap(System.IntPtr%2cSystem.Span%7bSystem.Int32%7d%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static int[] GetAudioDeviceChannelMap(uint devid)
    parameters:
    - id: devid
      type: System.UInt32
      description: the instance ID of the device to query.
    return:
      type: System.Int32[]
      description: (int *) Returns an array of the current channel mapping, with as manyelements as the current output spec's channels, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if default. Thisshould be freed with <xref href="SharpSDL3.Sdl.Free(System.IntPtr)" data-throw-if-not-resolved="false"></xref> when it is no longer needed.
    content.vb: Public Shared Function GetAudioDeviceChannelMap(devid As UInteger) As Integer()
  overload: SharpSDL3.Sdl.GetAudioDeviceChannelMap*
  nameWithType.vb: Sdl.GetAudioDeviceChannelMap(UInteger)
  fullName.vb: SharpSDL3.Sdl.GetAudioDeviceChannelMap(UInteger)
  name.vb: GetAudioDeviceChannelMap(UInteger)
- uid: SharpSDL3.Sdl.GetAudioDeviceFormat(System.UInt32,SharpSDL3.Structs.AudioSpec@,System.Int32@)
  commentId: M:SharpSDL3.Sdl.GetAudioDeviceFormat(System.UInt32,SharpSDL3.Structs.AudioSpec@,System.Int32@)
  id: GetAudioDeviceFormat(System.UInt32,SharpSDL3.Structs.AudioSpec@,System.Int32@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetAudioDeviceFormat(uint, out AudioSpec, out int)
  nameWithType: Sdl.GetAudioDeviceFormat(uint, out AudioSpec, out int)
  fullName: SharpSDL3.Sdl.GetAudioDeviceFormat(uint, out SharpSDL3.Structs.AudioSpec, out int)
  type: Method
  source:
    remote:
      path: SDL3/Audio.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetAudioDeviceFormat
    path: ../../repos/SDL3-CS/SDL3/Audio.cs
    startLine: 315
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the current audio format of a specific audio device.
  remarks: >-
    For an opened device, this will report the format the device is currently

    using. If the device isn't yet opened, this will report the device's

    preferred format (or a reasonable default if this can't be determined).

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool GetAudioDeviceFormat(uint devId, out AudioSpec spec, out int sampleFrames)
    parameters:
    - id: devId
      type: System.UInt32
    - id: spec
      type: SharpSDL3.Structs.AudioSpec
      description: on return, will be filled with device details.
    - id: sampleFrames
      type: System.Int32
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetAudioDeviceFormat(devId As UInteger, spec As AudioSpec, sampleFrames As Integer) As Boolean
  overload: SharpSDL3.Sdl.GetAudioDeviceFormat*
  nameWithType.vb: Sdl.GetAudioDeviceFormat(UInteger, AudioSpec, Integer)
  fullName.vb: SharpSDL3.Sdl.GetAudioDeviceFormat(UInteger, SharpSDL3.Structs.AudioSpec, Integer)
  name.vb: GetAudioDeviceFormat(UInteger, AudioSpec, Integer)
- uid: SharpSDL3.Sdl.GetAudioDeviceGain(System.UInt32)
  commentId: M:SharpSDL3.Sdl.GetAudioDeviceGain(System.UInt32)
  id: GetAudioDeviceGain(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetAudioDeviceGain(uint)
  nameWithType: Sdl.GetAudioDeviceGain(uint)
  fullName: SharpSDL3.Sdl.GetAudioDeviceGain(uint)
  type: Method
  source:
    remote:
      path: SDL3/Audio.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetAudioDeviceGain
    path: ../../repos/SDL3-CS/SDL3/Audio.cs
    startLine: 336
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the gain of an audio device.
  remarks: >-
    The gain of a device is its volume; a larger gain means a louder output,

    with a gain of zero being silence.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetAudioDeviceGain(System.UInt32%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static float GetAudioDeviceGain(uint devid)
    parameters:
    - id: devid
      type: System.UInt32
      description: the audio device to query.
    return:
      type: System.Single
      description: Returns the gain of the device or -1.0f on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetAudioDeviceGain(devid As UInteger) As Single
  overload: SharpSDL3.Sdl.GetAudioDeviceGain*
  nameWithType.vb: Sdl.GetAudioDeviceGain(UInteger)
  fullName.vb: SharpSDL3.Sdl.GetAudioDeviceGain(UInteger)
  name.vb: GetAudioDeviceGain(UInteger)
- uid: SharpSDL3.Sdl.GetAudioDeviceName(System.UInt32)
  commentId: M:SharpSDL3.Sdl.GetAudioDeviceName(System.UInt32)
  id: GetAudioDeviceName(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetAudioDeviceName(uint)
  nameWithType: Sdl.GetAudioDeviceName(uint)
  fullName: SharpSDL3.Sdl.GetAudioDeviceName(uint)
  type: Method
  source:
    remote:
      path: SDL3/Audio.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetAudioDeviceName
    path: ../../repos/SDL3-CS/SDL3/Audio.cs
    startLine: 356
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the human-readable name of a specific audio device.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetAudioPlaybackDevices(System.Int32%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetAudioRecordingDevices(System.Int32%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static string GetAudioDeviceName(uint devId)
    parameters:
    - id: devId
      type: System.UInt32
    return:
      type: System.String
      description: Returns the name of the audio device, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure;call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetAudioDeviceName(devId As UInteger) As String
  overload: SharpSDL3.Sdl.GetAudioDeviceName*
  nameWithType.vb: Sdl.GetAudioDeviceName(UInteger)
  fullName.vb: SharpSDL3.Sdl.GetAudioDeviceName(UInteger)
  name.vb: GetAudioDeviceName(UInteger)
- uid: SharpSDL3.Sdl.GetAudioDriver(System.Int32)
  commentId: M:SharpSDL3.Sdl.GetAudioDriver(System.Int32)
  id: GetAudioDriver(System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetAudioDriver(int)
  nameWithType: Sdl.GetAudioDriver(int)
  fullName: SharpSDL3.Sdl.GetAudioDriver(int)
  type: Method
  source:
    remote:
      path: SDL3/Audio.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetAudioDriver
    path: ../../repos/SDL3-CS/SDL3/Audio.cs
    startLine: 378
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Use this function to get the name of a built in audio driver.
  remarks: >-
    The list of audio drivers is given in the order that they are normally

    initialized by default; the drivers that seem more reasonable to choose

    first (as far as the SDL developers believe) are earlier in the list.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetNumAudioDrivers" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static string GetAudioDriver(int index)
    parameters:
    - id: index
      type: System.Int32
      description: the index of the audio driver; the value ranges from 0 to SDL_GetNumAudioDrivers() - 1.
    return:
      type: System.String
      description: Returns the name of the audio driver at the requested index,  <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if an invalid index was specified.
    content.vb: Public Shared Function GetAudioDriver(index As Integer) As String
  overload: SharpSDL3.Sdl.GetAudioDriver*
  nameWithType.vb: Sdl.GetAudioDriver(Integer)
  fullName.vb: SharpSDL3.Sdl.GetAudioDriver(Integer)
  name.vb: GetAudioDriver(Integer)
- uid: SharpSDL3.Sdl.GetAudioFormatName(SharpSDL3.Enums.AudioFormat)
  commentId: M:SharpSDL3.Sdl.GetAudioFormatName(SharpSDL3.Enums.AudioFormat)
  id: GetAudioFormatName(SharpSDL3.Enums.AudioFormat)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetAudioFormatName(AudioFormat)
  nameWithType: Sdl.GetAudioFormatName(AudioFormat)
  fullName: SharpSDL3.Sdl.GetAudioFormatName(SharpSDL3.Enums.AudioFormat)
  type: Method
  source:
    remote:
      path: SDL3/Audio.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetAudioFormatName
    path: ../../repos/SDL3-CS/SDL3/Audio.cs
    startLine: 396
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the human readable name of an audio format.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static string GetAudioFormatName(AudioFormat format)
    parameters:
    - id: format
      type: SharpSDL3.Enums.AudioFormat
      description: the audio format to query.
    return:
      type: System.String
      description: Returns the human readable name of the specified audioformat or "SDL_AUDIO_UNKNOWN" if the format isn'trecognized.
    content.vb: Public Shared Function GetAudioFormatName(format As AudioFormat) As String
  overload: SharpSDL3.Sdl.GetAudioFormatName*
- uid: SharpSDL3.Sdl.GetAudioPlaybackDevices(System.Int32@)
  commentId: M:SharpSDL3.Sdl.GetAudioPlaybackDevices(System.Int32@)
  id: GetAudioPlaybackDevices(System.Int32@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetAudioPlaybackDevices(out int)
  nameWithType: Sdl.GetAudioPlaybackDevices(out int)
  fullName: SharpSDL3.Sdl.GetAudioPlaybackDevices(out int)
  type: Method
  source:
    remote:
      path: SDL3/Audio.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetAudioPlaybackDevices
    path: ../../repos/SDL3-CS/SDL3/Audio.cs
    startLine: 420
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get a list of currently-connected audio playback devices.
  remarks: >-
    This returns of list of available devices that play sound, perhaps to

    speakers or headphones ("playback" devices). If you want devices that

    record audio, like a microphone ("recording" devices), use

    SDL_GetAudioRecordingDevices() instead.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.OpenAudioDevice(System.UInt32%2cSharpSDL3.Structs.AudioSpec%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetAudioRecordingDevices(System.Int32%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static uint[] GetAudioPlaybackDevices(out int count)
    parameters:
    - id: count
      type: System.Int32
      description: a pointer filled in with the number of devices returned, may be discarded.
    return:
      type: System.UInt32[]
      description: (SDL_AudioDeviceID *) Returns a 0 terminated array ofdevice instance IDs or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on error; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref>for more information. This should be freed with <xref href="SharpSDL3.Sdl.Free(System.IntPtr)" data-throw-if-not-resolved="false"></xref> whenit is no longer needed.
    content.vb: Public Shared Function GetAudioPlaybackDevices(count As Integer) As UInteger()
  overload: SharpSDL3.Sdl.GetAudioPlaybackDevices*
  nameWithType.vb: Sdl.GetAudioPlaybackDevices(Integer)
  fullName.vb: SharpSDL3.Sdl.GetAudioPlaybackDevices(Integer)
  name.vb: GetAudioPlaybackDevices(Integer)
- uid: SharpSDL3.Sdl.GetAudioRecordingDevices(System.Int32@)
  commentId: M:SharpSDL3.Sdl.GetAudioRecordingDevices(System.Int32@)
  id: GetAudioRecordingDevices(System.Int32@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetAudioRecordingDevices(out int)
  nameWithType: Sdl.GetAudioRecordingDevices(out int)
  fullName: SharpSDL3.Sdl.GetAudioRecordingDevices(out int)
  type: Method
  source:
    remote:
      path: SDL3/Audio.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetAudioRecordingDevices
    path: ../../repos/SDL3-CS/SDL3/Audio.cs
    startLine: 453
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get a list of currently-connected audio recording devices.
  remarks: >-
    This returns of list of available devices that record audio, like a

    microphone ("recording" devices). If you want devices that play sound,

    perhaps to speakers or headphones ("playback" devices), use

    SDL_GetAudioPlaybackDevices() instead.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.OpenAudioDevice(System.UInt32%2cSharpSDL3.Structs.AudioSpec%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetAudioPlaybackDevices(System.Int32%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static uint[] GetAudioRecordingDevices(out int count)
    parameters:
    - id: count
      type: System.Int32
      description: a pointer filled in with the number of devices returned, may be discarded.
    return:
      type: System.UInt32[]
      description: (SDL_AudioDeviceID *) Returns a 0 terminated array ofdevice instance IDs, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information. This should be freedwith <xref href="SharpSDL3.Sdl.Free(System.IntPtr)" data-throw-if-not-resolved="false"></xref> when it is no longer needed.
    content.vb: Public Shared Function GetAudioRecordingDevices(count As Integer) As UInteger()
  overload: SharpSDL3.Sdl.GetAudioRecordingDevices*
  nameWithType.vb: Sdl.GetAudioRecordingDevices(Integer)
  fullName.vb: SharpSDL3.Sdl.GetAudioRecordingDevices(Integer)
  name.vb: GetAudioRecordingDevices(Integer)
- uid: SharpSDL3.Sdl.GetAudioStreamAvailable(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetAudioStreamAvailable(System.IntPtr)
  id: GetAudioStreamAvailable(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetAudioStreamAvailable(nint)
  nameWithType: Sdl.GetAudioStreamAvailable(nint)
  fullName: SharpSDL3.Sdl.GetAudioStreamAvailable(nint)
  type: Method
  source:
    remote:
      path: SDL3/Audio.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetAudioStreamAvailable
    path: ../../repos/SDL3-CS/SDL3/Audio.cs
    startLine: 486
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the number of converted/resampled bytes available.
  remarks: >-
    The stream may be buffering data behind the scenes until it has enough to

    resample correctly, so this number might be lower than what you expect, or

    even be zero. Add more data or flush the stream if you need the data now.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetAudioStreamData(System.IntPtr%2cSystem.IntPtr%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.PutAudioStreamData(System.IntPtr%2cSystem.IntPtr%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static int GetAudioStreamAvailable(nint stream)
    parameters:
    - id: stream
      type: System.IntPtr
      description: the audio stream to query.
    return:
      type: System.Int32
      description: Returns the number of converted/resampled bytes available or -1 on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetAudioStreamAvailable(stream As IntPtr) As Integer
  overload: SharpSDL3.Sdl.GetAudioStreamAvailable*
  nameWithType.vb: Sdl.GetAudioStreamAvailable(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetAudioStreamAvailable(System.IntPtr)
  name.vb: GetAudioStreamAvailable(IntPtr)
- uid: SharpSDL3.Sdl.GetAudioStreamData(System.IntPtr,System.IntPtr,System.Int32)
  commentId: M:SharpSDL3.Sdl.GetAudioStreamData(System.IntPtr,System.IntPtr,System.Int32)
  id: GetAudioStreamData(System.IntPtr,System.IntPtr,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetAudioStreamData(nint, nint, int)
  nameWithType: Sdl.GetAudioStreamData(nint, nint, int)
  fullName: SharpSDL3.Sdl.GetAudioStreamData(nint, nint, int)
  type: Method
  source:
    remote:
      path: SDL3/Audio.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetAudioStreamData
    path: ../../repos/SDL3-CS/SDL3/Audio.cs
    startLine: 512
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get converted/resampled data from the stream.
  remarks: >-
    The input/output data format/channels/samplerate is specified when creating

    the stream, and can be changed after creation by calling

    SDL_SetAudioStreamFormat.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread, but if the stream has acallback set, the caller might need to manage extra locking.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.ClearAudioStream(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetAudioStreamAvailable(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.PutAudioStreamData(System.IntPtr%2cSystem.IntPtr%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static int GetAudioStreamData(nint stream, nint buf, int len)
    parameters:
    - id: stream
      type: System.IntPtr
      description: the stream the audio is being requested from.
    - id: buf
      type: System.IntPtr
      description: a buffer to fill with audio data.
    - id: len
      type: System.Int32
      description: the maximum number of bytes to fill.
    return:
      type: System.Int32
      description: Returns the number of bytes read from the stream or -1 on failure;call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetAudioStreamData(stream As IntPtr, buf As IntPtr, len As Integer) As Integer
  overload: SharpSDL3.Sdl.GetAudioStreamData*
  nameWithType.vb: Sdl.GetAudioStreamData(IntPtr, IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.GetAudioStreamData(System.IntPtr, System.IntPtr, Integer)
  name.vb: GetAudioStreamData(IntPtr, IntPtr, Integer)
- uid: SharpSDL3.Sdl.GetAudioStreamDevice(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetAudioStreamDevice(System.IntPtr)
  id: GetAudioStreamDevice(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetAudioStreamDevice(nint)
  nameWithType: Sdl.GetAudioStreamDevice(nint)
  fullName: SharpSDL3.Sdl.GetAudioStreamDevice(nint)
  type: Method
  source:
    remote:
      path: SDL3/Audio.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetAudioStreamDevice
    path: ../../repos/SDL3-CS/SDL3/Audio.cs
    startLine: 533
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Query an audio stream for its currently-bound device.
  remarks: >-
    This reports the audio device that an audio stream is currently bound to.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.BindAudioStream(System.UInt32%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.BindAudioStreams(System.UInt32%2cSystem.Span%7bSystem.IntPtr%7d)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static uint GetAudioStreamDevice(nint stream)
    parameters:
    - id: stream
      type: System.IntPtr
      description: the audio stream to query.
    return:
      type: System.UInt32
      description: Returns the bound audio device, or0 if not bound or invalid.
    content.vb: Public Shared Function GetAudioStreamDevice(stream As IntPtr) As UInteger
  overload: SharpSDL3.Sdl.GetAudioStreamDevice*
  nameWithType.vb: Sdl.GetAudioStreamDevice(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetAudioStreamDevice(System.IntPtr)
  name.vb: GetAudioStreamDevice(IntPtr)
- uid: SharpSDL3.Sdl.GetAudioStreamFormat(System.IntPtr,SharpSDL3.Structs.AudioSpec@,SharpSDL3.Structs.AudioSpec@)
  commentId: M:SharpSDL3.Sdl.GetAudioStreamFormat(System.IntPtr,SharpSDL3.Structs.AudioSpec@,SharpSDL3.Structs.AudioSpec@)
  id: GetAudioStreamFormat(System.IntPtr,SharpSDL3.Structs.AudioSpec@,SharpSDL3.Structs.AudioSpec@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetAudioStreamFormat(nint, out AudioSpec, out AudioSpec)
  nameWithType: Sdl.GetAudioStreamFormat(nint, out AudioSpec, out AudioSpec)
  fullName: SharpSDL3.Sdl.GetAudioStreamFormat(nint, out SharpSDL3.Structs.AudioSpec, out SharpSDL3.Structs.AudioSpec)
  type: Method
  source:
    remote:
      path: SDL3/Audio.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetAudioStreamFormat
    path: ../../repos/SDL3-CS/SDL3/Audio.cs
    startLine: 554
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Query the current format of an audio stream.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread, as it holds astream-specific mutex while running.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetAudioStreamFormat(System.IntPtr%2cSharpSDL3.Structs.AudioSpec%40%2cSharpSDL3.Structs.AudioSpec%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool GetAudioStreamFormat(nint stream, out AudioSpec srcSpec, out AudioSpec dstSpec)
    parameters:
    - id: stream
      type: System.IntPtr
      description: the SDL_AudioStream to query.
    - id: srcSpec
      type: SharpSDL3.Structs.AudioSpec
    - id: dstSpec
      type: SharpSDL3.Structs.AudioSpec
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetAudioStreamFormat(stream As IntPtr, srcSpec As AudioSpec, dstSpec As AudioSpec) As Boolean
  overload: SharpSDL3.Sdl.GetAudioStreamFormat*
  nameWithType.vb: Sdl.GetAudioStreamFormat(IntPtr, AudioSpec, AudioSpec)
  fullName.vb: SharpSDL3.Sdl.GetAudioStreamFormat(System.IntPtr, SharpSDL3.Structs.AudioSpec, SharpSDL3.Structs.AudioSpec)
  name.vb: GetAudioStreamFormat(IntPtr, AudioSpec, AudioSpec)
- uid: SharpSDL3.Sdl.GetAudioStreamFrequencyRatio(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetAudioStreamFrequencyRatio(System.IntPtr)
  id: GetAudioStreamFrequencyRatio(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetAudioStreamFrequencyRatio(nint)
  nameWithType: Sdl.GetAudioStreamFrequencyRatio(nint)
  fullName: SharpSDL3.Sdl.GetAudioStreamFrequencyRatio(nint)
  type: Method
  source:
    remote:
      path: SDL3/Audio.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetAudioStreamFrequencyRatio
    path: ../../repos/SDL3-CS/SDL3/Audio.cs
    startLine: 573
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the frequency ratio of an audio stream.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread, as it holds astream-specific mutex while running.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetAudioStreamFrequencyRatio(System.IntPtr%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static float GetAudioStreamFrequencyRatio(nint stream)
    parameters:
    - id: stream
      type: System.IntPtr
      description: the SDL_AudioStream to query.
    return:
      type: System.Single
      description: Returns the frequency ratio of the stream or 0.0 on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetAudioStreamFrequencyRatio(stream As IntPtr) As Single
  overload: SharpSDL3.Sdl.GetAudioStreamFrequencyRatio*
  nameWithType.vb: Sdl.GetAudioStreamFrequencyRatio(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetAudioStreamFrequencyRatio(System.IntPtr)
  name.vb: GetAudioStreamFrequencyRatio(IntPtr)
- uid: SharpSDL3.Sdl.GetAudioStreamGain(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetAudioStreamGain(System.IntPtr)
  id: GetAudioStreamGain(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetAudioStreamGain(nint)
  nameWithType: Sdl.GetAudioStreamGain(nint)
  fullName: SharpSDL3.Sdl.GetAudioStreamGain(nint)
  type: Method
  source:
    remote:
      path: SDL3/Audio.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetAudioStreamGain
    path: ../../repos/SDL3-CS/SDL3/Audio.cs
    startLine: 594
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the gain of an audio stream.
  remarks: >-
    The gain of a stream is its volume; a larger gain means a louder output,

    with a gain of zero being silence.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread, as it holds astream-specific mutex while running.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    SetAudioStreamGain
  example: []
  syntax:
    content: public static float GetAudioStreamGain(nint stream)
    parameters:
    - id: stream
      type: System.IntPtr
      description: the SDL_AudioStream to query.
    return:
      type: System.Single
      description: Returns the gain of the stream or -1.0f on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetAudioStreamGain(stream As IntPtr) As Single
  overload: SharpSDL3.Sdl.GetAudioStreamGain*
  nameWithType.vb: Sdl.GetAudioStreamGain(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetAudioStreamGain(System.IntPtr)
  name.vb: GetAudioStreamGain(IntPtr)
- uid: SharpSDL3.Sdl.GetAudioStreamInputChannelMap(System.IntPtr,System.Int32@)
  commentId: M:SharpSDL3.Sdl.GetAudioStreamInputChannelMap(System.IntPtr,System.Int32@)
  id: GetAudioStreamInputChannelMap(System.IntPtr,System.Int32@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetAudioStreamInputChannelMap(nint, out int)
  nameWithType: Sdl.GetAudioStreamInputChannelMap(nint, out int)
  fullName: SharpSDL3.Sdl.GetAudioStreamInputChannelMap(nint, out int)
  type: Method
  source:
    remote:
      path: SDL3/Audio.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetAudioStreamInputChannelMap
    path: ../../repos/SDL3-CS/SDL3/Audio.cs
    startLine: 616
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the current input channel map of an audio stream.
  remarks: >-
    Channel maps are optional; most things do not need them, instead passing

    data in the order that SDL expects.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread, as it holds astream-specific mutex while running.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetAudioStreamInputChannelMap(System.IntPtr%2cSystem.Span%7bSystem.Int32%7d%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static int[] GetAudioStreamInputChannelMap(nint stream, out int count)
    parameters:
    - id: stream
      type: System.IntPtr
      description: the SDL_AudioStream to query.
    - id: count
      type: System.Int32
      description: On output, set to number of channels in the map. Can be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    return:
      type: System.Int32[]
      description: (int *) Returns an array of the current channel mapping, with as manyelements as the current output spec's channels, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if default. Thisshould be freed with <xref href="SharpSDL3.Sdl.Free(System.IntPtr)" data-throw-if-not-resolved="false"></xref> when it is no longer needed.
    content.vb: Public Shared Function GetAudioStreamInputChannelMap(stream As IntPtr, count As Integer) As Integer()
  overload: SharpSDL3.Sdl.GetAudioStreamInputChannelMap*
  nameWithType.vb: Sdl.GetAudioStreamInputChannelMap(IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.GetAudioStreamInputChannelMap(System.IntPtr, Integer)
  name.vb: GetAudioStreamInputChannelMap(IntPtr, Integer)
- uid: SharpSDL3.Sdl.GetAudioStreamOutputChannelMap(System.IntPtr,System.Int32@)
  commentId: M:SharpSDL3.Sdl.GetAudioStreamOutputChannelMap(System.IntPtr,System.Int32@)
  id: GetAudioStreamOutputChannelMap(System.IntPtr,System.Int32@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetAudioStreamOutputChannelMap(nint, out int)
  nameWithType: Sdl.GetAudioStreamOutputChannelMap(nint, out int)
  fullName: SharpSDL3.Sdl.GetAudioStreamOutputChannelMap(nint, out int)
  type: Method
  source:
    remote:
      path: SDL3/Audio.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetAudioStreamOutputChannelMap
    path: ../../repos/SDL3-CS/SDL3/Audio.cs
    startLine: 650
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the current output channel map of an audio stream.
  remarks: >-
    Channel maps are optional; most things do not need them, instead passing

    data in the order that SDL expects.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread, as it holds astream-specific mutex while running.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetAudioStreamInputChannelMap(System.IntPtr%2cSystem.Span%7bSystem.Int32%7d%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static int[] GetAudioStreamOutputChannelMap(nint stream, out int count)
    parameters:
    - id: stream
      type: System.IntPtr
      description: the SDL_AudioStream to query.
    - id: count
      type: System.Int32
      description: On output, set to number of channels in the map. Can be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    return:
      type: System.Int32[]
      description: (int *) Returns an array of the current channel mapping, with as manyelements as the current output spec's channels, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if default. Thisshould be freed with <xref href="SharpSDL3.Sdl.Free(System.IntPtr)" data-throw-if-not-resolved="false"></xref> when it is no longer needed.
    content.vb: Public Shared Function GetAudioStreamOutputChannelMap(stream As IntPtr, count As Integer) As Integer()
  overload: SharpSDL3.Sdl.GetAudioStreamOutputChannelMap*
  nameWithType.vb: Sdl.GetAudioStreamOutputChannelMap(IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.GetAudioStreamOutputChannelMap(System.IntPtr, Integer)
  name.vb: GetAudioStreamOutputChannelMap(IntPtr, Integer)
- uid: SharpSDL3.Sdl.GetAudioStreamProperties(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetAudioStreamProperties(System.IntPtr)
  id: GetAudioStreamProperties(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetAudioStreamProperties(nint)
  nameWithType: Sdl.GetAudioStreamProperties(nint)
  fullName: SharpSDL3.Sdl.GetAudioStreamProperties(nint)
  type: Method
  source:
    remote:
      path: SDL3/Audio.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetAudioStreamProperties
    path: ../../repos/SDL3-CS/SDL3/Audio.cs
    startLine: 679
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the properties associated with an audio stream.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static uint GetAudioStreamProperties(nint stream)
    parameters:
    - id: stream
      type: System.IntPtr
      description: the SDL_AudioStream to query.
    return:
      type: System.UInt32
      description: Returns a valid property ID on success or 0 on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetAudioStreamProperties(stream As IntPtr) As UInteger
  overload: SharpSDL3.Sdl.GetAudioStreamProperties*
  nameWithType.vb: Sdl.GetAudioStreamProperties(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetAudioStreamProperties(System.IntPtr)
  name.vb: GetAudioStreamProperties(IntPtr)
- uid: SharpSDL3.Sdl.GetAudioStreamQueued(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetAudioStreamQueued(System.IntPtr)
  id: GetAudioStreamQueued(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetAudioStreamQueued(nint)
  nameWithType: Sdl.GetAudioStreamQueued(nint)
  fullName: SharpSDL3.Sdl.GetAudioStreamQueued(nint)
  type: Method
  source:
    remote:
      path: SDL3/Audio.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetAudioStreamQueued
    path: ../../repos/SDL3-CS/SDL3/Audio.cs
    startLine: 705
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the number of bytes currently queued.
  remarks: >-
    This is the number of bytes put into a stream as input, not the number that

    can be retrieved as output. Because of several details, it's not possible

    to calculate one number directly from the other. If you need to know how

    much usable data can be retrieved right now, you should use

    SDL_GetAudioStreamAvailable() and not this

    function.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.PutAudioStreamData(System.IntPtr%2cSystem.IntPtr%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.ClearAudioStream(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static int GetAudioStreamQueued(nint stream)
    parameters:
    - id: stream
      type: System.IntPtr
      description: the audio stream to query.
    return:
      type: System.Int32
      description: Returns the number of bytes queued or -1 on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetAudioStreamQueued(stream As IntPtr) As Integer
  overload: SharpSDL3.Sdl.GetAudioStreamQueued*
  nameWithType.vb: Sdl.GetAudioStreamQueued(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetAudioStreamQueued(System.IntPtr)
  name.vb: GetAudioStreamQueued(IntPtr)
- uid: SharpSDL3.Sdl.GetCurrentAudioDriver
  commentId: M:SharpSDL3.Sdl.GetCurrentAudioDriver
  id: GetCurrentAudioDriver
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetCurrentAudioDriver()
  nameWithType: Sdl.GetCurrentAudioDriver()
  fullName: SharpSDL3.Sdl.GetCurrentAudioDriver()
  type: Method
  source:
    remote:
      path: SDL3/Audio.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetCurrentAudioDriver
    path: ../../repos/SDL3-CS/SDL3/Audio.cs
    startLine: 724
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the name of the current audio driver.
  remarks: >-
    The names of drivers are all simple, low-ASCII identifiers, like "alsa",

    "coreaudio" or "wasapi". These never have Unicode characters, and are not

    meant to be proper names.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static string GetCurrentAudioDriver()
    return:
      type: System.String
      description: Returns the name of the current audio driver or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if nodriver has been initialized.
    content.vb: Public Shared Function GetCurrentAudioDriver() As String
  overload: SharpSDL3.Sdl.GetCurrentAudioDriver*
- uid: SharpSDL3.Sdl.GetNumAudioDrivers
  commentId: M:SharpSDL3.Sdl.GetNumAudioDrivers
  id: GetNumAudioDrivers
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetNumAudioDrivers()
  nameWithType: Sdl.GetNumAudioDrivers()
  fullName: SharpSDL3.Sdl.GetNumAudioDrivers()
  type: Method
  source:
    remote:
      path: SDL3/Audio.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetNumAudioDrivers
    path: ../../repos/SDL3-CS/SDL3/Audio.cs
    startLine: 747
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Use this function to get the number of built-in audio drivers.
  remarks: >-
    This function returns a hardcoded number. This never returns a negative

    value; if there are no drivers compiled into this build of SDL, this

    function returns zero. The presence of a driver in this list does not mean

    it will function, it just means SDL is capable of interacting with that

    interface. For example, a build of SDL might have esound support, but if

    there's no esound server available, SDL's esound driver would fail if used.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetAudioDriver(System.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static int GetNumAudioDrivers()
    return:
      type: System.Int32
      description: Returns the number of built-in audio drivers.
    content.vb: Public Shared Function GetNumAudioDrivers() As Integer
  overload: SharpSDL3.Sdl.GetNumAudioDrivers*
- uid: SharpSDL3.Sdl.GetSilenceValueForFormat(SharpSDL3.Enums.AudioFormat)
  commentId: M:SharpSDL3.Sdl.GetSilenceValueForFormat(SharpSDL3.Enums.AudioFormat)
  id: GetSilenceValueForFormat(SharpSDL3.Enums.AudioFormat)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetSilenceValueForFormat(AudioFormat)
  nameWithType: Sdl.GetSilenceValueForFormat(AudioFormat)
  fullName: SharpSDL3.Sdl.GetSilenceValueForFormat(SharpSDL3.Enums.AudioFormat)
  type: Method
  source:
    remote:
      path: SDL3/Audio.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetSilenceValueForFormat
    path: ../../repos/SDL3-CS/SDL3/Audio.cs
    startLine: 768
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the appropriate memset value for silencing an audio format.
  remarks: >-
    The value returned by this function can be used as the second argument to

    memset (or SDL_memset) to set an audio buffer in a specific

    format to silence.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static int GetSilenceValueForFormat(AudioFormat format)
    parameters:
    - id: format
      type: SharpSDL3.Enums.AudioFormat
      description: the audio data format to query.
    return:
      type: System.Int32
      description: Returns a byte value that can be passed to memset.
    content.vb: Public Shared Function GetSilenceValueForFormat(format As AudioFormat) As Integer
  overload: SharpSDL3.Sdl.GetSilenceValueForFormat*
- uid: SharpSDL3.Sdl.IsAudioDevicePhysical(System.UInt32)
  commentId: M:SharpSDL3.Sdl.IsAudioDevicePhysical(System.UInt32)
  id: IsAudioDevicePhysical(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: IsAudioDevicePhysical(uint)
  nameWithType: Sdl.IsAudioDevicePhysical(uint)
  fullName: SharpSDL3.Sdl.IsAudioDevicePhysical(uint)
  type: Method
  source:
    remote:
      path: SDL3/Audio.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: IsAudioDevicePhysical
    path: ../../repos/SDL3-CS/SDL3/Audio.cs
    startLine: 793
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Determine if an audio device is physical (instead of logical).
  remarks: >-
    An SDL_AudioDeviceID that represents physical hardware

    is a physical device; there is one for each piece of hardware that SDL can

    see. Logical devices are created by calling

    SDL_OpenAudioDevice or

    SDL_OpenAudioDeviceStream, and while each is

    associated with a physical device, there can be any number of logical

    devices on one physical device.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static SdlBool IsAudioDevicePhysical(uint devid)
    parameters:
    - id: devid
      type: System.UInt32
      description: the device ID to query.
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if devid is a physical device, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if it is logical.
    content.vb: Public Shared Function IsAudioDevicePhysical(devid As UInteger) As SdlBool
  overload: SharpSDL3.Sdl.IsAudioDevicePhysical*
  nameWithType.vb: Sdl.IsAudioDevicePhysical(UInteger)
  fullName.vb: SharpSDL3.Sdl.IsAudioDevicePhysical(UInteger)
  name.vb: IsAudioDevicePhysical(UInteger)
- uid: SharpSDL3.Sdl.IsAudioDevicePlayback(System.UInt32)
  commentId: M:SharpSDL3.Sdl.IsAudioDevicePlayback(System.UInt32)
  id: IsAudioDevicePlayback(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: IsAudioDevicePlayback(uint)
  nameWithType: Sdl.IsAudioDevicePlayback(uint)
  fullName: SharpSDL3.Sdl.IsAudioDevicePlayback(uint)
  type: Method
  source:
    remote:
      path: SDL3/Audio.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: IsAudioDevicePlayback
    path: ../../repos/SDL3-CS/SDL3/Audio.cs
    startLine: 812
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Determine if an audio device is a playback device (instead of recording).
  remarks: >-
    This function may return either <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> for invalid device IDs.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static SdlBool IsAudioDevicePlayback(uint devid)
    parameters:
    - id: devid
      type: System.UInt32
      description: the device ID to query.
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if devid is a playback device, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if it isrecording.
    content.vb: Public Shared Function IsAudioDevicePlayback(devid As UInteger) As SdlBool
  overload: SharpSDL3.Sdl.IsAudioDevicePlayback*
  nameWithType.vb: Sdl.IsAudioDevicePlayback(UInteger)
  fullName.vb: SharpSDL3.Sdl.IsAudioDevicePlayback(UInteger)
  name.vb: IsAudioDevicePlayback(UInteger)
- uid: SharpSDL3.Sdl.LoadWav(System.String,SharpSDL3.Structs.AudioSpec@,System.IntPtr@,System.UInt32@)
  commentId: M:SharpSDL3.Sdl.LoadWav(System.String,SharpSDL3.Structs.AudioSpec@,System.IntPtr@,System.UInt32@)
  id: LoadWav(System.String,SharpSDL3.Structs.AudioSpec@,System.IntPtr@,System.UInt32@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LoadWav(string, out AudioSpec, out nint, out uint)
  nameWithType: Sdl.LoadWav(string, out AudioSpec, out nint, out uint)
  fullName: SharpSDL3.Sdl.LoadWav(string, out SharpSDL3.Structs.AudioSpec, out nint, out uint)
  type: Method
  source:
    remote:
      path: SDL3/Audio.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LoadWav
    path: ../../repos/SDL3-CS/SDL3/Audio.cs
    startLine: 821
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static SdlBool LoadWav(string path, out AudioSpec spec, out nint audioBuf, out uint audioLen)
    parameters:
    - id: path
      type: System.String
    - id: spec
      type: SharpSDL3.Structs.AudioSpec
    - id: audioBuf
      type: System.IntPtr
    - id: audioLen
      type: System.UInt32
    return:
      type: SharpSDL3.Structs.SdlBool
    content.vb: Public Shared Function LoadWav(path As String, spec As AudioSpec, audioBuf As IntPtr, audioLen As UInteger) As SdlBool
  overload: SharpSDL3.Sdl.LoadWav*
  nameWithType.vb: Sdl.LoadWav(String, AudioSpec, IntPtr, UInteger)
  fullName.vb: SharpSDL3.Sdl.LoadWav(String, SharpSDL3.Structs.AudioSpec, System.IntPtr, UInteger)
  name.vb: LoadWav(String, AudioSpec, IntPtr, UInteger)
- uid: SharpSDL3.Sdl.LoadWavIo(System.IntPtr,SharpSDL3.Structs.SdlBool,SharpSDL3.Structs.AudioSpec@,System.IntPtr@,System.UInt32@)
  commentId: M:SharpSDL3.Sdl.LoadWavIo(System.IntPtr,SharpSDL3.Structs.SdlBool,SharpSDL3.Structs.AudioSpec@,System.IntPtr@,System.UInt32@)
  id: LoadWavIo(System.IntPtr,SharpSDL3.Structs.SdlBool,SharpSDL3.Structs.AudioSpec@,System.IntPtr@,System.UInt32@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LoadWavIo(nint, SdlBool, out AudioSpec, out nint, out uint)
  nameWithType: Sdl.LoadWavIo(nint, SdlBool, out AudioSpec, out nint, out uint)
  fullName: SharpSDL3.Sdl.LoadWavIo(nint, SharpSDL3.Structs.SdlBool, out SharpSDL3.Structs.AudioSpec, out nint, out uint)
  type: Method
  source:
    remote:
      path: SDL3/Audio.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LoadWavIo
    path: ../../repos/SDL3-CS/SDL3/Audio.cs
    startLine: 831
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static SdlBool LoadWavIo(nint src, SdlBool closeio, out AudioSpec spec, out nint audioBuf, out uint audioLen)
    parameters:
    - id: src
      type: System.IntPtr
    - id: closeio
      type: SharpSDL3.Structs.SdlBool
    - id: spec
      type: SharpSDL3.Structs.AudioSpec
    - id: audioBuf
      type: System.IntPtr
    - id: audioLen
      type: System.UInt32
    return:
      type: SharpSDL3.Structs.SdlBool
    content.vb: Public Shared Function LoadWavIo(src As IntPtr, closeio As SdlBool, spec As AudioSpec, audioBuf As IntPtr, audioLen As UInteger) As SdlBool
  overload: SharpSDL3.Sdl.LoadWavIo*
  nameWithType.vb: Sdl.LoadWavIo(IntPtr, SdlBool, AudioSpec, IntPtr, UInteger)
  fullName.vb: SharpSDL3.Sdl.LoadWavIo(System.IntPtr, SharpSDL3.Structs.SdlBool, SharpSDL3.Structs.AudioSpec, System.IntPtr, UInteger)
  name.vb: LoadWavIo(IntPtr, SdlBool, AudioSpec, IntPtr, UInteger)
- uid: SharpSDL3.Sdl.LockAudioStream(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.LockAudioStream(System.IntPtr)
  id: LockAudioStream(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LockAudioStream(nint)
  nameWithType: Sdl.LockAudioStream(nint)
  fullName: SharpSDL3.Sdl.LockAudioStream(nint)
  type: Method
  source:
    remote:
      path: SDL3/Audio.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LockAudioStream
    path: ../../repos/SDL3-CS/SDL3/Audio.cs
    startLine: 855
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Lock an audio stream for serialized access.
  remarks: >-
    Each SDL_AudioStream has an internal mutex it uses to

    protect its data structures from threading conflicts. This function allows

    an app to lock that mutex, which could be useful if registering callbacks

    on this stream.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.UnlockAudioStream(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static SdlBool LockAudioStream(nint stream)
    parameters:
    - id: stream
      type: System.IntPtr
      description: the audio stream to lock.
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function LockAudioStream(stream As IntPtr) As SdlBool
  overload: SharpSDL3.Sdl.LockAudioStream*
  nameWithType.vb: Sdl.LockAudioStream(IntPtr)
  fullName.vb: SharpSDL3.Sdl.LockAudioStream(System.IntPtr)
  name.vb: LockAudioStream(IntPtr)
- uid: SharpSDL3.Sdl.MixAudio(System.IntPtr,System.IntPtr,SharpSDL3.Enums.AudioFormat,System.UInt32,System.Single)
  commentId: M:SharpSDL3.Sdl.MixAudio(System.IntPtr,System.IntPtr,SharpSDL3.Enums.AudioFormat,System.UInt32,System.Single)
  id: MixAudio(System.IntPtr,System.IntPtr,SharpSDL3.Enums.AudioFormat,System.UInt32,System.Single)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: MixAudio(nint, nint, AudioFormat, uint, float)
  nameWithType: Sdl.MixAudio(nint, nint, AudioFormat, uint, float)
  fullName: SharpSDL3.Sdl.MixAudio(nint, nint, SharpSDL3.Enums.AudioFormat, uint, float)
  type: Method
  source:
    remote:
      path: SDL3/Audio.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: MixAudio
    path: ../../repos/SDL3-CS/SDL3/Audio.cs
    startLine: 881
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Mix audio data in a specified format.
  remarks: >-
    This takes an audio buffer src of len bytes of format data and mixes

    it into dst, performing addition, volume adjustment, and overflow

    clipping. The buffer pointed to by dst must also be len bytes of

    format data.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static SdlBool MixAudio(nint dst, nint src, AudioFormat format, uint len, float volume)
    parameters:
    - id: dst
      type: System.IntPtr
      description: the destination for the mixed audio.
    - id: src
      type: System.IntPtr
      description: the source audio buffer to be mixed.
    - id: format
      type: SharpSDL3.Enums.AudioFormat
      description: the SDL_AudioFormat structure representing the desired audio format.
    - id: len
      type: System.UInt32
      description: the length of the audio buffer in bytes.
    - id: volume
      type: System.Single
      description: ranges from 0.0 - 1.0, and should be set to 1.0 for full audio volume.
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function MixAudio(dst As IntPtr, src As IntPtr, format As AudioFormat, len As UInteger, volume As Single) As SdlBool
  overload: SharpSDL3.Sdl.MixAudio*
  nameWithType.vb: Sdl.MixAudio(IntPtr, IntPtr, AudioFormat, UInteger, Single)
  fullName.vb: SharpSDL3.Sdl.MixAudio(System.IntPtr, System.IntPtr, SharpSDL3.Enums.AudioFormat, UInteger, Single)
  name.vb: MixAudio(IntPtr, IntPtr, AudioFormat, UInteger, Single)
- uid: SharpSDL3.Sdl.OpenAudioDevice(System.UInt32,SharpSDL3.Structs.AudioSpec@)
  commentId: M:SharpSDL3.Sdl.OpenAudioDevice(System.UInt32,SharpSDL3.Structs.AudioSpec@)
  id: OpenAudioDevice(System.UInt32,SharpSDL3.Structs.AudioSpec@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: OpenAudioDevice(uint, ref AudioSpec)
  nameWithType: Sdl.OpenAudioDevice(uint, ref AudioSpec)
  fullName: SharpSDL3.Sdl.OpenAudioDevice(uint, ref SharpSDL3.Structs.AudioSpec)
  type: Method
  source:
    remote:
      path: SDL3/Audio.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: OpenAudioDevice
    path: ../../repos/SDL3-CS/SDL3/Audio.cs
    startLine: 906
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Open a specific audio device.
  remarks: >-
    You can open both playback and recording devices through this function.

    Playback devices will take data from bound audio streams, mix it, and send

    it to the hardware. Recording devices will feed any bound audio streams

    with a copy of any incoming data.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CloseAudioDevice(System.UInt32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetAudioDeviceFormat(System.UInt32%2cSharpSDL3.Structs.AudioSpec%40%2cSystem.Int32%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static uint OpenAudioDevice(uint devid, ref AudioSpec spec)
    parameters:
    - id: devid
      type: System.UInt32
      description: the device instance id to open, or SDL_AUDIO_DEVICE_DEFAULT_PLAYBACK or SDL_AUDIO_DEVICE_DEFAULT_RECORDING for the most reasonable default device.
    - id: spec
      type: SharpSDL3.Structs.AudioSpec
      description: the requested device configuration. Can be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to use reasonable defaults.
    return:
      type: System.UInt32
      description: Returns the device ID on successor 0 on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function OpenAudioDevice(devid As UInteger, spec As AudioSpec) As UInteger
  overload: SharpSDL3.Sdl.OpenAudioDevice*
  nameWithType.vb: Sdl.OpenAudioDevice(UInteger, AudioSpec)
  fullName.vb: SharpSDL3.Sdl.OpenAudioDevice(UInteger, SharpSDL3.Structs.AudioSpec)
  name.vb: OpenAudioDevice(UInteger, AudioSpec)
- uid: SharpSDL3.Sdl.OpenAudioDeviceStream(System.UInt32,SharpSDL3.Structs.AudioSpec@,SharpSDL3.Delegates.SdlAudioStreamCallback,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.OpenAudioDeviceStream(System.UInt32,SharpSDL3.Structs.AudioSpec@,SharpSDL3.Delegates.SdlAudioStreamCallback,System.IntPtr)
  id: OpenAudioDeviceStream(System.UInt32,SharpSDL3.Structs.AudioSpec@,SharpSDL3.Delegates.SdlAudioStreamCallback,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: OpenAudioDeviceStream(uint, ref AudioSpec, SdlAudioStreamCallback, nint)
  nameWithType: Sdl.OpenAudioDeviceStream(uint, ref AudioSpec, Delegates.SdlAudioStreamCallback, nint)
  fullName: SharpSDL3.Sdl.OpenAudioDeviceStream(uint, ref SharpSDL3.Structs.AudioSpec, SharpSDL3.Delegates.SdlAudioStreamCallback, nint)
  type: Method
  source:
    remote:
      path: SDL3/Audio.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: OpenAudioDeviceStream
    path: ../../repos/SDL3-CS/SDL3/Audio.cs
    startLine: 931
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Convenience function for straightforward audio init for the common case.
  remarks: >-
    If all your app intends to do is provide a single source of PCM audio, this

    function allows you to do all your audio setup in a single call.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetAudioStreamDevice(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.ResumeAudioStreamDevice(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint OpenAudioDeviceStream(uint devid, ref AudioSpec spec, Delegates.SdlAudioStreamCallback callback, nint userdata)
    parameters:
    - id: devid
      type: System.UInt32
      description: an audio device to open, or SDL_AUDIO_DEVICE_DEFAULT_PLAYBACK or SDL_AUDIO_DEVICE_DEFAULT_RECORDING.
    - id: spec
      type: SharpSDL3.Structs.AudioSpec
      description: the audio stream's data format. Can be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    - id: callback
      type: SharpSDL3.Delegates.SdlAudioStreamCallback
      description: a callback where the app will provide new data for playback, or receive new data for recording. Can be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>, in which case the app will need to call SDL_PutAudioStreamData or SDL_GetAudioStreamData as necessary.
    - id: userdata
      type: System.IntPtr
      description: app-controlled pointer passed to callback. Can be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>. Ignored if callback is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    return:
      type: System.IntPtr
      description: (SDL_AudioStream *) Returns an audio stream on success,ready to use, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information. When done with this stream, callSDL_DestroyAudioStream to free resources andclose the device.
    content.vb: Public Shared Function OpenAudioDeviceStream(devid As UInteger, spec As AudioSpec, callback As Delegates.SdlAudioStreamCallback, userdata As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.OpenAudioDeviceStream*
  nameWithType.vb: Sdl.OpenAudioDeviceStream(UInteger, AudioSpec, Delegates.SdlAudioStreamCallback, IntPtr)
  fullName.vb: SharpSDL3.Sdl.OpenAudioDeviceStream(UInteger, SharpSDL3.Structs.AudioSpec, SharpSDL3.Delegates.SdlAudioStreamCallback, System.IntPtr)
  name.vb: OpenAudioDeviceStream(UInteger, AudioSpec, SdlAudioStreamCallback, IntPtr)
- uid: SharpSDL3.Sdl.PauseAudioDevice(System.UInt32)
  commentId: M:SharpSDL3.Sdl.PauseAudioDevice(System.UInt32)
  id: PauseAudioDevice(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: PauseAudioDevice(uint)
  nameWithType: Sdl.PauseAudioDevice(uint)
  fullName: SharpSDL3.Sdl.PauseAudioDevice(uint)
  type: Method
  source:
    remote:
      path: SDL3/Audio.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: PauseAudioDevice
    path: ../../repos/SDL3-CS/SDL3/Audio.cs
    startLine: 955
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Use this function to pause audio playback on a specified device.
  remarks: >-
    This function pauses audio processing for a given device. Any bound audio

    streams will not progress, and no audio will be generated. Pausing one

    device does not prevent other unpaused devices from running.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.ResumeAudioDevice(System.UInt32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.AudioDevicePaused(System.UInt32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static SdlBool PauseAudioDevice(uint dev)
    parameters:
    - id: dev
      type: System.UInt32
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function PauseAudioDevice(dev As UInteger) As SdlBool
  overload: SharpSDL3.Sdl.PauseAudioDevice*
  nameWithType.vb: Sdl.PauseAudioDevice(UInteger)
  fullName.vb: SharpSDL3.Sdl.PauseAudioDevice(UInteger)
  name.vb: PauseAudioDevice(UInteger)
- uid: SharpSDL3.Sdl.PauseAudioStreamDevice(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.PauseAudioStreamDevice(System.IntPtr)
  id: PauseAudioStreamDevice(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: PauseAudioStreamDevice(nint)
  nameWithType: Sdl.PauseAudioStreamDevice(nint)
  fullName: SharpSDL3.Sdl.PauseAudioStreamDevice(nint)
  type: Method
  source:
    remote:
      path: SDL3/Audio.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: PauseAudioStreamDevice
    path: ../../repos/SDL3-CS/SDL3/Audio.cs
    startLine: 977
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Use this function to pause audio playback on the audio device associated with an audio stream.
  remarks: >-
    This function pauses audio processing for a given device. Any bound audio

    streams will not progress, and no audio will be generated. Pausing one

    device does not prevent other unpaused devices from running.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.ResumeAudioStreamDevice(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static SdlBool PauseAudioStreamDevice(nint stream)
    parameters:
    - id: stream
      type: System.IntPtr
      description: the audio stream associated with the audio device to pause.
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function PauseAudioStreamDevice(stream As IntPtr) As SdlBool
  overload: SharpSDL3.Sdl.PauseAudioStreamDevice*
  nameWithType.vb: Sdl.PauseAudioStreamDevice(IntPtr)
  fullName.vb: SharpSDL3.Sdl.PauseAudioStreamDevice(System.IntPtr)
  name.vb: PauseAudioStreamDevice(IntPtr)
- uid: SharpSDL3.Sdl.PutAudioStreamData(System.IntPtr,System.IntPtr,System.Int32)
  commentId: M:SharpSDL3.Sdl.PutAudioStreamData(System.IntPtr,System.IntPtr,System.Int32)
  id: PutAudioStreamData(System.IntPtr,System.IntPtr,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: PutAudioStreamData(nint, nint, int)
  nameWithType: Sdl.PutAudioStreamData(nint, nint, int)
  fullName: SharpSDL3.Sdl.PutAudioStreamData(nint, nint, int)
  type: Method
  source:
    remote:
      path: SDL3/Audio.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: PutAudioStreamData
    path: ../../repos/SDL3-CS/SDL3/Audio.cs
    startLine: 1004
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Add data to the stream.
  remarks: >-
    This data must match the format/channels/samplerate specified in the latest

    call to SDL_SetAudioStreamFormat, or the format

    specified when creating the stream if it hasn't been changed.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread, but if the stream has acallback set, the caller might need to manage extra locking.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.ClearAudioStream(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.FlushAudioStream(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetAudioStreamData(System.IntPtr%2cSystem.IntPtr%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetAudioStreamQueued(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static SdlBool PutAudioStreamData(nint stream, nint buf, int len)
    parameters:
    - id: stream
      type: System.IntPtr
      description: the stream the audio data is being added to.
    - id: buf
      type: System.IntPtr
      description: a pointer to the audio data to add.
    - id: len
      type: System.Int32
      description: the number of bytes to write to the stream.
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function PutAudioStreamData(stream As IntPtr, buf As IntPtr, len As Integer) As SdlBool
  overload: SharpSDL3.Sdl.PutAudioStreamData*
  nameWithType.vb: Sdl.PutAudioStreamData(IntPtr, IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.PutAudioStreamData(System.IntPtr, System.IntPtr, Integer)
  name.vb: PutAudioStreamData(IntPtr, IntPtr, Integer)
- uid: SharpSDL3.Sdl.ResumeAudioDevice(System.UInt32)
  commentId: M:SharpSDL3.Sdl.ResumeAudioDevice(System.UInt32)
  id: ResumeAudioDevice(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ResumeAudioDevice(uint)
  nameWithType: Sdl.ResumeAudioDevice(uint)
  fullName: SharpSDL3.Sdl.ResumeAudioDevice(uint)
  type: Method
  source:
    remote:
      path: SDL3/Audio.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ResumeAudioDevice
    path: ../../repos/SDL3-CS/SDL3/Audio.cs
    startLine: 1028
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Use this function to unpause audio playback on a specified device.
  remarks: >-
    This function unpauses audio processing for a given device that has

    previously been paused with SDL_PauseAudioDevice().

    Once unpaused, any bound audio streams will begin to progress again, and

    audio can be generated.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.AudioDevicePaused(System.UInt32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.PauseAudioDevice(System.UInt32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static SdlBool ResumeAudioDevice(uint dev)
    parameters:
    - id: dev
      type: System.UInt32
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function ResumeAudioDevice(dev As UInteger) As SdlBool
  overload: SharpSDL3.Sdl.ResumeAudioDevice*
  nameWithType.vb: Sdl.ResumeAudioDevice(UInteger)
  fullName.vb: SharpSDL3.Sdl.ResumeAudioDevice(UInteger)
  name.vb: ResumeAudioDevice(UInteger)
- uid: SharpSDL3.Sdl.ResumeAudioStreamDevice(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.ResumeAudioStreamDevice(System.IntPtr)
  id: ResumeAudioStreamDevice(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ResumeAudioStreamDevice(nint)
  nameWithType: Sdl.ResumeAudioStreamDevice(nint)
  fullName: SharpSDL3.Sdl.ResumeAudioStreamDevice(nint)
  type: Method
  source:
    remote:
      path: SDL3/Audio.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ResumeAudioStreamDevice
    path: ../../repos/SDL3-CS/SDL3/Audio.cs
    startLine: 1050
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Use this function to unpause audio playback on the audio device associated with an audio stream.
  remarks: >-
    This function unpauses audio processing for a given device that has

    previously been paused. Once unpaused, any bound audio streams will begin

    to progress again, and audio can be generated.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.PauseAudioStreamDevice(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static SdlBool ResumeAudioStreamDevice(nint stream)
    parameters:
    - id: stream
      type: System.IntPtr
      description: the audio stream associated with the audio device to resume.
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function ResumeAudioStreamDevice(stream As IntPtr) As SdlBool
  overload: SharpSDL3.Sdl.ResumeAudioStreamDevice*
  nameWithType.vb: Sdl.ResumeAudioStreamDevice(IntPtr)
  fullName.vb: SharpSDL3.Sdl.ResumeAudioStreamDevice(System.IntPtr)
  name.vb: ResumeAudioStreamDevice(IntPtr)
- uid: SharpSDL3.Sdl.SetAudioDeviceGain(System.UInt32,System.Single)
  commentId: M:SharpSDL3.Sdl.SetAudioDeviceGain(System.UInt32,System.Single)
  id: SetAudioDeviceGain(System.UInt32,System.Single)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetAudioDeviceGain(uint, float)
  nameWithType: Sdl.SetAudioDeviceGain(uint, float)
  fullName: SharpSDL3.Sdl.SetAudioDeviceGain(uint, float)
  type: Method
  source:
    remote:
      path: SDL3/Audio.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetAudioDeviceGain
    path: ../../repos/SDL3-CS/SDL3/Audio.cs
    startLine: 1072
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Change the gain of an audio device.
  remarks: >-
    The gain of a device is its volume; a larger gain means a louder output,

    with a gain of zero being silence.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread, as it holds astream-specific mutex while running.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetAudioDeviceGain(System.UInt32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static SdlBool SetAudioDeviceGain(uint devid, float gain)
    parameters:
    - id: devid
      type: System.UInt32
      description: the audio device on which to change gain.
    - id: gain
      type: System.Single
      description: the gain. 1.0f is no change, 0.0f is silence.
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetAudioDeviceGain(devid As UInteger, gain As Single) As SdlBool
  overload: SharpSDL3.Sdl.SetAudioDeviceGain*
  nameWithType.vb: Sdl.SetAudioDeviceGain(UInteger, Single)
  fullName.vb: SharpSDL3.Sdl.SetAudioDeviceGain(UInteger, Single)
  name.vb: SetAudioDeviceGain(UInteger, Single)
- uid: SharpSDL3.Sdl.SetAudioPostmixCallback(System.UInt32,SharpSDL3.Delegates.SdlAudioPostmixCallback,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.SetAudioPostmixCallback(System.UInt32,SharpSDL3.Delegates.SdlAudioPostmixCallback,System.IntPtr)
  id: SetAudioPostmixCallback(System.UInt32,SharpSDL3.Delegates.SdlAudioPostmixCallback,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetAudioPostmixCallback(uint, SdlAudioPostmixCallback, nint)
  nameWithType: Sdl.SetAudioPostmixCallback(uint, Delegates.SdlAudioPostmixCallback, nint)
  fullName: SharpSDL3.Sdl.SetAudioPostmixCallback(uint, SharpSDL3.Delegates.SdlAudioPostmixCallback, nint)
  type: Method
  source:
    remote:
      path: SDL3/Audio.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetAudioPostmixCallback
    path: ../../repos/SDL3-CS/SDL3/Audio.cs
    startLine: 1094
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set a callback that fires when data is about to be fed to an audio device.
  remarks: >-
    This is useful for accessing the final mix, perhaps for writing a

    visualizer or applying a final effect to the audio data before playback.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static SdlBool SetAudioPostmixCallback(uint devid, Delegates.SdlAudioPostmixCallback callback, nint userdata)
    parameters:
    - id: devid
      type: System.UInt32
      description: the ID of an opened audio device.
    - id: callback
      type: SharpSDL3.Delegates.SdlAudioPostmixCallback
      description: a callback function to be called. Can be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    - id: userdata
      type: System.IntPtr
      description: app-controlled pointer passed to callback. Can be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetAudioPostmixCallback(devid As UInteger, callback As Delegates.SdlAudioPostmixCallback, userdata As IntPtr) As SdlBool
  overload: SharpSDL3.Sdl.SetAudioPostmixCallback*
  nameWithType.vb: Sdl.SetAudioPostmixCallback(UInteger, Delegates.SdlAudioPostmixCallback, IntPtr)
  fullName.vb: SharpSDL3.Sdl.SetAudioPostmixCallback(UInteger, SharpSDL3.Delegates.SdlAudioPostmixCallback, System.IntPtr)
  name.vb: SetAudioPostmixCallback(UInteger, SdlAudioPostmixCallback, IntPtr)
- uid: SharpSDL3.Sdl.SetAudioStreamFormat(System.IntPtr,SharpSDL3.Structs.AudioSpec@,SharpSDL3.Structs.AudioSpec@)
  commentId: M:SharpSDL3.Sdl.SetAudioStreamFormat(System.IntPtr,SharpSDL3.Structs.AudioSpec@,SharpSDL3.Structs.AudioSpec@)
  id: SetAudioStreamFormat(System.IntPtr,SharpSDL3.Structs.AudioSpec@,SharpSDL3.Structs.AudioSpec@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetAudioStreamFormat(nint, ref AudioSpec, ref AudioSpec)
  nameWithType: Sdl.SetAudioStreamFormat(nint, ref AudioSpec, ref AudioSpec)
  fullName: SharpSDL3.Sdl.SetAudioStreamFormat(nint, ref SharpSDL3.Structs.AudioSpec, ref SharpSDL3.Structs.AudioSpec)
  type: Method
  source:
    remote:
      path: SDL3/Audio.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetAudioStreamFormat
    path: ../../repos/SDL3-CS/SDL3/Audio.cs
    startLine: 1122
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Change the input and output formats of an audio stream.
  remarks: >-
    Future calls to and

    SDL_GetAudioStreamAvailable and

    SDL_GetAudioStreamData will reflect the new

    format, and future calls to

    SDL_PutAudioStreamData must provide data in the

    new input formats.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread, as it holds astream-specific mutex while running.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetAudioStreamFormat(System.IntPtr%2cSharpSDL3.Structs.AudioSpec%40%2cSharpSDL3.Structs.AudioSpec%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetAudioStreamFrequencyRatio(System.IntPtr%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static SdlBool SetAudioStreamFormat(nint stream, ref AudioSpec srcSpec, ref AudioSpec dstSpec)
    parameters:
    - id: stream
      type: System.IntPtr
      description: the stream the format is being changed.
    - id: srcSpec
      type: SharpSDL3.Structs.AudioSpec
    - id: dstSpec
      type: SharpSDL3.Structs.AudioSpec
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetAudioStreamFormat(stream As IntPtr, srcSpec As AudioSpec, dstSpec As AudioSpec) As SdlBool
  overload: SharpSDL3.Sdl.SetAudioStreamFormat*
  nameWithType.vb: Sdl.SetAudioStreamFormat(IntPtr, AudioSpec, AudioSpec)
  fullName.vb: SharpSDL3.Sdl.SetAudioStreamFormat(System.IntPtr, SharpSDL3.Structs.AudioSpec, SharpSDL3.Structs.AudioSpec)
  name.vb: SetAudioStreamFormat(IntPtr, AudioSpec, AudioSpec)
- uid: SharpSDL3.Sdl.SetAudioStreamFrequencyRatio(System.IntPtr,System.Single)
  commentId: M:SharpSDL3.Sdl.SetAudioStreamFrequencyRatio(System.IntPtr,System.Single)
  id: SetAudioStreamFrequencyRatio(System.IntPtr,System.Single)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetAudioStreamFrequencyRatio(nint, float)
  nameWithType: Sdl.SetAudioStreamFrequencyRatio(nint, float)
  fullName: SharpSDL3.Sdl.SetAudioStreamFrequencyRatio(nint, float)
  type: Method
  source:
    remote:
      path: SDL3/Audio.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetAudioStreamFrequencyRatio
    path: ../../repos/SDL3-CS/SDL3/Audio.cs
    startLine: 1148
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Change the frequency ratio of an audio stream.
  remarks: >-
    The frequency ratio is used to adjust the rate at which input data is

    consumed. Changing this effectively modifies the speed and pitch of the

    audio. A value greater than 1.0 will play the audio faster, and at a higher

    pitch. A value less than 1.0 will play the audio slower, and at a lower

    pitch.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread, as it holds astream-specific mutex while running.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetAudioStreamFrequencyRatio(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetAudioStreamFormat(System.IntPtr%2cSharpSDL3.Structs.AudioSpec%40%2cSharpSDL3.Structs.AudioSpec%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static SdlBool SetAudioStreamFrequencyRatio(nint stream, float ratio)
    parameters:
    - id: stream
      type: System.IntPtr
      description: the stream the frequency ratio is being changed.
    - id: ratio
      type: System.Single
      description: the frequency ratio. 1.0 is normal speed. Must be between 0.01 and 100.
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetAudioStreamFrequencyRatio(stream As IntPtr, ratio As Single) As SdlBool
  overload: SharpSDL3.Sdl.SetAudioStreamFrequencyRatio*
  nameWithType.vb: Sdl.SetAudioStreamFrequencyRatio(IntPtr, Single)
  fullName.vb: SharpSDL3.Sdl.SetAudioStreamFrequencyRatio(System.IntPtr, Single)
  name.vb: SetAudioStreamFrequencyRatio(IntPtr, Single)
- uid: SharpSDL3.Sdl.SetAudioStreamGetCallback(System.IntPtr,SharpSDL3.Delegates.SdlAudioStreamCallback,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.SetAudioStreamGetCallback(System.IntPtr,SharpSDL3.Delegates.SdlAudioStreamCallback,System.IntPtr)
  id: SetAudioStreamGetCallback(System.IntPtr,SharpSDL3.Delegates.SdlAudioStreamCallback,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetAudioStreamGetCallback(nint, SdlAudioStreamCallback, nint)
  nameWithType: Sdl.SetAudioStreamGetCallback(nint, Delegates.SdlAudioStreamCallback, nint)
  fullName: SharpSDL3.Sdl.SetAudioStreamGetCallback(nint, SharpSDL3.Delegates.SdlAudioStreamCallback, nint)
  type: Method
  source:
    remote:
      path: SDL3/Audio.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetAudioStreamGetCallback
    path: ../../repos/SDL3-CS/SDL3/Audio.cs
    startLine: 1171
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set a callback that runs when data is requested from an audio stream.
  remarks: >-
    This callback is called before data is obtained from the stream, giving

    the callback the chance to add more on-demand.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetAudioStreamPutCallback(System.IntPtr%2cSharpSDL3.Delegates.SdlAudioStreamCallback%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static SdlBool SetAudioStreamGetCallback(nint stream, Delegates.SdlAudioStreamCallback callback, nint userdata)
    parameters:
    - id: stream
      type: System.IntPtr
      description: the audio stream to set the new callback on.
    - id: callback
      type: SharpSDL3.Delegates.SdlAudioStreamCallback
      description: the new callback function to call when data is requested from the stream.
    - id: userdata
      type: System.IntPtr
      description: an opaque pointer provided to the callback for its own personal use.
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information. This only fails ifstream is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    content.vb: Public Shared Function SetAudioStreamGetCallback(stream As IntPtr, callback As Delegates.SdlAudioStreamCallback, userdata As IntPtr) As SdlBool
  overload: SharpSDL3.Sdl.SetAudioStreamGetCallback*
  nameWithType.vb: Sdl.SetAudioStreamGetCallback(IntPtr, Delegates.SdlAudioStreamCallback, IntPtr)
  fullName.vb: SharpSDL3.Sdl.SetAudioStreamGetCallback(System.IntPtr, SharpSDL3.Delegates.SdlAudioStreamCallback, System.IntPtr)
  name.vb: SetAudioStreamGetCallback(IntPtr, SdlAudioStreamCallback, IntPtr)
- uid: SharpSDL3.Sdl.SetAudioStreamInputChannelMap(System.IntPtr,System.Span{System.Int32},System.Int32)
  commentId: M:SharpSDL3.Sdl.SetAudioStreamInputChannelMap(System.IntPtr,System.Span{System.Int32},System.Int32)
  id: SetAudioStreamInputChannelMap(System.IntPtr,System.Span{System.Int32},System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetAudioStreamInputChannelMap(nint, Span<int>, int)
  nameWithType: Sdl.SetAudioStreamInputChannelMap(nint, Span<int>, int)
  fullName: SharpSDL3.Sdl.SetAudioStreamInputChannelMap(nint, System.Span<int>, int)
  type: Method
  source:
    remote:
      path: SDL3/Audio.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetAudioStreamInputChannelMap
    path: ../../repos/SDL3-CS/SDL3/Audio.cs
    startLine: 1194
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set the current input channel map of an audio stream.
  remarks: >-
    Channel maps are optional; most things do not need them, instead passing

    data in the order that SDL expects.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread, as it holds astream-specific mutex while running. Don't change the stream's format tohave a different number of channels from a a different thread at the sametime, though!</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetAudioStreamInputChannelMap(System.IntPtr%2cSystem.Span%7bSystem.Int32%7d%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static SdlBool SetAudioStreamInputChannelMap(nint stream, Span<int> chmap, int count)
    parameters:
    - id: stream
      type: System.IntPtr
      description: the SDL_AudioStream to change.
    - id: chmap
      type: System.Span{System.Int32}
      description: the new channel map, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to reset to default.
    - id: count
      type: System.Int32
      description: The number of channels in the map.
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetAudioStreamInputChannelMap(stream As IntPtr, chmap As Span(Of Integer), count As Integer) As SdlBool
  overload: SharpSDL3.Sdl.SetAudioStreamInputChannelMap*
  nameWithType.vb: Sdl.SetAudioStreamInputChannelMap(IntPtr, Span(Of Integer), Integer)
  fullName.vb: SharpSDL3.Sdl.SetAudioStreamInputChannelMap(System.IntPtr, System.Span(Of Integer), Integer)
  name.vb: SetAudioStreamInputChannelMap(IntPtr, Span(Of Integer), Integer)
- uid: SharpSDL3.Sdl.SetAudioStreamOutputChannelMap(System.IntPtr,System.Span{System.Int32},System.Int32)
  commentId: M:SharpSDL3.Sdl.SetAudioStreamOutputChannelMap(System.IntPtr,System.Span{System.Int32},System.Int32)
  id: SetAudioStreamOutputChannelMap(System.IntPtr,System.Span{System.Int32},System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetAudioStreamOutputChannelMap(nint, Span<int>, int)
  nameWithType: Sdl.SetAudioStreamOutputChannelMap(nint, Span<int>, int)
  fullName: SharpSDL3.Sdl.SetAudioStreamOutputChannelMap(nint, System.Span<int>, int)
  type: Method
  source:
    remote:
      path: SDL3/Audio.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetAudioStreamOutputChannelMap
    path: ../../repos/SDL3-CS/SDL3/Audio.cs
    startLine: 1217
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set the current output channel map of an audio stream.
  remarks: >-
    Channel maps are optional; most things do not need them, instead passing

    data in the order that SDL expects.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread, as it holds astream-specific mutex while running. Don't change the stream's format tohave a different number of channels from a a different thread at the sametime, though!</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetAudioStreamInputChannelMap(System.IntPtr%2cSystem.Span%7bSystem.Int32%7d%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static SdlBool SetAudioStreamOutputChannelMap(nint stream, Span<int> chmap, int count)
    parameters:
    - id: stream
      type: System.IntPtr
      description: the SDL_AudioStream to change.
    - id: chmap
      type: System.Span{System.Int32}
      description: the new channel map, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to reset to default.
    - id: count
      type: System.Int32
      description: The number of channels in the map.
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetAudioStreamOutputChannelMap(stream As IntPtr, chmap As Span(Of Integer), count As Integer) As SdlBool
  overload: SharpSDL3.Sdl.SetAudioStreamOutputChannelMap*
  nameWithType.vb: Sdl.SetAudioStreamOutputChannelMap(IntPtr, Span(Of Integer), Integer)
  fullName.vb: SharpSDL3.Sdl.SetAudioStreamOutputChannelMap(System.IntPtr, System.Span(Of Integer), Integer)
  name.vb: SetAudioStreamOutputChannelMap(IntPtr, Span(Of Integer), Integer)
- uid: SharpSDL3.Sdl.SetAudioStreamPutCallback(System.IntPtr,SharpSDL3.Delegates.SdlAudioStreamCallback,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.SetAudioStreamPutCallback(System.IntPtr,SharpSDL3.Delegates.SdlAudioStreamCallback,System.IntPtr)
  id: SetAudioStreamPutCallback(System.IntPtr,SharpSDL3.Delegates.SdlAudioStreamCallback,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetAudioStreamPutCallback(nint, SdlAudioStreamCallback, nint)
  nameWithType: Sdl.SetAudioStreamPutCallback(nint, Delegates.SdlAudioStreamCallback, nint)
  fullName: SharpSDL3.Sdl.SetAudioStreamPutCallback(nint, SharpSDL3.Delegates.SdlAudioStreamCallback, nint)
  type: Method
  source:
    remote:
      path: SDL3/Audio.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetAudioStreamPutCallback
    path: ../../repos/SDL3-CS/SDL3/Audio.cs
    startLine: 1240
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set a callback that runs when data is added to an audio stream.
  remarks: >-
    This callback is called after the data is added to the stream, giving the

    callback the chance to obtain it immediately.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetAudioStreamGetCallback(System.IntPtr%2cSharpSDL3.Delegates.SdlAudioStreamCallback%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static SdlBool SetAudioStreamPutCallback(nint stream, Delegates.SdlAudioStreamCallback callback, nint userdata)
    parameters:
    - id: stream
      type: System.IntPtr
      description: the audio stream to set the new callback on.
    - id: callback
      type: SharpSDL3.Delegates.SdlAudioStreamCallback
      description: the new callback function to call when data is added to the stream.
    - id: userdata
      type: System.IntPtr
      description: an opaque pointer provided to the callback for its own personal use.
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information. This only fails ifstream is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    content.vb: Public Shared Function SetAudioStreamPutCallback(stream As IntPtr, callback As Delegates.SdlAudioStreamCallback, userdata As IntPtr) As SdlBool
  overload: SharpSDL3.Sdl.SetAudioStreamPutCallback*
  nameWithType.vb: Sdl.SetAudioStreamPutCallback(IntPtr, Delegates.SdlAudioStreamCallback, IntPtr)
  fullName.vb: SharpSDL3.Sdl.SetAudioStreamPutCallback(System.IntPtr, SharpSDL3.Delegates.SdlAudioStreamCallback, System.IntPtr)
  name.vb: SetAudioStreamPutCallback(IntPtr, SdlAudioStreamCallback, IntPtr)
- uid: SharpSDL3.Sdl.UnbindAudioStream(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.UnbindAudioStream(System.IntPtr)
  id: UnbindAudioStream(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: UnbindAudioStream(nint)
  nameWithType: Sdl.UnbindAudioStream(nint)
  fullName: SharpSDL3.Sdl.UnbindAudioStream(nint)
  type: Method
  source:
    remote:
      path: SDL3/Audio.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: UnbindAudioStream
    path: ../../repos/SDL3-CS/SDL3/Audio.cs
    startLine: 1260
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Unbind a single audio stream from its audio device.
  remarks: >-
    This is a convenience function, equivalent to calling

    SDL_UnbindAudioStreams(&amp;stream, 1).

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.BindAudioStream(System.UInt32%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void UnbindAudioStream(nint stream)
    parameters:
    - id: stream
      type: System.IntPtr
      description: an audio stream to unbind from a device. Can be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    content.vb: Public Shared Sub UnbindAudioStream(stream As IntPtr)
  overload: SharpSDL3.Sdl.UnbindAudioStream*
  nameWithType.vb: Sdl.UnbindAudioStream(IntPtr)
  fullName.vb: SharpSDL3.Sdl.UnbindAudioStream(System.IntPtr)
  name.vb: UnbindAudioStream(IntPtr)
- uid: SharpSDL3.Sdl.UnbindAudioStreams(System.Span{System.IntPtr})
  commentId: M:SharpSDL3.Sdl.UnbindAudioStreams(System.Span{System.IntPtr})
  id: UnbindAudioStreams(System.Span{System.IntPtr})
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: UnbindAudioStreams(Span<nint>)
  nameWithType: Sdl.UnbindAudioStreams(Span<nint>)
  fullName: SharpSDL3.Sdl.UnbindAudioStreams(System.Span<nint>)
  type: Method
  source:
    remote:
      path: SDL3/Audio.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: UnbindAudioStreams
    path: ../../repos/SDL3-CS/SDL3/Audio.cs
    startLine: 1290
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Unbind a list of audio streams from their audio devices.
  remarks: >-
    The streams being unbound do not all have to be on the same device. All

    streams on the same device will be unbound atomically (data will stop

    flowing through all unbound streams on the same device at the same time).

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.BindAudioStreams(System.UInt32%2cSystem.Span%7bSystem.IntPtr%7d)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void UnbindAudioStreams(Span<nint> streams)
    parameters:
    - id: streams
      type: System.Span{System.IntPtr}
      description: an array of audio streams to unbind. Can be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> or contain <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    content.vb: Public Shared Sub UnbindAudioStreams(streams As Span(Of IntPtr))
  overload: SharpSDL3.Sdl.UnbindAudioStreams*
  nameWithType.vb: Sdl.UnbindAudioStreams(Span(Of IntPtr))
  fullName.vb: SharpSDL3.Sdl.UnbindAudioStreams(System.Span(Of System.IntPtr))
  name.vb: UnbindAudioStreams(Span(Of IntPtr))
- uid: SharpSDL3.Sdl.UnlockAudioStream(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.UnlockAudioStream(System.IntPtr)
  id: UnlockAudioStream(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: UnlockAudioStream(nint)
  nameWithType: Sdl.UnlockAudioStream(nint)
  fullName: SharpSDL3.Sdl.UnlockAudioStream(nint)
  type: Method
  source:
    remote:
      path: SDL3/Audio.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: UnlockAudioStream
    path: ../../repos/SDL3-CS/SDL3/Audio.cs
    startLine: 1306
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Unlock an audio stream for serialized access.
  remarks: >-
    This unlocks an audio stream after a call to

    SDL_LockAudioStream.

    <p><strong>Thread Safety:</strong> You should only call this from the same thread that previously calledSDL_LockAudioStream.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.LockAudioStream(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static SdlBool UnlockAudioStream(nint stream)
    parameters:
    - id: stream
      type: System.IntPtr
      description: the audio stream to unlock.
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function UnlockAudioStream(stream As IntPtr) As SdlBool
  overload: SharpSDL3.Sdl.UnlockAudioStream*
  nameWithType.vb: Sdl.UnlockAudioStream(IntPtr)
  fullName.vb: SharpSDL3.Sdl.UnlockAudioStream(System.IntPtr)
  name.vb: UnlockAudioStream(IntPtr)
- uid: SharpSDL3.Sdl.AcquireCameraFrame(System.IntPtr,System.UInt64@)
  commentId: M:SharpSDL3.Sdl.AcquireCameraFrame(System.IntPtr,System.UInt64@)
  id: AcquireCameraFrame(System.IntPtr,System.UInt64@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: AcquireCameraFrame(nint, out ulong)
  nameWithType: Sdl.AcquireCameraFrame(nint, out ulong)
  fullName: SharpSDL3.Sdl.AcquireCameraFrame(nint, out ulong)
  type: Method
  source:
    remote:
      path: SDL3/Camera.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: AcquireCameraFrame
    path: ../../repos/SDL3-CS/SDL3/Camera.cs
    startLine: 23
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Acquire a frame.
  remarks: >-
    The frame is a memory pointer to the image data, whose size and format are

    given by the spec requested when opening the device.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.ReleaseCameraFrame(System.IntPtr%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint AcquireCameraFrame(nint camera, out ulong timestampNs)
    parameters:
    - id: camera
      type: System.IntPtr
      description: opened camera device.
    - id: timestampNs
      type: System.UInt64
    return:
      type: System.IntPtr
      description: (SDL_Surface *) Returns a new frame of video on success,<a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if none is currently available.
    content.vb: Public Shared Function AcquireCameraFrame(camera As IntPtr, timestampNs As ULong) As IntPtr
  overload: SharpSDL3.Sdl.AcquireCameraFrame*
  nameWithType.vb: Sdl.AcquireCameraFrame(IntPtr, ULong)
  fullName.vb: SharpSDL3.Sdl.AcquireCameraFrame(System.IntPtr, ULong)
  name.vb: AcquireCameraFrame(IntPtr, ULong)
- uid: SharpSDL3.Sdl.CloseCamera(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.CloseCamera(System.IntPtr)
  id: CloseCamera(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CloseCamera(nint)
  nameWithType: Sdl.CloseCamera(nint)
  fullName: SharpSDL3.Sdl.CloseCamera(nint)
  type: Method
  source:
    remote:
      path: SDL3/Camera.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CloseCamera
    path: ../../repos/SDL3-CS/SDL3/Camera.cs
    startLine: 43
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Use this function to shut down camera processing and close the camera device.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread, but no thread mayreference device once this function is called.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.OpenCamera(System.UInt32%2cSharpSDL3.Structs.CameraSpec%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void CloseCamera(nint camera)
    parameters:
    - id: camera
      type: System.IntPtr
      description: opened camera device.
    content.vb: Public Shared Sub CloseCamera(camera As IntPtr)
  overload: SharpSDL3.Sdl.CloseCamera*
  nameWithType.vb: Sdl.CloseCamera(IntPtr)
  fullName.vb: SharpSDL3.Sdl.CloseCamera(System.IntPtr)
  name.vb: CloseCamera(IntPtr)
- uid: SharpSDL3.Sdl.GetCameraDriver(System.Int32)
  commentId: M:SharpSDL3.Sdl.GetCameraDriver(System.Int32)
  id: GetCameraDriver(System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetCameraDriver(int)
  nameWithType: Sdl.GetCameraDriver(int)
  fullName: SharpSDL3.Sdl.GetCameraDriver(int)
  type: Method
  source:
    remote:
      path: SDL3/Camera.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetCameraDriver
    path: ../../repos/SDL3-CS/SDL3/Camera.cs
    startLine: 63
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Use this function to get the name of a built in camera driver.
  remarks: >-
    The list of camera drivers is given in the order that they are normally

    initialized by default; the drivers that seem more reasonable to choose

    first (as far as the SDL developers believe) are earlier in the list.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetNumCameraDrivers" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static string GetCameraDriver(int index)
    parameters:
    - id: index
      type: System.Int32
      description: the index of the camera driver; the value ranges from 0 to SDL_GetNumCameraDrivers() - 1.
    return:
      type: System.String
      description: Returns the name of the camera driver at the requestedindex, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if an invalid index was specified.
    content.vb: Public Shared Function GetCameraDriver(index As Integer) As String
  overload: SharpSDL3.Sdl.GetCameraDriver*
  nameWithType.vb: Sdl.GetCameraDriver(Integer)
  fullName.vb: SharpSDL3.Sdl.GetCameraDriver(Integer)
  name.vb: GetCameraDriver(Integer)
- uid: SharpSDL3.Sdl.GetCameraFormat(System.IntPtr,SharpSDL3.Structs.CameraSpec@)
  commentId: M:SharpSDL3.Sdl.GetCameraFormat(System.IntPtr,SharpSDL3.Structs.CameraSpec@)
  id: GetCameraFormat(System.IntPtr,SharpSDL3.Structs.CameraSpec@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetCameraFormat(nint, out CameraSpec)
  nameWithType: Sdl.GetCameraFormat(nint, out CameraSpec)
  fullName: SharpSDL3.Sdl.GetCameraFormat(nint, out SharpSDL3.Structs.CameraSpec)
  type: Method
  source:
    remote:
      path: SDL3/Camera.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetCameraFormat
    path: ../../repos/SDL3-CS/SDL3/Camera.cs
    startLine: 89
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the spec that a camera is using when generating images.
  remarks: >-
    Note that this might not be the native format of the hardware, as SDL might

    be converting to this format behind the scenes.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.OpenCamera(System.UInt32%2cSharpSDL3.Structs.CameraSpec%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static SdlBool GetCameraFormat(nint camera, out CameraSpec spec)
    parameters:
    - id: camera
      type: System.IntPtr
      description: opened camera device.
    - id: spec
      type: SharpSDL3.Structs.CameraSpec
      description: the SDL_CameraSpec to be initialized by this function.
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetCameraFormat(camera As IntPtr, spec As CameraSpec) As SdlBool
  overload: SharpSDL3.Sdl.GetCameraFormat*
  nameWithType.vb: Sdl.GetCameraFormat(IntPtr, CameraSpec)
  fullName.vb: SharpSDL3.Sdl.GetCameraFormat(System.IntPtr, SharpSDL3.Structs.CameraSpec)
  name.vb: GetCameraFormat(IntPtr, CameraSpec)
- uid: SharpSDL3.Sdl.GetCameraID(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetCameraID(System.IntPtr)
  id: GetCameraID(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetCameraID(nint)
  nameWithType: Sdl.GetCameraID(nint)
  fullName: SharpSDL3.Sdl.GetCameraID(nint)
  type: Method
  source:
    remote:
      path: SDL3/Camera.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetCameraID
    path: ../../repos/SDL3-CS/SDL3/Camera.cs
    startLine: 110
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the instance ID of an opened camera.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.OpenCamera(System.UInt32%2cSharpSDL3.Structs.CameraSpec%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static uint GetCameraID(nint camera)
    parameters:
    - id: camera
      type: System.IntPtr
      description: an SDL_Camera to query.
    return:
      type: System.UInt32
      description: Returns the instance ID of the specifiedcamera on success or 0 on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetCameraID(camera As IntPtr) As UInteger
  overload: SharpSDL3.Sdl.GetCameraID*
  nameWithType.vb: Sdl.GetCameraID(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetCameraID(System.IntPtr)
  name.vb: GetCameraID(IntPtr)
- uid: SharpSDL3.Sdl.GetCameraName(System.UInt32)
  commentId: M:SharpSDL3.Sdl.GetCameraName(System.UInt32)
  id: GetCameraName(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetCameraName(uint)
  nameWithType: Sdl.GetCameraName(uint)
  fullName: SharpSDL3.Sdl.GetCameraName(uint)
  type: Method
  source:
    remote:
      path: SDL3/Camera.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetCameraName
    path: ../../repos/SDL3-CS/SDL3/Camera.cs
    startLine: 131
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the human-readable device name for a camera.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetCameras(System.Int32%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static string GetCameraName(uint instanceId)
    parameters:
    - id: instanceId
      type: System.UInt32
    return:
      type: System.String
      description: Returns a human-readable device name or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure;call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetCameraName(instanceId As UInteger) As String
  overload: SharpSDL3.Sdl.GetCameraName*
  nameWithType.vb: Sdl.GetCameraName(UInteger)
  fullName.vb: SharpSDL3.Sdl.GetCameraName(UInteger)
  name.vb: GetCameraName(UInteger)
- uid: SharpSDL3.Sdl.GetCameraPermissionState(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetCameraPermissionState(System.IntPtr)
  id: GetCameraPermissionState(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetCameraPermissionState(nint)
  nameWithType: Sdl.GetCameraPermissionState(nint)
  fullName: SharpSDL3.Sdl.GetCameraPermissionState(nint)
  type: Method
  source:
    remote:
      path: SDL3/Camera.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetCameraPermissionState
    path: ../../repos/SDL3-CS/SDL3/Camera.cs
    startLine: 154
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Query if camera access has been approved by the user.
  remarks: >-
    Cameras will not function between when the device is opened by the app and

    when the user permits access to the hardware. On some platforms, this

    presents as a popup dialog where the user has to explicitly approve access;

    on others the approval might be implicit and not alert the user at all.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.OpenCamera(System.UInt32%2cSharpSDL3.Structs.CameraSpec%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.CloseCamera(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static int GetCameraPermissionState(nint camera)
    parameters:
    - id: camera
      type: System.IntPtr
      description: the opened camera device to query.
    return:
      type: System.Int32
      description: Returns -1 if user denied access to the camera, 1 if user approvedaccess, 0 if no decision has been made yet.
    content.vb: Public Shared Function GetCameraPermissionState(camera As IntPtr) As Integer
  overload: SharpSDL3.Sdl.GetCameraPermissionState*
  nameWithType.vb: Sdl.GetCameraPermissionState(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetCameraPermissionState(System.IntPtr)
  name.vb: GetCameraPermissionState(IntPtr)
- uid: SharpSDL3.Sdl.GetCameraPosition(System.UInt32)
  commentId: M:SharpSDL3.Sdl.GetCameraPosition(System.UInt32)
  id: GetCameraPosition(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetCameraPosition(uint)
  nameWithType: Sdl.GetCameraPosition(uint)
  fullName: SharpSDL3.Sdl.GetCameraPosition(uint)
  type: Method
  source:
    remote:
      path: SDL3/Camera.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetCameraPosition
    path: ../../repos/SDL3-CS/SDL3/Camera.cs
    startLine: 179
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the position of the camera in relation to the system.
  remarks: >-
    Most platforms will report UNKNOWN, but mobile devices, like phones, can

    often make a distinction between cameras on the front of the device (that

    points towards the user, for taking "selfies") and cameras on the back (for

    filming in the direction the user is facing).

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetCameras(System.Int32%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static CameraPosition GetCameraPosition(uint instanceId)
    parameters:
    - id: instanceId
      type: System.UInt32
    return:
      type: SharpSDL3.Enums.CameraPosition
      description: Returns the position of thecamera on the system hardware.
    content.vb: Public Shared Function GetCameraPosition(instanceId As UInteger) As CameraPosition
  overload: SharpSDL3.Sdl.GetCameraPosition*
  nameWithType.vb: Sdl.GetCameraPosition(UInteger)
  fullName.vb: SharpSDL3.Sdl.GetCameraPosition(UInteger)
  name.vb: GetCameraPosition(UInteger)
- uid: SharpSDL3.Sdl.GetCameraProperties(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetCameraProperties(System.IntPtr)
  id: GetCameraProperties(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetCameraProperties(nint)
  nameWithType: Sdl.GetCameraProperties(nint)
  fullName: SharpSDL3.Sdl.GetCameraProperties(nint)
  type: Method
  source:
    remote:
      path: SDL3/Camera.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetCameraProperties
    path: ../../repos/SDL3-CS/SDL3/Camera.cs
    startLine: 199
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the properties associated with an opened camera.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static uint GetCameraProperties(nint camera)
    parameters:
    - id: camera
      type: System.IntPtr
      description: the SDL_Camera obtained from SDL_OpenCamera().
    return:
      type: System.UInt32
      description: Returns a valid property ID on success or 0 on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetCameraProperties(camera As IntPtr) As UInteger
  overload: SharpSDL3.Sdl.GetCameraProperties*
  nameWithType.vb: Sdl.GetCameraProperties(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetCameraProperties(System.IntPtr)
  name.vb: GetCameraProperties(IntPtr)
- uid: SharpSDL3.Sdl.GetCameras(System.Int32@)
  commentId: M:SharpSDL3.Sdl.GetCameras(System.Int32@)
  id: GetCameras(System.Int32@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetCameras(out int)
  nameWithType: Sdl.GetCameras(out int)
  fullName: SharpSDL3.Sdl.GetCameras(out int)
  type: Method
  source:
    remote:
      path: SDL3/Camera.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetCameras
    path: ../../repos/SDL3-CS/SDL3/Camera.cs
    startLine: 220
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get a list of currently connected camera devices.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.OpenCamera(System.UInt32%2cSharpSDL3.Structs.CameraSpec%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static Span<nint> GetCameras(out int count)
    parameters:
    - id: count
      type: System.Int32
      description: a pointer filled in with the number of cameras returned, may be discarded.
    return:
      type: System.Span{System.IntPtr}
      description: (SDL_CameraID *) Returns a 0 terminated array of camerainstance IDs or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information. This should be freed with <xref href="SharpSDL3.Sdl.Free(System.IntPtr)" data-throw-if-not-resolved="false"></xref> when itis no longer needed.
    content.vb: Public Shared Function GetCameras(count As Integer) As Span(Of IntPtr)
  overload: SharpSDL3.Sdl.GetCameras*
  nameWithType.vb: Sdl.GetCameras(Integer)
  fullName.vb: SharpSDL3.Sdl.GetCameras(Integer)
  name.vb: GetCameras(Integer)
- uid: SharpSDL3.Sdl.GetCameraSupportedFormats(System.UInt32,System.Int32@)
  commentId: M:SharpSDL3.Sdl.GetCameraSupportedFormats(System.UInt32,System.Int32@)
  id: GetCameraSupportedFormats(System.UInt32,System.Int32@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetCameraSupportedFormats(uint, out int)
  nameWithType: Sdl.GetCameraSupportedFormats(uint, out int)
  fullName: SharpSDL3.Sdl.GetCameraSupportedFormats(uint, out int)
  type: Method
  source:
    remote:
      path: SDL3/Camera.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetCameraSupportedFormats
    path: ../../repos/SDL3-CS/SDL3/Camera.cs
    startLine: 260
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the list of native formats/sizes a camera supports.
  remarks: >-
    This returns a list of all formats and frame sizes that a specific camera

    can offer. This is useful if your app can accept a variety of image formats

    and sizes and so want to find the optimal spec that doesn't require

    conversion.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetCameras(System.Int32%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.OpenCamera(System.UInt32%2cSharpSDL3.Structs.CameraSpec%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static Span<nint> GetCameraSupportedFormats(uint devid, out int count)
    parameters:
    - id: devid
      type: System.UInt32
    - id: count
      type: System.Int32
      description: a pointer filled in with the number of elements in the list, may be discarded.
    return:
      type: System.Span{System.IntPtr}
      description: (SDL_CameraSpec **) Returns a <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> terminated array ofpointers to SDL_CameraSpec or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information. This is a single allocation that should be freed with <xref href="SharpSDL3.Sdl.Free(System.IntPtr)" data-throw-if-not-resolved="false"></xref> when it is no longer needed.
    content.vb: Public Shared Function GetCameraSupportedFormats(devid As UInteger, count As Integer) As Span(Of IntPtr)
  overload: SharpSDL3.Sdl.GetCameraSupportedFormats*
  nameWithType.vb: Sdl.GetCameraSupportedFormats(UInteger, Integer)
  fullName.vb: SharpSDL3.Sdl.GetCameraSupportedFormats(UInteger, Integer)
  name.vb: GetCameraSupportedFormats(UInteger, Integer)
- uid: SharpSDL3.Sdl.GetCurrentCameraDriver
  commentId: M:SharpSDL3.Sdl.GetCurrentCameraDriver
  id: GetCurrentCameraDriver
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetCurrentCameraDriver()
  nameWithType: Sdl.GetCurrentCameraDriver()
  fullName: SharpSDL3.Sdl.GetCurrentCameraDriver()
  type: Method
  source:
    remote:
      path: SDL3/Camera.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetCurrentCameraDriver
    path: ../../repos/SDL3-CS/SDL3/Camera.cs
    startLine: 293
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the name of the current camera driver.
  remarks: >-
    The names of drivers are all simple, low-ASCII identifiers, like "v4l2",

    "coremedia" or "android". These never have Unicode characters, and are not

    meant to be proper names.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static string GetCurrentCameraDriver()
    return:
      type: System.String
      description: Returns the name of the current camera driver or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if nodriver has been initialized.
    content.vb: Public Shared Function GetCurrentCameraDriver() As String
  overload: SharpSDL3.Sdl.GetCurrentCameraDriver*
- uid: SharpSDL3.Sdl.GetNumCameraDrivers
  commentId: M:SharpSDL3.Sdl.GetNumCameraDrivers
  id: GetNumCameraDrivers
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetNumCameraDrivers()
  nameWithType: Sdl.GetNumCameraDrivers()
  fullName: SharpSDL3.Sdl.GetNumCameraDrivers()
  type: Method
  source:
    remote:
      path: SDL3/Camera.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetNumCameraDrivers
    path: ../../repos/SDL3-CS/SDL3/Camera.cs
    startLine: 315
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Use this function to get the number of built-in camera drivers.
  remarks: >-
    This function returns a hardcoded number. This never returns a negative

    value; if there are no drivers compiled into this build of SDL, this

    function returns zero. The presence of a driver in this list does not mean

    it will function, it just means SDL is capable of interacting with that

    interface. For example, a build of SDL might have v4l2 support, but if

    there's no kernel support available, SDL's v4l2 driver would fail if used.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetCameraDriver(System.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static int GetNumCameraDrivers()
    return:
      type: System.Int32
      description: Returns the number of built-in camera drivers.
    content.vb: Public Shared Function GetNumCameraDrivers() As Integer
  overload: SharpSDL3.Sdl.GetNumCameraDrivers*
- uid: SharpSDL3.Sdl.OpenCamera(System.UInt32,SharpSDL3.Structs.CameraSpec@)
  commentId: M:SharpSDL3.Sdl.OpenCamera(System.UInt32,SharpSDL3.Structs.CameraSpec@)
  id: OpenCamera(System.UInt32,SharpSDL3.Structs.CameraSpec@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: OpenCamera(uint, ref CameraSpec)
  nameWithType: Sdl.OpenCamera(uint, ref CameraSpec)
  fullName: SharpSDL3.Sdl.OpenCamera(uint, ref SharpSDL3.Structs.CameraSpec)
  type: Method
  source:
    remote:
      path: SDL3/Camera.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: OpenCamera
    path: ../../repos/SDL3-CS/SDL3/Camera.cs
    startLine: 334
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Open a video recording device (a "camera").
  remarks: >-
    You can open the device with any reasonable spec, and if the hardware can't

    directly support it, it will convert data seamlessly to the requested

    format. This might incur overhead, including scaling of image data.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetCameras(System.Int32%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetCameraFormat(System.IntPtr%2cSharpSDL3.Structs.CameraSpec%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint OpenCamera(uint instanceId, ref CameraSpec spec)
    parameters:
    - id: instanceId
      type: System.UInt32
    - id: spec
      type: SharpSDL3.Structs.CameraSpec
      description: the desired format for data the device will provide. Can be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    return:
      type: System.IntPtr
      description: (SDL_Camera *) Returns an SDL_Camera object or<a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function OpenCamera(instanceId As UInteger, spec As CameraSpec) As IntPtr
  overload: SharpSDL3.Sdl.OpenCamera*
  nameWithType.vb: Sdl.OpenCamera(UInteger, CameraSpec)
  fullName.vb: SharpSDL3.Sdl.OpenCamera(UInteger, SharpSDL3.Structs.CameraSpec)
  name.vb: OpenCamera(UInteger, CameraSpec)
- uid: SharpSDL3.Sdl.ReleaseCameraFrame(System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.ReleaseCameraFrame(System.IntPtr,System.IntPtr)
  id: ReleaseCameraFrame(System.IntPtr,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ReleaseCameraFrame(nint, nint)
  nameWithType: Sdl.ReleaseCameraFrame(nint, nint)
  fullName: SharpSDL3.Sdl.ReleaseCameraFrame(nint, nint)
  type: Method
  source:
    remote:
      path: SDL3/Camera.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ReleaseCameraFrame
    path: ../../repos/SDL3-CS/SDL3/Camera.cs
    startLine: 353
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Release a frame of video acquired from a camera.
  remarks: >-
    Let the back-end re-use the internal buffer for camera.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.AcquireCameraFrame(System.IntPtr%2cSystem.UInt64%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void ReleaseCameraFrame(nint camera, nint frame)
    parameters:
    - id: camera
      type: System.IntPtr
      description: opened camera device.
    - id: frame
      type: System.IntPtr
      description: the video frame surface to release.
    content.vb: Public Shared Sub ReleaseCameraFrame(camera As IntPtr, frame As IntPtr)
  overload: SharpSDL3.Sdl.ReleaseCameraFrame*
  nameWithType.vb: Sdl.ReleaseCameraFrame(IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.ReleaseCameraFrame(System.IntPtr, System.IntPtr)
  name.vb: ReleaseCameraFrame(IntPtr, IntPtr)
- uid: SharpSDL3.Sdl.GetCPUCacheLineSize
  commentId: M:SharpSDL3.Sdl.GetCPUCacheLineSize
  id: GetCPUCacheLineSize
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetCPUCacheLineSize()
  nameWithType: Sdl.GetCPUCacheLineSize()
  fullName: SharpSDL3.Sdl.GetCPUCacheLineSize()
  type: Method
  source:
    remote:
      path: SDL3/CpuInfo.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetCPUCacheLineSize
    path: ../../repos/SDL3-CS/SDL3/CpuInfo.cs
    startLine: 18
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Determine the L1 cache line size of the CPU.
  remarks: >-
    This is useful for determining multi-threaded structure padding or SIMD

    prefetch sizes.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static int GetCPUCacheLineSize()
    return:
      type: System.Int32
      description: Returns the L1 cache line size of the CPU, in bytes.
    content.vb: Public Shared Function GetCPUCacheLineSize() As Integer
  overload: SharpSDL3.Sdl.GetCPUCacheLineSize*
- uid: SharpSDL3.Sdl.GetNumLogicalCPUCores
  commentId: M:SharpSDL3.Sdl.GetNumLogicalCPUCores
  id: GetNumLogicalCPUCores
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetNumLogicalCPUCores()
  nameWithType: Sdl.GetNumLogicalCPUCores()
  fullName: SharpSDL3.Sdl.GetNumLogicalCPUCores()
  type: Method
  source:
    remote:
      path: SDL3/CpuInfo.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetNumLogicalCPUCores
    path: ../../repos/SDL3-CS/SDL3/CpuInfo.cs
    startLine: 29
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the number of logical CPU cores available.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static int GetNumLogicalCPUCores()
    return:
      type: System.Int32
      description: Returns the total number of logical CPU cores. On CPUs that includetechnologies such as hyperthreading, the number of logical cores may bemore than the number of physical cores.
    content.vb: Public Shared Function GetNumLogicalCPUCores() As Integer
  overload: SharpSDL3.Sdl.GetNumLogicalCPUCores*
- uid: SharpSDL3.Sdl.GetSIMDAlignment
  commentId: M:SharpSDL3.Sdl.GetSIMDAlignment
  id: GetSIMDAlignment
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetSIMDAlignment()
  nameWithType: Sdl.GetSIMDAlignment()
  fullName: SharpSDL3.Sdl.GetSIMDAlignment()
  type: Method
  source:
    remote:
      path: SDL3/CpuInfo.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetSIMDAlignment
    path: ../../repos/SDL3-CS/SDL3/CpuInfo.cs
    startLine: 50
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Report the alignment this system needs for SIMD allocations.
  remarks: >-
    This will return the minimum number of bytes to which a pointer must be

    aligned to be compatible with SIMD instructions on the current machine. For

    example, if the machine supports SSE only, it will return 16, but if it

    supports AVX-512F, it'll return 64 (etc). This only reports values for

    instruction sets SDL knows about, so if your SDL build doesn't have

    SDL_HasAVX512F(), then it might return 16 for the SSE

    support it sees and not 64 for the AVX-512 instructions that exist but SDL

    doesn't know about. Plan accordingly.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    aligned_alloc

    aligned_free
  example: []
  syntax:
    content: public static nuint GetSIMDAlignment()
    return:
      type: System.UIntPtr
      description: Returns the alignment in bytes needed for available, known SIMDinstructions.
    content.vb: Public Shared Function GetSIMDAlignment() As UIntPtr
  overload: SharpSDL3.Sdl.GetSIMDAlignment*
- uid: SharpSDL3.Sdl.GetSystemRAM
  commentId: M:SharpSDL3.Sdl.GetSystemRAM
  id: GetSystemRAM
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetSystemRAM()
  nameWithType: Sdl.GetSystemRAM()
  fullName: SharpSDL3.Sdl.GetSystemRAM()
  type: Method
  source:
    remote:
      path: SDL3/CpuInfo.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetSystemRAM
    path: ../../repos/SDL3-CS/SDL3/CpuInfo.cs
    startLine: 61
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the amount of RAM configured in the system.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static int GetSystemRAM()
    return:
      type: System.Int32
      description: Returns the amount of RAM configured in the system in MiB.
    content.vb: Public Shared Function GetSystemRAM() As Integer
  overload: SharpSDL3.Sdl.GetSystemRAM*
- uid: SharpSDL3.Sdl.HasAltiVec
  commentId: M:SharpSDL3.Sdl.HasAltiVec
  id: HasAltiVec
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: HasAltiVec()
  nameWithType: Sdl.HasAltiVec()
  fullName: SharpSDL3.Sdl.HasAltiVec()
  type: Method
  source:
    remote:
      path: SDL3/CpuInfo.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: HasAltiVec
    path: ../../repos/SDL3-CS/SDL3/CpuInfo.cs
    startLine: 74
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Determine whether the CPU has AltiVec features.
  remarks: >-
    This always returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on CPUs that aren't using PowerPC instruction

    sets.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static SdlBool HasAltiVec()
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the CPU has AltiVec features or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if not.
    content.vb: Public Shared Function HasAltiVec() As SdlBool
  overload: SharpSDL3.Sdl.HasAltiVec*
- uid: SharpSDL3.Sdl.HasARMSIMD
  commentId: M:SharpSDL3.Sdl.HasARMSIMD
  id: HasARMSIMD
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: HasARMSIMD()
  nameWithType: Sdl.HasARMSIMD()
  fullName: SharpSDL3.Sdl.HasARMSIMD()
  type: Method
  source:
    remote:
      path: SDL3/CpuInfo.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: HasARMSIMD
    path: ../../repos/SDL3-CS/SDL3/CpuInfo.cs
    startLine: 87
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Determine whether the CPU has ARM SIMD (ARMv6) features.
  remarks: >-
    This is different from ARM NEON, which is a different instruction set.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.HasNEON" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static SdlBool HasARMSIMD()
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the CPU has ARM SIMD features or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if not.
    content.vb: Public Shared Function HasARMSIMD() As SdlBool
  overload: SharpSDL3.Sdl.HasARMSIMD*
- uid: SharpSDL3.Sdl.HasAVX
  commentId: M:SharpSDL3.Sdl.HasAVX
  id: HasAVX
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: HasAVX()
  nameWithType: Sdl.HasAVX()
  fullName: SharpSDL3.Sdl.HasAVX()
  type: Method
  source:
    remote:
      path: SDL3/CpuInfo.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: HasAVX
    path: ../../repos/SDL3-CS/SDL3/CpuInfo.cs
    startLine: 101
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Determine whether the CPU has AVX features.
  remarks: >-
    This always returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on CPUs that aren't using Intel instruction sets.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.HasAVX2" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.HasAVX512F" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static SdlBool HasAVX()
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the CPU has AVX features or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if not.
    content.vb: Public Shared Function HasAVX() As SdlBool
  overload: SharpSDL3.Sdl.HasAVX*
- uid: SharpSDL3.Sdl.HasAVX2
  commentId: M:SharpSDL3.Sdl.HasAVX2
  id: HasAVX2
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: HasAVX2()
  nameWithType: Sdl.HasAVX2()
  fullName: SharpSDL3.Sdl.HasAVX2()
  type: Method
  source:
    remote:
      path: SDL3/CpuInfo.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: HasAVX2
    path: ../../repos/SDL3-CS/SDL3/CpuInfo.cs
    startLine: 115
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Determine whether the CPU has AVX2 features.
  remarks: >-
    This always returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on CPUs that aren't using Intel instruction sets.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.HasAVX" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.HasAVX512F" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static SdlBool HasAVX2()
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the CPU has AVX2 features or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if not.
    content.vb: Public Shared Function HasAVX2() As SdlBool
  overload: SharpSDL3.Sdl.HasAVX2*
- uid: SharpSDL3.Sdl.HasAVX512F
  commentId: M:SharpSDL3.Sdl.HasAVX512F
  id: HasAVX512F
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: HasAVX512F()
  nameWithType: Sdl.HasAVX512F()
  fullName: SharpSDL3.Sdl.HasAVX512F()
  type: Method
  source:
    remote:
      path: SDL3/CpuInfo.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: HasAVX512F
    path: ../../repos/SDL3-CS/SDL3/CpuInfo.cs
    startLine: 129
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Determine whether the CPU has AVX-512F (foundation) features.
  remarks: >-
    This always returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on CPUs that aren't using Intel instruction sets.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.HasAVX" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.HasAVX2" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static SdlBool HasAVX512F()
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the CPU has AVX-512F features or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if not.
    content.vb: Public Shared Function HasAVX512F() As SdlBool
  overload: SharpSDL3.Sdl.HasAVX512F*
- uid: SharpSDL3.Sdl.HasLASX
  commentId: M:SharpSDL3.Sdl.HasLASX
  id: HasLASX
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: HasLASX()
  nameWithType: Sdl.HasLASX()
  fullName: SharpSDL3.Sdl.HasLASX()
  type: Method
  source:
    remote:
      path: SDL3/CpuInfo.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: HasLASX
    path: ../../repos/SDL3-CS/SDL3/CpuInfo.cs
    startLine: 142
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Determine whether the CPU has LASX (LOONGARCH SIMD) features.
  remarks: >-
    This always returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on CPUs that aren't using LOONGARCH instruction

    sets.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static SdlBool HasLASX()
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the CPU has LOONGARCH LASX features or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if not.
    content.vb: Public Shared Function HasLASX() As SdlBool
  overload: SharpSDL3.Sdl.HasLASX*
- uid: SharpSDL3.Sdl.HasLSX
  commentId: M:SharpSDL3.Sdl.HasLSX
  id: HasLSX
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: HasLSX()
  nameWithType: Sdl.HasLSX()
  fullName: SharpSDL3.Sdl.HasLSX()
  type: Method
  source:
    remote:
      path: SDL3/CpuInfo.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: HasLSX
    path: ../../repos/SDL3-CS/SDL3/CpuInfo.cs
    startLine: 155
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Determine whether the CPU has LSX (LOONGARCH SIMD) features.
  remarks: >-
    This always returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on CPUs that aren't using LOONGARCH instruction

    sets.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static SdlBool HasLSX()
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the CPU has LOONGARCH LSX features or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if not.
    content.vb: Public Shared Function HasLSX() As SdlBool
  overload: SharpSDL3.Sdl.HasLSX*
- uid: SharpSDL3.Sdl.HasMMX
  commentId: M:SharpSDL3.Sdl.HasMMX
  id: HasMMX
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: HasMMX()
  nameWithType: Sdl.HasMMX()
  fullName: SharpSDL3.Sdl.HasMMX()
  type: Method
  source:
    remote:
      path: SDL3/CpuInfo.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: HasMMX
    path: ../../repos/SDL3-CS/SDL3/CpuInfo.cs
    startLine: 167
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Determine whether the CPU has MMX features.
  remarks: >-
    This always returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on CPUs that aren't using Intel instruction sets.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static SdlBool HasMMX()
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the CPU has MMX features or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if not.
    content.vb: Public Shared Function HasMMX() As SdlBool
  overload: SharpSDL3.Sdl.HasMMX*
- uid: SharpSDL3.Sdl.HasNEON
  commentId: M:SharpSDL3.Sdl.HasNEON
  id: HasNEON
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: HasNEON()
  nameWithType: Sdl.HasNEON()
  fullName: SharpSDL3.Sdl.HasNEON()
  type: Method
  source:
    remote:
      path: SDL3/CpuInfo.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: HasNEON
    path: ../../repos/SDL3-CS/SDL3/CpuInfo.cs
    startLine: 179
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Determine whether the CPU has NEON (ARM SIMD) features.
  remarks: >-
    This always returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on CPUs that aren't using ARM instruction sets.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static SdlBool HasNEON()
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the CPU has ARM NEON features or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if not.
    content.vb: Public Shared Function HasNEON() As SdlBool
  overload: SharpSDL3.Sdl.HasNEON*
- uid: SharpSDL3.Sdl.HasSSE
  commentId: M:SharpSDL3.Sdl.HasSSE
  id: HasSSE
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: HasSSE()
  nameWithType: Sdl.HasSSE()
  fullName: SharpSDL3.Sdl.HasSSE()
  type: Method
  source:
    remote:
      path: SDL3/CpuInfo.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: HasSSE
    path: ../../repos/SDL3-CS/SDL3/CpuInfo.cs
    startLine: 195
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Determine whether the CPU has SSE features.
  remarks: >-
    This always returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on CPUs that aren't using Intel instruction sets.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.HasSSE2" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.HasSSE3" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.HasSSE41" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.HasSSE42" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static SdlBool HasSSE()
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the CPU has SSE features or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if not.
    content.vb: Public Shared Function HasSSE() As SdlBool
  overload: SharpSDL3.Sdl.HasSSE*
- uid: SharpSDL3.Sdl.HasSSE2
  commentId: M:SharpSDL3.Sdl.HasSSE2
  id: HasSSE2
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: HasSSE2()
  nameWithType: Sdl.HasSSE2()
  fullName: SharpSDL3.Sdl.HasSSE2()
  type: Method
  source:
    remote:
      path: SDL3/CpuInfo.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: HasSSE2
    path: ../../repos/SDL3-CS/SDL3/CpuInfo.cs
    startLine: 211
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Determine whether the CPU has SSE2 features.
  remarks: >-
    This always returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on CPUs that aren't using Intel instruction sets.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.HasSSE" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.HasSSE3" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.HasSSE41" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.HasSSE42" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static SdlBool HasSSE2()
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the CPU has SSE2 features or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if not.
    content.vb: Public Shared Function HasSSE2() As SdlBool
  overload: SharpSDL3.Sdl.HasSSE2*
- uid: SharpSDL3.Sdl.HasSSE3
  commentId: M:SharpSDL3.Sdl.HasSSE3
  id: HasSSE3
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: HasSSE3()
  nameWithType: Sdl.HasSSE3()
  fullName: SharpSDL3.Sdl.HasSSE3()
  type: Method
  source:
    remote:
      path: SDL3/CpuInfo.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: HasSSE3
    path: ../../repos/SDL3-CS/SDL3/CpuInfo.cs
    startLine: 227
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Determine whether the CPU has SSE3 features.
  remarks: >-
    This always returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on CPUs that aren't using Intel instruction sets.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.HasSSE" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.HasSSE2" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.HasSSE41" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.HasSSE42" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static SdlBool HasSSE3()
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the CPU has SSE3 features or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if not.
    content.vb: Public Shared Function HasSSE3() As SdlBool
  overload: SharpSDL3.Sdl.HasSSE3*
- uid: SharpSDL3.Sdl.HasSSE41
  commentId: M:SharpSDL3.Sdl.HasSSE41
  id: HasSSE41
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: HasSSE41()
  nameWithType: Sdl.HasSSE41()
  fullName: SharpSDL3.Sdl.HasSSE41()
  type: Method
  source:
    remote:
      path: SDL3/CpuInfo.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: HasSSE41
    path: ../../repos/SDL3-CS/SDL3/CpuInfo.cs
    startLine: 243
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Determine whether the CPU has SSE4.1 features.
  remarks: >-
    This always returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on CPUs that aren't using Intel instruction sets.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.HasSSE" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.HasSSE2" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.HasSSE3" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.HasSSE42" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static SdlBool HasSSE41()
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the CPU has SSE4.1 features or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if not.
    content.vb: Public Shared Function HasSSE41() As SdlBool
  overload: SharpSDL3.Sdl.HasSSE41*
- uid: SharpSDL3.Sdl.HasSSE42
  commentId: M:SharpSDL3.Sdl.HasSSE42
  id: HasSSE42
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: HasSSE42()
  nameWithType: Sdl.HasSSE42()
  fullName: SharpSDL3.Sdl.HasSSE42()
  type: Method
  source:
    remote:
      path: SDL3/CpuInfo.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: HasSSE42
    path: ../../repos/SDL3-CS/SDL3/CpuInfo.cs
    startLine: 259
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Determine whether the CPU has SSE4.2 features.
  remarks: >-
    This always returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on CPUs that aren't using Intel instruction sets.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.HasSSE" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.HasSSE2" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.HasSSE3" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.HasSSE41" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static SdlBool HasSSE42()
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the CPU has SSE4.2 features or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if not.
    content.vb: Public Shared Function HasSSE42() As SdlBool
  overload: SharpSDL3.Sdl.HasSSE42*
- uid: SharpSDL3.Sdl.AddEventWatch(SharpSDL3.Delegates.SdlEventFilter,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.AddEventWatch(SharpSDL3.Delegates.SdlEventFilter,System.IntPtr)
  id: AddEventWatch(SharpSDL3.Delegates.SdlEventFilter,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: AddEventWatch(SdlEventFilter, nint)
  nameWithType: Sdl.AddEventWatch(Delegates.SdlEventFilter, nint)
  fullName: SharpSDL3.Sdl.AddEventWatch(SharpSDL3.Delegates.SdlEventFilter, nint)
  type: Method
  source:
    remote:
      path: SDL3/Events.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: AddEventWatch
    path: ../../repos/SDL3-CS/SDL3/Events.cs
    startLine: 24
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Add a callback to be triggered when an event is added to the event queue.
  remarks: >-
    filter will be called when an event happens, and its return value is

    ignored.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.RemoveEventWatch(SharpSDL3.Delegates.SdlEventFilter%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetEventFilter(SharpSDL3.Delegates.SdlEventFilter%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool AddEventWatch(Delegates.SdlEventFilter filter, nint userdata)
    parameters:
    - id: filter
      type: SharpSDL3.Delegates.SdlEventFilter
      description: an SDL_EventFilter function to call when an event happens.
    - id: userdata
      type: System.IntPtr
      description: a pointer that is passed to filter.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function AddEventWatch(filter As Delegates.SdlEventFilter, userdata As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.AddEventWatch*
  nameWithType.vb: Sdl.AddEventWatch(Delegates.SdlEventFilter, IntPtr)
  fullName.vb: SharpSDL3.Sdl.AddEventWatch(SharpSDL3.Delegates.SdlEventFilter, System.IntPtr)
  name.vb: AddEventWatch(SdlEventFilter, IntPtr)
- uid: SharpSDL3.Sdl.EventEnabled(System.UInt32)
  commentId: M:SharpSDL3.Sdl.EventEnabled(System.UInt32)
  id: EventEnabled(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: EventEnabled(uint)
  nameWithType: Sdl.EventEnabled(uint)
  fullName: SharpSDL3.Sdl.EventEnabled(uint)
  type: Method
  source:
    remote:
      path: SDL3/Events.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: EventEnabled
    path: ../../repos/SDL3-CS/SDL3/Events.cs
    startLine: 44
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Query the state of processing events by type.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetEventEnabled(System.UInt32%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool EventEnabled(uint type)
    parameters:
    - id: type
      type: System.UInt32
      description: the type of event; see SDL_EventType for details.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the event is being processed, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Public Shared Function EventEnabled(type As UInteger) As Boolean
  overload: SharpSDL3.Sdl.EventEnabled*
  nameWithType.vb: Sdl.EventEnabled(UInteger)
  fullName.vb: SharpSDL3.Sdl.EventEnabled(UInteger)
  name.vb: EventEnabled(UInteger)
- uid: SharpSDL3.Sdl.FilterEvents(SharpSDL3.Delegates.SdlEventFilter,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.FilterEvents(SharpSDL3.Delegates.SdlEventFilter,System.IntPtr)
  id: FilterEvents(SharpSDL3.Delegates.SdlEventFilter,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: FilterEvents(SdlEventFilter, nint)
  nameWithType: Sdl.FilterEvents(Delegates.SdlEventFilter, nint)
  fullName: SharpSDL3.Sdl.FilterEvents(SharpSDL3.Delegates.SdlEventFilter, nint)
  type: Method
  source:
    remote:
      path: SDL3/Events.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: FilterEvents
    path: ../../repos/SDL3-CS/SDL3/Events.cs
    startLine: 68
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Run a specific filter function on the current event queue, removing any events for which the filter returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
  remarks: >-
    See SDL_SetEventFilter() for more information. Unlike

    SDL_SetEventFilter(), this function does not change

    the filter permanently, it only uses the supplied filter until this

    function returns.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetEventFilter(SharpSDL3.Delegates.SdlEventFilter%40%2cSystem.IntPtr%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetEventFilter(SharpSDL3.Delegates.SdlEventFilter%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void FilterEvents(Delegates.SdlEventFilter filter, nint userdata)
    parameters:
    - id: filter
      type: SharpSDL3.Delegates.SdlEventFilter
      description: the SDL_EventFilter function to call when an event happens.
    - id: userdata
      type: System.IntPtr
      description: a pointer that is passed to filter.
    content.vb: Public Shared Sub FilterEvents(filter As Delegates.SdlEventFilter, userdata As IntPtr)
  overload: SharpSDL3.Sdl.FilterEvents*
  nameWithType.vb: Sdl.FilterEvents(Delegates.SdlEventFilter, IntPtr)
  fullName.vb: SharpSDL3.Sdl.FilterEvents(SharpSDL3.Delegates.SdlEventFilter, System.IntPtr)
  name.vb: FilterEvents(SdlEventFilter, IntPtr)
- uid: SharpSDL3.Sdl.FlushEvent(System.UInt32)
  commentId: M:SharpSDL3.Sdl.FlushEvent(System.UInt32)
  id: FlushEvent(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: FlushEvent(uint)
  nameWithType: Sdl.FlushEvent(uint)
  fullName: SharpSDL3.Sdl.FlushEvent(uint)
  type: Method
  source:
    remote:
      path: SDL3/Events.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: FlushEvent
    path: ../../repos/SDL3-CS/SDL3/Events.cs
    startLine: 89
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Clear events of a specific type from the event queue.
  remarks: >-
    This will unconditionally remove any events from the queue that match

    type. If you need to remove a range of event types, use

    SDL_FlushEvents() instead.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.FlushEvents(System.UInt32%2cSystem.UInt32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void FlushEvent(uint type)
    parameters:
    - id: type
      type: System.UInt32
      description: the type of event to be cleared; see SDL_EventType for details.
    content.vb: Public Shared Sub FlushEvent(type As UInteger)
  overload: SharpSDL3.Sdl.FlushEvent*
  nameWithType.vb: Sdl.FlushEvent(UInteger)
  fullName.vb: SharpSDL3.Sdl.FlushEvent(UInteger)
  name.vb: FlushEvent(UInteger)
- uid: SharpSDL3.Sdl.FlushEvents(System.UInt32,System.UInt32)
  commentId: M:SharpSDL3.Sdl.FlushEvents(System.UInt32,System.UInt32)
  id: FlushEvents(System.UInt32,System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: FlushEvents(uint, uint)
  nameWithType: Sdl.FlushEvents(uint, uint)
  fullName: SharpSDL3.Sdl.FlushEvents(uint, uint)
  type: Method
  source:
    remote:
      path: SDL3/Events.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: FlushEvents
    path: ../../repos/SDL3-CS/SDL3/Events.cs
    startLine: 111
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Clear events of a range of types from the event queue.
  remarks: >-
    This will unconditionally remove any events from the queue that are in the

    range of minType to maxType, inclusive. If you need to remove a single

    event type, use SDL_FlushEvent() instead.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.FlushEvent(System.UInt32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void FlushEvents(uint minType, uint maxType)
    parameters:
    - id: minType
      type: System.UInt32
      description: the low end of event type to be cleared, inclusive; see SDL_EventType for details.
    - id: maxType
      type: System.UInt32
      description: the high end of event type to be cleared, inclusive; see SDL_EventType for details.
    content.vb: Public Shared Sub FlushEvents(minType As UInteger, maxType As UInteger)
  overload: SharpSDL3.Sdl.FlushEvents*
  nameWithType.vb: Sdl.FlushEvents(UInteger, UInteger)
  fullName.vb: SharpSDL3.Sdl.FlushEvents(UInteger, UInteger)
  name.vb: FlushEvents(UInteger, UInteger)
- uid: SharpSDL3.Sdl.GetEventFilter(SharpSDL3.Delegates.SdlEventFilter@,System.IntPtr@)
  commentId: M:SharpSDL3.Sdl.GetEventFilter(SharpSDL3.Delegates.SdlEventFilter@,System.IntPtr@)
  id: GetEventFilter(SharpSDL3.Delegates.SdlEventFilter@,System.IntPtr@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetEventFilter(out SdlEventFilter, out nint)
  nameWithType: Sdl.GetEventFilter(out Delegates.SdlEventFilter, out nint)
  fullName: SharpSDL3.Sdl.GetEventFilter(out SharpSDL3.Delegates.SdlEventFilter, out nint)
  type: Method
  source:
    remote:
      path: SDL3/Events.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetEventFilter
    path: ../../repos/SDL3-CS/SDL3/Events.cs
    startLine: 136
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Query the current event filter.
  remarks: >-
    This function can be used to "chain" filters, by saving the existing filter

    before replacing it with a function that will call that saved filter.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetEventFilter(SharpSDL3.Delegates.SdlEventFilter%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool GetEventFilter(out Delegates.SdlEventFilter filter, out nint userdata)
    parameters:
    - id: filter
      type: SharpSDL3.Delegates.SdlEventFilter
      description: the current callback function will be stored here.
    - id: userdata
      type: System.IntPtr
      description: the pointer that is passed to the current event filter will be stored here.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if there is no event filter set.
    content.vb: Public Shared Function GetEventFilter(filter As Delegates.SdlEventFilter, userdata As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.GetEventFilter*
  nameWithType.vb: Sdl.GetEventFilter(Delegates.SdlEventFilter, IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetEventFilter(SharpSDL3.Delegates.SdlEventFilter, System.IntPtr)
  name.vb: GetEventFilter(SdlEventFilter, IntPtr)
- uid: SharpSDL3.Sdl.GetWindowFromEvent(SharpSDL3.Structs.Event@)
  commentId: M:SharpSDL3.Sdl.GetWindowFromEvent(SharpSDL3.Structs.Event@)
  id: GetWindowFromEvent(SharpSDL3.Structs.Event@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetWindowFromEvent(ref Event)
  nameWithType: Sdl.GetWindowFromEvent(ref Event)
  fullName: SharpSDL3.Sdl.GetWindowFromEvent(ref SharpSDL3.Structs.Event)
  type: Method
  source:
    remote:
      path: SDL3/Events.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetWindowFromEvent
    path: ../../repos/SDL3-CS/SDL3/Events.cs
    startLine: 154
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get window associated with an event.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.PollEvent(SharpSDL3.Structs.Event%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.WaitEvent(SharpSDL3.Structs.Event%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.WaitEventTimeout(SharpSDL3.Structs.Event%40%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint GetWindowFromEvent(ref Event @event)
    parameters:
    - id: event
      type: SharpSDL3.Structs.Event
      description: an event containing a windowID.
    return:
      type: System.IntPtr
      description: (SDL_Window *) Returns the associated window on success or<a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if there is none.
    content.vb: Public Shared Function GetWindowFromEvent([event] As [Event]) As IntPtr
  overload: SharpSDL3.Sdl.GetWindowFromEvent*
  nameWithType.vb: Sdl.GetWindowFromEvent(Event)
  fullName.vb: SharpSDL3.Sdl.GetWindowFromEvent(SharpSDL3.Structs.Event)
  name.vb: GetWindowFromEvent(Event)
- uid: SharpSDL3.Sdl.HasEvent(System.UInt32)
  commentId: M:SharpSDL3.Sdl.HasEvent(System.UInt32)
  id: HasEvent(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: HasEvent(uint)
  nameWithType: Sdl.HasEvent(uint)
  fullName: SharpSDL3.Sdl.HasEvent(uint)
  type: Method
  source:
    remote:
      path: SDL3/Events.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: HasEvent
    path: ../../repos/SDL3-CS/SDL3/Events.cs
    startLine: 185
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Check for the existence of a certain event type in the event queue.
  remarks: >-
    If you need to check for a range of event types, use

    SDL_HasEvents() instead.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.HasEvents(System.UInt32%2cSystem.UInt32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool HasEvent(uint type)
    parameters:
    - id: type
      type: System.UInt32
      description: the type of event to be queried; see SDL_EventType for details.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if events matching type are present, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> ifevents matching type are not present.
    content.vb: Public Shared Function HasEvent(type As UInteger) As Boolean
  overload: SharpSDL3.Sdl.HasEvent*
  nameWithType.vb: Sdl.HasEvent(UInteger)
  fullName.vb: SharpSDL3.Sdl.HasEvent(UInteger)
  name.vb: HasEvent(UInteger)
- uid: SharpSDL3.Sdl.HasEvents(System.UInt32,System.UInt32)
  commentId: M:SharpSDL3.Sdl.HasEvents(System.UInt32,System.UInt32)
  id: HasEvents(System.UInt32,System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: HasEvents(uint, uint)
  nameWithType: Sdl.HasEvents(uint, uint)
  fullName: SharpSDL3.Sdl.HasEvents(uint, uint)
  type: Method
  source:
    remote:
      path: SDL3/Events.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: HasEvents
    path: ../../repos/SDL3-CS/SDL3/Events.cs
    startLine: 208
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Check for the existence of certain event types in the event queue.
  remarks: >-
    If you need to check for a single event type, use

    SDL_HasEvent() instead.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.HasEvents(System.UInt32%2cSystem.UInt32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool HasEvents(uint minType, uint maxType)
    parameters:
    - id: minType
      type: System.UInt32
      description: the low end of event type to be queried, inclusive; see SDL_EventType for details.
    - id: maxType
      type: System.UInt32
      description: the high end of event type to be queried, inclusive; see SDL_EventType for details.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if events with type &gt;= minType and &lt;= maxType arepresent, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if not.
    content.vb: Public Shared Function HasEvents(minType As UInteger, maxType As UInteger) As Boolean
  overload: SharpSDL3.Sdl.HasEvents*
  nameWithType.vb: Sdl.HasEvents(UInteger, UInteger)
  fullName.vb: SharpSDL3.Sdl.HasEvents(UInteger, UInteger)
  name.vb: HasEvents(UInteger, UInteger)
- uid: SharpSDL3.Sdl.PeepEvents(SharpSDL3.Structs.Event[]@,System.Int32,SharpSDL3.Enums.EventAction,SharpSDL3.Enums.EventType,SharpSDL3.Enums.EventType)
  commentId: M:SharpSDL3.Sdl.PeepEvents(SharpSDL3.Structs.Event[]@,System.Int32,SharpSDL3.Enums.EventAction,SharpSDL3.Enums.EventType,SharpSDL3.Enums.EventType)
  id: PeepEvents(SharpSDL3.Structs.Event[]@,System.Int32,SharpSDL3.Enums.EventAction,SharpSDL3.Enums.EventType,SharpSDL3.Enums.EventType)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: PeepEvents(ref Event[], int, EventAction, EventType, EventType)
  nameWithType: Sdl.PeepEvents(ref Event[], int, EventAction, EventType, EventType)
  fullName: SharpSDL3.Sdl.PeepEvents(ref SharpSDL3.Structs.Event[], int, SharpSDL3.Enums.EventAction, SharpSDL3.Enums.EventType, SharpSDL3.Enums.EventType)
  type: Method
  source:
    remote:
      path: SDL3/Events.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: PeepEvents
    path: ../../repos/SDL3-CS/SDL3/Events.cs
    startLine: 237
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Check the event queue for messages and optionally return them.
  remarks: >-
    action may be any of the following:

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.PollEvent(SharpSDL3.Structs.Event%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.PumpEvents" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.PushEvent(SharpSDL3.Structs.Event%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static int PeepEvents(ref Event[] events, int numevents, EventAction action, EventType minType, EventType maxType)
    parameters:
    - id: events
      type: SharpSDL3.Structs.Event[]
      description: destination buffer for the retrieved events, may be discarded to leave the events in the queue and return the number of events that would have been stored.
    - id: numevents
      type: System.Int32
      description: if action is SDL_ADDEVENT, the number of events to add back to the event queue; if action is SDL_PEEKEVENT or SDL_GETEVENT, the maximum number of events to retrieve.
    - id: action
      type: SharpSDL3.Enums.EventAction
      description: action to take; see Remarks for details.
    - id: minType
      type: SharpSDL3.Enums.EventType
      description: minimum value of the event type to be considered; SDL_EVENT_FIRST is a safe choice.
    - id: maxType
      type: SharpSDL3.Enums.EventType
      description: maximum value of the event type to be considered; SDL_EVENT_LAST is a safe choice.
    return:
      type: System.Int32
      description: Returns the number of events actually stored or -1 on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function PeepEvents(events As [Event](), numevents As Integer, action As EventAction, minType As EventType, maxType As EventType) As Integer
  overload: SharpSDL3.Sdl.PeepEvents*
  nameWithType.vb: Sdl.PeepEvents(Event(), Integer, EventAction, EventType, EventType)
  fullName.vb: SharpSDL3.Sdl.PeepEvents(SharpSDL3.Structs.Event(), Integer, SharpSDL3.Enums.EventAction, SharpSDL3.Enums.EventType, SharpSDL3.Enums.EventType)
  name.vb: PeepEvents(Event(), Integer, EventAction, EventType, EventType)
- uid: SharpSDL3.Sdl.PollEvent(SharpSDL3.Structs.Event@)
  commentId: M:SharpSDL3.Sdl.PollEvent(SharpSDL3.Structs.Event@)
  id: PollEvent(SharpSDL3.Structs.Event@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: PollEvent(out Event)
  nameWithType: Sdl.PollEvent(out Event)
  fullName: SharpSDL3.Sdl.PollEvent(out SharpSDL3.Structs.Event)
  type: Method
  source:
    remote:
      path: SDL3/Events.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: PollEvent
    path: ../../repos/SDL3-CS/SDL3/Events.cs
    startLine: 270
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Poll for currently pending events.
  remarks: >-
    If event is not <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>, the next event is removed from the queue and stored

    in the SDL_Event structure pointed to by event. The 1

    returned refers to this event, immediately stored in the SDL Event

    structure -- not an event to follow.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.PushEvent(SharpSDL3.Structs.Event%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.WaitEvent(SharpSDL3.Structs.Event%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.WaitEventTimeout(SharpSDL3.Structs.Event%40%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool PollEvent(out Event @event)
    parameters:
    - id: event
      type: SharpSDL3.Structs.Event
      description: the SDL_Event structure to be filled with the next event from the queue, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if this got an event or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if there are noneavailable.
    content.vb: Public Shared Function PollEvent([event] As [Event]) As Boolean
  overload: SharpSDL3.Sdl.PollEvent*
  nameWithType.vb: Sdl.PollEvent(Event)
  fullName.vb: SharpSDL3.Sdl.PollEvent(SharpSDL3.Structs.Event)
  name.vb: PollEvent(Event)
- uid: SharpSDL3.Sdl.PumpEvents
  commentId: M:SharpSDL3.Sdl.PumpEvents
  id: PumpEvents
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: PumpEvents()
  nameWithType: Sdl.PumpEvents()
  fullName: SharpSDL3.Sdl.PumpEvents()
  type: Method
  source:
    remote:
      path: SDL3/Events.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: PumpEvents
    path: ../../repos/SDL3-CS/SDL3/Events.cs
    startLine: 290
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Pump the event loop, gathering events from the input devices.
  remarks: >-
    This function updates the event queue and internal input device state.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.PollEvent(SharpSDL3.Structs.Event%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.WaitEvent(SharpSDL3.Structs.Event%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void PumpEvents()
    content.vb: Public Shared Sub PumpEvents()
  overload: SharpSDL3.Sdl.PumpEvents*
- uid: SharpSDL3.Sdl.PushEvent(SharpSDL3.Structs.Event@)
  commentId: M:SharpSDL3.Sdl.PushEvent(SharpSDL3.Structs.Event@)
  id: PushEvent(SharpSDL3.Structs.Event@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: PushEvent(ref Event)
  nameWithType: Sdl.PushEvent(ref Event)
  fullName: SharpSDL3.Sdl.PushEvent(ref SharpSDL3.Structs.Event)
  type: Method
  source:
    remote:
      path: SDL3/Events.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: PushEvent
    path: ../../repos/SDL3-CS/SDL3/Events.cs
    startLine: 312
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Add an event to the event queue.
  remarks: >-
    The event queue can actually be used as a two way communication channel.

    Not only can events be read from the queue, but the user can also push

    their own events onto it. event is a pointer to the event structure you

    wish to push onto the queue. The event is copied into the queue, and the

    caller may dispose of the memory pointed to after

    SDL_PushEvent() returns.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.PeepEvents(SharpSDL3.Structs.Event%5b%5d%40%2cSystem.Int32%2cSharpSDL3.Enums.EventAction%2cSharpSDL3.Enums.EventType%2cSharpSDL3.Enums.EventType)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.PollEvent(SharpSDL3.Structs.Event%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.RegisterEvents(System.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool PushEvent(ref Event @event)
    parameters:
    - id: event
      type: SharpSDL3.Structs.Event
      description: the SDL_Event to be added to the queue.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if the event was filtered or on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information. A commonreason for error is the event queue being full.
    content.vb: Public Shared Function PushEvent([event] As [Event]) As Boolean
  overload: SharpSDL3.Sdl.PushEvent*
  nameWithType.vb: Sdl.PushEvent(Event)
  fullName.vb: SharpSDL3.Sdl.PushEvent(SharpSDL3.Structs.Event)
  name.vb: PushEvent(Event)
- uid: SharpSDL3.Sdl.RegisterEvents(System.Int32)
  commentId: M:SharpSDL3.Sdl.RegisterEvents(System.Int32)
  id: RegisterEvents(System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RegisterEvents(int)
  nameWithType: Sdl.RegisterEvents(int)
  fullName: SharpSDL3.Sdl.RegisterEvents(int)
  type: Method
  source:
    remote:
      path: SDL3/Events.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RegisterEvents
    path: ../../repos/SDL3-CS/SDL3/Events.cs
    startLine: 338
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Allocate a set of user-defined events, and return the beginning event number for that set of events.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.PushEvent(SharpSDL3.Structs.Event%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static uint RegisterEvents(int numevents)
    parameters:
    - id: numevents
      type: System.Int32
      description: the number of events to be allocated.
    return:
      type: System.UInt32
      description: Returns the beginning event number, or 0 if numevents isinvalid or if there are not enough user-defined events left.
    content.vb: Public Shared Function RegisterEvents(numevents As Integer) As UInteger
  overload: SharpSDL3.Sdl.RegisterEvents*
  nameWithType.vb: Sdl.RegisterEvents(Integer)
  fullName.vb: SharpSDL3.Sdl.RegisterEvents(Integer)
  name.vb: RegisterEvents(Integer)
- uid: SharpSDL3.Sdl.RemoveEventWatch(SharpSDL3.Delegates.SdlEventFilter,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.RemoveEventWatch(SharpSDL3.Delegates.SdlEventFilter,System.IntPtr)
  id: RemoveEventWatch(SharpSDL3.Delegates.SdlEventFilter,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RemoveEventWatch(SdlEventFilter, nint)
  nameWithType: Sdl.RemoveEventWatch(Delegates.SdlEventFilter, nint)
  fullName: SharpSDL3.Sdl.RemoveEventWatch(SharpSDL3.Delegates.SdlEventFilter, nint)
  type: Method
  source:
    remote:
      path: SDL3/Events.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RemoveEventWatch
    path: ../../repos/SDL3-CS/SDL3/Events.cs
    startLine: 360
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Remove an event watch callback added with SDL_AddEventWatch().
  remarks: >-
    This function takes the same input as

    SDL_AddEventWatch() to identify and delete the

    corresponding callback.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.AddEventWatch(SharpSDL3.Delegates.SdlEventFilter%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void RemoveEventWatch(Delegates.SdlEventFilter filter, nint userdata)
    parameters:
    - id: filter
      type: SharpSDL3.Delegates.SdlEventFilter
      description: the function originally passed to SDL_AddEventWatch().
    - id: userdata
      type: System.IntPtr
      description: the pointer originally passed to SDL_AddEventWatch().
    content.vb: Public Shared Sub RemoveEventWatch(filter As Delegates.SdlEventFilter, userdata As IntPtr)
  overload: SharpSDL3.Sdl.RemoveEventWatch*
  nameWithType.vb: Sdl.RemoveEventWatch(Delegates.SdlEventFilter, IntPtr)
  fullName.vb: SharpSDL3.Sdl.RemoveEventWatch(SharpSDL3.Delegates.SdlEventFilter, System.IntPtr)
  name.vb: RemoveEventWatch(SdlEventFilter, IntPtr)
- uid: SharpSDL3.Sdl.SetEventEnabled(System.UInt32,System.Boolean)
  commentId: M:SharpSDL3.Sdl.SetEventEnabled(System.UInt32,System.Boolean)
  id: SetEventEnabled(System.UInt32,System.Boolean)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetEventEnabled(uint, bool)
  nameWithType: Sdl.SetEventEnabled(uint, bool)
  fullName: SharpSDL3.Sdl.SetEventEnabled(uint, bool)
  type: Method
  source:
    remote:
      path: SDL3/Events.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetEventEnabled
    path: ../../repos/SDL3-CS/SDL3/Events.cs
    startLine: 379
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set the state of processing events by type.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.EventEnabled(System.UInt32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void SetEventEnabled(uint type, bool enabled)
    parameters:
    - id: type
      type: System.UInt32
      description: the type of event; see SDL_EventType for details.
    - id: enabled
      type: System.Boolean
      description: whether to process the event or not.
    content.vb: Public Shared Sub SetEventEnabled(type As UInteger, enabled As Boolean)
  overload: SharpSDL3.Sdl.SetEventEnabled*
  nameWithType.vb: Sdl.SetEventEnabled(UInteger, Boolean)
  fullName.vb: SharpSDL3.Sdl.SetEventEnabled(UInteger, Boolean)
  name.vb: SetEventEnabled(UInteger, Boolean)
- uid: SharpSDL3.Sdl.SetEventFilter(SharpSDL3.Delegates.SdlEventFilter,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.SetEventFilter(SharpSDL3.Delegates.SdlEventFilter,System.IntPtr)
  id: SetEventFilter(SharpSDL3.Delegates.SdlEventFilter,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetEventFilter(SdlEventFilter, nint)
  nameWithType: Sdl.SetEventFilter(Delegates.SdlEventFilter, nint)
  fullName: SharpSDL3.Sdl.SetEventFilter(SharpSDL3.Delegates.SdlEventFilter, nint)
  type: Method
  source:
    remote:
      path: SDL3/Events.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetEventFilter
    path: ../../repos/SDL3-CS/SDL3/Events.cs
    startLine: 405
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set up a filter to process all events before they are added to the internal event queue.
  remarks: >-
    If you just want to see events without modifying them or preventing them

    from being queued, you should use SDL_AddEventWatch()

    instead.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.AddEventWatch(SharpSDL3.Delegates.SdlEventFilter%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetEventEnabled(System.UInt32%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetEventFilter(SharpSDL3.Delegates.SdlEventFilter%40%2cSystem.IntPtr%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.PeepEvents(SharpSDL3.Structs.Event%5b%5d%40%2cSystem.Int32%2cSharpSDL3.Enums.EventAction%2cSharpSDL3.Enums.EventType%2cSharpSDL3.Enums.EventType)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.PushEvent(SharpSDL3.Structs.Event%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void SetEventFilter(Delegates.SdlEventFilter filter, nint userdata)
    parameters:
    - id: filter
      type: SharpSDL3.Delegates.SdlEventFilter
      description: an SDL_EventFilter function to call when an event happens.
    - id: userdata
      type: System.IntPtr
      description: a pointer that is passed to filter.
    content.vb: Public Shared Sub SetEventFilter(filter As Delegates.SdlEventFilter, userdata As IntPtr)
  overload: SharpSDL3.Sdl.SetEventFilter*
  nameWithType.vb: Sdl.SetEventFilter(Delegates.SdlEventFilter, IntPtr)
  fullName.vb: SharpSDL3.Sdl.SetEventFilter(SharpSDL3.Delegates.SdlEventFilter, System.IntPtr)
  name.vb: SetEventFilter(SdlEventFilter, IntPtr)
- uid: SharpSDL3.Sdl.WaitEvent(SharpSDL3.Structs.Event@)
  commentId: M:SharpSDL3.Sdl.WaitEvent(SharpSDL3.Structs.Event@)
  id: WaitEvent(SharpSDL3.Structs.Event@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: WaitEvent(out Event)
  nameWithType: Sdl.WaitEvent(out Event)
  fullName: SharpSDL3.Sdl.WaitEvent(out SharpSDL3.Structs.Event)
  type: Method
  source:
    remote:
      path: SDL3/Events.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: WaitEvent
    path: ../../repos/SDL3-CS/SDL3/Events.cs
    startLine: 428
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Wait indefinitely for the next available event.
  remarks: >-
    If event is not <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>, the next event is removed from the queue and stored

    in the SDL_Event structure pointed to by event.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.PollEvent(SharpSDL3.Structs.Event%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.PushEvent(SharpSDL3.Structs.Event%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.WaitEventTimeout(SharpSDL3.Structs.Event%40%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool WaitEvent(out Event @event)
    parameters:
    - id: event
      type: SharpSDL3.Structs.Event
      description: the SDL_Event structure to be filled in with the next event from the queue, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if there was an error while waitingfor events; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function WaitEvent([event] As [Event]) As Boolean
  overload: SharpSDL3.Sdl.WaitEvent*
  nameWithType.vb: Sdl.WaitEvent(Event)
  fullName.vb: SharpSDL3.Sdl.WaitEvent(SharpSDL3.Structs.Event)
  name.vb: WaitEvent(Event)
- uid: SharpSDL3.Sdl.WaitEventTimeout(SharpSDL3.Structs.Event@,System.Int32)
  commentId: M:SharpSDL3.Sdl.WaitEventTimeout(SharpSDL3.Structs.Event@,System.Int32)
  id: WaitEventTimeout(SharpSDL3.Structs.Event@,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: WaitEventTimeout(out Event, int)
  nameWithType: Sdl.WaitEventTimeout(out Event, int)
  fullName: SharpSDL3.Sdl.WaitEventTimeout(out SharpSDL3.Structs.Event, int)
  type: Method
  source:
    remote:
      path: SDL3/Events.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: WaitEventTimeout
    path: ../../repos/SDL3-CS/SDL3/Events.cs
    startLine: 453
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Wait until the specified timeout (in milliseconds) for the next available event.
  remarks: >-
    If event is not <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>, the next event is removed from the queue and stored

    in the SDL_Event structure pointed to by event.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.PollEvent(SharpSDL3.Structs.Event%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.PushEvent(SharpSDL3.Structs.Event%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.WaitEvent(SharpSDL3.Structs.Event%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool WaitEventTimeout(out Event @event, int timeoutMs)
    parameters:
    - id: event
      type: SharpSDL3.Structs.Event
      description: the SDL_Event structure to be filled in with the next event from the queue, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    - id: timeoutMs
      type: System.Int32
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if this got an event or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if the timeout elapsedwithout any events available.
    content.vb: Public Shared Function WaitEventTimeout([event] As [Event], timeoutMs As Integer) As Boolean
  overload: SharpSDL3.Sdl.WaitEventTimeout*
  nameWithType.vb: Sdl.WaitEventTimeout(Event, Integer)
  fullName.vb: SharpSDL3.Sdl.WaitEventTimeout(SharpSDL3.Structs.Event, Integer)
  name.vb: WaitEventTimeout(Event, Integer)
- uid: SharpSDL3.Sdl.OpenFile(SharpSDL3.Delegates.SdlDialogFileCallback,System.IntPtr,System.IntPtr,System.Span{SharpSDL3.Structs.DialogFileFilter},System.Int32,System.String,SharpSDL3.Structs.SdlBool)
  commentId: M:SharpSDL3.Sdl.OpenFile(SharpSDL3.Delegates.SdlDialogFileCallback,System.IntPtr,System.IntPtr,System.Span{SharpSDL3.Structs.DialogFileFilter},System.Int32,System.String,SharpSDL3.Structs.SdlBool)
  id: OpenFile(SharpSDL3.Delegates.SdlDialogFileCallback,System.IntPtr,System.IntPtr,System.Span{SharpSDL3.Structs.DialogFileFilter},System.Int32,System.String,SharpSDL3.Structs.SdlBool)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: OpenFile(SdlDialogFileCallback, nint, nint, Span<DialogFileFilter>, int, string, SdlBool)
  nameWithType: Sdl.OpenFile(Delegates.SdlDialogFileCallback, nint, nint, Span<DialogFileFilter>, int, string, SdlBool)
  fullName: SharpSDL3.Sdl.OpenFile(SharpSDL3.Delegates.SdlDialogFileCallback, nint, nint, System.Span<SharpSDL3.Structs.DialogFileFilter>, int, string, SharpSDL3.Structs.SdlBool)
  type: Method
  source:
    remote:
      path: SDL3/FileDialog.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: OpenFile
    path: ../../repos/SDL3-CS/SDL3/FileDialog.cs
    startLine: 11
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static void OpenFile(Delegates.SdlDialogFileCallback callback, nint userdata, nint window, Span<DialogFileFilter> filters, int nfilters, string defaultLocation, SdlBool allowMany)
    parameters:
    - id: callback
      type: SharpSDL3.Delegates.SdlDialogFileCallback
    - id: userdata
      type: System.IntPtr
    - id: window
      type: System.IntPtr
    - id: filters
      type: System.Span{SharpSDL3.Structs.DialogFileFilter}
    - id: nfilters
      type: System.Int32
    - id: defaultLocation
      type: System.String
    - id: allowMany
      type: SharpSDL3.Structs.SdlBool
    content.vb: Public Shared Sub OpenFile(callback As Delegates.SdlDialogFileCallback, userdata As IntPtr, window As IntPtr, filters As Span(Of DialogFileFilter), nfilters As Integer, defaultLocation As String, allowMany As SdlBool)
  overload: SharpSDL3.Sdl.OpenFile*
  nameWithType.vb: Sdl.OpenFile(Delegates.SdlDialogFileCallback, IntPtr, IntPtr, Span(Of DialogFileFilter), Integer, String, SdlBool)
  fullName.vb: SharpSDL3.Sdl.OpenFile(SharpSDL3.Delegates.SdlDialogFileCallback, System.IntPtr, System.IntPtr, System.Span(Of SharpSDL3.Structs.DialogFileFilter), Integer, String, SharpSDL3.Structs.SdlBool)
  name.vb: OpenFile(SdlDialogFileCallback, IntPtr, IntPtr, Span(Of DialogFileFilter), Integer, String, SdlBool)
- uid: SharpSDL3.Sdl.OpenFolder(SharpSDL3.Delegates.SdlDialogFileCallback,System.IntPtr,System.IntPtr,System.String,SharpSDL3.Structs.SdlBool)
  commentId: M:SharpSDL3.Sdl.OpenFolder(SharpSDL3.Delegates.SdlDialogFileCallback,System.IntPtr,System.IntPtr,System.String,SharpSDL3.Structs.SdlBool)
  id: OpenFolder(SharpSDL3.Delegates.SdlDialogFileCallback,System.IntPtr,System.IntPtr,System.String,SharpSDL3.Structs.SdlBool)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: OpenFolder(SdlDialogFileCallback, nint, nint, string, SdlBool)
  nameWithType: Sdl.OpenFolder(Delegates.SdlDialogFileCallback, nint, nint, string, SdlBool)
  fullName: SharpSDL3.Sdl.OpenFolder(SharpSDL3.Delegates.SdlDialogFileCallback, nint, nint, string, SharpSDL3.Structs.SdlBool)
  type: Method
  source:
    remote:
      path: SDL3/FileDialog.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: OpenFolder
    path: ../../repos/SDL3-CS/SDL3/FileDialog.cs
    startLine: 28
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static void OpenFolder(Delegates.SdlDialogFileCallback callback, nint userdata, nint window, string defaultLocation, SdlBool allowMany)
    parameters:
    - id: callback
      type: SharpSDL3.Delegates.SdlDialogFileCallback
    - id: userdata
      type: System.IntPtr
    - id: window
      type: System.IntPtr
    - id: defaultLocation
      type: System.String
    - id: allowMany
      type: SharpSDL3.Structs.SdlBool
    content.vb: Public Shared Sub OpenFolder(callback As Delegates.SdlDialogFileCallback, userdata As IntPtr, window As IntPtr, defaultLocation As String, allowMany As SdlBool)
  overload: SharpSDL3.Sdl.OpenFolder*
  nameWithType.vb: Sdl.OpenFolder(Delegates.SdlDialogFileCallback, IntPtr, IntPtr, String, SdlBool)
  fullName.vb: SharpSDL3.Sdl.OpenFolder(SharpSDL3.Delegates.SdlDialogFileCallback, System.IntPtr, System.IntPtr, String, SharpSDL3.Structs.SdlBool)
  name.vb: OpenFolder(SdlDialogFileCallback, IntPtr, IntPtr, String, SdlBool)
- uid: SharpSDL3.Sdl.SaveFile(SharpSDL3.Delegates.SdlDialogFileCallback,System.IntPtr,System.IntPtr,System.Span{SharpSDL3.Structs.DialogFileFilter},System.Int32,System.String)
  commentId: M:SharpSDL3.Sdl.SaveFile(SharpSDL3.Delegates.SdlDialogFileCallback,System.IntPtr,System.IntPtr,System.Span{SharpSDL3.Structs.DialogFileFilter},System.Int32,System.String)
  id: SaveFile(SharpSDL3.Delegates.SdlDialogFileCallback,System.IntPtr,System.IntPtr,System.Span{SharpSDL3.Structs.DialogFileFilter},System.Int32,System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SaveFile(SdlDialogFileCallback, nint, nint, Span<DialogFileFilter>, int, string)
  nameWithType: Sdl.SaveFile(Delegates.SdlDialogFileCallback, nint, nint, Span<DialogFileFilter>, int, string)
  fullName: SharpSDL3.Sdl.SaveFile(SharpSDL3.Delegates.SdlDialogFileCallback, nint, nint, System.Span<SharpSDL3.Structs.DialogFileFilter>, int, string)
  type: Method
  source:
    remote:
      path: SDL3/FileDialog.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SaveFile
    path: ../../repos/SDL3-CS/SDL3/FileDialog.cs
    startLine: 39
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static void SaveFile(Delegates.SdlDialogFileCallback callback, nint userdata, nint window, Span<DialogFileFilter> filters, int nfilters, string defaultLocation)
    parameters:
    - id: callback
      type: SharpSDL3.Delegates.SdlDialogFileCallback
    - id: userdata
      type: System.IntPtr
    - id: window
      type: System.IntPtr
    - id: filters
      type: System.Span{SharpSDL3.Structs.DialogFileFilter}
    - id: nfilters
      type: System.Int32
    - id: defaultLocation
      type: System.String
    content.vb: Public Shared Sub SaveFile(callback As Delegates.SdlDialogFileCallback, userdata As IntPtr, window As IntPtr, filters As Span(Of DialogFileFilter), nfilters As Integer, defaultLocation As String)
  overload: SharpSDL3.Sdl.SaveFile*
  nameWithType.vb: Sdl.SaveFile(Delegates.SdlDialogFileCallback, IntPtr, IntPtr, Span(Of DialogFileFilter), Integer, String)
  fullName.vb: SharpSDL3.Sdl.SaveFile(SharpSDL3.Delegates.SdlDialogFileCallback, System.IntPtr, System.IntPtr, System.Span(Of SharpSDL3.Structs.DialogFileFilter), Integer, String)
  name.vb: SaveFile(SdlDialogFileCallback, IntPtr, IntPtr, Span(Of DialogFileFilter), Integer, String)
- uid: SharpSDL3.Sdl.ShowFileDialogWithProperties(SharpSDL3.Enums.FileDialogType,SharpSDL3.Delegates.SdlDialogFileCallback,System.IntPtr,System.UInt32)
  commentId: M:SharpSDL3.Sdl.ShowFileDialogWithProperties(SharpSDL3.Enums.FileDialogType,SharpSDL3.Delegates.SdlDialogFileCallback,System.IntPtr,System.UInt32)
  id: ShowFileDialogWithProperties(SharpSDL3.Enums.FileDialogType,SharpSDL3.Delegates.SdlDialogFileCallback,System.IntPtr,System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ShowFileDialogWithProperties(FileDialogType, SdlDialogFileCallback, nint, uint)
  nameWithType: Sdl.ShowFileDialogWithProperties(FileDialogType, Delegates.SdlDialogFileCallback, nint, uint)
  fullName: SharpSDL3.Sdl.ShowFileDialogWithProperties(SharpSDL3.Enums.FileDialogType, SharpSDL3.Delegates.SdlDialogFileCallback, nint, uint)
  type: Method
  source:
    remote:
      path: SDL3/FileDialog.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ShowFileDialogWithProperties
    path: ../../repos/SDL3-CS/SDL3/FileDialog.cs
    startLine: 71
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Create and launch a file dialog with the specified properties.
  remarks: >-
    These are the supported properties:

    <p><strong>Thread Safety:</strong> This function should be called only from the main thread. The callback maybe invoked from the same thread or from a different one, depending on theOS's constraints.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Enums.FileDialogType" data-throw-if-not-resolved="false"></xref>

    DialogFileCallback

    <xref href="SharpSDL3.Structs.DialogFileFilter" data-throw-if-not-resolved="false"></xref>

    ShowOpenFileDialog

    ShowSaveFileDialog

    ShowOpenFolderDialog
  example: []
  syntax:
    content: public static void ShowFileDialogWithProperties(FileDialogType type, Delegates.SdlDialogFileCallback callback, nint userdata, uint props)
    parameters:
    - id: type
      type: SharpSDL3.Enums.FileDialogType
      description: the type of file dialog.
    - id: callback
      type: SharpSDL3.Delegates.SdlDialogFileCallback
      description: a function pointer to be invoked when the user selects a file and accepts, or cancels the dialog, or an error occurs.
    - id: userdata
      type: System.IntPtr
      description: an optional pointer to pass extra data to the callback when it will be invoked.
    - id: props
      type: System.UInt32
      description: the properties to use.
    content.vb: Public Shared Sub ShowFileDialogWithProperties(type As FileDialogType, callback As Delegates.SdlDialogFileCallback, userdata As IntPtr, props As UInteger)
  overload: SharpSDL3.Sdl.ShowFileDialogWithProperties*
  nameWithType.vb: Sdl.ShowFileDialogWithProperties(FileDialogType, Delegates.SdlDialogFileCallback, IntPtr, UInteger)
  fullName.vb: SharpSDL3.Sdl.ShowFileDialogWithProperties(SharpSDL3.Enums.FileDialogType, SharpSDL3.Delegates.SdlDialogFileCallback, System.IntPtr, UInteger)
  name.vb: ShowFileDialogWithProperties(FileDialogType, SdlDialogFileCallback, IntPtr, UInteger)
- uid: SharpSDL3.Sdl.CopyFile(System.String,System.String)
  commentId: M:SharpSDL3.Sdl.CopyFile(System.String,System.String)
  id: CopyFile(System.String,System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CopyFile(string, string)
  nameWithType: Sdl.CopyFile(string, string)
  fullName: SharpSDL3.Sdl.CopyFile(string, string)
  type: Method
  source:
    remote:
      path: SDL3/FileSystem.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CopyFile
    path: ../../repos/SDL3-CS/SDL3/FileSystem.cs
    startLine: 22
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Copy a file.
  remarks: >-
    If the file at newpath already exists, it will be overwritten with the

    contents of the file at oldpath.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool CopyFile(string oldpath, string newpath)
    parameters:
    - id: oldpath
      type: System.String
      description: the old path.
    - id: newpath
      type: System.String
      description: the new path.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function CopyFile(oldpath As String, newpath As String) As Boolean
  overload: SharpSDL3.Sdl.CopyFile*
  nameWithType.vb: Sdl.CopyFile(String, String)
  fullName.vb: SharpSDL3.Sdl.CopyFile(String, String)
  name.vb: CopyFile(String, String)
- uid: SharpSDL3.Sdl.CreateDirectory(System.String)
  commentId: M:SharpSDL3.Sdl.CreateDirectory(System.String)
  id: CreateDirectory(System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CreateDirectory(string)
  nameWithType: Sdl.CreateDirectory(string)
  fullName: SharpSDL3.Sdl.CreateDirectory(string)
  type: Method
  source:
    remote:
      path: SDL3/FileSystem.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CreateDirectory
    path: ../../repos/SDL3-CS/SDL3/FileSystem.cs
    startLine: 35
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Create a directory, and any missing parent directories.
  remarks: >-
    This reports success if path already exists as a directory.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool CreateDirectory(string path)
    parameters:
    - id: path
      type: System.String
      description: the path of the directory to create.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function CreateDirectory(path As String) As Boolean
  overload: SharpSDL3.Sdl.CreateDirectory*
  nameWithType.vb: Sdl.CreateDirectory(String)
  fullName.vb: SharpSDL3.Sdl.CreateDirectory(String)
  name.vb: CreateDirectory(String)
- uid: SharpSDL3.Sdl.EnumerateDirectory(System.String,SharpSDL3.Delegates.SdlEnumerateDirectoryCallback,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.EnumerateDirectory(System.String,SharpSDL3.Delegates.SdlEnumerateDirectoryCallback,System.IntPtr)
  id: EnumerateDirectory(System.String,SharpSDL3.Delegates.SdlEnumerateDirectoryCallback,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: EnumerateDirectory(string, SdlEnumerateDirectoryCallback, nint)
  nameWithType: Sdl.EnumerateDirectory(string, Delegates.SdlEnumerateDirectoryCallback, nint)
  fullName: SharpSDL3.Sdl.EnumerateDirectory(string, SharpSDL3.Delegates.SdlEnumerateDirectoryCallback, nint)
  type: Method
  source:
    remote:
      path: SDL3/FileSystem.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: EnumerateDirectory
    path: ../../repos/SDL3-CS/SDL3/FileSystem.cs
    startLine: 54
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Enumerate a directory through a callback function.
  remarks: >-
    This function provides every directory entry through an app-provided

    callback, called once for each directory entry, until all results have been

    provided or the callback returns either

    SDL_ENUM_SUCCESS or

    SDL_ENUM_FAILURE.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool EnumerateDirectory(string path, Delegates.SdlEnumerateDirectoryCallback callback, nint userdata)
    parameters:
    - id: path
      type: System.String
      description: the path of the directory to enumerate.
    - id: callback
      type: SharpSDL3.Delegates.SdlEnumerateDirectoryCallback
      description: a function that is called for each entry in the directory.
    - id: userdata
      type: System.IntPtr
      description: a pointer that is passed to callback.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function EnumerateDirectory(path As String, callback As Delegates.SdlEnumerateDirectoryCallback, userdata As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.EnumerateDirectory*
  nameWithType.vb: Sdl.EnumerateDirectory(String, Delegates.SdlEnumerateDirectoryCallback, IntPtr)
  fullName.vb: SharpSDL3.Sdl.EnumerateDirectory(String, SharpSDL3.Delegates.SdlEnumerateDirectoryCallback, System.IntPtr)
  name.vb: EnumerateDirectory(String, SdlEnumerateDirectoryCallback, IntPtr)
- uid: SharpSDL3.Sdl.GetBasePath
  commentId: M:SharpSDL3.Sdl.GetBasePath
  id: GetBasePath
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetBasePath()
  nameWithType: Sdl.GetBasePath()
  fullName: SharpSDL3.Sdl.GetBasePath()
  type: Method
  source:
    remote:
      path: SDL3/FileSystem.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetBasePath
    path: ../../repos/SDL3-CS/SDL3/FileSystem.cs
    startLine: 67
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the directory where the application was run from.
  remarks: >-
    SDL caches the result of this call internally, but the first call to this

    function is not necessarily fast, so plan accordingly.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetPrefPath(System.String%2cSystem.String)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static string GetBasePath()
    return:
      type: System.String
      description: Returns an absolute path in UTF-8 encoding to theapplication data directory. <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> will be returned on error or when theplatform doesn't implement this functionality, call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetBasePath() As String
  overload: SharpSDL3.Sdl.GetBasePath*
- uid: SharpSDL3.Sdl.GetCurrentDirectory
  commentId: M:SharpSDL3.Sdl.GetCurrentDirectory
  id: GetCurrentDirectory
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetCurrentDirectory()
  nameWithType: Sdl.GetCurrentDirectory()
  fullName: SharpSDL3.Sdl.GetCurrentDirectory()
  type: Method
  source:
    remote:
      path: SDL3/FileSystem.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetCurrentDirectory
    path: ../../repos/SDL3-CS/SDL3/FileSystem.cs
    startLine: 79
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get what the system believes is the "current working directory."
  remarks: >-
    For systems without a concept of a current working directory, this will

    still attempt to provide something reasonable.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static string GetCurrentDirectory()
    return:
      type: System.String
      description: (char *) Returns a UTF-8 string of the current working directory inplatform-dependent notation. <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if there's a problem. This should befreed with <xref href="SharpSDL3.Sdl.Free(System.IntPtr)" data-throw-if-not-resolved="false"></xref> when it is no longer needed.
    content.vb: Public Shared Function GetCurrentDirectory() As String
  overload: SharpSDL3.Sdl.GetCurrentDirectory*
- uid: SharpSDL3.Sdl.GetPathInfo(System.String,SharpSDL3.Structs.PathInfo@)
  commentId: M:SharpSDL3.Sdl.GetPathInfo(System.String,SharpSDL3.Structs.PathInfo@)
  id: GetPathInfo(System.String,SharpSDL3.Structs.PathInfo@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetPathInfo(string, out PathInfo)
  nameWithType: Sdl.GetPathInfo(string, out PathInfo)
  fullName: SharpSDL3.Sdl.GetPathInfo(string, out SharpSDL3.Structs.PathInfo)
  type: Method
  source:
    remote:
      path: SDL3/FileSystem.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetPathInfo
    path: ../../repos/SDL3-CS/SDL3/FileSystem.cs
    startLine: 92
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get information about a filesystem path.
  remarks: <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool GetPathInfo(string path, out PathInfo info)
    parameters:
    - id: path
      type: System.String
      description: the path to query.
    - id: info
      type: SharpSDL3.Structs.PathInfo
      description: a pointer filled in with information about the path, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to check for the existence of a file.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if the file doesn't exist, oranother failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetPathInfo(path As String, info As PathInfo) As Boolean
  overload: SharpSDL3.Sdl.GetPathInfo*
  nameWithType.vb: Sdl.GetPathInfo(String, PathInfo)
  fullName.vb: SharpSDL3.Sdl.GetPathInfo(String, SharpSDL3.Structs.PathInfo)
  name.vb: GetPathInfo(String, PathInfo)
- uid: SharpSDL3.Sdl.GetPrefPath(System.String,System.String)
  commentId: M:SharpSDL3.Sdl.GetPrefPath(System.String,System.String)
  id: GetPrefPath(System.String,System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetPrefPath(string, string)
  nameWithType: Sdl.GetPrefPath(string, string)
  fullName: SharpSDL3.Sdl.GetPrefPath(string, string)
  type: Method
  source:
    remote:
      path: SDL3/FileSystem.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetPrefPath
    path: ../../repos/SDL3-CS/SDL3/FileSystem.cs
    startLine: 109
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the user-and-app-specific path where files can be written.
  remarks: >-
    Get the "pref dir". This is meant to be where users can write personal

    files (preferences and save games, etc) that are specific to your

    application. This directory is unique per user, per application.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetBasePath" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static string GetPrefPath(string org, string app)
    parameters:
    - id: org
      type: System.String
      description: the name of your organization.
    - id: app
      type: System.String
      description: the name of your application.
    return:
      type: System.String
      description: (char *) Returns a UTF-8 string of the user directory in platform-dependentnotation. <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if there's a problem (creating directory failed, etc.). Thisshould be freed with <xref href="SharpSDL3.Sdl.Free(System.IntPtr)" data-throw-if-not-resolved="false"></xref> when it is no longer needed.
    content.vb: Public Shared Function GetPrefPath(org As String, app As String) As String
  overload: SharpSDL3.Sdl.GetPrefPath*
  nameWithType.vb: Sdl.GetPrefPath(String, String)
  fullName.vb: SharpSDL3.Sdl.GetPrefPath(String, String)
  name.vb: GetPrefPath(String, String)
- uid: SharpSDL3.Sdl.GetUserFolder(SharpSDL3.Enums.Folder)
  commentId: M:SharpSDL3.Sdl.GetUserFolder(SharpSDL3.Enums.Folder)
  id: GetUserFolder(SharpSDL3.Enums.Folder)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetUserFolder(Folder)
  nameWithType: Sdl.GetUserFolder(Folder)
  fullName: SharpSDL3.Sdl.GetUserFolder(SharpSDL3.Enums.Folder)
  type: Method
  source:
    remote:
      path: SDL3/FileSystem.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetUserFolder
    path: ../../repos/SDL3-CS/SDL3/FileSystem.cs
    startLine: 124
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Finds the most suitable user folder for a specific purpose.
  remarks: >-
    Many OSes provide certain standard folders for certain purposes, such as

    storing pictures, music or videos for a certain user. This function gives

    the path for many of those special locations.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static string GetUserFolder(Folder folder)
    parameters:
    - id: folder
      type: SharpSDL3.Enums.Folder
      description: the type of folder to find.
    return:
      type: System.String
      description: Returns either a null-terminated C string containing thefull path to the folder, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if an error happened.
    content.vb: Public Shared Function GetUserFolder(folder As Folder) As String
  overload: SharpSDL3.Sdl.GetUserFolder*
- uid: SharpSDL3.Sdl.RemovePath(System.String)
  commentId: M:SharpSDL3.Sdl.RemovePath(System.String)
  id: RemovePath(System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RemovePath(string)
  nameWithType: Sdl.RemovePath(string)
  fullName: SharpSDL3.Sdl.RemovePath(string)
  type: Method
  source:
    remote:
      path: SDL3/FileSystem.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RemovePath
    path: ../../repos/SDL3-CS/SDL3/FileSystem.cs
    startLine: 138
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Remove a file or an empty directory.
  remarks: >-
    Directories that are not empty will fail; this function will not recursely

    delete directory trees.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool RemovePath(string path)
    parameters:
    - id: path
      type: System.String
      description: the path to remove from the filesystem.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function RemovePath(path As String) As Boolean
  overload: SharpSDL3.Sdl.RemovePath*
  nameWithType.vb: Sdl.RemovePath(String)
  fullName.vb: SharpSDL3.Sdl.RemovePath(String)
  name.vb: RemovePath(String)
- uid: SharpSDL3.Sdl.RenamePath(System.String,System.String)
  commentId: M:SharpSDL3.Sdl.RenamePath(System.String,System.String)
  id: RenamePath(System.String,System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RenamePath(string, string)
  nameWithType: Sdl.RenamePath(string, string)
  fullName: SharpSDL3.Sdl.RenamePath(string, string)
  type: Method
  source:
    remote:
      path: SDL3/FileSystem.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RenamePath
    path: ../../repos/SDL3-CS/SDL3/FileSystem.cs
    startLine: 152
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Rename a file or directory.
  remarks: >-
    If the file at newpath already exists, it will replaced.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool RenamePath(string oldpath, string newpath)
    parameters:
    - id: oldpath
      type: System.String
      description: the old path.
    - id: newpath
      type: System.String
      description: the new path.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function RenamePath(oldpath As String, newpath As String) As Boolean
  overload: SharpSDL3.Sdl.RenamePath*
  nameWithType.vb: Sdl.RenamePath(String, String)
  fullName.vb: SharpSDL3.Sdl.RenamePath(String, String)
  name.vb: RenamePath(String, String)
- uid: SharpSDL3.Sdl.AddGamepadMapping(System.String)
  commentId: M:SharpSDL3.Sdl.AddGamepadMapping(System.String)
  id: AddGamepadMapping(System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: AddGamepadMapping(string)
  nameWithType: Sdl.AddGamepadMapping(string)
  fullName: SharpSDL3.Sdl.AddGamepadMapping(string)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: AddGamepadMapping
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 31
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Add support for gamepads that SDL is unaware of or change the binding of an existing gamepad.
  remarks: >-
    The mapping string has the format "GUID,name,mapping", where GUID is the

    string value from <xref href="SharpSDL3.Structs.SdlGuid" data-throw-if-not-resolved="false"></xref>ToString(), name is the human

    readable string for the device and mappings are gamepad mappings to

    joystick ones. Under Windows there is a reserved GUID of "xinput" that

    covers all XInput devices. The mapping format for joystick is:

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.AddGamepadMappingsFromFile(System.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.AddGamepadMappingsFromIO(System.IntPtr%2cSharpSDL3.Structs.SdlBool)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetGamepadMapping(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetGamepadMappingForGUID(SharpSDL3.Structs.SdlGuid)" data-throw-if-not-resolved="false"></xref>

    HINT_GAMECONTROLLERCONFIG

    HINT_GAMECONTROLLERCONFIG_FILE

    EVENT_GAMEPAD_ADDED
  example: []
  syntax:
    content: public static int AddGamepadMapping(string mapping)
    parameters:
    - id: mapping
      type: System.String
      description: the mapping string.
    return:
      type: System.Int32
      description: Returns 1 if a new mapping is added, 0 if an existing mapping isupdated, -1 on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function AddGamepadMapping(mapping As String) As Integer
  overload: SharpSDL3.Sdl.AddGamepadMapping*
  nameWithType.vb: Sdl.AddGamepadMapping(String)
  fullName.vb: SharpSDL3.Sdl.AddGamepadMapping(String)
  name.vb: AddGamepadMapping(String)
- uid: SharpSDL3.Sdl.AddGamepadMappingsFromFile(System.String)
  commentId: M:SharpSDL3.Sdl.AddGamepadMappingsFromFile(System.String)
  id: AddGamepadMappingsFromFile(System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: AddGamepadMappingsFromFile(string)
  nameWithType: Sdl.AddGamepadMappingsFromFile(string)
  fullName: SharpSDL3.Sdl.AddGamepadMappingsFromFile(string)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: AddGamepadMappingsFromFile
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 56
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Load a set of gamepad mappings from a file.
  remarks: >-
    You can call this function several times, if needed, to load different

    database files.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.AddGamepadMapping(System.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.AddGamepadMappingsFromIO(System.IntPtr%2cSharpSDL3.Structs.SdlBool)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetGamepadMapping(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetGamepadMappingForGUID(SharpSDL3.Structs.SdlGuid)" data-throw-if-not-resolved="false"></xref>

    HINT_GAMECONTROLLERCONFIG

    HINT_GAMECONTROLLERCONFIG_FILE

    EVENT_GAMEPAD_ADDED
  example: []
  syntax:
    content: public static int AddGamepadMappingsFromFile(string file)
    parameters:
    - id: file
      type: System.String
      description: the mappings file to load.
    return:
      type: System.Int32
      description: Returns the number of mappings added or -1 on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function AddGamepadMappingsFromFile(file As String) As Integer
  overload: SharpSDL3.Sdl.AddGamepadMappingsFromFile*
  nameWithType.vb: Sdl.AddGamepadMappingsFromFile(String)
  fullName.vb: SharpSDL3.Sdl.AddGamepadMappingsFromFile(String)
  name.vb: AddGamepadMappingsFromFile(String)
- uid: SharpSDL3.Sdl.AddGamepadMappingsFromIO(System.IntPtr,SharpSDL3.Structs.SdlBool)
  commentId: M:SharpSDL3.Sdl.AddGamepadMappingsFromIO(System.IntPtr,SharpSDL3.Structs.SdlBool)
  id: AddGamepadMappingsFromIO(System.IntPtr,SharpSDL3.Structs.SdlBool)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: AddGamepadMappingsFromIO(nint, SdlBool)
  nameWithType: Sdl.AddGamepadMappingsFromIO(nint, SdlBool)
  fullName: SharpSDL3.Sdl.AddGamepadMappingsFromIO(nint, SharpSDL3.Structs.SdlBool)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: AddGamepadMappingsFromIO
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 63
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static int AddGamepadMappingsFromIO(nint src, SdlBool closeio)
    parameters:
    - id: src
      type: System.IntPtr
    - id: closeio
      type: SharpSDL3.Structs.SdlBool
    return:
      type: System.Int32
    content.vb: Public Shared Function AddGamepadMappingsFromIO(src As IntPtr, closeio As SdlBool) As Integer
  overload: SharpSDL3.Sdl.AddGamepadMappingsFromIO*
  nameWithType.vb: Sdl.AddGamepadMappingsFromIO(IntPtr, SdlBool)
  fullName.vb: SharpSDL3.Sdl.AddGamepadMappingsFromIO(System.IntPtr, SharpSDL3.Structs.SdlBool)
  name.vb: AddGamepadMappingsFromIO(IntPtr, SdlBool)
- uid: SharpSDL3.Sdl.CloseGamepad(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.CloseGamepad(System.IntPtr)
  id: CloseGamepad(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CloseGamepad(nint)
  nameWithType: Sdl.CloseGamepad(nint)
  fullName: SharpSDL3.Sdl.CloseGamepad(nint)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CloseGamepad
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 78
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Close a gamepad previously opened with SDL_OpenGamepad().
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.OpenGamepad(System.UInt32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void CloseGamepad(nint gamepad)
    parameters:
    - id: gamepad
      type: System.IntPtr
      description: a gamepad identifier previously returned by SDL_OpenGamepad().
    content.vb: Public Shared Sub CloseGamepad(gamepad As IntPtr)
  overload: SharpSDL3.Sdl.CloseGamepad*
  nameWithType.vb: Sdl.CloseGamepad(IntPtr)
  fullName.vb: SharpSDL3.Sdl.CloseGamepad(System.IntPtr)
  name.vb: CloseGamepad(IntPtr)
- uid: SharpSDL3.Sdl.GamepadConnected(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GamepadConnected(System.IntPtr)
  id: GamepadConnected(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GamepadConnected(nint)
  nameWithType: Sdl.GamepadConnected(nint)
  fullName: SharpSDL3.Sdl.GamepadConnected(nint)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GamepadConnected
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 93
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Check if a gamepad has been opened and is currently connected.
  remarks: <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool GamepadConnected(nint gamepad)
    parameters:
    - id: gamepad
      type: System.IntPtr
      description: a gamepad identifier previously returned by SDL_OpenGamepad().
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the gamepad has been opened and is currentlyconnected, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if not.
    content.vb: Public Shared Function GamepadConnected(gamepad As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.GamepadConnected*
  nameWithType.vb: Sdl.GamepadConnected(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GamepadConnected(System.IntPtr)
  name.vb: GamepadConnected(IntPtr)
- uid: SharpSDL3.Sdl.GamepadHasAxis(System.IntPtr,SharpSDL3.Enums.GamepadAxis)
  commentId: M:SharpSDL3.Sdl.GamepadHasAxis(System.IntPtr,SharpSDL3.Enums.GamepadAxis)
  id: GamepadHasAxis(System.IntPtr,SharpSDL3.Enums.GamepadAxis)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GamepadHasAxis(nint, GamepadAxis)
  nameWithType: Sdl.GamepadHasAxis(nint, GamepadAxis)
  fullName: SharpSDL3.Sdl.GamepadHasAxis(nint, SharpSDL3.Enums.GamepadAxis)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GamepadHasAxis
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 113
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Query whether a gamepad has a given axis.
  remarks: >-
    This merely reports whether the gamepad's mapping defined this axis, as

    that is all the information SDL has about the physical device.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GamepadHasButton(System.IntPtr%2cSharpSDL3.Enums.GamepadButton)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetGamepadAxis(System.IntPtr%2cSharpSDL3.Enums.GamepadAxis)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool GamepadHasAxis(nint gamepad, GamepadAxis axis)
    parameters:
    - id: gamepad
      type: System.IntPtr
      description: a gamepad.
    - id: axis
      type: SharpSDL3.Enums.GamepadAxis
      description: an axis enum value (an SDL_GamepadAxis value).
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the gamepad has this axis, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Public Shared Function GamepadHasAxis(gamepad As IntPtr, axis As GamepadAxis) As Boolean
  overload: SharpSDL3.Sdl.GamepadHasAxis*
  nameWithType.vb: Sdl.GamepadHasAxis(IntPtr, GamepadAxis)
  fullName.vb: SharpSDL3.Sdl.GamepadHasAxis(System.IntPtr, SharpSDL3.Enums.GamepadAxis)
  name.vb: GamepadHasAxis(IntPtr, GamepadAxis)
- uid: SharpSDL3.Sdl.GamepadHasButton(System.IntPtr,SharpSDL3.Enums.GamepadButton)
  commentId: M:SharpSDL3.Sdl.GamepadHasButton(System.IntPtr,SharpSDL3.Enums.GamepadButton)
  id: GamepadHasButton(System.IntPtr,SharpSDL3.Enums.GamepadButton)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GamepadHasButton(nint, GamepadButton)
  nameWithType: Sdl.GamepadHasButton(nint, GamepadButton)
  fullName: SharpSDL3.Sdl.GamepadHasButton(nint, SharpSDL3.Enums.GamepadButton)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GamepadHasButton
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 135
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Query whether a gamepad has a given button.
  remarks: >-
    This merely reports whether the gamepad's mapping defined this button, as

    that is all the information SDL has about the physical device.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GamepadHasAxis(System.IntPtr%2cSharpSDL3.Enums.GamepadAxis)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool GamepadHasButton(nint gamepad, GamepadButton button)
    parameters:
    - id: gamepad
      type: System.IntPtr
      description: a gamepad.
    - id: button
      type: SharpSDL3.Enums.GamepadButton
      description: a button enum value (an SDL_GamepadButton value).
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the gamepad has this button, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Public Shared Function GamepadHasButton(gamepad As IntPtr, button As GamepadButton) As Boolean
  overload: SharpSDL3.Sdl.GamepadHasButton*
  nameWithType.vb: Sdl.GamepadHasButton(IntPtr, GamepadButton)
  fullName.vb: SharpSDL3.Sdl.GamepadHasButton(System.IntPtr, SharpSDL3.Enums.GamepadButton)
  name.vb: GamepadHasButton(IntPtr, GamepadButton)
- uid: SharpSDL3.Sdl.GamepadHasSensor(System.IntPtr,SharpSDL3.Enums.SensorType)
  commentId: M:SharpSDL3.Sdl.GamepadHasSensor(System.IntPtr,SharpSDL3.Enums.SensorType)
  id: GamepadHasSensor(System.IntPtr,SharpSDL3.Enums.SensorType)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GamepadHasSensor(nint, SensorType)
  nameWithType: Sdl.GamepadHasSensor(nint, SensorType)
  fullName: SharpSDL3.Sdl.GamepadHasSensor(nint, SharpSDL3.Enums.SensorType)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GamepadHasSensor
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 157
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Return whether a gamepad has a particular sensor.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    GetGamepadSensorData

    <xref href="SharpSDL3.Sdl.GetGamepadSensorDataRate(System.IntPtr%2cSharpSDL3.Enums.SensorType)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetGamepadSensorEnabled(System.IntPtr%2cSharpSDL3.Enums.SensorType%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool GamepadHasSensor(nint gamepad, SensorType type)
    parameters:
    - id: gamepad
      type: System.IntPtr
      description: the gamepad to query.
    - id: type
      type: SharpSDL3.Enums.SensorType
      description: the type of sensor to query.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the sensor exists, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Public Shared Function GamepadHasSensor(gamepad As IntPtr, type As SensorType) As Boolean
  overload: SharpSDL3.Sdl.GamepadHasSensor*
  nameWithType.vb: Sdl.GamepadHasSensor(IntPtr, SensorType)
  fullName.vb: SharpSDL3.Sdl.GamepadHasSensor(System.IntPtr, SharpSDL3.Enums.SensorType)
  name.vb: GamepadHasSensor(IntPtr, SensorType)
- uid: SharpSDL3.Sdl.GamepadSensorEnabled(System.IntPtr,SharpSDL3.Enums.SensorType)
  commentId: M:SharpSDL3.Sdl.GamepadSensorEnabled(System.IntPtr,SharpSDL3.Enums.SensorType)
  id: GamepadSensorEnabled(System.IntPtr,SharpSDL3.Enums.SensorType)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GamepadSensorEnabled(nint, SensorType)
  nameWithType: Sdl.GamepadSensorEnabled(nint, SensorType)
  fullName: SharpSDL3.Sdl.GamepadSensorEnabled(nint, SharpSDL3.Enums.SensorType)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GamepadSensorEnabled
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 177
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Query whether sensor data reporting is enabled for a gamepad.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetGamepadSensorEnabled(System.IntPtr%2cSharpSDL3.Enums.SensorType%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool GamepadSensorEnabled(nint gamepad, SensorType type)
    parameters:
    - id: gamepad
      type: System.IntPtr
      description: the gamepad to query.
    - id: type
      type: SharpSDL3.Enums.SensorType
      description: the type of sensor to query.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the sensor is enabled, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Public Shared Function GamepadSensorEnabled(gamepad As IntPtr, type As SensorType) As Boolean
  overload: SharpSDL3.Sdl.GamepadSensorEnabled*
  nameWithType.vb: Sdl.GamepadSensorEnabled(IntPtr, SensorType)
  fullName.vb: SharpSDL3.Sdl.GamepadSensorEnabled(System.IntPtr, SharpSDL3.Enums.SensorType)
  name.vb: GamepadSensorEnabled(IntPtr, SensorType)
- uid: SharpSDL3.Sdl.GetGamepadAppleSFSymbolsNameForAxis(System.IntPtr,SharpSDL3.Enums.GamepadAxis)
  commentId: M:SharpSDL3.Sdl.GetGamepadAppleSFSymbolsNameForAxis(System.IntPtr,SharpSDL3.Enums.GamepadAxis)
  id: GetGamepadAppleSFSymbolsNameForAxis(System.IntPtr,SharpSDL3.Enums.GamepadAxis)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetGamepadAppleSFSymbolsNameForAxis(nint, GamepadAxis)
  nameWithType: Sdl.GetGamepadAppleSFSymbolsNameForAxis(nint, GamepadAxis)
  fullName: SharpSDL3.Sdl.GetGamepadAppleSFSymbolsNameForAxis(nint, SharpSDL3.Enums.GamepadAxis)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetGamepadAppleSFSymbolsNameForAxis
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 197
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Return the sfSymbolsName for a given axis on a gamepad on Apple platforms.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetGamepadAppleSFSymbolsNameForButton(System.IntPtr%2cSharpSDL3.Enums.GamepadButton)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static string GetGamepadAppleSFSymbolsNameForAxis(nint gamepad, GamepadAxis axis)
    parameters:
    - id: gamepad
      type: System.IntPtr
      description: the gamepad to query.
    - id: axis
      type: SharpSDL3.Enums.GamepadAxis
      description: an axis on the gamepad.
    return:
      type: System.String
      description: Returns the sfSymbolsName or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if the name can't befound.
    content.vb: Public Shared Function GetGamepadAppleSFSymbolsNameForAxis(gamepad As IntPtr, axis As GamepadAxis) As String
  overload: SharpSDL3.Sdl.GetGamepadAppleSFSymbolsNameForAxis*
  nameWithType.vb: Sdl.GetGamepadAppleSFSymbolsNameForAxis(IntPtr, GamepadAxis)
  fullName.vb: SharpSDL3.Sdl.GetGamepadAppleSFSymbolsNameForAxis(System.IntPtr, SharpSDL3.Enums.GamepadAxis)
  name.vb: GetGamepadAppleSFSymbolsNameForAxis(IntPtr, GamepadAxis)
- uid: SharpSDL3.Sdl.GetGamepadAppleSFSymbolsNameForButton(System.IntPtr,SharpSDL3.Enums.GamepadButton)
  commentId: M:SharpSDL3.Sdl.GetGamepadAppleSFSymbolsNameForButton(System.IntPtr,SharpSDL3.Enums.GamepadButton)
  id: GetGamepadAppleSFSymbolsNameForButton(System.IntPtr,SharpSDL3.Enums.GamepadButton)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetGamepadAppleSFSymbolsNameForButton(nint, GamepadButton)
  nameWithType: Sdl.GetGamepadAppleSFSymbolsNameForButton(nint, GamepadButton)
  fullName: SharpSDL3.Sdl.GetGamepadAppleSFSymbolsNameForButton(nint, SharpSDL3.Enums.GamepadButton)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetGamepadAppleSFSymbolsNameForButton
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 217
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Return the sfSymbolsName for a given button on a gamepad on Apple platforms.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetGamepadAppleSFSymbolsNameForAxis(System.IntPtr%2cSharpSDL3.Enums.GamepadAxis)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static string GetGamepadAppleSFSymbolsNameForButton(nint gamepad, GamepadButton button)
    parameters:
    - id: gamepad
      type: System.IntPtr
      description: the gamepad to query.
    - id: button
      type: SharpSDL3.Enums.GamepadButton
      description: a button on the gamepad.
    return:
      type: System.String
      description: Returns the sfSymbolsName or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if the name can't befound.
    content.vb: Public Shared Function GetGamepadAppleSFSymbolsNameForButton(gamepad As IntPtr, button As GamepadButton) As String
  overload: SharpSDL3.Sdl.GetGamepadAppleSFSymbolsNameForButton*
  nameWithType.vb: Sdl.GetGamepadAppleSFSymbolsNameForButton(IntPtr, GamepadButton)
  fullName.vb: SharpSDL3.Sdl.GetGamepadAppleSFSymbolsNameForButton(System.IntPtr, SharpSDL3.Enums.GamepadButton)
  name.vb: GetGamepadAppleSFSymbolsNameForButton(IntPtr, GamepadButton)
- uid: SharpSDL3.Sdl.GetGamepadAxis(System.IntPtr,SharpSDL3.Enums.GamepadAxis)
  commentId: M:SharpSDL3.Sdl.GetGamepadAxis(System.IntPtr,SharpSDL3.Enums.GamepadAxis)
  id: GetGamepadAxis(System.IntPtr,SharpSDL3.Enums.GamepadAxis)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetGamepadAxis(nint, GamepadAxis)
  nameWithType: Sdl.GetGamepadAxis(nint, GamepadAxis)
  fullName: SharpSDL3.Sdl.GetGamepadAxis(nint, SharpSDL3.Enums.GamepadAxis)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetGamepadAxis
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 239
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the current state of an axis control on a gamepad.
  remarks: >-
    The axis indices start at index 0.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GamepadHasAxis(System.IntPtr%2cSharpSDL3.Enums.GamepadAxis)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetGamepadButton(System.IntPtr%2cSharpSDL3.Enums.GamepadButton)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static short GetGamepadAxis(nint gamepad, GamepadAxis axis)
    parameters:
    - id: gamepad
      type: System.IntPtr
      description: a gamepad.
    - id: axis
      type: SharpSDL3.Enums.GamepadAxis
      description: an axis index (one of the SDL_GamepadAxis values).
    return:
      type: System.Int16
      description: Returns axis state.
    content.vb: Public Shared Function GetGamepadAxis(gamepad As IntPtr, axis As GamepadAxis) As Short
  overload: SharpSDL3.Sdl.GetGamepadAxis*
  nameWithType.vb: Sdl.GetGamepadAxis(IntPtr, GamepadAxis)
  fullName.vb: SharpSDL3.Sdl.GetGamepadAxis(System.IntPtr, SharpSDL3.Enums.GamepadAxis)
  name.vb: GetGamepadAxis(IntPtr, GamepadAxis)
- uid: SharpSDL3.Sdl.GetGamepadAxisFromString(System.String)
  commentId: M:SharpSDL3.Sdl.GetGamepadAxisFromString(System.String)
  id: GetGamepadAxisFromString(System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetGamepadAxisFromString(string)
  nameWithType: Sdl.GetGamepadAxisFromString(string)
  fullName: SharpSDL3.Sdl.GetGamepadAxisFromString(string)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetGamepadAxisFromString
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 263
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Convert a string into SDL_GamepadAxis enum.
  remarks: >-
    This function is called internally to translate SDL_Gamepad

    mapping strings for the underlying joystick device into the consistent

    SDL_Gamepad mapping. You do not normally need to call this

    function unless you are parsing SDL_Gamepad mappings in your

    own code.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetGamepadStringForAxis(SharpSDL3.Enums.GamepadAxis)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static GamepadAxis GetGamepadAxisFromString(string str)
    parameters:
    - id: str
      type: System.String
      description: string representing a SDL_Gamepad axis.
    return:
      type: SharpSDL3.Enums.GamepadAxis
      description: Returns theSDL_GamepadAxis enum corresponding to the input string,  SDL_GAMEPAD_AXIS_INVALID if no match wasfound.
    content.vb: Public Shared Function GetGamepadAxisFromString(str As String) As GamepadAxis
  overload: SharpSDL3.Sdl.GetGamepadAxisFromString*
  nameWithType.vb: Sdl.GetGamepadAxisFromString(String)
  fullName.vb: SharpSDL3.Sdl.GetGamepadAxisFromString(String)
  name.vb: GetGamepadAxisFromString(String)
- uid: SharpSDL3.Sdl.GetGamepadButton(System.IntPtr,SharpSDL3.Enums.GamepadButton)
  commentId: M:SharpSDL3.Sdl.GetGamepadButton(System.IntPtr,SharpSDL3.Enums.GamepadButton)
  id: GetGamepadButton(System.IntPtr,SharpSDL3.Enums.GamepadButton)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetGamepadButton(nint, GamepadButton)
  nameWithType: Sdl.GetGamepadButton(nint, GamepadButton)
  fullName: SharpSDL3.Sdl.GetGamepadButton(nint, SharpSDL3.Enums.GamepadButton)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetGamepadButton
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 281
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the current state of a button on a gamepad.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GamepadHasButton(System.IntPtr%2cSharpSDL3.Enums.GamepadButton)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetGamepadAxis(System.IntPtr%2cSharpSDL3.Enums.GamepadAxis)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool GetGamepadButton(nint gamepad, GamepadButton button)
    parameters:
    - id: gamepad
      type: System.IntPtr
      description: a gamepad.
    - id: button
      type: SharpSDL3.Enums.GamepadButton
      description: a button index (one of the SDL_GamepadButton values).
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the button is pressed, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Public Shared Function GetGamepadButton(gamepad As IntPtr, button As GamepadButton) As Boolean
  overload: SharpSDL3.Sdl.GetGamepadButton*
  nameWithType.vb: Sdl.GetGamepadButton(IntPtr, GamepadButton)
  fullName.vb: SharpSDL3.Sdl.GetGamepadButton(System.IntPtr, SharpSDL3.Enums.GamepadButton)
  name.vb: GetGamepadButton(IntPtr, GamepadButton)
- uid: SharpSDL3.Sdl.GetGamepadButtonFromString(System.String)
  commentId: M:SharpSDL3.Sdl.GetGamepadButtonFromString(System.String)
  id: GetGamepadButtonFromString(System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetGamepadButtonFromString(string)
  nameWithType: Sdl.GetGamepadButtonFromString(string)
  fullName: SharpSDL3.Sdl.GetGamepadButtonFromString(string)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetGamepadButtonFromString
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 305
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Convert a string into an SDL_GamepadButton enum.
  remarks: >-
    This function is called internally to translate SDL_Gamepad

    mapping strings for the underlying joystick device into the consistent

    SDL_Gamepad mapping. You do not normally need to call this

    function unless you are parsing SDL_Gamepad mappings in your

    own code.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetGamepadStringForButton(SharpSDL3.Enums.GamepadButton)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static GamepadButton GetGamepadButtonFromString(string str)
    parameters:
    - id: str
      type: System.String
      description: string representing a SDL_Gamepad axis.
    return:
      type: SharpSDL3.Enums.GamepadButton
      description: Returns theSDL_GamepadButton enum corresponding to the inputstring, or SDL_GAMEPAD_BUTTON_INVALID if nomatch was found.
    content.vb: Public Shared Function GetGamepadButtonFromString(str As String) As GamepadButton
  overload: SharpSDL3.Sdl.GetGamepadButtonFromString*
  nameWithType.vb: Sdl.GetGamepadButtonFromString(String)
  fullName.vb: SharpSDL3.Sdl.GetGamepadButtonFromString(String)
  name.vb: GetGamepadButtonFromString(String)
- uid: SharpSDL3.Sdl.GetGamepadButtonLabel(System.IntPtr,SharpSDL3.Enums.GamepadButton)
  commentId: M:SharpSDL3.Sdl.GetGamepadButtonLabel(System.IntPtr,SharpSDL3.Enums.GamepadButton)
  id: GetGamepadButtonLabel(System.IntPtr,SharpSDL3.Enums.GamepadButton)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetGamepadButtonLabel(nint, GamepadButton)
  nameWithType: Sdl.GetGamepadButtonLabel(nint, GamepadButton)
  fullName: SharpSDL3.Sdl.GetGamepadButtonLabel(nint, SharpSDL3.Enums.GamepadButton)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetGamepadButtonLabel
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 322
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the label of a button on a gamepad.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetGamepadButtonLabelForType(SharpSDL3.Enums.GamepadType%2cSharpSDL3.Enums.GamepadButton)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static GamepadButtonLabel GetGamepadButtonLabel(nint gamepad, GamepadButton button)
    parameters:
    - id: gamepad
      type: System.IntPtr
      description: a gamepad.
    - id: button
      type: SharpSDL3.Enums.GamepadButton
      description: a button index (one of the SDL_GamepadButton values).
    return:
      type: SharpSDL3.Enums.GamepadButtonLabel
      description: Returns theSDL_GamepadButtonLabel enum corresponding to thebutton label.
    content.vb: Public Shared Function GetGamepadButtonLabel(gamepad As IntPtr, button As GamepadButton) As GamepadButtonLabel
  overload: SharpSDL3.Sdl.GetGamepadButtonLabel*
  nameWithType.vb: Sdl.GetGamepadButtonLabel(IntPtr, GamepadButton)
  fullName.vb: SharpSDL3.Sdl.GetGamepadButtonLabel(System.IntPtr, SharpSDL3.Enums.GamepadButton)
  name.vb: GetGamepadButtonLabel(IntPtr, GamepadButton)
- uid: SharpSDL3.Sdl.GetGamepadButtonLabelForType(SharpSDL3.Enums.GamepadType,SharpSDL3.Enums.GamepadButton)
  commentId: M:SharpSDL3.Sdl.GetGamepadButtonLabelForType(SharpSDL3.Enums.GamepadType,SharpSDL3.Enums.GamepadButton)
  id: GetGamepadButtonLabelForType(SharpSDL3.Enums.GamepadType,SharpSDL3.Enums.GamepadButton)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetGamepadButtonLabelForType(GamepadType, GamepadButton)
  nameWithType: Sdl.GetGamepadButtonLabelForType(GamepadType, GamepadButton)
  fullName: SharpSDL3.Sdl.GetGamepadButtonLabelForType(SharpSDL3.Enums.GamepadType, SharpSDL3.Enums.GamepadButton)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetGamepadButtonLabelForType
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 342
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the label of a button on a gamepad.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetGamepadButtonLabel(System.IntPtr%2cSharpSDL3.Enums.GamepadButton)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static GamepadButtonLabel GetGamepadButtonLabelForType(GamepadType type, GamepadButton button)
    parameters:
    - id: type
      type: SharpSDL3.Enums.GamepadType
      description: the type of gamepad to check.
    - id: button
      type: SharpSDL3.Enums.GamepadButton
      description: a button index (one of the SDL_GamepadButton values).
    return:
      type: SharpSDL3.Enums.GamepadButtonLabel
      description: Returns theSDL_GamepadButtonLabel enum corresponding to thebutton label.
    content.vb: Public Shared Function GetGamepadButtonLabelForType(type As GamepadType, button As GamepadButton) As GamepadButtonLabel
  overload: SharpSDL3.Sdl.GetGamepadButtonLabelForType*
- uid: SharpSDL3.Sdl.GetGamepadConnectionState(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetGamepadConnectionState(System.IntPtr)
  id: GetGamepadConnectionState(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetGamepadConnectionState(nint)
  nameWithType: Sdl.GetGamepadConnectionState(nint)
  fullName: SharpSDL3.Sdl.GetGamepadConnectionState(nint)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetGamepadConnectionState
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 360
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the connection state of a gamepad.
  remarks: <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static JoystickConnectionState GetGamepadConnectionState(nint gamepad)
    parameters:
    - id: gamepad
      type: System.IntPtr
      description: the gamepad object to query.
    return:
      type: SharpSDL3.Enums.JoystickConnectionState
      description: Returns theconnection state on success orSDL_JOYSTICK_CONNECTION_INVALID on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetGamepadConnectionState(gamepad As IntPtr) As JoystickConnectionState
  overload: SharpSDL3.Sdl.GetGamepadConnectionState*
  nameWithType.vb: Sdl.GetGamepadConnectionState(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetGamepadConnectionState(System.IntPtr)
  name.vb: GetGamepadConnectionState(IntPtr)
- uid: SharpSDL3.Sdl.GetGamepadFirmwareVersion(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetGamepadFirmwareVersion(System.IntPtr)
  id: GetGamepadFirmwareVersion(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetGamepadFirmwareVersion(nint)
  nameWithType: Sdl.GetGamepadFirmwareVersion(nint)
  fullName: SharpSDL3.Sdl.GetGamepadFirmwareVersion(nint)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetGamepadFirmwareVersion
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 376
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the firmware version of an opened gamepad, if available.
  remarks: >-
    If the firmware version isn't available this function returns 0.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static ushort GetGamepadFirmwareVersion(nint gamepad)
    parameters:
    - id: gamepad
      type: System.IntPtr
      description: the gamepad object to query.
    return:
      type: System.UInt16
      description: Returns the gamepad firmware version, or zero ifunavailable.
    content.vb: Public Shared Function GetGamepadFirmwareVersion(gamepad As IntPtr) As UShort
  overload: SharpSDL3.Sdl.GetGamepadFirmwareVersion*
  nameWithType.vb: Sdl.GetGamepadFirmwareVersion(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetGamepadFirmwareVersion(System.IntPtr)
  name.vb: GetGamepadFirmwareVersion(IntPtr)
- uid: SharpSDL3.Sdl.GetGamepadFromID(System.UInt32)
  commentId: M:SharpSDL3.Sdl.GetGamepadFromID(System.UInt32)
  id: GetGamepadFromID(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetGamepadFromID(uint)
  nameWithType: Sdl.GetGamepadFromID(uint)
  fullName: SharpSDL3.Sdl.GetGamepadFromID(uint)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetGamepadFromID
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 391
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the SDL_Gamepad associated with a joystick instance ID, if it has been opened.
  remarks: <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static nint GetGamepadFromID(uint instanceId)
    parameters:
    - id: instanceId
      type: System.UInt32
    return:
      type: System.IntPtr
      description: (SDL_Gamepad *) Returns an SDL_Gamepad on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure or if it hasn't been opened yet; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetGamepadFromID(instanceId As UInteger) As IntPtr
  overload: SharpSDL3.Sdl.GetGamepadFromID*
  nameWithType.vb: Sdl.GetGamepadFromID(UInteger)
  fullName.vb: SharpSDL3.Sdl.GetGamepadFromID(UInteger)
  name.vb: GetGamepadFromID(UInteger)
- uid: SharpSDL3.Sdl.GetGamepadFromPlayerIndex(System.Int32)
  commentId: M:SharpSDL3.Sdl.GetGamepadFromPlayerIndex(System.Int32)
  id: GetGamepadFromPlayerIndex(System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetGamepadFromPlayerIndex(int)
  nameWithType: Sdl.GetGamepadFromPlayerIndex(int)
  fullName: SharpSDL3.Sdl.GetGamepadFromPlayerIndex(int)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetGamepadFromPlayerIndex
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 408
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the SDL_Gamepad associated with a player index.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetGamepadPlayerIndex(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetGamepadPlayerIndex(System.IntPtr%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint GetGamepadFromPlayerIndex(int playerIndex)
    parameters:
    - id: playerIndex
      type: System.Int32
    return:
      type: System.IntPtr
      description: (SDL_Gamepad *) Returns the SDL_Gamepadassociated with a player index.
    content.vb: Public Shared Function GetGamepadFromPlayerIndex(playerIndex As Integer) As IntPtr
  overload: SharpSDL3.Sdl.GetGamepadFromPlayerIndex*
  nameWithType.vb: Sdl.GetGamepadFromPlayerIndex(Integer)
  fullName.vb: SharpSDL3.Sdl.GetGamepadFromPlayerIndex(Integer)
  name.vb: GetGamepadFromPlayerIndex(Integer)
- uid: SharpSDL3.Sdl.GetGamepadGUIDForID(System.UInt32)
  commentId: M:SharpSDL3.Sdl.GetGamepadGUIDForID(System.UInt32)
  id: GetGamepadGUIDForID(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetGamepadGUIDForID(uint)
  nameWithType: Sdl.GetGamepadGUIDForID(uint)
  fullName: SharpSDL3.Sdl.GetGamepadGUIDForID(uint)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetGamepadGUIDForID
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 426
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the implementation-dependent GUID of a gamepad.
  remarks: >-
    This can be called before any gamepads are opened.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    GUIDToString

    GetGamepads
  example: []
  syntax:
    content: public static SdlGuid GetGamepadGUIDForID(uint instanceId)
    parameters:
    - id: instanceId
      type: System.UInt32
    return:
      type: SharpSDL3.Structs.SdlGuid
      description: Returns the GUID of the selected gamepad. If calledon an invalid index, this function returns a zero GUID.
    content.vb: Public Shared Function GetGamepadGUIDForID(instanceId As UInteger) As SdlGuid
  overload: SharpSDL3.Sdl.GetGamepadGUIDForID*
  nameWithType.vb: Sdl.GetGamepadGUIDForID(UInteger)
  fullName.vb: SharpSDL3.Sdl.GetGamepadGUIDForID(UInteger)
  name.vb: GetGamepadGUIDForID(UInteger)
- uid: SharpSDL3.Sdl.GetGamepadID(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetGamepadID(System.IntPtr)
  id: GetGamepadID(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetGamepadID(nint)
  nameWithType: Sdl.GetGamepadID(nint)
  fullName: SharpSDL3.Sdl.GetGamepadID(nint)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetGamepadID
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 441
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the instance ID of an opened gamepad.
  remarks: <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static uint GetGamepadID(nint gamepad)
    parameters:
    - id: gamepad
      type: System.IntPtr
      description: a gamepad identifier previously returned by SDL_OpenGamepad().
    return:
      type: System.UInt32
      description: Returns the instance ID of the specifiedgamepad on success or 0 on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetGamepadID(gamepad As IntPtr) As UInteger
  overload: SharpSDL3.Sdl.GetGamepadID*
  nameWithType.vb: Sdl.GetGamepadID(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetGamepadID(System.IntPtr)
  name.vb: GetGamepadID(IntPtr)
- uid: SharpSDL3.Sdl.GetGamepadJoystick(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetGamepadJoystick(System.IntPtr)
  id: GetGamepadJoystick(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetGamepadJoystick(nint)
  nameWithType: Sdl.GetGamepadJoystick(nint)
  fullName: SharpSDL3.Sdl.GetGamepadJoystick(nint)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetGamepadJoystick
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 461
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the underlying joystick from a gamepad.
  remarks: >-
    This function will give you a SDL_Joystick object, which

    allows you to use the SDL_Joystick functions with a

    SDL_Gamepad object. This would be useful for getting a

    joystick's position at any given time, even if it hasn't moved (moving it

    would produce an event, which would have the axis' value).

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static nint GetGamepadJoystick(nint gamepad)
    parameters:
    - id: gamepad
      type: System.IntPtr
      description: the gamepad object that you want to get a joystick from.
    return:
      type: System.IntPtr
      description: (SDL_Joystick *) Returns an SDL_Joystickobject, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetGamepadJoystick(gamepad As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.GetGamepadJoystick*
  nameWithType.vb: Sdl.GetGamepadJoystick(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetGamepadJoystick(System.IntPtr)
  name.vb: GetGamepadJoystick(IntPtr)
- uid: SharpSDL3.Sdl.GetGamepadMapping(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetGamepadMapping(System.IntPtr)
  id: GetGamepadMapping(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetGamepadMapping(nint)
  nameWithType: Sdl.GetGamepadMapping(nint)
  fullName: SharpSDL3.Sdl.GetGamepadMapping(nint)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetGamepadMapping
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 482
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the current mapping of a gamepad.
  remarks: >-
    Details about mappings are discussed with

    SDL_AddGamepadMapping().

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.AddGamepadMapping(System.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetGamepadMappingForID(System.UInt32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetGamepadMappingForGUID(SharpSDL3.Structs.SdlGuid)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetGamepadMapping(System.UInt32%2cSystem.String)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static string GetGamepadMapping(nint gamepad)
    parameters:
    - id: gamepad
      type: System.IntPtr
      description: the gamepad you want to get the current mapping for.
    return:
      type: System.String
      description: (char *) Returns a string that has the gamepad's mapping or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if nomapping is available; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information. This should be freed with <xref href="SharpSDL3.Sdl.Free(System.IntPtr)" data-throw-if-not-resolved="false"></xref> when it is no longer needed.
    content.vb: Public Shared Function GetGamepadMapping(gamepad As IntPtr) As String
  overload: SharpSDL3.Sdl.GetGamepadMapping*
  nameWithType.vb: Sdl.GetGamepadMapping(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetGamepadMapping(System.IntPtr)
  name.vb: GetGamepadMapping(IntPtr)
- uid: SharpSDL3.Sdl.GetGamepadMappingForGUID(SharpSDL3.Structs.SdlGuid)
  commentId: M:SharpSDL3.Sdl.GetGamepadMappingForGUID(SharpSDL3.Structs.SdlGuid)
  id: GetGamepadMappingForGUID(SharpSDL3.Structs.SdlGuid)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetGamepadMappingForGUID(SdlGuid)
  nameWithType: Sdl.GetGamepadMappingForGUID(SdlGuid)
  fullName: SharpSDL3.Sdl.GetGamepadMappingForGUID(SharpSDL3.Structs.SdlGuid)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetGamepadMappingForGUID
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 499
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the gamepad mapping string for a given GUID.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    GetJoystickGUIDForID

    GetJoystickGUID
  example: []
  syntax:
    content: public static string GetGamepadMappingForGUID(SdlGuid guid)
    parameters:
    - id: guid
      type: SharpSDL3.Structs.SdlGuid
      description: a structure containing the GUID for which a mapping is desired.
    return:
      type: System.String
      description: (char *) Returns a mapping string or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information. This should be freedwith <xref href="SharpSDL3.Sdl.Free(System.IntPtr)" data-throw-if-not-resolved="false"></xref> when it is no longer needed.
    content.vb: Public Shared Function GetGamepadMappingForGUID(guid As SdlGuid) As String
  overload: SharpSDL3.Sdl.GetGamepadMappingForGUID*
- uid: SharpSDL3.Sdl.GetGamepadMappingForID(System.UInt32)
  commentId: M:SharpSDL3.Sdl.GetGamepadMappingForID(System.UInt32)
  id: GetGamepadMappingForID(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetGamepadMappingForID(uint)
  nameWithType: Sdl.GetGamepadMappingForID(uint)
  fullName: SharpSDL3.Sdl.GetGamepadMappingForID(uint)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetGamepadMappingForID
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 523
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the mapping of a gamepad.
  remarks: >-
    This can be called before any gamepads are opened.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    GetGamepads

    <xref href="SharpSDL3.Sdl.GetGamepadMapping(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static string GetGamepadMappingForID(uint instanceId)
    parameters:
    - id: instanceId
      type: System.UInt32
    return:
      type: System.String
      description: (char *) Returns the mapping string. Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if no mapping isavailable. This should be freed with <xref href="SharpSDL3.Sdl.Free(System.IntPtr)" data-throw-if-not-resolved="false"></xref> when it is no longer needed.
    content.vb: Public Shared Function GetGamepadMappingForID(instanceId As UInteger) As String
  overload: SharpSDL3.Sdl.GetGamepadMappingForID*
  nameWithType.vb: Sdl.GetGamepadMappingForID(UInteger)
  fullName.vb: SharpSDL3.Sdl.GetGamepadMappingForID(UInteger)
  name.vb: GetGamepadMappingForID(UInteger)
- uid: SharpSDL3.Sdl.GetGamepadName(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetGamepadName(System.IntPtr)
  id: GetGamepadName(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetGamepadName(nint)
  nameWithType: Sdl.GetGamepadName(nint)
  fullName: SharpSDL3.Sdl.GetGamepadName(nint)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetGamepadName
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 539
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the implementation-dependent name for an opened gamepad.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetGamepadNameForID(System.UInt32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static string GetGamepadName(nint gamepad)
    parameters:
    - id: gamepad
      type: System.IntPtr
      description: a gamepad identifier previously returned by SDL_OpenGamepad().
    return:
      type: System.String
      description: Returns the implementation dependent name for the gamepad,  <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if there is no name or the identifier passed is invalid.
    content.vb: Public Shared Function GetGamepadName(gamepad As IntPtr) As String
  overload: SharpSDL3.Sdl.GetGamepadName*
  nameWithType.vb: Sdl.GetGamepadName(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetGamepadName(System.IntPtr)
  name.vb: GetGamepadName(IntPtr)
- uid: SharpSDL3.Sdl.GetGamepadNameForID(System.UInt32)
  commentId: M:SharpSDL3.Sdl.GetGamepadNameForID(System.UInt32)
  id: GetGamepadNameForID(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetGamepadNameForID(uint)
  nameWithType: Sdl.GetGamepadNameForID(uint)
  fullName: SharpSDL3.Sdl.GetGamepadNameForID(uint)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetGamepadNameForID
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 557
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the implementation dependent name of a gamepad.
  remarks: >-
    This can be called before any gamepads are opened.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetGamepadName(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    GetGamepads
  example: []
  syntax:
    content: public static string GetGamepadNameForID(uint instanceId)
    parameters:
    - id: instanceId
      type: System.UInt32
    return:
      type: System.String
      description: Returns the name of the selected gamepad. If no name can befound, this function returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetGamepadNameForID(instanceId As UInteger) As String
  overload: SharpSDL3.Sdl.GetGamepadNameForID*
  nameWithType.vb: Sdl.GetGamepadNameForID(UInteger)
  fullName.vb: SharpSDL3.Sdl.GetGamepadNameForID(UInteger)
  name.vb: GetGamepadNameForID(UInteger)
- uid: SharpSDL3.Sdl.GetGamepadPath(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetGamepadPath(System.IntPtr)
  id: GetGamepadPath(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetGamepadPath(nint)
  nameWithType: Sdl.GetGamepadPath(nint)
  fullName: SharpSDL3.Sdl.GetGamepadPath(nint)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetGamepadPath
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 573
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the implementation-dependent path for an opened gamepad.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetGamepadPathForID(System.UInt32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static string GetGamepadPath(nint gamepad)
    parameters:
    - id: gamepad
      type: System.IntPtr
      description: a gamepad identifier previously returned by SDL_OpenGamepad().
    return:
      type: System.String
      description: Returns the implementation dependent path for the gamepad,  <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if there is no path or the identifier passed is invalid.
    content.vb: Public Shared Function GetGamepadPath(gamepad As IntPtr) As String
  overload: SharpSDL3.Sdl.GetGamepadPath*
  nameWithType.vb: Sdl.GetGamepadPath(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetGamepadPath(System.IntPtr)
  name.vb: GetGamepadPath(IntPtr)
- uid: SharpSDL3.Sdl.GetGamepadPathForID(System.UInt32)
  commentId: M:SharpSDL3.Sdl.GetGamepadPathForID(System.UInt32)
  id: GetGamepadPathForID(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetGamepadPathForID(uint)
  nameWithType: Sdl.GetGamepadPathForID(uint)
  fullName: SharpSDL3.Sdl.GetGamepadPathForID(uint)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetGamepadPathForID
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 591
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the implementation dependent path of a gamepad.
  remarks: >-
    This can be called before any gamepads are opened.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetGamepadPath(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    GetGamepads
  example: []
  syntax:
    content: public static string GetGamepadPathForID(uint instanceId)
    parameters:
    - id: instanceId
      type: System.UInt32
    return:
      type: System.String
      description: Returns the path of the selected gamepad. If no path can befound, this function returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetGamepadPathForID(instanceId As UInteger) As String
  overload: SharpSDL3.Sdl.GetGamepadPathForID*
  nameWithType.vb: Sdl.GetGamepadPathForID(UInteger)
  fullName.vb: SharpSDL3.Sdl.GetGamepadPathForID(UInteger)
  name.vb: GetGamepadPathForID(UInteger)
- uid: SharpSDL3.Sdl.GetGamepadPlayerIndex(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetGamepadPlayerIndex(System.IntPtr)
  id: GetGamepadPlayerIndex(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetGamepadPlayerIndex(nint)
  nameWithType: Sdl.GetGamepadPlayerIndex(nint)
  fullName: SharpSDL3.Sdl.GetGamepadPlayerIndex(nint)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetGamepadPlayerIndex
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 608
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the player index of an opened gamepad.
  remarks: >-
    For XInput gamepads this returns the XInput user index.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetGamepadPlayerIndex(System.IntPtr%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static int GetGamepadPlayerIndex(nint gamepad)
    parameters:
    - id: gamepad
      type: System.IntPtr
      description: the gamepad object to query.
    return:
      type: System.Int32
      description: Returns the player index for gamepad, or -1 if it's not available.
    content.vb: Public Shared Function GetGamepadPlayerIndex(gamepad As IntPtr) As Integer
  overload: SharpSDL3.Sdl.GetGamepadPlayerIndex*
  nameWithType.vb: Sdl.GetGamepadPlayerIndex(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetGamepadPlayerIndex(System.IntPtr)
  name.vb: GetGamepadPlayerIndex(IntPtr)
- uid: SharpSDL3.Sdl.GetGamepadPlayerIndexForID(System.UInt32)
  commentId: M:SharpSDL3.Sdl.GetGamepadPlayerIndexForID(System.UInt32)
  id: GetGamepadPlayerIndexForID(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetGamepadPlayerIndexForID(uint)
  nameWithType: Sdl.GetGamepadPlayerIndexForID(uint)
  fullName: SharpSDL3.Sdl.GetGamepadPlayerIndexForID(uint)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetGamepadPlayerIndexForID
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 626
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the player index of a gamepad.
  remarks: >-
    This can be called before any gamepads are opened.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetGamepadPlayerIndex(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    GetGamepads
  example: []
  syntax:
    content: public static int GetGamepadPlayerIndexForID(uint instanceId)
    parameters:
    - id: instanceId
      type: System.UInt32
    return:
      type: System.Int32
      description: Returns the player index of a gamepad, or -1 if it's not available.
    content.vb: Public Shared Function GetGamepadPlayerIndexForID(instanceId As UInteger) As Integer
  overload: SharpSDL3.Sdl.GetGamepadPlayerIndexForID*
  nameWithType.vb: Sdl.GetGamepadPlayerIndexForID(UInteger)
  fullName.vb: SharpSDL3.Sdl.GetGamepadPlayerIndexForID(UInteger)
  name.vb: GetGamepadPlayerIndexForID(UInteger)
- uid: SharpSDL3.Sdl.GetGamepadPowerInfo(System.IntPtr,System.Int32@)
  commentId: M:SharpSDL3.Sdl.GetGamepadPowerInfo(System.IntPtr,System.Int32@)
  id: GetGamepadPowerInfo(System.IntPtr,System.Int32@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetGamepadPowerInfo(nint, out int)
  nameWithType: Sdl.GetGamepadPowerInfo(nint, out int)
  fullName: SharpSDL3.Sdl.GetGamepadPowerInfo(nint, out int)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetGamepadPowerInfo
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 647
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the battery state of a gamepad.
  remarks: >-
    You should never take a battery status as absolute truth. Batteries

    (especially failing batteries) are delicate hardware, and the values

    reported here are best estimates based on what that hardware reports. It's

    not uncommon for older batteries to lose stored power much faster than it

    reports, or completely drain when reporting it has 20 percent left, etc.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static PowerState GetGamepadPowerInfo(nint gamepad, out int percent)
    parameters:
    - id: gamepad
      type: System.IntPtr
      description: the gamepad object to query.
    - id: percent
      type: System.Int32
      description: a pointer filled in with the percentage of battery life left, between 0 and 100, or discard to ignore. This will be filled in with -1 we can't determine a value or there is no battery.
    return:
      type: SharpSDL3.Enums.PowerState
      description: Returns the current battery state.
    content.vb: Public Shared Function GetGamepadPowerInfo(gamepad As IntPtr, percent As Integer) As PowerState
  overload: SharpSDL3.Sdl.GetGamepadPowerInfo*
  nameWithType.vb: Sdl.GetGamepadPowerInfo(IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.GetGamepadPowerInfo(System.IntPtr, Integer)
  name.vb: GetGamepadPowerInfo(IntPtr, Integer)
- uid: SharpSDL3.Sdl.GetGamepadProduct(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetGamepadProduct(System.IntPtr)
  id: GetGamepadProduct(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetGamepadProduct(nint)
  nameWithType: Sdl.GetGamepadProduct(nint)
  fullName: SharpSDL3.Sdl.GetGamepadProduct(nint)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetGamepadProduct
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 664
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the USB product ID of an opened gamepad, if available.
  remarks: >-
    If the product ID isn't available this function returns 0.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetGamepadProductForID(System.UInt32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static ushort GetGamepadProduct(nint gamepad)
    parameters:
    - id: gamepad
      type: System.IntPtr
      description: the gamepad object to query.
    return:
      type: System.UInt16
      description: Returns the USB product ID, or zero if unavailable.
    content.vb: Public Shared Function GetGamepadProduct(gamepad As IntPtr) As UShort
  overload: SharpSDL3.Sdl.GetGamepadProduct*
  nameWithType.vb: Sdl.GetGamepadProduct(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetGamepadProduct(System.IntPtr)
  name.vb: GetGamepadProduct(IntPtr)
- uid: SharpSDL3.Sdl.GetGamepadProductForID(System.UInt32)
  commentId: M:SharpSDL3.Sdl.GetGamepadProductForID(System.UInt32)
  id: GetGamepadProductForID(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetGamepadProductForID(uint)
  nameWithType: Sdl.GetGamepadProductForID(uint)
  fullName: SharpSDL3.Sdl.GetGamepadProductForID(uint)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetGamepadProductForID
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 683
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the USB product ID of a gamepad, if available.
  remarks: >-
    This can be called before any gamepads are opened. If the product ID isn't

    available this function returns 0.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetGamepadProduct(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    GetGamepads
  example: []
  syntax:
    content: public static ushort GetGamepadProductForID(uint instanceId)
    parameters:
    - id: instanceId
      type: System.UInt32
    return:
      type: System.UInt16
      description: Returns the USB product ID of the selected gamepad. Ifcalled on an invalid index, this function returns zero.
    content.vb: Public Shared Function GetGamepadProductForID(instanceId As UInteger) As UShort
  overload: SharpSDL3.Sdl.GetGamepadProductForID*
  nameWithType.vb: Sdl.GetGamepadProductForID(UInteger)
  fullName.vb: SharpSDL3.Sdl.GetGamepadProductForID(UInteger)
  name.vb: GetGamepadProductForID(UInteger)
- uid: SharpSDL3.Sdl.GetGamepadProductVersion(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetGamepadProductVersion(System.IntPtr)
  id: GetGamepadProductVersion(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetGamepadProductVersion(nint)
  nameWithType: Sdl.GetGamepadProductVersion(nint)
  fullName: SharpSDL3.Sdl.GetGamepadProductVersion(nint)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetGamepadProductVersion
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 700
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the product version of an opened gamepad, if available.
  remarks: >-
    If the product version isn't available this function returns 0.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetGamepadProductVersionForID(System.UInt32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static ushort GetGamepadProductVersion(nint gamepad)
    parameters:
    - id: gamepad
      type: System.IntPtr
      description: the gamepad object to query.
    return:
      type: System.UInt16
      description: Returns the USB product version, or zero if unavailable.
    content.vb: Public Shared Function GetGamepadProductVersion(gamepad As IntPtr) As UShort
  overload: SharpSDL3.Sdl.GetGamepadProductVersion*
  nameWithType.vb: Sdl.GetGamepadProductVersion(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetGamepadProductVersion(System.IntPtr)
  name.vb: GetGamepadProductVersion(IntPtr)
- uid: SharpSDL3.Sdl.GetGamepadProductVersionForID(System.UInt32)
  commentId: M:SharpSDL3.Sdl.GetGamepadProductVersionForID(System.UInt32)
  id: GetGamepadProductVersionForID(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetGamepadProductVersionForID(uint)
  nameWithType: Sdl.GetGamepadProductVersionForID(uint)
  fullName: SharpSDL3.Sdl.GetGamepadProductVersionForID(uint)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetGamepadProductVersionForID
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 719
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the product version of a gamepad, if available.
  remarks: >-
    This can be called before any gamepads are opened. If the product version

    isn't available this function returns 0.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetGamepadProductVersion(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    GetGamepads
  example: []
  syntax:
    content: public static ushort GetGamepadProductVersionForID(uint instanceId)
    parameters:
    - id: instanceId
      type: System.UInt32
    return:
      type: System.UInt16
      description: Returns the product version of the selected gamepad. Ifcalled on an invalid index, this function returns zero.
    content.vb: Public Shared Function GetGamepadProductVersionForID(instanceId As UInteger) As UShort
  overload: SharpSDL3.Sdl.GetGamepadProductVersionForID*
  nameWithType.vb: Sdl.GetGamepadProductVersionForID(UInteger)
  fullName.vb: SharpSDL3.Sdl.GetGamepadProductVersionForID(UInteger)
  name.vb: GetGamepadProductVersionForID(UInteger)
- uid: SharpSDL3.Sdl.GetGamepadProperties(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetGamepadProperties(System.IntPtr)
  id: GetGamepadProperties(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetGamepadProperties(nint)
  nameWithType: Sdl.GetGamepadProperties(nint)
  fullName: SharpSDL3.Sdl.GetGamepadProperties(nint)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetGamepadProperties
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 735
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the properties associated with an opened gamepad.
  remarks: >-
    These properties are shared with the underlying joystick object.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static uint GetGamepadProperties(nint gamepad)
    parameters:
    - id: gamepad
      type: System.IntPtr
      description: a gamepad identifier previously returned by SDL_OpenGamepad().
    return:
      type: System.UInt32
      description: Returns a valid property ID on success or 0 on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetGamepadProperties(gamepad As IntPtr) As UInteger
  overload: SharpSDL3.Sdl.GetGamepadProperties*
  nameWithType.vb: Sdl.GetGamepadProperties(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetGamepadProperties(System.IntPtr)
  name.vb: GetGamepadProperties(IntPtr)
- uid: SharpSDL3.Sdl.GetGamepadSensorDataRate(System.IntPtr,SharpSDL3.Enums.SensorType)
  commentId: M:SharpSDL3.Sdl.GetGamepadSensorDataRate(System.IntPtr,SharpSDL3.Enums.SensorType)
  id: GetGamepadSensorDataRate(System.IntPtr,SharpSDL3.Enums.SensorType)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetGamepadSensorDataRate(nint, SensorType)
  nameWithType: Sdl.GetGamepadSensorDataRate(nint, SensorType)
  fullName: SharpSDL3.Sdl.GetGamepadSensorDataRate(nint, SharpSDL3.Enums.SensorType)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetGamepadSensorDataRate
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 751
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the data rate (number of events per second) of a gamepad sensor.
  remarks: <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static float GetGamepadSensorDataRate(nint gamepad, SensorType type)
    parameters:
    - id: gamepad
      type: System.IntPtr
      description: the gamepad to query.
    - id: type
      type: SharpSDL3.Enums.SensorType
      description: the type of sensor to query.
    return:
      type: System.Single
      description: Returns the data rate, or 0.0f if the data rate is not available.
    content.vb: Public Shared Function GetGamepadSensorDataRate(gamepad As IntPtr, type As SensorType) As Single
  overload: SharpSDL3.Sdl.GetGamepadSensorDataRate*
  nameWithType.vb: Sdl.GetGamepadSensorDataRate(IntPtr, SensorType)
  fullName.vb: SharpSDL3.Sdl.GetGamepadSensorDataRate(System.IntPtr, SharpSDL3.Enums.SensorType)
  name.vb: GetGamepadSensorDataRate(IntPtr, SensorType)
- uid: SharpSDL3.Sdl.GetGamepadSerial(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetGamepadSerial(System.IntPtr)
  id: GetGamepadSerial(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetGamepadSerial(nint)
  nameWithType: Sdl.GetGamepadSerial(nint)
  fullName: SharpSDL3.Sdl.GetGamepadSerial(nint)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetGamepadSerial
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 770
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the serial number of an opened gamepad, if available.
  remarks: >-
    Returns the serial number of the gamepad, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if it is not available.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static string GetGamepadSerial(nint gamepad)
    parameters:
    - id: gamepad
      type: System.IntPtr
      description: the gamepad object to query.
    return:
      type: System.String
      description: Returns the serial number, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if unavailable.
    content.vb: Public Shared Function GetGamepadSerial(gamepad As IntPtr) As String
  overload: SharpSDL3.Sdl.GetGamepadSerial*
  nameWithType.vb: Sdl.GetGamepadSerial(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetGamepadSerial(System.IntPtr)
  name.vb: GetGamepadSerial(IntPtr)
- uid: SharpSDL3.Sdl.GetGamepadSteamHandle(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetGamepadSteamHandle(System.IntPtr)
  id: GetGamepadSteamHandle(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetGamepadSteamHandle(nint)
  nameWithType: Sdl.GetGamepadSteamHandle(nint)
  fullName: SharpSDL3.Sdl.GetGamepadSteamHandle(nint)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetGamepadSteamHandle
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 787
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the Steam Input handle of an opened gamepad, if available.
  remarks: >-
    Returns an InputHandle_t for the gamepad that can be used with Steam Input

    API: https://partner.steamgames.com/doc/api/ISteamInput

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static ulong GetGamepadSteamHandle(nint gamepad)
    parameters:
    - id: gamepad
      type: System.IntPtr
      description: the gamepad object to query.
    return:
      type: System.UInt64
      description: Returns the gamepad handle, or 0 if unavailable.
    content.vb: Public Shared Function GetGamepadSteamHandle(gamepad As IntPtr) As ULong
  overload: SharpSDL3.Sdl.GetGamepadSteamHandle*
  nameWithType.vb: Sdl.GetGamepadSteamHandle(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetGamepadSteamHandle(System.IntPtr)
  name.vb: GetGamepadSteamHandle(IntPtr)
- uid: SharpSDL3.Sdl.GetGamepadStringForAxis(SharpSDL3.Enums.GamepadAxis)
  commentId: M:SharpSDL3.Sdl.GetGamepadStringForAxis(SharpSDL3.Enums.GamepadAxis)
  id: GetGamepadStringForAxis(SharpSDL3.Enums.GamepadAxis)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetGamepadStringForAxis(GamepadAxis)
  nameWithType: Sdl.GetGamepadStringForAxis(GamepadAxis)
  fullName: SharpSDL3.Sdl.GetGamepadStringForAxis(SharpSDL3.Enums.GamepadAxis)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetGamepadStringForAxis
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 803
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Convert from an SDL_GamepadAxis enum to a string.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetGamepadAxisFromString(System.String)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static string GetGamepadStringForAxis(GamepadAxis axis)
    parameters:
    - id: axis
      type: SharpSDL3.Enums.GamepadAxis
      description: an enum value for a given SDL_GamepadAxis.
    return:
      type: System.String
      description: Returns a string for the given axis, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if an invalidaxis is specified. The string returned is of the format used bySDL_Gamepad mapping strings.
    content.vb: Public Shared Function GetGamepadStringForAxis(axis As GamepadAxis) As String
  overload: SharpSDL3.Sdl.GetGamepadStringForAxis*
- uid: SharpSDL3.Sdl.GetGamepadStringForButton(SharpSDL3.Enums.GamepadButton)
  commentId: M:SharpSDL3.Sdl.GetGamepadStringForButton(SharpSDL3.Enums.GamepadButton)
  id: GetGamepadStringForButton(SharpSDL3.Enums.GamepadButton)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetGamepadStringForButton(GamepadButton)
  nameWithType: Sdl.GetGamepadStringForButton(GamepadButton)
  fullName: SharpSDL3.Sdl.GetGamepadStringForButton(SharpSDL3.Enums.GamepadButton)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetGamepadStringForButton
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 819
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Convert from an SDL_GamepadButton enum to a string.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetGamepadButtonFromString(System.String)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static string GetGamepadStringForButton(GamepadButton button)
    parameters:
    - id: button
      type: SharpSDL3.Enums.GamepadButton
      description: an enum value for a given SDL_GamepadButton.
    return:
      type: System.String
      description: Returns a string for the given button, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if an invalidbutton is specified. The string returned is of the format used bySDL_Gamepad mapping strings.
    content.vb: Public Shared Function GetGamepadStringForButton(button As GamepadButton) As String
  overload: SharpSDL3.Sdl.GetGamepadStringForButton*
- uid: SharpSDL3.Sdl.GetGamepadStringForType(SharpSDL3.Enums.GamepadType)
  commentId: M:SharpSDL3.Sdl.GetGamepadStringForType(SharpSDL3.Enums.GamepadType)
  id: GetGamepadStringForType(SharpSDL3.Enums.GamepadType)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetGamepadStringForType(GamepadType)
  nameWithType: Sdl.GetGamepadStringForType(GamepadType)
  fullName: SharpSDL3.Sdl.GetGamepadStringForType(SharpSDL3.Enums.GamepadType)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetGamepadStringForType
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 835
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Convert from an SDL_GamepadType enum to a string.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetGamepadTypeFromString(System.String)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static string GetGamepadStringForType(GamepadType type)
    parameters:
    - id: type
      type: SharpSDL3.Enums.GamepadType
      description: an enum value for a given SDL_GamepadType.
    return:
      type: System.String
      description: Returns a string for the given type, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if an invalidtype is specified. The string returned is of the format used bySDL_Gamepad mapping strings.
    content.vb: Public Shared Function GetGamepadStringForType(type As GamepadType) As String
  overload: SharpSDL3.Sdl.GetGamepadStringForType*
- uid: SharpSDL3.Sdl.GetGamepadTouchpadFinger(System.IntPtr,System.Int32,System.Int32,System.Boolean@,System.Single@,System.Single@,System.Single@)
  commentId: M:SharpSDL3.Sdl.GetGamepadTouchpadFinger(System.IntPtr,System.Int32,System.Int32,System.Boolean@,System.Single@,System.Single@,System.Single@)
  id: GetGamepadTouchpadFinger(System.IntPtr,System.Int32,System.Int32,System.Boolean@,System.Single@,System.Single@,System.Single@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetGamepadTouchpadFinger(nint, int, int, out bool, out float, out float, out float)
  nameWithType: Sdl.GetGamepadTouchpadFinger(nint, int, int, out bool, out float, out float, out float)
  fullName: SharpSDL3.Sdl.GetGamepadTouchpadFinger(nint, int, int, out bool, out float, out float, out float)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetGamepadTouchpadFinger
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 857
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the current state of a finger on a touchpad on a gamepad.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetNumGamepadTouchpadFingers(System.IntPtr%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool GetGamepadTouchpadFinger(nint gamepad, int touchpad, int finger, out bool down, out float x, out float y, out float pressure)
    parameters:
    - id: gamepad
      type: System.IntPtr
      description: a gamepad.
    - id: touchpad
      type: System.Int32
      description: a touchpad.
    - id: finger
      type: System.Int32
      description: a finger.
    - id: down
      type: System.Boolean
      description: a pointer filled with <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the finger is down, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise, may be discarded.
    - id: x
      type: System.Single
      description: a pointer filled with the x position, normalized 0 to 1, with the origin in the upper left, may be discarded.
    - id: y
      type: System.Single
      description: a pointer filled with the y position, normalized 0 to 1, with the origin in the upper left, may be discarded.
    - id: pressure
      type: System.Single
      description: a pointer filled with pressure value, may be discarded.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetGamepadTouchpadFinger(gamepad As IntPtr, touchpad As Integer, finger As Integer, down As Boolean, x As Single, y As Single, pressure As Single) As Boolean
  overload: SharpSDL3.Sdl.GetGamepadTouchpadFinger*
  nameWithType.vb: Sdl.GetGamepadTouchpadFinger(IntPtr, Integer, Integer, Boolean, Single, Single, Single)
  fullName.vb: SharpSDL3.Sdl.GetGamepadTouchpadFinger(System.IntPtr, Integer, Integer, Boolean, Single, Single, Single)
  name.vb: GetGamepadTouchpadFinger(IntPtr, Integer, Integer, Boolean, Single, Single, Single)
- uid: SharpSDL3.Sdl.GetGamepadType(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetGamepadType(System.IntPtr)
  id: GetGamepadType(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetGamepadType(nint)
  nameWithType: Sdl.GetGamepadType(nint)
  fullName: SharpSDL3.Sdl.GetGamepadType(nint)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetGamepadType
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 876
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the type of an opened gamepad.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetGamepadTypeForID(System.UInt32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static GamepadType GetGamepadType(nint gamepad)
    parameters:
    - id: gamepad
      type: System.IntPtr
      description: the gamepad object to query.
    return:
      type: SharpSDL3.Enums.GamepadType
      description: Returns the gamepad type, orSDL_GAMEPAD_TYPE_UNKNOWN if it's not available.
    content.vb: Public Shared Function GetGamepadType(gamepad As IntPtr) As GamepadType
  overload: SharpSDL3.Sdl.GetGamepadType*
  nameWithType.vb: Sdl.GetGamepadType(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetGamepadType(System.IntPtr)
  name.vb: GetGamepadType(IntPtr)
- uid: SharpSDL3.Sdl.GetGamepadTypeForID(System.UInt32)
  commentId: M:SharpSDL3.Sdl.GetGamepadTypeForID(System.UInt32)
  id: GetGamepadTypeForID(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetGamepadTypeForID(uint)
  nameWithType: Sdl.GetGamepadTypeForID(uint)
  fullName: SharpSDL3.Sdl.GetGamepadTypeForID(uint)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetGamepadTypeForID
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 895
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the type of a gamepad.
  remarks: >-
    This can be called before any gamepads are opened.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetGamepadType(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    GetGamepads

    <xref href="SharpSDL3.Sdl.GetRealGamepadTypeForID(System.UInt32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static GamepadType GetGamepadTypeForID(uint instanceId)
    parameters:
    - id: instanceId
      type: System.UInt32
    return:
      type: SharpSDL3.Enums.GamepadType
      description: Returns the gamepad type.
    content.vb: Public Shared Function GetGamepadTypeForID(instanceId As UInteger) As GamepadType
  overload: SharpSDL3.Sdl.GetGamepadTypeForID*
  nameWithType.vb: Sdl.GetGamepadTypeForID(UInteger)
  fullName.vb: SharpSDL3.Sdl.GetGamepadTypeForID(UInteger)
  name.vb: GetGamepadTypeForID(UInteger)
- uid: SharpSDL3.Sdl.GetGamepadTypeFromString(System.String)
  commentId: M:SharpSDL3.Sdl.GetGamepadTypeFromString(System.String)
  id: GetGamepadTypeFromString(System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetGamepadTypeFromString(string)
  nameWithType: Sdl.GetGamepadTypeFromString(string)
  fullName: SharpSDL3.Sdl.GetGamepadTypeFromString(string)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetGamepadTypeFromString
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 916
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Convert a string into SDL_GamepadType enum.
  remarks: >-
    This function is called internally to translate SDL_Gamepad

    mapping strings for the underlying joystick device into the consistent

    SDL_Gamepad mapping. You do not normally need to call this

    function unless you are parsing SDL_Gamepad mappings in your

    own code.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetGamepadStringForType(SharpSDL3.Enums.GamepadType)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static GamepadType GetGamepadTypeFromString(string str)
    parameters:
    - id: str
      type: System.String
      description: string representing a SDL_GamepadType type.
    return:
      type: SharpSDL3.Enums.GamepadType
      description: Returns theSDL_GamepadType enum corresponding to the input string,  SDL_GAMEPAD_TYPE_UNKNOWN if no match wasfound.
    content.vb: Public Shared Function GetGamepadTypeFromString(str As String) As GamepadType
  overload: SharpSDL3.Sdl.GetGamepadTypeFromString*
  nameWithType.vb: Sdl.GetGamepadTypeFromString(String)
  fullName.vb: SharpSDL3.Sdl.GetGamepadTypeFromString(String)
  name.vb: GetGamepadTypeFromString(String)
- uid: SharpSDL3.Sdl.GetGamepadVendor(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetGamepadVendor(System.IntPtr)
  id: GetGamepadVendor(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetGamepadVendor(nint)
  nameWithType: Sdl.GetGamepadVendor(nint)
  fullName: SharpSDL3.Sdl.GetGamepadVendor(nint)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetGamepadVendor
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 933
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the USB vendor ID of an opened gamepad, if available.
  remarks: >-
    If the vendor ID isn't available this function returns 0.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetGamepadVendorForID(System.UInt32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static ushort GetGamepadVendor(nint gamepad)
    parameters:
    - id: gamepad
      type: System.IntPtr
      description: the gamepad object to query.
    return:
      type: System.UInt16
      description: Returns the USB vendor ID, or zero if unavailable.
    content.vb: Public Shared Function GetGamepadVendor(gamepad As IntPtr) As UShort
  overload: SharpSDL3.Sdl.GetGamepadVendor*
  nameWithType.vb: Sdl.GetGamepadVendor(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetGamepadVendor(System.IntPtr)
  name.vb: GetGamepadVendor(IntPtr)
- uid: SharpSDL3.Sdl.GetGamepadVendorForID(System.UInt32)
  commentId: M:SharpSDL3.Sdl.GetGamepadVendorForID(System.UInt32)
  id: GetGamepadVendorForID(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetGamepadVendorForID(uint)
  nameWithType: Sdl.GetGamepadVendorForID(uint)
  fullName: SharpSDL3.Sdl.GetGamepadVendorForID(uint)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetGamepadVendorForID
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 952
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the USB vendor ID of a gamepad, if available.
  remarks: >-
    This can be called before any gamepads are opened. If the vendor ID isn't

    available this function returns 0.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetGamepadVendor(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    GetGamepads
  example: []
  syntax:
    content: public static ushort GetGamepadVendorForID(uint instanceId)
    parameters:
    - id: instanceId
      type: System.UInt32
    return:
      type: System.UInt16
      description: Returns the USB vendor ID of the selected gamepad. Ifcalled on an invalid index, this function returns zero.
    content.vb: Public Shared Function GetGamepadVendorForID(instanceId As UInteger) As UShort
  overload: SharpSDL3.Sdl.GetGamepadVendorForID*
  nameWithType.vb: Sdl.GetGamepadVendorForID(UInteger)
  fullName.vb: SharpSDL3.Sdl.GetGamepadVendorForID(UInteger)
  name.vb: GetGamepadVendorForID(UInteger)
- uid: SharpSDL3.Sdl.GetNumGamepadTouchpadFingers(System.IntPtr,System.Int32)
  commentId: M:SharpSDL3.Sdl.GetNumGamepadTouchpadFingers(System.IntPtr,System.Int32)
  id: GetNumGamepadTouchpadFingers(System.IntPtr,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetNumGamepadTouchpadFingers(nint, int)
  nameWithType: Sdl.GetNumGamepadTouchpadFingers(nint, int)
  fullName: SharpSDL3.Sdl.GetNumGamepadTouchpadFingers(nint, int)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetNumGamepadTouchpadFingers
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 970
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the number of supported simultaneous fingers on a touchpad on a game gamepad.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetGamepadTouchpadFinger(System.IntPtr%2cSystem.Int32%2cSystem.Int32%2cSystem.Boolean%40%2cSystem.Single%40%2cSystem.Single%40%2cSystem.Single%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetNumGamepadTouchpads(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static int GetNumGamepadTouchpadFingers(nint gamepad, int touchpad)
    parameters:
    - id: gamepad
      type: System.IntPtr
      description: a gamepad.
    - id: touchpad
      type: System.Int32
      description: a touchpad.
    return:
      type: System.Int32
      description: Returns number of supported simultaneous fingers.
    content.vb: Public Shared Function GetNumGamepadTouchpadFingers(gamepad As IntPtr, touchpad As Integer) As Integer
  overload: SharpSDL3.Sdl.GetNumGamepadTouchpadFingers*
  nameWithType.vb: Sdl.GetNumGamepadTouchpadFingers(IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.GetNumGamepadTouchpadFingers(System.IntPtr, Integer)
  name.vb: GetNumGamepadTouchpadFingers(IntPtr, Integer)
- uid: SharpSDL3.Sdl.GetNumGamepadTouchpads(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetNumGamepadTouchpads(System.IntPtr)
  id: GetNumGamepadTouchpads(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetNumGamepadTouchpads(nint)
  nameWithType: Sdl.GetNumGamepadTouchpads(nint)
  fullName: SharpSDL3.Sdl.GetNumGamepadTouchpads(nint)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetNumGamepadTouchpads
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 986
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the number of touchpads on a gamepad.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetNumGamepadTouchpadFingers(System.IntPtr%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static int GetNumGamepadTouchpads(nint gamepad)
    parameters:
    - id: gamepad
      type: System.IntPtr
      description: a gamepad.
    return:
      type: System.Int32
      description: Returns number of touchpads.
    content.vb: Public Shared Function GetNumGamepadTouchpads(gamepad As IntPtr) As Integer
  overload: SharpSDL3.Sdl.GetNumGamepadTouchpads*
  nameWithType.vb: Sdl.GetNumGamepadTouchpads(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetNumGamepadTouchpads(System.IntPtr)
  name.vb: GetNumGamepadTouchpads(IntPtr)
- uid: SharpSDL3.Sdl.GetRealGamepadType(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetRealGamepadType(System.IntPtr)
  id: GetRealGamepadType(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetRealGamepadType(nint)
  nameWithType: Sdl.GetRealGamepadType(nint)
  fullName: SharpSDL3.Sdl.GetRealGamepadType(nint)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetRealGamepadType
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 1002
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the type of an opened gamepad, ignoring any mapping override.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetRealGamepadTypeForID(System.UInt32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static GamepadType GetRealGamepadType(nint gamepad)
    parameters:
    - id: gamepad
      type: System.IntPtr
      description: the gamepad object to query.
    return:
      type: SharpSDL3.Enums.GamepadType
      description: Returns the gamepad type, orSDL_GAMEPAD_TYPE_UNKNOWN if it's not available.
    content.vb: Public Shared Function GetRealGamepadType(gamepad As IntPtr) As GamepadType
  overload: SharpSDL3.Sdl.GetRealGamepadType*
  nameWithType.vb: Sdl.GetRealGamepadType(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetRealGamepadType(System.IntPtr)
  name.vb: GetRealGamepadType(IntPtr)
- uid: SharpSDL3.Sdl.GetRealGamepadTypeForID(System.UInt32)
  commentId: M:SharpSDL3.Sdl.GetRealGamepadTypeForID(System.UInt32)
  id: GetRealGamepadTypeForID(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetRealGamepadTypeForID(uint)
  nameWithType: Sdl.GetRealGamepadTypeForID(uint)
  fullName: SharpSDL3.Sdl.GetRealGamepadTypeForID(uint)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetRealGamepadTypeForID
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 1021
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the type of a gamepad, ignoring any mapping override.
  remarks: >-
    This can be called before any gamepads are opened.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetGamepadTypeForID(System.UInt32)" data-throw-if-not-resolved="false"></xref>

    GetGamepads

    <xref href="SharpSDL3.Sdl.GetRealGamepadType(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static GamepadType GetRealGamepadTypeForID(uint instanceId)
    parameters:
    - id: instanceId
      type: System.UInt32
    return:
      type: SharpSDL3.Enums.GamepadType
      description: Returns the gamepad type.
    content.vb: Public Shared Function GetRealGamepadTypeForID(instanceId As UInteger) As GamepadType
  overload: SharpSDL3.Sdl.GetRealGamepadTypeForID*
  nameWithType.vb: Sdl.GetRealGamepadTypeForID(UInteger)
  fullName.vb: SharpSDL3.Sdl.GetRealGamepadTypeForID(UInteger)
  name.vb: GetRealGamepadTypeForID(UInteger)
- uid: SharpSDL3.Sdl.IsGamepad(System.UInt32)
  commentId: M:SharpSDL3.Sdl.IsGamepad(System.UInt32)
  id: IsGamepad(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: IsGamepad(uint)
  nameWithType: Sdl.IsGamepad(uint)
  fullName: SharpSDL3.Sdl.IsGamepad(uint)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: IsGamepad
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 1038
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Check if the given joystick is supported by the gamepad interface.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetJoysticks(System.Int32%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.OpenGamepad(System.UInt32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool IsGamepad(uint instanceId)
    parameters:
    - id: instanceId
      type: System.UInt32
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the given joystick is supported by the gamepadinterface, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if it isn't or it's an invalid index.
    content.vb: Public Shared Function IsGamepad(instanceId As UInteger) As Boolean
  overload: SharpSDL3.Sdl.IsGamepad*
  nameWithType.vb: Sdl.IsGamepad(UInteger)
  fullName.vb: SharpSDL3.Sdl.IsGamepad(UInteger)
  name.vb: IsGamepad(UInteger)
- uid: SharpSDL3.Sdl.OpenGamepad(System.UInt32)
  commentId: M:SharpSDL3.Sdl.OpenGamepad(System.UInt32)
  id: OpenGamepad(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: OpenGamepad(uint)
  nameWithType: Sdl.OpenGamepad(uint)
  fullName: SharpSDL3.Sdl.OpenGamepad(uint)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: OpenGamepad
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 1055
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Open a gamepad for use.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CloseGamepad(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.IsGamepad(System.UInt32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint OpenGamepad(uint instanceId)
    parameters:
    - id: instanceId
      type: System.UInt32
    return:
      type: System.IntPtr
      description: (SDL_Gamepad *) Returns a gamepad identifier or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if anerror occurred; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function OpenGamepad(instanceId As UInteger) As IntPtr
  overload: SharpSDL3.Sdl.OpenGamepad*
  nameWithType.vb: Sdl.OpenGamepad(UInteger)
  fullName.vb: SharpSDL3.Sdl.OpenGamepad(UInteger)
  name.vb: OpenGamepad(UInteger)
- uid: SharpSDL3.Sdl.RumbleGamepad(System.IntPtr,System.UInt16,System.UInt16,System.UInt32)
  commentId: M:SharpSDL3.Sdl.RumbleGamepad(System.IntPtr,System.UInt16,System.UInt16,System.UInt32)
  id: RumbleGamepad(System.IntPtr,System.UInt16,System.UInt16,System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RumbleGamepad(nint, ushort, ushort, uint)
  nameWithType: Sdl.RumbleGamepad(nint, ushort, ushort, uint)
  fullName: SharpSDL3.Sdl.RumbleGamepad(nint, ushort, ushort, uint)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RumbleGamepad
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 1075
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Start a rumble effect on a gamepad.
  remarks: >-
    Each call to this function cancels any previous rumble effect, and calling

    it with 0 intensity stops any rumbling.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool RumbleGamepad(nint gamepad, ushort lowFrequencyRumble, ushort highFrequencyRumble, uint durationMs)
    parameters:
    - id: gamepad
      type: System.IntPtr
      description: the gamepad to vibrate.
    - id: lowFrequencyRumble
      type: System.UInt16
    - id: highFrequencyRumble
      type: System.UInt16
    - id: durationMs
      type: System.UInt32
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function RumbleGamepad(gamepad As IntPtr, lowFrequencyRumble As UShort, highFrequencyRumble As UShort, durationMs As UInteger) As Boolean
  overload: SharpSDL3.Sdl.RumbleGamepad*
  nameWithType.vb: Sdl.RumbleGamepad(IntPtr, UShort, UShort, UInteger)
  fullName.vb: SharpSDL3.Sdl.RumbleGamepad(System.IntPtr, UShort, UShort, UInteger)
  name.vb: RumbleGamepad(IntPtr, UShort, UShort, UInteger)
- uid: SharpSDL3.Sdl.RumbleGamepadTriggers(System.IntPtr,System.UInt16,System.UInt16,System.UInt32)
  commentId: M:SharpSDL3.Sdl.RumbleGamepadTriggers(System.IntPtr,System.UInt16,System.UInt16,System.UInt32)
  id: RumbleGamepadTriggers(System.IntPtr,System.UInt16,System.UInt16,System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RumbleGamepadTriggers(nint, ushort, ushort, uint)
  nameWithType: Sdl.RumbleGamepadTriggers(nint, ushort, ushort, uint)
  fullName: SharpSDL3.Sdl.RumbleGamepadTriggers(nint, ushort, ushort, uint)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RumbleGamepadTriggers
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 1096
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Start a rumble effect in the gamepad's triggers.
  remarks: >-
    Each call to this function cancels any previous trigger rumble effect, and

    calling it with 0 intensity stops any rumbling.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.RumbleGamepad(System.IntPtr%2cSystem.UInt16%2cSystem.UInt16%2cSystem.UInt32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool RumbleGamepadTriggers(nint gamepad, ushort leftRumble, ushort rightRumble, uint durationMs)
    parameters:
    - id: gamepad
      type: System.IntPtr
      description: the gamepad to vibrate.
    - id: leftRumble
      type: System.UInt16
    - id: rightRumble
      type: System.UInt16
    - id: durationMs
      type: System.UInt32
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function RumbleGamepadTriggers(gamepad As IntPtr, leftRumble As UShort, rightRumble As UShort, durationMs As UInteger) As Boolean
  overload: SharpSDL3.Sdl.RumbleGamepadTriggers*
  nameWithType.vb: Sdl.RumbleGamepadTriggers(IntPtr, UShort, UShort, UInteger)
  fullName.vb: SharpSDL3.Sdl.RumbleGamepadTriggers(System.IntPtr, UShort, UShort, UInteger)
  name.vb: RumbleGamepadTriggers(IntPtr, UShort, UShort, UInteger)
- uid: SharpSDL3.Sdl.SendGamepadEffect(System.IntPtr,System.IntPtr,System.Int32)
  commentId: M:SharpSDL3.Sdl.SendGamepadEffect(System.IntPtr,System.IntPtr,System.Int32)
  id: SendGamepadEffect(System.IntPtr,System.IntPtr,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SendGamepadEffect(nint, nint, int)
  nameWithType: Sdl.SendGamepadEffect(nint, nint, int)
  fullName: SharpSDL3.Sdl.SendGamepadEffect(nint, nint, int)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SendGamepadEffect
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 1113
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Send a gamepad specific effect packet.
  remarks: <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool SendGamepadEffect(nint gamepad, nint data, int size)
    parameters:
    - id: gamepad
      type: System.IntPtr
      description: the gamepad to affect.
    - id: data
      type: System.IntPtr
      description: the data to send to the gamepad.
    - id: size
      type: System.Int32
      description: the size of the data to send to the gamepad.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SendGamepadEffect(gamepad As IntPtr, data As IntPtr, size As Integer) As Boolean
  overload: SharpSDL3.Sdl.SendGamepadEffect*
  nameWithType.vb: Sdl.SendGamepadEffect(IntPtr, IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.SendGamepadEffect(System.IntPtr, System.IntPtr, Integer)
  name.vb: SendGamepadEffect(IntPtr, IntPtr, Integer)
- uid: SharpSDL3.Sdl.SetGamepadEventsEnabled(System.Boolean)
  commentId: M:SharpSDL3.Sdl.SetGamepadEventsEnabled(System.Boolean)
  id: SetGamepadEventsEnabled(System.Boolean)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetGamepadEventsEnabled(bool)
  nameWithType: Sdl.SetGamepadEventsEnabled(bool)
  fullName: SharpSDL3.Sdl.SetGamepadEventsEnabled(bool)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetGamepadEventsEnabled
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 1138
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set the state of gamepad event processing.
  remarks: >-
    If gamepad events are disabled, you must call

    SDL_UpdateGamepads() yourself and check the state of

    the gamepad when you want gamepad information.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    GamepadEventsEnabled

    UpdateGamepads
  example: []
  syntax:
    content: public static void SetGamepadEventsEnabled(bool enabled)
    parameters:
    - id: enabled
      type: System.Boolean
      description: whether to process gamepad events or not.
    content.vb: Public Shared Sub SetGamepadEventsEnabled(enabled As Boolean)
  overload: SharpSDL3.Sdl.SetGamepadEventsEnabled*
  nameWithType.vb: Sdl.SetGamepadEventsEnabled(Boolean)
  fullName.vb: SharpSDL3.Sdl.SetGamepadEventsEnabled(Boolean)
  name.vb: SetGamepadEventsEnabled(Boolean)
- uid: SharpSDL3.Sdl.SetGamepadLED(System.IntPtr,System.Byte,System.Byte,System.Byte)
  commentId: M:SharpSDL3.Sdl.SetGamepadLED(System.IntPtr,System.Byte,System.Byte,System.Byte)
  id: SetGamepadLED(System.IntPtr,System.Byte,System.Byte,System.Byte)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetGamepadLED(nint, byte, byte, byte)
  nameWithType: Sdl.SetGamepadLED(nint, byte, byte, byte)
  fullName: SharpSDL3.Sdl.SetGamepadLED(nint, byte, byte, byte)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetGamepadLED
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 1157
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Update a gamepad's LED color.
  remarks: >-
    An example of a joystick LED is the light on the back of a PlayStation 4's

    DualShock 4 controller.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool SetGamepadLED(nint gamepad, byte red, byte green, byte blue)
    parameters:
    - id: gamepad
      type: System.IntPtr
      description: the gamepad to update.
    - id: red
      type: System.Byte
      description: the intensity of the red LED.
    - id: green
      type: System.Byte
      description: the intensity of the green LED.
    - id: blue
      type: System.Byte
      description: the intensity of the blue LED.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetGamepadLED(gamepad As IntPtr, red As Byte, green As Byte, blue As Byte) As Boolean
  overload: SharpSDL3.Sdl.SetGamepadLED*
  nameWithType.vb: Sdl.SetGamepadLED(IntPtr, Byte, Byte, Byte)
  fullName.vb: SharpSDL3.Sdl.SetGamepadLED(System.IntPtr, Byte, Byte, Byte)
  name.vb: SetGamepadLED(IntPtr, Byte, Byte, Byte)
- uid: SharpSDL3.Sdl.SetGamepadMapping(System.UInt32,System.String)
  commentId: M:SharpSDL3.Sdl.SetGamepadMapping(System.UInt32,System.String)
  id: SetGamepadMapping(System.UInt32,System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetGamepadMapping(uint, string)
  nameWithType: Sdl.SetGamepadMapping(uint, string)
  fullName: SharpSDL3.Sdl.SetGamepadMapping(uint, string)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetGamepadMapping
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 1177
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set the current mapping of a joystick or gamepad.
  remarks: >-
    Details about mappings are discussed with

    SDL_AddGamepadMapping().

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.AddGamepadMapping(System.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetGamepadMapping(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetGamepadMapping(uint instanceId, string mapping)
    parameters:
    - id: instanceId
      type: System.UInt32
    - id: mapping
      type: System.String
      description: the mapping to use for this device, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to clear the mapping.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetGamepadMapping(instanceId As UInteger, mapping As String) As Boolean
  overload: SharpSDL3.Sdl.SetGamepadMapping*
  nameWithType.vb: Sdl.SetGamepadMapping(UInteger, String)
  fullName.vb: SharpSDL3.Sdl.SetGamepadMapping(UInteger, String)
  name.vb: SetGamepadMapping(UInteger, String)
- uid: SharpSDL3.Sdl.SetGamepadPlayerIndex(System.IntPtr,System.Int32)
  commentId: M:SharpSDL3.Sdl.SetGamepadPlayerIndex(System.IntPtr,System.Int32)
  id: SetGamepadPlayerIndex(System.IntPtr,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetGamepadPlayerIndex(nint, int)
  nameWithType: Sdl.SetGamepadPlayerIndex(nint, int)
  fullName: SharpSDL3.Sdl.SetGamepadPlayerIndex(nint, int)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetGamepadPlayerIndex
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 1197
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set the player index of an opened gamepad.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetGamepadPlayerIndex(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetGamepadPlayerIndex(nint gamepad, int playerIndex)
    parameters:
    - id: gamepad
      type: System.IntPtr
      description: the gamepad object to adjust.
    - id: playerIndex
      type: System.Int32
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetGamepadPlayerIndex(gamepad As IntPtr, playerIndex As Integer) As Boolean
  overload: SharpSDL3.Sdl.SetGamepadPlayerIndex*
  nameWithType.vb: Sdl.SetGamepadPlayerIndex(IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.SetGamepadPlayerIndex(System.IntPtr, Integer)
  name.vb: SetGamepadPlayerIndex(IntPtr, Integer)
- uid: SharpSDL3.Sdl.SetGamepadSensorEnabled(System.IntPtr,SharpSDL3.Enums.SensorType,System.Boolean)
  commentId: M:SharpSDL3.Sdl.SetGamepadSensorEnabled(System.IntPtr,SharpSDL3.Enums.SensorType,System.Boolean)
  id: SetGamepadSensorEnabled(System.IntPtr,SharpSDL3.Enums.SensorType,System.Boolean)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetGamepadSensorEnabled(nint, SensorType, bool)
  nameWithType: Sdl.SetGamepadSensorEnabled(nint, SensorType, bool)
  fullName: SharpSDL3.Sdl.SetGamepadSensorEnabled(nint, SharpSDL3.Enums.SensorType, bool)
  type: Method
  source:
    remote:
      path: SDL3/GamePad.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetGamepadSensorEnabled
    path: ../../repos/SDL3-CS/SDL3/GamePad.cs
    startLine: 1219
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set whether data reporting for a gamepad sensor is enabled.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GamepadHasSensor(System.IntPtr%2cSharpSDL3.Enums.SensorType)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GamepadSensorEnabled(System.IntPtr%2cSharpSDL3.Enums.SensorType)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetGamepadSensorEnabled(nint gamepad, SensorType type, bool enabled)
    parameters:
    - id: gamepad
      type: System.IntPtr
      description: the gamepad to update.
    - id: type
      type: SharpSDL3.Enums.SensorType
      description: the type of sensor to enable/disable.
    - id: enabled
      type: System.Boolean
      description: whether data reporting should be enabled.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetGamepadSensorEnabled(gamepad As IntPtr, type As SensorType, enabled As Boolean) As Boolean
  overload: SharpSDL3.Sdl.SetGamepadSensorEnabled*
  nameWithType.vb: Sdl.SetGamepadSensorEnabled(IntPtr, SensorType, Boolean)
  fullName.vb: SharpSDL3.Sdl.SetGamepadSensorEnabled(System.IntPtr, SharpSDL3.Enums.SensorType, Boolean)
  name.vb: SetGamepadSensorEnabled(IntPtr, SensorType, Boolean)
- uid: SharpSDL3.Sdl.AcquireGPUCommandBuffer(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.AcquireGPUCommandBuffer(System.IntPtr)
  id: AcquireGPUCommandBuffer(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: AcquireGPUCommandBuffer(nint)
  nameWithType: Sdl.AcquireGPUCommandBuffer(nint)
  fullName: SharpSDL3.Sdl.AcquireGPUCommandBuffer(nint)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: AcquireGPUCommandBuffer
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 24
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Acquire a command buffer.
  remarks: >-
    This command buffer is managed by the implementation and should not be

    freed by the user. The command buffer may only be used on the thread it was

    acquired on. The command buffer should be submitted on the thread it was

    acquired on.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SubmitGPUCommandBuffer(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SubmitGPUCommandBufferAndAcquireFence(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint AcquireGPUCommandBuffer(nint device)
    parameters:
    - id: device
      type: System.IntPtr
      description: a GPU context.
    return:
      type: System.IntPtr
      description: (SDL_GPUCommandBuffer *) Returns a command buffer,  <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function AcquireGPUCommandBuffer(device As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.AcquireGPUCommandBuffer*
  nameWithType.vb: Sdl.AcquireGPUCommandBuffer(IntPtr)
  fullName.vb: SharpSDL3.Sdl.AcquireGPUCommandBuffer(System.IntPtr)
  name.vb: AcquireGPUCommandBuffer(IntPtr)
- uid: SharpSDL3.Sdl.AcquireGPUSwapchainTexture(System.IntPtr,System.IntPtr,System.IntPtr@,System.UInt32@,System.UInt32@)
  commentId: M:SharpSDL3.Sdl.AcquireGPUSwapchainTexture(System.IntPtr,System.IntPtr,System.IntPtr@,System.UInt32@,System.UInt32@)
  id: AcquireGPUSwapchainTexture(System.IntPtr,System.IntPtr,System.IntPtr@,System.UInt32@,System.UInt32@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: AcquireGPUSwapchainTexture(nint, nint, out nint, out uint, out uint)
  nameWithType: Sdl.AcquireGPUSwapchainTexture(nint, nint, out nint, out uint, out uint)
  fullName: SharpSDL3.Sdl.AcquireGPUSwapchainTexture(nint, nint, out nint, out uint, out uint)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: AcquireGPUSwapchainTexture
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 56
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Acquire a texture to use in presentation.
  remarks: >-
    When a swapchain texture is acquired on a command buffer, it will

    automatically be submitted for presentation when the command buffer is

    submitted. The swapchain texture should only be referenced by the command

    buffer used to acquire it.

    <p><strong>Thread Safety:</strong> This function should only be called from the thread that created thewindow.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.ClaimWindowForGPUDevice(System.IntPtr%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SubmitGPUCommandBuffer(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SubmitGPUCommandBufferAndAcquireFence(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.CancelGPUCommandBuffer(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetWindowSizeInPixels(System.IntPtr%2cSystem.Int32%40%2cSystem.Int32%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.WaitForGPUSwapchain(System.IntPtr%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.WaitAndAcquireGPUSwapchainTexture(System.IntPtr%2cSystem.IntPtr%2cSystem.IntPtr%40%2cSystem.UInt32%40%2cSystem.UInt32%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetGPUAllowedFramesInFlight(System.IntPtr%2cSystem.UInt32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool AcquireGPUSwapchainTexture(nint commandBuffer, nint window, out nint swapchainTexture, out uint swapchainTextureWidth, out uint swapchainTextureHeight)
    parameters:
    - id: commandBuffer
      type: System.IntPtr
    - id: window
      type: System.IntPtr
      description: a window that has been claimed.
    - id: swapchainTexture
      type: System.IntPtr
    - id: swapchainTextureWidth
      type: System.UInt32
    - id: swapchainTextureHeight
      type: System.UInt32
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on error; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function AcquireGPUSwapchainTexture(commandBuffer As IntPtr, window As IntPtr, swapchainTexture As IntPtr, swapchainTextureWidth As UInteger, swapchainTextureHeight As UInteger) As Boolean
  overload: SharpSDL3.Sdl.AcquireGPUSwapchainTexture*
  nameWithType.vb: Sdl.AcquireGPUSwapchainTexture(IntPtr, IntPtr, IntPtr, UInteger, UInteger)
  fullName.vb: SharpSDL3.Sdl.AcquireGPUSwapchainTexture(System.IntPtr, System.IntPtr, System.IntPtr, UInteger, UInteger)
  name.vb: AcquireGPUSwapchainTexture(IntPtr, IntPtr, IntPtr, UInteger, UInteger)
- uid: SharpSDL3.Sdl.BeginGPUComputePass(System.IntPtr,System.Span{SharpSDL3.Structs.GpuStorageTextureReadWriteBinding},System.UInt32,System.Span{SharpSDL3.Structs.GpuStorageBufferReadWriteBinding},System.UInt32)
  commentId: M:SharpSDL3.Sdl.BeginGPUComputePass(System.IntPtr,System.Span{SharpSDL3.Structs.GpuStorageTextureReadWriteBinding},System.UInt32,System.Span{SharpSDL3.Structs.GpuStorageBufferReadWriteBinding},System.UInt32)
  id: BeginGPUComputePass(System.IntPtr,System.Span{SharpSDL3.Structs.GpuStorageTextureReadWriteBinding},System.UInt32,System.Span{SharpSDL3.Structs.GpuStorageBufferReadWriteBinding},System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: BeginGPUComputePass(nint, Span<GpuStorageTextureReadWriteBinding>, uint, Span<GpuStorageBufferReadWriteBinding>, uint)
  nameWithType: Sdl.BeginGPUComputePass(nint, Span<GpuStorageTextureReadWriteBinding>, uint, Span<GpuStorageBufferReadWriteBinding>, uint)
  fullName: SharpSDL3.Sdl.BeginGPUComputePass(nint, System.Span<SharpSDL3.Structs.GpuStorageTextureReadWriteBinding>, uint, System.Span<SharpSDL3.Structs.GpuStorageBufferReadWriteBinding>, uint)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: BeginGPUComputePass
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 88
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Begins a compute pass on a command buffer.
  remarks: >-
    A compute pass is defined by a set of texture subresources and buffers that

    may be written to by compute pipelines. These textures and buffers must

    have been created with the COMPUTE_STORAGE_WRITE bit or the

    COMPUTE_STORAGE_SIMULTANEOUS_READ_WRITE bit. If you do not create a texture

    with COMPUTE_STORAGE_SIMULTANEOUS_READ_WRITE, you must not read from the

    texture in the compute pass. All operations related to compute pipelines

    must take place inside of a compute pass. You must not begin another

    compute pass, or a render pass or copy pass before ending the compute pass.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.EndGPUComputePass(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint BeginGPUComputePass(nint commandBuffer, Span<GpuStorageTextureReadWriteBinding> storageTextureBindings, uint numStorageTextureBindings, Span<GpuStorageBufferReadWriteBinding> storageBufferBindings, uint numStorageBufferBindings)
    parameters:
    - id: commandBuffer
      type: System.IntPtr
    - id: storageTextureBindings
      type: System.Span{SharpSDL3.Structs.GpuStorageTextureReadWriteBinding}
    - id: numStorageTextureBindings
      type: System.UInt32
    - id: storageBufferBindings
      type: System.Span{SharpSDL3.Structs.GpuStorageBufferReadWriteBinding}
    - id: numStorageBufferBindings
      type: System.UInt32
    return:
      type: System.IntPtr
      description: (SDL_GPUComputePass *) Returns a compute pass handle.
    content.vb: Public Shared Function BeginGPUComputePass(commandBuffer As IntPtr, storageTextureBindings As Span(Of GpuStorageTextureReadWriteBinding), numStorageTextureBindings As UInteger, storageBufferBindings As Span(Of GpuStorageBufferReadWriteBinding), numStorageBufferBindings As UInteger) As IntPtr
  overload: SharpSDL3.Sdl.BeginGPUComputePass*
  nameWithType.vb: Sdl.BeginGPUComputePass(IntPtr, Span(Of GpuStorageTextureReadWriteBinding), UInteger, Span(Of GpuStorageBufferReadWriteBinding), UInteger)
  fullName.vb: SharpSDL3.Sdl.BeginGPUComputePass(System.IntPtr, System.Span(Of SharpSDL3.Structs.GpuStorageTextureReadWriteBinding), UInteger, System.Span(Of SharpSDL3.Structs.GpuStorageBufferReadWriteBinding), UInteger)
  name.vb: BeginGPUComputePass(IntPtr, Span(Of GpuStorageTextureReadWriteBinding), UInteger, Span(Of GpuStorageBufferReadWriteBinding), UInteger)
- uid: SharpSDL3.Sdl.BeginGPUCopyPass(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.BeginGPUCopyPass(System.IntPtr)
  id: BeginGPUCopyPass(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: BeginGPUCopyPass(nint)
  nameWithType: Sdl.BeginGPUCopyPass(nint)
  fullName: SharpSDL3.Sdl.BeginGPUCopyPass(nint)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: BeginGPUCopyPass
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 109
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Begins a copy pass on a command buffer.
  remarks: >-
    All operations related to copying to or from buffers or textures take place

    inside a copy pass. You must not begin another copy pass, or a render pass

    or compute pass before ending the copy pass.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static nint BeginGPUCopyPass(nint commandBuffer)
    parameters:
    - id: commandBuffer
      type: System.IntPtr
    return:
      type: System.IntPtr
      description: (SDL_GPUCopyPass *) Returns a copy pass handle.
    content.vb: Public Shared Function BeginGPUCopyPass(commandBuffer As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.BeginGPUCopyPass*
  nameWithType.vb: Sdl.BeginGPUCopyPass(IntPtr)
  fullName.vb: SharpSDL3.Sdl.BeginGPUCopyPass(System.IntPtr)
  name.vb: BeginGPUCopyPass(IntPtr)
- uid: SharpSDL3.Sdl.BeginGPURenderPass(System.IntPtr,System.Span{SharpSDL3.Structs.GpuColorTargetInfo},System.UInt32,SharpSDL3.Structs.GpuDepthStencilTargetInfo@)
  commentId: M:SharpSDL3.Sdl.BeginGPURenderPass(System.IntPtr,System.Span{SharpSDL3.Structs.GpuColorTargetInfo},System.UInt32,SharpSDL3.Structs.GpuDepthStencilTargetInfo@)
  id: BeginGPURenderPass(System.IntPtr,System.Span{SharpSDL3.Structs.GpuColorTargetInfo},System.UInt32,SharpSDL3.Structs.GpuDepthStencilTargetInfo@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: BeginGPURenderPass(nint, Span<GpuColorTargetInfo>, uint, in GpuDepthStencilTargetInfo)
  nameWithType: Sdl.BeginGPURenderPass(nint, Span<GpuColorTargetInfo>, uint, in GpuDepthStencilTargetInfo)
  fullName: SharpSDL3.Sdl.BeginGPURenderPass(nint, System.Span<SharpSDL3.Structs.GpuColorTargetInfo>, uint, in SharpSDL3.Structs.GpuDepthStencilTargetInfo)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: BeginGPURenderPass
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 135
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Begins a render pass on a command buffer.
  remarks: >-
    A render pass consists of a set of texture subresources (or depth slices in

    the 3D texture case) which will be rendered to during the render pass,

    along with corresponding clear values and load/store operations. All

    operations related to graphics pipelines must take place inside of a render

    pass. A default viewport and scissor state are automatically set when this

    is called. You cannot begin another render pass, or begin a compute pass or

    copy pass until you have ended the render pass.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.EndGPURenderPass(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint BeginGPURenderPass(nint commandBuffer, Span<GpuColorTargetInfo> colorTargetInfos, uint numColorTargets, in GpuDepthStencilTargetInfo depthStencilTargetInfo)
    parameters:
    - id: commandBuffer
      type: System.IntPtr
    - id: colorTargetInfos
      type: System.Span{SharpSDL3.Structs.GpuColorTargetInfo}
    - id: numColorTargets
      type: System.UInt32
    - id: depthStencilTargetInfo
      type: SharpSDL3.Structs.GpuDepthStencilTargetInfo
    return:
      type: System.IntPtr
      description: (SDL_GPURenderPass *) Returns a render pass handle.
    content.vb: Public Shared Function BeginGPURenderPass(commandBuffer As IntPtr, colorTargetInfos As Span(Of GpuColorTargetInfo), numColorTargets As UInteger, depthStencilTargetInfo As GpuDepthStencilTargetInfo) As IntPtr
  overload: SharpSDL3.Sdl.BeginGPURenderPass*
  nameWithType.vb: Sdl.BeginGPURenderPass(IntPtr, Span(Of GpuColorTargetInfo), UInteger, GpuDepthStencilTargetInfo)
  fullName.vb: SharpSDL3.Sdl.BeginGPURenderPass(System.IntPtr, System.Span(Of SharpSDL3.Structs.GpuColorTargetInfo), UInteger, SharpSDL3.Structs.GpuDepthStencilTargetInfo)
  name.vb: BeginGPURenderPass(IntPtr, Span(Of GpuColorTargetInfo), UInteger, GpuDepthStencilTargetInfo)
- uid: SharpSDL3.Sdl.BindGPUComputePipeline(System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.BindGPUComputePipeline(System.IntPtr,System.IntPtr)
  id: BindGPUComputePipeline(System.IntPtr,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: BindGPUComputePipeline(nint, nint)
  nameWithType: Sdl.BindGPUComputePipeline(nint, nint)
  fullName: SharpSDL3.Sdl.BindGPUComputePipeline(nint, nint)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: BindGPUComputePipeline
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 151
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Binds a compute pipeline on a command buffer for use in compute dispatch.
  remarks: <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static void BindGPUComputePipeline(nint computePass, nint computePipeline)
    parameters:
    - id: computePass
      type: System.IntPtr
    - id: computePipeline
      type: System.IntPtr
    content.vb: Public Shared Sub BindGPUComputePipeline(computePass As IntPtr, computePipeline As IntPtr)
  overload: SharpSDL3.Sdl.BindGPUComputePipeline*
  nameWithType.vb: Sdl.BindGPUComputePipeline(IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.BindGPUComputePipeline(System.IntPtr, System.IntPtr)
  name.vb: BindGPUComputePipeline(IntPtr, IntPtr)
- uid: SharpSDL3.Sdl.BindGPUComputeSamplers(System.IntPtr,System.UInt32,System.Span{SharpSDL3.Structs.GpuTextureSamplerBinding},System.UInt32)
  commentId: M:SharpSDL3.Sdl.BindGPUComputeSamplers(System.IntPtr,System.UInt32,System.Span{SharpSDL3.Structs.GpuTextureSamplerBinding},System.UInt32)
  id: BindGPUComputeSamplers(System.IntPtr,System.UInt32,System.Span{SharpSDL3.Structs.GpuTextureSamplerBinding},System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: BindGPUComputeSamplers(nint, uint, Span<GpuTextureSamplerBinding>, uint)
  nameWithType: Sdl.BindGPUComputeSamplers(nint, uint, Span<GpuTextureSamplerBinding>, uint)
  fullName: SharpSDL3.Sdl.BindGPUComputeSamplers(nint, uint, System.Span<SharpSDL3.Structs.GpuTextureSamplerBinding>, uint)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: BindGPUComputeSamplers
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 171
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Binds texture-sampler pairs for use on the compute shader.
  remarks: >-
    The textures must have been created with

    SDL_GPU_TEXTUREUSAGE_SAMPLER.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateGPUShader(System.IntPtr%2cSharpSDL3.Structs.GpuShaderCreateInfo%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void BindGPUComputeSamplers(nint computePass, uint firstSlot, Span<GpuTextureSamplerBinding> textureSamplerBindings, uint numBindings)
    parameters:
    - id: computePass
      type: System.IntPtr
    - id: firstSlot
      type: System.UInt32
    - id: textureSamplerBindings
      type: System.Span{SharpSDL3.Structs.GpuTextureSamplerBinding}
    - id: numBindings
      type: System.UInt32
    content.vb: Public Shared Sub BindGPUComputeSamplers(computePass As IntPtr, firstSlot As UInteger, textureSamplerBindings As Span(Of GpuTextureSamplerBinding), numBindings As UInteger)
  overload: SharpSDL3.Sdl.BindGPUComputeSamplers*
  nameWithType.vb: Sdl.BindGPUComputeSamplers(IntPtr, UInteger, Span(Of GpuTextureSamplerBinding), UInteger)
  fullName.vb: SharpSDL3.Sdl.BindGPUComputeSamplers(System.IntPtr, UInteger, System.Span(Of SharpSDL3.Structs.GpuTextureSamplerBinding), UInteger)
  name.vb: BindGPUComputeSamplers(IntPtr, UInteger, Span(Of GpuTextureSamplerBinding), UInteger)
- uid: SharpSDL3.Sdl.BindGPUComputeStorageBuffers(System.IntPtr,System.UInt32,System.Span{System.IntPtr},System.UInt32)
  commentId: M:SharpSDL3.Sdl.BindGPUComputeStorageBuffers(System.IntPtr,System.UInt32,System.Span{System.IntPtr},System.UInt32)
  id: BindGPUComputeStorageBuffers(System.IntPtr,System.UInt32,System.Span{System.IntPtr},System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: BindGPUComputeStorageBuffers(nint, uint, Span<nint>, uint)
  nameWithType: Sdl.BindGPUComputeStorageBuffers(nint, uint, Span<nint>, uint)
  fullName: SharpSDL3.Sdl.BindGPUComputeStorageBuffers(nint, uint, System.Span<nint>, uint)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: BindGPUComputeStorageBuffers
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 192
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Binds storage buffers as readonly for use on the compute pipeline.
  remarks: >-
    These buffers must have been created with

    SDL_GPU_BUFFERUSAGE_COMPUTE_STORAGE_READ.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateGPUShader(System.IntPtr%2cSharpSDL3.Structs.GpuShaderCreateInfo%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void BindGPUComputeStorageBuffers(nint computePass, uint firstSlot, Span<nint> storageBuffers, uint numBindings)
    parameters:
    - id: computePass
      type: System.IntPtr
    - id: firstSlot
      type: System.UInt32
    - id: storageBuffers
      type: System.Span{System.IntPtr}
    - id: numBindings
      type: System.UInt32
    content.vb: Public Shared Sub BindGPUComputeStorageBuffers(computePass As IntPtr, firstSlot As UInteger, storageBuffers As Span(Of IntPtr), numBindings As UInteger)
  overload: SharpSDL3.Sdl.BindGPUComputeStorageBuffers*
  nameWithType.vb: Sdl.BindGPUComputeStorageBuffers(IntPtr, UInteger, Span(Of IntPtr), UInteger)
  fullName.vb: SharpSDL3.Sdl.BindGPUComputeStorageBuffers(System.IntPtr, UInteger, System.Span(Of System.IntPtr), UInteger)
  name.vb: BindGPUComputeStorageBuffers(IntPtr, UInteger, Span(Of IntPtr), UInteger)
- uid: SharpSDL3.Sdl.BindGPUComputeStorageTextures(System.IntPtr,System.UInt32,System.Span{System.IntPtr},System.UInt32)
  commentId: M:SharpSDL3.Sdl.BindGPUComputeStorageTextures(System.IntPtr,System.UInt32,System.Span{System.IntPtr},System.UInt32)
  id: BindGPUComputeStorageTextures(System.IntPtr,System.UInt32,System.Span{System.IntPtr},System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: BindGPUComputeStorageTextures(nint, uint, Span<nint>, uint)
  nameWithType: Sdl.BindGPUComputeStorageTextures(nint, uint, Span<nint>, uint)
  fullName: SharpSDL3.Sdl.BindGPUComputeStorageTextures(nint, uint, System.Span<nint>, uint)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: BindGPUComputeStorageTextures
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 213
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Binds storage textures as readonly for use on the compute pipeline.
  remarks: >-
    These textures must have been created with

    SDL_GPU_TEXTUREUSAGE_COMPUTE_STORAGE_READ.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateGPUShader(System.IntPtr%2cSharpSDL3.Structs.GpuShaderCreateInfo%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void BindGPUComputeStorageTextures(nint computePass, uint firstSlot, Span<nint> storageTextures, uint numBindings)
    parameters:
    - id: computePass
      type: System.IntPtr
    - id: firstSlot
      type: System.UInt32
    - id: storageTextures
      type: System.Span{System.IntPtr}
    - id: numBindings
      type: System.UInt32
    content.vb: Public Shared Sub BindGPUComputeStorageTextures(computePass As IntPtr, firstSlot As UInteger, storageTextures As Span(Of IntPtr), numBindings As UInteger)
  overload: SharpSDL3.Sdl.BindGPUComputeStorageTextures*
  nameWithType.vb: Sdl.BindGPUComputeStorageTextures(IntPtr, UInteger, Span(Of IntPtr), UInteger)
  fullName.vb: SharpSDL3.Sdl.BindGPUComputeStorageTextures(System.IntPtr, UInteger, System.Span(Of System.IntPtr), UInteger)
  name.vb: BindGPUComputeStorageTextures(IntPtr, UInteger, Span(Of IntPtr), UInteger)
- uid: SharpSDL3.Sdl.BindGPUFragmentSamplers(System.IntPtr,System.UInt32,System.Span{SharpSDL3.Structs.GpuTextureSamplerBinding},System.UInt32)
  commentId: M:SharpSDL3.Sdl.BindGPUFragmentSamplers(System.IntPtr,System.UInt32,System.Span{SharpSDL3.Structs.GpuTextureSamplerBinding},System.UInt32)
  id: BindGPUFragmentSamplers(System.IntPtr,System.UInt32,System.Span{SharpSDL3.Structs.GpuTextureSamplerBinding},System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: BindGPUFragmentSamplers(nint, uint, Span<GpuTextureSamplerBinding>, uint)
  nameWithType: Sdl.BindGPUFragmentSamplers(nint, uint, Span<GpuTextureSamplerBinding>, uint)
  fullName: SharpSDL3.Sdl.BindGPUFragmentSamplers(nint, uint, System.Span<SharpSDL3.Structs.GpuTextureSamplerBinding>, uint)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: BindGPUFragmentSamplers
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 234
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Binds texture-sampler pairs for use on the fragment shader.
  remarks: >-
    The textures must have been created with

    SDL_GPU_TEXTUREUSAGE_SAMPLER.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateGPUShader(System.IntPtr%2cSharpSDL3.Structs.GpuShaderCreateInfo%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void BindGPUFragmentSamplers(nint renderPass, uint firstSlot, Span<GpuTextureSamplerBinding> textureSamplerBindings, uint numBindings)
    parameters:
    - id: renderPass
      type: System.IntPtr
    - id: firstSlot
      type: System.UInt32
    - id: textureSamplerBindings
      type: System.Span{SharpSDL3.Structs.GpuTextureSamplerBinding}
    - id: numBindings
      type: System.UInt32
    content.vb: Public Shared Sub BindGPUFragmentSamplers(renderPass As IntPtr, firstSlot As UInteger, textureSamplerBindings As Span(Of GpuTextureSamplerBinding), numBindings As UInteger)
  overload: SharpSDL3.Sdl.BindGPUFragmentSamplers*
  nameWithType.vb: Sdl.BindGPUFragmentSamplers(IntPtr, UInteger, Span(Of GpuTextureSamplerBinding), UInteger)
  fullName.vb: SharpSDL3.Sdl.BindGPUFragmentSamplers(System.IntPtr, UInteger, System.Span(Of SharpSDL3.Structs.GpuTextureSamplerBinding), UInteger)
  name.vb: BindGPUFragmentSamplers(IntPtr, UInteger, Span(Of GpuTextureSamplerBinding), UInteger)
- uid: SharpSDL3.Sdl.BindGPUFragmentStorageBuffers(System.IntPtr,System.UInt32,System.Span{System.IntPtr},System.UInt32)
  commentId: M:SharpSDL3.Sdl.BindGPUFragmentStorageBuffers(System.IntPtr,System.UInt32,System.Span{System.IntPtr},System.UInt32)
  id: BindGPUFragmentStorageBuffers(System.IntPtr,System.UInt32,System.Span{System.IntPtr},System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: BindGPUFragmentStorageBuffers(nint, uint, Span<nint>, uint)
  nameWithType: Sdl.BindGPUFragmentStorageBuffers(nint, uint, Span<nint>, uint)
  fullName: SharpSDL3.Sdl.BindGPUFragmentStorageBuffers(nint, uint, System.Span<nint>, uint)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: BindGPUFragmentStorageBuffers
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 255
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Binds storage buffers for use on the fragment shader.
  remarks: >-
    These buffers must have been created with

    SDL_GPU_BUFFERUSAGE_GRAPHICS_STORAGE_READ.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateGPUShader(System.IntPtr%2cSharpSDL3.Structs.GpuShaderCreateInfo%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void BindGPUFragmentStorageBuffers(nint renderPass, uint firstSlot, Span<nint> storageBuffers, uint numBindings)
    parameters:
    - id: renderPass
      type: System.IntPtr
    - id: firstSlot
      type: System.UInt32
    - id: storageBuffers
      type: System.Span{System.IntPtr}
    - id: numBindings
      type: System.UInt32
    content.vb: Public Shared Sub BindGPUFragmentStorageBuffers(renderPass As IntPtr, firstSlot As UInteger, storageBuffers As Span(Of IntPtr), numBindings As UInteger)
  overload: SharpSDL3.Sdl.BindGPUFragmentStorageBuffers*
  nameWithType.vb: Sdl.BindGPUFragmentStorageBuffers(IntPtr, UInteger, Span(Of IntPtr), UInteger)
  fullName.vb: SharpSDL3.Sdl.BindGPUFragmentStorageBuffers(System.IntPtr, UInteger, System.Span(Of System.IntPtr), UInteger)
  name.vb: BindGPUFragmentStorageBuffers(IntPtr, UInteger, Span(Of IntPtr), UInteger)
- uid: SharpSDL3.Sdl.BindGPUFragmentStorageTextures(System.IntPtr,System.UInt32,System.Span{System.IntPtr},System.UInt32)
  commentId: M:SharpSDL3.Sdl.BindGPUFragmentStorageTextures(System.IntPtr,System.UInt32,System.Span{System.IntPtr},System.UInt32)
  id: BindGPUFragmentStorageTextures(System.IntPtr,System.UInt32,System.Span{System.IntPtr},System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: BindGPUFragmentStorageTextures(nint, uint, Span<nint>, uint)
  nameWithType: Sdl.BindGPUFragmentStorageTextures(nint, uint, Span<nint>, uint)
  fullName: SharpSDL3.Sdl.BindGPUFragmentStorageTextures(nint, uint, System.Span<nint>, uint)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: BindGPUFragmentStorageTextures
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 276
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Binds storage textures for use on the fragment shader.
  remarks: >-
    These textures must have been created with

    SDL_GPU_TEXTUREUSAGE_GRAPHICS_STORAGE_READ.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateGPUShader(System.IntPtr%2cSharpSDL3.Structs.GpuShaderCreateInfo%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void BindGPUFragmentStorageTextures(nint renderPass, uint firstSlot, Span<nint> storageTextures, uint numBindings)
    parameters:
    - id: renderPass
      type: System.IntPtr
    - id: firstSlot
      type: System.UInt32
    - id: storageTextures
      type: System.Span{System.IntPtr}
    - id: numBindings
      type: System.UInt32
    content.vb: Public Shared Sub BindGPUFragmentStorageTextures(renderPass As IntPtr, firstSlot As UInteger, storageTextures As Span(Of IntPtr), numBindings As UInteger)
  overload: SharpSDL3.Sdl.BindGPUFragmentStorageTextures*
  nameWithType.vb: Sdl.BindGPUFragmentStorageTextures(IntPtr, UInteger, Span(Of IntPtr), UInteger)
  fullName.vb: SharpSDL3.Sdl.BindGPUFragmentStorageTextures(System.IntPtr, UInteger, System.Span(Of System.IntPtr), UInteger)
  name.vb: BindGPUFragmentStorageTextures(IntPtr, UInteger, Span(Of IntPtr), UInteger)
- uid: SharpSDL3.Sdl.BindGPUGraphicsPipeline(System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.BindGPUGraphicsPipeline(System.IntPtr,System.IntPtr)
  id: BindGPUGraphicsPipeline(System.IntPtr,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: BindGPUGraphicsPipeline(nint, nint)
  nameWithType: Sdl.BindGPUGraphicsPipeline(nint, nint)
  fullName: SharpSDL3.Sdl.BindGPUGraphicsPipeline(nint, nint)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: BindGPUGraphicsPipeline
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 293
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Binds a graphics pipeline on a render pass to be used in rendering.
  remarks: >-
    A graphics pipeline must be bound before making any draw calls.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static void BindGPUGraphicsPipeline(nint renderPass, nint graphicsPipeline)
    parameters:
    - id: renderPass
      type: System.IntPtr
    - id: graphicsPipeline
      type: System.IntPtr
    content.vb: Public Shared Sub BindGPUGraphicsPipeline(renderPass As IntPtr, graphicsPipeline As IntPtr)
  overload: SharpSDL3.Sdl.BindGPUGraphicsPipeline*
  nameWithType.vb: Sdl.BindGPUGraphicsPipeline(IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.BindGPUGraphicsPipeline(System.IntPtr, System.IntPtr)
  name.vb: BindGPUGraphicsPipeline(IntPtr, IntPtr)
- uid: SharpSDL3.Sdl.BindGPUIndexBuffer(System.IntPtr,SharpSDL3.Structs.GpuBufferBinding@,SharpSDL3.Enums.GpuIndexElementSize)
  commentId: M:SharpSDL3.Sdl.BindGPUIndexBuffer(System.IntPtr,SharpSDL3.Structs.GpuBufferBinding@,SharpSDL3.Enums.GpuIndexElementSize)
  id: BindGPUIndexBuffer(System.IntPtr,SharpSDL3.Structs.GpuBufferBinding@,SharpSDL3.Enums.GpuIndexElementSize)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: BindGPUIndexBuffer(nint, in GpuBufferBinding, GpuIndexElementSize)
  nameWithType: Sdl.BindGPUIndexBuffer(nint, in GpuBufferBinding, GpuIndexElementSize)
  fullName: SharpSDL3.Sdl.BindGPUIndexBuffer(nint, in SharpSDL3.Structs.GpuBufferBinding, SharpSDL3.Enums.GpuIndexElementSize)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: BindGPUIndexBuffer
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 309
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Binds an index buffer on a command buffer for use with subsequent draw calls.
  remarks: <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static void BindGPUIndexBuffer(nint renderPass, in GpuBufferBinding binding, GpuIndexElementSize indexElementSize)
    parameters:
    - id: renderPass
      type: System.IntPtr
    - id: binding
      type: SharpSDL3.Structs.GpuBufferBinding
      description: a pointer to a struct containing an index buffer and offset.
    - id: indexElementSize
      type: SharpSDL3.Enums.GpuIndexElementSize
    content.vb: Public Shared Sub BindGPUIndexBuffer(renderPass As IntPtr, binding As GpuBufferBinding, indexElementSize As GpuIndexElementSize)
  overload: SharpSDL3.Sdl.BindGPUIndexBuffer*
  nameWithType.vb: Sdl.BindGPUIndexBuffer(IntPtr, GpuBufferBinding, GpuIndexElementSize)
  fullName.vb: SharpSDL3.Sdl.BindGPUIndexBuffer(System.IntPtr, SharpSDL3.Structs.GpuBufferBinding, SharpSDL3.Enums.GpuIndexElementSize)
  name.vb: BindGPUIndexBuffer(IntPtr, GpuBufferBinding, GpuIndexElementSize)
- uid: SharpSDL3.Sdl.BindGPUVertexBuffers(System.IntPtr,System.UInt32,System.Span{SharpSDL3.Structs.GpuBufferBinding},System.UInt32)
  commentId: M:SharpSDL3.Sdl.BindGPUVertexBuffers(System.IntPtr,System.UInt32,System.Span{SharpSDL3.Structs.GpuBufferBinding},System.UInt32)
  id: BindGPUVertexBuffers(System.IntPtr,System.UInt32,System.Span{SharpSDL3.Structs.GpuBufferBinding},System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: BindGPUVertexBuffers(nint, uint, Span<GpuBufferBinding>, uint)
  nameWithType: Sdl.BindGPUVertexBuffers(nint, uint, Span<GpuBufferBinding>, uint)
  fullName: SharpSDL3.Sdl.BindGPUVertexBuffers(nint, uint, System.Span<SharpSDL3.Structs.GpuBufferBinding>, uint)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: BindGPUVertexBuffers
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 327
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Binds vertex buffers on a command buffer for use with subsequent draw calls.
  remarks: <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static void BindGPUVertexBuffers(nint renderPass, uint firstSlot, Span<GpuBufferBinding> bindings, uint numBindings)
    parameters:
    - id: renderPass
      type: System.IntPtr
    - id: firstSlot
      type: System.UInt32
    - id: bindings
      type: System.Span{SharpSDL3.Structs.GpuBufferBinding}
      description: an array of SDL_GPUBufferBinding structs containing vertex buffers and offset values.
    - id: numBindings
      type: System.UInt32
    content.vb: Public Shared Sub BindGPUVertexBuffers(renderPass As IntPtr, firstSlot As UInteger, bindings As Span(Of GpuBufferBinding), numBindings As UInteger)
  overload: SharpSDL3.Sdl.BindGPUVertexBuffers*
  nameWithType.vb: Sdl.BindGPUVertexBuffers(IntPtr, UInteger, Span(Of GpuBufferBinding), UInteger)
  fullName.vb: SharpSDL3.Sdl.BindGPUVertexBuffers(System.IntPtr, UInteger, System.Span(Of SharpSDL3.Structs.GpuBufferBinding), UInteger)
  name.vb: BindGPUVertexBuffers(IntPtr, UInteger, Span(Of GpuBufferBinding), UInteger)
- uid: SharpSDL3.Sdl.BindGPUVertexSamplers(System.IntPtr,System.UInt32,System.Span{SharpSDL3.Structs.GpuTextureSamplerBinding},System.UInt32)
  commentId: M:SharpSDL3.Sdl.BindGPUVertexSamplers(System.IntPtr,System.UInt32,System.Span{SharpSDL3.Structs.GpuTextureSamplerBinding},System.UInt32)
  id: BindGPUVertexSamplers(System.IntPtr,System.UInt32,System.Span{SharpSDL3.Structs.GpuTextureSamplerBinding},System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: BindGPUVertexSamplers(nint, uint, Span<GpuTextureSamplerBinding>, uint)
  nameWithType: Sdl.BindGPUVertexSamplers(nint, uint, Span<GpuTextureSamplerBinding>, uint)
  fullName: SharpSDL3.Sdl.BindGPUVertexSamplers(nint, uint, System.Span<SharpSDL3.Structs.GpuTextureSamplerBinding>, uint)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: BindGPUVertexSamplers
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 348
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Binds texture-sampler pairs for use on the vertex shader.
  remarks: >-
    The textures must have been created with

    SDL_GPU_TEXTUREUSAGE_SAMPLER.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateGPUShader(System.IntPtr%2cSharpSDL3.Structs.GpuShaderCreateInfo%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void BindGPUVertexSamplers(nint renderPass, uint firstSlot, Span<GpuTextureSamplerBinding> textureSamplerBindings, uint numBindings)
    parameters:
    - id: renderPass
      type: System.IntPtr
    - id: firstSlot
      type: System.UInt32
    - id: textureSamplerBindings
      type: System.Span{SharpSDL3.Structs.GpuTextureSamplerBinding}
    - id: numBindings
      type: System.UInt32
    content.vb: Public Shared Sub BindGPUVertexSamplers(renderPass As IntPtr, firstSlot As UInteger, textureSamplerBindings As Span(Of GpuTextureSamplerBinding), numBindings As UInteger)
  overload: SharpSDL3.Sdl.BindGPUVertexSamplers*
  nameWithType.vb: Sdl.BindGPUVertexSamplers(IntPtr, UInteger, Span(Of GpuTextureSamplerBinding), UInteger)
  fullName.vb: SharpSDL3.Sdl.BindGPUVertexSamplers(System.IntPtr, UInteger, System.Span(Of SharpSDL3.Structs.GpuTextureSamplerBinding), UInteger)
  name.vb: BindGPUVertexSamplers(IntPtr, UInteger, Span(Of GpuTextureSamplerBinding), UInteger)
- uid: SharpSDL3.Sdl.BindGPUVertexStorageBuffers(System.IntPtr,System.UInt32,System.Span{System.IntPtr},System.UInt32)
  commentId: M:SharpSDL3.Sdl.BindGPUVertexStorageBuffers(System.IntPtr,System.UInt32,System.Span{System.IntPtr},System.UInt32)
  id: BindGPUVertexStorageBuffers(System.IntPtr,System.UInt32,System.Span{System.IntPtr},System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: BindGPUVertexStorageBuffers(nint, uint, Span<nint>, uint)
  nameWithType: Sdl.BindGPUVertexStorageBuffers(nint, uint, Span<nint>, uint)
  fullName: SharpSDL3.Sdl.BindGPUVertexStorageBuffers(nint, uint, System.Span<nint>, uint)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: BindGPUVertexStorageBuffers
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 369
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Binds storage buffers for use on the vertex shader.
  remarks: >-
    These buffers must have been created with

    SDL_GPU_BUFFERUSAGE_GRAPHICS_STORAGE_READ.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateGPUShader(System.IntPtr%2cSharpSDL3.Structs.GpuShaderCreateInfo%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void BindGPUVertexStorageBuffers(nint renderPass, uint firstSlot, Span<nint> storageBuffers, uint numBindings)
    parameters:
    - id: renderPass
      type: System.IntPtr
    - id: firstSlot
      type: System.UInt32
    - id: storageBuffers
      type: System.Span{System.IntPtr}
    - id: numBindings
      type: System.UInt32
    content.vb: Public Shared Sub BindGPUVertexStorageBuffers(renderPass As IntPtr, firstSlot As UInteger, storageBuffers As Span(Of IntPtr), numBindings As UInteger)
  overload: SharpSDL3.Sdl.BindGPUVertexStorageBuffers*
  nameWithType.vb: Sdl.BindGPUVertexStorageBuffers(IntPtr, UInteger, Span(Of IntPtr), UInteger)
  fullName.vb: SharpSDL3.Sdl.BindGPUVertexStorageBuffers(System.IntPtr, UInteger, System.Span(Of System.IntPtr), UInteger)
  name.vb: BindGPUVertexStorageBuffers(IntPtr, UInteger, Span(Of IntPtr), UInteger)
- uid: SharpSDL3.Sdl.BindGPUVertexStorageTextures(System.IntPtr,System.UInt32,System.Span{System.IntPtr},System.UInt32)
  commentId: M:SharpSDL3.Sdl.BindGPUVertexStorageTextures(System.IntPtr,System.UInt32,System.Span{System.IntPtr},System.UInt32)
  id: BindGPUVertexStorageTextures(System.IntPtr,System.UInt32,System.Span{System.IntPtr},System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: BindGPUVertexStorageTextures(nint, uint, Span<nint>, uint)
  nameWithType: Sdl.BindGPUVertexStorageTextures(nint, uint, Span<nint>, uint)
  fullName: SharpSDL3.Sdl.BindGPUVertexStorageTextures(nint, uint, System.Span<nint>, uint)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: BindGPUVertexStorageTextures
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 390
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Binds storage textures for use on the vertex shader.
  remarks: >-
    These textures must have been created with

    SDL_GPU_TEXTUREUSAGE_GRAPHICS_STORAGE_READ.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateGPUShader(System.IntPtr%2cSharpSDL3.Structs.GpuShaderCreateInfo%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void BindGPUVertexStorageTextures(nint renderPass, uint firstSlot, Span<nint> storageTextures, uint numBindings)
    parameters:
    - id: renderPass
      type: System.IntPtr
    - id: firstSlot
      type: System.UInt32
    - id: storageTextures
      type: System.Span{System.IntPtr}
    - id: numBindings
      type: System.UInt32
    content.vb: Public Shared Sub BindGPUVertexStorageTextures(renderPass As IntPtr, firstSlot As UInteger, storageTextures As Span(Of IntPtr), numBindings As UInteger)
  overload: SharpSDL3.Sdl.BindGPUVertexStorageTextures*
  nameWithType.vb: Sdl.BindGPUVertexStorageTextures(IntPtr, UInteger, Span(Of IntPtr), UInteger)
  fullName.vb: SharpSDL3.Sdl.BindGPUVertexStorageTextures(System.IntPtr, UInteger, System.Span(Of System.IntPtr), UInteger)
  name.vb: BindGPUVertexStorageTextures(IntPtr, UInteger, Span(Of IntPtr), UInteger)
- uid: SharpSDL3.Sdl.BlitGPUTexture(System.IntPtr,SharpSDL3.Structs.GpuBlitInfo@)
  commentId: M:SharpSDL3.Sdl.BlitGPUTexture(System.IntPtr,SharpSDL3.Structs.GpuBlitInfo@)
  id: BlitGPUTexture(System.IntPtr,SharpSDL3.Structs.GpuBlitInfo@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: BlitGPUTexture(nint, in GpuBlitInfo)
  nameWithType: Sdl.BlitGPUTexture(nint, in GpuBlitInfo)
  fullName: SharpSDL3.Sdl.BlitGPUTexture(nint, in SharpSDL3.Structs.GpuBlitInfo)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: BlitGPUTexture
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 407
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Blits from a source texture region to a destination texture region.
  remarks: >-
    This function must not be called inside of any pass.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static void BlitGPUTexture(nint commandBuffer, in GpuBlitInfo info)
    parameters:
    - id: commandBuffer
      type: System.IntPtr
    - id: info
      type: SharpSDL3.Structs.GpuBlitInfo
      description: the blit info struct containing the blit parameters.
    content.vb: Public Shared Sub BlitGPUTexture(commandBuffer As IntPtr, info As GpuBlitInfo)
  overload: SharpSDL3.Sdl.BlitGPUTexture*
  nameWithType.vb: Sdl.BlitGPUTexture(IntPtr, GpuBlitInfo)
  fullName.vb: SharpSDL3.Sdl.BlitGPUTexture(System.IntPtr, SharpSDL3.Structs.GpuBlitInfo)
  name.vb: BlitGPUTexture(IntPtr, GpuBlitInfo)
- uid: SharpSDL3.Sdl.CalculateGPUTextureFormatSize(SharpSDL3.Enums.GpuTextureFormat,System.UInt32,System.UInt32,System.UInt32)
  commentId: M:SharpSDL3.Sdl.CalculateGPUTextureFormatSize(SharpSDL3.Enums.GpuTextureFormat,System.UInt32,System.UInt32,System.UInt32)
  id: CalculateGPUTextureFormatSize(SharpSDL3.Enums.GpuTextureFormat,System.UInt32,System.UInt32,System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CalculateGPUTextureFormatSize(GpuTextureFormat, uint, uint, uint)
  nameWithType: Sdl.CalculateGPUTextureFormatSize(GpuTextureFormat, uint, uint, uint)
  fullName: SharpSDL3.Sdl.CalculateGPUTextureFormatSize(SharpSDL3.Enums.GpuTextureFormat, uint, uint, uint)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CalculateGPUTextureFormatSize
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 425
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Calculate the size in bytes of a texture format with dimensions.
  remarks: <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static uint CalculateGPUTextureFormatSize(GpuTextureFormat format, uint width, uint height, uint depthOrLayerCount)
    parameters:
    - id: format
      type: SharpSDL3.Enums.GpuTextureFormat
      description: a texture format.
    - id: width
      type: System.UInt32
      description: width in pixels.
    - id: height
      type: System.UInt32
      description: height in pixels.
    - id: depthOrLayerCount
      type: System.UInt32
    return:
      type: System.UInt32
      description: Returns the size of a texture with this format anddimensions.
    content.vb: Public Shared Function CalculateGPUTextureFormatSize(format As GpuTextureFormat, width As UInteger, height As UInteger, depthOrLayerCount As UInteger) As UInteger
  overload: SharpSDL3.Sdl.CalculateGPUTextureFormatSize*
  nameWithType.vb: Sdl.CalculateGPUTextureFormatSize(GpuTextureFormat, UInteger, UInteger, UInteger)
  fullName.vb: SharpSDL3.Sdl.CalculateGPUTextureFormatSize(SharpSDL3.Enums.GpuTextureFormat, UInteger, UInteger, UInteger)
  name.vb: CalculateGPUTextureFormatSize(GpuTextureFormat, UInteger, UInteger, UInteger)
- uid: SharpSDL3.Sdl.CancelGPUCommandBuffer(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.CancelGPUCommandBuffer(System.IntPtr)
  id: CancelGPUCommandBuffer(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CancelGPUCommandBuffer(nint)
  nameWithType: Sdl.CancelGPUCommandBuffer(nint)
  fullName: SharpSDL3.Sdl.CancelGPUCommandBuffer(nint)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CancelGPUCommandBuffer
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 444
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Cancels a command buffer.
  remarks: >-
    None of the enqueued commands are executed.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.WaitAndAcquireGPUSwapchainTexture(System.IntPtr%2cSystem.IntPtr%2cSystem.IntPtr%40%2cSystem.UInt32%40%2cSystem.UInt32%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.AcquireGPUCommandBuffer(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.AcquireGPUSwapchainTexture(System.IntPtr%2cSystem.IntPtr%2cSystem.IntPtr%40%2cSystem.UInt32%40%2cSystem.UInt32%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool CancelGPUCommandBuffer(nint commandBuffer)
    parameters:
    - id: commandBuffer
      type: System.IntPtr
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on error; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function CancelGPUCommandBuffer(commandBuffer As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.CancelGPUCommandBuffer*
  nameWithType.vb: Sdl.CancelGPUCommandBuffer(IntPtr)
  fullName.vb: SharpSDL3.Sdl.CancelGPUCommandBuffer(System.IntPtr)
  name.vb: CancelGPUCommandBuffer(IntPtr)
- uid: SharpSDL3.Sdl.ClaimWindowForGPUDevice(System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.ClaimWindowForGPUDevice(System.IntPtr,System.IntPtr)
  id: ClaimWindowForGPUDevice(System.IntPtr,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ClaimWindowForGPUDevice(nint, nint)
  nameWithType: Sdl.ClaimWindowForGPUDevice(nint, nint)
  fullName: SharpSDL3.Sdl.ClaimWindowForGPUDevice(nint, nint)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ClaimWindowForGPUDevice
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 469
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Claims a window, creating a swapchain structure for it.
  remarks: >-
    This must be called before

    SDL_AcquireGPUSwapchainTexture is called

    using the window. You should only call this function from the thread that

    created the window.

    <p><strong>Thread Safety:</strong> This function should only be called from the thread that created thewindow.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.WaitAndAcquireGPUSwapchainTexture(System.IntPtr%2cSystem.IntPtr%2cSystem.IntPtr%40%2cSystem.UInt32%40%2cSystem.UInt32%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.ReleaseWindowFromGPUDevice(System.IntPtr%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.WindowSupportsGPUPresentMode(System.IntPtr%2cSystem.IntPtr%2cSharpSDL3.Enums.GpuPresentMode)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.WindowSupportsGPUSwapchainComposition(System.IntPtr%2cSystem.IntPtr%2cSharpSDL3.Enums.GpuSwapchainComposition)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool ClaimWindowForGPUDevice(nint device, nint window)
    parameters:
    - id: device
      type: System.IntPtr
      description: a GPU context.
    - id: window
      type: System.IntPtr
      description: an SDL_Window.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function ClaimWindowForGPUDevice(device As IntPtr, window As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.ClaimWindowForGPUDevice*
  nameWithType.vb: Sdl.ClaimWindowForGPUDevice(IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.ClaimWindowForGPUDevice(System.IntPtr, System.IntPtr)
  name.vb: ClaimWindowForGPUDevice(IntPtr, IntPtr)
- uid: SharpSDL3.Sdl.CopyGPUBufferToBuffer(System.IntPtr,SharpSDL3.Structs.GpuBufferLocation@,SharpSDL3.Structs.GpuBufferLocation@,System.UInt32,System.Boolean)
  commentId: M:SharpSDL3.Sdl.CopyGPUBufferToBuffer(System.IntPtr,SharpSDL3.Structs.GpuBufferLocation@,SharpSDL3.Structs.GpuBufferLocation@,System.UInt32,System.Boolean)
  id: CopyGPUBufferToBuffer(System.IntPtr,SharpSDL3.Structs.GpuBufferLocation@,SharpSDL3.Structs.GpuBufferLocation@,System.UInt32,System.Boolean)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CopyGPUBufferToBuffer(nint, in GpuBufferLocation, in GpuBufferLocation, uint, bool)
  nameWithType: Sdl.CopyGPUBufferToBuffer(nint, in GpuBufferLocation, in GpuBufferLocation, uint, bool)
  fullName: SharpSDL3.Sdl.CopyGPUBufferToBuffer(nint, in SharpSDL3.Structs.GpuBufferLocation, in SharpSDL3.Structs.GpuBufferLocation, uint, bool)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CopyGPUBufferToBuffer
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 492
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Performs a buffer-to-buffer copy.
  remarks: >-
    This copy occurs on the GPU timeline. You may assume the copy has finished

    in subsequent commands.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static void CopyGPUBufferToBuffer(nint copyPass, in GpuBufferLocation source, in GpuBufferLocation destination, uint size, bool cycle)
    parameters:
    - id: copyPass
      type: System.IntPtr
    - id: source
      type: SharpSDL3.Structs.GpuBufferLocation
      description: the buffer and offset to copy from.
    - id: destination
      type: SharpSDL3.Structs.GpuBufferLocation
      description: the buffer and offset to copy to.
    - id: size
      type: System.UInt32
      description: the length of the buffer to copy.
    - id: cycle
      type: System.Boolean
      description: if <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, cycles the destination buffer if it is already bound, otherwise overwrites the data.
    content.vb: Public Shared Sub CopyGPUBufferToBuffer(copyPass As IntPtr, source As GpuBufferLocation, destination As GpuBufferLocation, size As UInteger, cycle As Boolean)
  overload: SharpSDL3.Sdl.CopyGPUBufferToBuffer*
  nameWithType.vb: Sdl.CopyGPUBufferToBuffer(IntPtr, GpuBufferLocation, GpuBufferLocation, UInteger, Boolean)
  fullName.vb: SharpSDL3.Sdl.CopyGPUBufferToBuffer(System.IntPtr, SharpSDL3.Structs.GpuBufferLocation, SharpSDL3.Structs.GpuBufferLocation, UInteger, Boolean)
  name.vb: CopyGPUBufferToBuffer(IntPtr, GpuBufferLocation, GpuBufferLocation, UInteger, Boolean)
- uid: SharpSDL3.Sdl.CopyGPUTextureToTexture(System.IntPtr,SharpSDL3.Structs.GpuTextureLocation@,SharpSDL3.Structs.GpuTextureLocation@,System.UInt32,System.UInt32,System.UInt32,System.Boolean)
  commentId: M:SharpSDL3.Sdl.CopyGPUTextureToTexture(System.IntPtr,SharpSDL3.Structs.GpuTextureLocation@,SharpSDL3.Structs.GpuTextureLocation@,System.UInt32,System.UInt32,System.UInt32,System.Boolean)
  id: CopyGPUTextureToTexture(System.IntPtr,SharpSDL3.Structs.GpuTextureLocation@,SharpSDL3.Structs.GpuTextureLocation@,System.UInt32,System.UInt32,System.UInt32,System.Boolean)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CopyGPUTextureToTexture(nint, in GpuTextureLocation, in GpuTextureLocation, uint, uint, uint, bool)
  nameWithType: Sdl.CopyGPUTextureToTexture(nint, in GpuTextureLocation, in GpuTextureLocation, uint, uint, uint, bool)
  fullName: SharpSDL3.Sdl.CopyGPUTextureToTexture(nint, in SharpSDL3.Structs.GpuTextureLocation, in SharpSDL3.Structs.GpuTextureLocation, uint, uint, uint, bool)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CopyGPUTextureToTexture
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 515
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Performs a texture-to-texture copy.
  remarks: >-
    This copy occurs on the GPU timeline. You may assume the copy has finished

    in subsequent commands.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static void CopyGPUTextureToTexture(nint copyPass, in GpuTextureLocation source, in GpuTextureLocation destination, uint w, uint h, uint d, bool cycle)
    parameters:
    - id: copyPass
      type: System.IntPtr
    - id: source
      type: SharpSDL3.Structs.GpuTextureLocation
      description: a source texture region.
    - id: destination
      type: SharpSDL3.Structs.GpuTextureLocation
      description: a destination texture region.
    - id: w
      type: System.UInt32
      description: the width of the region to copy.
    - id: h
      type: System.UInt32
      description: the height of the region to copy.
    - id: d
      type: System.UInt32
      description: the depth of the region to copy.
    - id: cycle
      type: System.Boolean
      description: if <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, cycles the destination texture if the destination texture is bound, otherwise overwrites the data.
    content.vb: Public Shared Sub CopyGPUTextureToTexture(copyPass As IntPtr, source As GpuTextureLocation, destination As GpuTextureLocation, w As UInteger, h As UInteger, d As UInteger, cycle As Boolean)
  overload: SharpSDL3.Sdl.CopyGPUTextureToTexture*
  nameWithType.vb: Sdl.CopyGPUTextureToTexture(IntPtr, GpuTextureLocation, GpuTextureLocation, UInteger, UInteger, UInteger, Boolean)
  fullName.vb: SharpSDL3.Sdl.CopyGPUTextureToTexture(System.IntPtr, SharpSDL3.Structs.GpuTextureLocation, SharpSDL3.Structs.GpuTextureLocation, UInteger, UInteger, UInteger, Boolean)
  name.vb: CopyGPUTextureToTexture(IntPtr, GpuTextureLocation, GpuTextureLocation, UInteger, UInteger, UInteger, Boolean)
- uid: SharpSDL3.Sdl.CreateGPUBuffer(System.IntPtr,SharpSDL3.Structs.GpuBufferCreateInfo@)
  commentId: M:SharpSDL3.Sdl.CreateGPUBuffer(System.IntPtr,SharpSDL3.Structs.GpuBufferCreateInfo@)
  id: CreateGPUBuffer(System.IntPtr,SharpSDL3.Structs.GpuBufferCreateInfo@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CreateGPUBuffer(nint, in GpuBufferCreateInfo)
  nameWithType: Sdl.CreateGPUBuffer(nint, in GpuBufferCreateInfo)
  fullName: SharpSDL3.Sdl.CreateGPUBuffer(nint, in SharpSDL3.Structs.GpuBufferCreateInfo)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CreateGPUBuffer
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 546
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Creates a buffer object to be used in graphics or compute workflows.
  remarks: >-
    The contents of this buffer are undefined until data is written to the

    buffer.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.UploadToGPUBuffer(System.IntPtr%2cSharpSDL3.Structs.GpuTransferBufferLocation%40%2cSharpSDL3.Structs.GpuBufferRegion%40%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.DownloadFromGPUBuffer(System.IntPtr%2cSharpSDL3.Structs.GpuBufferRegion%40%2cSharpSDL3.Structs.GpuTransferBufferLocation%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.CopyGPUBufferToBuffer(System.IntPtr%2cSharpSDL3.Structs.GpuBufferLocation%40%2cSharpSDL3.Structs.GpuBufferLocation%40%2cSystem.UInt32%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.BindGPUVertexBuffers(System.IntPtr%2cSystem.UInt32%2cSystem.Span%7bSharpSDL3.Structs.GpuBufferBinding%7d%2cSystem.UInt32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.BindGPUIndexBuffer(System.IntPtr%2cSharpSDL3.Structs.GpuBufferBinding%40%2cSharpSDL3.Enums.GpuIndexElementSize)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.BindGPUVertexStorageBuffers(System.IntPtr%2cSystem.UInt32%2cSystem.Span%7bSystem.IntPtr%7d%2cSystem.UInt32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.BindGPUFragmentStorageBuffers(System.IntPtr%2cSystem.UInt32%2cSystem.Span%7bSystem.IntPtr%7d%2cSystem.UInt32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.DrawGPUPrimitivesIndirect(System.IntPtr%2cSystem.IntPtr%2cSystem.UInt32%2cSystem.UInt32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.DrawGPUIndexedPrimitivesIndirect(System.IntPtr%2cSystem.IntPtr%2cSystem.UInt32%2cSystem.UInt32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.BindGPUComputeStorageBuffers(System.IntPtr%2cSystem.UInt32%2cSystem.Span%7bSystem.IntPtr%7d%2cSystem.UInt32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.DispatchGPUComputeIndirect(System.IntPtr%2cSystem.IntPtr%2cSystem.UInt32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.ReleaseGPUBuffer(System.IntPtr%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint CreateGPUBuffer(nint device, in GpuBufferCreateInfo createinfo)
    parameters:
    - id: device
      type: System.IntPtr
      description: a GPU Context.
    - id: createinfo
      type: SharpSDL3.Structs.GpuBufferCreateInfo
      description: a struct describing the state of the buffer to create.
    return:
      type: System.IntPtr
      description: (SDL_GPUBuffer *) Returns a buffer object on success, or<a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function CreateGPUBuffer(device As IntPtr, createinfo As GpuBufferCreateInfo) As IntPtr
  overload: SharpSDL3.Sdl.CreateGPUBuffer*
  nameWithType.vb: Sdl.CreateGPUBuffer(IntPtr, GpuBufferCreateInfo)
  fullName.vb: SharpSDL3.Sdl.CreateGPUBuffer(System.IntPtr, SharpSDL3.Structs.GpuBufferCreateInfo)
  name.vb: CreateGPUBuffer(IntPtr, GpuBufferCreateInfo)
- uid: SharpSDL3.Sdl.CreateGPUComputePipeline(System.IntPtr,SharpSDL3.Structs.GpuComputePipelineCreateInfo@)
  commentId: M:SharpSDL3.Sdl.CreateGPUComputePipeline(System.IntPtr,SharpSDL3.Structs.GpuComputePipelineCreateInfo@)
  id: CreateGPUComputePipeline(System.IntPtr,SharpSDL3.Structs.GpuComputePipelineCreateInfo@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CreateGPUComputePipeline(nint, in GpuComputePipelineCreateInfo)
  nameWithType: Sdl.CreateGPUComputePipeline(nint, in GpuComputePipelineCreateInfo)
  fullName: SharpSDL3.Sdl.CreateGPUComputePipeline(nint, in SharpSDL3.Structs.GpuComputePipelineCreateInfo)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CreateGPUComputePipeline
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 566
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Creates a pipeline object to be used in a compute workflow.
  remarks: >-
    Shader resource bindings must be authored to follow a particular order

    depending on the shader format.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.BindGPUComputePipeline(System.IntPtr%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.ReleaseGPUComputePipeline(System.IntPtr%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint CreateGPUComputePipeline(nint device, in GpuComputePipelineCreateInfo createinfo)
    parameters:
    - id: device
      type: System.IntPtr
      description: a GPU Context.
    - id: createinfo
      type: SharpSDL3.Structs.GpuComputePipelineCreateInfo
      description: a struct describing the state of the compute pipeline to create.
    return:
      type: System.IntPtr
      description: (SDL_GPUComputePipeline *) Returns a computepipeline object on success, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function CreateGPUComputePipeline(device As IntPtr, createinfo As GpuComputePipelineCreateInfo) As IntPtr
  overload: SharpSDL3.Sdl.CreateGPUComputePipeline*
  nameWithType.vb: Sdl.CreateGPUComputePipeline(IntPtr, GpuComputePipelineCreateInfo)
  fullName.vb: SharpSDL3.Sdl.CreateGPUComputePipeline(System.IntPtr, SharpSDL3.Structs.GpuComputePipelineCreateInfo)
  name.vb: CreateGPUComputePipeline(IntPtr, GpuComputePipelineCreateInfo)
- uid: SharpSDL3.Sdl.CreateGPUDevice(SharpSDL3.Enums.GpuShaderFormat,System.Boolean,System.String)
  commentId: M:SharpSDL3.Sdl.CreateGPUDevice(SharpSDL3.Enums.GpuShaderFormat,System.Boolean,System.String)
  id: CreateGPUDevice(SharpSDL3.Enums.GpuShaderFormat,System.Boolean,System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CreateGPUDevice(GpuShaderFormat, bool, string)
  nameWithType: Sdl.CreateGPUDevice(GpuShaderFormat, bool, string)
  fullName: SharpSDL3.Sdl.CreateGPUDevice(SharpSDL3.Enums.GpuShaderFormat, bool, string)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CreateGPUDevice
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 589
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Creates a GPU context.
  remarks: >-
    The GPU driver name can be one of the following:

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateGPUDeviceWithProperties(System.UInt32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetGPUShaderFormats(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetGPUDeviceDriver(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.DestroyGPUDevice(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GPUSupportsShaderFormats(SharpSDL3.Enums.GpuShaderFormat%2cSystem.String)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint CreateGPUDevice(GpuShaderFormat formatFlags, bool debugMode, string name)
    parameters:
    - id: formatFlags
      type: SharpSDL3.Enums.GpuShaderFormat
    - id: debugMode
      type: System.Boolean
    - id: name
      type: System.String
      description: the preferred GPU driver, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to let SDL pick the optimal driver.
    return:
      type: System.IntPtr
      description: (SDL_GPUDevice *) Returns a GPU context on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function CreateGPUDevice(formatFlags As GpuShaderFormat, debugMode As Boolean, name As String) As IntPtr
  overload: SharpSDL3.Sdl.CreateGPUDevice*
  nameWithType.vb: Sdl.CreateGPUDevice(GpuShaderFormat, Boolean, String)
  fullName.vb: SharpSDL3.Sdl.CreateGPUDevice(SharpSDL3.Enums.GpuShaderFormat, Boolean, String)
  name.vb: CreateGPUDevice(GpuShaderFormat, Boolean, String)
- uid: SharpSDL3.Sdl.CreateGPUDeviceWithProperties(System.UInt32)
  commentId: M:SharpSDL3.Sdl.CreateGPUDeviceWithProperties(System.UInt32)
  id: CreateGPUDeviceWithProperties(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CreateGPUDeviceWithProperties(uint)
  nameWithType: Sdl.CreateGPUDeviceWithProperties(uint)
  fullName: SharpSDL3.Sdl.CreateGPUDeviceWithProperties(uint)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CreateGPUDeviceWithProperties
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 612
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Creates a GPU context.
  remarks: >-
    These are the supported properties:

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetGPUShaderFormats(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetGPUDeviceDriver(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.DestroyGPUDevice(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GPUSupportsProperties(System.UInt32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint CreateGPUDeviceWithProperties(uint props)
    parameters:
    - id: props
      type: System.UInt32
      description: the properties to use.
    return:
      type: System.IntPtr
      description: (SDL_GPUDevice *) Returns a GPU context on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function CreateGPUDeviceWithProperties(props As UInteger) As IntPtr
  overload: SharpSDL3.Sdl.CreateGPUDeviceWithProperties*
  nameWithType.vb: Sdl.CreateGPUDeviceWithProperties(UInteger)
  fullName.vb: SharpSDL3.Sdl.CreateGPUDeviceWithProperties(UInteger)
  name.vb: CreateGPUDeviceWithProperties(UInteger)
- uid: SharpSDL3.Sdl.CreateGPUGraphicsPipeline(System.IntPtr,SharpSDL3.Structs.GpuGraphicsPipelineCreateInfo@)
  commentId: M:SharpSDL3.Sdl.CreateGPUGraphicsPipeline(System.IntPtr,SharpSDL3.Structs.GpuGraphicsPipelineCreateInfo@)
  id: CreateGPUGraphicsPipeline(System.IntPtr,SharpSDL3.Structs.GpuGraphicsPipelineCreateInfo@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CreateGPUGraphicsPipeline(nint, in GpuGraphicsPipelineCreateInfo)
  nameWithType: Sdl.CreateGPUGraphicsPipeline(nint, in GpuGraphicsPipelineCreateInfo)
  fullName: SharpSDL3.Sdl.CreateGPUGraphicsPipeline(nint, in SharpSDL3.Structs.GpuGraphicsPipelineCreateInfo)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CreateGPUGraphicsPipeline
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 630
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Creates a pipeline object to be used in a graphics workflow.
  remarks: >-
    There are optional properties that can be provided through props. These

    are the supported properties:

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateGPUShader(System.IntPtr%2cSharpSDL3.Structs.GpuShaderCreateInfo%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.BindGPUGraphicsPipeline(System.IntPtr%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.ReleaseGPUGraphicsPipeline(System.IntPtr%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint CreateGPUGraphicsPipeline(nint device, in GpuGraphicsPipelineCreateInfo createinfo)
    parameters:
    - id: device
      type: System.IntPtr
      description: a GPU Context.
    - id: createinfo
      type: SharpSDL3.Structs.GpuGraphicsPipelineCreateInfo
      description: a struct describing the state of the graphics pipeline to create.
    return:
      type: System.IntPtr
      description: (SDL_GPUGraphicsPipeline *) Returns a graphicspipeline object on success, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function CreateGPUGraphicsPipeline(device As IntPtr, createinfo As GpuGraphicsPipelineCreateInfo) As IntPtr
  overload: SharpSDL3.Sdl.CreateGPUGraphicsPipeline*
  nameWithType.vb: Sdl.CreateGPUGraphicsPipeline(IntPtr, GpuGraphicsPipelineCreateInfo)
  fullName.vb: SharpSDL3.Sdl.CreateGPUGraphicsPipeline(System.IntPtr, SharpSDL3.Structs.GpuGraphicsPipelineCreateInfo)
  name.vb: CreateGPUGraphicsPipeline(IntPtr, GpuGraphicsPipelineCreateInfo)
- uid: SharpSDL3.Sdl.CreateGPUSampler(System.IntPtr,SharpSDL3.Structs.GpuSamplerCreateInfo@)
  commentId: M:SharpSDL3.Sdl.CreateGPUSampler(System.IntPtr,SharpSDL3.Structs.GpuSamplerCreateInfo@)
  id: CreateGPUSampler(System.IntPtr,SharpSDL3.Structs.GpuSamplerCreateInfo@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CreateGPUSampler(nint, in GpuSamplerCreateInfo)
  nameWithType: Sdl.CreateGPUSampler(nint, in GpuSamplerCreateInfo)
  fullName: SharpSDL3.Sdl.CreateGPUSampler(nint, in SharpSDL3.Structs.GpuSamplerCreateInfo)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CreateGPUSampler
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 651
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Creates a sampler object to be used when binding textures in a graphics workflow.
  remarks: >-
    There are optional properties that can be provided through props. These

    are the supported properties:

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.BindGPUVertexSamplers(System.IntPtr%2cSystem.UInt32%2cSystem.Span%7bSharpSDL3.Structs.GpuTextureSamplerBinding%7d%2cSystem.UInt32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.BindGPUFragmentSamplers(System.IntPtr%2cSystem.UInt32%2cSystem.Span%7bSharpSDL3.Structs.GpuTextureSamplerBinding%7d%2cSystem.UInt32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.ReleaseGPUSampler(System.IntPtr%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint CreateGPUSampler(nint device, in GpuSamplerCreateInfo createinfo)
    parameters:
    - id: device
      type: System.IntPtr
      description: a GPU Context.
    - id: createinfo
      type: SharpSDL3.Structs.GpuSamplerCreateInfo
      description: a struct describing the state of the sampler to create.
    return:
      type: System.IntPtr
      description: (SDL_GPUSampler *) Returns a sampler object on success,  <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function CreateGPUSampler(device As IntPtr, createinfo As GpuSamplerCreateInfo) As IntPtr
  overload: SharpSDL3.Sdl.CreateGPUSampler*
  nameWithType.vb: Sdl.CreateGPUSampler(IntPtr, GpuSamplerCreateInfo)
  fullName.vb: SharpSDL3.Sdl.CreateGPUSampler(System.IntPtr, SharpSDL3.Structs.GpuSamplerCreateInfo)
  name.vb: CreateGPUSampler(IntPtr, GpuSamplerCreateInfo)
- uid: SharpSDL3.Sdl.CreateGPUShader(System.IntPtr,SharpSDL3.Structs.GpuShaderCreateInfo@)
  commentId: M:SharpSDL3.Sdl.CreateGPUShader(System.IntPtr,SharpSDL3.Structs.GpuShaderCreateInfo@)
  id: CreateGPUShader(System.IntPtr,SharpSDL3.Structs.GpuShaderCreateInfo@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CreateGPUShader(nint, in GpuShaderCreateInfo)
  nameWithType: Sdl.CreateGPUShader(nint, in GpuShaderCreateInfo)
  fullName: SharpSDL3.Sdl.CreateGPUShader(nint, in SharpSDL3.Structs.GpuShaderCreateInfo)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CreateGPUShader
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 671
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Creates a shader to be used when creating a graphics pipeline.
  remarks: >-
    Shader resource bindings must be authored to follow a particular order

    depending on the shader format.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateGPUGraphicsPipeline(System.IntPtr%2cSharpSDL3.Structs.GpuGraphicsPipelineCreateInfo%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.ReleaseGPUShader(System.IntPtr%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint CreateGPUShader(nint device, in GpuShaderCreateInfo createinfo)
    parameters:
    - id: device
      type: System.IntPtr
      description: a GPU Context.
    - id: createinfo
      type: SharpSDL3.Structs.GpuShaderCreateInfo
      description: a struct describing the state of the shader to create.
    return:
      type: System.IntPtr
      description: (SDL_GPUShader *) Returns a shader object on success, or<a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function CreateGPUShader(device As IntPtr, createinfo As GpuShaderCreateInfo) As IntPtr
  overload: SharpSDL3.Sdl.CreateGPUShader*
  nameWithType.vb: Sdl.CreateGPUShader(IntPtr, GpuShaderCreateInfo)
  fullName.vb: SharpSDL3.Sdl.CreateGPUShader(System.IntPtr, SharpSDL3.Structs.GpuShaderCreateInfo)
  name.vb: CreateGPUShader(IntPtr, GpuShaderCreateInfo)
- uid: SharpSDL3.Sdl.CreateGPUTexture(System.IntPtr,SharpSDL3.Structs.GpuTextureCreateInfo@)
  commentId: M:SharpSDL3.Sdl.CreateGPUTexture(System.IntPtr,SharpSDL3.Structs.GpuTextureCreateInfo@)
  id: CreateGPUTexture(System.IntPtr,SharpSDL3.Structs.GpuTextureCreateInfo@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CreateGPUTexture(nint, in GpuTextureCreateInfo)
  nameWithType: Sdl.CreateGPUTexture(nint, in GpuTextureCreateInfo)
  fullName: SharpSDL3.Sdl.CreateGPUTexture(nint, in SharpSDL3.Structs.GpuTextureCreateInfo)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CreateGPUTexture
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 699
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Creates a texture object to be used in graphics or compute workflows.
  remarks: >-
    The contents of this texture are undefined until data is written to the

    texture.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.UploadToGPUTexture(System.IntPtr%2cSharpSDL3.Structs.GpuTextureTransferInfo%40%2cSharpSDL3.Structs.GpuTextureRegion%40%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.DownloadFromGPUTexture(System.IntPtr%2cSharpSDL3.Structs.GpuTextureRegion%40%2cSharpSDL3.Structs.GpuTextureTransferInfo%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.BindGPUVertexSamplers(System.IntPtr%2cSystem.UInt32%2cSystem.Span%7bSharpSDL3.Structs.GpuTextureSamplerBinding%7d%2cSystem.UInt32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.BindGPUVertexStorageTextures(System.IntPtr%2cSystem.UInt32%2cSystem.Span%7bSystem.IntPtr%7d%2cSystem.UInt32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.BindGPUFragmentSamplers(System.IntPtr%2cSystem.UInt32%2cSystem.Span%7bSharpSDL3.Structs.GpuTextureSamplerBinding%7d%2cSystem.UInt32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.BindGPUFragmentStorageTextures(System.IntPtr%2cSystem.UInt32%2cSystem.Span%7bSystem.IntPtr%7d%2cSystem.UInt32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.BindGPUComputeStorageTextures(System.IntPtr%2cSystem.UInt32%2cSystem.Span%7bSystem.IntPtr%7d%2cSystem.UInt32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.BlitGPUTexture(System.IntPtr%2cSharpSDL3.Structs.GpuBlitInfo%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.ReleaseGPUTexture(System.IntPtr%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GPUTextureSupportsFormat(System.IntPtr%2cSharpSDL3.Enums.GpuTextureFormat%2cSharpSDL3.Enums.GpuTextureType%2cSharpSDL3.Enums.GpuTextureUsageFlags)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint CreateGPUTexture(nint device, in GpuTextureCreateInfo createinfo)
    parameters:
    - id: device
      type: System.IntPtr
      description: a GPU Context.
    - id: createinfo
      type: SharpSDL3.Structs.GpuTextureCreateInfo
      description: a struct describing the state of the texture to create.
    return:
      type: System.IntPtr
      description: (SDL_GPUTexture *) Returns a texture object on success,  <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function CreateGPUTexture(device As IntPtr, createinfo As GpuTextureCreateInfo) As IntPtr
  overload: SharpSDL3.Sdl.CreateGPUTexture*
  nameWithType.vb: Sdl.CreateGPUTexture(IntPtr, GpuTextureCreateInfo)
  fullName.vb: SharpSDL3.Sdl.CreateGPUTexture(System.IntPtr, SharpSDL3.Structs.GpuTextureCreateInfo)
  name.vb: CreateGPUTexture(IntPtr, GpuTextureCreateInfo)
- uid: SharpSDL3.Sdl.CreateGPUTransferBuffer(System.IntPtr,SharpSDL3.Structs.GpuTransferBufferCreateInfo@)
  commentId: M:SharpSDL3.Sdl.CreateGPUTransferBuffer(System.IntPtr,SharpSDL3.Structs.GpuTransferBufferCreateInfo@)
  id: CreateGPUTransferBuffer(System.IntPtr,SharpSDL3.Structs.GpuTransferBufferCreateInfo@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CreateGPUTransferBuffer(nint, in GpuTransferBufferCreateInfo)
  nameWithType: Sdl.CreateGPUTransferBuffer(nint, in GpuTransferBufferCreateInfo)
  fullName: SharpSDL3.Sdl.CreateGPUTransferBuffer(nint, in SharpSDL3.Structs.GpuTransferBufferCreateInfo)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CreateGPUTransferBuffer
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 722
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Creates a transfer buffer to be used when uploading to or downloading from graphics resources.
  remarks: >-
    Download buffers can be particularly expensive to create, so it is good

    practice to reuse them if data will be downloaded regularly.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.UploadToGPUBuffer(System.IntPtr%2cSharpSDL3.Structs.GpuTransferBufferLocation%40%2cSharpSDL3.Structs.GpuBufferRegion%40%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.DownloadFromGPUBuffer(System.IntPtr%2cSharpSDL3.Structs.GpuBufferRegion%40%2cSharpSDL3.Structs.GpuTransferBufferLocation%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.UploadToGPUTexture(System.IntPtr%2cSharpSDL3.Structs.GpuTextureTransferInfo%40%2cSharpSDL3.Structs.GpuTextureRegion%40%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.DownloadFromGPUTexture(System.IntPtr%2cSharpSDL3.Structs.GpuTextureRegion%40%2cSharpSDL3.Structs.GpuTextureTransferInfo%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.ReleaseGPUTransferBuffer(System.IntPtr%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint CreateGPUTransferBuffer(nint device, in GpuTransferBufferCreateInfo createinfo)
    parameters:
    - id: device
      type: System.IntPtr
      description: a GPU Context.
    - id: createinfo
      type: SharpSDL3.Structs.GpuTransferBufferCreateInfo
      description: a struct describing the state of the transfer buffer to create.
    return:
      type: System.IntPtr
      description: (SDL_GPUTransferBuffer *) Returns a transferbuffer on success, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref>for more information.
    content.vb: Public Shared Function CreateGPUTransferBuffer(device As IntPtr, createinfo As GpuTransferBufferCreateInfo) As IntPtr
  overload: SharpSDL3.Sdl.CreateGPUTransferBuffer*
  nameWithType.vb: Sdl.CreateGPUTransferBuffer(IntPtr, GpuTransferBufferCreateInfo)
  fullName.vb: SharpSDL3.Sdl.CreateGPUTransferBuffer(System.IntPtr, SharpSDL3.Structs.GpuTransferBufferCreateInfo)
  name.vb: CreateGPUTransferBuffer(IntPtr, GpuTransferBufferCreateInfo)
- uid: SharpSDL3.Sdl.DestroyGPUDevice(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.DestroyGPUDevice(System.IntPtr)
  id: DestroyGPUDevice(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: DestroyGPUDevice(nint)
  nameWithType: Sdl.DestroyGPUDevice(nint)
  fullName: SharpSDL3.Sdl.DestroyGPUDevice(nint)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: DestroyGPUDevice
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 737
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Destroys a GPU context previously returned by SDL_CreateGPUDevice.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateGPUDevice(SharpSDL3.Enums.GpuShaderFormat%2cSystem.Boolean%2cSystem.String)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void DestroyGPUDevice(nint device)
    parameters:
    - id: device
      type: System.IntPtr
      description: a GPU Context to destroy.
    content.vb: Public Shared Sub DestroyGPUDevice(device As IntPtr)
  overload: SharpSDL3.Sdl.DestroyGPUDevice*
  nameWithType.vb: Sdl.DestroyGPUDevice(IntPtr)
  fullName.vb: SharpSDL3.Sdl.DestroyGPUDevice(System.IntPtr)
  name.vb: DestroyGPUDevice(IntPtr)
- uid: SharpSDL3.Sdl.DispatchGPUCompute(System.IntPtr,System.UInt32,System.UInt32,System.UInt32)
  commentId: M:SharpSDL3.Sdl.DispatchGPUCompute(System.IntPtr,System.UInt32,System.UInt32,System.UInt32)
  id: DispatchGPUCompute(System.IntPtr,System.UInt32,System.UInt32,System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: DispatchGPUCompute(nint, uint, uint, uint)
  nameWithType: Sdl.DispatchGPUCompute(nint, uint, uint, uint)
  fullName: SharpSDL3.Sdl.DispatchGPUCompute(nint, uint, uint, uint)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: DispatchGPUCompute
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 755
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Dispatches compute work.
  remarks: >-
    You must not call this function before binding a compute pipeline.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static void DispatchGPUCompute(nint computePass, uint groupcountX, uint groupcountY, uint groupcountZ)
    parameters:
    - id: computePass
      type: System.IntPtr
    - id: groupcountX
      type: System.UInt32
    - id: groupcountY
      type: System.UInt32
    - id: groupcountZ
      type: System.UInt32
    content.vb: Public Shared Sub DispatchGPUCompute(computePass As IntPtr, groupcountX As UInteger, groupcountY As UInteger, groupcountZ As UInteger)
  overload: SharpSDL3.Sdl.DispatchGPUCompute*
  nameWithType.vb: Sdl.DispatchGPUCompute(IntPtr, UInteger, UInteger, UInteger)
  fullName.vb: SharpSDL3.Sdl.DispatchGPUCompute(System.IntPtr, UInteger, UInteger, UInteger)
  name.vb: DispatchGPUCompute(IntPtr, UInteger, UInteger, UInteger)
- uid: SharpSDL3.Sdl.DispatchGPUComputeIndirect(System.IntPtr,System.IntPtr,System.UInt32)
  commentId: M:SharpSDL3.Sdl.DispatchGPUComputeIndirect(System.IntPtr,System.IntPtr,System.UInt32)
  id: DispatchGPUComputeIndirect(System.IntPtr,System.IntPtr,System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: DispatchGPUComputeIndirect(nint, nint, uint)
  nameWithType: Sdl.DispatchGPUComputeIndirect(nint, nint, uint)
  fullName: SharpSDL3.Sdl.DispatchGPUComputeIndirect(nint, nint, uint)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: DispatchGPUComputeIndirect
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 774
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Dispatches compute work with parameters set from a buffer.
  remarks: >-
    The buffer layout should match the layout of

    SDL_GPUIndirectDispatchCommand. You must

    not call this function before binding a compute pipeline.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static void DispatchGPUComputeIndirect(nint computePass, nint buffer, uint offset)
    parameters:
    - id: computePass
      type: System.IntPtr
    - id: buffer
      type: System.IntPtr
      description: a buffer containing dispatch parameters.
    - id: offset
      type: System.UInt32
      description: the offset to start reading from the dispatch buffer.
    content.vb: Public Shared Sub DispatchGPUComputeIndirect(computePass As IntPtr, buffer As IntPtr, offset As UInteger)
  overload: SharpSDL3.Sdl.DispatchGPUComputeIndirect*
  nameWithType.vb: Sdl.DispatchGPUComputeIndirect(IntPtr, IntPtr, UInteger)
  fullName.vb: SharpSDL3.Sdl.DispatchGPUComputeIndirect(System.IntPtr, System.IntPtr, UInteger)
  name.vb: DispatchGPUComputeIndirect(IntPtr, IntPtr, UInteger)
- uid: SharpSDL3.Sdl.DownloadFromGPUBuffer(System.IntPtr,SharpSDL3.Structs.GpuBufferRegion@,SharpSDL3.Structs.GpuTransferBufferLocation@)
  commentId: M:SharpSDL3.Sdl.DownloadFromGPUBuffer(System.IntPtr,SharpSDL3.Structs.GpuBufferRegion@,SharpSDL3.Structs.GpuTransferBufferLocation@)
  id: DownloadFromGPUBuffer(System.IntPtr,SharpSDL3.Structs.GpuBufferRegion@,SharpSDL3.Structs.GpuTransferBufferLocation@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: DownloadFromGPUBuffer(nint, in GpuBufferRegion, in GpuTransferBufferLocation)
  nameWithType: Sdl.DownloadFromGPUBuffer(nint, in GpuBufferRegion, in GpuTransferBufferLocation)
  fullName: SharpSDL3.Sdl.DownloadFromGPUBuffer(nint, in SharpSDL3.Structs.GpuBufferRegion, in SharpSDL3.Structs.GpuTransferBufferLocation)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: DownloadFromGPUBuffer
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 792
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Copies data from a buffer to a transfer buffer on the GPU timeline.
  remarks: >-
    This data is not guaranteed to be copied until the command buffer fence is

    signaled.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static void DownloadFromGPUBuffer(nint copyPass, in GpuBufferRegion source, in GpuTransferBufferLocation destination)
    parameters:
    - id: copyPass
      type: System.IntPtr
    - id: source
      type: SharpSDL3.Structs.GpuBufferRegion
      description: the source buffer with offset and size.
    - id: destination
      type: SharpSDL3.Structs.GpuTransferBufferLocation
      description: the destination transfer buffer with offset.
    content.vb: Public Shared Sub DownloadFromGPUBuffer(copyPass As IntPtr, source As GpuBufferRegion, destination As GpuTransferBufferLocation)
  overload: SharpSDL3.Sdl.DownloadFromGPUBuffer*
  nameWithType.vb: Sdl.DownloadFromGPUBuffer(IntPtr, GpuBufferRegion, GpuTransferBufferLocation)
  fullName.vb: SharpSDL3.Sdl.DownloadFromGPUBuffer(System.IntPtr, SharpSDL3.Structs.GpuBufferRegion, SharpSDL3.Structs.GpuTransferBufferLocation)
  name.vb: DownloadFromGPUBuffer(IntPtr, GpuBufferRegion, GpuTransferBufferLocation)
- uid: SharpSDL3.Sdl.DownloadFromGPUTexture(System.IntPtr,SharpSDL3.Structs.GpuTextureRegion@,SharpSDL3.Structs.GpuTextureTransferInfo@)
  commentId: M:SharpSDL3.Sdl.DownloadFromGPUTexture(System.IntPtr,SharpSDL3.Structs.GpuTextureRegion@,SharpSDL3.Structs.GpuTextureTransferInfo@)
  id: DownloadFromGPUTexture(System.IntPtr,SharpSDL3.Structs.GpuTextureRegion@,SharpSDL3.Structs.GpuTextureTransferInfo@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: DownloadFromGPUTexture(nint, in GpuTextureRegion, in GpuTextureTransferInfo)
  nameWithType: Sdl.DownloadFromGPUTexture(nint, in GpuTextureRegion, in GpuTextureTransferInfo)
  fullName: SharpSDL3.Sdl.DownloadFromGPUTexture(nint, in SharpSDL3.Structs.GpuTextureRegion, in SharpSDL3.Structs.GpuTextureTransferInfo)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: DownloadFromGPUTexture
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 811
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Copies data from a texture to a transfer buffer on the GPU timeline.
  remarks: >-
    This data is not guaranteed to be copied until the command buffer fence is

    signaled.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static void DownloadFromGPUTexture(nint copyPass, in GpuTextureRegion source, in GpuTextureTransferInfo destination)
    parameters:
    - id: copyPass
      type: System.IntPtr
    - id: source
      type: SharpSDL3.Structs.GpuTextureRegion
      description: the source texture region.
    - id: destination
      type: SharpSDL3.Structs.GpuTextureTransferInfo
      description: the destination transfer buffer with image layout information.
    content.vb: Public Shared Sub DownloadFromGPUTexture(copyPass As IntPtr, source As GpuTextureRegion, destination As GpuTextureTransferInfo)
  overload: SharpSDL3.Sdl.DownloadFromGPUTexture*
  nameWithType.vb: Sdl.DownloadFromGPUTexture(IntPtr, GpuTextureRegion, GpuTextureTransferInfo)
  fullName.vb: SharpSDL3.Sdl.DownloadFromGPUTexture(System.IntPtr, SharpSDL3.Structs.GpuTextureRegion, SharpSDL3.Structs.GpuTextureTransferInfo)
  name.vb: DownloadFromGPUTexture(IntPtr, GpuTextureRegion, GpuTextureTransferInfo)
- uid: SharpSDL3.Sdl.DrawGPUIndexedPrimitives(System.IntPtr,System.UInt32,System.UInt32,System.UInt32,System.Int32,System.UInt32)
  commentId: M:SharpSDL3.Sdl.DrawGPUIndexedPrimitives(System.IntPtr,System.UInt32,System.UInt32,System.UInt32,System.Int32,System.UInt32)
  id: DrawGPUIndexedPrimitives(System.IntPtr,System.UInt32,System.UInt32,System.UInt32,System.Int32,System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: DrawGPUIndexedPrimitives(nint, uint, uint, uint, int, uint)
  nameWithType: Sdl.DrawGPUIndexedPrimitives(nint, uint, uint, uint, int, uint)
  fullName: SharpSDL3.Sdl.DrawGPUIndexedPrimitives(nint, uint, uint, uint, int, uint)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: DrawGPUIndexedPrimitives
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 832
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Draws data using bound graphics state with an index buffer and instancing enabled.
  remarks: >-
    You must not call this function before binding a graphics pipeline.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static void DrawGPUIndexedPrimitives(nint renderPass, uint numIndices, uint numInstances, uint firstIndex, int vertexOffset, uint firstInstance)
    parameters:
    - id: renderPass
      type: System.IntPtr
    - id: numIndices
      type: System.UInt32
    - id: numInstances
      type: System.UInt32
    - id: firstIndex
      type: System.UInt32
    - id: vertexOffset
      type: System.Int32
    - id: firstInstance
      type: System.UInt32
    content.vb: Public Shared Sub DrawGPUIndexedPrimitives(renderPass As IntPtr, numIndices As UInteger, numInstances As UInteger, firstIndex As UInteger, vertexOffset As Integer, firstInstance As UInteger)
  overload: SharpSDL3.Sdl.DrawGPUIndexedPrimitives*
  nameWithType.vb: Sdl.DrawGPUIndexedPrimitives(IntPtr, UInteger, UInteger, UInteger, Integer, UInteger)
  fullName.vb: SharpSDL3.Sdl.DrawGPUIndexedPrimitives(System.IntPtr, UInteger, UInteger, UInteger, Integer, UInteger)
  name.vb: DrawGPUIndexedPrimitives(IntPtr, UInteger, UInteger, UInteger, Integer, UInteger)
- uid: SharpSDL3.Sdl.DrawGPUIndexedPrimitivesIndirect(System.IntPtr,System.IntPtr,System.UInt32,System.UInt32)
  commentId: M:SharpSDL3.Sdl.DrawGPUIndexedPrimitivesIndirect(System.IntPtr,System.IntPtr,System.UInt32,System.UInt32)
  id: DrawGPUIndexedPrimitivesIndirect(System.IntPtr,System.IntPtr,System.UInt32,System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: DrawGPUIndexedPrimitivesIndirect(nint, nint, uint, uint)
  nameWithType: Sdl.DrawGPUIndexedPrimitivesIndirect(nint, nint, uint, uint)
  fullName: SharpSDL3.Sdl.DrawGPUIndexedPrimitivesIndirect(nint, nint, uint, uint)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: DrawGPUIndexedPrimitivesIndirect
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 854
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Draws data using bound graphics state with an index buffer enabled and with draw parameters set from a buffer.
  remarks: >-
    The buffer must consist of tightly-packed draw parameter sets that each

    match the layout of

    SDL_GPUIndexedIndirectDrawCommand. You

    must not call this function before binding a graphics pipeline.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static void DrawGPUIndexedPrimitivesIndirect(nint renderPass, nint buffer, uint offset, uint drawCount)
    parameters:
    - id: renderPass
      type: System.IntPtr
    - id: buffer
      type: System.IntPtr
      description: a buffer containing draw parameters.
    - id: offset
      type: System.UInt32
      description: the offset to start reading from the draw buffer.
    - id: drawCount
      type: System.UInt32
    content.vb: Public Shared Sub DrawGPUIndexedPrimitivesIndirect(renderPass As IntPtr, buffer As IntPtr, offset As UInteger, drawCount As UInteger)
  overload: SharpSDL3.Sdl.DrawGPUIndexedPrimitivesIndirect*
  nameWithType.vb: Sdl.DrawGPUIndexedPrimitivesIndirect(IntPtr, IntPtr, UInteger, UInteger)
  fullName.vb: SharpSDL3.Sdl.DrawGPUIndexedPrimitivesIndirect(System.IntPtr, System.IntPtr, UInteger, UInteger)
  name.vb: DrawGPUIndexedPrimitivesIndirect(IntPtr, IntPtr, UInteger, UInteger)
- uid: SharpSDL3.Sdl.DrawGPUPrimitives(System.IntPtr,System.UInt32,System.UInt32,System.UInt32,System.UInt32)
  commentId: M:SharpSDL3.Sdl.DrawGPUPrimitives(System.IntPtr,System.UInt32,System.UInt32,System.UInt32,System.UInt32)
  id: DrawGPUPrimitives(System.IntPtr,System.UInt32,System.UInt32,System.UInt32,System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: DrawGPUPrimitives(nint, uint, uint, uint, uint)
  nameWithType: Sdl.DrawGPUPrimitives(nint, uint, uint, uint, uint)
  fullName: SharpSDL3.Sdl.DrawGPUPrimitives(nint, uint, uint, uint, uint)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: DrawGPUPrimitives
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 873
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Draws data using bound graphics state.
  remarks: >-
    You must not call this function before binding a graphics pipeline.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static void DrawGPUPrimitives(nint renderPass, uint numVertices, uint numInstances, uint firstVertex, uint firstInstance)
    parameters:
    - id: renderPass
      type: System.IntPtr
    - id: numVertices
      type: System.UInt32
    - id: numInstances
      type: System.UInt32
    - id: firstVertex
      type: System.UInt32
    - id: firstInstance
      type: System.UInt32
    content.vb: Public Shared Sub DrawGPUPrimitives(renderPass As IntPtr, numVertices As UInteger, numInstances As UInteger, firstVertex As UInteger, firstInstance As UInteger)
  overload: SharpSDL3.Sdl.DrawGPUPrimitives*
  nameWithType.vb: Sdl.DrawGPUPrimitives(IntPtr, UInteger, UInteger, UInteger, UInteger)
  fullName.vb: SharpSDL3.Sdl.DrawGPUPrimitives(System.IntPtr, UInteger, UInteger, UInteger, UInteger)
  name.vb: DrawGPUPrimitives(IntPtr, UInteger, UInteger, UInteger, UInteger)
- uid: SharpSDL3.Sdl.DrawGPUPrimitivesIndirect(System.IntPtr,System.IntPtr,System.UInt32,System.UInt32)
  commentId: M:SharpSDL3.Sdl.DrawGPUPrimitivesIndirect(System.IntPtr,System.IntPtr,System.UInt32,System.UInt32)
  id: DrawGPUPrimitivesIndirect(System.IntPtr,System.IntPtr,System.UInt32,System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: DrawGPUPrimitivesIndirect(nint, nint, uint, uint)
  nameWithType: Sdl.DrawGPUPrimitivesIndirect(nint, nint, uint, uint)
  fullName: SharpSDL3.Sdl.DrawGPUPrimitivesIndirect(nint, nint, uint, uint)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: DrawGPUPrimitivesIndirect
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 895
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Draws data using bound graphics state and with draw parameters set from a buffer.
  remarks: >-
    The buffer must consist of tightly-packed draw parameter sets that each

    match the layout of

    SDL_GPUIndirectDrawCommand. You must not call

    this function before binding a graphics pipeline.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static void DrawGPUPrimitivesIndirect(nint renderPass, nint buffer, uint offset, uint drawCount)
    parameters:
    - id: renderPass
      type: System.IntPtr
    - id: buffer
      type: System.IntPtr
      description: a buffer containing draw parameters.
    - id: offset
      type: System.UInt32
      description: the offset to start reading from the draw buffer.
    - id: drawCount
      type: System.UInt32
    content.vb: Public Shared Sub DrawGPUPrimitivesIndirect(renderPass As IntPtr, buffer As IntPtr, offset As UInteger, drawCount As UInteger)
  overload: SharpSDL3.Sdl.DrawGPUPrimitivesIndirect*
  nameWithType.vb: Sdl.DrawGPUPrimitivesIndirect(IntPtr, IntPtr, UInteger, UInteger)
  fullName.vb: SharpSDL3.Sdl.DrawGPUPrimitivesIndirect(System.IntPtr, System.IntPtr, UInteger, UInteger)
  name.vb: DrawGPUPrimitivesIndirect(IntPtr, IntPtr, UInteger, UInteger)
- uid: SharpSDL3.Sdl.EndGPUComputePass(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.EndGPUComputePass(System.IntPtr)
  id: EndGPUComputePass(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: EndGPUComputePass(nint)
  nameWithType: Sdl.EndGPUComputePass(nint)
  fullName: SharpSDL3.Sdl.EndGPUComputePass(nint)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: EndGPUComputePass
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 911
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Ends the current compute pass.
  remarks: >-
    All bound compute state on the command buffer is unset. The compute pass

    handle is now invalid.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static void EndGPUComputePass(nint computePass)
    parameters:
    - id: computePass
      type: System.IntPtr
    content.vb: Public Shared Sub EndGPUComputePass(computePass As IntPtr)
  overload: SharpSDL3.Sdl.EndGPUComputePass*
  nameWithType.vb: Sdl.EndGPUComputePass(IntPtr)
  fullName.vb: SharpSDL3.Sdl.EndGPUComputePass(System.IntPtr)
  name.vb: EndGPUComputePass(IntPtr)
- uid: SharpSDL3.Sdl.EndGPUCopyPass(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.EndGPUCopyPass(System.IntPtr)
  id: EndGPUCopyPass(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: EndGPUCopyPass(nint)
  nameWithType: Sdl.EndGPUCopyPass(nint)
  fullName: SharpSDL3.Sdl.EndGPUCopyPass(nint)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: EndGPUCopyPass
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 925
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Ends the current copy pass.
  remarks: <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static void EndGPUCopyPass(nint copyPass)
    parameters:
    - id: copyPass
      type: System.IntPtr
    content.vb: Public Shared Sub EndGPUCopyPass(copyPass As IntPtr)
  overload: SharpSDL3.Sdl.EndGPUCopyPass*
  nameWithType.vb: Sdl.EndGPUCopyPass(IntPtr)
  fullName.vb: SharpSDL3.Sdl.EndGPUCopyPass(System.IntPtr)
  name.vb: EndGPUCopyPass(IntPtr)
- uid: SharpSDL3.Sdl.EndGPURenderPass(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.EndGPURenderPass(System.IntPtr)
  id: EndGPURenderPass(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: EndGPURenderPass(nint)
  nameWithType: Sdl.EndGPURenderPass(nint)
  fullName: SharpSDL3.Sdl.EndGPURenderPass(nint)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: EndGPURenderPass
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 941
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Ends the given render pass.
  remarks: >-
    All bound graphics state on the render pass command buffer is unset. The

    render pass handle is now invalid.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static void EndGPURenderPass(nint renderPass)
    parameters:
    - id: renderPass
      type: System.IntPtr
    content.vb: Public Shared Sub EndGPURenderPass(renderPass As IntPtr)
  overload: SharpSDL3.Sdl.EndGPURenderPass*
  nameWithType.vb: Sdl.EndGPURenderPass(IntPtr)
  fullName.vb: SharpSDL3.Sdl.EndGPURenderPass(System.IntPtr)
  name.vb: EndGPURenderPass(IntPtr)
- uid: SharpSDL3.Sdl.GenerateMipmapsForGPUTexture(System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GenerateMipmapsForGPUTexture(System.IntPtr,System.IntPtr)
  id: GenerateMipmapsForGPUTexture(System.IntPtr,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GenerateMipmapsForGPUTexture(nint, nint)
  nameWithType: Sdl.GenerateMipmapsForGPUTexture(nint, nint)
  fullName: SharpSDL3.Sdl.GenerateMipmapsForGPUTexture(nint, nint)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GenerateMipmapsForGPUTexture
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 957
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Generates mipmaps for the given texture.
  remarks: >-
    This function must not be called inside of any pass.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static void GenerateMipmapsForGPUTexture(nint commandBuffer, nint texture)
    parameters:
    - id: commandBuffer
      type: System.IntPtr
    - id: texture
      type: System.IntPtr
      description: a texture with more than 1 mip level.
    content.vb: Public Shared Sub GenerateMipmapsForGPUTexture(commandBuffer As IntPtr, texture As IntPtr)
  overload: SharpSDL3.Sdl.GenerateMipmapsForGPUTexture*
  nameWithType.vb: Sdl.GenerateMipmapsForGPUTexture(IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.GenerateMipmapsForGPUTexture(System.IntPtr, System.IntPtr)
  name.vb: GenerateMipmapsForGPUTexture(IntPtr, IntPtr)
- uid: SharpSDL3.Sdl.GetGPUDeviceDriver(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetGPUDeviceDriver(System.IntPtr)
  id: GetGPUDeviceDriver(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetGPUDeviceDriver(nint)
  nameWithType: Sdl.GetGPUDeviceDriver(nint)
  fullName: SharpSDL3.Sdl.GetGPUDeviceDriver(nint)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetGPUDeviceDriver
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 975
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Returns the name of the backend used to create this GPU context.
  remarks: <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static string GetGPUDeviceDriver(nint device)
    parameters:
    - id: device
      type: System.IntPtr
      description: a GPU context to query.
    return:
      type: System.String
      description: Returns the name of the device's driver, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on error.
    content.vb: Public Shared Function GetGPUDeviceDriver(device As IntPtr) As String
  overload: SharpSDL3.Sdl.GetGPUDeviceDriver*
  nameWithType.vb: Sdl.GetGPUDeviceDriver(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetGPUDeviceDriver(System.IntPtr)
  name.vb: GetGPUDeviceDriver(IntPtr)
- uid: SharpSDL3.Sdl.GetGPUDriver(System.Int32)
  commentId: M:SharpSDL3.Sdl.GetGPUDriver(System.Int32)
  id: GetGPUDriver(System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetGPUDriver(int)
  nameWithType: Sdl.GetGPUDriver(int)
  fullName: SharpSDL3.Sdl.GetGPUDriver(int)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetGPUDriver
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 993
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the name of a built in GPU driver.
  remarks: >-
    The GPU drivers are presented in the order in which they are normally

    checked during initialization.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetNumGPUDrivers" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static string GetGPUDriver(int index)
    parameters:
    - id: index
      type: System.Int32
      description: the index of a GPU driver.
    return:
      type: System.String
      description: Returns the name of the GPU driver with the given index.
    content.vb: Public Shared Function GetGPUDriver(index As Integer) As String
  overload: SharpSDL3.Sdl.GetGPUDriver*
  nameWithType.vb: Sdl.GetGPUDriver(Integer)
  fullName.vb: SharpSDL3.Sdl.GetGPUDriver(Integer)
  name.vb: GetGPUDriver(Integer)
- uid: SharpSDL3.Sdl.GetGPUShaderFormats(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetGPUShaderFormats(System.IntPtr)
  id: GetGPUShaderFormats(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetGPUShaderFormats(nint)
  nameWithType: Sdl.GetGPUShaderFormats(nint)
  fullName: SharpSDL3.Sdl.GetGPUShaderFormats(nint)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetGPUShaderFormats
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 1008
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Returns the supported shader formats for this GPU context.
  remarks: <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static GpuShaderFormat GetGPUShaderFormats(nint device)
    parameters:
    - id: device
      type: System.IntPtr
      description: a GPU context to query.
    return:
      type: SharpSDL3.Enums.GpuShaderFormat
      description: Returns a bitflag indicatingwhich shader formats the driver is able to consume.
    content.vb: Public Shared Function GetGPUShaderFormats(device As IntPtr) As GpuShaderFormat
  overload: SharpSDL3.Sdl.GetGPUShaderFormats*
  nameWithType.vb: Sdl.GetGPUShaderFormats(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetGPUShaderFormats(System.IntPtr)
  name.vb: GetGPUShaderFormats(IntPtr)
- uid: SharpSDL3.Sdl.GetGPUSwapchainTextureFormat(System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetGPUSwapchainTextureFormat(System.IntPtr,System.IntPtr)
  id: GetGPUSwapchainTextureFormat(System.IntPtr,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetGPUSwapchainTextureFormat(nint, nint)
  nameWithType: Sdl.GetGPUSwapchainTextureFormat(nint, nint)
  fullName: SharpSDL3.Sdl.GetGPUSwapchainTextureFormat(nint, nint)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetGPUSwapchainTextureFormat
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 1025
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Obtains the texture format of the swapchain for the given window.
  remarks: >-
    Note that this format can change if the swapchain parameters change.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static GpuTextureFormat GetGPUSwapchainTextureFormat(nint device, nint window)
    parameters:
    - id: device
      type: System.IntPtr
      description: a GPU context.
    - id: window
      type: System.IntPtr
      description: an SDL_Window that has been claimed.
    return:
      type: SharpSDL3.Enums.GpuTextureFormat
      description: Returns the texture formatof the swapchain.
    content.vb: Public Shared Function GetGPUSwapchainTextureFormat(device As IntPtr, window As IntPtr) As GpuTextureFormat
  overload: SharpSDL3.Sdl.GetGPUSwapchainTextureFormat*
  nameWithType.vb: Sdl.GetGPUSwapchainTextureFormat(IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetGPUSwapchainTextureFormat(System.IntPtr, System.IntPtr)
  name.vb: GetGPUSwapchainTextureFormat(IntPtr, IntPtr)
- uid: SharpSDL3.Sdl.GetNumGPUDrivers
  commentId: M:SharpSDL3.Sdl.GetNumGPUDrivers
  id: GetNumGPUDrivers
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetNumGPUDrivers()
  nameWithType: Sdl.GetNumGPUDrivers()
  fullName: SharpSDL3.Sdl.GetNumGPUDrivers()
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetNumGPUDrivers
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 1042
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the number of GPU drivers compiled into SDL.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetGPUDriver(System.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static int GetNumGPUDrivers()
    return:
      type: System.Int32
      description: Returns the number of built in GPU drivers.
    content.vb: Public Shared Function GetNumGPUDrivers() As Integer
  overload: SharpSDL3.Sdl.GetNumGPUDrivers*
- uid: SharpSDL3.Sdl.GPUSupportsProperties(System.UInt32)
  commentId: M:SharpSDL3.Sdl.GPUSupportsProperties(System.UInt32)
  id: GPUSupportsProperties(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GPUSupportsProperties(uint)
  nameWithType: Sdl.GPUSupportsProperties(uint)
  fullName: SharpSDL3.Sdl.GPUSupportsProperties(uint)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GPUSupportsProperties
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 1055
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Checks for GPU runtime support.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateGPUDeviceWithProperties(System.UInt32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool GPUSupportsProperties(uint props)
    parameters:
    - id: props
      type: System.UInt32
      description: the properties to use.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if supported, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Public Shared Function GPUSupportsProperties(props As UInteger) As Boolean
  overload: SharpSDL3.Sdl.GPUSupportsProperties*
  nameWithType.vb: Sdl.GPUSupportsProperties(UInteger)
  fullName.vb: SharpSDL3.Sdl.GPUSupportsProperties(UInteger)
  name.vb: GPUSupportsProperties(UInteger)
- uid: SharpSDL3.Sdl.GPUSupportsShaderFormats(SharpSDL3.Enums.GpuShaderFormat,System.String)
  commentId: M:SharpSDL3.Sdl.GPUSupportsShaderFormats(SharpSDL3.Enums.GpuShaderFormat,System.String)
  id: GPUSupportsShaderFormats(SharpSDL3.Enums.GpuShaderFormat,System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GPUSupportsShaderFormats(GpuShaderFormat, string)
  nameWithType: Sdl.GPUSupportsShaderFormats(GpuShaderFormat, string)
  fullName: SharpSDL3.Sdl.GPUSupportsShaderFormats(SharpSDL3.Enums.GpuShaderFormat, string)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GPUSupportsShaderFormats
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 1069
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Checks for GPU runtime support.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateGPUDevice(SharpSDL3.Enums.GpuShaderFormat%2cSystem.Boolean%2cSystem.String)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool GPUSupportsShaderFormats(GpuShaderFormat formatFlags, string name)
    parameters:
    - id: formatFlags
      type: SharpSDL3.Enums.GpuShaderFormat
    - id: name
      type: System.String
      description: the preferred GPU driver, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to let SDL pick the optimal driver.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if supported, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Public Shared Function GPUSupportsShaderFormats(formatFlags As GpuShaderFormat, name As String) As Boolean
  overload: SharpSDL3.Sdl.GPUSupportsShaderFormats*
  nameWithType.vb: Sdl.GPUSupportsShaderFormats(GpuShaderFormat, String)
  fullName.vb: SharpSDL3.Sdl.GPUSupportsShaderFormats(SharpSDL3.Enums.GpuShaderFormat, String)
  name.vb: GPUSupportsShaderFormats(GpuShaderFormat, String)
- uid: SharpSDL3.Sdl.GPUTextureFormatTexelBlockSize(SharpSDL3.Enums.GpuTextureFormat)
  commentId: M:SharpSDL3.Sdl.GPUTextureFormatTexelBlockSize(SharpSDL3.Enums.GpuTextureFormat)
  id: GPUTextureFormatTexelBlockSize(SharpSDL3.Enums.GpuTextureFormat)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GPUTextureFormatTexelBlockSize(GpuTextureFormat)
  nameWithType: Sdl.GPUTextureFormatTexelBlockSize(GpuTextureFormat)
  fullName: SharpSDL3.Sdl.GPUTextureFormatTexelBlockSize(SharpSDL3.Enums.GpuTextureFormat)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GPUTextureFormatTexelBlockSize
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 1088
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Obtains the texel block size for a texture format.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.UploadToGPUTexture(System.IntPtr%2cSharpSDL3.Structs.GpuTextureTransferInfo%40%2cSharpSDL3.Structs.GpuTextureRegion%40%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static uint GPUTextureFormatTexelBlockSize(GpuTextureFormat format)
    parameters:
    - id: format
      type: SharpSDL3.Enums.GpuTextureFormat
      description: the texture format you want to know the texel size of.
    return:
      type: System.UInt32
      description: Returns the texel block size of the texture format.
    content.vb: Public Shared Function GPUTextureFormatTexelBlockSize(format As GpuTextureFormat) As UInteger
  overload: SharpSDL3.Sdl.GPUTextureFormatTexelBlockSize*
- uid: SharpSDL3.Sdl.GPUTextureSupportsFormat(System.IntPtr,SharpSDL3.Enums.GpuTextureFormat,SharpSDL3.Enums.GpuTextureType,SharpSDL3.Enums.GpuTextureUsageFlags)
  commentId: M:SharpSDL3.Sdl.GPUTextureSupportsFormat(System.IntPtr,SharpSDL3.Enums.GpuTextureFormat,SharpSDL3.Enums.GpuTextureType,SharpSDL3.Enums.GpuTextureUsageFlags)
  id: GPUTextureSupportsFormat(System.IntPtr,SharpSDL3.Enums.GpuTextureFormat,SharpSDL3.Enums.GpuTextureType,SharpSDL3.Enums.GpuTextureUsageFlags)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GPUTextureSupportsFormat(nint, GpuTextureFormat, GpuTextureType, GpuTextureUsageFlags)
  nameWithType: Sdl.GPUTextureSupportsFormat(nint, GpuTextureFormat, GpuTextureType, GpuTextureUsageFlags)
  fullName: SharpSDL3.Sdl.GPUTextureSupportsFormat(nint, SharpSDL3.Enums.GpuTextureFormat, SharpSDL3.Enums.GpuTextureType, SharpSDL3.Enums.GpuTextureUsageFlags)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GPUTextureSupportsFormat
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 1106
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Determines whether a texture format is supported for a given type and usage.
  remarks: <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool GPUTextureSupportsFormat(nint device, GpuTextureFormat format, GpuTextureType type, GpuTextureUsageFlags usage)
    parameters:
    - id: device
      type: System.IntPtr
      description: a GPU context.
    - id: format
      type: SharpSDL3.Enums.GpuTextureFormat
      description: the texture format to check.
    - id: type
      type: SharpSDL3.Enums.GpuTextureType
      description: the type of texture (2D, 3D, Cube).
    - id: usage
      type: SharpSDL3.Enums.GpuTextureUsageFlags
      description: a bitmask of all usage scenarios to check.
    return:
      type: System.Boolean
      description: Returns whether the texture format is supported for this type andusage.
    content.vb: Public Shared Function GPUTextureSupportsFormat(device As IntPtr, format As GpuTextureFormat, type As GpuTextureType, usage As GpuTextureUsageFlags) As Boolean
  overload: SharpSDL3.Sdl.GPUTextureSupportsFormat*
  nameWithType.vb: Sdl.GPUTextureSupportsFormat(IntPtr, GpuTextureFormat, GpuTextureType, GpuTextureUsageFlags)
  fullName.vb: SharpSDL3.Sdl.GPUTextureSupportsFormat(System.IntPtr, SharpSDL3.Enums.GpuTextureFormat, SharpSDL3.Enums.GpuTextureType, SharpSDL3.Enums.GpuTextureUsageFlags)
  name.vb: GPUTextureSupportsFormat(IntPtr, GpuTextureFormat, GpuTextureType, GpuTextureUsageFlags)
- uid: SharpSDL3.Sdl.GPUTextureSupportsSampleCount(System.IntPtr,SharpSDL3.Enums.GpuTextureFormat,SharpSDL3.Enums.GpuSampleCount)
  commentId: M:SharpSDL3.Sdl.GPUTextureSupportsSampleCount(System.IntPtr,SharpSDL3.Enums.GpuTextureFormat,SharpSDL3.Enums.GpuSampleCount)
  id: GPUTextureSupportsSampleCount(System.IntPtr,SharpSDL3.Enums.GpuTextureFormat,SharpSDL3.Enums.GpuSampleCount)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GPUTextureSupportsSampleCount(nint, GpuTextureFormat, GpuSampleCount)
  nameWithType: Sdl.GPUTextureSupportsSampleCount(nint, GpuTextureFormat, GpuSampleCount)
  fullName: SharpSDL3.Sdl.GPUTextureSupportsSampleCount(nint, SharpSDL3.Enums.GpuTextureFormat, SharpSDL3.Enums.GpuSampleCount)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GPUTextureSupportsSampleCount
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 1129
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Determines if a sample count for a texture format is supported.
  remarks: <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool GPUTextureSupportsSampleCount(nint device, GpuTextureFormat format, GpuSampleCount sampleCount)
    parameters:
    - id: device
      type: System.IntPtr
      description: a GPU context.
    - id: format
      type: SharpSDL3.Enums.GpuTextureFormat
      description: the texture format to check.
    - id: sampleCount
      type: SharpSDL3.Enums.GpuSampleCount
    return:
      type: System.Boolean
      description: Returns whether the sample count is supported for this textureformat.
    content.vb: Public Shared Function GPUTextureSupportsSampleCount(device As IntPtr, format As GpuTextureFormat, sampleCount As GpuSampleCount) As Boolean
  overload: SharpSDL3.Sdl.GPUTextureSupportsSampleCount*
  nameWithType.vb: Sdl.GPUTextureSupportsSampleCount(IntPtr, GpuTextureFormat, GpuSampleCount)
  fullName.vb: SharpSDL3.Sdl.GPUTextureSupportsSampleCount(System.IntPtr, SharpSDL3.Enums.GpuTextureFormat, SharpSDL3.Enums.GpuSampleCount)
  name.vb: GPUTextureSupportsSampleCount(IntPtr, GpuTextureFormat, GpuSampleCount)
- uid: SharpSDL3.Sdl.InsertGPUDebugLabel(System.IntPtr,System.String)
  commentId: M:SharpSDL3.Sdl.InsertGPUDebugLabel(System.IntPtr,System.String)
  id: InsertGPUDebugLabel(System.IntPtr,System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: InsertGPUDebugLabel(nint, string)
  nameWithType: Sdl.InsertGPUDebugLabel(nint, string)
  fullName: SharpSDL3.Sdl.InsertGPUDebugLabel(nint, string)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: InsertGPUDebugLabel
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 1151
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Inserts an arbitrary string label into the command buffer callstream.
  remarks: >-
    Useful for debugging.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static void InsertGPUDebugLabel(nint commandBuffer, string text)
    parameters:
    - id: commandBuffer
      type: System.IntPtr
    - id: text
      type: System.String
      description: a UTF-8 string constant to insert as the label.
    content.vb: Public Shared Sub InsertGPUDebugLabel(commandBuffer As IntPtr, text As String)
  overload: SharpSDL3.Sdl.InsertGPUDebugLabel*
  nameWithType.vb: Sdl.InsertGPUDebugLabel(IntPtr, String)
  fullName.vb: SharpSDL3.Sdl.InsertGPUDebugLabel(System.IntPtr, String)
  name.vb: InsertGPUDebugLabel(IntPtr, String)
- uid: SharpSDL3.Sdl.MapGPUTransferBuffer(System.IntPtr,System.IntPtr,System.Boolean)
  commentId: M:SharpSDL3.Sdl.MapGPUTransferBuffer(System.IntPtr,System.IntPtr,System.Boolean)
  id: MapGPUTransferBuffer(System.IntPtr,System.IntPtr,System.Boolean)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: MapGPUTransferBuffer(nint, nint, bool)
  nameWithType: Sdl.MapGPUTransferBuffer(nint, nint, bool)
  fullName: SharpSDL3.Sdl.MapGPUTransferBuffer(nint, nint, bool)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: MapGPUTransferBuffer
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 1171
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Maps a transfer buffer into application address space.
  remarks: >-
    You must unmap the transfer buffer before encoding upload commands. The

    memory is owned by the graphics driver - do NOT call SDL_free()

    on the returned pointer.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static nint MapGPUTransferBuffer(nint device, nint transferBuffer, bool cycle)
    parameters:
    - id: device
      type: System.IntPtr
      description: a GPU context.
    - id: transferBuffer
      type: System.IntPtr
    - id: cycle
      type: System.Boolean
      description: if <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, cycles the transfer buffer if it is already bound.
    return:
      type: System.IntPtr
      description: (void *) Returns the address of the mapped transfer buffer memory, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function MapGPUTransferBuffer(device As IntPtr, transferBuffer As IntPtr, cycle As Boolean) As IntPtr
  overload: SharpSDL3.Sdl.MapGPUTransferBuffer*
  nameWithType.vb: Sdl.MapGPUTransferBuffer(IntPtr, IntPtr, Boolean)
  fullName.vb: SharpSDL3.Sdl.MapGPUTransferBuffer(System.IntPtr, System.IntPtr, Boolean)
  name.vb: MapGPUTransferBuffer(IntPtr, IntPtr, Boolean)
- uid: SharpSDL3.Sdl.PopGPUDebugGroup(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.PopGPUDebugGroup(System.IntPtr)
  id: PopGPUDebugGroup(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: PopGPUDebugGroup(nint)
  nameWithType: Sdl.PopGPUDebugGroup(nint)
  fullName: SharpSDL3.Sdl.PopGPUDebugGroup(nint)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: PopGPUDebugGroup
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 1189
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Ends the most-recently pushed debug group.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.PushGPUDebugGroup(System.IntPtr%2cSystem.String)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void PopGPUDebugGroup(nint commandBuffer)
    parameters:
    - id: commandBuffer
      type: System.IntPtr
    content.vb: Public Shared Sub PopGPUDebugGroup(commandBuffer As IntPtr)
  overload: SharpSDL3.Sdl.PopGPUDebugGroup*
  nameWithType.vb: Sdl.PopGPUDebugGroup(IntPtr)
  fullName.vb: SharpSDL3.Sdl.PopGPUDebugGroup(System.IntPtr)
  name.vb: PopGPUDebugGroup(IntPtr)
- uid: SharpSDL3.Sdl.PushGPUComputeUniformData(System.IntPtr,System.UInt32,System.IntPtr,System.UInt32)
  commentId: M:SharpSDL3.Sdl.PushGPUComputeUniformData(System.IntPtr,System.UInt32,System.IntPtr,System.UInt32)
  id: PushGPUComputeUniformData(System.IntPtr,System.UInt32,System.IntPtr,System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: PushGPUComputeUniformData(nint, uint, nint, uint)
  nameWithType: Sdl.PushGPUComputeUniformData(nint, uint, nint, uint)
  fullName: SharpSDL3.Sdl.PushGPUComputeUniformData(nint, uint, nint, uint)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: PushGPUComputeUniformData
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 1207
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Pushes data to a uniform slot on the command buffer.
  remarks: >-
    Subsequent draw calls will use this uniform data.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static void PushGPUComputeUniformData(nint commandBuffer, uint slotIndex, nint data, uint length)
    parameters:
    - id: commandBuffer
      type: System.IntPtr
    - id: slotIndex
      type: System.UInt32
    - id: data
      type: System.IntPtr
      description: client data to write.
    - id: length
      type: System.UInt32
      description: the length of the data to write.
    content.vb: Public Shared Sub PushGPUComputeUniformData(commandBuffer As IntPtr, slotIndex As UInteger, data As IntPtr, length As UInteger)
  overload: SharpSDL3.Sdl.PushGPUComputeUniformData*
  nameWithType.vb: Sdl.PushGPUComputeUniformData(IntPtr, UInteger, IntPtr, UInteger)
  fullName.vb: SharpSDL3.Sdl.PushGPUComputeUniformData(System.IntPtr, UInteger, System.IntPtr, UInteger)
  name.vb: PushGPUComputeUniformData(IntPtr, UInteger, IntPtr, UInteger)
- uid: SharpSDL3.Sdl.PushGPUDebugGroup(System.IntPtr,System.String)
  commentId: M:SharpSDL3.Sdl.PushGPUDebugGroup(System.IntPtr,System.String)
  id: PushGPUDebugGroup(System.IntPtr,System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: PushGPUDebugGroup(nint, string)
  nameWithType: Sdl.PushGPUDebugGroup(nint, string)
  fullName: SharpSDL3.Sdl.PushGPUDebugGroup(nint, string)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: PushGPUDebugGroup
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 1225
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Begins a debug group with an arbitary name.
  remarks: >-
    Used for denoting groups of calls when viewing the command buffer

    callstream in a graphics debugging tool.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.PopGPUDebugGroup(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void PushGPUDebugGroup(nint commandBuffer, string name)
    parameters:
    - id: commandBuffer
      type: System.IntPtr
    - id: name
      type: System.String
      description: a UTF-8 string constant that names the group.
    content.vb: Public Shared Sub PushGPUDebugGroup(commandBuffer As IntPtr, name As String)
  overload: SharpSDL3.Sdl.PushGPUDebugGroup*
  nameWithType.vb: Sdl.PushGPUDebugGroup(IntPtr, String)
  fullName.vb: SharpSDL3.Sdl.PushGPUDebugGroup(System.IntPtr, String)
  name.vb: PushGPUDebugGroup(IntPtr, String)
- uid: SharpSDL3.Sdl.PushGPUFragmentUniformData(System.IntPtr,System.UInt32,System.IntPtr,System.UInt32)
  commentId: M:SharpSDL3.Sdl.PushGPUFragmentUniformData(System.IntPtr,System.UInt32,System.IntPtr,System.UInt32)
  id: PushGPUFragmentUniformData(System.IntPtr,System.UInt32,System.IntPtr,System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: PushGPUFragmentUniformData(nint, uint, nint, uint)
  nameWithType: Sdl.PushGPUFragmentUniformData(nint, uint, nint, uint)
  fullName: SharpSDL3.Sdl.PushGPUFragmentUniformData(nint, uint, nint, uint)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: PushGPUFragmentUniformData
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 1243
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Pushes data to a fragment uniform slot on the command buffer.
  remarks: >-
    Subsequent draw calls will use this uniform data.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static void PushGPUFragmentUniformData(nint commandBuffer, uint slotIndex, nint data, uint length)
    parameters:
    - id: commandBuffer
      type: System.IntPtr
    - id: slotIndex
      type: System.UInt32
    - id: data
      type: System.IntPtr
      description: client data to write.
    - id: length
      type: System.UInt32
      description: the length of the data to write.
    content.vb: Public Shared Sub PushGPUFragmentUniformData(commandBuffer As IntPtr, slotIndex As UInteger, data As IntPtr, length As UInteger)
  overload: SharpSDL3.Sdl.PushGPUFragmentUniformData*
  nameWithType.vb: Sdl.PushGPUFragmentUniformData(IntPtr, UInteger, IntPtr, UInteger)
  fullName.vb: SharpSDL3.Sdl.PushGPUFragmentUniformData(System.IntPtr, UInteger, System.IntPtr, UInteger)
  name.vb: PushGPUFragmentUniformData(IntPtr, UInteger, IntPtr, UInteger)
- uid: SharpSDL3.Sdl.PushGPUVertexUniformData(System.IntPtr,System.UInt32,System.IntPtr,System.UInt32)
  commentId: M:SharpSDL3.Sdl.PushGPUVertexUniformData(System.IntPtr,System.UInt32,System.IntPtr,System.UInt32)
  id: PushGPUVertexUniformData(System.IntPtr,System.UInt32,System.IntPtr,System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: PushGPUVertexUniformData(nint, uint, nint, uint)
  nameWithType: Sdl.PushGPUVertexUniformData(nint, uint, nint, uint)
  fullName: SharpSDL3.Sdl.PushGPUVertexUniformData(nint, uint, nint, uint)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: PushGPUVertexUniformData
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 1261
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Pushes data to a vertex uniform slot on the command buffer.
  remarks: >-
    Subsequent draw calls will use this uniform data.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static void PushGPUVertexUniformData(nint commandBuffer, uint slotIndex, nint data, uint length)
    parameters:
    - id: commandBuffer
      type: System.IntPtr
    - id: slotIndex
      type: System.UInt32
    - id: data
      type: System.IntPtr
      description: client data to write.
    - id: length
      type: System.UInt32
      description: the length of the data to write.
    content.vb: Public Shared Sub PushGPUVertexUniformData(commandBuffer As IntPtr, slotIndex As UInteger, data As IntPtr, length As UInteger)
  overload: SharpSDL3.Sdl.PushGPUVertexUniformData*
  nameWithType.vb: Sdl.PushGPUVertexUniformData(IntPtr, UInteger, IntPtr, UInteger)
  fullName.vb: SharpSDL3.Sdl.PushGPUVertexUniformData(System.IntPtr, UInteger, System.IntPtr, UInteger)
  name.vb: PushGPUVertexUniformData(IntPtr, UInteger, IntPtr, UInteger)
- uid: SharpSDL3.Sdl.QueryGPUFence(System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.QueryGPUFence(System.IntPtr,System.IntPtr)
  id: QueryGPUFence(System.IntPtr,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: QueryGPUFence(nint, nint)
  nameWithType: Sdl.QueryGPUFence(nint, nint)
  fullName: SharpSDL3.Sdl.QueryGPUFence(nint, nint)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: QueryGPUFence
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 1278
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Checks the status of a fence.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SubmitGPUCommandBufferAndAcquireFence(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool QueryGPUFence(nint device, nint fence)
    parameters:
    - id: device
      type: System.IntPtr
      description: a GPU context.
    - id: fence
      type: System.IntPtr
      description: a fence.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the fence is signaled, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if it is not.
    content.vb: Public Shared Function QueryGPUFence(device As IntPtr, fence As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.QueryGPUFence*
  nameWithType.vb: Sdl.QueryGPUFence(IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.QueryGPUFence(System.IntPtr, System.IntPtr)
  name.vb: QueryGPUFence(IntPtr, IntPtr)
- uid: SharpSDL3.Sdl.ReleaseGPUBuffer(System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.ReleaseGPUBuffer(System.IntPtr,System.IntPtr)
  id: ReleaseGPUBuffer(System.IntPtr,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ReleaseGPUBuffer(nint, nint)
  nameWithType: Sdl.ReleaseGPUBuffer(nint, nint)
  fullName: SharpSDL3.Sdl.ReleaseGPUBuffer(nint, nint)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ReleaseGPUBuffer
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 1297
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Frees the given buffer as soon as it is safe to do so.
  remarks: >-
    You must not reference the buffer after calling this function.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static void ReleaseGPUBuffer(nint device, nint buffer)
    parameters:
    - id: device
      type: System.IntPtr
      description: a GPU context.
    - id: buffer
      type: System.IntPtr
      description: a buffer to be destroyed.
    content.vb: Public Shared Sub ReleaseGPUBuffer(device As IntPtr, buffer As IntPtr)
  overload: SharpSDL3.Sdl.ReleaseGPUBuffer*
  nameWithType.vb: Sdl.ReleaseGPUBuffer(IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.ReleaseGPUBuffer(System.IntPtr, System.IntPtr)
  name.vb: ReleaseGPUBuffer(IntPtr, IntPtr)
- uid: SharpSDL3.Sdl.ReleaseGPUComputePipeline(System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.ReleaseGPUComputePipeline(System.IntPtr,System.IntPtr)
  id: ReleaseGPUComputePipeline(System.IntPtr,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ReleaseGPUComputePipeline(nint, nint)
  nameWithType: Sdl.ReleaseGPUComputePipeline(nint, nint)
  fullName: SharpSDL3.Sdl.ReleaseGPUComputePipeline(nint, nint)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ReleaseGPUComputePipeline
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 1316
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Frees the given compute pipeline as soon as it is safe to do so.
  remarks: >-
    You must not reference the compute pipeline after calling this function.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static void ReleaseGPUComputePipeline(nint device, nint computePipeline)
    parameters:
    - id: device
      type: System.IntPtr
      description: a GPU context.
    - id: computePipeline
      type: System.IntPtr
    content.vb: Public Shared Sub ReleaseGPUComputePipeline(device As IntPtr, computePipeline As IntPtr)
  overload: SharpSDL3.Sdl.ReleaseGPUComputePipeline*
  nameWithType.vb: Sdl.ReleaseGPUComputePipeline(IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.ReleaseGPUComputePipeline(System.IntPtr, System.IntPtr)
  name.vb: ReleaseGPUComputePipeline(IntPtr, IntPtr)
- uid: SharpSDL3.Sdl.ReleaseGPUFence(System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.ReleaseGPUFence(System.IntPtr,System.IntPtr)
  id: ReleaseGPUFence(System.IntPtr,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ReleaseGPUFence(nint, nint)
  nameWithType: Sdl.ReleaseGPUFence(nint, nint)
  fullName: SharpSDL3.Sdl.ReleaseGPUFence(nint, nint)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ReleaseGPUFence
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 1336
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Releases a fence obtained from SDL_SubmitGPUCommandBufferAndAcquireFence.
  remarks: >-
    You must not reference the fence after calling this function.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SubmitGPUCommandBufferAndAcquireFence(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void ReleaseGPUFence(nint device, nint fence)
    parameters:
    - id: device
      type: System.IntPtr
      description: a GPU context.
    - id: fence
      type: System.IntPtr
      description: a fence.
    content.vb: Public Shared Sub ReleaseGPUFence(device As IntPtr, fence As IntPtr)
  overload: SharpSDL3.Sdl.ReleaseGPUFence*
  nameWithType.vb: Sdl.ReleaseGPUFence(IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.ReleaseGPUFence(System.IntPtr, System.IntPtr)
  name.vb: ReleaseGPUFence(IntPtr, IntPtr)
- uid: SharpSDL3.Sdl.ReleaseGPUGraphicsPipeline(System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.ReleaseGPUGraphicsPipeline(System.IntPtr,System.IntPtr)
  id: ReleaseGPUGraphicsPipeline(System.IntPtr,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ReleaseGPUGraphicsPipeline(nint, nint)
  nameWithType: Sdl.ReleaseGPUGraphicsPipeline(nint, nint)
  fullName: SharpSDL3.Sdl.ReleaseGPUGraphicsPipeline(nint, nint)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ReleaseGPUGraphicsPipeline
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 1355
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Frees the given graphics pipeline as soon as it is safe to do so.
  remarks: >-
    You must not reference the graphics pipeline after calling this function.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static void ReleaseGPUGraphicsPipeline(nint device, nint graphicsPipeline)
    parameters:
    - id: device
      type: System.IntPtr
      description: a GPU context.
    - id: graphicsPipeline
      type: System.IntPtr
    content.vb: Public Shared Sub ReleaseGPUGraphicsPipeline(device As IntPtr, graphicsPipeline As IntPtr)
  overload: SharpSDL3.Sdl.ReleaseGPUGraphicsPipeline*
  nameWithType.vb: Sdl.ReleaseGPUGraphicsPipeline(IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.ReleaseGPUGraphicsPipeline(System.IntPtr, System.IntPtr)
  name.vb: ReleaseGPUGraphicsPipeline(IntPtr, IntPtr)
- uid: SharpSDL3.Sdl.ReleaseGPUSampler(System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.ReleaseGPUSampler(System.IntPtr,System.IntPtr)
  id: ReleaseGPUSampler(System.IntPtr,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ReleaseGPUSampler(nint, nint)
  nameWithType: Sdl.ReleaseGPUSampler(nint, nint)
  fullName: SharpSDL3.Sdl.ReleaseGPUSampler(nint, nint)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ReleaseGPUSampler
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 1374
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Frees the given sampler as soon as it is safe to do so.
  remarks: >-
    You must not reference the sampler after calling this function.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static void ReleaseGPUSampler(nint device, nint sampler)
    parameters:
    - id: device
      type: System.IntPtr
      description: a GPU context.
    - id: sampler
      type: System.IntPtr
      description: a sampler to be destroyed.
    content.vb: Public Shared Sub ReleaseGPUSampler(device As IntPtr, sampler As IntPtr)
  overload: SharpSDL3.Sdl.ReleaseGPUSampler*
  nameWithType.vb: Sdl.ReleaseGPUSampler(IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.ReleaseGPUSampler(System.IntPtr, System.IntPtr)
  name.vb: ReleaseGPUSampler(IntPtr, IntPtr)
- uid: SharpSDL3.Sdl.ReleaseGPUShader(System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.ReleaseGPUShader(System.IntPtr,System.IntPtr)
  id: ReleaseGPUShader(System.IntPtr,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ReleaseGPUShader(nint, nint)
  nameWithType: Sdl.ReleaseGPUShader(nint, nint)
  fullName: SharpSDL3.Sdl.ReleaseGPUShader(nint, nint)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ReleaseGPUShader
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 1393
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Frees the given shader as soon as it is safe to do so.
  remarks: >-
    You must not reference the shader after calling this function.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static void ReleaseGPUShader(nint device, nint shader)
    parameters:
    - id: device
      type: System.IntPtr
      description: a GPU context.
    - id: shader
      type: System.IntPtr
      description: a shader to be destroyed.
    content.vb: Public Shared Sub ReleaseGPUShader(device As IntPtr, shader As IntPtr)
  overload: SharpSDL3.Sdl.ReleaseGPUShader*
  nameWithType.vb: Sdl.ReleaseGPUShader(IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.ReleaseGPUShader(System.IntPtr, System.IntPtr)
  name.vb: ReleaseGPUShader(IntPtr, IntPtr)
- uid: SharpSDL3.Sdl.ReleaseGPUTexture(System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.ReleaseGPUTexture(System.IntPtr,System.IntPtr)
  id: ReleaseGPUTexture(System.IntPtr,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ReleaseGPUTexture(nint, nint)
  nameWithType: Sdl.ReleaseGPUTexture(nint, nint)
  fullName: SharpSDL3.Sdl.ReleaseGPUTexture(nint, nint)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ReleaseGPUTexture
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 1412
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Frees the given texture as soon as it is safe to do so.
  remarks: >-
    You must not reference the texture after calling this function.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static void ReleaseGPUTexture(nint device, nint texture)
    parameters:
    - id: device
      type: System.IntPtr
      description: a GPU context.
    - id: texture
      type: System.IntPtr
      description: a texture to be destroyed.
    content.vb: Public Shared Sub ReleaseGPUTexture(device As IntPtr, texture As IntPtr)
  overload: SharpSDL3.Sdl.ReleaseGPUTexture*
  nameWithType.vb: Sdl.ReleaseGPUTexture(IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.ReleaseGPUTexture(System.IntPtr, System.IntPtr)
  name.vb: ReleaseGPUTexture(IntPtr, IntPtr)
- uid: SharpSDL3.Sdl.ReleaseGPUTransferBuffer(System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.ReleaseGPUTransferBuffer(System.IntPtr,System.IntPtr)
  id: ReleaseGPUTransferBuffer(System.IntPtr,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ReleaseGPUTransferBuffer(nint, nint)
  nameWithType: Sdl.ReleaseGPUTransferBuffer(nint, nint)
  fullName: SharpSDL3.Sdl.ReleaseGPUTransferBuffer(nint, nint)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ReleaseGPUTransferBuffer
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 1431
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Frees the given transfer buffer as soon as it is safe to do so.
  remarks: >-
    You must not reference the transfer buffer after calling this function.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static void ReleaseGPUTransferBuffer(nint device, nint transferBuffer)
    parameters:
    - id: device
      type: System.IntPtr
      description: a GPU context.
    - id: transferBuffer
      type: System.IntPtr
    content.vb: Public Shared Sub ReleaseGPUTransferBuffer(device As IntPtr, transferBuffer As IntPtr)
  overload: SharpSDL3.Sdl.ReleaseGPUTransferBuffer*
  nameWithType.vb: Sdl.ReleaseGPUTransferBuffer(IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.ReleaseGPUTransferBuffer(System.IntPtr, System.IntPtr)
  name.vb: ReleaseGPUTransferBuffer(IntPtr, IntPtr)
- uid: SharpSDL3.Sdl.ReleaseWindowFromGPUDevice(System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.ReleaseWindowFromGPUDevice(System.IntPtr,System.IntPtr)
  id: ReleaseWindowFromGPUDevice(System.IntPtr,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ReleaseWindowFromGPUDevice(nint, nint)
  nameWithType: Sdl.ReleaseWindowFromGPUDevice(nint, nint)
  fullName: SharpSDL3.Sdl.ReleaseWindowFromGPUDevice(nint, nint)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ReleaseWindowFromGPUDevice
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 1450
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Unclaims a window, destroying its swapchain structure.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.ClaimWindowForGPUDevice(System.IntPtr%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void ReleaseWindowFromGPUDevice(nint device, nint window)
    parameters:
    - id: device
      type: System.IntPtr
      description: a GPU context.
    - id: window
      type: System.IntPtr
      description: an SDL_Window that has been claimed.
    content.vb: Public Shared Sub ReleaseWindowFromGPUDevice(device As IntPtr, window As IntPtr)
  overload: SharpSDL3.Sdl.ReleaseWindowFromGPUDevice*
  nameWithType.vb: Sdl.ReleaseWindowFromGPUDevice(IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.ReleaseWindowFromGPUDevice(System.IntPtr, System.IntPtr)
  name.vb: ReleaseWindowFromGPUDevice(IntPtr, IntPtr)
- uid: SharpSDL3.Sdl.SetGPUAllowedFramesInFlight(System.IntPtr,System.UInt32)
  commentId: M:SharpSDL3.Sdl.SetGPUAllowedFramesInFlight(System.IntPtr,System.UInt32)
  id: SetGPUAllowedFramesInFlight(System.IntPtr,System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetGPUAllowedFramesInFlight(nint, uint)
  nameWithType: Sdl.SetGPUAllowedFramesInFlight(nint, uint)
  fullName: SharpSDL3.Sdl.SetGPUAllowedFramesInFlight(nint, uint)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetGPUAllowedFramesInFlight
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 1476
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Configures the maximum allowed number of frames in flight.
  remarks: >-
    The default value when the device is created is 2. This means that after

    you have submitted 2 frames for presentation, if the GPU has not finished

    working on the first frame,

    SDL_AcquireGPUSwapchainTexture() will

    fill the swapchain texture pointer with <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>, and

    SDL_WaitAndAcquireGPUSwapchainTexture()

    will block.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool SetGPUAllowedFramesInFlight(nint device, uint allowedFramesInFlight)
    parameters:
    - id: device
      type: System.IntPtr
      description: a GPU context.
    - id: allowedFramesInFlight
      type: System.UInt32
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if successful, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on error; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetGPUAllowedFramesInFlight(device As IntPtr, allowedFramesInFlight As UInteger) As Boolean
  overload: SharpSDL3.Sdl.SetGPUAllowedFramesInFlight*
  nameWithType.vb: Sdl.SetGPUAllowedFramesInFlight(IntPtr, UInteger)
  fullName.vb: SharpSDL3.Sdl.SetGPUAllowedFramesInFlight(System.IntPtr, UInteger)
  name.vb: SetGPUAllowedFramesInFlight(IntPtr, UInteger)
- uid: SharpSDL3.Sdl.SetGPUBlendConstants(System.IntPtr,SharpSDL3.Structs.FColor)
  commentId: M:SharpSDL3.Sdl.SetGPUBlendConstants(System.IntPtr,SharpSDL3.Structs.FColor)
  id: SetGPUBlendConstants(System.IntPtr,SharpSDL3.Structs.FColor)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetGPUBlendConstants(nint, FColor)
  nameWithType: Sdl.SetGPUBlendConstants(nint, FColor)
  fullName: SharpSDL3.Sdl.SetGPUBlendConstants(nint, SharpSDL3.Structs.FColor)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetGPUBlendConstants
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 1493
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Sets the current blend constants on a command buffer.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    GPU_BLENDFACTOR_CONSTANT_COLOR

    GPU_BLENDFACTOR_ONE_MINUS_CONSTANT_COLOR
  example: []
  syntax:
    content: public static void SetGPUBlendConstants(nint renderPass, FColor blendConstants)
    parameters:
    - id: renderPass
      type: System.IntPtr
    - id: blendConstants
      type: SharpSDL3.Structs.FColor
    content.vb: Public Shared Sub SetGPUBlendConstants(renderPass As IntPtr, blendConstants As FColor)
  overload: SharpSDL3.Sdl.SetGPUBlendConstants*
  nameWithType.vb: Sdl.SetGPUBlendConstants(IntPtr, FColor)
  fullName.vb: SharpSDL3.Sdl.SetGPUBlendConstants(System.IntPtr, SharpSDL3.Structs.FColor)
  name.vb: SetGPUBlendConstants(IntPtr, FColor)
- uid: SharpSDL3.Sdl.SetGPUBufferName(System.IntPtr,System.IntPtr,System.String)
  commentId: M:SharpSDL3.Sdl.SetGPUBufferName(System.IntPtr,System.IntPtr,System.String)
  id: SetGPUBufferName(System.IntPtr,System.IntPtr,System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetGPUBufferName(nint, nint, string)
  nameWithType: Sdl.SetGPUBufferName(nint, nint, string)
  fullName: SharpSDL3.Sdl.SetGPUBufferName(nint, nint, string)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetGPUBufferName
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 1515
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Sets an arbitrary string constant to label a buffer.
  remarks: >-
    You should use

    SDL_PROP_GPU_BUFFER_CREATE_NAME_STRING

    with SDL_CreateGPUBuffer instead of this function to

    avoid thread safety issues.

    <p><strong>Thread Safety:</strong> This function is not thread safe, you must make sure the buffer is notsimultaneously used by any other thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateGPUBuffer(System.IntPtr%2cSharpSDL3.Structs.GpuBufferCreateInfo%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void SetGPUBufferName(nint device, nint buffer, string text)
    parameters:
    - id: device
      type: System.IntPtr
      description: a GPU Context.
    - id: buffer
      type: System.IntPtr
      description: a buffer to attach the name to.
    - id: text
      type: System.String
      description: a UTF-8 string constant to mark as the name of the buffer.
    content.vb: Public Shared Sub SetGPUBufferName(device As IntPtr, buffer As IntPtr, text As String)
  overload: SharpSDL3.Sdl.SetGPUBufferName*
  nameWithType.vb: Sdl.SetGPUBufferName(IntPtr, IntPtr, String)
  fullName.vb: SharpSDL3.Sdl.SetGPUBufferName(System.IntPtr, System.IntPtr, String)
  name.vb: SetGPUBufferName(IntPtr, IntPtr, String)
- uid: SharpSDL3.Sdl.SetGPUScissor(System.IntPtr,SharpSDL3.Structs.Rect@)
  commentId: M:SharpSDL3.Sdl.SetGPUScissor(System.IntPtr,SharpSDL3.Structs.Rect@)
  id: SetGPUScissor(System.IntPtr,SharpSDL3.Structs.Rect@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetGPUScissor(nint, in Rect)
  nameWithType: Sdl.SetGPUScissor(nint, in Rect)
  fullName: SharpSDL3.Sdl.SetGPUScissor(nint, in SharpSDL3.Structs.Rect)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetGPUScissor
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 1533
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Sets the current scissor state on a command buffer.
  remarks: <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static void SetGPUScissor(nint renderPass, in Rect scissor)
    parameters:
    - id: renderPass
      type: System.IntPtr
    - id: scissor
      type: SharpSDL3.Structs.Rect
      description: the scissor area to set.
    content.vb: Public Shared Sub SetGPUScissor(renderPass As IntPtr, scissor As Rect)
  overload: SharpSDL3.Sdl.SetGPUScissor*
  nameWithType.vb: Sdl.SetGPUScissor(IntPtr, Rect)
  fullName.vb: SharpSDL3.Sdl.SetGPUScissor(System.IntPtr, SharpSDL3.Structs.Rect)
  name.vb: SetGPUScissor(IntPtr, Rect)
- uid: SharpSDL3.Sdl.SetGPUStencilReference(System.IntPtr,System.Byte)
  commentId: M:SharpSDL3.Sdl.SetGPUStencilReference(System.IntPtr,System.Byte)
  id: SetGPUStencilReference(System.IntPtr,System.Byte)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetGPUStencilReference(nint, byte)
  nameWithType: Sdl.SetGPUStencilReference(nint, byte)
  fullName: SharpSDL3.Sdl.SetGPUStencilReference(nint, byte)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetGPUStencilReference
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 1548
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Sets the current stencil reference value on a command buffer.
  remarks: <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static void SetGPUStencilReference(nint renderPass, byte reference)
    parameters:
    - id: renderPass
      type: System.IntPtr
    - id: reference
      type: System.Byte
      description: the stencil reference value to set.
    content.vb: Public Shared Sub SetGPUStencilReference(renderPass As IntPtr, reference As Byte)
  overload: SharpSDL3.Sdl.SetGPUStencilReference*
  nameWithType.vb: Sdl.SetGPUStencilReference(IntPtr, Byte)
  fullName.vb: SharpSDL3.Sdl.SetGPUStencilReference(System.IntPtr, Byte)
  name.vb: SetGPUStencilReference(IntPtr, Byte)
- uid: SharpSDL3.Sdl.SetGPUSwapchainParameters(System.IntPtr,System.IntPtr,SharpSDL3.Enums.GpuSwapchainComposition,SharpSDL3.Enums.GpuPresentMode)
  commentId: M:SharpSDL3.Sdl.SetGPUSwapchainParameters(System.IntPtr,System.IntPtr,SharpSDL3.Enums.GpuSwapchainComposition,SharpSDL3.Enums.GpuPresentMode)
  id: SetGPUSwapchainParameters(System.IntPtr,System.IntPtr,SharpSDL3.Enums.GpuSwapchainComposition,SharpSDL3.Enums.GpuPresentMode)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetGPUSwapchainParameters(nint, nint, GpuSwapchainComposition, GpuPresentMode)
  nameWithType: Sdl.SetGPUSwapchainParameters(nint, nint, GpuSwapchainComposition, GpuPresentMode)
  fullName: SharpSDL3.Sdl.SetGPUSwapchainParameters(nint, nint, SharpSDL3.Enums.GpuSwapchainComposition, SharpSDL3.Enums.GpuPresentMode)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetGPUSwapchainParameters
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 1574
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Changes the swapchain parameters for the given claimed window.
  remarks: >-
    This function will fail if the requested present mode or swapchain

    composition are unsupported by the device. Check if the parameters are

    supported via

    SDL_WindowSupportsGPUPresentMode /

    SDL_WindowSupportsGPUSwapchainComposition

    prior to calling this function.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.WindowSupportsGPUPresentMode(System.IntPtr%2cSystem.IntPtr%2cSharpSDL3.Enums.GpuPresentMode)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.WindowSupportsGPUSwapchainComposition(System.IntPtr%2cSystem.IntPtr%2cSharpSDL3.Enums.GpuSwapchainComposition)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetGPUSwapchainParameters(nint device, nint window, GpuSwapchainComposition swapchainComposition, GpuPresentMode presentMode)
    parameters:
    - id: device
      type: System.IntPtr
      description: a GPU context.
    - id: window
      type: System.IntPtr
      description: an SDL_Window that has been claimed.
    - id: swapchainComposition
      type: SharpSDL3.Enums.GpuSwapchainComposition
    - id: presentMode
      type: SharpSDL3.Enums.GpuPresentMode
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if successful, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on error; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetGPUSwapchainParameters(device As IntPtr, window As IntPtr, swapchainComposition As GpuSwapchainComposition, presentMode As GpuPresentMode) As Boolean
  overload: SharpSDL3.Sdl.SetGPUSwapchainParameters*
  nameWithType.vb: Sdl.SetGPUSwapchainParameters(IntPtr, IntPtr, GpuSwapchainComposition, GpuPresentMode)
  fullName.vb: SharpSDL3.Sdl.SetGPUSwapchainParameters(System.IntPtr, System.IntPtr, SharpSDL3.Enums.GpuSwapchainComposition, SharpSDL3.Enums.GpuPresentMode)
  name.vb: SetGPUSwapchainParameters(IntPtr, IntPtr, GpuSwapchainComposition, GpuPresentMode)
- uid: SharpSDL3.Sdl.SetGPUTextureName(System.IntPtr,System.IntPtr,System.String)
  commentId: M:SharpSDL3.Sdl.SetGPUTextureName(System.IntPtr,System.IntPtr,System.String)
  id: SetGPUTextureName(System.IntPtr,System.IntPtr,System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetGPUTextureName(nint, nint, string)
  nameWithType: Sdl.SetGPUTextureName(nint, nint, string)
  fullName: SharpSDL3.Sdl.SetGPUTextureName(nint, nint, string)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetGPUTextureName
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 1599
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Sets an arbitrary string constant to label a texture.
  remarks: >-
    You should use

    SDL_PROP_GPU_TEXTURE_CREATE_NAME_STRING

    with SDL_CreateGPUTexture instead of this function

    to avoid thread safety issues.

    <p><strong>Thread Safety:</strong> This function is not thread safe, you must make sure the texture is notsimultaneously used by any other thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateGPUTexture(System.IntPtr%2cSharpSDL3.Structs.GpuTextureCreateInfo%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void SetGPUTextureName(nint device, nint texture, string text)
    parameters:
    - id: device
      type: System.IntPtr
      description: a GPU Context.
    - id: texture
      type: System.IntPtr
      description: a texture to attach the name to.
    - id: text
      type: System.String
      description: a UTF-8 string constant to mark as the name of the texture.
    content.vb: Public Shared Sub SetGPUTextureName(device As IntPtr, texture As IntPtr, text As String)
  overload: SharpSDL3.Sdl.SetGPUTextureName*
  nameWithType.vb: Sdl.SetGPUTextureName(IntPtr, IntPtr, String)
  fullName.vb: SharpSDL3.Sdl.SetGPUTextureName(System.IntPtr, System.IntPtr, String)
  name.vb: SetGPUTextureName(IntPtr, IntPtr, String)
- uid: SharpSDL3.Sdl.SetGPUViewport(System.IntPtr,SharpSDL3.Structs.GpuViewport@)
  commentId: M:SharpSDL3.Sdl.SetGPUViewport(System.IntPtr,SharpSDL3.Structs.GpuViewport@)
  id: SetGPUViewport(System.IntPtr,SharpSDL3.Structs.GpuViewport@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetGPUViewport(nint, in GpuViewport)
  nameWithType: Sdl.SetGPUViewport(nint, in GpuViewport)
  fullName: SharpSDL3.Sdl.SetGPUViewport(nint, in SharpSDL3.Structs.GpuViewport)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetGPUViewport
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 1617
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Sets the current viewport state on a command buffer.
  remarks: <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static void SetGPUViewport(nint renderPass, in GpuViewport viewport)
    parameters:
    - id: renderPass
      type: System.IntPtr
    - id: viewport
      type: SharpSDL3.Structs.GpuViewport
      description: the viewport to set.
    content.vb: Public Shared Sub SetGPUViewport(renderPass As IntPtr, viewport As GpuViewport)
  overload: SharpSDL3.Sdl.SetGPUViewport*
  nameWithType.vb: Sdl.SetGPUViewport(IntPtr, GpuViewport)
  fullName.vb: SharpSDL3.Sdl.SetGPUViewport(System.IntPtr, SharpSDL3.Structs.GpuViewport)
  name.vb: SetGPUViewport(IntPtr, GpuViewport)
- uid: SharpSDL3.Sdl.SubmitGPUCommandBuffer(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.SubmitGPUCommandBuffer(System.IntPtr)
  id: SubmitGPUCommandBuffer(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SubmitGPUCommandBuffer(nint)
  nameWithType: Sdl.SubmitGPUCommandBuffer(nint)
  fullName: SharpSDL3.Sdl.SubmitGPUCommandBuffer(nint)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SubmitGPUCommandBuffer
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 1637
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Submits a command buffer so its commands can be processed on the GPU.
  remarks: >-
    It is invalid to use the command buffer after this is called.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.AcquireGPUCommandBuffer(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.WaitAndAcquireGPUSwapchainTexture(System.IntPtr%2cSystem.IntPtr%2cSystem.IntPtr%40%2cSystem.UInt32%40%2cSystem.UInt32%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.AcquireGPUSwapchainTexture(System.IntPtr%2cSystem.IntPtr%2cSystem.IntPtr%40%2cSystem.UInt32%40%2cSystem.UInt32%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SubmitGPUCommandBufferAndAcquireFence(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SubmitGPUCommandBuffer(nint commandBuffer)
    parameters:
    - id: commandBuffer
      type: System.IntPtr
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SubmitGPUCommandBuffer(commandBuffer As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.SubmitGPUCommandBuffer*
  nameWithType.vb: Sdl.SubmitGPUCommandBuffer(IntPtr)
  fullName.vb: SharpSDL3.Sdl.SubmitGPUCommandBuffer(System.IntPtr)
  name.vb: SubmitGPUCommandBuffer(IntPtr)
- uid: SharpSDL3.Sdl.SubmitGPUCommandBufferAndAcquireFence(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.SubmitGPUCommandBufferAndAcquireFence(System.IntPtr)
  id: SubmitGPUCommandBufferAndAcquireFence(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SubmitGPUCommandBufferAndAcquireFence(nint)
  nameWithType: Sdl.SubmitGPUCommandBufferAndAcquireFence(nint)
  fullName: SharpSDL3.Sdl.SubmitGPUCommandBufferAndAcquireFence(nint)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SubmitGPUCommandBufferAndAcquireFence
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 1659
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Submits a command buffer so its commands can be processed on the GPU, and acquires a fence associated with the command buffer.
  remarks: >-
    You must release this fence when it is no longer needed or it will cause a

    leak. It is invalid to use the command buffer after this is called.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.AcquireGPUCommandBuffer(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.WaitAndAcquireGPUSwapchainTexture(System.IntPtr%2cSystem.IntPtr%2cSystem.IntPtr%40%2cSystem.UInt32%40%2cSystem.UInt32%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.AcquireGPUSwapchainTexture(System.IntPtr%2cSystem.IntPtr%2cSystem.IntPtr%40%2cSystem.UInt32%40%2cSystem.UInt32%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SubmitGPUCommandBuffer(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.ReleaseGPUFence(System.IntPtr%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint SubmitGPUCommandBufferAndAcquireFence(nint commandBuffer)
    parameters:
    - id: commandBuffer
      type: System.IntPtr
    return:
      type: System.IntPtr
      description: (SDL_GPUFence *) Returns a fence associated with thecommand buffer, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SubmitGPUCommandBufferAndAcquireFence(commandBuffer As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.SubmitGPUCommandBufferAndAcquireFence*
  nameWithType.vb: Sdl.SubmitGPUCommandBufferAndAcquireFence(IntPtr)
  fullName.vb: SharpSDL3.Sdl.SubmitGPUCommandBufferAndAcquireFence(System.IntPtr)
  name.vb: SubmitGPUCommandBufferAndAcquireFence(IntPtr)
- uid: SharpSDL3.Sdl.UnmapGPUTransferBuffer(System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.UnmapGPUTransferBuffer(System.IntPtr,System.IntPtr)
  id: UnmapGPUTransferBuffer(System.IntPtr,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: UnmapGPUTransferBuffer(nint, nint)
  nameWithType: Sdl.UnmapGPUTransferBuffer(nint, nint)
  fullName: SharpSDL3.Sdl.UnmapGPUTransferBuffer(nint, nint)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: UnmapGPUTransferBuffer
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 1674
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Unmaps a previously mapped transfer buffer.
  remarks: <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static void UnmapGPUTransferBuffer(nint device, nint transferBuffer)
    parameters:
    - id: device
      type: System.IntPtr
      description: a GPU context.
    - id: transferBuffer
      type: System.IntPtr
    content.vb: Public Shared Sub UnmapGPUTransferBuffer(device As IntPtr, transferBuffer As IntPtr)
  overload: SharpSDL3.Sdl.UnmapGPUTransferBuffer*
  nameWithType.vb: Sdl.UnmapGPUTransferBuffer(IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.UnmapGPUTransferBuffer(System.IntPtr, System.IntPtr)
  name.vb: UnmapGPUTransferBuffer(IntPtr, IntPtr)
- uid: SharpSDL3.Sdl.UploadToGPUBuffer(System.IntPtr,SharpSDL3.Structs.GpuTransferBufferLocation@,SharpSDL3.Structs.GpuBufferRegion@,System.Boolean)
  commentId: M:SharpSDL3.Sdl.UploadToGPUBuffer(System.IntPtr,SharpSDL3.Structs.GpuTransferBufferLocation@,SharpSDL3.Structs.GpuBufferRegion@,System.Boolean)
  id: UploadToGPUBuffer(System.IntPtr,SharpSDL3.Structs.GpuTransferBufferLocation@,SharpSDL3.Structs.GpuBufferRegion@,System.Boolean)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: UploadToGPUBuffer(nint, in GpuTransferBufferLocation, in GpuBufferRegion, bool)
  nameWithType: Sdl.UploadToGPUBuffer(nint, in GpuTransferBufferLocation, in GpuBufferRegion, bool)
  fullName: SharpSDL3.Sdl.UploadToGPUBuffer(nint, in SharpSDL3.Structs.GpuTransferBufferLocation, in SharpSDL3.Structs.GpuBufferRegion, bool)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: UploadToGPUBuffer
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 1696
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Uploads data from a transfer buffer to a buffer.
  remarks: >-
    The upload occurs on the GPU timeline. You may assume that the upload has

    finished in subsequent commands.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static void UploadToGPUBuffer(nint copyPass, in GpuTransferBufferLocation source, in GpuBufferRegion destination, bool cycle)
    parameters:
    - id: copyPass
      type: System.IntPtr
    - id: source
      type: SharpSDL3.Structs.GpuTransferBufferLocation
      description: the source transfer buffer with offset.
    - id: destination
      type: SharpSDL3.Structs.GpuBufferRegion
      description: the destination buffer with offset and size.
    - id: cycle
      type: System.Boolean
      description: if <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, cycles the buffer if it is already bound, otherwise overwrites the data.
    content.vb: Public Shared Sub UploadToGPUBuffer(copyPass As IntPtr, source As GpuTransferBufferLocation, destination As GpuBufferRegion, cycle As Boolean)
  overload: SharpSDL3.Sdl.UploadToGPUBuffer*
  nameWithType.vb: Sdl.UploadToGPUBuffer(IntPtr, GpuTransferBufferLocation, GpuBufferRegion, Boolean)
  fullName.vb: SharpSDL3.Sdl.UploadToGPUBuffer(System.IntPtr, SharpSDL3.Structs.GpuTransferBufferLocation, SharpSDL3.Structs.GpuBufferRegion, Boolean)
  name.vb: UploadToGPUBuffer(IntPtr, GpuTransferBufferLocation, GpuBufferRegion, Boolean)
- uid: SharpSDL3.Sdl.UploadToGPUTexture(System.IntPtr,SharpSDL3.Structs.GpuTextureTransferInfo@,SharpSDL3.Structs.GpuTextureRegion@,System.Boolean)
  commentId: M:SharpSDL3.Sdl.UploadToGPUTexture(System.IntPtr,SharpSDL3.Structs.GpuTextureTransferInfo@,SharpSDL3.Structs.GpuTextureRegion@,System.Boolean)
  id: UploadToGPUTexture(System.IntPtr,SharpSDL3.Structs.GpuTextureTransferInfo@,SharpSDL3.Structs.GpuTextureRegion@,System.Boolean)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: UploadToGPUTexture(nint, in GpuTextureTransferInfo, in GpuTextureRegion, bool)
  nameWithType: Sdl.UploadToGPUTexture(nint, in GpuTextureTransferInfo, in GpuTextureRegion, bool)
  fullName: SharpSDL3.Sdl.UploadToGPUTexture(nint, in SharpSDL3.Structs.GpuTextureTransferInfo, in SharpSDL3.Structs.GpuTextureRegion, bool)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: UploadToGPUTexture
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 1716
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Uploads data from a transfer buffer to a texture.
  remarks: >-
    The upload occurs on the GPU timeline. You may assume that the upload has

    finished in subsequent commands.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static void UploadToGPUTexture(nint copyPass, in GpuTextureTransferInfo source, in GpuTextureRegion destination, bool cycle)
    parameters:
    - id: copyPass
      type: System.IntPtr
    - id: source
      type: SharpSDL3.Structs.GpuTextureTransferInfo
      description: the source transfer buffer with image layout information.
    - id: destination
      type: SharpSDL3.Structs.GpuTextureRegion
      description: the destination texture region.
    - id: cycle
      type: System.Boolean
      description: if <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, cycles the texture if the texture is bound, otherwise overwrites the data.
    content.vb: Public Shared Sub UploadToGPUTexture(copyPass As IntPtr, source As GpuTextureTransferInfo, destination As GpuTextureRegion, cycle As Boolean)
  overload: SharpSDL3.Sdl.UploadToGPUTexture*
  nameWithType.vb: Sdl.UploadToGPUTexture(IntPtr, GpuTextureTransferInfo, GpuTextureRegion, Boolean)
  fullName.vb: SharpSDL3.Sdl.UploadToGPUTexture(System.IntPtr, SharpSDL3.Structs.GpuTextureTransferInfo, SharpSDL3.Structs.GpuTextureRegion, Boolean)
  name.vb: UploadToGPUTexture(IntPtr, GpuTextureTransferInfo, GpuTextureRegion, Boolean)
- uid: SharpSDL3.Sdl.WaitAndAcquireGPUSwapchainTexture(System.IntPtr,System.IntPtr,System.IntPtr@,System.UInt32@,System.UInt32@)
  commentId: M:SharpSDL3.Sdl.WaitAndAcquireGPUSwapchainTexture(System.IntPtr,System.IntPtr,System.IntPtr@,System.UInt32@,System.UInt32@)
  id: WaitAndAcquireGPUSwapchainTexture(System.IntPtr,System.IntPtr,System.IntPtr@,System.UInt32@,System.UInt32@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: WaitAndAcquireGPUSwapchainTexture(nint, nint, out nint, out uint, out uint)
  nameWithType: Sdl.WaitAndAcquireGPUSwapchainTexture(nint, nint, out nint, out uint, out uint)
  fullName: SharpSDL3.Sdl.WaitAndAcquireGPUSwapchainTexture(nint, nint, out nint, out uint, out uint)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: WaitAndAcquireGPUSwapchainTexture
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 1746
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Blocks the thread until a swapchain texture is available to be acquired, and then acquires it.
  remarks: >-
    When a swapchain texture is acquired on a command buffer, it will

    automatically be submitted for presentation when the command buffer is

    submitted. The swapchain texture should only be referenced by the command

    buffer used to acquire it. It is an error to call

    SDL_CancelGPUCommandBuffer() after a

    swapchain texture is acquired.

    <p><strong>Thread Safety:</strong> This function should only be called from the thread that created thewindow.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SubmitGPUCommandBuffer(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SubmitGPUCommandBufferAndAcquireFence(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.AcquireGPUSwapchainTexture(System.IntPtr%2cSystem.IntPtr%2cSystem.IntPtr%40%2cSystem.UInt32%40%2cSystem.UInt32%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool WaitAndAcquireGPUSwapchainTexture(nint commandBuffer, nint window, out nint swapchainTexture, out uint swapchainTextureWidth, out uint swapchainTextureHeight)
    parameters:
    - id: commandBuffer
      type: System.IntPtr
    - id: window
      type: System.IntPtr
      description: a window that has been claimed.
    - id: swapchainTexture
      type: System.IntPtr
    - id: swapchainTextureWidth
      type: System.UInt32
    - id: swapchainTextureHeight
      type: System.UInt32
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on error; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function WaitAndAcquireGPUSwapchainTexture(commandBuffer As IntPtr, window As IntPtr, swapchainTexture As IntPtr, swapchainTextureWidth As UInteger, swapchainTextureHeight As UInteger) As Boolean
  overload: SharpSDL3.Sdl.WaitAndAcquireGPUSwapchainTexture*
  nameWithType.vb: Sdl.WaitAndAcquireGPUSwapchainTexture(IntPtr, IntPtr, IntPtr, UInteger, UInteger)
  fullName.vb: SharpSDL3.Sdl.WaitAndAcquireGPUSwapchainTexture(System.IntPtr, System.IntPtr, System.IntPtr, UInteger, UInteger)
  name.vb: WaitAndAcquireGPUSwapchainTexture(IntPtr, IntPtr, IntPtr, UInteger, UInteger)
- uid: SharpSDL3.Sdl.WaitForGPUFences(System.IntPtr,System.Boolean,System.Span{System.IntPtr},System.UInt32)
  commentId: M:SharpSDL3.Sdl.WaitForGPUFences(System.IntPtr,System.Boolean,System.Span{System.IntPtr},System.UInt32)
  id: WaitForGPUFences(System.IntPtr,System.Boolean,System.Span{System.IntPtr},System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: WaitForGPUFences(nint, bool, Span<nint>, uint)
  nameWithType: Sdl.WaitForGPUFences(nint, bool, Span<nint>, uint)
  fullName: SharpSDL3.Sdl.WaitForGPUFences(nint, bool, System.Span<nint>, uint)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: WaitForGPUFences
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 1770
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Blocks the thread until the given fences are signaled.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SubmitGPUCommandBufferAndAcquireFence(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.WaitForGPUIdle(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool WaitForGPUFences(nint device, bool waitAll, Span<nint> fences, uint numFences)
    parameters:
    - id: device
      type: System.IntPtr
      description: a GPU context.
    - id: waitAll
      type: System.Boolean
    - id: fences
      type: System.Span{System.IntPtr}
      description: an array of fences to wait on.
    - id: numFences
      type: System.UInt32
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function WaitForGPUFences(device As IntPtr, waitAll As Boolean, fences As Span(Of IntPtr), numFences As UInteger) As Boolean
  overload: SharpSDL3.Sdl.WaitForGPUFences*
  nameWithType.vb: Sdl.WaitForGPUFences(IntPtr, Boolean, Span(Of IntPtr), UInteger)
  fullName.vb: SharpSDL3.Sdl.WaitForGPUFences(System.IntPtr, Boolean, System.Span(Of System.IntPtr), UInteger)
  name.vb: WaitForGPUFences(IntPtr, Boolean, Span(Of IntPtr), UInteger)
- uid: SharpSDL3.Sdl.WaitForGPUIdle(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.WaitForGPUIdle(System.IntPtr)
  id: WaitForGPUIdle(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: WaitForGPUIdle(nint)
  nameWithType: Sdl.WaitForGPUIdle(nint)
  fullName: SharpSDL3.Sdl.WaitForGPUIdle(nint)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: WaitForGPUIdle
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 1786
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Blocks the thread until the GPU is completely idle.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.WaitForGPUFences(System.IntPtr%2cSystem.Boolean%2cSystem.Span%7bSystem.IntPtr%7d%2cSystem.UInt32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool WaitForGPUIdle(nint device)
    parameters:
    - id: device
      type: System.IntPtr
      description: a GPU context.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function WaitForGPUIdle(device As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.WaitForGPUIdle*
  nameWithType.vb: Sdl.WaitForGPUIdle(IntPtr)
  fullName.vb: SharpSDL3.Sdl.WaitForGPUIdle(System.IntPtr)
  name.vb: WaitForGPUIdle(IntPtr)
- uid: SharpSDL3.Sdl.WaitForGPUSwapchain(System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.WaitForGPUSwapchain(System.IntPtr,System.IntPtr)
  id: WaitForGPUSwapchain(System.IntPtr,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: WaitForGPUSwapchain(nint, nint)
  nameWithType: Sdl.WaitForGPUSwapchain(nint, nint)
  fullName: SharpSDL3.Sdl.WaitForGPUSwapchain(nint, nint)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: WaitForGPUSwapchain
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 1806
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Blocks the thread until a swapchain texture is available to be acquired.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called from the thread that created thewindow.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.AcquireGPUSwapchainTexture(System.IntPtr%2cSystem.IntPtr%2cSystem.IntPtr%40%2cSystem.UInt32%40%2cSystem.UInt32%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.WaitAndAcquireGPUSwapchainTexture(System.IntPtr%2cSystem.IntPtr%2cSystem.IntPtr%40%2cSystem.UInt32%40%2cSystem.UInt32%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetGPUAllowedFramesInFlight(System.IntPtr%2cSystem.UInt32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool WaitForGPUSwapchain(nint device, nint window)
    parameters:
    - id: device
      type: System.IntPtr
      description: a GPU context.
    - id: window
      type: System.IntPtr
      description: a window that has been claimed.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function WaitForGPUSwapchain(device As IntPtr, window As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.WaitForGPUSwapchain*
  nameWithType.vb: Sdl.WaitForGPUSwapchain(IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.WaitForGPUSwapchain(System.IntPtr, System.IntPtr)
  name.vb: WaitForGPUSwapchain(IntPtr, IntPtr)
- uid: SharpSDL3.Sdl.WindowSupportsGPUPresentMode(System.IntPtr,System.IntPtr,SharpSDL3.Enums.GpuPresentMode)
  commentId: M:SharpSDL3.Sdl.WindowSupportsGPUPresentMode(System.IntPtr,System.IntPtr,SharpSDL3.Enums.GpuPresentMode)
  id: WindowSupportsGPUPresentMode(System.IntPtr,System.IntPtr,SharpSDL3.Enums.GpuPresentMode)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: WindowSupportsGPUPresentMode(nint, nint, GpuPresentMode)
  nameWithType: Sdl.WindowSupportsGPUPresentMode(nint, nint, GpuPresentMode)
  fullName: SharpSDL3.Sdl.WindowSupportsGPUPresentMode(nint, nint, SharpSDL3.Enums.GpuPresentMode)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: WindowSupportsGPUPresentMode
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 1828
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Determines whether a presentation mode is supported by the window.
  remarks: >-
    The window must be claimed before calling this function.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.ClaimWindowForGPUDevice(System.IntPtr%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool WindowSupportsGPUPresentMode(nint device, nint window, GpuPresentMode presentMode)
    parameters:
    - id: device
      type: System.IntPtr
      description: a GPU context.
    - id: window
      type: System.IntPtr
      description: an SDL_Window.
    - id: presentMode
      type: SharpSDL3.Enums.GpuPresentMode
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if supported, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if unsupported.
    content.vb: Public Shared Function WindowSupportsGPUPresentMode(device As IntPtr, window As IntPtr, presentMode As GpuPresentMode) As Boolean
  overload: SharpSDL3.Sdl.WindowSupportsGPUPresentMode*
  nameWithType.vb: Sdl.WindowSupportsGPUPresentMode(IntPtr, IntPtr, GpuPresentMode)
  fullName.vb: SharpSDL3.Sdl.WindowSupportsGPUPresentMode(System.IntPtr, System.IntPtr, SharpSDL3.Enums.GpuPresentMode)
  name.vb: WindowSupportsGPUPresentMode(IntPtr, IntPtr, GpuPresentMode)
- uid: SharpSDL3.Sdl.WindowSupportsGPUSwapchainComposition(System.IntPtr,System.IntPtr,SharpSDL3.Enums.GpuSwapchainComposition)
  commentId: M:SharpSDL3.Sdl.WindowSupportsGPUSwapchainComposition(System.IntPtr,System.IntPtr,SharpSDL3.Enums.GpuSwapchainComposition)
  id: WindowSupportsGPUSwapchainComposition(System.IntPtr,System.IntPtr,SharpSDL3.Enums.GpuSwapchainComposition)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: WindowSupportsGPUSwapchainComposition(nint, nint, GpuSwapchainComposition)
  nameWithType: Sdl.WindowSupportsGPUSwapchainComposition(nint, nint, GpuSwapchainComposition)
  fullName: SharpSDL3.Sdl.WindowSupportsGPUSwapchainComposition(nint, nint, SharpSDL3.Enums.GpuSwapchainComposition)
  type: Method
  source:
    remote:
      path: SDL3/Gpu.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: WindowSupportsGPUSwapchainComposition
    path: ../../repos/SDL3-CS/SDL3/Gpu.cs
    startLine: 1850
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Determines whether a swapchain composition is supported by the window.
  remarks: >-
    The window must be claimed before calling this function.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.ClaimWindowForGPUDevice(System.IntPtr%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool WindowSupportsGPUSwapchainComposition(nint device, nint window, GpuSwapchainComposition swapchainComposition)
    parameters:
    - id: device
      type: System.IntPtr
      description: a GPU context.
    - id: window
      type: System.IntPtr
      description: an SDL_Window.
    - id: swapchainComposition
      type: SharpSDL3.Enums.GpuSwapchainComposition
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if supported, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if unsupported.
    content.vb: Public Shared Function WindowSupportsGPUSwapchainComposition(device As IntPtr, window As IntPtr, swapchainComposition As GpuSwapchainComposition) As Boolean
  overload: SharpSDL3.Sdl.WindowSupportsGPUSwapchainComposition*
  nameWithType.vb: Sdl.WindowSupportsGPUSwapchainComposition(IntPtr, IntPtr, GpuSwapchainComposition)
  fullName.vb: SharpSDL3.Sdl.WindowSupportsGPUSwapchainComposition(System.IntPtr, System.IntPtr, SharpSDL3.Enums.GpuSwapchainComposition)
  name.vb: WindowSupportsGPUSwapchainComposition(IntPtr, IntPtr, GpuSwapchainComposition)
- uid: SharpSDL3.Sdl.CloseHaptic(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.CloseHaptic(System.IntPtr)
  id: CloseHaptic(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CloseHaptic(nint)
  nameWithType: Sdl.CloseHaptic(nint)
  fullName: SharpSDL3.Sdl.CloseHaptic(nint)
  type: Method
  source:
    remote:
      path: SDL3/Haptic.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CloseHaptic
    path: ../../repos/SDL3-CS/SDL3/Haptic.cs
    startLine: 18
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Close a haptic device previously opened with SDL_OpenHaptic().
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.OpenHaptic(System.UInt32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void CloseHaptic(nint haptic)
    parameters:
    - id: haptic
      type: System.IntPtr
      description: the SDL_Haptic device to close.
    content.vb: Public Shared Sub CloseHaptic(haptic As IntPtr)
  overload: SharpSDL3.Sdl.CloseHaptic*
  nameWithType.vb: Sdl.CloseHaptic(IntPtr)
  fullName.vb: SharpSDL3.Sdl.CloseHaptic(System.IntPtr)
  name.vb: CloseHaptic(IntPtr)
- uid: SharpSDL3.Sdl.CreateHapticEffect(System.IntPtr,SharpSDL3.Structs.HapticEffect@)
  commentId: M:SharpSDL3.Sdl.CreateHapticEffect(System.IntPtr,SharpSDL3.Structs.HapticEffect@)
  id: CreateHapticEffect(System.IntPtr,SharpSDL3.Structs.HapticEffect@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CreateHapticEffect(nint, ref HapticEffect)
  nameWithType: Sdl.CreateHapticEffect(nint, ref HapticEffect)
  fullName: SharpSDL3.Sdl.CreateHapticEffect(nint, ref SharpSDL3.Structs.HapticEffect)
  type: Method
  source:
    remote:
      path: SDL3/Haptic.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CreateHapticEffect
    path: ../../repos/SDL3-CS/SDL3/Haptic.cs
    startLine: 37
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Create a new haptic effect on a specified device.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.DestroyHapticEffect(System.IntPtr%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.RunHapticEffect(System.IntPtr%2cSystem.Int32%2cSystem.UInt32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.UpdateHapticEffect(System.IntPtr%2cSystem.Int32%2cSharpSDL3.Structs.HapticEffect%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static int CreateHapticEffect(nint haptic, ref HapticEffect effect)
    parameters:
    - id: haptic
      type: System.IntPtr
      description: an SDL_Haptic device to create the effect on.
    - id: effect
      type: SharpSDL3.Structs.HapticEffect
      description: an SDL_HapticEffect structure containing the properties of the effect to create.
    return:
      type: System.Int32
      description: Returns the ID of the effect on success or -1 on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function CreateHapticEffect(haptic As IntPtr, effect As HapticEffect) As Integer
  overload: SharpSDL3.Sdl.CreateHapticEffect*
  nameWithType.vb: Sdl.CreateHapticEffect(IntPtr, HapticEffect)
  fullName.vb: SharpSDL3.Sdl.CreateHapticEffect(System.IntPtr, SharpSDL3.Structs.HapticEffect)
  name.vb: CreateHapticEffect(IntPtr, HapticEffect)
- uid: SharpSDL3.Sdl.DestroyHapticEffect(System.IntPtr,System.Int32)
  commentId: M:SharpSDL3.Sdl.DestroyHapticEffect(System.IntPtr,System.Int32)
  id: DestroyHapticEffect(System.IntPtr,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: DestroyHapticEffect(nint, int)
  nameWithType: Sdl.DestroyHapticEffect(nint, int)
  fullName: SharpSDL3.Sdl.DestroyHapticEffect(nint, int)
  type: Method
  source:
    remote:
      path: SDL3/Haptic.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: DestroyHapticEffect
    path: ../../repos/SDL3-CS/SDL3/Haptic.cs
    startLine: 59
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Destroy a haptic effect on the device.
  remarks: >-
    This will stop the effect if it's running. Effects are automatically

    destroyed when the device is closed.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateHapticEffect(System.IntPtr%2cSharpSDL3.Structs.HapticEffect%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void DestroyHapticEffect(nint haptic, int effect)
    parameters:
    - id: haptic
      type: System.IntPtr
      description: the SDL_Haptic device to destroy the effect on.
    - id: effect
      type: System.Int32
      description: the ID of the haptic effect to destroy.
    content.vb: Public Shared Sub DestroyHapticEffect(haptic As IntPtr, effect As Integer)
  overload: SharpSDL3.Sdl.DestroyHapticEffect*
  nameWithType.vb: Sdl.DestroyHapticEffect(IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.DestroyHapticEffect(System.IntPtr, Integer)
  name.vb: DestroyHapticEffect(IntPtr, Integer)
- uid: SharpSDL3.Sdl.GetHapticEffectStatus(System.IntPtr,System.Int32)
  commentId: M:SharpSDL3.Sdl.GetHapticEffectStatus(System.IntPtr,System.Int32)
  id: GetHapticEffectStatus(System.IntPtr,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetHapticEffectStatus(nint, int)
  nameWithType: Sdl.GetHapticEffectStatus(nint, int)
  fullName: SharpSDL3.Sdl.GetHapticEffectStatus(nint, int)
  type: Method
  source:
    remote:
      path: SDL3/Haptic.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetHapticEffectStatus
    path: ../../repos/SDL3-CS/SDL3/Haptic.cs
    startLine: 77
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the status of the current effect on the specified haptic device.
  remarks: >-
    Device must support the SDL_HAPTIC_STATUS feature.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetHapticFeatures(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool GetHapticEffectStatus(nint haptic, int effect)
    parameters:
    - id: haptic
      type: System.IntPtr
      description: the SDL_Haptic device to query for the effect status on.
    - id: effect
      type: System.Int32
      description: the ID of the haptic effect to query its status.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if it is playing, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if it isn't playing or hapticstatus isn't supported.
    content.vb: Public Shared Function GetHapticEffectStatus(haptic As IntPtr, effect As Integer) As Boolean
  overload: SharpSDL3.Sdl.GetHapticEffectStatus*
  nameWithType.vb: Sdl.GetHapticEffectStatus(IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.GetHapticEffectStatus(System.IntPtr, Integer)
  name.vb: GetHapticEffectStatus(IntPtr, Integer)
- uid: SharpSDL3.Sdl.GetHapticFeatures(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetHapticFeatures(System.IntPtr)
  id: GetHapticFeatures(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetHapticFeatures(nint)
  nameWithType: Sdl.GetHapticFeatures(nint)
  fullName: SharpSDL3.Sdl.GetHapticFeatures(nint)
  type: Method
  source:
    remote:
      path: SDL3/Haptic.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetHapticFeatures
    path: ../../repos/SDL3-CS/SDL3/Haptic.cs
    startLine: 98
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the haptic device's supported features in bitwise manner.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    HapticEffectSupported

    <xref href="SharpSDL3.Sdl.GetMaxHapticEffects(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static uint GetHapticFeatures(nint haptic)
    parameters:
    - id: haptic
      type: System.IntPtr
      description: the SDL_Haptic device to query.
    return:
      type: System.UInt32
      description: Returns a list of supported haptic features in bitwisemanner (OR'd), or 0 on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetHapticFeatures(haptic As IntPtr) As UInteger
  overload: SharpSDL3.Sdl.GetHapticFeatures*
  nameWithType.vb: Sdl.GetHapticFeatures(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetHapticFeatures(System.IntPtr)
  name.vb: GetHapticFeatures(IntPtr)
- uid: SharpSDL3.Sdl.GetHapticFromId(System.UInt32)
  commentId: M:SharpSDL3.Sdl.GetHapticFromId(System.UInt32)
  id: GetHapticFromId(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetHapticFromId(uint)
  nameWithType: Sdl.GetHapticFromId(uint)
  fullName: SharpSDL3.Sdl.GetHapticFromId(uint)
  type: Method
  source:
    remote:
      path: SDL3/Haptic.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetHapticFromId
    path: ../../repos/SDL3-CS/SDL3/Haptic.cs
    startLine: 117
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the SDL_Haptic associated with an instance ID, if it has been opened.
  remarks: <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static nint GetHapticFromId(uint instanceId)
    parameters:
    - id: instanceId
      type: System.UInt32
    return:
      type: System.IntPtr
      description: (SDL_Haptic *) Returns an SDL_Haptic on successor <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure or if it hasn't been opened yet; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetHapticFromId(instanceId As UInteger) As IntPtr
  overload: SharpSDL3.Sdl.GetHapticFromId*
  nameWithType.vb: Sdl.GetHapticFromId(UInteger)
  fullName.vb: SharpSDL3.Sdl.GetHapticFromId(UInteger)
  name.vb: GetHapticFromId(UInteger)
- uid: SharpSDL3.Sdl.GetHapticId(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetHapticId(System.IntPtr)
  id: GetHapticId(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetHapticId(nint)
  nameWithType: Sdl.GetHapticId(nint)
  fullName: SharpSDL3.Sdl.GetHapticId(nint)
  type: Method
  source:
    remote:
      path: SDL3/Haptic.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetHapticId
    path: ../../repos/SDL3-CS/SDL3/Haptic.cs
    startLine: 136
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the instance ID of an opened haptic device.
  remarks: <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static uint GetHapticId(nint haptic)
    parameters:
    - id: haptic
      type: System.IntPtr
      description: the SDL_Haptic device to query.
    return:
      type: System.UInt32
      description: Returns the instance ID of the specifiedhaptic device on success or 0 on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetHapticId(haptic As IntPtr) As UInteger
  overload: SharpSDL3.Sdl.GetHapticId*
  nameWithType.vb: Sdl.GetHapticId(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetHapticId(System.IntPtr)
  name.vb: GetHapticId(IntPtr)
- uid: SharpSDL3.Sdl.GetHapticName(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetHapticName(System.IntPtr)
  id: GetHapticName(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetHapticName(nint)
  nameWithType: Sdl.GetHapticName(nint)
  fullName: SharpSDL3.Sdl.GetHapticName(nint)
  type: Method
  source:
    remote:
      path: SDL3/Haptic.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetHapticName
    path: ../../repos/SDL3-CS/SDL3/Haptic.cs
    startLine: 156
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the implementation dependent name of a haptic device.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    GetHapticNameForID
  example: []
  syntax:
    content: public static string GetHapticName(nint haptic)
    parameters:
    - id: haptic
      type: System.IntPtr
      description: the SDL_Haptic obtained from SDL_OpenJoystick().
    return:
      type: System.String
      description: Returns the name of the selected haptic device. If no namecan be found, this function returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetHapticName(haptic As IntPtr) As String
  overload: SharpSDL3.Sdl.GetHapticName*
  nameWithType.vb: Sdl.GetHapticName(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetHapticName(System.IntPtr)
  name.vb: GetHapticName(IntPtr)
- uid: SharpSDL3.Sdl.GetHapticNameforId(System.UInt32)
  commentId: M:SharpSDL3.Sdl.GetHapticNameforId(System.UInt32)
  id: GetHapticNameforId(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetHapticNameforId(uint)
  nameWithType: Sdl.GetHapticNameforId(uint)
  fullName: SharpSDL3.Sdl.GetHapticNameforId(uint)
  type: Method
  source:
    remote:
      path: SDL3/Haptic.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetHapticNameforId
    path: ../../repos/SDL3-CS/SDL3/Haptic.cs
    startLine: 178
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the implementation dependent name of a haptic device.
  remarks: >-
    This can be called before any haptic devices are opened.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetHapticName(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.OpenHaptic(System.UInt32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static string GetHapticNameforId(uint instanceId)
    parameters:
    - id: instanceId
      type: System.UInt32
    return:
      type: System.String
      description: Returns the name of the selected haptic device. If no namecan be found, this function returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetHapticNameforId(instanceId As UInteger) As String
  overload: SharpSDL3.Sdl.GetHapticNameforId*
  nameWithType.vb: Sdl.GetHapticNameforId(UInteger)
  fullName.vb: SharpSDL3.Sdl.GetHapticNameforId(UInteger)
  name.vb: GetHapticNameforId(UInteger)
- uid: SharpSDL3.Sdl.GetHaptics
  commentId: M:SharpSDL3.Sdl.GetHaptics
  id: GetHaptics
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetHaptics()
  nameWithType: Sdl.GetHaptics()
  fullName: SharpSDL3.Sdl.GetHaptics()
  type: Method
  source:
    remote:
      path: SDL3/Haptic.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetHaptics
    path: ../../repos/SDL3-CS/SDL3/Haptic.cs
    startLine: 199
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get a list of currently connected haptic devices.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.OpenHaptic(System.UInt32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static Span<nint> GetHaptics()
    return:
      type: System.Span{System.IntPtr}
      description: (SDL_HapticID *) Returns a 0 terminated array of hapticdevice instance IDs or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref>for more information. This should be freed with <xref href="SharpSDL3.Sdl.Free(System.IntPtr)" data-throw-if-not-resolved="false"></xref> whenit is no longer needed.
    content.vb: Public Shared Function GetHaptics() As Span(Of IntPtr)
  overload: SharpSDL3.Sdl.GetHaptics*
- uid: SharpSDL3.Sdl.GetMaxHapticEffects(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetMaxHapticEffects(System.IntPtr)
  id: GetMaxHapticEffects(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetMaxHapticEffects(nint)
  nameWithType: Sdl.GetMaxHapticEffects(nint)
  fullName: SharpSDL3.Sdl.GetMaxHapticEffects(nint)
  type: Method
  source:
    remote:
      path: SDL3/Haptic.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetMaxHapticEffects
    path: ../../repos/SDL3-CS/SDL3/Haptic.cs
    startLine: 230
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the number of effects a haptic device can store.
  remarks: >-
    On some platforms this isn't fully supported, and therefore is an

    approximation. Always check to see if your created effect was actually

    created and do not rely solely on

    SDL_GetMaxHapticEffects().

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetMaxHapticEffectsPlaying(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetHapticFeatures(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static int GetMaxHapticEffects(nint haptic)
    parameters:
    - id: haptic
      type: System.IntPtr
      description: the SDL_Haptic device to query.
    return:
      type: System.Int32
      description: Returns the number of effects the haptic device can store or anegative error code on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetMaxHapticEffects(haptic As IntPtr) As Integer
  overload: SharpSDL3.Sdl.GetMaxHapticEffects*
  nameWithType.vb: Sdl.GetMaxHapticEffects(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetMaxHapticEffects(System.IntPtr)
  name.vb: GetMaxHapticEffects(IntPtr)
- uid: SharpSDL3.Sdl.GetMaxHapticEffectsPlaying(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetMaxHapticEffectsPlaying(System.IntPtr)
  id: GetMaxHapticEffectsPlaying(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetMaxHapticEffectsPlaying(nint)
  nameWithType: Sdl.GetMaxHapticEffectsPlaying(nint)
  fullName: SharpSDL3.Sdl.GetMaxHapticEffectsPlaying(nint)
  type: Method
  source:
    remote:
      path: SDL3/Haptic.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetMaxHapticEffectsPlaying
    path: ../../repos/SDL3-CS/SDL3/Haptic.cs
    startLine: 252
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the number of effects a haptic device can play at the same time.
  remarks: >-
    This is not supported on all platforms, but will always return a value.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetMaxHapticEffects(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetHapticFeatures(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static int GetMaxHapticEffectsPlaying(nint haptic)
    parameters:
    - id: haptic
      type: System.IntPtr
      description: the SDL_Haptic device to query maximum playing effects.
    return:
      type: System.Int32
      description: Returns the number of effects the haptic device can play at the sametime or -1 on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetMaxHapticEffectsPlaying(haptic As IntPtr) As Integer
  overload: SharpSDL3.Sdl.GetMaxHapticEffectsPlaying*
  nameWithType.vb: Sdl.GetMaxHapticEffectsPlaying(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetMaxHapticEffectsPlaying(System.IntPtr)
  name.vb: GetMaxHapticEffectsPlaying(IntPtr)
- uid: SharpSDL3.Sdl.GetNumHapticAxes(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetNumHapticAxes(System.IntPtr)
  id: GetNumHapticAxes(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetNumHapticAxes(nint)
  nameWithType: Sdl.GetNumHapticAxes(nint)
  fullName: SharpSDL3.Sdl.GetNumHapticAxes(nint)
  type: Method
  source:
    remote:
      path: SDL3/Haptic.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetNumHapticAxes
    path: ../../repos/SDL3-CS/SDL3/Haptic.cs
    startLine: 273
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the number of haptic axes the device has.
  remarks: >-
    The number of haptic axes might be useful if working with the

    SDL_HapticDirection effect.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static int GetNumHapticAxes(nint haptic)
    parameters:
    - id: haptic
      type: System.IntPtr
      description: the SDL_Haptic device to query.
    return:
      type: System.Int32
      description: Returns the number of axes on success or -1 on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetNumHapticAxes(haptic As IntPtr) As Integer
  overload: SharpSDL3.Sdl.GetNumHapticAxes*
  nameWithType.vb: Sdl.GetNumHapticAxes(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetNumHapticAxes(System.IntPtr)
  name.vb: GetNumHapticAxes(IntPtr)
- uid: SharpSDL3.Sdl.InitHapticRumble(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.InitHapticRumble(System.IntPtr)
  id: InitHapticRumble(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: InitHapticRumble(nint)
  nameWithType: Sdl.InitHapticRumble(nint)
  fullName: SharpSDL3.Sdl.InitHapticRumble(nint)
  type: Method
  source:
    remote:
      path: SDL3/Haptic.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: InitHapticRumble
    path: ../../repos/SDL3-CS/SDL3/Haptic.cs
    startLine: 295
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Initialize a haptic device for simple rumble playback.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.PlayHapticRumble(System.IntPtr%2cSystem.Single%2cSystem.UInt32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.StopHapticRumble(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    HapticRumbleSupported
  example: []
  syntax:
    content: public static bool InitHapticRumble(nint haptic)
    parameters:
    - id: haptic
      type: System.IntPtr
      description: the haptic device to initialize for simple rumble playback.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function InitHapticRumble(haptic As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.InitHapticRumble*
  nameWithType.vb: Sdl.InitHapticRumble(IntPtr)
  fullName.vb: SharpSDL3.Sdl.InitHapticRumble(System.IntPtr)
  name.vb: InitHapticRumble(IntPtr)
- uid: SharpSDL3.Sdl.IsHapticEffectSupported(System.IntPtr,SharpSDL3.Structs.HapticEffect@)
  commentId: M:SharpSDL3.Sdl.IsHapticEffectSupported(System.IntPtr,SharpSDL3.Structs.HapticEffect@)
  id: IsHapticEffectSupported(System.IntPtr,SharpSDL3.Structs.HapticEffect@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: IsHapticEffectSupported(nint, ref HapticEffect)
  nameWithType: Sdl.IsHapticEffectSupported(nint, ref HapticEffect)
  fullName: SharpSDL3.Sdl.IsHapticEffectSupported(nint, ref SharpSDL3.Structs.HapticEffect)
  type: Method
  source:
    remote:
      path: SDL3/Haptic.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: IsHapticEffectSupported
    path: ../../repos/SDL3-CS/SDL3/Haptic.cs
    startLine: 306
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static bool IsHapticEffectSupported(nint haptic, ref HapticEffect effect)
    parameters:
    - id: haptic
      type: System.IntPtr
    - id: effect
      type: SharpSDL3.Structs.HapticEffect
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsHapticEffectSupported(haptic As IntPtr, effect As HapticEffect) As Boolean
  overload: SharpSDL3.Sdl.IsHapticEffectSupported*
  nameWithType.vb: Sdl.IsHapticEffectSupported(IntPtr, HapticEffect)
  fullName.vb: SharpSDL3.Sdl.IsHapticEffectSupported(System.IntPtr, SharpSDL3.Structs.HapticEffect)
  name.vb: IsHapticEffectSupported(IntPtr, HapticEffect)
- uid: SharpSDL3.Sdl.IsHapticRumbleSupported(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.IsHapticRumbleSupported(System.IntPtr)
  id: IsHapticRumbleSupported(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: IsHapticRumbleSupported(nint)
  nameWithType: Sdl.IsHapticRumbleSupported(nint)
  fullName: SharpSDL3.Sdl.IsHapticRumbleSupported(nint)
  type: Method
  source:
    remote:
      path: SDL3/Haptic.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: IsHapticRumbleSupported
    path: ../../repos/SDL3-CS/SDL3/Haptic.cs
    startLine: 318
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static bool IsHapticRumbleSupported(nint haptic)
    parameters:
    - id: haptic
      type: System.IntPtr
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsHapticRumbleSupported(haptic As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.IsHapticRumbleSupported*
  nameWithType.vb: Sdl.IsHapticRumbleSupported(IntPtr)
  fullName.vb: SharpSDL3.Sdl.IsHapticRumbleSupported(System.IntPtr)
  name.vb: IsHapticRumbleSupported(IntPtr)
- uid: SharpSDL3.Sdl.IsJoystickHaptic(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.IsJoystickHaptic(System.IntPtr)
  id: IsJoystickHaptic(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: IsJoystickHaptic(nint)
  nameWithType: Sdl.IsJoystickHaptic(nint)
  fullName: SharpSDL3.Sdl.IsJoystickHaptic(nint)
  type: Method
  source:
    remote:
      path: SDL3/Haptic.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: IsJoystickHaptic
    path: ../../repos/SDL3-CS/SDL3/Haptic.cs
    startLine: 338
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Query if a joystick has haptic features.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.OpenHapticFromJoystick(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool IsJoystickHaptic(nint joystick)
    parameters:
    - id: joystick
      type: System.IntPtr
      description: the SDL_Joystick to test for haptic capabilities.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the joystick is haptic or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if it isn't.
    content.vb: Public Shared Function IsJoystickHaptic(joystick As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.IsJoystickHaptic*
  nameWithType.vb: Sdl.IsJoystickHaptic(IntPtr)
  fullName.vb: SharpSDL3.Sdl.IsJoystickHaptic(System.IntPtr)
  name.vb: IsJoystickHaptic(IntPtr)
- uid: SharpSDL3.Sdl.IsMouseHaptic
  commentId: M:SharpSDL3.Sdl.IsMouseHaptic
  id: IsMouseHaptic
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: IsMouseHaptic()
  nameWithType: Sdl.IsMouseHaptic()
  fullName: SharpSDL3.Sdl.IsMouseHaptic()
  type: Method
  source:
    remote:
      path: SDL3/Haptic.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: IsMouseHaptic
    path: ../../repos/SDL3-CS/SDL3/Haptic.cs
    startLine: 356
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Query whether or not the current mouse has haptic capabilities.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.OpenHapticFromMouse" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool IsMouseHaptic()
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the mouse is haptic or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if it isn't.
    content.vb: Public Shared Function IsMouseHaptic() As Boolean
  overload: SharpSDL3.Sdl.IsMouseHaptic*
- uid: SharpSDL3.Sdl.OpenHaptic(System.UInt32)
  commentId: M:SharpSDL3.Sdl.OpenHaptic(System.UInt32)
  id: OpenHaptic(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: OpenHaptic(uint)
  nameWithType: Sdl.OpenHaptic(uint)
  fullName: SharpSDL3.Sdl.OpenHaptic(uint)
  type: Method
  source:
    remote:
      path: SDL3/Haptic.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: OpenHaptic
    path: ../../repos/SDL3-CS/SDL3/Haptic.cs
    startLine: 380
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Open a haptic device for use.
  remarks: >-
    The index passed as an argument refers to the N'th haptic device on this

    system.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CloseHaptic(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetHaptics" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.OpenHapticFromJoystick(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.OpenHapticFromMouse" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetHapticAutocenter(System.IntPtr%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetHapticGain(System.IntPtr%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint OpenHaptic(uint instanceId)
    parameters:
    - id: instanceId
      type: System.UInt32
    return:
      type: System.IntPtr
      description: (SDL_Haptic *) Returns the device identifier or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function OpenHaptic(instanceId As UInteger) As IntPtr
  overload: SharpSDL3.Sdl.OpenHaptic*
  nameWithType.vb: Sdl.OpenHaptic(UInteger)
  fullName.vb: SharpSDL3.Sdl.OpenHaptic(UInteger)
  name.vb: OpenHaptic(UInteger)
- uid: SharpSDL3.Sdl.OpenHapticFromJoystick(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.OpenHapticFromJoystick(System.IntPtr)
  id: OpenHapticFromJoystick(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: OpenHapticFromJoystick(nint)
  nameWithType: Sdl.OpenHapticFromJoystick(nint)
  fullName: SharpSDL3.Sdl.OpenHapticFromJoystick(nint)
  type: Method
  source:
    remote:
      path: SDL3/Haptic.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: OpenHapticFromJoystick
    path: ../../repos/SDL3-CS/SDL3/Haptic.cs
    startLine: 403
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Open a haptic device for use from a joystick device.
  remarks: >-
    You must still close the haptic device separately. It will not be closed

    with the joystick.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CloseHaptic(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.IsJoystickHaptic(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint OpenHapticFromJoystick(nint joystick)
    parameters:
    - id: joystick
      type: System.IntPtr
      description: the SDL_Joystick to create a haptic device from.
    return:
      type: System.IntPtr
      description: (SDL_Haptic *) Returns a valid haptic device identifier on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function OpenHapticFromJoystick(joystick As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.OpenHapticFromJoystick*
  nameWithType.vb: Sdl.OpenHapticFromJoystick(IntPtr)
  fullName.vb: SharpSDL3.Sdl.OpenHapticFromJoystick(System.IntPtr)
  name.vb: OpenHapticFromJoystick(IntPtr)
- uid: SharpSDL3.Sdl.OpenHapticFromMouse
  commentId: M:SharpSDL3.Sdl.OpenHapticFromMouse
  id: OpenHapticFromMouse
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: OpenHapticFromMouse()
  nameWithType: Sdl.OpenHapticFromMouse()
  fullName: SharpSDL3.Sdl.OpenHapticFromMouse()
  type: Method
  source:
    remote:
      path: SDL3/Haptic.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: OpenHapticFromMouse
    path: ../../repos/SDL3-CS/SDL3/Haptic.cs
    startLine: 422
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Try to open a haptic device from the current mouse.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CloseHaptic(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.IsMouseHaptic" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint OpenHapticFromMouse()
    return:
      type: System.IntPtr
      description: (SDL_Haptic *) Returns the haptic device identifier or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function OpenHapticFromMouse() As IntPtr
  overload: SharpSDL3.Sdl.OpenHapticFromMouse*
- uid: SharpSDL3.Sdl.PauseHaptic(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.PauseHaptic(System.IntPtr)
  id: PauseHaptic(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: PauseHaptic(nint)
  nameWithType: Sdl.PauseHaptic(nint)
  fullName: SharpSDL3.Sdl.PauseHaptic(nint)
  type: Method
  source:
    remote:
      path: SDL3/Haptic.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: PauseHaptic
    path: ../../repos/SDL3-CS/SDL3/Haptic.cs
    startLine: 441
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Pause a haptic device.
  remarks: >-
    Device must support the SDL_HAPTIC_PAUSE feature.

    Call SDL_ResumeHaptic() to resume playback.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.ResumeHaptic(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool PauseHaptic(nint haptic)
    parameters:
    - id: haptic
      type: System.IntPtr
      description: the SDL_Haptic device to pause.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function PauseHaptic(haptic As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.PauseHaptic*
  nameWithType.vb: Sdl.PauseHaptic(IntPtr)
  fullName.vb: SharpSDL3.Sdl.PauseHaptic(System.IntPtr)
  name.vb: PauseHaptic(IntPtr)
- uid: SharpSDL3.Sdl.PlayHapticRumble(System.IntPtr,System.Single,System.UInt32)
  commentId: M:SharpSDL3.Sdl.PlayHapticRumble(System.IntPtr,System.Single,System.UInt32)
  id: PlayHapticRumble(System.IntPtr,System.Single,System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: PlayHapticRumble(nint, float, uint)
  nameWithType: Sdl.PlayHapticRumble(nint, float, uint)
  fullName: SharpSDL3.Sdl.PlayHapticRumble(nint, float, uint)
  type: Method
  source:
    remote:
      path: SDL3/Haptic.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: PlayHapticRumble
    path: ../../repos/SDL3-CS/SDL3/Haptic.cs
    startLine: 464
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Run a simple rumble effect on a haptic device.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.InitHapticRumble(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.StopHapticRumble(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool PlayHapticRumble(nint haptic, float strength, uint length)
    parameters:
    - id: haptic
      type: System.IntPtr
      description: the haptic device to play the rumble effect on.
    - id: strength
      type: System.Single
      description: strength of the rumble to play as a 0-1 float value.
    - id: length
      type: System.UInt32
      description: length of the rumble to play in milliseconds.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function PlayHapticRumble(haptic As IntPtr, strength As Single, length As UInteger) As Boolean
  overload: SharpSDL3.Sdl.PlayHapticRumble*
  nameWithType.vb: Sdl.PlayHapticRumble(IntPtr, Single, UInteger)
  fullName.vb: SharpSDL3.Sdl.PlayHapticRumble(System.IntPtr, Single, UInteger)
  name.vb: PlayHapticRumble(IntPtr, Single, UInteger)
- uid: SharpSDL3.Sdl.ResumeHaptic(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.ResumeHaptic(System.IntPtr)
  id: ResumeHaptic(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ResumeHaptic(nint)
  nameWithType: Sdl.ResumeHaptic(nint)
  fullName: SharpSDL3.Sdl.ResumeHaptic(nint)
  type: Method
  source:
    remote:
      path: SDL3/Haptic.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ResumeHaptic
    path: ../../repos/SDL3-CS/SDL3/Haptic.cs
    startLine: 488
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Resume a haptic device.
  remarks: >-
    Call to unpause after SDL_PauseHaptic().

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.PauseHaptic(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool ResumeHaptic(nint haptic)
    parameters:
    - id: haptic
      type: System.IntPtr
      description: the SDL_Haptic device to unpause.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function ResumeHaptic(haptic As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.ResumeHaptic*
  nameWithType.vb: Sdl.ResumeHaptic(IntPtr)
  fullName.vb: SharpSDL3.Sdl.ResumeHaptic(System.IntPtr)
  name.vb: ResumeHaptic(IntPtr)
- uid: SharpSDL3.Sdl.RunHapticEffect(System.IntPtr,System.Int32,System.UInt32)
  commentId: M:SharpSDL3.Sdl.RunHapticEffect(System.IntPtr,System.Int32,System.UInt32)
  id: RunHapticEffect(System.IntPtr,System.Int32,System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RunHapticEffect(nint, int, uint)
  nameWithType: Sdl.RunHapticEffect(nint, int, uint)
  fullName: SharpSDL3.Sdl.RunHapticEffect(nint, int, uint)
  type: Method
  source:
    remote:
      path: SDL3/Haptic.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RunHapticEffect
    path: ../../repos/SDL3-CS/SDL3/Haptic.cs
    startLine: 517
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Run the haptic effect on its associated haptic device.
  remarks: >-
    To repeat the effect over and over indefinitely, set iterations to

    SDL_HAPTIC_INFINITY. (Repeats the envelope -

    attack and fade.) To make one instance of the effect last indefinitely (so

    the effect does not fade), set the effect's length in its structure/union

    to SDL_HAPTIC_INFINITY instead.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetHapticEffectStatus(System.IntPtr%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.StopHapticEffect(System.IntPtr%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.StopHapticEffects(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool RunHapticEffect(nint haptic, int effect, uint iterations)
    parameters:
    - id: haptic
      type: System.IntPtr
      description: the SDL_Haptic device to run the effect on.
    - id: effect
      type: System.Int32
      description: the ID of the haptic effect to run.
    - id: iterations
      type: System.UInt32
      description: the number of iterations to run the effect; use SDL_HAPTIC_INFINITY to repeat forever.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function RunHapticEffect(haptic As IntPtr, effect As Integer, iterations As UInteger) As Boolean
  overload: SharpSDL3.Sdl.RunHapticEffect*
  nameWithType.vb: Sdl.RunHapticEffect(IntPtr, Integer, UInteger)
  fullName.vb: SharpSDL3.Sdl.RunHapticEffect(System.IntPtr, Integer, UInteger)
  name.vb: RunHapticEffect(IntPtr, Integer, UInteger)
- uid: SharpSDL3.Sdl.SetHapticAutocenter(System.IntPtr,System.Int32)
  commentId: M:SharpSDL3.Sdl.SetHapticAutocenter(System.IntPtr,System.Int32)
  id: SetHapticAutocenter(System.IntPtr,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetHapticAutocenter(nint, int)
  nameWithType: Sdl.SetHapticAutocenter(nint, int)
  fullName: SharpSDL3.Sdl.SetHapticAutocenter(nint, int)
  type: Method
  source:
    remote:
      path: SDL3/Haptic.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetHapticAutocenter
    path: ../../repos/SDL3-CS/SDL3/Haptic.cs
    startLine: 540
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set the global autocenter of the device.
  remarks: >-
    Autocenter should be between 0 and 100. Setting it to 0 will disable

    autocentering.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetHapticFeatures(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetHapticAutocenter(nint haptic, int autocenter)
    parameters:
    - id: haptic
      type: System.IntPtr
      description: the SDL_Haptic device to set autocentering on.
    - id: autocenter
      type: System.Int32
      description: value to set autocenter to (0-100).
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetHapticAutocenter(haptic As IntPtr, autocenter As Integer) As Boolean
  overload: SharpSDL3.Sdl.SetHapticAutocenter*
  nameWithType.vb: Sdl.SetHapticAutocenter(IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.SetHapticAutocenter(System.IntPtr, Integer)
  name.vb: SetHapticAutocenter(IntPtr, Integer)
- uid: SharpSDL3.Sdl.SetHapticGain(System.IntPtr,System.Int32)
  commentId: M:SharpSDL3.Sdl.SetHapticGain(System.IntPtr,System.Int32)
  id: SetHapticGain(System.IntPtr,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetHapticGain(nint, int)
  nameWithType: Sdl.SetHapticGain(nint, int)
  fullName: SharpSDL3.Sdl.SetHapticGain(nint, int)
  type: Method
  source:
    remote:
      path: SDL3/Haptic.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetHapticGain
    path: ../../repos/SDL3-CS/SDL3/Haptic.cs
    startLine: 562
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set the global gain of the specified haptic device.
  remarks: >-
    Device must support the SDL_HAPTIC_GAIN feature.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetHapticFeatures(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetHapticGain(nint haptic, int gain)
    parameters:
    - id: haptic
      type: System.IntPtr
      description: the SDL_Haptic device to set the gain on.
    - id: gain
      type: System.Int32
      description: value to set the gain to, should be between 0 and 100 (0 - 100).
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetHapticGain(haptic As IntPtr, gain As Integer) As Boolean
  overload: SharpSDL3.Sdl.SetHapticGain*
  nameWithType.vb: Sdl.SetHapticGain(IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.SetHapticGain(System.IntPtr, Integer)
  name.vb: SetHapticGain(IntPtr, Integer)
- uid: SharpSDL3.Sdl.StopHapticEffect(System.IntPtr,System.Int32)
  commentId: M:SharpSDL3.Sdl.StopHapticEffect(System.IntPtr,System.Int32)
  id: StopHapticEffect(System.IntPtr,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: StopHapticEffect(nint, int)
  nameWithType: Sdl.StopHapticEffect(nint, int)
  fullName: SharpSDL3.Sdl.StopHapticEffect(nint, int)
  type: Method
  source:
    remote:
      path: SDL3/Haptic.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: StopHapticEffect
    path: ../../repos/SDL3-CS/SDL3/Haptic.cs
    startLine: 584
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Stop the haptic effect on its associated haptic device.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.RunHapticEffect(System.IntPtr%2cSystem.Int32%2cSystem.UInt32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.StopHapticEffects(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool StopHapticEffect(nint haptic, int effect)
    parameters:
    - id: haptic
      type: System.IntPtr
      description: the SDL_Haptic device to stop the effect on.
    - id: effect
      type: System.Int32
      description: the ID of the haptic effect to stop.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function StopHapticEffect(haptic As IntPtr, effect As Integer) As Boolean
  overload: SharpSDL3.Sdl.StopHapticEffect*
  nameWithType.vb: Sdl.StopHapticEffect(IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.StopHapticEffect(System.IntPtr, Integer)
  name.vb: StopHapticEffect(IntPtr, Integer)
- uid: SharpSDL3.Sdl.StopHapticEffects(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.StopHapticEffects(System.IntPtr)
  id: StopHapticEffects(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: StopHapticEffects(nint)
  nameWithType: Sdl.StopHapticEffects(nint)
  fullName: SharpSDL3.Sdl.StopHapticEffects(nint)
  type: Method
  source:
    remote:
      path: SDL3/Haptic.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: StopHapticEffects
    path: ../../repos/SDL3-CS/SDL3/Haptic.cs
    startLine: 605
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Stop all the currently playing effects on a haptic device.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.RunHapticEffect(System.IntPtr%2cSystem.Int32%2cSystem.UInt32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.StopHapticEffects(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool StopHapticEffects(nint haptic)
    parameters:
    - id: haptic
      type: System.IntPtr
      description: the SDL_Haptic device to stop.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function StopHapticEffects(haptic As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.StopHapticEffects*
  nameWithType.vb: Sdl.StopHapticEffects(IntPtr)
  fullName.vb: SharpSDL3.Sdl.StopHapticEffects(System.IntPtr)
  name.vb: StopHapticEffects(IntPtr)
- uid: SharpSDL3.Sdl.StopHapticRumble(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.StopHapticRumble(System.IntPtr)
  id: StopHapticRumble(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: StopHapticRumble(nint)
  nameWithType: Sdl.StopHapticRumble(nint)
  fullName: SharpSDL3.Sdl.StopHapticRumble(nint)
  type: Method
  source:
    remote:
      path: SDL3/Haptic.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: StopHapticRumble
    path: ../../repos/SDL3-CS/SDL3/Haptic.cs
    startLine: 625
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Stop the simple rumble on a haptic device.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.PlayHapticRumble(System.IntPtr%2cSystem.Single%2cSystem.UInt32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool StopHapticRumble(nint haptic)
    parameters:
    - id: haptic
      type: System.IntPtr
      description: the haptic device to stop the rumble effect on.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function StopHapticRumble(haptic As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.StopHapticRumble*
  nameWithType.vb: Sdl.StopHapticRumble(IntPtr)
  fullName.vb: SharpSDL3.Sdl.StopHapticRumble(System.IntPtr)
  name.vb: StopHapticRumble(IntPtr)
- uid: SharpSDL3.Sdl.UpdateHapticEffect(System.IntPtr,System.Int32,SharpSDL3.Structs.HapticEffect@)
  commentId: M:SharpSDL3.Sdl.UpdateHapticEffect(System.IntPtr,System.Int32,SharpSDL3.Structs.HapticEffect@)
  id: UpdateHapticEffect(System.IntPtr,System.Int32,SharpSDL3.Structs.HapticEffect@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: UpdateHapticEffect(nint, int, ref HapticEffect)
  nameWithType: Sdl.UpdateHapticEffect(nint, int, ref HapticEffect)
  fullName: SharpSDL3.Sdl.UpdateHapticEffect(nint, int, ref SharpSDL3.Structs.HapticEffect)
  type: Method
  source:
    remote:
      path: SDL3/Haptic.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: UpdateHapticEffect
    path: ../../repos/SDL3-CS/SDL3/Haptic.cs
    startLine: 652
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Update the properties of an effect.
  remarks: >-
    Can be used dynamically, although behavior when dynamically changing

    direction may be strange. Specifically the effect may re-upload itself and

    start playing from the start. You also cannot change the type either when

    running SDL_UpdateHapticEffect().

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateHapticEffect(System.IntPtr%2cSharpSDL3.Structs.HapticEffect%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.RunHapticEffect(System.IntPtr%2cSystem.Int32%2cSystem.UInt32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool UpdateHapticEffect(nint haptic, int effect, ref HapticEffect data)
    parameters:
    - id: haptic
      type: System.IntPtr
      description: the SDL_Haptic device that has the effect.
    - id: effect
      type: System.Int32
      description: the identifier of the effect to update.
    - id: data
      type: SharpSDL3.Structs.HapticEffect
      description: an SDL_HapticEffect structure containing the new effect properties to use.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function UpdateHapticEffect(haptic As IntPtr, effect As Integer, data As HapticEffect) As Boolean
  overload: SharpSDL3.Sdl.UpdateHapticEffect*
  nameWithType.vb: Sdl.UpdateHapticEffect(IntPtr, Integer, HapticEffect)
  fullName.vb: SharpSDL3.Sdl.UpdateHapticEffect(System.IntPtr, Integer, SharpSDL3.Structs.HapticEffect)
  name.vb: UpdateHapticEffect(IntPtr, Integer, HapticEffect)
- uid: SharpSDL3.Sdl.BleScan(SharpSDL3.Structs.SdlBool)
  commentId: M:SharpSDL3.Sdl.BleScan(SharpSDL3.Structs.SdlBool)
  id: BleScan(SharpSDL3.Structs.SdlBool)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: BleScan(SdlBool)
  nameWithType: Sdl.BleScan(SdlBool)
  fullName: SharpSDL3.Sdl.BleScan(SharpSDL3.Structs.SdlBool)
  type: Method
  source:
    remote:
      path: SDL3/Hid.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: BleScan
    path: ../../repos/SDL3-CS/SDL3/Hid.cs
    startLine: 11
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static void BleScan(SdlBool active)
    parameters:
    - id: active
      type: SharpSDL3.Structs.SdlBool
    content.vb: Public Shared Sub BleScan(active As SdlBool)
  overload: SharpSDL3.Sdl.BleScan*
- uid: SharpSDL3.Sdl.Close(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.Close(System.IntPtr)
  id: Close(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: Close(nint)
  nameWithType: Sdl.Close(nint)
  fullName: SharpSDL3.Sdl.Close(nint)
  type: Method
  source:
    remote:
      path: SDL3/Hid.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: Close
    path: ../../repos/SDL3-CS/SDL3/Hid.cs
    startLine: 16
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static int Close(nint dev)
    parameters:
    - id: dev
      type: System.IntPtr
    return:
      type: System.Int32
    content.vb: Public Shared Function Close(dev As IntPtr) As Integer
  overload: SharpSDL3.Sdl.Close*
  nameWithType.vb: Sdl.Close(IntPtr)
  fullName.vb: SharpSDL3.Sdl.Close(System.IntPtr)
  name.vb: Close(IntPtr)
- uid: SharpSDL3.Sdl.DeviceChangeCount
  commentId: M:SharpSDL3.Sdl.DeviceChangeCount
  id: DeviceChangeCount
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: DeviceChangeCount()
  nameWithType: Sdl.DeviceChangeCount()
  fullName: SharpSDL3.Sdl.DeviceChangeCount()
  type: Method
  source:
    remote:
      path: SDL3/Hid.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: DeviceChangeCount
    path: ../../repos/SDL3-CS/SDL3/Hid.cs
    startLine: 24
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static uint DeviceChangeCount()
    return:
      type: System.UInt32
    content.vb: Public Shared Function DeviceChangeCount() As UInteger
  overload: SharpSDL3.Sdl.DeviceChangeCount*
- uid: SharpSDL3.Sdl.Enumerate(System.UInt16,System.UInt16)
  commentId: M:SharpSDL3.Sdl.Enumerate(System.UInt16,System.UInt16)
  id: Enumerate(System.UInt16,System.UInt16)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: Enumerate(ushort, ushort)
  nameWithType: Sdl.Enumerate(ushort, ushort)
  fullName: SharpSDL3.Sdl.Enumerate(ushort, ushort)
  type: Method
  source:
    remote:
      path: SDL3/Hid.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: Enumerate
    path: ../../repos/SDL3-CS/SDL3/Hid.cs
    startLine: 32
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static Span<HidDeviceInfo> Enumerate(ushort vendorId, ushort productId)
    parameters:
    - id: vendorId
      type: System.UInt16
    - id: productId
      type: System.UInt16
    return:
      type: System.Span{SharpSDL3.Structs.HidDeviceInfo}
    content.vb: Public Shared Function Enumerate(vendorId As UShort, productId As UShort) As Span(Of HidDeviceInfo)
  overload: SharpSDL3.Sdl.Enumerate*
  nameWithType.vb: Sdl.Enumerate(UShort, UShort)
  fullName.vb: SharpSDL3.Sdl.Enumerate(UShort, UShort)
  name.vb: Enumerate(UShort, UShort)
- uid: SharpSDL3.Sdl.Exit
  commentId: M:SharpSDL3.Sdl.Exit
  id: Exit
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: Exit()
  nameWithType: Sdl.Exit()
  fullName: SharpSDL3.Sdl.Exit()
  type: Method
  source:
    remote:
      path: SDL3/Hid.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: Exit
    path: ../../repos/SDL3-CS/SDL3/Hid.cs
    startLine: 52
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static int Exit()
    return:
      type: System.Int32
    content.vb: Public Shared Function [Exit]() As Integer
  overload: SharpSDL3.Sdl.Exit*
- uid: SharpSDL3.Sdl.FreeEnumeration(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.FreeEnumeration(System.IntPtr)
  id: FreeEnumeration(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: FreeEnumeration(nint)
  nameWithType: Sdl.FreeEnumeration(nint)
  fullName: SharpSDL3.Sdl.FreeEnumeration(nint)
  type: Method
  source:
    remote:
      path: SDL3/Hid.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: FreeEnumeration
    path: ../../repos/SDL3-CS/SDL3/Hid.cs
    startLine: 60
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static void FreeEnumeration(nint devs)
    parameters:
    - id: devs
      type: System.IntPtr
    content.vb: Public Shared Sub FreeEnumeration(devs As IntPtr)
  overload: SharpSDL3.Sdl.FreeEnumeration*
  nameWithType.vb: Sdl.FreeEnumeration(IntPtr)
  fullName.vb: SharpSDL3.Sdl.FreeEnumeration(System.IntPtr)
  name.vb: FreeEnumeration(IntPtr)
- uid: SharpSDL3.Sdl.GetDeviceInfo(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetDeviceInfo(System.IntPtr)
  id: GetDeviceInfo(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetDeviceInfo(nint)
  nameWithType: Sdl.GetDeviceInfo(nint)
  fullName: SharpSDL3.Sdl.GetDeviceInfo(nint)
  type: Method
  source:
    remote:
      path: SDL3/Hid.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetDeviceInfo
    path: ../../repos/SDL3-CS/SDL3/Hid.cs
    startLine: 70
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static Span<HidDeviceInfo> GetDeviceInfo(nint dev)
    parameters:
    - id: dev
      type: System.IntPtr
    return:
      type: System.Span{SharpSDL3.Structs.HidDeviceInfo}
    content.vb: Public Shared Function GetDeviceInfo(dev As IntPtr) As Span(Of HidDeviceInfo)
  overload: SharpSDL3.Sdl.GetDeviceInfo*
  nameWithType.vb: Sdl.GetDeviceInfo(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetDeviceInfo(System.IntPtr)
  name.vb: GetDeviceInfo(IntPtr)
- uid: SharpSDL3.Sdl.GetFeatureReport(System.IntPtr,System.IntPtr,System.UIntPtr)
  commentId: M:SharpSDL3.Sdl.GetFeatureReport(System.IntPtr,System.IntPtr,System.UIntPtr)
  id: GetFeatureReport(System.IntPtr,System.IntPtr,System.UIntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetFeatureReport(nint, nint, nuint)
  nameWithType: Sdl.GetFeatureReport(nint, nint, nuint)
  fullName: SharpSDL3.Sdl.GetFeatureReport(nint, nint, nuint)
  type: Method
  source:
    remote:
      path: SDL3/Hid.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetFeatureReport
    path: ../../repos/SDL3-CS/SDL3/Hid.cs
    startLine: 90
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static int GetFeatureReport(nint dev, nint data, nuint length)
    parameters:
    - id: dev
      type: System.IntPtr
    - id: data
      type: System.IntPtr
    - id: length
      type: System.UIntPtr
    return:
      type: System.Int32
    content.vb: Public Shared Function GetFeatureReport(dev As IntPtr, data As IntPtr, length As UIntPtr) As Integer
  overload: SharpSDL3.Sdl.GetFeatureReport*
  nameWithType.vb: Sdl.GetFeatureReport(IntPtr, IntPtr, UIntPtr)
  fullName.vb: SharpSDL3.Sdl.GetFeatureReport(System.IntPtr, System.IntPtr, System.UIntPtr)
  name.vb: GetFeatureReport(IntPtr, IntPtr, UIntPtr)
- uid: SharpSDL3.Sdl.GetIndexedString(System.IntPtr,System.Int32,System.String,System.UIntPtr)
  commentId: M:SharpSDL3.Sdl.GetIndexedString(System.IntPtr,System.Int32,System.String,System.UIntPtr)
  id: GetIndexedString(System.IntPtr,System.Int32,System.String,System.UIntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetIndexedString(nint, int, string, nuint)
  nameWithType: Sdl.GetIndexedString(nint, int, string, nuint)
  fullName: SharpSDL3.Sdl.GetIndexedString(nint, int, string, nuint)
  type: Method
  source:
    remote:
      path: SDL3/Hid.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetIndexedString
    path: ../../repos/SDL3-CS/SDL3/Hid.cs
    startLine: 98
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static int GetIndexedString(nint dev, int stringIndex, string @string, nuint maxlen)
    parameters:
    - id: dev
      type: System.IntPtr
    - id: stringIndex
      type: System.Int32
    - id: string
      type: System.String
    - id: maxlen
      type: System.UIntPtr
    return:
      type: System.Int32
    content.vb: Public Shared Function GetIndexedString(dev As IntPtr, stringIndex As Integer, [string] As String, maxlen As UIntPtr) As Integer
  overload: SharpSDL3.Sdl.GetIndexedString*
  nameWithType.vb: Sdl.GetIndexedString(IntPtr, Integer, String, UIntPtr)
  fullName.vb: SharpSDL3.Sdl.GetIndexedString(System.IntPtr, Integer, String, System.UIntPtr)
  name.vb: GetIndexedString(IntPtr, Integer, String, UIntPtr)
- uid: SharpSDL3.Sdl.GetInputReport(System.IntPtr,System.IntPtr,System.UIntPtr)
  commentId: M:SharpSDL3.Sdl.GetInputReport(System.IntPtr,System.IntPtr,System.UIntPtr)
  id: GetInputReport(System.IntPtr,System.IntPtr,System.UIntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetInputReport(nint, nint, nuint)
  nameWithType: Sdl.GetInputReport(nint, nint, nuint)
  fullName: SharpSDL3.Sdl.GetInputReport(nint, nint, nuint)
  type: Method
  source:
    remote:
      path: SDL3/Hid.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetInputReport
    path: ../../repos/SDL3-CS/SDL3/Hid.cs
    startLine: 106
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static int GetInputReport(nint dev, nint data, nuint length)
    parameters:
    - id: dev
      type: System.IntPtr
    - id: data
      type: System.IntPtr
    - id: length
      type: System.UIntPtr
    return:
      type: System.Int32
    content.vb: Public Shared Function GetInputReport(dev As IntPtr, data As IntPtr, length As UIntPtr) As Integer
  overload: SharpSDL3.Sdl.GetInputReport*
  nameWithType.vb: Sdl.GetInputReport(IntPtr, IntPtr, UIntPtr)
  fullName.vb: SharpSDL3.Sdl.GetInputReport(System.IntPtr, System.IntPtr, System.UIntPtr)
  name.vb: GetInputReport(IntPtr, IntPtr, UIntPtr)
- uid: SharpSDL3.Sdl.GetManufacturerString(System.IntPtr,System.String,System.UIntPtr)
  commentId: M:SharpSDL3.Sdl.GetManufacturerString(System.IntPtr,System.String,System.UIntPtr)
  id: GetManufacturerString(System.IntPtr,System.String,System.UIntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetManufacturerString(nint, string, nuint)
  nameWithType: Sdl.GetManufacturerString(nint, string, nuint)
  fullName: SharpSDL3.Sdl.GetManufacturerString(nint, string, nuint)
  type: Method
  source:
    remote:
      path: SDL3/Hid.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetManufacturerString
    path: ../../repos/SDL3-CS/SDL3/Hid.cs
    startLine: 114
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static int GetManufacturerString(nint dev, string @string, nuint maxlen)
    parameters:
    - id: dev
      type: System.IntPtr
    - id: string
      type: System.String
    - id: maxlen
      type: System.UIntPtr
    return:
      type: System.Int32
    content.vb: Public Shared Function GetManufacturerString(dev As IntPtr, [string] As String, maxlen As UIntPtr) As Integer
  overload: SharpSDL3.Sdl.GetManufacturerString*
  nameWithType.vb: Sdl.GetManufacturerString(IntPtr, String, UIntPtr)
  fullName.vb: SharpSDL3.Sdl.GetManufacturerString(System.IntPtr, String, System.UIntPtr)
  name.vb: GetManufacturerString(IntPtr, String, UIntPtr)
- uid: SharpSDL3.Sdl.GetProductString(System.IntPtr,System.String,System.UIntPtr)
  commentId: M:SharpSDL3.Sdl.GetProductString(System.IntPtr,System.String,System.UIntPtr)
  id: GetProductString(System.IntPtr,System.String,System.UIntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetProductString(nint, string, nuint)
  nameWithType: Sdl.GetProductString(nint, string, nuint)
  fullName: SharpSDL3.Sdl.GetProductString(nint, string, nuint)
  type: Method
  source:
    remote:
      path: SDL3/Hid.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetProductString
    path: ../../repos/SDL3-CS/SDL3/Hid.cs
    startLine: 122
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static int GetProductString(nint dev, string @string, nuint maxlen)
    parameters:
    - id: dev
      type: System.IntPtr
    - id: string
      type: System.String
    - id: maxlen
      type: System.UIntPtr
    return:
      type: System.Int32
    content.vb: Public Shared Function GetProductString(dev As IntPtr, [string] As String, maxlen As UIntPtr) As Integer
  overload: SharpSDL3.Sdl.GetProductString*
  nameWithType.vb: Sdl.GetProductString(IntPtr, String, UIntPtr)
  fullName.vb: SharpSDL3.Sdl.GetProductString(System.IntPtr, String, System.UIntPtr)
  name.vb: GetProductString(IntPtr, String, UIntPtr)
- uid: SharpSDL3.Sdl.GetReportDescriptor(System.IntPtr,System.IntPtr,System.UIntPtr)
  commentId: M:SharpSDL3.Sdl.GetReportDescriptor(System.IntPtr,System.IntPtr,System.UIntPtr)
  id: GetReportDescriptor(System.IntPtr,System.IntPtr,System.UIntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetReportDescriptor(nint, nint, nuint)
  nameWithType: Sdl.GetReportDescriptor(nint, nint, nuint)
  fullName: SharpSDL3.Sdl.GetReportDescriptor(nint, nint, nuint)
  type: Method
  source:
    remote:
      path: SDL3/Hid.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetReportDescriptor
    path: ../../repos/SDL3-CS/SDL3/Hid.cs
    startLine: 130
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static int GetReportDescriptor(nint dev, nint buf, nuint bufSize)
    parameters:
    - id: dev
      type: System.IntPtr
    - id: buf
      type: System.IntPtr
    - id: bufSize
      type: System.UIntPtr
    return:
      type: System.Int32
    content.vb: Public Shared Function GetReportDescriptor(dev As IntPtr, buf As IntPtr, bufSize As UIntPtr) As Integer
  overload: SharpSDL3.Sdl.GetReportDescriptor*
  nameWithType.vb: Sdl.GetReportDescriptor(IntPtr, IntPtr, UIntPtr)
  fullName.vb: SharpSDL3.Sdl.GetReportDescriptor(System.IntPtr, System.IntPtr, System.UIntPtr)
  name.vb: GetReportDescriptor(IntPtr, IntPtr, UIntPtr)
- uid: SharpSDL3.Sdl.GetSerialNumberString(System.IntPtr,System.String,System.UIntPtr)
  commentId: M:SharpSDL3.Sdl.GetSerialNumberString(System.IntPtr,System.String,System.UIntPtr)
  id: GetSerialNumberString(System.IntPtr,System.String,System.UIntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetSerialNumberString(nint, string, nuint)
  nameWithType: Sdl.GetSerialNumberString(nint, string, nuint)
  fullName: SharpSDL3.Sdl.GetSerialNumberString(nint, string, nuint)
  type: Method
  source:
    remote:
      path: SDL3/Hid.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetSerialNumberString
    path: ../../repos/SDL3-CS/SDL3/Hid.cs
    startLine: 138
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static int GetSerialNumberString(nint dev, string @string, nuint maxlen)
    parameters:
    - id: dev
      type: System.IntPtr
    - id: string
      type: System.String
    - id: maxlen
      type: System.UIntPtr
    return:
      type: System.Int32
    content.vb: Public Shared Function GetSerialNumberString(dev As IntPtr, [string] As String, maxlen As UIntPtr) As Integer
  overload: SharpSDL3.Sdl.GetSerialNumberString*
  nameWithType.vb: Sdl.GetSerialNumberString(IntPtr, String, UIntPtr)
  fullName.vb: SharpSDL3.Sdl.GetSerialNumberString(System.IntPtr, String, System.UIntPtr)
  name.vb: GetSerialNumberString(IntPtr, String, UIntPtr)
- uid: SharpSDL3.Sdl.Init
  commentId: M:SharpSDL3.Sdl.Init
  id: Init
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: Init()
  nameWithType: Sdl.Init()
  fullName: SharpSDL3.Sdl.Init()
  type: Method
  source:
    remote:
      path: SDL3/Hid.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: Init
    path: ../../repos/SDL3-CS/SDL3/Hid.cs
    startLine: 146
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static int Init()
    return:
      type: System.Int32
    content.vb: Public Shared Function Init() As Integer
  overload: SharpSDL3.Sdl.Init*
- uid: SharpSDL3.Sdl.Open(System.UInt16,System.UInt16,System.String)
  commentId: M:SharpSDL3.Sdl.Open(System.UInt16,System.UInt16,System.String)
  id: Open(System.UInt16,System.UInt16,System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: Open(ushort, ushort, string)
  nameWithType: Sdl.Open(ushort, ushort, string)
  fullName: SharpSDL3.Sdl.Open(ushort, ushort, string)
  type: Method
  source:
    remote:
      path: SDL3/Hid.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: Open
    path: ../../repos/SDL3-CS/SDL3/Hid.cs
    startLine: 154
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static nint Open(ushort vendorId, ushort productId, string serialNumber)
    parameters:
    - id: vendorId
      type: System.UInt16
    - id: productId
      type: System.UInt16
    - id: serialNumber
      type: System.String
    return:
      type: System.IntPtr
    content.vb: Public Shared Function Open(vendorId As UShort, productId As UShort, serialNumber As String) As IntPtr
  overload: SharpSDL3.Sdl.Open*
  nameWithType.vb: Sdl.Open(UShort, UShort, String)
  fullName.vb: SharpSDL3.Sdl.Open(UShort, UShort, String)
  name.vb: Open(UShort, UShort, String)
- uid: SharpSDL3.Sdl.OpenPath(System.String)
  commentId: M:SharpSDL3.Sdl.OpenPath(System.String)
  id: OpenPath(System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: OpenPath(string)
  nameWithType: Sdl.OpenPath(string)
  fullName: SharpSDL3.Sdl.OpenPath(string)
  type: Method
  source:
    remote:
      path: SDL3/Hid.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: OpenPath
    path: ../../repos/SDL3-CS/SDL3/Hid.cs
    startLine: 162
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static nint OpenPath(string path)
    parameters:
    - id: path
      type: System.String
    return:
      type: System.IntPtr
    content.vb: Public Shared Function OpenPath(path As String) As IntPtr
  overload: SharpSDL3.Sdl.OpenPath*
  nameWithType.vb: Sdl.OpenPath(String)
  fullName.vb: SharpSDL3.Sdl.OpenPath(String)
  name.vb: OpenPath(String)
- uid: SharpSDL3.Sdl.Read(System.IntPtr,System.IntPtr,System.UIntPtr)
  commentId: M:SharpSDL3.Sdl.Read(System.IntPtr,System.IntPtr,System.UIntPtr)
  id: Read(System.IntPtr,System.IntPtr,System.UIntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: Read(nint, nint, nuint)
  nameWithType: Sdl.Read(nint, nint, nuint)
  fullName: SharpSDL3.Sdl.Read(nint, nint, nuint)
  type: Method
  source:
    remote:
      path: SDL3/Hid.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: Read
    path: ../../repos/SDL3-CS/SDL3/Hid.cs
    startLine: 170
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static int Read(nint dev, nint data, nuint length)
    parameters:
    - id: dev
      type: System.IntPtr
    - id: data
      type: System.IntPtr
    - id: length
      type: System.UIntPtr
    return:
      type: System.Int32
    content.vb: Public Shared Function Read(dev As IntPtr, data As IntPtr, length As UIntPtr) As Integer
  overload: SharpSDL3.Sdl.Read*
  nameWithType.vb: Sdl.Read(IntPtr, IntPtr, UIntPtr)
  fullName.vb: SharpSDL3.Sdl.Read(System.IntPtr, System.IntPtr, System.UIntPtr)
  name.vb: Read(IntPtr, IntPtr, UIntPtr)
- uid: SharpSDL3.Sdl.ReadTimeout(System.IntPtr,System.IntPtr,System.UIntPtr,System.Int32)
  commentId: M:SharpSDL3.Sdl.ReadTimeout(System.IntPtr,System.IntPtr,System.UIntPtr,System.Int32)
  id: ReadTimeout(System.IntPtr,System.IntPtr,System.UIntPtr,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ReadTimeout(nint, nint, nuint, int)
  nameWithType: Sdl.ReadTimeout(nint, nint, nuint, int)
  fullName: SharpSDL3.Sdl.ReadTimeout(nint, nint, nuint, int)
  type: Method
  source:
    remote:
      path: SDL3/Hid.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ReadTimeout
    path: ../../repos/SDL3-CS/SDL3/Hid.cs
    startLine: 178
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static int ReadTimeout(nint dev, nint data, nuint length, int milliseconds)
    parameters:
    - id: dev
      type: System.IntPtr
    - id: data
      type: System.IntPtr
    - id: length
      type: System.UIntPtr
    - id: milliseconds
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function ReadTimeout(dev As IntPtr, data As IntPtr, length As UIntPtr, milliseconds As Integer) As Integer
  overload: SharpSDL3.Sdl.ReadTimeout*
  nameWithType.vb: Sdl.ReadTimeout(IntPtr, IntPtr, UIntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.ReadTimeout(System.IntPtr, System.IntPtr, System.UIntPtr, Integer)
  name.vb: ReadTimeout(IntPtr, IntPtr, UIntPtr, Integer)
- uid: SharpSDL3.Sdl.SendFeatureReport(System.IntPtr,System.IntPtr,System.UIntPtr)
  commentId: M:SharpSDL3.Sdl.SendFeatureReport(System.IntPtr,System.IntPtr,System.UIntPtr)
  id: SendFeatureReport(System.IntPtr,System.IntPtr,System.UIntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SendFeatureReport(nint, nint, nuint)
  nameWithType: Sdl.SendFeatureReport(nint, nint, nuint)
  fullName: SharpSDL3.Sdl.SendFeatureReport(nint, nint, nuint)
  type: Method
  source:
    remote:
      path: SDL3/Hid.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SendFeatureReport
    path: ../../repos/SDL3-CS/SDL3/Hid.cs
    startLine: 186
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static int SendFeatureReport(nint dev, nint data, nuint length)
    parameters:
    - id: dev
      type: System.IntPtr
    - id: data
      type: System.IntPtr
    - id: length
      type: System.UIntPtr
    return:
      type: System.Int32
    content.vb: Public Shared Function SendFeatureReport(dev As IntPtr, data As IntPtr, length As UIntPtr) As Integer
  overload: SharpSDL3.Sdl.SendFeatureReport*
  nameWithType.vb: Sdl.SendFeatureReport(IntPtr, IntPtr, UIntPtr)
  fullName.vb: SharpSDL3.Sdl.SendFeatureReport(System.IntPtr, System.IntPtr, System.UIntPtr)
  name.vb: SendFeatureReport(IntPtr, IntPtr, UIntPtr)
- uid: SharpSDL3.Sdl.SetNonblocking(System.IntPtr,System.Int32)
  commentId: M:SharpSDL3.Sdl.SetNonblocking(System.IntPtr,System.Int32)
  id: SetNonblocking(System.IntPtr,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetNonblocking(nint, int)
  nameWithType: Sdl.SetNonblocking(nint, int)
  fullName: SharpSDL3.Sdl.SetNonblocking(nint, int)
  type: Method
  source:
    remote:
      path: SDL3/Hid.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetNonblocking
    path: ../../repos/SDL3-CS/SDL3/Hid.cs
    startLine: 194
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static int SetNonblocking(nint dev, int nonblock)
    parameters:
    - id: dev
      type: System.IntPtr
    - id: nonblock
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function SetNonblocking(dev As IntPtr, nonblock As Integer) As Integer
  overload: SharpSDL3.Sdl.SetNonblocking*
  nameWithType.vb: Sdl.SetNonblocking(IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.SetNonblocking(System.IntPtr, Integer)
  name.vb: SetNonblocking(IntPtr, Integer)
- uid: SharpSDL3.Sdl.Write(System.IntPtr,System.IntPtr,System.UIntPtr)
  commentId: M:SharpSDL3.Sdl.Write(System.IntPtr,System.IntPtr,System.UIntPtr)
  id: Write(System.IntPtr,System.IntPtr,System.UIntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: Write(nint, nint, nuint)
  nameWithType: Sdl.Write(nint, nint, nuint)
  fullName: SharpSDL3.Sdl.Write(nint, nint, nuint)
  type: Method
  source:
    remote:
      path: SDL3/Hid.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: Write
    path: ../../repos/SDL3-CS/SDL3/Hid.cs
    startLine: 202
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static int Write(nint dev, nint data, nuint length)
    parameters:
    - id: dev
      type: System.IntPtr
    - id: data
      type: System.IntPtr
    - id: length
      type: System.UIntPtr
    return:
      type: System.Int32
    content.vb: Public Shared Function Write(dev As IntPtr, data As IntPtr, length As UIntPtr) As Integer
  overload: SharpSDL3.Sdl.Write*
  nameWithType.vb: Sdl.Write(IntPtr, IntPtr, UIntPtr)
  fullName.vb: SharpSDL3.Sdl.Write(System.IntPtr, System.IntPtr, System.UIntPtr)
  name.vb: Write(IntPtr, IntPtr, UIntPtr)
- uid: SharpSDL3.Sdl.ImageMajor
  commentId: F:SharpSDL3.Sdl.ImageMajor
  id: ImageMajor
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ImageMajor
  nameWithType: Sdl.ImageMajor
  fullName: SharpSDL3.Sdl.ImageMajor
  type: Field
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ImageMajor
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 20
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  example: []
  syntax:
    content: public const int ImageMajor = 3
    return:
      type: System.Int32
    content.vb: Public Const ImageMajor As Integer = 3
- uid: SharpSDL3.Sdl.ImageMinor
  commentId: F:SharpSDL3.Sdl.ImageMinor
  id: ImageMinor
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ImageMinor
  nameWithType: Sdl.ImageMinor
  fullName: SharpSDL3.Sdl.ImageMinor
  type: Field
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ImageMinor
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 21
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public const int ImageMinor = 3
    return:
      type: System.Int32
    content.vb: Public Const ImageMinor As Integer = 3
- uid: SharpSDL3.Sdl.ImageMicro
  commentId: F:SharpSDL3.Sdl.ImageMicro
  id: ImageMicro
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ImageMicro
  nameWithType: Sdl.ImageMicro
  fullName: SharpSDL3.Sdl.ImageMicro
  type: Field
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ImageMicro
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 22
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public const int ImageMicro = 0
    return:
      type: System.Int32
    content.vb: Public Const ImageMicro As Integer = 0
- uid: SharpSDL3.Sdl.ImageVersion
  commentId: M:SharpSDL3.Sdl.ImageVersion
  id: ImageVersion
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ImageVersion()
  nameWithType: Sdl.ImageVersion()
  fullName: SharpSDL3.Sdl.ImageVersion()
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ImageVersion
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 28
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  example: []
  syntax:
    content: public static int ImageVersion()
    return:
      type: System.Int32
    content.vb: Public Shared Function ImageVersion() As Integer
  overload: SharpSDL3.Sdl.ImageVersion*
- uid: SharpSDL3.Sdl.ImageVersionAtLeast(System.Int32,System.Int32,System.Int32)
  commentId: M:SharpSDL3.Sdl.ImageVersionAtLeast(System.Int32,System.Int32,System.Int32)
  id: ImageVersionAtLeast(System.Int32,System.Int32,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ImageVersionAtLeast(int, int, int)
  nameWithType: Sdl.ImageVersionAtLeast(int, int, int)
  fullName: SharpSDL3.Sdl.ImageVersionAtLeast(int, int, int)
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ImageVersionAtLeast
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 34
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  example: []
  syntax:
    content: public static bool ImageVersionAtLeast(int major, int minor, int patch)
    parameters:
    - id: major
      type: System.Int32
    - id: minor
      type: System.Int32
    - id: patch
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function ImageVersionAtLeast(major As Integer, minor As Integer, patch As Integer) As Boolean
  overload: SharpSDL3.Sdl.ImageVersionAtLeast*
  nameWithType.vb: Sdl.ImageVersionAtLeast(Integer, Integer, Integer)
  fullName.vb: SharpSDL3.Sdl.ImageVersionAtLeast(Integer, Integer, Integer)
  name.vb: ImageVersionAtLeast(Integer, Integer, Integer)
- uid: SharpSDL3.Sdl.GetImageVersion
  commentId: M:SharpSDL3.Sdl.GetImageVersion
  id: GetImageVersion
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetImageVersion()
  nameWithType: Sdl.GetImageVersion()
  fullName: SharpSDL3.Sdl.GetImageVersion()
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetImageVersion
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 50
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static int GetImageVersion()
    return:
      type: System.Int32
    content.vb: Public Shared Function GetImageVersion() As Integer
  overload: SharpSDL3.Sdl.GetImageVersion*
- uid: SharpSDL3.Sdl.LoadTypedImage(System.IntPtr,System.Boolean,System.String)
  commentId: M:SharpSDL3.Sdl.LoadTypedImage(System.IntPtr,System.Boolean,System.String)
  id: LoadTypedImage(System.IntPtr,System.Boolean,System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LoadTypedImage(nint, bool, string)
  nameWithType: Sdl.LoadTypedImage(nint, bool, string)
  fullName: SharpSDL3.Sdl.LoadTypedImage(nint, bool, string)
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LoadTypedImage
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 116
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static nint LoadTypedImage(nint src, bool closeio, string type)
    parameters:
    - id: src
      type: System.IntPtr
    - id: closeio
      type: System.Boolean
    - id: type
      type: System.String
    return:
      type: System.IntPtr
    content.vb: Public Shared Function LoadTypedImage(src As IntPtr, closeio As Boolean, type As String) As IntPtr
  overload: SharpSDL3.Sdl.LoadTypedImage*
  nameWithType.vb: Sdl.LoadTypedImage(IntPtr, Boolean, String)
  fullName.vb: SharpSDL3.Sdl.LoadTypedImage(System.IntPtr, Boolean, String)
  name.vb: LoadTypedImage(IntPtr, Boolean, String)
- uid: SharpSDL3.Sdl.LoadImage(System.String)
  commentId: M:SharpSDL3.Sdl.LoadImage(System.String)
  id: LoadImage(System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LoadImage(string)
  nameWithType: Sdl.LoadImage(string)
  fullName: SharpSDL3.Sdl.LoadImage(string)
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LoadImage
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 170
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static nint LoadImage(string file)
    parameters:
    - id: file
      type: System.String
    return:
      type: System.IntPtr
    content.vb: Public Shared Function LoadImage(file As String) As IntPtr
  overload: SharpSDL3.Sdl.LoadImage*
  nameWithType.vb: Sdl.LoadImage(String)
  fullName.vb: SharpSDL3.Sdl.LoadImage(String)
  name.vb: LoadImage(String)
- uid: SharpSDL3.Sdl.LoadImageIo(System.IntPtr,System.Boolean)
  commentId: M:SharpSDL3.Sdl.LoadImageIo(System.IntPtr,System.Boolean)
  id: LoadImageIo(System.IntPtr,System.Boolean)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LoadImageIo(nint, bool)
  nameWithType: Sdl.LoadImageIo(nint, bool)
  fullName: SharpSDL3.Sdl.LoadImageIo(nint, bool)
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LoadImageIo
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 239
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static nint LoadImageIo(nint src, bool closeio)
    parameters:
    - id: src
      type: System.IntPtr
    - id: closeio
      type: System.Boolean
    return:
      type: System.IntPtr
    content.vb: Public Shared Function LoadImageIo(src As IntPtr, closeio As Boolean) As IntPtr
  overload: SharpSDL3.Sdl.LoadImageIo*
  nameWithType.vb: Sdl.LoadImageIo(IntPtr, Boolean)
  fullName.vb: SharpSDL3.Sdl.LoadImageIo(System.IntPtr, Boolean)
  name.vb: LoadImageIo(IntPtr, Boolean)
- uid: SharpSDL3.Sdl.LoadTexture(System.IntPtr,System.String)
  commentId: M:SharpSDL3.Sdl.LoadTexture(System.IntPtr,System.String)
  id: LoadTexture(System.IntPtr,System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LoadTexture(nint, string)
  nameWithType: Sdl.LoadTexture(nint, string)
  fullName: SharpSDL3.Sdl.LoadTexture(nint, string)
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LoadTexture
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 302
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Load an image from a filesystem path into a GPU texture.
  remarks: >-
    An SDL_Texture represents an image in GPU memory, usable by SDL's 2D Render

    API. This can be significantly more efficient than using a CPU-bound

    SDL_Surface if you don't need to manipulate the image directly after

    loading it.

    <p><strong>Version:</strong> This function is available since SDL_image 3.0.0.</p>

    LoadTextureTyped_IO

    LoadTexture_IO
  example: []
  syntax:
    content: public static nint LoadTexture(nint renderer, string file)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the SDL_Renderer to use to create the GPU texture.
    - id: file
      type: System.String
      description: a path on the filesystem to load an image from.
    return:
      type: System.IntPtr
      description: (SDL_Texture *) Returns a new texture, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on error.
    content.vb: Public Shared Function LoadTexture(renderer As IntPtr, file As String) As IntPtr
  overload: SharpSDL3.Sdl.LoadTexture*
  nameWithType.vb: Sdl.LoadTexture(IntPtr, String)
  fullName.vb: SharpSDL3.Sdl.LoadTexture(System.IntPtr, String)
  name.vb: LoadTexture(IntPtr, String)
- uid: SharpSDL3.Sdl.LoadTextureIo(System.IntPtr,System.IntPtr,System.Boolean)
  commentId: M:SharpSDL3.Sdl.LoadTextureIo(System.IntPtr,System.IntPtr,System.Boolean)
  id: LoadTextureIo(System.IntPtr,System.IntPtr,System.Boolean)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LoadTextureIo(nint, nint, bool)
  nameWithType: Sdl.LoadTextureIo(nint, nint, bool)
  fullName: SharpSDL3.Sdl.LoadTextureIo(nint, nint, bool)
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LoadTextureIo
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 362
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static nint LoadTextureIo(nint renderer, nint src, bool closeio)
    parameters:
    - id: renderer
      type: System.IntPtr
    - id: src
      type: System.IntPtr
    - id: closeio
      type: System.Boolean
    return:
      type: System.IntPtr
    content.vb: Public Shared Function LoadTextureIo(renderer As IntPtr, src As IntPtr, closeio As Boolean) As IntPtr
  overload: SharpSDL3.Sdl.LoadTextureIo*
  nameWithType.vb: Sdl.LoadTextureIo(IntPtr, IntPtr, Boolean)
  fullName.vb: SharpSDL3.Sdl.LoadTextureIo(System.IntPtr, System.IntPtr, Boolean)
  name.vb: LoadTextureIo(IntPtr, IntPtr, Boolean)
- uid: SharpSDL3.Sdl.LoadTextureTypedIo(System.IntPtr,System.IntPtr,System.Boolean,System.String)
  commentId: M:SharpSDL3.Sdl.LoadTextureTypedIo(System.IntPtr,System.IntPtr,System.Boolean,System.String)
  id: LoadTextureTypedIo(System.IntPtr,System.IntPtr,System.Boolean,System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LoadTextureTypedIo(nint, nint, bool, string)
  nameWithType: Sdl.LoadTextureTypedIo(nint, nint, bool, string)
  fullName: SharpSDL3.Sdl.LoadTextureTypedIo(nint, nint, bool, string)
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LoadTextureTypedIo
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 430
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static nint LoadTextureTypedIo(nint renderer, nint src, bool closeio, string type)
    parameters:
    - id: renderer
      type: System.IntPtr
    - id: src
      type: System.IntPtr
    - id: closeio
      type: System.Boolean
    - id: type
      type: System.String
    return:
      type: System.IntPtr
    content.vb: Public Shared Function LoadTextureTypedIo(renderer As IntPtr, src As IntPtr, closeio As Boolean, type As String) As IntPtr
  overload: SharpSDL3.Sdl.LoadTextureTypedIo*
  nameWithType.vb: Sdl.LoadTextureTypedIo(IntPtr, IntPtr, Boolean, String)
  fullName.vb: SharpSDL3.Sdl.LoadTextureTypedIo(System.IntPtr, System.IntPtr, Boolean, String)
  name.vb: LoadTextureTypedIo(IntPtr, IntPtr, Boolean, String)
- uid: SharpSDL3.Sdl.IsAVIF(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.IsAVIF(System.IntPtr)
  id: IsAVIF(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: IsAVIF(nint)
  nameWithType: Sdl.IsAVIF(nint)
  fullName: SharpSDL3.Sdl.IsAVIF(nint)
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: IsAVIF
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 516
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Detect AVIF image data on a readable/seekable SDL_IOStream.
  remarks: >-
    This function attempts to determine if a file is a given filetype, reading

    the least amount possible from the SDL_IOStream (usually a few bytes).

    <p><strong>Version:</strong> This function is available since SDL_image 3.0.0.</p>

    isAVIF

    isICO

    isCUR

    isBMP

    isGIF

    isJPG

    isJXL

    isLBM

    isPCX

    isPNG

    isPNM

    isSVG

    isQOI

    isTIF

    isXCF

    isXPM

    isXV

    isWEBP
  example: []
  syntax:
    content: public static bool IsAVIF(nint src)
    parameters:
    - id: src
      type: System.IntPtr
      description: a seekable/readable SDL_IOStream to provide image data.
    return:
      type: System.Boolean
      description: Returns non-zero if this is AVIF data, zero otherwise.
    content.vb: Public Shared Function IsAVIF(src As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.IsAVIF*
  nameWithType.vb: Sdl.IsAVIF(IntPtr)
  fullName.vb: SharpSDL3.Sdl.IsAVIF(System.IntPtr)
  name.vb: IsAVIF(IntPtr)
- uid: SharpSDL3.Sdl.IsICO(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.IsICO(System.IntPtr)
  id: IsICO(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: IsICO(nint)
  nameWithType: Sdl.IsICO(nint)
  fullName: SharpSDL3.Sdl.IsICO(nint)
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: IsICO
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 596
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Detect ICO image data on a readable/seekable SDL_IOStream.
  remarks: >-
    This function attempts to determine if a file is a given filetype, reading

    the least amount possible from the SDL_IOStream (usually a few bytes).

    <p><strong>Version:</strong> This function is available since SDL_image 3.0.0.</p>

    isAVIF

    isCUR

    isBMP

    isGIF

    isJPG

    isJXL

    isLBM

    isPCX

    isPNG

    isPNM

    isSVG

    isQOI

    isTIF

    isXCF

    isXPM

    isXV

    isWEBP
  example: []
  syntax:
    content: public static bool IsICO(nint src)
    parameters:
    - id: src
      type: System.IntPtr
      description: a seekable/readable SDL_IOStream to provide image data.
    return:
      type: System.Boolean
      description: Returns non-zero if this is ICO data, zero otherwise.
    content.vb: Public Shared Function IsICO(src As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.IsICO*
  nameWithType.vb: Sdl.IsICO(IntPtr)
  fullName.vb: SharpSDL3.Sdl.IsICO(System.IntPtr)
  name.vb: IsICO(IntPtr)
- uid: SharpSDL3.Sdl.IsCUR(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.IsCUR(System.IntPtr)
  id: IsCUR(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: IsCUR(nint)
  nameWithType: Sdl.IsCUR(nint)
  fullName: SharpSDL3.Sdl.IsCUR(nint)
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: IsCUR
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 676
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Detect CUR image data on a readable/seekable SDL_IOStream.
  remarks: >-
    This function attempts to determine if a file is a given filetype, reading

    the least amount possible from the SDL_IOStream (usually a few bytes).

    <p><strong>Version:</strong> This function is available since SDL_image 3.0.0.</p>

    isAVIF

    isICO

    isBMP

    isGIF

    isJPG

    isJXL

    isLBM

    isPCX

    isPNG

    isPNM

    isSVG

    isQOI

    isTIF

    isXCF

    isXPM

    isXV

    isWEBP
  example: []
  syntax:
    content: public static bool IsCUR(nint src)
    parameters:
    - id: src
      type: System.IntPtr
      description: a seekable/readable SDL_IOStream to provide image data.
    return:
      type: System.Boolean
      description: Returns non-zero if this is CUR data, zero otherwise.
    content.vb: Public Shared Function IsCUR(src As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.IsCUR*
  nameWithType.vb: Sdl.IsCUR(IntPtr)
  fullName.vb: SharpSDL3.Sdl.IsCUR(System.IntPtr)
  name.vb: IsCUR(IntPtr)
- uid: SharpSDL3.Sdl.IsBMP(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.IsBMP(System.IntPtr)
  id: IsBMP(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: IsBMP(nint)
  nameWithType: Sdl.IsBMP(nint)
  fullName: SharpSDL3.Sdl.IsBMP(nint)
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: IsBMP
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 756
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Detect BMP image data on a readable/seekable SDL_IOStream.
  remarks: >-
    This function attempts to determine if a file is a given filetype, reading

    the least amount possible from the SDL_IOStream (usually a few bytes).

    <p><strong>Version:</strong> This function is available since SDL_image 3.0.0.</p>

    isAVIF

    isICO

    isCUR

    isGIF

    isJPG

    isJXL

    isLBM

    isPCX

    isPNG

    isPNM

    isSVG

    isQOI

    isTIF

    isXCF

    isXPM

    isXV

    isWEBP
  example: []
  syntax:
    content: public static bool IsBMP(nint src)
    parameters:
    - id: src
      type: System.IntPtr
      description: a seekable/readable SDL_IOStream to provide image data.
    return:
      type: System.Boolean
      description: Returns non-zero if this is BMP data, zero otherwise.
    content.vb: Public Shared Function IsBMP(src As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.IsBMP*
  nameWithType.vb: Sdl.IsBMP(IntPtr)
  fullName.vb: SharpSDL3.Sdl.IsBMP(System.IntPtr)
  name.vb: IsBMP(IntPtr)
- uid: SharpSDL3.Sdl.IsGIF(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.IsGIF(System.IntPtr)
  id: IsGIF(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: IsGIF(nint)
  nameWithType: Sdl.IsGIF(nint)
  fullName: SharpSDL3.Sdl.IsGIF(nint)
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: IsGIF
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 836
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Detect GIF image data on a readable/seekable SDL_IOStream.
  remarks: >-
    This function attempts to determine if a file is a given filetype, reading

    the least amount possible from the SDL_IOStream (usually a few bytes).

    <p><strong>Version:</strong> This function is available since SDL_image 3.0.0.</p>

    isAVIF

    isICO

    isCUR

    isBMP

    isJPG

    isJXL

    isLBM

    isPCX

    isPNG

    isPNM

    isSVG

    isQOI

    isTIF

    isXCF

    isXPM

    isXV

    isWEBP
  example: []
  syntax:
    content: public static bool IsGIF(nint src)
    parameters:
    - id: src
      type: System.IntPtr
      description: a seekable/readable SDL_IOStream to provide image data.
    return:
      type: System.Boolean
      description: Returns non-zero if this is GIF data, zero otherwise.
    content.vb: Public Shared Function IsGIF(src As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.IsGIF*
  nameWithType.vb: Sdl.IsGIF(IntPtr)
  fullName.vb: SharpSDL3.Sdl.IsGIF(System.IntPtr)
  name.vb: IsGIF(IntPtr)
- uid: SharpSDL3.Sdl.IsJPG(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.IsJPG(System.IntPtr)
  id: IsJPG(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: IsJPG(nint)
  nameWithType: Sdl.IsJPG(nint)
  fullName: SharpSDL3.Sdl.IsJPG(nint)
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: IsJPG
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 916
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Detect JPG image data on a readable/seekable SDL_IOStream.
  remarks: >-
    This function attempts to determine if a file is a given filetype, reading

    the least amount possible from the SDL_IOStream (usually a few bytes).

    <p><strong>Version:</strong> This function is available since SDL_image 3.0.0.</p>

    isAVIF

    isICO

    isCUR

    isBMP

    isGIF

    isJXL

    isLBM

    isPCX

    isPNG

    isPNM

    isSVG

    isQOI

    isTIF

    isXCF

    isXPM

    isXV

    isWEBP
  example: []
  syntax:
    content: public static bool IsJPG(nint src)
    parameters:
    - id: src
      type: System.IntPtr
      description: a seekable/readable SDL_IOStream to provide image data.
    return:
      type: System.Boolean
      description: Returns non-zero if this is JPG data, zero otherwise.
    content.vb: Public Shared Function IsJPG(src As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.IsJPG*
  nameWithType.vb: Sdl.IsJPG(IntPtr)
  fullName.vb: SharpSDL3.Sdl.IsJPG(System.IntPtr)
  name.vb: IsJPG(IntPtr)
- uid: SharpSDL3.Sdl.IsJXL(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.IsJXL(System.IntPtr)
  id: IsJXL(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: IsJXL(nint)
  nameWithType: Sdl.IsJXL(nint)
  fullName: SharpSDL3.Sdl.IsJXL(nint)
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: IsJXL
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 996
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Detect JXL image data on a readable/seekable SDL_IOStream.
  remarks: >-
    This function attempts to determine if a file is a given filetype, reading

    the least amount possible from the SDL_IOStream (usually a few bytes).

    <p><strong>Version:</strong> This function is available since SDL_image 3.0.0.</p>

    isAVIF

    isICO

    isCUR

    isBMP

    isGIF

    isJPG

    isLBM

    isPCX

    isPNG

    isPNM

    isSVG

    isQOI

    isTIF

    isXCF

    isXPM

    isXV

    isWEBP
  example: []
  syntax:
    content: public static bool IsJXL(nint src)
    parameters:
    - id: src
      type: System.IntPtr
      description: a seekable/readable SDL_IOStream to provide image data.
    return:
      type: System.Boolean
      description: Returns non-zero if this is JXL data, zero otherwise.
    content.vb: Public Shared Function IsJXL(src As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.IsJXL*
  nameWithType.vb: Sdl.IsJXL(IntPtr)
  fullName.vb: SharpSDL3.Sdl.IsJXL(System.IntPtr)
  name.vb: IsJXL(IntPtr)
- uid: SharpSDL3.Sdl.IsLBM(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.IsLBM(System.IntPtr)
  id: IsLBM(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: IsLBM(nint)
  nameWithType: Sdl.IsLBM(nint)
  fullName: SharpSDL3.Sdl.IsLBM(nint)
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: IsLBM
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 1076
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Detect LBM image data on a readable/seekable SDL_IOStream.
  remarks: >-
    This function attempts to determine if a file is a given filetype, reading

    the least amount possible from the SDL_IOStream (usually a few bytes).

    <p><strong>Version:</strong> This function is available since SDL_image 3.0.0.</p>

    isAVIF

    isICO

    isCUR

    isBMP

    isGIF

    isJPG

    isJXL

    isPCX

    isPNG

    isPNM

    isSVG

    isQOI

    isTIF

    isXCF

    isXPM

    isXV

    isWEBP
  example: []
  syntax:
    content: public static bool IsLBM(nint src)
    parameters:
    - id: src
      type: System.IntPtr
      description: a seekable/readable SDL_IOStream to provide image data.
    return:
      type: System.Boolean
      description: Returns non-zero if this is LBM data, zero otherwise.
    content.vb: Public Shared Function IsLBM(src As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.IsLBM*
  nameWithType.vb: Sdl.IsLBM(IntPtr)
  fullName.vb: SharpSDL3.Sdl.IsLBM(System.IntPtr)
  name.vb: IsLBM(IntPtr)
- uid: SharpSDL3.Sdl.IsPCX(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.IsPCX(System.IntPtr)
  id: IsPCX(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: IsPCX(nint)
  nameWithType: Sdl.IsPCX(nint)
  fullName: SharpSDL3.Sdl.IsPCX(nint)
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: IsPCX
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 1156
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Detect PCX image data on a readable/seekable SDL_IOStream.
  remarks: >-
    This function attempts to determine if a file is a given filetype, reading

    the least amount possible from the SDL_IOStream (usually a few bytes).

    <p><strong>Version:</strong> This function is available since SDL_image 3.0.0.</p>

    isAVIF

    isICO

    isCUR

    isBMP

    isGIF

    isJPG

    isJXL

    isLBM

    isPNG

    isPNM

    isSVG

    isQOI

    isTIF

    isXCF

    isXPM

    isXV

    isWEBP
  example: []
  syntax:
    content: public static bool IsPCX(nint src)
    parameters:
    - id: src
      type: System.IntPtr
      description: a seekable/readable SDL_IOStream to provide image data.
    return:
      type: System.Boolean
      description: Returns non-zero if this is PCX data, zero otherwise.
    content.vb: Public Shared Function IsPCX(src As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.IsPCX*
  nameWithType.vb: Sdl.IsPCX(IntPtr)
  fullName.vb: SharpSDL3.Sdl.IsPCX(System.IntPtr)
  name.vb: IsPCX(IntPtr)
- uid: SharpSDL3.Sdl.IsPNG(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.IsPNG(System.IntPtr)
  id: IsPNG(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: IsPNG(nint)
  nameWithType: Sdl.IsPNG(nint)
  fullName: SharpSDL3.Sdl.IsPNG(nint)
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: IsPNG
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 1236
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Detect PNG image data on a readable/seekable SDL_IOStream.
  remarks: >-
    This function attempts to determine if a file is a given filetype, reading

    the least amount possible from the SDL_IOStream (usually a few bytes).

    <p><strong>Version:</strong> This function is available since SDL_image 3.0.0.</p>

    isAVIF

    isICO

    isCUR

    isBMP

    isGIF

    isJPG

    isJXL

    isLBM

    isPCX

    isPNM

    isSVG

    isQOI

    isTIF

    isXCF

    isXPM

    isXV

    isWEBP
  example: []
  syntax:
    content: public static bool IsPNG(nint src)
    parameters:
    - id: src
      type: System.IntPtr
      description: a seekable/readable SDL_IOStream to provide image data.
    return:
      type: System.Boolean
      description: Returns non-zero if this is PNG data, zero otherwise.
    content.vb: Public Shared Function IsPNG(src As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.IsPNG*
  nameWithType.vb: Sdl.IsPNG(IntPtr)
  fullName.vb: SharpSDL3.Sdl.IsPNG(System.IntPtr)
  name.vb: IsPNG(IntPtr)
- uid: SharpSDL3.Sdl.IsPNM(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.IsPNM(System.IntPtr)
  id: IsPNM(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: IsPNM(nint)
  nameWithType: Sdl.IsPNM(nint)
  fullName: SharpSDL3.Sdl.IsPNM(nint)
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: IsPNM
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 1316
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Detect PNM image data on a readable/seekable SDL_IOStream.
  remarks: >-
    This function attempts to determine if a file is a given filetype, reading

    the least amount possible from the SDL_IOStream (usually a few bytes).

    <p><strong>Version:</strong> This function is available since SDL_image 3.0.0.</p>

    isAVIF

    isICO

    isCUR

    isBMP

    isGIF

    isJPG

    isJXL

    isLBM

    isPCX

    isPNG

    isSVG

    isQOI

    isTIF

    isXCF

    isXPM

    isXV

    isWEBP
  example: []
  syntax:
    content: public static bool IsPNM(nint src)
    parameters:
    - id: src
      type: System.IntPtr
      description: a seekable/readable SDL_IOStream to provide image data.
    return:
      type: System.Boolean
      description: Returns non-zero if this is PNM data, zero otherwise.
    content.vb: Public Shared Function IsPNM(src As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.IsPNM*
  nameWithType.vb: Sdl.IsPNM(IntPtr)
  fullName.vb: SharpSDL3.Sdl.IsPNM(System.IntPtr)
  name.vb: IsPNM(IntPtr)
- uid: SharpSDL3.Sdl.IsSVG(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.IsSVG(System.IntPtr)
  id: IsSVG(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: IsSVG(nint)
  nameWithType: Sdl.IsSVG(nint)
  fullName: SharpSDL3.Sdl.IsSVG(nint)
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: IsSVG
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 1396
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Detect SVG image data on a readable/seekable SDL_IOStream.
  remarks: >-
    This function attempts to determine if a file is a given filetype, reading

    the least amount possible from the SDL_IOStream (usually a few bytes).

    <p><strong>Version:</strong> This function is available since SDL_image 3.0.0.</p>

    isAVIF

    isICO

    isCUR

    isBMP

    isGIF

    isJPG

    isJXL

    isLBM

    isPCX

    isPNG

    isPNM

    isQOI

    isTIF

    isXCF

    isXPM

    isXV

    isWEBP
  example: []
  syntax:
    content: public static bool IsSVG(nint src)
    parameters:
    - id: src
      type: System.IntPtr
      description: a seekable/readable SDL_IOStream to provide image data.
    return:
      type: System.Boolean
      description: Returns non-zero if this is SVG data, zero otherwise.
    content.vb: Public Shared Function IsSVG(src As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.IsSVG*
  nameWithType.vb: Sdl.IsSVG(IntPtr)
  fullName.vb: SharpSDL3.Sdl.IsSVG(System.IntPtr)
  name.vb: IsSVG(IntPtr)
- uid: SharpSDL3.Sdl.IsQOI(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.IsQOI(System.IntPtr)
  id: IsQOI(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: IsQOI(nint)
  nameWithType: Sdl.IsQOI(nint)
  fullName: SharpSDL3.Sdl.IsQOI(nint)
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: IsQOI
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 1476
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Detect QOI image data on a readable/seekable SDL_IOStream.
  remarks: >-
    This function attempts to determine if a file is a given filetype, reading

    the least amount possible from the SDL_IOStream (usually a few bytes).

    <p><strong>Version:</strong> This function is available since SDL_image 3.0.0.</p>

    isAVIF

    isICO

    isCUR

    isBMP

    isGIF

    isJPG

    isJXL

    isLBM

    isPCX

    isPNG

    isPNM

    isSVG

    isTIF

    isXCF

    isXPM

    isXV

    isWEBP
  example: []
  syntax:
    content: public static bool IsQOI(nint src)
    parameters:
    - id: src
      type: System.IntPtr
      description: a seekable/readable SDL_IOStream to provide image data.
    return:
      type: System.Boolean
      description: Returns non-zero if this is QOI data, zero otherwise.
    content.vb: Public Shared Function IsQOI(src As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.IsQOI*
  nameWithType.vb: Sdl.IsQOI(IntPtr)
  fullName.vb: SharpSDL3.Sdl.IsQOI(System.IntPtr)
  name.vb: IsQOI(IntPtr)
- uid: SharpSDL3.Sdl.IsTIF(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.IsTIF(System.IntPtr)
  id: IsTIF(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: IsTIF(nint)
  nameWithType: Sdl.IsTIF(nint)
  fullName: SharpSDL3.Sdl.IsTIF(nint)
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: IsTIF
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 1556
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Detect TIFF image data on a readable/seekable SDL_IOStream.
  remarks: >-
    This function attempts to determine if a file is a given filetype, reading

    the least amount possible from the SDL_IOStream (usually a few bytes).

    <p><strong>Version:</strong> This function is available since SDL_image 3.0.0.</p>

    isAVIF

    isICO

    isCUR

    isBMP

    isGIF

    isJPG

    isJXL

    isLBM

    isPCX

    isPNG

    isPNM

    isSVG

    isQOI

    isXCF

    isXPM

    isXV

    isWEBP
  example: []
  syntax:
    content: public static bool IsTIF(nint src)
    parameters:
    - id: src
      type: System.IntPtr
      description: a seekable/readable SDL_IOStream to provide image data.
    return:
      type: System.Boolean
      description: Returns non-zero if this is TIFF data, zero otherwise.
    content.vb: Public Shared Function IsTIF(src As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.IsTIF*
  nameWithType.vb: Sdl.IsTIF(IntPtr)
  fullName.vb: SharpSDL3.Sdl.IsTIF(System.IntPtr)
  name.vb: IsTIF(IntPtr)
- uid: SharpSDL3.Sdl.IsXCF(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.IsXCF(System.IntPtr)
  id: IsXCF(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: IsXCF(nint)
  nameWithType: Sdl.IsXCF(nint)
  fullName: SharpSDL3.Sdl.IsXCF(nint)
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: IsXCF
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 1636
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Detect XCF image data on a readable/seekable SDL_IOStream.
  remarks: >-
    This function attempts to determine if a file is a given filetype, reading

    the least amount possible from the SDL_IOStream (usually a few bytes).

    <p><strong>Version:</strong> This function is available since SDL_image 3.0.0.</p>

    isAVIF

    isICO

    isCUR

    isBMP

    isGIF

    isJPG

    isJXL

    isLBM

    isPCX

    isPNG

    isPNM

    isSVG

    isQOI

    isTIF

    isXPM

    isXV

    isWEBP
  example: []
  syntax:
    content: public static bool IsXCF(nint src)
    parameters:
    - id: src
      type: System.IntPtr
      description: a seekable/readable SDL_IOStream to provide image data.
    return:
      type: System.Boolean
      description: Returns non-zero if this is XCF data, zero otherwise.
    content.vb: Public Shared Function IsXCF(src As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.IsXCF*
  nameWithType.vb: Sdl.IsXCF(IntPtr)
  fullName.vb: SharpSDL3.Sdl.IsXCF(System.IntPtr)
  name.vb: IsXCF(IntPtr)
- uid: SharpSDL3.Sdl.IsXPM(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.IsXPM(System.IntPtr)
  id: IsXPM(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: IsXPM(nint)
  nameWithType: Sdl.IsXPM(nint)
  fullName: SharpSDL3.Sdl.IsXPM(nint)
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: IsXPM
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 1716
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Detect XPM image data on a readable/seekable SDL_IOStream.
  remarks: >-
    This function attempts to determine if a file is a given filetype, reading

    the least amount possible from the SDL_IOStream (usually a few bytes).

    <p><strong>Version:</strong> This function is available since SDL_image 3.0.0.</p>

    isAVIF

    isICO

    isCUR

    isBMP

    isGIF

    isJPG

    isJXL

    isLBM

    isPCX

    isPNG

    isPNM

    isSVG

    isQOI

    isTIF

    isXCF

    isXV

    isWEBP
  example: []
  syntax:
    content: public static bool IsXPM(nint src)
    parameters:
    - id: src
      type: System.IntPtr
      description: a seekable/readable SDL_IOStream to provide image data.
    return:
      type: System.Boolean
      description: Returns non-zero if this is XPM data, zero otherwise.
    content.vb: Public Shared Function IsXPM(src As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.IsXPM*
  nameWithType.vb: Sdl.IsXPM(IntPtr)
  fullName.vb: SharpSDL3.Sdl.IsXPM(System.IntPtr)
  name.vb: IsXPM(IntPtr)
- uid: SharpSDL3.Sdl.IsXV(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.IsXV(System.IntPtr)
  id: IsXV(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: IsXV(nint)
  nameWithType: Sdl.IsXV(nint)
  fullName: SharpSDL3.Sdl.IsXV(nint)
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: IsXV
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 1796
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Detect XV image data on a readable/seekable SDL_IOStream.
  remarks: >-
    This function attempts to determine if a file is a given filetype, reading

    the least amount possible from the SDL_IOStream (usually a few bytes).

    <p><strong>Version:</strong> This function is available since SDL_image 3.0.0.</p>

    isAVIF

    isICO

    isCUR

    isBMP

    isGIF

    isJPG

    isJXL

    isLBM

    isPCX

    isPNG

    isPNM

    isSVG

    isQOI

    isTIF

    isXCF

    isXPM

    isWEBP
  example: []
  syntax:
    content: public static bool IsXV(nint src)
    parameters:
    - id: src
      type: System.IntPtr
      description: a seekable/readable SDL_IOStream to provide image data.
    return:
      type: System.Boolean
      description: Returns non-zero if this is XV data, zero otherwise.
    content.vb: Public Shared Function IsXV(src As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.IsXV*
  nameWithType.vb: Sdl.IsXV(IntPtr)
  fullName.vb: SharpSDL3.Sdl.IsXV(System.IntPtr)
  name.vb: IsXV(IntPtr)
- uid: SharpSDL3.Sdl.IsWEBP(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.IsWEBP(System.IntPtr)
  id: IsWEBP(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: IsWEBP(nint)
  nameWithType: Sdl.IsWEBP(nint)
  fullName: SharpSDL3.Sdl.IsWEBP(nint)
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: IsWEBP
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 1876
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Detect WEBP image data on a readable/seekable SDL_IOStream.
  remarks: >-
    This function attempts to determine if a file is a given filetype, reading

    the least amount possible from the SDL_IOStream (usually a few bytes).

    <p><strong>Version:</strong> This function is available since SDL_image 3.0.0.</p>

    isAVIF

    isICO

    isCUR

    isBMP

    isGIF

    isJPG

    isJXL

    isLBM

    isPCX

    isPNG

    isPNM

    isSVG

    isQOI

    isTIF

    isXCF

    isXPM

    isXV
  example: []
  syntax:
    content: public static bool IsWEBP(nint src)
    parameters:
    - id: src
      type: System.IntPtr
      description: a seekable/readable SDL_IOStream to provide image data.
    return:
      type: System.Boolean
      description: Returns non-zero if this is WEBP data, zero otherwise.
    content.vb: Public Shared Function IsWEBP(src As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.IsWEBP*
  nameWithType.vb: Sdl.IsWEBP(IntPtr)
  fullName.vb: SharpSDL3.Sdl.IsWEBP(System.IntPtr)
  name.vb: IsWEBP(IntPtr)
- uid: SharpSDL3.Sdl.LoadAvifIo(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.LoadAvifIo(System.IntPtr)
  id: LoadAvifIo(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LoadAvifIo(nint)
  nameWithType: Sdl.LoadAvifIo(nint)
  fullName: SharpSDL3.Sdl.LoadAvifIo(nint)
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LoadAvifIo
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 1919
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static nint LoadAvifIo(nint src)
    parameters:
    - id: src
      type: System.IntPtr
    return:
      type: System.IntPtr
    content.vb: Public Shared Function LoadAvifIo(src As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.LoadAvifIo*
  nameWithType.vb: Sdl.LoadAvifIo(IntPtr)
  fullName.vb: SharpSDL3.Sdl.LoadAvifIo(System.IntPtr)
  name.vb: LoadAvifIo(IntPtr)
- uid: SharpSDL3.Sdl.LoadIcoIo(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.LoadIcoIo(System.IntPtr)
  id: LoadIcoIo(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LoadIcoIo(nint)
  nameWithType: Sdl.LoadIcoIo(nint)
  fullName: SharpSDL3.Sdl.LoadIcoIo(nint)
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LoadIcoIo
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 1962
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static nint LoadIcoIo(nint src)
    parameters:
    - id: src
      type: System.IntPtr
    return:
      type: System.IntPtr
    content.vb: Public Shared Function LoadIcoIo(src As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.LoadIcoIo*
  nameWithType.vb: Sdl.LoadIcoIo(IntPtr)
  fullName.vb: SharpSDL3.Sdl.LoadIcoIo(System.IntPtr)
  name.vb: LoadIcoIo(IntPtr)
- uid: SharpSDL3.Sdl.LoadCurIo(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.LoadCurIo(System.IntPtr)
  id: LoadCurIo(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LoadCurIo(nint)
  nameWithType: Sdl.LoadCurIo(nint)
  fullName: SharpSDL3.Sdl.LoadCurIo(nint)
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LoadCurIo
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 2005
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static nint LoadCurIo(nint src)
    parameters:
    - id: src
      type: System.IntPtr
    return:
      type: System.IntPtr
    content.vb: Public Shared Function LoadCurIo(src As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.LoadCurIo*
  nameWithType.vb: Sdl.LoadCurIo(IntPtr)
  fullName.vb: SharpSDL3.Sdl.LoadCurIo(System.IntPtr)
  name.vb: LoadCurIo(IntPtr)
- uid: SharpSDL3.Sdl.LoadBmpIo(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.LoadBmpIo(System.IntPtr)
  id: LoadBmpIo(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LoadBmpIo(nint)
  nameWithType: Sdl.LoadBmpIo(nint)
  fullName: SharpSDL3.Sdl.LoadBmpIo(nint)
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LoadBmpIo
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 2048
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static nint LoadBmpIo(nint src)
    parameters:
    - id: src
      type: System.IntPtr
    return:
      type: System.IntPtr
    content.vb: Public Shared Function LoadBmpIo(src As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.LoadBmpIo*
  nameWithType.vb: Sdl.LoadBmpIo(IntPtr)
  fullName.vb: SharpSDL3.Sdl.LoadBmpIo(System.IntPtr)
  name.vb: LoadBmpIo(IntPtr)
- uid: SharpSDL3.Sdl.LoadGifIo(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.LoadGifIo(System.IntPtr)
  id: LoadGifIo(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LoadGifIo(nint)
  nameWithType: Sdl.LoadGifIo(nint)
  fullName: SharpSDL3.Sdl.LoadGifIo(nint)
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LoadGifIo
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 2091
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static nint LoadGifIo(nint src)
    parameters:
    - id: src
      type: System.IntPtr
    return:
      type: System.IntPtr
    content.vb: Public Shared Function LoadGifIo(src As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.LoadGifIo*
  nameWithType.vb: Sdl.LoadGifIo(IntPtr)
  fullName.vb: SharpSDL3.Sdl.LoadGifIo(System.IntPtr)
  name.vb: LoadGifIo(IntPtr)
- uid: SharpSDL3.Sdl.LoadJpgIo(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.LoadJpgIo(System.IntPtr)
  id: LoadJpgIo(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LoadJpgIo(nint)
  nameWithType: Sdl.LoadJpgIo(nint)
  fullName: SharpSDL3.Sdl.LoadJpgIo(nint)
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LoadJpgIo
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 2134
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static nint LoadJpgIo(nint src)
    parameters:
    - id: src
      type: System.IntPtr
    return:
      type: System.IntPtr
    content.vb: Public Shared Function LoadJpgIo(src As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.LoadJpgIo*
  nameWithType.vb: Sdl.LoadJpgIo(IntPtr)
  fullName.vb: SharpSDL3.Sdl.LoadJpgIo(System.IntPtr)
  name.vb: LoadJpgIo(IntPtr)
- uid: SharpSDL3.Sdl.LoadJxlIo(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.LoadJxlIo(System.IntPtr)
  id: LoadJxlIo(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LoadJxlIo(nint)
  nameWithType: Sdl.LoadJxlIo(nint)
  fullName: SharpSDL3.Sdl.LoadJxlIo(nint)
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LoadJxlIo
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 2177
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static nint LoadJxlIo(nint src)
    parameters:
    - id: src
      type: System.IntPtr
    return:
      type: System.IntPtr
    content.vb: Public Shared Function LoadJxlIo(src As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.LoadJxlIo*
  nameWithType.vb: Sdl.LoadJxlIo(IntPtr)
  fullName.vb: SharpSDL3.Sdl.LoadJxlIo(System.IntPtr)
  name.vb: LoadJxlIo(IntPtr)
- uid: SharpSDL3.Sdl.LoadLbmIo(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.LoadLbmIo(System.IntPtr)
  id: LoadLbmIo(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LoadLbmIo(nint)
  nameWithType: Sdl.LoadLbmIo(nint)
  fullName: SharpSDL3.Sdl.LoadLbmIo(nint)
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LoadLbmIo
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 2220
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static nint LoadLbmIo(nint src)
    parameters:
    - id: src
      type: System.IntPtr
    return:
      type: System.IntPtr
    content.vb: Public Shared Function LoadLbmIo(src As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.LoadLbmIo*
  nameWithType.vb: Sdl.LoadLbmIo(IntPtr)
  fullName.vb: SharpSDL3.Sdl.LoadLbmIo(System.IntPtr)
  name.vb: LoadLbmIo(IntPtr)
- uid: SharpSDL3.Sdl.LoadPcxIo(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.LoadPcxIo(System.IntPtr)
  id: LoadPcxIo(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LoadPcxIo(nint)
  nameWithType: Sdl.LoadPcxIo(nint)
  fullName: SharpSDL3.Sdl.LoadPcxIo(nint)
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LoadPcxIo
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 2263
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static nint LoadPcxIo(nint src)
    parameters:
    - id: src
      type: System.IntPtr
    return:
      type: System.IntPtr
    content.vb: Public Shared Function LoadPcxIo(src As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.LoadPcxIo*
  nameWithType.vb: Sdl.LoadPcxIo(IntPtr)
  fullName.vb: SharpSDL3.Sdl.LoadPcxIo(System.IntPtr)
  name.vb: LoadPcxIo(IntPtr)
- uid: SharpSDL3.Sdl.LoadPngIo(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.LoadPngIo(System.IntPtr)
  id: LoadPngIo(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LoadPngIo(nint)
  nameWithType: Sdl.LoadPngIo(nint)
  fullName: SharpSDL3.Sdl.LoadPngIo(nint)
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LoadPngIo
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 2306
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static nint LoadPngIo(nint src)
    parameters:
    - id: src
      type: System.IntPtr
    return:
      type: System.IntPtr
    content.vb: Public Shared Function LoadPngIo(src As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.LoadPngIo*
  nameWithType.vb: Sdl.LoadPngIo(IntPtr)
  fullName.vb: SharpSDL3.Sdl.LoadPngIo(System.IntPtr)
  name.vb: LoadPngIo(IntPtr)
- uid: SharpSDL3.Sdl.LoadPnmIo(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.LoadPnmIo(System.IntPtr)
  id: LoadPnmIo(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LoadPnmIo(nint)
  nameWithType: Sdl.LoadPnmIo(nint)
  fullName: SharpSDL3.Sdl.LoadPnmIo(nint)
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LoadPnmIo
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 2349
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static nint LoadPnmIo(nint src)
    parameters:
    - id: src
      type: System.IntPtr
    return:
      type: System.IntPtr
    content.vb: Public Shared Function LoadPnmIo(src As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.LoadPnmIo*
  nameWithType.vb: Sdl.LoadPnmIo(IntPtr)
  fullName.vb: SharpSDL3.Sdl.LoadPnmIo(System.IntPtr)
  name.vb: LoadPnmIo(IntPtr)
- uid: SharpSDL3.Sdl.LoadSvgIo(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.LoadSvgIo(System.IntPtr)
  id: LoadSvgIo(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LoadSvgIo(nint)
  nameWithType: Sdl.LoadSvgIo(nint)
  fullName: SharpSDL3.Sdl.LoadSvgIo(nint)
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LoadSvgIo
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 2392
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static nint LoadSvgIo(nint src)
    parameters:
    - id: src
      type: System.IntPtr
    return:
      type: System.IntPtr
    content.vb: Public Shared Function LoadSvgIo(src As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.LoadSvgIo*
  nameWithType.vb: Sdl.LoadSvgIo(IntPtr)
  fullName.vb: SharpSDL3.Sdl.LoadSvgIo(System.IntPtr)
  name.vb: LoadSvgIo(IntPtr)
- uid: SharpSDL3.Sdl.LoadQoiIo(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.LoadQoiIo(System.IntPtr)
  id: LoadQoiIo(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LoadQoiIo(nint)
  nameWithType: Sdl.LoadQoiIo(nint)
  fullName: SharpSDL3.Sdl.LoadQoiIo(nint)
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LoadQoiIo
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 2435
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static nint LoadQoiIo(nint src)
    parameters:
    - id: src
      type: System.IntPtr
    return:
      type: System.IntPtr
    content.vb: Public Shared Function LoadQoiIo(src As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.LoadQoiIo*
  nameWithType.vb: Sdl.LoadQoiIo(IntPtr)
  fullName.vb: SharpSDL3.Sdl.LoadQoiIo(System.IntPtr)
  name.vb: LoadQoiIo(IntPtr)
- uid: SharpSDL3.Sdl.LoadTgaIo(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.LoadTgaIo(System.IntPtr)
  id: LoadTgaIo(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LoadTgaIo(nint)
  nameWithType: Sdl.LoadTgaIo(nint)
  fullName: SharpSDL3.Sdl.LoadTgaIo(nint)
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LoadTgaIo
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 2478
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static nint LoadTgaIo(nint src)
    parameters:
    - id: src
      type: System.IntPtr
    return:
      type: System.IntPtr
    content.vb: Public Shared Function LoadTgaIo(src As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.LoadTgaIo*
  nameWithType.vb: Sdl.LoadTgaIo(IntPtr)
  fullName.vb: SharpSDL3.Sdl.LoadTgaIo(System.IntPtr)
  name.vb: LoadTgaIo(IntPtr)
- uid: SharpSDL3.Sdl.LoadTifIo(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.LoadTifIo(System.IntPtr)
  id: LoadTifIo(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LoadTifIo(nint)
  nameWithType: Sdl.LoadTifIo(nint)
  fullName: SharpSDL3.Sdl.LoadTifIo(nint)
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LoadTifIo
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 2521
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static nint LoadTifIo(nint src)
    parameters:
    - id: src
      type: System.IntPtr
    return:
      type: System.IntPtr
    content.vb: Public Shared Function LoadTifIo(src As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.LoadTifIo*
  nameWithType.vb: Sdl.LoadTifIo(IntPtr)
  fullName.vb: SharpSDL3.Sdl.LoadTifIo(System.IntPtr)
  name.vb: LoadTifIo(IntPtr)
- uid: SharpSDL3.Sdl.LoadXcfIo(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.LoadXcfIo(System.IntPtr)
  id: LoadXcfIo(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LoadXcfIo(nint)
  nameWithType: Sdl.LoadXcfIo(nint)
  fullName: SharpSDL3.Sdl.LoadXcfIo(nint)
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LoadXcfIo
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 2564
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static nint LoadXcfIo(nint src)
    parameters:
    - id: src
      type: System.IntPtr
    return:
      type: System.IntPtr
    content.vb: Public Shared Function LoadXcfIo(src As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.LoadXcfIo*
  nameWithType.vb: Sdl.LoadXcfIo(IntPtr)
  fullName.vb: SharpSDL3.Sdl.LoadXcfIo(System.IntPtr)
  name.vb: LoadXcfIo(IntPtr)
- uid: SharpSDL3.Sdl.LoadXpmIo(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.LoadXpmIo(System.IntPtr)
  id: LoadXpmIo(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LoadXpmIo(nint)
  nameWithType: Sdl.LoadXpmIo(nint)
  fullName: SharpSDL3.Sdl.LoadXpmIo(nint)
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LoadXpmIo
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 2607
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static nint LoadXpmIo(nint src)
    parameters:
    - id: src
      type: System.IntPtr
    return:
      type: System.IntPtr
    content.vb: Public Shared Function LoadXpmIo(src As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.LoadXpmIo*
  nameWithType.vb: Sdl.LoadXpmIo(IntPtr)
  fullName.vb: SharpSDL3.Sdl.LoadXpmIo(System.IntPtr)
  name.vb: LoadXpmIo(IntPtr)
- uid: SharpSDL3.Sdl.LoadXvIo(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.LoadXvIo(System.IntPtr)
  id: LoadXvIo(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LoadXvIo(nint)
  nameWithType: Sdl.LoadXvIo(nint)
  fullName: SharpSDL3.Sdl.LoadXvIo(nint)
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LoadXvIo
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 2650
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static nint LoadXvIo(nint src)
    parameters:
    - id: src
      type: System.IntPtr
    return:
      type: System.IntPtr
    content.vb: Public Shared Function LoadXvIo(src As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.LoadXvIo*
  nameWithType.vb: Sdl.LoadXvIo(IntPtr)
  fullName.vb: SharpSDL3.Sdl.LoadXvIo(System.IntPtr)
  name.vb: LoadXvIo(IntPtr)
- uid: SharpSDL3.Sdl.LoadWebpIo(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.LoadWebpIo(System.IntPtr)
  id: LoadWebpIo(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LoadWebpIo(nint)
  nameWithType: Sdl.LoadWebpIo(nint)
  fullName: SharpSDL3.Sdl.LoadWebpIo(nint)
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LoadWebpIo
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 2693
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static nint LoadWebpIo(nint src)
    parameters:
    - id: src
      type: System.IntPtr
    return:
      type: System.IntPtr
    content.vb: Public Shared Function LoadWebpIo(src As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.LoadWebpIo*
  nameWithType.vb: Sdl.LoadWebpIo(IntPtr)
  fullName.vb: SharpSDL3.Sdl.LoadWebpIo(System.IntPtr)
  name.vb: LoadWebpIo(IntPtr)
- uid: SharpSDL3.Sdl.LoadSizedSvgIo(System.IntPtr,System.Int32,System.Int32)
  commentId: M:SharpSDL3.Sdl.LoadSizedSvgIo(System.IntPtr,System.Int32,System.Int32)
  id: LoadSizedSvgIo(System.IntPtr,System.Int32,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LoadSizedSvgIo(nint, int, int)
  nameWithType: Sdl.LoadSizedSvgIo(nint, int, int)
  fullName: SharpSDL3.Sdl.LoadSizedSvgIo(nint, int, int)
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LoadSizedSvgIo
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 2723
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static nint LoadSizedSvgIo(nint src, int width, int height)
    parameters:
    - id: src
      type: System.IntPtr
    - id: width
      type: System.Int32
    - id: height
      type: System.Int32
    return:
      type: System.IntPtr
    content.vb: Public Shared Function LoadSizedSvgIo(src As IntPtr, width As Integer, height As Integer) As IntPtr
  overload: SharpSDL3.Sdl.LoadSizedSvgIo*
  nameWithType.vb: Sdl.LoadSizedSvgIo(IntPtr, Integer, Integer)
  fullName.vb: SharpSDL3.Sdl.LoadSizedSvgIo(System.IntPtr, Integer, Integer)
  name.vb: LoadSizedSvgIo(IntPtr, Integer, Integer)
- uid: SharpSDL3.Sdl.ReadXpmFromArray(System.String[])
  commentId: M:SharpSDL3.Sdl.ReadXpmFromArray(System.String[])
  id: ReadXpmFromArray(System.String[])
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ReadXpmFromArray(string[])
  nameWithType: Sdl.ReadXpmFromArray(string[])
  fullName: SharpSDL3.Sdl.ReadXpmFromArray(string[])
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ReadXpmFromArray
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 2763
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Load an XPM image from a memory array.
  remarks: >-
    The returned surface will be an 8bpp indexed surface, if possible,

    otherwise it will be 32bpp. If you always want 32-bit data, use

    IMG_ReadXPMFromArrayToRGB888() instead.

    <p><strong>Version:</strong> This function is available since SDL_image 3.0.0.</p>

    ReadXPMFromArrayToRGB888
  example: []
  syntax:
    content: public static nint ReadXpmFromArray(string[] xpm)
    parameters:
    - id: xpm
      type: System.String[]
      description: a null-terminated array of strings that comprise XPM data.
    return:
      type: System.IntPtr
      description: (SDL_Surface *) Returns a new SDL surface, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on error.
    content.vb: Public Shared Function ReadXpmFromArray(xpm As String()) As IntPtr
  overload: SharpSDL3.Sdl.ReadXpmFromArray*
  nameWithType.vb: Sdl.ReadXpmFromArray(String())
  fullName.vb: SharpSDL3.Sdl.ReadXpmFromArray(String())
  name.vb: ReadXpmFromArray(String())
- uid: SharpSDL3.Sdl.ReadXpmFromArrayToRgb888(System.String[])
  commentId: M:SharpSDL3.Sdl.ReadXpmFromArrayToRgb888(System.String[])
  id: ReadXpmFromArrayToRgb888(System.String[])
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ReadXpmFromArrayToRgb888(string[])
  nameWithType: Sdl.ReadXpmFromArrayToRgb888(string[])
  fullName: SharpSDL3.Sdl.ReadXpmFromArrayToRgb888(string[])
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ReadXpmFromArrayToRgb888
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 2803
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Load an XPM image from a memory array.
  remarks: >-
    The returned surface will always be a 32-bit RGB surface. If you want 8-bit

    indexed colors (and the XPM data allows it), use

    IMG_ReadXPMFromArray() instead.

    <p><strong>Version:</strong> This function is available since SDL_image 3.0.0.</p>

    ReadXPMFromArray
  example: []
  syntax:
    content: public static nint ReadXpmFromArrayToRgb888(string[] xpm)
    parameters:
    - id: xpm
      type: System.String[]
      description: a null-terminated array of strings that comprise XPM data.
    return:
      type: System.IntPtr
      description: (SDL_Surface *) Returns a new SDL surface, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on error.
    content.vb: Public Shared Function ReadXpmFromArrayToRgb888(xpm As String()) As IntPtr
  overload: SharpSDL3.Sdl.ReadXpmFromArrayToRgb888*
  nameWithType.vb: Sdl.ReadXpmFromArrayToRgb888(String())
  fullName.vb: SharpSDL3.Sdl.ReadXpmFromArrayToRgb888(String())
  name.vb: ReadXpmFromArrayToRgb888(String())
- uid: SharpSDL3.Sdl.SaveAvif(System.IntPtr,System.String,System.Int32)
  commentId: M:SharpSDL3.Sdl.SaveAvif(System.IntPtr,System.String,System.Int32)
  id: SaveAvif(System.IntPtr,System.String,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SaveAvif(nint, string, int)
  nameWithType: Sdl.SaveAvif(nint, string, int)
  fullName: SharpSDL3.Sdl.SaveAvif(nint, string, int)
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SaveAvif
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 2843
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Save an SDL_Surface into a AVIF image file.
  remarks: >-
    If the file already exists, it will be overwritten.

    <p><strong>Version:</strong> This function is available since SDL_image 3.0.0.</p>

    SaveAVIF_IO
  example: []
  syntax:
    content: public static bool SaveAvif(nint surface, string file, int quality)
    parameters:
    - id: surface
      type: System.IntPtr
      description: the SDL surface to save.
    - id: file
      type: System.String
      description: path on the filesystem to write new file to.
    - id: quality
      type: System.Int32
      description: the desired quality, ranging between 0 (lowest) and 100 (highest).
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SaveAvif(surface As IntPtr, file As String, quality As Integer) As Boolean
  overload: SharpSDL3.Sdl.SaveAvif*
  nameWithType.vb: Sdl.SaveAvif(IntPtr, String, Integer)
  fullName.vb: SharpSDL3.Sdl.SaveAvif(System.IntPtr, String, Integer)
  name.vb: SaveAvif(IntPtr, String, Integer)
- uid: SharpSDL3.Sdl.SaveAvifIo(System.IntPtr,System.IntPtr,System.Boolean,System.Int32)
  commentId: M:SharpSDL3.Sdl.SaveAvifIo(System.IntPtr,System.IntPtr,System.Boolean,System.Int32)
  id: SaveAvifIo(System.IntPtr,System.IntPtr,System.Boolean,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SaveAvifIo(nint, nint, bool, int)
  nameWithType: Sdl.SaveAvifIo(nint, nint, bool, int)
  fullName: SharpSDL3.Sdl.SaveAvifIo(nint, nint, bool, int)
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SaveAvifIo
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 2879
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static bool SaveAvifIo(nint surface, nint dst, bool closeio, int quality)
    parameters:
    - id: surface
      type: System.IntPtr
    - id: dst
      type: System.IntPtr
    - id: closeio
      type: System.Boolean
    - id: quality
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function SaveAvifIo(surface As IntPtr, dst As IntPtr, closeio As Boolean, quality As Integer) As Boolean
  overload: SharpSDL3.Sdl.SaveAvifIo*
  nameWithType.vb: Sdl.SaveAvifIo(IntPtr, IntPtr, Boolean, Integer)
  fullName.vb: SharpSDL3.Sdl.SaveAvifIo(System.IntPtr, System.IntPtr, Boolean, Integer)
  name.vb: SaveAvifIo(IntPtr, IntPtr, Boolean, Integer)
- uid: SharpSDL3.Sdl.SavePng(System.IntPtr,System.String)
  commentId: M:SharpSDL3.Sdl.SavePng(System.IntPtr,System.String)
  id: SavePng(System.IntPtr,System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SavePng(nint, string)
  nameWithType: Sdl.SavePng(nint, string)
  fullName: SharpSDL3.Sdl.SavePng(nint, string)
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SavePng
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 2919
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Save an SDL_Surface into a PNG image file.
  remarks: >-
    If the file already exists, it will be overwritten.

    <p><strong>Version:</strong> This function is available since SDL_image 3.0.0.</p>

    SavePNG_IO
  example: []
  syntax:
    content: public static bool SavePng(nint surface, string file)
    parameters:
    - id: surface
      type: System.IntPtr
      description: the SDL surface to save.
    - id: file
      type: System.String
      description: path on the filesystem to write new file to.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SavePng(surface As IntPtr, file As String) As Boolean
  overload: SharpSDL3.Sdl.SavePng*
  nameWithType.vb: Sdl.SavePng(IntPtr, String)
  fullName.vb: SharpSDL3.Sdl.SavePng(System.IntPtr, String)
  name.vb: SavePng(IntPtr, String)
- uid: SharpSDL3.Sdl.SavePngIo(System.IntPtr,System.IntPtr,System.Boolean)
  commentId: M:SharpSDL3.Sdl.SavePngIo(System.IntPtr,System.IntPtr,System.Boolean)
  id: SavePngIo(System.IntPtr,System.IntPtr,System.Boolean)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SavePngIo(nint, nint, bool)
  nameWithType: Sdl.SavePngIo(nint, nint, bool)
  fullName: SharpSDL3.Sdl.SavePngIo(nint, nint, bool)
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SavePngIo
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 2953
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static bool SavePngIo(nint surface, nint dst, bool closeio)
    parameters:
    - id: surface
      type: System.IntPtr
    - id: dst
      type: System.IntPtr
    - id: closeio
      type: System.Boolean
    return:
      type: System.Boolean
    content.vb: Public Shared Function SavePngIo(surface As IntPtr, dst As IntPtr, closeio As Boolean) As Boolean
  overload: SharpSDL3.Sdl.SavePngIo*
  nameWithType.vb: Sdl.SavePngIo(IntPtr, IntPtr, Boolean)
  fullName.vb: SharpSDL3.Sdl.SavePngIo(System.IntPtr, System.IntPtr, Boolean)
  name.vb: SavePngIo(IntPtr, IntPtr, Boolean)
- uid: SharpSDL3.Sdl.SaveJpg(System.IntPtr,System.String,System.Int32)
  commentId: M:SharpSDL3.Sdl.SaveJpg(System.IntPtr,System.String,System.Int32)
  id: SaveJpg(System.IntPtr,System.String,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SaveJpg(nint, string, int)
  nameWithType: Sdl.SaveJpg(nint, string, int)
  fullName: SharpSDL3.Sdl.SaveJpg(nint, string, int)
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SaveJpg
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 2996
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Save an SDL_Surface into a JPEG image file.
  remarks: >-
    If the file already exists, it will be overwritten.

    <p><strong>Version:</strong> This function is available since SDL_image 3.0.0.</p>

    SaveJPG_IO
  example: []
  syntax:
    content: public static bool SaveJpg(nint surface, string file, int quality)
    parameters:
    - id: surface
      type: System.IntPtr
      description: the SDL surface to save.
    - id: file
      type: System.String
      description: path on the filesystem to write new file to.
    - id: quality
      type: System.Int32
      description: '[0; 33] is Lowest quality, [34; 66] is Middle quality, [67; 100] is Highest quality.'
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SaveJpg(surface As IntPtr, file As String, quality As Integer) As Boolean
  overload: SharpSDL3.Sdl.SaveJpg*
  nameWithType.vb: Sdl.SaveJpg(IntPtr, String, Integer)
  fullName.vb: SharpSDL3.Sdl.SaveJpg(System.IntPtr, String, Integer)
  name.vb: SaveJpg(IntPtr, String, Integer)
- uid: SharpSDL3.Sdl.SaveJpgIo(System.IntPtr,System.IntPtr,System.Boolean,System.Int32)
  commentId: M:SharpSDL3.Sdl.SaveJpgIo(System.IntPtr,System.IntPtr,System.Boolean,System.Int32)
  id: SaveJpgIo(System.IntPtr,System.IntPtr,System.Boolean,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SaveJpgIo(nint, nint, bool, int)
  nameWithType: Sdl.SaveJpgIo(nint, nint, bool, int)
  fullName: SharpSDL3.Sdl.SaveJpgIo(nint, nint, bool, int)
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SaveJpgIo
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 3032
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static bool SaveJpgIo(nint surface, nint dst, bool closeio, int quality)
    parameters:
    - id: surface
      type: System.IntPtr
    - id: dst
      type: System.IntPtr
    - id: closeio
      type: System.Boolean
    - id: quality
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function SaveJpgIo(surface As IntPtr, dst As IntPtr, closeio As Boolean, quality As Integer) As Boolean
  overload: SharpSDL3.Sdl.SaveJpgIo*
  nameWithType.vb: Sdl.SaveJpgIo(IntPtr, IntPtr, Boolean, Integer)
  fullName.vb: SharpSDL3.Sdl.SaveJpgIo(System.IntPtr, System.IntPtr, Boolean, Integer)
  name.vb: SaveJpgIo(IntPtr, IntPtr, Boolean, Integer)
- uid: SharpSDL3.Sdl.LoadAnimation(System.String)
  commentId: M:SharpSDL3.Sdl.LoadAnimation(System.String)
  id: LoadAnimation(System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LoadAnimation(string)
  nameWithType: Sdl.LoadAnimation(string)
  fullName: SharpSDL3.Sdl.LoadAnimation(string)
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LoadAnimation
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 3070
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Load an animation from a file.
  remarks: >-
    When done with the returned animation, the app should dispose of it with a

    call to IMG_FreeAnimation().

    <p><strong>Version:</strong> This function is available since SDL_image 3.0.0.</p>

    <xref href="SharpSDL3.Sdl.FreeAnimation(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint LoadAnimation(string file)
    parameters:
    - id: file
      type: System.String
      description: path on the filesystem containing an animated image.
    return:
      type: System.IntPtr
      description: (IMG_Animation *) Returns a newIMG_Animation, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on error.
    content.vb: Public Shared Function LoadAnimation(file As String) As IntPtr
  overload: SharpSDL3.Sdl.LoadAnimation*
  nameWithType.vb: Sdl.LoadAnimation(String)
  fullName.vb: SharpSDL3.Sdl.LoadAnimation(String)
  name.vb: LoadAnimation(String)
- uid: SharpSDL3.Sdl.LoadAnimationIo(System.IntPtr,System.Boolean)
  commentId: M:SharpSDL3.Sdl.LoadAnimationIo(System.IntPtr,System.Boolean)
  id: LoadAnimationIo(System.IntPtr,System.Boolean)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LoadAnimationIo(nint, bool)
  nameWithType: Sdl.LoadAnimationIo(nint, bool)
  fullName: SharpSDL3.Sdl.LoadAnimationIo(nint, bool)
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LoadAnimationIo
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 3100
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static nint LoadAnimationIo(nint src, bool closeio)
    parameters:
    - id: src
      type: System.IntPtr
    - id: closeio
      type: System.Boolean
    return:
      type: System.IntPtr
    content.vb: Public Shared Function LoadAnimationIo(src As IntPtr, closeio As Boolean) As IntPtr
  overload: SharpSDL3.Sdl.LoadAnimationIo*
  nameWithType.vb: Sdl.LoadAnimationIo(IntPtr, Boolean)
  fullName.vb: SharpSDL3.Sdl.LoadAnimationIo(System.IntPtr, Boolean)
  name.vb: LoadAnimationIo(IntPtr, Boolean)
- uid: SharpSDL3.Sdl.LoadAnimationTypedIo(System.IntPtr,System.Boolean,System.String)
  commentId: M:SharpSDL3.Sdl.LoadAnimationTypedIo(System.IntPtr,System.Boolean,System.String)
  id: LoadAnimationTypedIo(System.IntPtr,System.Boolean,System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LoadAnimationTypedIo(nint, bool, string)
  nameWithType: Sdl.LoadAnimationTypedIo(nint, bool, string)
  fullName: SharpSDL3.Sdl.LoadAnimationTypedIo(nint, bool, string)
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LoadAnimationTypedIo
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 3139
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static nint LoadAnimationTypedIo(nint src, bool closeio, string type)
    parameters:
    - id: src
      type: System.IntPtr
    - id: closeio
      type: System.Boolean
    - id: type
      type: System.String
    return:
      type: System.IntPtr
    content.vb: Public Shared Function LoadAnimationTypedIo(src As IntPtr, closeio As Boolean, type As String) As IntPtr
  overload: SharpSDL3.Sdl.LoadAnimationTypedIo*
  nameWithType.vb: Sdl.LoadAnimationTypedIo(IntPtr, Boolean, String)
  fullName.vb: SharpSDL3.Sdl.LoadAnimationTypedIo(System.IntPtr, Boolean, String)
  name.vb: LoadAnimationTypedIo(IntPtr, Boolean, String)
- uid: SharpSDL3.Sdl.FreeAnimation(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.FreeAnimation(System.IntPtr)
  id: FreeAnimation(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: FreeAnimation(nint)
  nameWithType: Sdl.FreeAnimation(nint)
  fullName: SharpSDL3.Sdl.FreeAnimation(nint)
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: FreeAnimation
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 3177
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Dispose of an IMG_Animation and free its resources.
  remarks: >-
    The provided anim pointer is not valid once this call returns.

    <p><strong>Version:</strong> This function is available since SDL_image 3.0.0.</p>

    <xref href="SharpSDL3.Sdl.LoadAnimation(System.String)" data-throw-if-not-resolved="false"></xref>

    LoadAnimation_IO

    LoadAnimationTyped_IO
  example: []
  syntax:
    content: public static void FreeAnimation(nint anim)
    parameters:
    - id: anim
      type: System.IntPtr
      description: IMG_Animation to dispose of.
    content.vb: Public Shared Sub FreeAnimation(anim As IntPtr)
  overload: SharpSDL3.Sdl.FreeAnimation*
  nameWithType.vb: Sdl.FreeAnimation(IntPtr)
  fullName.vb: SharpSDL3.Sdl.FreeAnimation(System.IntPtr)
  name.vb: FreeAnimation(IntPtr)
- uid: SharpSDL3.Sdl.LoadGifAnimationIo(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.LoadGifAnimationIo(System.IntPtr)
  id: LoadGifAnimationIo(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LoadGifAnimationIo(nint)
  nameWithType: Sdl.LoadGifAnimationIo(nint)
  fullName: SharpSDL3.Sdl.LoadGifAnimationIo(nint)
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LoadGifAnimationIo
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 3206
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static nint LoadGifAnimationIo(nint src)
    parameters:
    - id: src
      type: System.IntPtr
    return:
      type: System.IntPtr
    content.vb: Public Shared Function LoadGifAnimationIo(src As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.LoadGifAnimationIo*
  nameWithType.vb: Sdl.LoadGifAnimationIo(IntPtr)
  fullName.vb: SharpSDL3.Sdl.LoadGifAnimationIo(System.IntPtr)
  name.vb: LoadGifAnimationIo(IntPtr)
- uid: SharpSDL3.Sdl.LoadWebpAnimationIo(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.LoadWebpAnimationIo(System.IntPtr)
  id: LoadWebpAnimationIo(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LoadWebpAnimationIo(nint)
  nameWithType: Sdl.LoadWebpAnimationIo(nint)
  fullName: SharpSDL3.Sdl.LoadWebpAnimationIo(nint)
  type: Method
  source:
    remote:
      path: SDL3/Image/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LoadWebpAnimationIo
    path: ../../repos/SDL3-CS/SDL3/Image/Sdl.cs
    startLine: 3235
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static nint LoadWebpAnimationIo(nint src)
    parameters:
    - id: src
      type: System.IntPtr
    return:
      type: System.IntPtr
    content.vb: Public Shared Function LoadWebpAnimationIo(src As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.LoadWebpAnimationIo*
  nameWithType.vb: Sdl.LoadWebpAnimationIo(IntPtr)
  fullName.vb: SharpSDL3.Sdl.LoadWebpAnimationIo(System.IntPtr)
  name.vb: LoadWebpAnimationIo(IntPtr)
- uid: SharpSDL3.Sdl.CloseIO(SharpSDL3.Structs.IOStream)
  commentId: M:SharpSDL3.Sdl.CloseIO(SharpSDL3.Structs.IOStream)
  id: CloseIO(SharpSDL3.Structs.IOStream)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CloseIO(IOStream)
  nameWithType: Sdl.CloseIO(IOStream)
  fullName: SharpSDL3.Sdl.CloseIO(SharpSDL3.Structs.IOStream)
  type: Method
  source:
    remote:
      path: SDL3/IO.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CloseIO
    path: ../../repos/SDL3-CS/SDL3/IO.cs
    startLine: 10
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static bool CloseIO(IOStream context)
    parameters:
    - id: context
      type: SharpSDL3.Structs.IOStream
    return:
      type: System.Boolean
    content.vb: Public Shared Function CloseIO(context As IOStream) As Boolean
  overload: SharpSDL3.Sdl.CloseIO*
- uid: SharpSDL3.Sdl.FlushIO(SharpSDL3.Structs.IOStream)
  commentId: M:SharpSDL3.Sdl.FlushIO(SharpSDL3.Structs.IOStream)
  id: FlushIO(SharpSDL3.Structs.IOStream)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: FlushIO(IOStream)
  nameWithType: Sdl.FlushIO(IOStream)
  fullName: SharpSDL3.Sdl.FlushIO(SharpSDL3.Structs.IOStream)
  type: Method
  source:
    remote:
      path: SDL3/IO.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: FlushIO
    path: ../../repos/SDL3-CS/SDL3/IO.cs
    startLine: 18
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static bool FlushIO(IOStream context)
    parameters:
    - id: context
      type: SharpSDL3.Structs.IOStream
    return:
      type: System.Boolean
    content.vb: Public Shared Function FlushIO(context As IOStream) As Boolean
  overload: SharpSDL3.Sdl.FlushIO*
- uid: SharpSDL3.Sdl.GetIOProperties(SharpSDL3.Structs.IOStream)
  commentId: M:SharpSDL3.Sdl.GetIOProperties(SharpSDL3.Structs.IOStream)
  id: GetIOProperties(SharpSDL3.Structs.IOStream)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetIOProperties(IOStream)
  nameWithType: Sdl.GetIOProperties(IOStream)
  fullName: SharpSDL3.Sdl.GetIOProperties(SharpSDL3.Structs.IOStream)
  type: Method
  source:
    remote:
      path: SDL3/IO.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetIOProperties
    path: ../../repos/SDL3-CS/SDL3/IO.cs
    startLine: 35
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the properties associated with an SDL_IOStream.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static uint GetIOProperties(IOStream context)
    parameters:
    - id: context
      type: SharpSDL3.Structs.IOStream
      description: a pointer to an SDL_IOStream structure.
    return:
      type: System.UInt32
      description: Returns a valid property ID on success or 0 on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetIOProperties(context As IOStream) As UInteger
  overload: SharpSDL3.Sdl.GetIOProperties*
- uid: SharpSDL3.Sdl.GetIOSize(SharpSDL3.Structs.IOStream)
  commentId: M:SharpSDL3.Sdl.GetIOSize(SharpSDL3.Structs.IOStream)
  id: GetIOSize(SharpSDL3.Structs.IOStream)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetIOSize(IOStream)
  nameWithType: Sdl.GetIOSize(IOStream)
  fullName: SharpSDL3.Sdl.GetIOSize(SharpSDL3.Structs.IOStream)
  type: Method
  source:
    remote:
      path: SDL3/IO.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetIOSize
    path: ../../repos/SDL3-CS/SDL3/IO.cs
    startLine: 52
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Use this function to get the size of the data stream in an SDL_IOStream.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static long GetIOSize(IOStream context)
    parameters:
    - id: context
      type: SharpSDL3.Structs.IOStream
      description: the SDL_IOStream to get the size of the data stream from.
    return:
      type: System.Int64
      description: Returns the size of the data stream in theSDL_IOStream on success or a negative error code on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetIOSize(context As IOStream) As Long
  overload: SharpSDL3.Sdl.GetIOSize*
- uid: SharpSDL3.Sdl.GetIOStatus(SharpSDL3.Structs.IOStream)
  commentId: M:SharpSDL3.Sdl.GetIOStatus(SharpSDL3.Structs.IOStream)
  id: GetIOStatus(SharpSDL3.Structs.IOStream)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetIOStatus(IOStream)
  nameWithType: Sdl.GetIOStatus(IOStream)
  fullName: SharpSDL3.Sdl.GetIOStatus(SharpSDL3.Structs.IOStream)
  type: Method
  source:
    remote:
      path: SDL3/IO.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetIOStatus
    path: ../../repos/SDL3-CS/SDL3/IO.cs
    startLine: 72
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Query the stream status of an SDL_IOStream.
  remarks: >-
    This information can be useful to decide if a short read or write was due

    to an error, an EOF, or a non-blocking operation that isn't yet ready to

    complete.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static IoStatus GetIOStatus(IOStream context)
    parameters:
    - id: context
      type: SharpSDL3.Structs.IOStream
      description: the SDL_IOStream to query.
    return:
      type: SharpSDL3.Enums.IoStatus
      description: Returns an SDL_IOStatus enumwith the current state.
    content.vb: Public Shared Function GetIOStatus(context As IOStream) As IoStatus
  overload: SharpSDL3.Sdl.GetIOStatus*
- uid: SharpSDL3.Sdl.IOFromConstMem(System.IntPtr,System.UIntPtr)
  commentId: M:SharpSDL3.Sdl.IOFromConstMem(System.IntPtr,System.UIntPtr)
  id: IOFromConstMem(System.IntPtr,System.UIntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: IOFromConstMem(nint, nuint)
  nameWithType: Sdl.IOFromConstMem(nint, nuint)
  fullName: SharpSDL3.Sdl.IOFromConstMem(nint, nuint)
  type: Method
  source:
    remote:
      path: SDL3/IO.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: IOFromConstMem
    path: ../../repos/SDL3-CS/SDL3/IO.cs
    startLine: 97
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Use this function to prepare a read-only memory buffer for use with SDL_IOStream.
  remarks: >-
    This function sets up an SDL_IOStream struct based on a

    memory area of a certain size. It assumes the memory area is not writable.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.IOFromMem(System.IntPtr%2cSystem.UIntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.CloseIO(SharpSDL3.Structs.IOStream)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.ReadIO(SharpSDL3.Structs.IOStream%2cSystem.IntPtr%2cSystem.UIntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SeekIO(SharpSDL3.Structs.IOStream%2cSystem.Int64%2cSharpSDL3.Enums.IoWhence)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.TellIO(SharpSDL3.Structs.IOStream)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static IOStream IOFromConstMem(nint mem, nuint size)
    parameters:
    - id: mem
      type: System.IntPtr
      description: a pointer to a read-only buffer to feed an SDL_IOStream stream.
    - id: size
      type: System.UIntPtr
      description: the buffer size, in bytes.
    return:
      type: SharpSDL3.Structs.IOStream
      description: (SDL_IOStream *) Returns a pointer to a newSDL_IOStream structure or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function IOFromConstMem(mem As IntPtr, size As UIntPtr) As IOStream
  overload: SharpSDL3.Sdl.IOFromConstMem*
  nameWithType.vb: Sdl.IOFromConstMem(IntPtr, UIntPtr)
  fullName.vb: SharpSDL3.Sdl.IOFromConstMem(System.IntPtr, System.UIntPtr)
  name.vb: IOFromConstMem(IntPtr, UIntPtr)
- uid: SharpSDL3.Sdl.IOFromDynamicMem
  commentId: M:SharpSDL3.Sdl.IOFromDynamicMem
  id: IOFromDynamicMem
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: IOFromDynamicMem()
  nameWithType: Sdl.IOFromDynamicMem()
  fullName: SharpSDL3.Sdl.IOFromDynamicMem()
  type: Method
  source:
    remote:
      path: SDL3/IO.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: IOFromDynamicMem
    path: ../../repos/SDL3-CS/SDL3/IO.cs
    startLine: 123
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Use this function to create an SDL_IOStream that is backed by dynamically allocated memory.
  remarks: >-
    This supports the following properties to provide access to the memory and

    control over allocations:

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CloseIO(SharpSDL3.Structs.IOStream)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.ReadIO(SharpSDL3.Structs.IOStream%2cSystem.IntPtr%2cSystem.UIntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SeekIO(SharpSDL3.Structs.IOStream%2cSystem.Int64%2cSharpSDL3.Enums.IoWhence)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.TellIO(SharpSDL3.Structs.IOStream)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.WriteIO(SharpSDL3.Structs.IOStream%2cSystem.IntPtr%2cSystem.UIntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static IOStream IOFromDynamicMem()
    return:
      type: SharpSDL3.Structs.IOStream
      description: (SDL_IOStream *) Returns a pointer to a newSDL_IOStream structure or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function IOFromDynamicMem() As IOStream
  overload: SharpSDL3.Sdl.IOFromDynamicMem*
- uid: SharpSDL3.Sdl.IOFromFile(System.String,System.String)
  commentId: M:SharpSDL3.Sdl.IOFromFile(System.String,System.String)
  id: IOFromFile(System.String,System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: IOFromFile(string, string)
  nameWithType: Sdl.IOFromFile(string, string)
  fullName: SharpSDL3.Sdl.IOFromFile(string, string)
  type: Method
  source:
    remote:
      path: SDL3/IO.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: IOFromFile
    path: ../../repos/SDL3-CS/SDL3/IO.cs
    startLine: 135
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static IOStream IOFromFile(string file, string mode)
    parameters:
    - id: file
      type: System.String
    - id: mode
      type: System.String
    return:
      type: SharpSDL3.Structs.IOStream
    content.vb: Public Shared Function IOFromFile(file As String, mode As String) As IOStream
  overload: SharpSDL3.Sdl.IOFromFile*
  nameWithType.vb: Sdl.IOFromFile(String, String)
  fullName.vb: SharpSDL3.Sdl.IOFromFile(String, String)
  name.vb: IOFromFile(String, String)
- uid: SharpSDL3.Sdl.IOFromMem(System.IntPtr,System.UIntPtr)
  commentId: M:SharpSDL3.Sdl.IOFromMem(System.IntPtr,System.UIntPtr)
  id: IOFromMem(System.IntPtr,System.UIntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: IOFromMem(nint, nuint)
  nameWithType: Sdl.IOFromMem(nint, nuint)
  fullName: SharpSDL3.Sdl.IOFromMem(nint, nuint)
  type: Method
  source:
    remote:
      path: SDL3/IO.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: IOFromMem
    path: ../../repos/SDL3-CS/SDL3/IO.cs
    startLine: 165
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Use this function to prepare a read-write memory buffer for use with SDL_IOStream.
  remarks: >-
    This function sets up an SDL_IOStream struct based on a

    memory area of a certain size, for both read and write access.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.IOFromConstMem(System.IntPtr%2cSystem.UIntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.CloseIO(SharpSDL3.Structs.IOStream)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.FlushIO(SharpSDL3.Structs.IOStream)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.ReadIO(SharpSDL3.Structs.IOStream%2cSystem.IntPtr%2cSystem.UIntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SeekIO(SharpSDL3.Structs.IOStream%2cSystem.Int64%2cSharpSDL3.Enums.IoWhence)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.TellIO(SharpSDL3.Structs.IOStream)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.WriteIO(SharpSDL3.Structs.IOStream%2cSystem.IntPtr%2cSystem.UIntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static IOStream IOFromMem(nint mem, nuint size)
    parameters:
    - id: mem
      type: System.IntPtr
      description: a pointer to a buffer to feed an SDL_IOStream stream.
    - id: size
      type: System.UIntPtr
      description: the buffer size, in bytes.
    return:
      type: SharpSDL3.Structs.IOStream
      description: (SDL_IOStream *) Returns a pointer to a newSDL_IOStream structure or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function IOFromMem(mem As IntPtr, size As UIntPtr) As IOStream
  overload: SharpSDL3.Sdl.IOFromMem*
  nameWithType.vb: Sdl.IOFromMem(IntPtr, UIntPtr)
  fullName.vb: SharpSDL3.Sdl.IOFromMem(System.IntPtr, System.UIntPtr)
  name.vb: IOFromMem(IntPtr, UIntPtr)
- uid: SharpSDL3.Sdl.IOprintf(SharpSDL3.Structs.IOStream,System.String)
  commentId: M:SharpSDL3.Sdl.IOprintf(SharpSDL3.Structs.IOStream,System.String)
  id: IOprintf(SharpSDL3.Structs.IOStream,System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: IOprintf(IOStream, string)
  nameWithType: Sdl.IOprintf(IOStream, string)
  fullName: SharpSDL3.Sdl.IOprintf(SharpSDL3.Structs.IOStream, string)
  type: Method
  source:
    remote:
      path: SDL3/IO.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: IOprintf
    path: ../../repos/SDL3-CS/SDL3/IO.cs
    startLine: 191
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Print to an SDL_IOStream data stream.
  remarks: >-
    This function does formatted printing to the stream.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    IOvprintf

    <xref href="SharpSDL3.Sdl.WriteIO(SharpSDL3.Structs.IOStream%2cSystem.IntPtr%2cSystem.UIntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nuint IOprintf(IOStream context, string fmt)
    parameters:
    - id: context
      type: SharpSDL3.Structs.IOStream
      description: a pointer to an SDL_IOStream structure.
    - id: fmt
      type: System.String
      description: a printf() style format string.
    return:
      type: System.UIntPtr
      description: Returns the number of bytes written or 0 on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function IOprintf(context As IOStream, fmt As String) As UIntPtr
  overload: SharpSDL3.Sdl.IOprintf*
  nameWithType.vb: Sdl.IOprintf(IOStream, String)
  fullName.vb: SharpSDL3.Sdl.IOprintf(SharpSDL3.Structs.IOStream, String)
  name.vb: IOprintf(IOStream, String)
- uid: SharpSDL3.Sdl.LoadFile(System.String,System.UIntPtr@)
  commentId: M:SharpSDL3.Sdl.LoadFile(System.String,System.UIntPtr@)
  id: LoadFile(System.String,System.UIntPtr@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LoadFile(string, out nuint)
  nameWithType: Sdl.LoadFile(string, out nuint)
  fullName: SharpSDL3.Sdl.LoadFile(string, out nuint)
  type: Method
  source:
    remote:
      path: SDL3/IO.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LoadFile
    path: ../../repos/SDL3-CS/SDL3/IO.cs
    startLine: 214
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Load all the data from a file path.
  remarks: >-
    The data is allocated with a zero byte at the end (null terminated) for

    convenience. This extra byte is not included in the value reported via

    datasize.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    LoadFile_IO

    <xref href="SharpSDL3.Sdl.SaveFile(SharpSDL3.Delegates.SdlDialogFileCallback%2cSystem.IntPtr%2cSystem.IntPtr%2cSystem.Span%7bSharpSDL3.Structs.DialogFileFilter%7d%2cSystem.Int32%2cSystem.String)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint LoadFile(string file, out nuint datasize)
    parameters:
    - id: file
      type: System.String
      description: the path to read all available data from.
    - id: datasize
      type: System.UIntPtr
      description: if not <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>, will store the number of bytes read.
    return:
      type: System.IntPtr
      description: (void *) Returns the data or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function LoadFile(file As String, datasize As UIntPtr) As IntPtr
  overload: SharpSDL3.Sdl.LoadFile*
  nameWithType.vb: Sdl.LoadFile(String, UIntPtr)
  fullName.vb: SharpSDL3.Sdl.LoadFile(String, System.UIntPtr)
  name.vb: LoadFile(String, UIntPtr)
- uid: SharpSDL3.Sdl.LoadFileIO(SharpSDL3.Structs.IOStream,System.UIntPtr@,System.Boolean)
  commentId: M:SharpSDL3.Sdl.LoadFileIO(SharpSDL3.Structs.IOStream,System.UIntPtr@,System.Boolean)
  id: LoadFileIO(SharpSDL3.Structs.IOStream,System.UIntPtr@,System.Boolean)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LoadFileIO(IOStream, out nuint, bool)
  nameWithType: Sdl.LoadFileIO(IOStream, out nuint, bool)
  fullName: SharpSDL3.Sdl.LoadFileIO(SharpSDL3.Structs.IOStream, out nuint, bool)
  type: Method
  source:
    remote:
      path: SDL3/IO.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LoadFileIO
    path: ../../repos/SDL3-CS/SDL3/IO.cs
    startLine: 224
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static nint LoadFileIO(IOStream src, out nuint datasize, bool closeio)
    parameters:
    - id: src
      type: SharpSDL3.Structs.IOStream
    - id: datasize
      type: System.UIntPtr
    - id: closeio
      type: System.Boolean
    return:
      type: System.IntPtr
    content.vb: Public Shared Function LoadFileIO(src As IOStream, datasize As UIntPtr, closeio As Boolean) As IntPtr
  overload: SharpSDL3.Sdl.LoadFileIO*
  nameWithType.vb: Sdl.LoadFileIO(IOStream, UIntPtr, Boolean)
  fullName.vb: SharpSDL3.Sdl.LoadFileIO(SharpSDL3.Structs.IOStream, System.UIntPtr, Boolean)
  name.vb: LoadFileIO(IOStream, UIntPtr, Boolean)
- uid: SharpSDL3.Sdl.OpenIO(SharpSDL3.Structs.IOStreamInterface@,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.OpenIO(SharpSDL3.Structs.IOStreamInterface@,System.IntPtr)
  id: OpenIO(SharpSDL3.Structs.IOStreamInterface@,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: OpenIO(ref IOStreamInterface, nint)
  nameWithType: Sdl.OpenIO(ref IOStreamInterface, nint)
  fullName: SharpSDL3.Sdl.OpenIO(ref SharpSDL3.Structs.IOStreamInterface, nint)
  type: Method
  source:
    remote:
      path: SDL3/IO.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: OpenIO
    path: ../../repos/SDL3-CS/SDL3/IO.cs
    startLine: 235
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static IOStream OpenIO(ref IOStreamInterface iface, nint userdata)
    parameters:
    - id: iface
      type: SharpSDL3.Structs.IOStreamInterface
    - id: userdata
      type: System.IntPtr
    return:
      type: SharpSDL3.Structs.IOStream
    content.vb: Public Shared Function OpenIO(iface As IOStreamInterface, userdata As IntPtr) As IOStream
  overload: SharpSDL3.Sdl.OpenIO*
  nameWithType.vb: Sdl.OpenIO(IOStreamInterface, IntPtr)
  fullName.vb: SharpSDL3.Sdl.OpenIO(SharpSDL3.Structs.IOStreamInterface, System.IntPtr)
  name.vb: OpenIO(IOStreamInterface, IntPtr)
- uid: SharpSDL3.Sdl.ReadIO(SharpSDL3.Structs.IOStream,System.IntPtr,System.UIntPtr)
  commentId: M:SharpSDL3.Sdl.ReadIO(SharpSDL3.Structs.IOStream,System.IntPtr,System.UIntPtr)
  id: ReadIO(SharpSDL3.Structs.IOStream,System.IntPtr,System.UIntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ReadIO(IOStream, nint, nuint)
  nameWithType: Sdl.ReadIO(IOStream, nint, nuint)
  fullName: SharpSDL3.Sdl.ReadIO(SharpSDL3.Structs.IOStream, nint, nuint)
  type: Method
  source:
    remote:
      path: SDL3/IO.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ReadIO
    path: ../../repos/SDL3-CS/SDL3/IO.cs
    startLine: 248
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static nuint ReadIO(IOStream context, nint ptr, nuint size)
    parameters:
    - id: context
      type: SharpSDL3.Structs.IOStream
    - id: ptr
      type: System.IntPtr
    - id: size
      type: System.UIntPtr
    return:
      type: System.UIntPtr
    content.vb: Public Shared Function ReadIO(context As IOStream, ptr As IntPtr, size As UIntPtr) As UIntPtr
  overload: SharpSDL3.Sdl.ReadIO*
  nameWithType.vb: Sdl.ReadIO(IOStream, IntPtr, UIntPtr)
  fullName.vb: SharpSDL3.Sdl.ReadIO(SharpSDL3.Structs.IOStream, System.IntPtr, System.UIntPtr)
  name.vb: ReadIO(IOStream, IntPtr, UIntPtr)
- uid: SharpSDL3.Sdl.ReadS16BE(SharpSDL3.Structs.IOStream,System.Int16@)
  commentId: M:SharpSDL3.Sdl.ReadS16BE(SharpSDL3.Structs.IOStream,System.Int16@)
  id: ReadS16BE(SharpSDL3.Structs.IOStream,System.Int16@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ReadS16BE(IOStream, out short)
  nameWithType: Sdl.ReadS16BE(IOStream, out short)
  fullName: SharpSDL3.Sdl.ReadS16BE(SharpSDL3.Structs.IOStream, out short)
  type: Method
  source:
    remote:
      path: SDL3/IO.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ReadS16BE
    path: ../../repos/SDL3-CS/SDL3/IO.cs
    startLine: 268
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Use this function to read 16 bits of big-endian data from an SDL_IOStream and return in native format.
  remarks: >-
    SDL byteswaps the data only if necessary, so the data returned will be in

    the native byte order.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool ReadS16BE(IOStream src, out short value)
    parameters:
    - id: src
      type: SharpSDL3.Structs.IOStream
      description: the stream from which to read data.
    - id: value
      type: System.Int16
      description: a pointer filled in with the data read.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on successful write or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function ReadS16BE(src As IOStream, value As Short) As Boolean
  overload: SharpSDL3.Sdl.ReadS16BE*
  nameWithType.vb: Sdl.ReadS16BE(IOStream, Short)
  fullName.vb: SharpSDL3.Sdl.ReadS16BE(SharpSDL3.Structs.IOStream, Short)
  name.vb: ReadS16BE(IOStream, Short)
- uid: SharpSDL3.Sdl.ReadS16LE(SharpSDL3.Structs.IOStream,System.Int16@)
  commentId: M:SharpSDL3.Sdl.ReadS16LE(SharpSDL3.Structs.IOStream,System.Int16@)
  id: ReadS16LE(SharpSDL3.Structs.IOStream,System.Int16@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ReadS16LE(IOStream, out short)
  nameWithType: Sdl.ReadS16LE(IOStream, out short)
  fullName: SharpSDL3.Sdl.ReadS16LE(SharpSDL3.Structs.IOStream, out short)
  type: Method
  source:
    remote:
      path: SDL3/IO.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ReadS16LE
    path: ../../repos/SDL3-CS/SDL3/IO.cs
    startLine: 290
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Use this function to read 16 bits of little-endian data from an SDL_IOStream and return in native format.
  remarks: >-
    SDL byteswaps the data only if necessary, so the data returned will be in

    the native byte order.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool ReadS16LE(IOStream src, out short value)
    parameters:
    - id: src
      type: SharpSDL3.Structs.IOStream
      description: the stream from which to read data.
    - id: value
      type: System.Int16
      description: a pointer filled in with the data read.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on successful write or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function ReadS16LE(src As IOStream, value As Short) As Boolean
  overload: SharpSDL3.Sdl.ReadS16LE*
  nameWithType.vb: Sdl.ReadS16LE(IOStream, Short)
  fullName.vb: SharpSDL3.Sdl.ReadS16LE(SharpSDL3.Structs.IOStream, Short)
  name.vb: ReadS16LE(IOStream, Short)
- uid: SharpSDL3.Sdl.ReadS32BE(SharpSDL3.Structs.IOStream,System.Int32@)
  commentId: M:SharpSDL3.Sdl.ReadS32BE(SharpSDL3.Structs.IOStream,System.Int32@)
  id: ReadS32BE(SharpSDL3.Structs.IOStream,System.Int32@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ReadS32BE(IOStream, out int)
  nameWithType: Sdl.ReadS32BE(IOStream, out int)
  fullName: SharpSDL3.Sdl.ReadS32BE(SharpSDL3.Structs.IOStream, out int)
  type: Method
  source:
    remote:
      path: SDL3/IO.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ReadS32BE
    path: ../../repos/SDL3-CS/SDL3/IO.cs
    startLine: 312
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Use this function to read 32 bits of big-endian data from an SDL_IOStream and return in native format.
  remarks: >-
    SDL byteswaps the data only if necessary, so the data returned will be in

    the native byte order.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool ReadS32BE(IOStream src, out int value)
    parameters:
    - id: src
      type: SharpSDL3.Structs.IOStream
      description: the stream from which to read data.
    - id: value
      type: System.Int32
      description: a pointer filled in with the data read.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on successful write or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function ReadS32BE(src As IOStream, value As Integer) As Boolean
  overload: SharpSDL3.Sdl.ReadS32BE*
  nameWithType.vb: Sdl.ReadS32BE(IOStream, Integer)
  fullName.vb: SharpSDL3.Sdl.ReadS32BE(SharpSDL3.Structs.IOStream, Integer)
  name.vb: ReadS32BE(IOStream, Integer)
- uid: SharpSDL3.Sdl.ReadS32LE(SharpSDL3.Structs.IOStream,System.Int32@)
  commentId: M:SharpSDL3.Sdl.ReadS32LE(SharpSDL3.Structs.IOStream,System.Int32@)
  id: ReadS32LE(SharpSDL3.Structs.IOStream,System.Int32@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ReadS32LE(IOStream, out int)
  nameWithType: Sdl.ReadS32LE(IOStream, out int)
  fullName: SharpSDL3.Sdl.ReadS32LE(SharpSDL3.Structs.IOStream, out int)
  type: Method
  source:
    remote:
      path: SDL3/IO.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ReadS32LE
    path: ../../repos/SDL3-CS/SDL3/IO.cs
    startLine: 334
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Use this function to read 32 bits of little-endian data from an SDL_IOStream and return in native format.
  remarks: >-
    SDL byteswaps the data only if necessary, so the data returned will be in

    the native byte order.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool ReadS32LE(IOStream src, out int value)
    parameters:
    - id: src
      type: SharpSDL3.Structs.IOStream
      description: the stream from which to read data.
    - id: value
      type: System.Int32
      description: a pointer filled in with the data read.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on successful write or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function ReadS32LE(src As IOStream, value As Integer) As Boolean
  overload: SharpSDL3.Sdl.ReadS32LE*
  nameWithType.vb: Sdl.ReadS32LE(IOStream, Integer)
  fullName.vb: SharpSDL3.Sdl.ReadS32LE(SharpSDL3.Structs.IOStream, Integer)
  name.vb: ReadS32LE(IOStream, Integer)
- uid: SharpSDL3.Sdl.ReadS64BE(SharpSDL3.Structs.IOStream,System.Int64@)
  commentId: M:SharpSDL3.Sdl.ReadS64BE(SharpSDL3.Structs.IOStream,System.Int64@)
  id: ReadS64BE(SharpSDL3.Structs.IOStream,System.Int64@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ReadS64BE(IOStream, out long)
  nameWithType: Sdl.ReadS64BE(IOStream, out long)
  fullName: SharpSDL3.Sdl.ReadS64BE(SharpSDL3.Structs.IOStream, out long)
  type: Method
  source:
    remote:
      path: SDL3/IO.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ReadS64BE
    path: ../../repos/SDL3-CS/SDL3/IO.cs
    startLine: 356
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Use this function to read 64 bits of big-endian data from an SDL_IOStream and return in native format.
  remarks: >-
    SDL byteswaps the data only if necessary, so the data returned will be in

    the native byte order.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool ReadS64BE(IOStream src, out long value)
    parameters:
    - id: src
      type: SharpSDL3.Structs.IOStream
      description: the stream from which to read data.
    - id: value
      type: System.Int64
      description: a pointer filled in with the data read.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on successful write or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function ReadS64BE(src As IOStream, value As Long) As Boolean
  overload: SharpSDL3.Sdl.ReadS64BE*
  nameWithType.vb: Sdl.ReadS64BE(IOStream, Long)
  fullName.vb: SharpSDL3.Sdl.ReadS64BE(SharpSDL3.Structs.IOStream, Long)
  name.vb: ReadS64BE(IOStream, Long)
- uid: SharpSDL3.Sdl.ReadS64LE(SharpSDL3.Structs.IOStream,System.Int64@)
  commentId: M:SharpSDL3.Sdl.ReadS64LE(SharpSDL3.Structs.IOStream,System.Int64@)
  id: ReadS64LE(SharpSDL3.Structs.IOStream,System.Int64@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ReadS64LE(IOStream, out long)
  nameWithType: Sdl.ReadS64LE(IOStream, out long)
  fullName: SharpSDL3.Sdl.ReadS64LE(SharpSDL3.Structs.IOStream, out long)
  type: Method
  source:
    remote:
      path: SDL3/IO.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ReadS64LE
    path: ../../repos/SDL3-CS/SDL3/IO.cs
    startLine: 378
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Use this function to read 64 bits of little-endian data from an SDL_IOStream and return in native format.
  remarks: >-
    SDL byteswaps the data only if necessary, so the data returned will be in

    the native byte order.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool ReadS64LE(IOStream src, out long value)
    parameters:
    - id: src
      type: SharpSDL3.Structs.IOStream
      description: the stream from which to read data.
    - id: value
      type: System.Int64
      description: a pointer filled in with the data read.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on successful write or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function ReadS64LE(src As IOStream, value As Long) As Boolean
  overload: SharpSDL3.Sdl.ReadS64LE*
  nameWithType.vb: Sdl.ReadS64LE(IOStream, Long)
  fullName.vb: SharpSDL3.Sdl.ReadS64LE(SharpSDL3.Structs.IOStream, Long)
  name.vb: ReadS64LE(IOStream, Long)
- uid: SharpSDL3.Sdl.ReadS8(SharpSDL3.Structs.IOStream,System.SByte@)
  commentId: M:SharpSDL3.Sdl.ReadS8(SharpSDL3.Structs.IOStream,System.SByte@)
  id: ReadS8(SharpSDL3.Structs.IOStream,System.SByte@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ReadS8(IOStream, out sbyte)
  nameWithType: Sdl.ReadS8(IOStream, out sbyte)
  fullName: SharpSDL3.Sdl.ReadS8(SharpSDL3.Structs.IOStream, out sbyte)
  type: Method
  source:
    remote:
      path: SDL3/IO.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ReadS8
    path: ../../repos/SDL3-CS/SDL3/IO.cs
    startLine: 404
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Use this function to read a signed byte from an SDL_IOStream.
  remarks: >-
    This function will return false when the data stream is completely read,

    and SDL_GetIOStatus() will return

    SDL_IO_STATUS_EOF. If <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> is returned and the stream

    is not at EOF, SDL_GetIOStatus() will return a different

    error value and <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> will offer a human-readable

    message.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool ReadS8(IOStream src, out sbyte value)
    parameters:
    - id: src
      type: SharpSDL3.Structs.IOStream
      description: the SDL_IOStream to read from.
    - id: value
      type: System.SByte
      description: a pointer filled in with the data read.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function ReadS8(src As IOStream, value As SByte) As Boolean
  overload: SharpSDL3.Sdl.ReadS8*
  nameWithType.vb: Sdl.ReadS8(IOStream, SByte)
  fullName.vb: SharpSDL3.Sdl.ReadS8(SharpSDL3.Structs.IOStream, SByte)
  name.vb: ReadS8(IOStream, SByte)
- uid: SharpSDL3.Sdl.ReadU16BE(SharpSDL3.Structs.IOStream,System.UInt16@)
  commentId: M:SharpSDL3.Sdl.ReadU16BE(SharpSDL3.Structs.IOStream,System.UInt16@)
  id: ReadU16BE(SharpSDL3.Structs.IOStream,System.UInt16@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ReadU16BE(IOStream, out ushort)
  nameWithType: Sdl.ReadU16BE(IOStream, out ushort)
  fullName: SharpSDL3.Sdl.ReadU16BE(SharpSDL3.Structs.IOStream, out ushort)
  type: Method
  source:
    remote:
      path: SDL3/IO.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ReadU16BE
    path: ../../repos/SDL3-CS/SDL3/IO.cs
    startLine: 426
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Use this function to read 16 bits of big-endian data from an SDL_IOStream and return in native format.
  remarks: >-
    SDL byteswaps the data only if necessary, so the data returned will be in

    the native byte order.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool ReadU16BE(IOStream src, out ushort value)
    parameters:
    - id: src
      type: SharpSDL3.Structs.IOStream
      description: the stream from which to read data.
    - id: value
      type: System.UInt16
      description: a pointer filled in with the data read.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on successful write or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function ReadU16BE(src As IOStream, value As UShort) As Boolean
  overload: SharpSDL3.Sdl.ReadU16BE*
  nameWithType.vb: Sdl.ReadU16BE(IOStream, UShort)
  fullName.vb: SharpSDL3.Sdl.ReadU16BE(SharpSDL3.Structs.IOStream, UShort)
  name.vb: ReadU16BE(IOStream, UShort)
- uid: SharpSDL3.Sdl.ReadU16LE(SharpSDL3.Structs.IOStream,System.UInt16@)
  commentId: M:SharpSDL3.Sdl.ReadU16LE(SharpSDL3.Structs.IOStream,System.UInt16@)
  id: ReadU16LE(SharpSDL3.Structs.IOStream,System.UInt16@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ReadU16LE(IOStream, out ushort)
  nameWithType: Sdl.ReadU16LE(IOStream, out ushort)
  fullName: SharpSDL3.Sdl.ReadU16LE(SharpSDL3.Structs.IOStream, out ushort)
  type: Method
  source:
    remote:
      path: SDL3/IO.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ReadU16LE
    path: ../../repos/SDL3-CS/SDL3/IO.cs
    startLine: 448
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Use this function to read 16 bits of little-endian data from an SDL_IOStream and return in native format.
  remarks: >-
    SDL byteswaps the data only if necessary, so the data returned will be in

    the native byte order.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool ReadU16LE(IOStream src, out ushort value)
    parameters:
    - id: src
      type: SharpSDL3.Structs.IOStream
      description: the stream from which to read data.
    - id: value
      type: System.UInt16
      description: a pointer filled in with the data read.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on successful write or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function ReadU16LE(src As IOStream, value As UShort) As Boolean
  overload: SharpSDL3.Sdl.ReadU16LE*
  nameWithType.vb: Sdl.ReadU16LE(IOStream, UShort)
  fullName.vb: SharpSDL3.Sdl.ReadU16LE(SharpSDL3.Structs.IOStream, UShort)
  name.vb: ReadU16LE(IOStream, UShort)
- uid: SharpSDL3.Sdl.ReadU32BE(SharpSDL3.Structs.IOStream,System.UInt32@)
  commentId: M:SharpSDL3.Sdl.ReadU32BE(SharpSDL3.Structs.IOStream,System.UInt32@)
  id: ReadU32BE(SharpSDL3.Structs.IOStream,System.UInt32@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ReadU32BE(IOStream, out uint)
  nameWithType: Sdl.ReadU32BE(IOStream, out uint)
  fullName: SharpSDL3.Sdl.ReadU32BE(SharpSDL3.Structs.IOStream, out uint)
  type: Method
  source:
    remote:
      path: SDL3/IO.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ReadU32BE
    path: ../../repos/SDL3-CS/SDL3/IO.cs
    startLine: 470
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Use this function to read 32 bits of big-endian data from an SDL_IOStream and return in native format.
  remarks: >-
    SDL byteswaps the data only if necessary, so the data returned will be in

    the native byte order.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool ReadU32BE(IOStream src, out uint value)
    parameters:
    - id: src
      type: SharpSDL3.Structs.IOStream
      description: the stream from which to read data.
    - id: value
      type: System.UInt32
      description: a pointer filled in with the data read.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on successful write or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function ReadU32BE(src As IOStream, value As UInteger) As Boolean
  overload: SharpSDL3.Sdl.ReadU32BE*
  nameWithType.vb: Sdl.ReadU32BE(IOStream, UInteger)
  fullName.vb: SharpSDL3.Sdl.ReadU32BE(SharpSDL3.Structs.IOStream, UInteger)
  name.vb: ReadU32BE(IOStream, UInteger)
- uid: SharpSDL3.Sdl.ReadU32LE(SharpSDL3.Structs.IOStream,System.UInt32@)
  commentId: M:SharpSDL3.Sdl.ReadU32LE(SharpSDL3.Structs.IOStream,System.UInt32@)
  id: ReadU32LE(SharpSDL3.Structs.IOStream,System.UInt32@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ReadU32LE(IOStream, out uint)
  nameWithType: Sdl.ReadU32LE(IOStream, out uint)
  fullName: SharpSDL3.Sdl.ReadU32LE(SharpSDL3.Structs.IOStream, out uint)
  type: Method
  source:
    remote:
      path: SDL3/IO.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ReadU32LE
    path: ../../repos/SDL3-CS/SDL3/IO.cs
    startLine: 492
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Use this function to read 32 bits of little-endian data from an SDL_IOStream and return in native format.
  remarks: >-
    SDL byteswaps the data only if necessary, so the data returned will be in

    the native byte order.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool ReadU32LE(IOStream src, out uint value)
    parameters:
    - id: src
      type: SharpSDL3.Structs.IOStream
      description: the stream from which to read data.
    - id: value
      type: System.UInt32
      description: a pointer filled in with the data read.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on successful write or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function ReadU32LE(src As IOStream, value As UInteger) As Boolean
  overload: SharpSDL3.Sdl.ReadU32LE*
  nameWithType.vb: Sdl.ReadU32LE(IOStream, UInteger)
  fullName.vb: SharpSDL3.Sdl.ReadU32LE(SharpSDL3.Structs.IOStream, UInteger)
  name.vb: ReadU32LE(IOStream, UInteger)
- uid: SharpSDL3.Sdl.ReadU64BE(SharpSDL3.Structs.IOStream,System.UInt64@)
  commentId: M:SharpSDL3.Sdl.ReadU64BE(SharpSDL3.Structs.IOStream,System.UInt64@)
  id: ReadU64BE(SharpSDL3.Structs.IOStream,System.UInt64@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ReadU64BE(IOStream, out ulong)
  nameWithType: Sdl.ReadU64BE(IOStream, out ulong)
  fullName: SharpSDL3.Sdl.ReadU64BE(SharpSDL3.Structs.IOStream, out ulong)
  type: Method
  source:
    remote:
      path: SDL3/IO.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ReadU64BE
    path: ../../repos/SDL3-CS/SDL3/IO.cs
    startLine: 514
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Use this function to read 64 bits of big-endian data from an SDL_IOStream and return in native format.
  remarks: >-
    SDL byteswaps the data only if necessary, so the data returned will be in

    the native byte order.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool ReadU64BE(IOStream src, out ulong value)
    parameters:
    - id: src
      type: SharpSDL3.Structs.IOStream
      description: the stream from which to read data.
    - id: value
      type: System.UInt64
      description: a pointer filled in with the data read.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on successful write or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function ReadU64BE(src As IOStream, value As ULong) As Boolean
  overload: SharpSDL3.Sdl.ReadU64BE*
  nameWithType.vb: Sdl.ReadU64BE(IOStream, ULong)
  fullName.vb: SharpSDL3.Sdl.ReadU64BE(SharpSDL3.Structs.IOStream, ULong)
  name.vb: ReadU64BE(IOStream, ULong)
- uid: SharpSDL3.Sdl.ReadU64LE(SharpSDL3.Structs.IOStream,System.UInt64@)
  commentId: M:SharpSDL3.Sdl.ReadU64LE(SharpSDL3.Structs.IOStream,System.UInt64@)
  id: ReadU64LE(SharpSDL3.Structs.IOStream,System.UInt64@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ReadU64LE(IOStream, out ulong)
  nameWithType: Sdl.ReadU64LE(IOStream, out ulong)
  fullName: SharpSDL3.Sdl.ReadU64LE(SharpSDL3.Structs.IOStream, out ulong)
  type: Method
  source:
    remote:
      path: SDL3/IO.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ReadU64LE
    path: ../../repos/SDL3-CS/SDL3/IO.cs
    startLine: 536
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Use this function to read 64 bits of little-endian data from an SDL_IOStream and return in native format.
  remarks: >-
    SDL byteswaps the data only if necessary, so the data returned will be in

    the native byte order.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool ReadU64LE(IOStream src, out ulong value)
    parameters:
    - id: src
      type: SharpSDL3.Structs.IOStream
      description: the stream from which to read data.
    - id: value
      type: System.UInt64
      description: a pointer filled in with the data read.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on successful write or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function ReadU64LE(src As IOStream, value As ULong) As Boolean
  overload: SharpSDL3.Sdl.ReadU64LE*
  nameWithType.vb: Sdl.ReadU64LE(IOStream, ULong)
  fullName.vb: SharpSDL3.Sdl.ReadU64LE(SharpSDL3.Structs.IOStream, ULong)
  name.vb: ReadU64LE(IOStream, ULong)
- uid: SharpSDL3.Sdl.ReadU8(SharpSDL3.Structs.IOStream,System.Byte@)
  commentId: M:SharpSDL3.Sdl.ReadU8(SharpSDL3.Structs.IOStream,System.Byte@)
  id: ReadU8(SharpSDL3.Structs.IOStream,System.Byte@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ReadU8(IOStream, out byte)
  nameWithType: Sdl.ReadU8(IOStream, out byte)
  fullName: SharpSDL3.Sdl.ReadU8(SharpSDL3.Structs.IOStream, out byte)
  type: Method
  source:
    remote:
      path: SDL3/IO.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ReadU8
    path: ../../repos/SDL3-CS/SDL3/IO.cs
    startLine: 562
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Use this function to read a byte from an SDL_IOStream.
  remarks: >-
    This function will return false when the data stream is completely read,

    and SDL_GetIOStatus() will return

    SDL_IO_STATUS_EOF. If <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> is returned and the stream

    is not at EOF, SDL_GetIOStatus() will return a different

    error value and <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> will offer a human-readable

    message.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool ReadU8(IOStream src, out byte value)
    parameters:
    - id: src
      type: SharpSDL3.Structs.IOStream
      description: the SDL_IOStream to read from.
    - id: value
      type: System.Byte
      description: a pointer filled in with the data read.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure or EOF; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function ReadU8(src As IOStream, value As Byte) As Boolean
  overload: SharpSDL3.Sdl.ReadU8*
  nameWithType.vb: Sdl.ReadU8(IOStream, Byte)
  fullName.vb: SharpSDL3.Sdl.ReadU8(SharpSDL3.Structs.IOStream, Byte)
  name.vb: ReadU8(IOStream, Byte)
- uid: SharpSDL3.Sdl.SaveFile(System.String,System.IntPtr,System.UIntPtr)
  commentId: M:SharpSDL3.Sdl.SaveFile(System.String,System.IntPtr,System.UIntPtr)
  id: SaveFile(System.String,System.IntPtr,System.UIntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SaveFile(string, nint, nuint)
  nameWithType: Sdl.SaveFile(string, nint, nuint)
  fullName: SharpSDL3.Sdl.SaveFile(string, nint, nuint)
  type: Method
  source:
    remote:
      path: SDL3/IO.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SaveFile
    path: ../../repos/SDL3-CS/SDL3/IO.cs
    startLine: 572
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static bool SaveFile(string file, nint data, nuint datasize)
    parameters:
    - id: file
      type: System.String
    - id: data
      type: System.IntPtr
    - id: datasize
      type: System.UIntPtr
    return:
      type: System.Boolean
    content.vb: Public Shared Function SaveFile(file As String, data As IntPtr, datasize As UIntPtr) As Boolean
  overload: SharpSDL3.Sdl.SaveFile*
  nameWithType.vb: Sdl.SaveFile(String, IntPtr, UIntPtr)
  fullName.vb: SharpSDL3.Sdl.SaveFile(String, System.IntPtr, System.UIntPtr)
  name.vb: SaveFile(String, IntPtr, UIntPtr)
- uid: SharpSDL3.Sdl.SaveFileIO(System.IntPtr,System.IntPtr,System.UIntPtr,System.Boolean)
  commentId: M:SharpSDL3.Sdl.SaveFileIO(System.IntPtr,System.IntPtr,System.UIntPtr,System.Boolean)
  id: SaveFileIO(System.IntPtr,System.IntPtr,System.UIntPtr,System.Boolean)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SaveFileIO(nint, nint, nuint, bool)
  nameWithType: Sdl.SaveFileIO(nint, nint, nuint, bool)
  fullName: SharpSDL3.Sdl.SaveFileIO(nint, nint, nuint, bool)
  type: Method
  source:
    remote:
      path: SDL3/IO.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SaveFileIO
    path: ../../repos/SDL3-CS/SDL3/IO.cs
    startLine: 580
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static bool SaveFileIO(nint src, nint data, nuint datasize, bool closeio)
    parameters:
    - id: src
      type: System.IntPtr
    - id: data
      type: System.IntPtr
    - id: datasize
      type: System.UIntPtr
    - id: closeio
      type: System.Boolean
    return:
      type: System.Boolean
    content.vb: Public Shared Function SaveFileIO(src As IntPtr, data As IntPtr, datasize As UIntPtr, closeio As Boolean) As Boolean
  overload: SharpSDL3.Sdl.SaveFileIO*
  nameWithType.vb: Sdl.SaveFileIO(IntPtr, IntPtr, UIntPtr, Boolean)
  fullName.vb: SharpSDL3.Sdl.SaveFileIO(System.IntPtr, System.IntPtr, System.UIntPtr, Boolean)
  name.vb: SaveFileIO(IntPtr, IntPtr, UIntPtr, Boolean)
- uid: SharpSDL3.Sdl.SeekIO(SharpSDL3.Structs.IOStream,System.Int64,SharpSDL3.Enums.IoWhence)
  commentId: M:SharpSDL3.Sdl.SeekIO(SharpSDL3.Structs.IOStream,System.Int64,SharpSDL3.Enums.IoWhence)
  id: SeekIO(SharpSDL3.Structs.IOStream,System.Int64,SharpSDL3.Enums.IoWhence)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SeekIO(IOStream, long, IoWhence)
  nameWithType: Sdl.SeekIO(IOStream, long, IoWhence)
  fullName: SharpSDL3.Sdl.SeekIO(SharpSDL3.Structs.IOStream, long, SharpSDL3.Enums.IoWhence)
  type: Method
  source:
    remote:
      path: SDL3/IO.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SeekIO
    path: ../../repos/SDL3-CS/SDL3/IO.cs
    startLine: 588
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static long SeekIO(IOStream context, long offset, IoWhence whence)
    parameters:
    - id: context
      type: SharpSDL3.Structs.IOStream
    - id: offset
      type: System.Int64
    - id: whence
      type: SharpSDL3.Enums.IoWhence
    return:
      type: System.Int64
    content.vb: Public Shared Function SeekIO(context As IOStream, offset As Long, whence As IoWhence) As Long
  overload: SharpSDL3.Sdl.SeekIO*
  nameWithType.vb: Sdl.SeekIO(IOStream, Long, IoWhence)
  fullName.vb: SharpSDL3.Sdl.SeekIO(SharpSDL3.Structs.IOStream, Long, SharpSDL3.Enums.IoWhence)
  name.vb: SeekIO(IOStream, Long, IoWhence)
- uid: SharpSDL3.Sdl.TellIO(SharpSDL3.Structs.IOStream)
  commentId: M:SharpSDL3.Sdl.TellIO(SharpSDL3.Structs.IOStream)
  id: TellIO(SharpSDL3.Structs.IOStream)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: TellIO(IOStream)
  nameWithType: Sdl.TellIO(IOStream)
  fullName: SharpSDL3.Sdl.TellIO(SharpSDL3.Structs.IOStream)
  type: Method
  source:
    remote:
      path: SDL3/IO.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: TellIO
    path: ../../repos/SDL3-CS/SDL3/IO.cs
    startLine: 596
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static long TellIO(IOStream context)
    parameters:
    - id: context
      type: SharpSDL3.Structs.IOStream
    return:
      type: System.Int64
    content.vb: Public Shared Function TellIO(context As IOStream) As Long
  overload: SharpSDL3.Sdl.TellIO*
- uid: SharpSDL3.Sdl.WriteIO(SharpSDL3.Structs.IOStream,System.IntPtr,System.UIntPtr)
  commentId: M:SharpSDL3.Sdl.WriteIO(SharpSDL3.Structs.IOStream,System.IntPtr,System.UIntPtr)
  id: WriteIO(SharpSDL3.Structs.IOStream,System.IntPtr,System.UIntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: WriteIO(IOStream, nint, nuint)
  nameWithType: Sdl.WriteIO(IOStream, nint, nuint)
  fullName: SharpSDL3.Sdl.WriteIO(SharpSDL3.Structs.IOStream, nint, nuint)
  type: Method
  source:
    remote:
      path: SDL3/IO.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: WriteIO
    path: ../../repos/SDL3-CS/SDL3/IO.cs
    startLine: 604
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static nuint WriteIO(IOStream context, nint ptr, nuint size)
    parameters:
    - id: context
      type: SharpSDL3.Structs.IOStream
    - id: ptr
      type: System.IntPtr
    - id: size
      type: System.UIntPtr
    return:
      type: System.UIntPtr
    content.vb: Public Shared Function WriteIO(context As IOStream, ptr As IntPtr, size As UIntPtr) As UIntPtr
  overload: SharpSDL3.Sdl.WriteIO*
  nameWithType.vb: Sdl.WriteIO(IOStream, IntPtr, UIntPtr)
  fullName.vb: SharpSDL3.Sdl.WriteIO(SharpSDL3.Structs.IOStream, System.IntPtr, System.UIntPtr)
  name.vb: WriteIO(IOStream, IntPtr, UIntPtr)
- uid: SharpSDL3.Sdl.WriteS16BE(SharpSDL3.Structs.IOStream,System.Int16)
  commentId: M:SharpSDL3.Sdl.WriteS16BE(SharpSDL3.Structs.IOStream,System.Int16)
  id: WriteS16BE(SharpSDL3.Structs.IOStream,System.Int16)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: WriteS16BE(IOStream, short)
  nameWithType: Sdl.WriteS16BE(IOStream, short)
  fullName: SharpSDL3.Sdl.WriteS16BE(SharpSDL3.Structs.IOStream, short)
  type: Method
  source:
    remote:
      path: SDL3/IO.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: WriteS16BE
    path: ../../repos/SDL3-CS/SDL3/IO.cs
    startLine: 624
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Use this function to write 16 bits in native format to an SDL_IOStream as big-endian data.
  remarks: >-
    SDL byteswaps the data only if necessary, so the application always

    specifies native format, and the data written will be in big-endian format.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool WriteS16BE(IOStream dst, short value)
    parameters:
    - id: dst
      type: SharpSDL3.Structs.IOStream
      description: the stream to which data will be written.
    - id: value
      type: System.Int16
      description: the data to be written, in native format.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on successful write or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function WriteS16BE(dst As IOStream, value As Short) As Boolean
  overload: SharpSDL3.Sdl.WriteS16BE*
  nameWithType.vb: Sdl.WriteS16BE(IOStream, Short)
  fullName.vb: SharpSDL3.Sdl.WriteS16BE(SharpSDL3.Structs.IOStream, Short)
  name.vb: WriteS16BE(IOStream, Short)
- uid: SharpSDL3.Sdl.WriteS16LE(SharpSDL3.Structs.IOStream,System.Int16)
  commentId: M:SharpSDL3.Sdl.WriteS16LE(SharpSDL3.Structs.IOStream,System.Int16)
  id: WriteS16LE(SharpSDL3.Structs.IOStream,System.Int16)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: WriteS16LE(IOStream, short)
  nameWithType: Sdl.WriteS16LE(IOStream, short)
  fullName: SharpSDL3.Sdl.WriteS16LE(SharpSDL3.Structs.IOStream, short)
  type: Method
  source:
    remote:
      path: SDL3/IO.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: WriteS16LE
    path: ../../repos/SDL3-CS/SDL3/IO.cs
    startLine: 645
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Use this function to write 16 bits in native format to an SDL_IOStream as little-endian data.
  remarks: >-
    SDL byteswaps the data only if necessary, so the application always

    specifies native format, and the data written will be in little-endian

    format.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool WriteS16LE(IOStream dst, short value)
    parameters:
    - id: dst
      type: SharpSDL3.Structs.IOStream
      description: the stream to which data will be written.
    - id: value
      type: System.Int16
      description: the data to be written, in native format.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on successful write or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function WriteS16LE(dst As IOStream, value As Short) As Boolean
  overload: SharpSDL3.Sdl.WriteS16LE*
  nameWithType.vb: Sdl.WriteS16LE(IOStream, Short)
  fullName.vb: SharpSDL3.Sdl.WriteS16LE(SharpSDL3.Structs.IOStream, Short)
  name.vb: WriteS16LE(IOStream, Short)
- uid: SharpSDL3.Sdl.WriteS32BE(SharpSDL3.Structs.IOStream,System.Int32)
  commentId: M:SharpSDL3.Sdl.WriteS32BE(SharpSDL3.Structs.IOStream,System.Int32)
  id: WriteS32BE(SharpSDL3.Structs.IOStream,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: WriteS32BE(IOStream, int)
  nameWithType: Sdl.WriteS32BE(IOStream, int)
  fullName: SharpSDL3.Sdl.WriteS32BE(SharpSDL3.Structs.IOStream, int)
  type: Method
  source:
    remote:
      path: SDL3/IO.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: WriteS32BE
    path: ../../repos/SDL3-CS/SDL3/IO.cs
    startLine: 665
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Use this function to write 32 bits in native format to an SDL_IOStream as big-endian data.
  remarks: >-
    SDL byteswaps the data only if necessary, so the application always

    specifies native format, and the data written will be in big-endian format.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool WriteS32BE(IOStream dst, int value)
    parameters:
    - id: dst
      type: SharpSDL3.Structs.IOStream
      description: the stream to which data will be written.
    - id: value
      type: System.Int32
      description: the data to be written, in native format.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on successful write or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function WriteS32BE(dst As IOStream, value As Integer) As Boolean
  overload: SharpSDL3.Sdl.WriteS32BE*
  nameWithType.vb: Sdl.WriteS32BE(IOStream, Integer)
  fullName.vb: SharpSDL3.Sdl.WriteS32BE(SharpSDL3.Structs.IOStream, Integer)
  name.vb: WriteS32BE(IOStream, Integer)
- uid: SharpSDL3.Sdl.WriteS32LE(SharpSDL3.Structs.IOStream,System.Int32)
  commentId: M:SharpSDL3.Sdl.WriteS32LE(SharpSDL3.Structs.IOStream,System.Int32)
  id: WriteS32LE(SharpSDL3.Structs.IOStream,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: WriteS32LE(IOStream, int)
  nameWithType: Sdl.WriteS32LE(IOStream, int)
  fullName: SharpSDL3.Sdl.WriteS32LE(SharpSDL3.Structs.IOStream, int)
  type: Method
  source:
    remote:
      path: SDL3/IO.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: WriteS32LE
    path: ../../repos/SDL3-CS/SDL3/IO.cs
    startLine: 686
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Use this function to write 32 bits in native format to an SDL_IOStream as little-endian data.
  remarks: >-
    SDL byteswaps the data only if necessary, so the application always

    specifies native format, and the data written will be in little-endian

    format.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool WriteS32LE(IOStream dst, int value)
    parameters:
    - id: dst
      type: SharpSDL3.Structs.IOStream
      description: the stream to which data will be written.
    - id: value
      type: System.Int32
      description: the data to be written, in native format.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on successful write or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function WriteS32LE(dst As IOStream, value As Integer) As Boolean
  overload: SharpSDL3.Sdl.WriteS32LE*
  nameWithType.vb: Sdl.WriteS32LE(IOStream, Integer)
  fullName.vb: SharpSDL3.Sdl.WriteS32LE(SharpSDL3.Structs.IOStream, Integer)
  name.vb: WriteS32LE(IOStream, Integer)
- uid: SharpSDL3.Sdl.WriteS64BE(SharpSDL3.Structs.IOStream,System.Int64)
  commentId: M:SharpSDL3.Sdl.WriteS64BE(SharpSDL3.Structs.IOStream,System.Int64)
  id: WriteS64BE(SharpSDL3.Structs.IOStream,System.Int64)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: WriteS64BE(IOStream, long)
  nameWithType: Sdl.WriteS64BE(IOStream, long)
  fullName: SharpSDL3.Sdl.WriteS64BE(SharpSDL3.Structs.IOStream, long)
  type: Method
  source:
    remote:
      path: SDL3/IO.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: WriteS64BE
    path: ../../repos/SDL3-CS/SDL3/IO.cs
    startLine: 706
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Use this function to write 64 bits in native format to an SDL_IOStream as big-endian data.
  remarks: >-
    SDL byteswaps the data only if necessary, so the application always

    specifies native format, and the data written will be in big-endian format.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool WriteS64BE(IOStream dst, long value)
    parameters:
    - id: dst
      type: SharpSDL3.Structs.IOStream
      description: the stream to which data will be written.
    - id: value
      type: System.Int64
      description: the data to be written, in native format.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on successful write or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function WriteS64BE(dst As IOStream, value As Long) As Boolean
  overload: SharpSDL3.Sdl.WriteS64BE*
  nameWithType.vb: Sdl.WriteS64BE(IOStream, Long)
  fullName.vb: SharpSDL3.Sdl.WriteS64BE(SharpSDL3.Structs.IOStream, Long)
  name.vb: WriteS64BE(IOStream, Long)
- uid: SharpSDL3.Sdl.WriteS64LE(SharpSDL3.Structs.IOStream,System.Int64)
  commentId: M:SharpSDL3.Sdl.WriteS64LE(SharpSDL3.Structs.IOStream,System.Int64)
  id: WriteS64LE(SharpSDL3.Structs.IOStream,System.Int64)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: WriteS64LE(IOStream, long)
  nameWithType: Sdl.WriteS64LE(IOStream, long)
  fullName: SharpSDL3.Sdl.WriteS64LE(SharpSDL3.Structs.IOStream, long)
  type: Method
  source:
    remote:
      path: SDL3/IO.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: WriteS64LE
    path: ../../repos/SDL3-CS/SDL3/IO.cs
    startLine: 727
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Use this function to write 64 bits in native format to an SDL_IOStream as little-endian data.
  remarks: >-
    SDL byteswaps the data only if necessary, so the application always

    specifies native format, and the data written will be in little-endian

    format.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool WriteS64LE(IOStream dst, long value)
    parameters:
    - id: dst
      type: SharpSDL3.Structs.IOStream
      description: the stream to which data will be written.
    - id: value
      type: System.Int64
      description: the data to be written, in native format.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on successful write or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function WriteS64LE(dst As IOStream, value As Long) As Boolean
  overload: SharpSDL3.Sdl.WriteS64LE*
  nameWithType.vb: Sdl.WriteS64LE(IOStream, Long)
  fullName.vb: SharpSDL3.Sdl.WriteS64LE(SharpSDL3.Structs.IOStream, Long)
  name.vb: WriteS64LE(IOStream, Long)
- uid: SharpSDL3.Sdl.WriteS8(SharpSDL3.Structs.IOStream,System.SByte)
  commentId: M:SharpSDL3.Sdl.WriteS8(SharpSDL3.Structs.IOStream,System.SByte)
  id: WriteS8(SharpSDL3.Structs.IOStream,System.SByte)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: WriteS8(IOStream, sbyte)
  nameWithType: Sdl.WriteS8(IOStream, sbyte)
  fullName: SharpSDL3.Sdl.WriteS8(SharpSDL3.Structs.IOStream, sbyte)
  type: Method
  source:
    remote:
      path: SDL3/IO.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: WriteS8
    path: ../../repos/SDL3-CS/SDL3/IO.cs
    startLine: 745
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Use this function to write a signed byte to an SDL_IOStream.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool WriteS8(IOStream dst, sbyte value)
    parameters:
    - id: dst
      type: SharpSDL3.Structs.IOStream
      description: the SDL_IOStream to write to.
    - id: value
      type: System.SByte
      description: the byte value to write.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on successful write or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function WriteS8(dst As IOStream, value As SByte) As Boolean
  overload: SharpSDL3.Sdl.WriteS8*
  nameWithType.vb: Sdl.WriteS8(IOStream, SByte)
  fullName.vb: SharpSDL3.Sdl.WriteS8(SharpSDL3.Structs.IOStream, SByte)
  name.vb: WriteS8(IOStream, SByte)
- uid: SharpSDL3.Sdl.WriteU16BE(SharpSDL3.Structs.IOStream,System.UInt16)
  commentId: M:SharpSDL3.Sdl.WriteU16BE(SharpSDL3.Structs.IOStream,System.UInt16)
  id: WriteU16BE(SharpSDL3.Structs.IOStream,System.UInt16)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: WriteU16BE(IOStream, ushort)
  nameWithType: Sdl.WriteU16BE(IOStream, ushort)
  fullName: SharpSDL3.Sdl.WriteU16BE(SharpSDL3.Structs.IOStream, ushort)
  type: Method
  source:
    remote:
      path: SDL3/IO.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: WriteU16BE
    path: ../../repos/SDL3-CS/SDL3/IO.cs
    startLine: 765
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Use this function to write 16 bits in native format to an SDL_IOStream as big-endian data.
  remarks: >-
    SDL byteswaps the data only if necessary, so the application always

    specifies native format, and the data written will be in big-endian format.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool WriteU16BE(IOStream dst, ushort value)
    parameters:
    - id: dst
      type: SharpSDL3.Structs.IOStream
      description: the stream to which data will be written.
    - id: value
      type: System.UInt16
      description: the data to be written, in native format.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on successful write or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function WriteU16BE(dst As IOStream, value As UShort) As Boolean
  overload: SharpSDL3.Sdl.WriteU16BE*
  nameWithType.vb: Sdl.WriteU16BE(IOStream, UShort)
  fullName.vb: SharpSDL3.Sdl.WriteU16BE(SharpSDL3.Structs.IOStream, UShort)
  name.vb: WriteU16BE(IOStream, UShort)
- uid: SharpSDL3.Sdl.WriteU16LE(SharpSDL3.Structs.IOStream,System.UInt16)
  commentId: M:SharpSDL3.Sdl.WriteU16LE(SharpSDL3.Structs.IOStream,System.UInt16)
  id: WriteU16LE(SharpSDL3.Structs.IOStream,System.UInt16)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: WriteU16LE(IOStream, ushort)
  nameWithType: Sdl.WriteU16LE(IOStream, ushort)
  fullName: SharpSDL3.Sdl.WriteU16LE(SharpSDL3.Structs.IOStream, ushort)
  type: Method
  source:
    remote:
      path: SDL3/IO.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: WriteU16LE
    path: ../../repos/SDL3-CS/SDL3/IO.cs
    startLine: 786
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Use this function to write 16 bits in native format to an SDL_IOStream as little-endian data.
  remarks: >-
    SDL byteswaps the data only if necessary, so the application always

    specifies native format, and the data written will be in little-endian

    format.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool WriteU16LE(IOStream dst, ushort value)
    parameters:
    - id: dst
      type: SharpSDL3.Structs.IOStream
      description: the stream to which data will be written.
    - id: value
      type: System.UInt16
      description: the data to be written, in native format.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on successful write or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function WriteU16LE(dst As IOStream, value As UShort) As Boolean
  overload: SharpSDL3.Sdl.WriteU16LE*
  nameWithType.vb: Sdl.WriteU16LE(IOStream, UShort)
  fullName.vb: SharpSDL3.Sdl.WriteU16LE(SharpSDL3.Structs.IOStream, UShort)
  name.vb: WriteU16LE(IOStream, UShort)
- uid: SharpSDL3.Sdl.WriteU32BE(SharpSDL3.Structs.IOStream,System.UInt32)
  commentId: M:SharpSDL3.Sdl.WriteU32BE(SharpSDL3.Structs.IOStream,System.UInt32)
  id: WriteU32BE(SharpSDL3.Structs.IOStream,System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: WriteU32BE(IOStream, uint)
  nameWithType: Sdl.WriteU32BE(IOStream, uint)
  fullName: SharpSDL3.Sdl.WriteU32BE(SharpSDL3.Structs.IOStream, uint)
  type: Method
  source:
    remote:
      path: SDL3/IO.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: WriteU32BE
    path: ../../repos/SDL3-CS/SDL3/IO.cs
    startLine: 806
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Use this function to write 32 bits in native format to an SDL_IOStream as big-endian data.
  remarks: >-
    SDL byteswaps the data only if necessary, so the application always

    specifies native format, and the data written will be in big-endian format.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool WriteU32BE(IOStream dst, uint value)
    parameters:
    - id: dst
      type: SharpSDL3.Structs.IOStream
      description: the stream to which data will be written.
    - id: value
      type: System.UInt32
      description: the data to be written, in native format.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on successful write or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function WriteU32BE(dst As IOStream, value As UInteger) As Boolean
  overload: SharpSDL3.Sdl.WriteU32BE*
  nameWithType.vb: Sdl.WriteU32BE(IOStream, UInteger)
  fullName.vb: SharpSDL3.Sdl.WriteU32BE(SharpSDL3.Structs.IOStream, UInteger)
  name.vb: WriteU32BE(IOStream, UInteger)
- uid: SharpSDL3.Sdl.WriteU32LE(SharpSDL3.Structs.IOStream,System.UInt32)
  commentId: M:SharpSDL3.Sdl.WriteU32LE(SharpSDL3.Structs.IOStream,System.UInt32)
  id: WriteU32LE(SharpSDL3.Structs.IOStream,System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: WriteU32LE(IOStream, uint)
  nameWithType: Sdl.WriteU32LE(IOStream, uint)
  fullName: SharpSDL3.Sdl.WriteU32LE(SharpSDL3.Structs.IOStream, uint)
  type: Method
  source:
    remote:
      path: SDL3/IO.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: WriteU32LE
    path: ../../repos/SDL3-CS/SDL3/IO.cs
    startLine: 827
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Use this function to write 32 bits in native format to an SDL_IOStream as little-endian data.
  remarks: >-
    SDL byteswaps the data only if necessary, so the application always

    specifies native format, and the data written will be in little-endian

    format.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool WriteU32LE(IOStream dst, uint value)
    parameters:
    - id: dst
      type: SharpSDL3.Structs.IOStream
      description: the stream to which data will be written.
    - id: value
      type: System.UInt32
      description: the data to be written, in native format.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on successful write or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function WriteU32LE(dst As IOStream, value As UInteger) As Boolean
  overload: SharpSDL3.Sdl.WriteU32LE*
  nameWithType.vb: Sdl.WriteU32LE(IOStream, UInteger)
  fullName.vb: SharpSDL3.Sdl.WriteU32LE(SharpSDL3.Structs.IOStream, UInteger)
  name.vb: WriteU32LE(IOStream, UInteger)
- uid: SharpSDL3.Sdl.WriteU64BE(SharpSDL3.Structs.IOStream,System.UInt64)
  commentId: M:SharpSDL3.Sdl.WriteU64BE(SharpSDL3.Structs.IOStream,System.UInt64)
  id: WriteU64BE(SharpSDL3.Structs.IOStream,System.UInt64)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: WriteU64BE(IOStream, ulong)
  nameWithType: Sdl.WriteU64BE(IOStream, ulong)
  fullName: SharpSDL3.Sdl.WriteU64BE(SharpSDL3.Structs.IOStream, ulong)
  type: Method
  source:
    remote:
      path: SDL3/IO.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: WriteU64BE
    path: ../../repos/SDL3-CS/SDL3/IO.cs
    startLine: 847
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Use this function to write 64 bits in native format to an SDL_IOStream as big-endian data.
  remarks: >-
    SDL byteswaps the data only if necessary, so the application always

    specifies native format, and the data written will be in big-endian format.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool WriteU64BE(IOStream dst, ulong value)
    parameters:
    - id: dst
      type: SharpSDL3.Structs.IOStream
      description: the stream to which data will be written.
    - id: value
      type: System.UInt64
      description: the data to be written, in native format.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on successful write or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function WriteU64BE(dst As IOStream, value As ULong) As Boolean
  overload: SharpSDL3.Sdl.WriteU64BE*
  nameWithType.vb: Sdl.WriteU64BE(IOStream, ULong)
  fullName.vb: SharpSDL3.Sdl.WriteU64BE(SharpSDL3.Structs.IOStream, ULong)
  name.vb: WriteU64BE(IOStream, ULong)
- uid: SharpSDL3.Sdl.WriteU64LE(SharpSDL3.Structs.IOStream,System.UInt64)
  commentId: M:SharpSDL3.Sdl.WriteU64LE(SharpSDL3.Structs.IOStream,System.UInt64)
  id: WriteU64LE(SharpSDL3.Structs.IOStream,System.UInt64)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: WriteU64LE(IOStream, ulong)
  nameWithType: Sdl.WriteU64LE(IOStream, ulong)
  fullName: SharpSDL3.Sdl.WriteU64LE(SharpSDL3.Structs.IOStream, ulong)
  type: Method
  source:
    remote:
      path: SDL3/IO.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: WriteU64LE
    path: ../../repos/SDL3-CS/SDL3/IO.cs
    startLine: 868
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Use this function to write 64 bits in native format to an SDL_IOStream as little-endian data.
  remarks: >-
    SDL byteswaps the data only if necessary, so the application always

    specifies native format, and the data written will be in little-endian

    format.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool WriteU64LE(IOStream dst, ulong value)
    parameters:
    - id: dst
      type: SharpSDL3.Structs.IOStream
      description: the stream to which data will be written.
    - id: value
      type: System.UInt64
      description: the data to be written, in native format.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on successful write or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function WriteU64LE(dst As IOStream, value As ULong) As Boolean
  overload: SharpSDL3.Sdl.WriteU64LE*
  nameWithType.vb: Sdl.WriteU64LE(IOStream, ULong)
  fullName.vb: SharpSDL3.Sdl.WriteU64LE(SharpSDL3.Structs.IOStream, ULong)
  name.vb: WriteU64LE(IOStream, ULong)
- uid: SharpSDL3.Sdl.WriteU8(SharpSDL3.Structs.IOStream,System.Byte)
  commentId: M:SharpSDL3.Sdl.WriteU8(SharpSDL3.Structs.IOStream,System.Byte)
  id: WriteU8(SharpSDL3.Structs.IOStream,System.Byte)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: WriteU8(IOStream, byte)
  nameWithType: Sdl.WriteU8(IOStream, byte)
  fullName: SharpSDL3.Sdl.WriteU8(SharpSDL3.Structs.IOStream, byte)
  type: Method
  source:
    remote:
      path: SDL3/IO.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: WriteU8
    path: ../../repos/SDL3-CS/SDL3/IO.cs
    startLine: 886
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Use this function to write a byte to an SDL_IOStream.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool WriteU8(IOStream dst, byte value)
    parameters:
    - id: dst
      type: SharpSDL3.Structs.IOStream
      description: the SDL_IOStream to write to.
    - id: value
      type: System.Byte
      description: the byte value to write.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on successful write or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function WriteU8(dst As IOStream, value As Byte) As Boolean
  overload: SharpSDL3.Sdl.WriteU8*
  nameWithType.vb: Sdl.WriteU8(IOStream, Byte)
  fullName.vb: SharpSDL3.Sdl.WriteU8(SharpSDL3.Structs.IOStream, Byte)
  name.vb: WriteU8(IOStream, Byte)
- uid: SharpSDL3.Sdl.AttachVirtualJoystick(SharpSDL3.Structs.VirtualJoystickDesc@)
  commentId: M:SharpSDL3.Sdl.AttachVirtualJoystick(SharpSDL3.Structs.VirtualJoystickDesc@)
  id: AttachVirtualJoystick(SharpSDL3.Structs.VirtualJoystickDesc@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: AttachVirtualJoystick(ref VirtualJoystickDesc)
  nameWithType: Sdl.AttachVirtualJoystick(ref VirtualJoystickDesc)
  fullName: SharpSDL3.Sdl.AttachVirtualJoystick(ref SharpSDL3.Structs.VirtualJoystickDesc)
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: AttachVirtualJoystick
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 20
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Attach a new virtual joystick.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.DetachVirtualJoystick(System.UInt32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static uint AttachVirtualJoystick(ref VirtualJoystickDesc desc)
    parameters:
    - id: desc
      type: SharpSDL3.Structs.VirtualJoystickDesc
      description: joystick description, initialized using SDL_INIT_INTERFACE().
    return:
      type: System.UInt32
      description: Returns the joystick instance ID, or 0on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function AttachVirtualJoystick(desc As VirtualJoystickDesc) As UInteger
  overload: SharpSDL3.Sdl.AttachVirtualJoystick*
  nameWithType.vb: Sdl.AttachVirtualJoystick(VirtualJoystickDesc)
  fullName.vb: SharpSDL3.Sdl.AttachVirtualJoystick(SharpSDL3.Structs.VirtualJoystickDesc)
  name.vb: AttachVirtualJoystick(VirtualJoystickDesc)
- uid: SharpSDL3.Sdl.CloseJoystick(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.CloseJoystick(System.IntPtr)
  id: CloseJoystick(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CloseJoystick(nint)
  nameWithType: Sdl.CloseJoystick(nint)
  fullName: SharpSDL3.Sdl.CloseJoystick(nint)
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CloseJoystick
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 41
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Close a joystick previously opened with SDL_OpenJoystick().
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.OpenJoystick(System.UInt32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void CloseJoystick(nint joystick)
    parameters:
    - id: joystick
      type: System.IntPtr
      description: the joystick device to close.
    content.vb: Public Shared Sub CloseJoystick(joystick As IntPtr)
  overload: SharpSDL3.Sdl.CloseJoystick*
  nameWithType.vb: Sdl.CloseJoystick(IntPtr)
  fullName.vb: SharpSDL3.Sdl.CloseJoystick(System.IntPtr)
  name.vb: CloseJoystick(IntPtr)
- uid: SharpSDL3.Sdl.DetachVirtualJoystick(System.UInt32)
  commentId: M:SharpSDL3.Sdl.DetachVirtualJoystick(System.UInt32)
  id: DetachVirtualJoystick(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: DetachVirtualJoystick(uint)
  nameWithType: Sdl.DetachVirtualJoystick(uint)
  fullName: SharpSDL3.Sdl.DetachVirtualJoystick(uint)
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: DetachVirtualJoystick
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 57
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Detach a virtual joystick.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.AttachVirtualJoystick(SharpSDL3.Structs.VirtualJoystickDesc%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static SdlBool DetachVirtualJoystick(uint instanceId)
    parameters:
    - id: instanceId
      type: System.UInt32
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function DetachVirtualJoystick(instanceId As UInteger) As SdlBool
  overload: SharpSDL3.Sdl.DetachVirtualJoystick*
  nameWithType.vb: Sdl.DetachVirtualJoystick(UInteger)
  fullName.vb: SharpSDL3.Sdl.DetachVirtualJoystick(UInteger)
  name.vb: DetachVirtualJoystick(UInteger)
- uid: SharpSDL3.Sdl.GetJoystickAxis(System.IntPtr,System.Int32)
  commentId: M:SharpSDL3.Sdl.GetJoystickAxis(System.IntPtr,System.Int32)
  id: GetJoystickAxis(System.IntPtr,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetJoystickAxis(nint, int)
  nameWithType: Sdl.GetJoystickAxis(nint, int)
  fullName: SharpSDL3.Sdl.GetJoystickAxis(nint, int)
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetJoystickAxis
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 83
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the current state of an axis control on a joystick.
  remarks: >-
    SDL makes no promises about what part of the joystick any given axis refers

    to. Your game should have some sort of configuration UI to let users

    specify what each axis should be bound to. Alternately, SDL's higher-level

    Game Controller API makes a great effort to apply order to this lower-level

    interface, so you know that a specific axis is the "left thumb stick," etc.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetNumJoystickAxes(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static short GetJoystickAxis(nint joystick, int axis)
    parameters:
    - id: joystick
      type: System.IntPtr
      description: an SDL_Joystick structure containing joystick information.
    - id: axis
      type: System.Int32
      description: the axis to query; the axis indices start at index 0.
    return:
      type: System.Int16
      description: Returns a 16-bit signed integer representing the currentposition of the axis or 0 on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref>for more information.
    content.vb: Public Shared Function GetJoystickAxis(joystick As IntPtr, axis As Integer) As Short
  overload: SharpSDL3.Sdl.GetJoystickAxis*
  nameWithType.vb: Sdl.GetJoystickAxis(IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.GetJoystickAxis(System.IntPtr, Integer)
  name.vb: GetJoystickAxis(IntPtr, Integer)
- uid: SharpSDL3.Sdl.GetJoystickAxisInitialState(System.IntPtr,System.Int32,System.Int16@)
  commentId: M:SharpSDL3.Sdl.GetJoystickAxisInitialState(System.IntPtr,System.Int32,System.Int16@)
  id: GetJoystickAxisInitialState(System.IntPtr,System.Int32,System.Int16@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetJoystickAxisInitialState(nint, int, out short)
  nameWithType: Sdl.GetJoystickAxisInitialState(nint, int, out short)
  fullName: SharpSDL3.Sdl.GetJoystickAxisInitialState(nint, int, out short)
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetJoystickAxisInitialState
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 105
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the initial state of an axis control on a joystick.
  remarks: >-
    The state is a value ranging from -32768 to 32767.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static SdlBool GetJoystickAxisInitialState(nint joystick, int axis, out short state)
    parameters:
    - id: joystick
      type: System.IntPtr
      description: an SDL_Joystick structure containing joystick information.
    - id: axis
      type: System.Int32
      description: the axis to query; the axis indices start at index 0.
    - id: state
      type: System.Int16
      description: upon return, the initial value is supplied here.
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if this axis has any initial value, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if not.
    content.vb: Public Shared Function GetJoystickAxisInitialState(joystick As IntPtr, axis As Integer, state As Short) As SdlBool
  overload: SharpSDL3.Sdl.GetJoystickAxisInitialState*
  nameWithType.vb: Sdl.GetJoystickAxisInitialState(IntPtr, Integer, Short)
  fullName.vb: SharpSDL3.Sdl.GetJoystickAxisInitialState(System.IntPtr, Integer, Short)
  name.vb: GetJoystickAxisInitialState(IntPtr, Integer, Short)
- uid: SharpSDL3.Sdl.GetJoystickBall(System.IntPtr,System.Int32,System.Int32@,System.Int32@)
  commentId: M:SharpSDL3.Sdl.GetJoystickBall(System.IntPtr,System.Int32,System.Int32@,System.Int32@)
  id: GetJoystickBall(System.IntPtr,System.Int32,System.Int32@,System.Int32@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetJoystickBall(nint, int, out int, out int)
  nameWithType: Sdl.GetJoystickBall(nint, int, out int, out int)
  fullName: SharpSDL3.Sdl.GetJoystickBall(nint, int, out int, out int)
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetJoystickBall
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 131
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the ball axis change since the last poll.
  remarks: >-
    Trackballs can only return relative motion since the last call to

    SDL_GetJoystickBall(), these motion deltas are

    placed into dx and dy.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetNumJoystickBalls(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static SdlBool GetJoystickBall(nint joystick, int ball, out int dx, out int dy)
    parameters:
    - id: joystick
      type: System.IntPtr
      description: the SDL_Joystick to query.
    - id: ball
      type: System.Int32
      description: the ball index to query; ball indices start at index 0.
    - id: dx
      type: System.Int32
      description: stores the difference in the x axis position since the last poll.
    - id: dy
      type: System.Int32
      description: stores the difference in the y axis position since the last poll.
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetJoystickBall(joystick As IntPtr, ball As Integer, dx As Integer, dy As Integer) As SdlBool
  overload: SharpSDL3.Sdl.GetJoystickBall*
  nameWithType.vb: Sdl.GetJoystickBall(IntPtr, Integer, Integer, Integer)
  fullName.vb: SharpSDL3.Sdl.GetJoystickBall(System.IntPtr, Integer, Integer, Integer)
  name.vb: GetJoystickBall(IntPtr, Integer, Integer, Integer)
- uid: SharpSDL3.Sdl.GetJoystickButton(System.IntPtr,System.Int32)
  commentId: M:SharpSDL3.Sdl.GetJoystickButton(System.IntPtr,System.Int32)
  id: GetJoystickButton(System.IntPtr,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetJoystickButton(nint, int)
  nameWithType: Sdl.GetJoystickButton(nint, int)
  fullName: SharpSDL3.Sdl.GetJoystickButton(nint, int)
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetJoystickButton
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 152
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the current state of a button on a joystick.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetNumJoystickButtons(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static SdlBool GetJoystickButton(nint joystick, int button)
    parameters:
    - id: joystick
      type: System.IntPtr
      description: an SDL_Joystick structure containing joystick information.
    - id: button
      type: System.Int32
      description: the button index to get the state from; indices start at index 0.
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the button is pressed, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Public Shared Function GetJoystickButton(joystick As IntPtr, button As Integer) As SdlBool
  overload: SharpSDL3.Sdl.GetJoystickButton*
  nameWithType.vb: Sdl.GetJoystickButton(IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.GetJoystickButton(System.IntPtr, Integer)
  name.vb: GetJoystickButton(IntPtr, Integer)
- uid: SharpSDL3.Sdl.GetJoystickConnectionState(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetJoystickConnectionState(System.IntPtr)
  id: GetJoystickConnectionState(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetJoystickConnectionState(nint)
  nameWithType: Sdl.GetJoystickConnectionState(nint)
  fullName: SharpSDL3.Sdl.GetJoystickConnectionState(nint)
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetJoystickConnectionState
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 171
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the connection state of a joystick.
  remarks: <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static JoystickConnectionState GetJoystickConnectionState(nint joystick)
    parameters:
    - id: joystick
      type: System.IntPtr
      description: the joystick to query.
    return:
      type: SharpSDL3.Enums.JoystickConnectionState
      description: Returns theconnection state on success orSDL_JOYSTICK_CONNECTION_INVALID on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetJoystickConnectionState(joystick As IntPtr) As JoystickConnectionState
  overload: SharpSDL3.Sdl.GetJoystickConnectionState*
  nameWithType.vb: Sdl.GetJoystickConnectionState(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetJoystickConnectionState(System.IntPtr)
  name.vb: GetJoystickConnectionState(IntPtr)
- uid: SharpSDL3.Sdl.GetJoystickFirmwareVersion(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetJoystickFirmwareVersion(System.IntPtr)
  id: GetJoystickFirmwareVersion(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetJoystickFirmwareVersion(nint)
  nameWithType: Sdl.GetJoystickFirmwareVersion(nint)
  fullName: SharpSDL3.Sdl.GetJoystickFirmwareVersion(nint)
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetJoystickFirmwareVersion
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 188
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the firmware version of an opened joystick, if available.
  remarks: >-
    If the firmware version isn't available this function returns 0.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static ushort GetJoystickFirmwareVersion(nint joystick)
    parameters:
    - id: joystick
      type: System.IntPtr
      description: the SDL_Joystick obtained from SDL_OpenJoystick().
    return:
      type: System.UInt16
      description: Returns the firmware version of the selected joystick,  0 if unavailable.
    content.vb: Public Shared Function GetJoystickFirmwareVersion(joystick As IntPtr) As UShort
  overload: SharpSDL3.Sdl.GetJoystickFirmwareVersion*
  nameWithType.vb: Sdl.GetJoystickFirmwareVersion(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetJoystickFirmwareVersion(System.IntPtr)
  name.vb: GetJoystickFirmwareVersion(IntPtr)
- uid: SharpSDL3.Sdl.GetJoystickFromId(System.UInt32)
  commentId: M:SharpSDL3.Sdl.GetJoystickFromId(System.UInt32)
  id: GetJoystickFromId(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetJoystickFromId(uint)
  nameWithType: Sdl.GetJoystickFromId(uint)
  fullName: SharpSDL3.Sdl.GetJoystickFromId(uint)
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetJoystickFromId
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 204
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the SDL_Joystick associated with an instance ID, if it has been opened.
  remarks: <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static nint GetJoystickFromId(uint instanceId)
    parameters:
    - id: instanceId
      type: System.UInt32
    return:
      type: System.IntPtr
      description: (SDL_Joystick *) Returns an SDL_Joystick on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure or if it hasn't been opened yet; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetJoystickFromId(instanceId As UInteger) As IntPtr
  overload: SharpSDL3.Sdl.GetJoystickFromId*
  nameWithType.vb: Sdl.GetJoystickFromId(UInteger)
  fullName.vb: SharpSDL3.Sdl.GetJoystickFromId(UInteger)
  name.vb: GetJoystickFromId(UInteger)
- uid: SharpSDL3.Sdl.GetJoystickFromPlayerIndex(System.Int32)
  commentId: M:SharpSDL3.Sdl.GetJoystickFromPlayerIndex(System.Int32)
  id: GetJoystickFromPlayerIndex(System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetJoystickFromPlayerIndex(int)
  nameWithType: Sdl.GetJoystickFromPlayerIndex(int)
  fullName: SharpSDL3.Sdl.GetJoystickFromPlayerIndex(int)
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetJoystickFromPlayerIndex
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 225
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the SDL_Joystick associated with a player index.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetJoystickPlayerIndex(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetJoystickPlayerIndex(System.IntPtr%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint GetJoystickFromPlayerIndex(int playerIndex)
    parameters:
    - id: playerIndex
      type: System.Int32
    return:
      type: System.IntPtr
      description: (SDL_Joystick *) Returns an SDL_Joystick on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetJoystickFromPlayerIndex(playerIndex As Integer) As IntPtr
  overload: SharpSDL3.Sdl.GetJoystickFromPlayerIndex*
  nameWithType.vb: Sdl.GetJoystickFromPlayerIndex(Integer)
  fullName.vb: SharpSDL3.Sdl.GetJoystickFromPlayerIndex(Integer)
  name.vb: GetJoystickFromPlayerIndex(Integer)
- uid: SharpSDL3.Sdl.GetJoystickGuid(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetJoystickGuid(System.IntPtr)
  id: GetJoystickGuid(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetJoystickGuid(nint)
  nameWithType: Sdl.GetJoystickGuid(nint)
  fullName: SharpSDL3.Sdl.GetJoystickGuid(nint)
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetJoystickGuid
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 247
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the implementation-dependent GUID for the joystick.
  remarks: >-
    This function requires an open joystick.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    GetJoystickGUIDForID

    GUIDToString
  example: []
  syntax:
    content: public static SdlGuid GetJoystickGuid(nint joystick)
    parameters:
    - id: joystick
      type: System.IntPtr
      description: the SDL_Joystick obtained from SDL_OpenJoystick().
    return:
      type: SharpSDL3.Structs.SdlGuid
      description: Returns the GUID of the given joystick. If called onan invalid index, this function returns a zero GUID; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetJoystickGuid(joystick As IntPtr) As SdlGuid
  overload: SharpSDL3.Sdl.GetJoystickGuid*
  nameWithType.vb: Sdl.GetJoystickGuid(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetJoystickGuid(System.IntPtr)
  name.vb: GetJoystickGuid(IntPtr)
- uid: SharpSDL3.Sdl.GetJoystickGuidForId(System.UInt32)
  commentId: M:SharpSDL3.Sdl.GetJoystickGuidForId(System.UInt32)
  id: GetJoystickGuidForId(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetJoystickGuidForId(uint)
  nameWithType: Sdl.GetJoystickGuidForId(uint)
  fullName: SharpSDL3.Sdl.GetJoystickGuidForId(uint)
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetJoystickGuidForId
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 269
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the implementation-dependent GUID of a joystick.
  remarks: >-
    This can be called before any joysticks are opened.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    GetJoystickGUID

    GUIDToString
  example: []
  syntax:
    content: public static SdlGuid GetJoystickGuidForId(uint instanceId)
    parameters:
    - id: instanceId
      type: System.UInt32
    return:
      type: SharpSDL3.Structs.SdlGuid
      description: Returns the GUID of the selected joystick. If calledwith an invalid instance_id, this function returns a zero GUID.
    content.vb: Public Shared Function GetJoystickGuidForId(instanceId As UInteger) As SdlGuid
  overload: SharpSDL3.Sdl.GetJoystickGuidForId*
  nameWithType.vb: Sdl.GetJoystickGuidForId(UInteger)
  fullName.vb: SharpSDL3.Sdl.GetJoystickGuidForId(UInteger)
  name.vb: GetJoystickGuidForId(UInteger)
- uid: SharpSDL3.Sdl.GetJoystickGUIDInfo(SharpSDL3.Structs.SdlGuid,System.UInt16@,System.UInt16@,System.UInt16@,System.UInt16@)
  commentId: M:SharpSDL3.Sdl.GetJoystickGUIDInfo(SharpSDL3.Structs.SdlGuid,System.UInt16@,System.UInt16@,System.UInt16@,System.UInt16@)
  id: GetJoystickGUIDInfo(SharpSDL3.Structs.SdlGuid,System.UInt16@,System.UInt16@,System.UInt16@,System.UInt16@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetJoystickGUIDInfo(SdlGuid, out ushort, out ushort, out ushort, out ushort)
  nameWithType: Sdl.GetJoystickGUIDInfo(SdlGuid, out ushort, out ushort, out ushort, out ushort)
  fullName: SharpSDL3.Sdl.GetJoystickGUIDInfo(SharpSDL3.Structs.SdlGuid, out ushort, out ushort, out ushort, out ushort)
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetJoystickGUIDInfo
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 288
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the device information encoded in a <xref href="SharpSDL3.Structs.SdlGuid" data-throw-if-not-resolved="false"></xref> structure.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    GetJoystickGUIDForID
  example: []
  syntax:
    content: public static void GetJoystickGUIDInfo(SdlGuid guid, out ushort vendor, out ushort product, out ushort version, out ushort crc16)
    parameters:
    - id: guid
      type: SharpSDL3.Structs.SdlGuid
      description: the <xref href="SharpSDL3.Structs.SdlGuid" data-throw-if-not-resolved="false"></xref> you wish to get info about.
    - id: vendor
      type: System.UInt16
      description: a pointer filled in with the device VID, or 0 if not available.
    - id: product
      type: System.UInt16
      description: a pointer filled in with the device PID, or 0 if not available.
    - id: version
      type: System.UInt16
      description: a pointer filled in with the device version, or 0 if not available.
    - id: crc16
      type: System.UInt16
      description: a pointer filled in with a CRC used to distinguish different products with the same VID/PID, or 0 if not available.
    content.vb: Public Shared Sub GetJoystickGUIDInfo(guid As SdlGuid, vendor As UShort, product As UShort, version As UShort, crc16 As UShort)
  overload: SharpSDL3.Sdl.GetJoystickGUIDInfo*
  nameWithType.vb: Sdl.GetJoystickGUIDInfo(SdlGuid, UShort, UShort, UShort, UShort)
  fullName.vb: SharpSDL3.Sdl.GetJoystickGUIDInfo(SharpSDL3.Structs.SdlGuid, UShort, UShort, UShort, UShort)
  name.vb: GetJoystickGUIDInfo(SdlGuid, UShort, UShort, UShort, UShort)
- uid: SharpSDL3.Sdl.GetJoystickHat(System.IntPtr,System.Int32)
  commentId: M:SharpSDL3.Sdl.GetJoystickHat(System.IntPtr,System.Int32)
  id: GetJoystickHat(System.IntPtr,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetJoystickHat(nint, int)
  nameWithType: Sdl.GetJoystickHat(nint, int)
  fullName: SharpSDL3.Sdl.GetJoystickHat(nint, int)
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetJoystickHat
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 306
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the current state of a POV hat on a joystick.
  remarks: >-
    The returned value will be one of the SDL_HAT_* values.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetNumJoystickHats(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static byte GetJoystickHat(nint joystick, int hat)
    parameters:
    - id: joystick
      type: System.IntPtr
      description: an SDL_Joystick structure containing joystick information.
    - id: hat
      type: System.Int32
      description: the hat index to get the state from; indices start at index 0.
    return:
      type: System.Byte
      description: Returns the current hat position.
    content.vb: Public Shared Function GetJoystickHat(joystick As IntPtr, hat As Integer) As Byte
  overload: SharpSDL3.Sdl.GetJoystickHat*
  nameWithType.vb: Sdl.GetJoystickHat(IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.GetJoystickHat(System.IntPtr, Integer)
  name.vb: GetJoystickHat(IntPtr, Integer)
- uid: SharpSDL3.Sdl.GetJoystickID(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetJoystickID(System.IntPtr)
  id: GetJoystickID(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetJoystickID(nint)
  nameWithType: Sdl.GetJoystickID(nint)
  fullName: SharpSDL3.Sdl.GetJoystickID(nint)
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetJoystickID
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 325
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the instance ID of an opened joystick.
  remarks: <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static uint GetJoystickID(nint joystick)
    parameters:
    - id: joystick
      type: System.IntPtr
      description: an SDL_Joystick structure containing joystick information.
    return:
      type: System.UInt32
      description: Returns the instance ID of the specifiedjoystick on success or 0 on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref>for more information.
    content.vb: Public Shared Function GetJoystickID(joystick As IntPtr) As UInteger
  overload: SharpSDL3.Sdl.GetJoystickID*
  nameWithType.vb: Sdl.GetJoystickID(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetJoystickID(System.IntPtr)
  name.vb: GetJoystickID(IntPtr)
- uid: SharpSDL3.Sdl.GetJoystickName(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetJoystickName(System.IntPtr)
  id: GetJoystickName(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetJoystickName(nint)
  nameWithType: Sdl.GetJoystickName(nint)
  fullName: SharpSDL3.Sdl.GetJoystickName(nint)
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetJoystickName
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 342
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the implementation dependent name of a joystick.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    GetJoystickNameForID
  example: []
  syntax:
    content: public static string GetJoystickName(nint joystick)
    parameters:
    - id: joystick
      type: System.IntPtr
      description: the SDL_Joystick obtained from SDL_OpenJoystick().
    return:
      type: System.String
      description: Returns the name of the selected joystick. If no name can befound, this function returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetJoystickName(joystick As IntPtr) As String
  overload: SharpSDL3.Sdl.GetJoystickName*
  nameWithType.vb: Sdl.GetJoystickName(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetJoystickName(System.IntPtr)
  name.vb: GetJoystickName(IntPtr)
- uid: SharpSDL3.Sdl.GetJoystickNameForId(System.UInt32)
  commentId: M:SharpSDL3.Sdl.GetJoystickNameForId(System.UInt32)
  id: GetJoystickNameForId(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetJoystickNameForId(uint)
  nameWithType: Sdl.GetJoystickNameForId(uint)
  fullName: SharpSDL3.Sdl.GetJoystickNameForId(uint)
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetJoystickNameForId
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 364
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the implementation dependent name of a joystick.
  remarks: >-
    This can be called before any joysticks are opened.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetJoystickName(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetJoysticks(System.Int32%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static string GetJoystickNameForId(uint instanceId)
    parameters:
    - id: instanceId
      type: System.UInt32
    return:
      type: System.String
      description: Returns the name of the selected joystick. If no name can befound, this function returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetJoystickNameForId(instanceId As UInteger) As String
  overload: SharpSDL3.Sdl.GetJoystickNameForId*
  nameWithType.vb: Sdl.GetJoystickNameForId(UInteger)
  fullName.vb: SharpSDL3.Sdl.GetJoystickNameForId(UInteger)
  name.vb: GetJoystickNameForId(UInteger)
- uid: SharpSDL3.Sdl.GetJoystickPath(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetJoystickPath(System.IntPtr)
  id: GetJoystickPath(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetJoystickPath(nint)
  nameWithType: Sdl.GetJoystickPath(nint)
  fullName: SharpSDL3.Sdl.GetJoystickPath(nint)
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetJoystickPath
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 386
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the implementation dependent path of a joystick.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    GetJoystickPathForID
  example: []
  syntax:
    content: public static string GetJoystickPath(nint joystick)
    parameters:
    - id: joystick
      type: System.IntPtr
      description: the SDL_Joystick obtained from SDL_OpenJoystick().
    return:
      type: System.String
      description: Returns the path of the selected joystick. If no path can befound, this function returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetJoystickPath(joystick As IntPtr) As String
  overload: SharpSDL3.Sdl.GetJoystickPath*
  nameWithType.vb: Sdl.GetJoystickPath(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetJoystickPath(System.IntPtr)
  name.vb: GetJoystickPath(IntPtr)
- uid: SharpSDL3.Sdl.GetJoystickPathForId(System.UInt32)
  commentId: M:SharpSDL3.Sdl.GetJoystickPathForId(System.UInt32)
  id: GetJoystickPathForId(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetJoystickPathForId(uint)
  nameWithType: Sdl.GetJoystickPathForId(uint)
  fullName: SharpSDL3.Sdl.GetJoystickPathForId(uint)
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetJoystickPathForId
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 408
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the implementation dependent path of a joystick.
  remarks: >-
    This can be called before any joysticks are opened.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetJoystickPath(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetJoysticks(System.Int32%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static string GetJoystickPathForId(uint instanceId)
    parameters:
    - id: instanceId
      type: System.UInt32
    return:
      type: System.String
      description: Returns the path of the selected joystick. If no path can befound, this function returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetJoystickPathForId(instanceId As UInteger) As String
  overload: SharpSDL3.Sdl.GetJoystickPathForId*
  nameWithType.vb: Sdl.GetJoystickPathForId(UInteger)
  fullName.vb: SharpSDL3.Sdl.GetJoystickPathForId(UInteger)
  name.vb: GetJoystickPathForId(UInteger)
- uid: SharpSDL3.Sdl.GetJoystickPlayerIndex(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetJoystickPlayerIndex(System.IntPtr)
  id: GetJoystickPlayerIndex(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetJoystickPlayerIndex(nint)
  nameWithType: Sdl.GetJoystickPlayerIndex(nint)
  fullName: SharpSDL3.Sdl.GetJoystickPlayerIndex(nint)
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetJoystickPlayerIndex
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 430
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the player index of an opened joystick.
  remarks: >-
    For XInput controllers this returns the XInput user index. Many joysticks

    will not be able to supply this information.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetJoystickPlayerIndex(System.IntPtr%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static int GetJoystickPlayerIndex(nint joystick)
    parameters:
    - id: joystick
      type: System.IntPtr
      description: the SDL_Joystick obtained from SDL_OpenJoystick().
    return:
      type: System.Int32
      description: Returns the player index, or -1 if it's not available.
    content.vb: Public Shared Function GetJoystickPlayerIndex(joystick As IntPtr) As Integer
  overload: SharpSDL3.Sdl.GetJoystickPlayerIndex*
  nameWithType.vb: Sdl.GetJoystickPlayerIndex(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetJoystickPlayerIndex(System.IntPtr)
  name.vb: GetJoystickPlayerIndex(IntPtr)
- uid: SharpSDL3.Sdl.GetJoystickPlayerIndexForId(System.UInt32)
  commentId: M:SharpSDL3.Sdl.GetJoystickPlayerIndexForId(System.UInt32)
  id: GetJoystickPlayerIndexForId(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetJoystickPlayerIndexForId(uint)
  nameWithType: Sdl.GetJoystickPlayerIndexForId(uint)
  fullName: SharpSDL3.Sdl.GetJoystickPlayerIndexForId(uint)
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetJoystickPlayerIndexForId
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 452
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the player index of a joystick.
  remarks: >-
    This can be called before any joysticks are opened.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetJoystickPlayerIndex(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetJoysticks(System.Int32%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static int GetJoystickPlayerIndexForId(uint instanceId)
    parameters:
    - id: instanceId
      type: System.UInt32
    return:
      type: System.Int32
      description: Returns the player index of a joystick, or -1 if it's not available.
    content.vb: Public Shared Function GetJoystickPlayerIndexForId(instanceId As UInteger) As Integer
  overload: SharpSDL3.Sdl.GetJoystickPlayerIndexForId*
  nameWithType.vb: Sdl.GetJoystickPlayerIndexForId(UInteger)
  fullName.vb: SharpSDL3.Sdl.GetJoystickPlayerIndexForId(UInteger)
  name.vb: GetJoystickPlayerIndexForId(UInteger)
- uid: SharpSDL3.Sdl.GetJoystickPowerInfo(System.IntPtr,System.Int32@)
  commentId: M:SharpSDL3.Sdl.GetJoystickPowerInfo(System.IntPtr,System.Int32@)
  id: GetJoystickPowerInfo(System.IntPtr,System.Int32@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetJoystickPowerInfo(nint, out int)
  nameWithType: Sdl.GetJoystickPowerInfo(nint, out int)
  fullName: SharpSDL3.Sdl.GetJoystickPowerInfo(nint, out int)
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetJoystickPowerInfo
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 473
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the battery state of a joystick.
  remarks: >-
    You should never take a battery status as absolute truth. Batteries

    (especially failing batteries) are delicate hardware, and the values

    reported here are best estimates based on what that hardware reports. It's

    not uncommon for older batteries to lose stored power much faster than it

    reports, or completely drain when reporting it has 20 percent left, etc.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static PowerState GetJoystickPowerInfo(nint joystick, out int percent)
    parameters:
    - id: joystick
      type: System.IntPtr
      description: the joystick to query.
    - id: percent
      type: System.Int32
      description: a pointer filled in with the percentage of battery life left, between 0 and 100, or discard to ignore. This will be filled in with -1 we can't determine a value or there is no battery.
    return:
      type: SharpSDL3.Enums.PowerState
      description: Returns the current battery state orSDL_POWERSTATE_ERROR on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetJoystickPowerInfo(joystick As IntPtr, percent As Integer) As PowerState
  overload: SharpSDL3.Sdl.GetJoystickPowerInfo*
  nameWithType.vb: Sdl.GetJoystickPowerInfo(IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.GetJoystickPowerInfo(System.IntPtr, Integer)
  name.vb: GetJoystickPowerInfo(IntPtr, Integer)
- uid: SharpSDL3.Sdl.GetJoystickProduct(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetJoystickProduct(System.IntPtr)
  id: GetJoystickProduct(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetJoystickProduct(nint)
  nameWithType: Sdl.GetJoystickProduct(nint)
  fullName: SharpSDL3.Sdl.GetJoystickProduct(nint)
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetJoystickProduct
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 491
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the USB product ID of an opened joystick, if available.
  remarks: >-
    If the product ID isn't available this function returns 0.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    GetJoystickProductForID
  example: []
  syntax:
    content: public static ushort GetJoystickProduct(nint joystick)
    parameters:
    - id: joystick
      type: System.IntPtr
      description: the SDL_Joystick obtained from SDL_OpenJoystick().
    return:
      type: System.UInt16
      description: Returns the USB product ID of the selected joystick, or0 if unavailable.
    content.vb: Public Shared Function GetJoystickProduct(joystick As IntPtr) As UShort
  overload: SharpSDL3.Sdl.GetJoystickProduct*
  nameWithType.vb: Sdl.GetJoystickProduct(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetJoystickProduct(System.IntPtr)
  name.vb: GetJoystickProduct(IntPtr)
- uid: SharpSDL3.Sdl.GetJoystickProductForId(System.UInt32)
  commentId: M:SharpSDL3.Sdl.GetJoystickProductForId(System.UInt32)
  id: GetJoystickProductForId(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetJoystickProductForId(uint)
  nameWithType: Sdl.GetJoystickProductForId(uint)
  fullName: SharpSDL3.Sdl.GetJoystickProductForId(uint)
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetJoystickProductForId
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 511
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the USB product ID of a joystick, if available.
  remarks: >-
    This can be called before any joysticks are opened. If the product ID isn't

    available this function returns 0.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetJoystickProduct(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetJoysticks(System.Int32%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static ushort GetJoystickProductForId(uint instanceId)
    parameters:
    - id: instanceId
      type: System.UInt32
    return:
      type: System.UInt16
      description: Returns the USB product ID of the selected joystick. Ifcalled with an invalid instance_id, this function returns 0.
    content.vb: Public Shared Function GetJoystickProductForId(instanceId As UInteger) As UShort
  overload: SharpSDL3.Sdl.GetJoystickProductForId*
  nameWithType.vb: Sdl.GetJoystickProductForId(UInteger)
  fullName.vb: SharpSDL3.Sdl.GetJoystickProductForId(UInteger)
  name.vb: GetJoystickProductForId(UInteger)
- uid: SharpSDL3.Sdl.GetJoystickProductVersion(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetJoystickProductVersion(System.IntPtr)
  id: GetJoystickProductVersion(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetJoystickProductVersion(nint)
  nameWithType: Sdl.GetJoystickProductVersion(nint)
  fullName: SharpSDL3.Sdl.GetJoystickProductVersion(nint)
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetJoystickProductVersion
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 528
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the product version of an opened joystick, if available.
  remarks: >-
    If the product version isn't available this function returns 0.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    GetJoystickProductVersionForID
  example: []
  syntax:
    content: public static ushort GetJoystickProductVersion(nint joystick)
    parameters:
    - id: joystick
      type: System.IntPtr
      description: the SDL_Joystick obtained from SDL_OpenJoystick().
    return:
      type: System.UInt16
      description: Returns the product version of the selected joystick, or0 if unavailable.
    content.vb: Public Shared Function GetJoystickProductVersion(joystick As IntPtr) As UShort
  overload: SharpSDL3.Sdl.GetJoystickProductVersion*
  nameWithType.vb: Sdl.GetJoystickProductVersion(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetJoystickProductVersion(System.IntPtr)
  name.vb: GetJoystickProductVersion(IntPtr)
- uid: SharpSDL3.Sdl.GetJoystickProductVersionForId(System.UInt32)
  commentId: M:SharpSDL3.Sdl.GetJoystickProductVersionForId(System.UInt32)
  id: GetJoystickProductVersionForId(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetJoystickProductVersionForId(uint)
  nameWithType: Sdl.GetJoystickProductVersionForId(uint)
  fullName: SharpSDL3.Sdl.GetJoystickProductVersionForId(uint)
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetJoystickProductVersionForId
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 548
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the product version of a joystick, if available.
  remarks: >-
    This can be called before any joysticks are opened. If the product version

    isn't available this function returns 0.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetJoystickProductVersion(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetJoysticks(System.Int32%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static ushort GetJoystickProductVersionForId(uint instanceId)
    parameters:
    - id: instanceId
      type: System.UInt32
    return:
      type: System.UInt16
      description: Returns the product version of the selected joystick. Ifcalled with an invalid instance_id, this function returns 0.
    content.vb: Public Shared Function GetJoystickProductVersionForId(instanceId As UInteger) As UShort
  overload: SharpSDL3.Sdl.GetJoystickProductVersionForId*
  nameWithType.vb: Sdl.GetJoystickProductVersionForId(UInteger)
  fullName.vb: SharpSDL3.Sdl.GetJoystickProductVersionForId(UInteger)
  name.vb: GetJoystickProductVersionForId(UInteger)
- uid: SharpSDL3.Sdl.GetJoystickProperties(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetJoystickProperties(System.IntPtr)
  id: GetJoystickProperties(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetJoystickProperties(nint)
  nameWithType: Sdl.GetJoystickProperties(nint)
  fullName: SharpSDL3.Sdl.GetJoystickProperties(nint)
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetJoystickProperties
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 564
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the properties associated with a joystick.
  remarks: >-
    The following read-only properties are provided by SDL:

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static uint GetJoystickProperties(nint joystick)
    parameters:
    - id: joystick
      type: System.IntPtr
      description: the SDL_Joystick obtained from SDL_OpenJoystick().
    return:
      type: System.UInt32
      description: Returns a valid property ID on success or 0 on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetJoystickProperties(joystick As IntPtr) As UInteger
  overload: SharpSDL3.Sdl.GetJoystickProperties*
  nameWithType.vb: Sdl.GetJoystickProperties(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetJoystickProperties(System.IntPtr)
  name.vb: GetJoystickProperties(IntPtr)
- uid: SharpSDL3.Sdl.GetJoysticks(System.Int32@)
  commentId: M:SharpSDL3.Sdl.GetJoysticks(System.Int32@)
  id: GetJoysticks(System.Int32@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetJoysticks(out int)
  nameWithType: Sdl.GetJoysticks(out int)
  fullName: SharpSDL3.Sdl.GetJoysticks(out int)
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetJoysticks
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 582
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get a list of currently connected joysticks.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.HasJoystick" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.OpenJoystick(System.UInt32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static List<nint> GetJoysticks(out int count)
    parameters:
    - id: count
      type: System.Int32
      description: a pointer filled in with the number of joysticks returned, may be discarded.
    return:
      type: System.Collections.Generic.List{System.IntPtr}
      description: (SDL_JoystickID *) Returns a 0 terminated array ofjoystick instance IDs or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information. This should be freedwith <xref href="SharpSDL3.Sdl.Free(System.IntPtr)" data-throw-if-not-resolved="false"></xref> when it is no longer needed.
    content.vb: Public Shared Function GetJoysticks(count As Integer) As List(Of IntPtr)
  overload: SharpSDL3.Sdl.GetJoysticks*
  nameWithType.vb: Sdl.GetJoysticks(Integer)
  fullName.vb: SharpSDL3.Sdl.GetJoysticks(Integer)
  name.vb: GetJoysticks(Integer)
- uid: SharpSDL3.Sdl.GetJoystickSerial(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetJoystickSerial(System.IntPtr)
  id: GetJoystickSerial(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetJoystickSerial(nint)
  nameWithType: Sdl.GetJoystickSerial(nint)
  fullName: SharpSDL3.Sdl.GetJoystickSerial(nint)
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetJoystickSerial
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 606
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the serial number of an opened joystick, if available.
  remarks: >-
    Returns the serial number of the joystick, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if it is not available.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static string GetJoystickSerial(nint joystick)
    parameters:
    - id: joystick
      type: System.IntPtr
      description: the SDL_Joystick obtained from SDL_OpenJoystick().
    return:
      type: System.String
      description: Returns the serial number of the selected joystick, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>if unavailable.
    content.vb: Public Shared Function GetJoystickSerial(joystick As IntPtr) As String
  overload: SharpSDL3.Sdl.GetJoystickSerial*
  nameWithType.vb: Sdl.GetJoystickSerial(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetJoystickSerial(System.IntPtr)
  name.vb: GetJoystickSerial(IntPtr)
- uid: SharpSDL3.Sdl.GetJoystickType(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetJoystickType(System.IntPtr)
  id: GetJoystickType(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetJoystickType(nint)
  nameWithType: Sdl.GetJoystickType(nint)
  fullName: SharpSDL3.Sdl.GetJoystickType(nint)
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetJoystickType
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 626
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the type of an opened joystick.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    GetJoystickTypeForID
  example: []
  syntax:
    content: public static JoystickType GetJoystickType(nint joystick)
    parameters:
    - id: joystick
      type: System.IntPtr
      description: the SDL_Joystick obtained from SDL_OpenJoystick().
    return:
      type: SharpSDL3.Enums.JoystickType
      description: Returns theSDL_JoystickType of the selected joystick.
    content.vb: Public Shared Function GetJoystickType(joystick As IntPtr) As JoystickType
  overload: SharpSDL3.Sdl.GetJoystickType*
  nameWithType.vb: Sdl.GetJoystickType(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetJoystickType(System.IntPtr)
  name.vb: GetJoystickType(IntPtr)
- uid: SharpSDL3.Sdl.GetJoystickTypeForId(System.UInt32)
  commentId: M:SharpSDL3.Sdl.GetJoystickTypeForId(System.UInt32)
  id: GetJoystickTypeForId(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetJoystickTypeForId(uint)
  nameWithType: Sdl.GetJoystickTypeForId(uint)
  fullName: SharpSDL3.Sdl.GetJoystickTypeForId(uint)
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetJoystickTypeForId
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 645
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the type of a joystick, if available.
  remarks: >-
    This can be called before any joysticks are opened.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetJoystickType(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetJoysticks(System.Int32%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static JoystickType GetJoystickTypeForId(uint instanceId)
    parameters:
    - id: instanceId
      type: System.UInt32
    return:
      type: SharpSDL3.Enums.JoystickType
      description: Returns theSDL_JoystickType of the selected joystick. If calledwith an invalid instance_id, this function returnsSDL_JOYSTICK_TYPE_UNKNOWN.
    content.vb: Public Shared Function GetJoystickTypeForId(instanceId As UInteger) As JoystickType
  overload: SharpSDL3.Sdl.GetJoystickTypeForId*
  nameWithType.vb: Sdl.GetJoystickTypeForId(UInteger)
  fullName.vb: SharpSDL3.Sdl.GetJoystickTypeForId(UInteger)
  name.vb: GetJoystickTypeForId(UInteger)
- uid: SharpSDL3.Sdl.GetJoystickVendor(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetJoystickVendor(System.IntPtr)
  id: GetJoystickVendor(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetJoystickVendor(nint)
  nameWithType: Sdl.GetJoystickVendor(nint)
  fullName: SharpSDL3.Sdl.GetJoystickVendor(nint)
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetJoystickVendor
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 662
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the USB vendor ID of an opened joystick, if available.
  remarks: >-
    If the vendor ID isn't available this function returns 0.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    GetJoystickVendorForID
  example: []
  syntax:
    content: public static ushort GetJoystickVendor(nint joystick)
    parameters:
    - id: joystick
      type: System.IntPtr
      description: the SDL_Joystick obtained from SDL_OpenJoystick().
    return:
      type: System.UInt16
      description: Returns the USB vendor ID of the selected joystick, or 0if unavailable.
    content.vb: Public Shared Function GetJoystickVendor(joystick As IntPtr) As UShort
  overload: SharpSDL3.Sdl.GetJoystickVendor*
  nameWithType.vb: Sdl.GetJoystickVendor(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetJoystickVendor(System.IntPtr)
  name.vb: GetJoystickVendor(IntPtr)
- uid: SharpSDL3.Sdl.GetJoystickVendorForId(System.UInt32)
  commentId: M:SharpSDL3.Sdl.GetJoystickVendorForId(System.UInt32)
  id: GetJoystickVendorForId(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetJoystickVendorForId(uint)
  nameWithType: Sdl.GetJoystickVendorForId(uint)
  fullName: SharpSDL3.Sdl.GetJoystickVendorForId(uint)
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetJoystickVendorForId
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 682
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the USB vendor ID of a joystick, if available.
  remarks: >-
    This can be called before any joysticks are opened. If the vendor ID isn't

    available this function returns 0.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetJoystickVendor(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetJoysticks(System.Int32%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static ushort GetJoystickVendorForId(uint instanceId)
    parameters:
    - id: instanceId
      type: System.UInt32
    return:
      type: System.UInt16
      description: Returns the USB vendor ID of the selected joystick. Ifcalled with an invalid instance_id, this function returns 0.
    content.vb: Public Shared Function GetJoystickVendorForId(instanceId As UInteger) As UShort
  overload: SharpSDL3.Sdl.GetJoystickVendorForId*
  nameWithType.vb: Sdl.GetJoystickVendorForId(UInteger)
  fullName.vb: SharpSDL3.Sdl.GetJoystickVendorForId(UInteger)
  name.vb: GetJoystickVendorForId(UInteger)
- uid: SharpSDL3.Sdl.GetNumJoystickAxes(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetNumJoystickAxes(System.IntPtr)
  id: GetNumJoystickAxes(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetNumJoystickAxes(nint)
  nameWithType: Sdl.GetNumJoystickAxes(nint)
  fullName: SharpSDL3.Sdl.GetNumJoystickAxes(nint)
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetNumJoystickAxes
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 704
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the number of general axis controls on a joystick.
  remarks: >-
    Often, the directional pad on a game controller will either look like 4

    separate buttons or a POV hat, and not axes, but all of this is up to the

    device and platform.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetJoystickAxis(System.IntPtr%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetNumJoystickBalls(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetNumJoystickButtons(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetNumJoystickHats(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static int GetNumJoystickAxes(nint joystick)
    parameters:
    - id: joystick
      type: System.IntPtr
      description: an SDL_Joystick structure containing joystick information.
    return:
      type: System.Int32
      description: Returns the number of axis controls/number of axes on success or -1on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetNumJoystickAxes(joystick As IntPtr) As Integer
  overload: SharpSDL3.Sdl.GetNumJoystickAxes*
  nameWithType.vb: Sdl.GetNumJoystickAxes(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetNumJoystickAxes(System.IntPtr)
  name.vb: GetNumJoystickAxes(IntPtr)
- uid: SharpSDL3.Sdl.GetNumJoystickBalls(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetNumJoystickBalls(System.IntPtr)
  id: GetNumJoystickBalls(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetNumJoystickBalls(nint)
  nameWithType: Sdl.GetNumJoystickBalls(nint)
  fullName: SharpSDL3.Sdl.GetNumJoystickBalls(nint)
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetNumJoystickBalls
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 726
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the number of trackballs on a joystick.
  remarks: >-
    Joystick trackballs have only relative motion events associated with them

    and their state cannot be polled.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetJoystickBall(System.IntPtr%2cSystem.Int32%2cSystem.Int32%40%2cSystem.Int32%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetNumJoystickAxes(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetNumJoystickButtons(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetNumJoystickHats(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static int GetNumJoystickBalls(nint joystick)
    parameters:
    - id: joystick
      type: System.IntPtr
      description: an SDL_Joystick structure containing joystick information.
    return:
      type: System.Int32
      description: Returns the number of trackballs on success or -1 on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetNumJoystickBalls(joystick As IntPtr) As Integer
  overload: SharpSDL3.Sdl.GetNumJoystickBalls*
  nameWithType.vb: Sdl.GetNumJoystickBalls(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetNumJoystickBalls(System.IntPtr)
  name.vb: GetNumJoystickBalls(IntPtr)
- uid: SharpSDL3.Sdl.GetNumJoystickButtons(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetNumJoystickButtons(System.IntPtr)
  id: GetNumJoystickButtons(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetNumJoystickButtons(nint)
  nameWithType: Sdl.GetNumJoystickButtons(nint)
  fullName: SharpSDL3.Sdl.GetNumJoystickButtons(nint)
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetNumJoystickButtons
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 746
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the number of buttons on a joystick.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetJoystickButton(System.IntPtr%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetNumJoystickAxes(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetNumJoystickBalls(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetNumJoystickHats(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static int GetNumJoystickButtons(nint joystick)
    parameters:
    - id: joystick
      type: System.IntPtr
      description: an SDL_Joystick structure containing joystick information.
    return:
      type: System.Int32
      description: Returns the number of buttons on success or -1 on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetNumJoystickButtons(joystick As IntPtr) As Integer
  overload: SharpSDL3.Sdl.GetNumJoystickButtons*
  nameWithType.vb: Sdl.GetNumJoystickButtons(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetNumJoystickButtons(System.IntPtr)
  name.vb: GetNumJoystickButtons(IntPtr)
- uid: SharpSDL3.Sdl.GetNumJoystickHats(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetNumJoystickHats(System.IntPtr)
  id: GetNumJoystickHats(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetNumJoystickHats(nint)
  nameWithType: Sdl.GetNumJoystickHats(nint)
  fullName: SharpSDL3.Sdl.GetNumJoystickHats(nint)
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetNumJoystickHats
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 766
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the number of POV hats on a joystick.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetJoystickHat(System.IntPtr%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetNumJoystickAxes(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetNumJoystickBalls(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetNumJoystickButtons(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static int GetNumJoystickHats(nint joystick)
    parameters:
    - id: joystick
      type: System.IntPtr
      description: an SDL_Joystick structure containing joystick information.
    return:
      type: System.Int32
      description: Returns the number of POV hats on success or -1 on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetNumJoystickHats(joystick As IntPtr) As Integer
  overload: SharpSDL3.Sdl.GetNumJoystickHats*
  nameWithType.vb: Sdl.GetNumJoystickHats(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetNumJoystickHats(System.IntPtr)
  name.vb: GetNumJoystickHats(IntPtr)
- uid: SharpSDL3.Sdl.HasJoystick
  commentId: M:SharpSDL3.Sdl.HasJoystick
  id: HasJoystick
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: HasJoystick()
  nameWithType: Sdl.HasJoystick()
  fullName: SharpSDL3.Sdl.HasJoystick()
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: HasJoystick
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 781
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Return whether a joystick is currently connected.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetJoysticks(System.Int32%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static SdlBool HasJoystick()
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if a joystick is connected, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Public Shared Function HasJoystick() As SdlBool
  overload: SharpSDL3.Sdl.HasJoystick*
- uid: SharpSDL3.Sdl.IsJoystickVirtual(System.UInt32)
  commentId: M:SharpSDL3.Sdl.IsJoystickVirtual(System.UInt32)
  id: IsJoystickVirtual(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: IsJoystickVirtual(uint)
  nameWithType: Sdl.IsJoystickVirtual(uint)
  fullName: SharpSDL3.Sdl.IsJoystickVirtual(uint)
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: IsJoystickVirtual
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 793
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Query whether or not a joystick is virtual.
  remarks: <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static SdlBool IsJoystickVirtual(uint instanceId)
    parameters:
    - id: instanceId
      type: System.UInt32
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the joystick is virtual, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Public Shared Function IsJoystickVirtual(instanceId As UInteger) As SdlBool
  overload: SharpSDL3.Sdl.IsJoystickVirtual*
  nameWithType.vb: Sdl.IsJoystickVirtual(UInteger)
  fullName.vb: SharpSDL3.Sdl.IsJoystickVirtual(UInteger)
  name.vb: IsJoystickVirtual(UInteger)
- uid: SharpSDL3.Sdl.JoystickConnected(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.JoystickConnected(System.IntPtr)
  id: JoystickConnected(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: JoystickConnected(nint)
  nameWithType: Sdl.JoystickConnected(nint)
  fullName: SharpSDL3.Sdl.JoystickConnected(nint)
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: JoystickConnected
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 809
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the status of a specified joystick.
  remarks: <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static SdlBool JoystickConnected(nint joystick)
    parameters:
    - id: joystick
      type: System.IntPtr
      description: the joystick to query.
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the joystick has been opened, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if it has not;call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function JoystickConnected(joystick As IntPtr) As SdlBool
  overload: SharpSDL3.Sdl.JoystickConnected*
  nameWithType.vb: Sdl.JoystickConnected(IntPtr)
  fullName.vb: SharpSDL3.Sdl.JoystickConnected(System.IntPtr)
  name.vb: JoystickConnected(IntPtr)
- uid: SharpSDL3.Sdl.JoystickEventsEnabled
  commentId: M:SharpSDL3.Sdl.JoystickEventsEnabled
  id: JoystickEventsEnabled
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: JoystickEventsEnabled()
  nameWithType: Sdl.JoystickEventsEnabled()
  fullName: SharpSDL3.Sdl.JoystickEventsEnabled()
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: JoystickEventsEnabled
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 827
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Query the state of joystick event processing.
  remarks: >-
    If joystick events are disabled, you must call

    SDL_UpdateJoysticks() yourself and check the state

    of the joystick when you want joystick information.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetJoystickEventsEnabled(System.Boolean)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static SdlBool JoystickEventsEnabled()
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if joystick events are being processed, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>otherwise.
    content.vb: Public Shared Function JoystickEventsEnabled() As SdlBool
  overload: SharpSDL3.Sdl.JoystickEventsEnabled*
- uid: SharpSDL3.Sdl.LockJoysticks
  commentId: M:SharpSDL3.Sdl.LockJoysticks
  id: LockJoysticks
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LockJoysticks()
  nameWithType: Sdl.LockJoysticks()
  fullName: SharpSDL3.Sdl.LockJoysticks()
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LockJoysticks
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 839
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Locking for atomic access to the joystick API.
  remarks: >-
    The SDL joystick functions are thread-safe, however you can lock the

    joysticks while processing to guarantee that the joystick list won't change

    and joystick and gamepad events will not be delivered.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static void LockJoysticks()
    content.vb: Public Shared Sub LockJoysticks()
  overload: SharpSDL3.Sdl.LockJoysticks*
- uid: SharpSDL3.Sdl.OpenJoystick(System.UInt32)
  commentId: M:SharpSDL3.Sdl.OpenJoystick(System.UInt32)
  id: OpenJoystick(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: OpenJoystick(uint)
  nameWithType: Sdl.OpenJoystick(uint)
  fullName: SharpSDL3.Sdl.OpenJoystick(uint)
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: OpenJoystick
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 854
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Open a joystick for use.
  remarks: >-
    The joystick subsystem must be initialized before a joystick can be opened

    for use.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CloseJoystick(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint OpenJoystick(uint instanceId)
    parameters:
    - id: instanceId
      type: System.UInt32
    return:
      type: System.IntPtr
      description: (SDL_Joystick *) Returns a joystick identifier or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function OpenJoystick(instanceId As UInteger) As IntPtr
  overload: SharpSDL3.Sdl.OpenJoystick*
  nameWithType.vb: Sdl.OpenJoystick(UInteger)
  fullName.vb: SharpSDL3.Sdl.OpenJoystick(UInteger)
  name.vb: OpenJoystick(UInteger)
- uid: SharpSDL3.Sdl.RumbleJoystick(System.IntPtr,System.UInt16,System.UInt16,System.UInt32)
  commentId: M:SharpSDL3.Sdl.RumbleJoystick(System.IntPtr,System.UInt16,System.UInt16,System.UInt32)
  id: RumbleJoystick(System.IntPtr,System.UInt16,System.UInt16,System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RumbleJoystick(nint, ushort, ushort, uint)
  nameWithType: Sdl.RumbleJoystick(nint, ushort, ushort, uint)
  fullName: SharpSDL3.Sdl.RumbleJoystick(nint, ushort, ushort, uint)
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RumbleJoystick
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 875
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Start a rumble effect.
  remarks: >-
    Each call to this function cancels any previous rumble effect, and calling

    it with 0 intensity stops any rumbling.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static SdlBool RumbleJoystick(nint joystick, ushort lowFrequencyRumble, ushort highFrequencyRumble, uint durationMs)
    parameters:
    - id: joystick
      type: System.IntPtr
      description: the joystick to vibrate.
    - id: lowFrequencyRumble
      type: System.UInt16
    - id: highFrequencyRumble
      type: System.UInt16
    - id: durationMs
      type: System.UInt32
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if rumble isn't supported on this joystick.
    content.vb: Public Shared Function RumbleJoystick(joystick As IntPtr, lowFrequencyRumble As UShort, highFrequencyRumble As UShort, durationMs As UInteger) As SdlBool
  overload: SharpSDL3.Sdl.RumbleJoystick*
  nameWithType.vb: Sdl.RumbleJoystick(IntPtr, UShort, UShort, UInteger)
  fullName.vb: SharpSDL3.Sdl.RumbleJoystick(System.IntPtr, UShort, UShort, UInteger)
  name.vb: RumbleJoystick(IntPtr, UShort, UShort, UInteger)
- uid: SharpSDL3.Sdl.RumbleJoystickTriggers(System.IntPtr,System.UInt16,System.UInt16,System.UInt32)
  commentId: M:SharpSDL3.Sdl.RumbleJoystickTriggers(System.IntPtr,System.UInt16,System.UInt16,System.UInt32)
  id: RumbleJoystickTriggers(System.IntPtr,System.UInt16,System.UInt16,System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RumbleJoystickTriggers(nint, ushort, ushort, uint)
  nameWithType: Sdl.RumbleJoystickTriggers(nint, ushort, ushort, uint)
  fullName: SharpSDL3.Sdl.RumbleJoystickTriggers(nint, ushort, ushort, uint)
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RumbleJoystickTriggers
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 900
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Start a rumble effect in the joystick's triggers.
  remarks: >-
    Each call to this function cancels any previous trigger rumble effect, and

    calling it with 0 intensity stops any rumbling.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.RumbleJoystick(System.IntPtr%2cSystem.UInt16%2cSystem.UInt16%2cSystem.UInt32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static SdlBool RumbleJoystickTriggers(nint joystick, ushort leftRumble, ushort rightRumble, uint durationMs)
    parameters:
    - id: joystick
      type: System.IntPtr
      description: the joystick to vibrate.
    - id: leftRumble
      type: System.UInt16
    - id: rightRumble
      type: System.UInt16
    - id: durationMs
      type: System.UInt32
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function RumbleJoystickTriggers(joystick As IntPtr, leftRumble As UShort, rightRumble As UShort, durationMs As UInteger) As SdlBool
  overload: SharpSDL3.Sdl.RumbleJoystickTriggers*
  nameWithType.vb: Sdl.RumbleJoystickTriggers(IntPtr, UShort, UShort, UInteger)
  fullName.vb: SharpSDL3.Sdl.RumbleJoystickTriggers(System.IntPtr, UShort, UShort, UInteger)
  name.vb: RumbleJoystickTriggers(IntPtr, UShort, UShort, UInteger)
- uid: SharpSDL3.Sdl.SendJoystickEffect(System.IntPtr,System.IntPtr,System.Int32)
  commentId: M:SharpSDL3.Sdl.SendJoystickEffect(System.IntPtr,System.IntPtr,System.Int32)
  id: SendJoystickEffect(System.IntPtr,System.IntPtr,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SendJoystickEffect(nint, nint, int)
  nameWithType: Sdl.SendJoystickEffect(nint, nint, int)
  fullName: SharpSDL3.Sdl.SendJoystickEffect(nint, nint, int)
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SendJoystickEffect
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 921
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Send a joystick specific effect packet.
  remarks: <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static SdlBool SendJoystickEffect(nint joystick, nint data, int size)
    parameters:
    - id: joystick
      type: System.IntPtr
      description: the joystick to affect.
    - id: data
      type: System.IntPtr
      description: the data to send to the joystick.
    - id: size
      type: System.Int32
      description: the size of the data to send to the joystick.
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SendJoystickEffect(joystick As IntPtr, data As IntPtr, size As Integer) As SdlBool
  overload: SharpSDL3.Sdl.SendJoystickEffect*
  nameWithType.vb: Sdl.SendJoystickEffect(IntPtr, IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.SendJoystickEffect(System.IntPtr, System.IntPtr, Integer)
  name.vb: SendJoystickEffect(IntPtr, IntPtr, Integer)
- uid: SharpSDL3.Sdl.SendJoystickVirtualSensorData(System.IntPtr,SharpSDL3.Enums.SensorType,System.UInt64,System.IntPtr,System.Int32)
  commentId: M:SharpSDL3.Sdl.SendJoystickVirtualSensorData(System.IntPtr,SharpSDL3.Enums.SensorType,System.UInt64,System.IntPtr,System.Int32)
  id: SendJoystickVirtualSensorData(System.IntPtr,SharpSDL3.Enums.SensorType,System.UInt64,System.IntPtr,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SendJoystickVirtualSensorData(nint, SensorType, ulong, nint, int)
  nameWithType: Sdl.SendJoystickVirtualSensorData(nint, SensorType, ulong, nint, int)
  fullName: SharpSDL3.Sdl.SendJoystickVirtualSensorData(nint, SharpSDL3.Enums.SensorType, ulong, nint, int)
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SendJoystickVirtualSensorData
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 954
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Send a sensor update for an opened virtual joystick.
  remarks: >-
    Please note that values set here will not be applied until the next call to

    SDL_UpdateJoysticks, which can either be called

    directly, or can be called indirectly through various other SDL APIs,

    including, but not limited to the following:

    SDL_PollEvent, SDL_PumpEvents,

    SDL_WaitEventTimeout,

    SDL_WaitEvent.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static SdlBool SendJoystickVirtualSensorData(nint joystick, SensorType type, ulong sensorTimestamp, nint data, int numValues)
    parameters:
    - id: joystick
      type: System.IntPtr
      description: the virtual joystick on which to set state.
    - id: type
      type: SharpSDL3.Enums.SensorType
      description: the type of the sensor on the virtual joystick to update.
    - id: sensorTimestamp
      type: System.UInt64
    - id: data
      type: System.IntPtr
      description: the data associated with the sensor reading.
    - id: numValues
      type: System.Int32
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SendJoystickVirtualSensorData(joystick As IntPtr, type As SensorType, sensorTimestamp As ULong, data As IntPtr, numValues As Integer) As SdlBool
  overload: SharpSDL3.Sdl.SendJoystickVirtualSensorData*
  nameWithType.vb: Sdl.SendJoystickVirtualSensorData(IntPtr, SensorType, ULong, IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.SendJoystickVirtualSensorData(System.IntPtr, SharpSDL3.Enums.SensorType, ULong, System.IntPtr, Integer)
  name.vb: SendJoystickVirtualSensorData(IntPtr, SensorType, ULong, IntPtr, Integer)
- uid: SharpSDL3.Sdl.SendJoystickVirtualSensorData(System.IntPtr,SharpSDL3.Enums.SensorType,System.UInt64,System.Single[])
  commentId: M:SharpSDL3.Sdl.SendJoystickVirtualSensorData(System.IntPtr,SharpSDL3.Enums.SensorType,System.UInt64,System.Single[])
  id: SendJoystickVirtualSensorData(System.IntPtr,SharpSDL3.Enums.SensorType,System.UInt64,System.Single[])
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SendJoystickVirtualSensorData(nint, SensorType, ulong, float[])
  nameWithType: Sdl.SendJoystickVirtualSensorData(nint, SensorType, ulong, float[])
  fullName: SharpSDL3.Sdl.SendJoystickVirtualSensorData(nint, SharpSDL3.Enums.SensorType, ulong, float[])
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SendJoystickVirtualSensorData
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 987
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Send a sensor update for an opened virtual joystick.
  remarks: >-
    Please note that values set here will not be applied until the next call to

    SDL_UpdateJoysticks, which can either be called

    directly, or can be called indirectly through various other SDL APIs,

    including, but not limited to the following:

    SDL_PollEvent, SDL_PumpEvents,

    SDL_WaitEventTimeout,

    SDL_WaitEvent.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static SdlBool SendJoystickVirtualSensorData(nint joystick, SensorType type, ulong sensorTimestamp, float[] data)
    parameters:
    - id: joystick
      type: System.IntPtr
      description: the virtual joystick on which to set state.
    - id: type
      type: SharpSDL3.Enums.SensorType
      description: the type of the sensor on the virtual joystick to update.
    - id: sensorTimestamp
      type: System.UInt64
    - id: data
      type: System.Single[]
      description: the data associated with the sensor reading.
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SendJoystickVirtualSensorData(joystick As IntPtr, type As SensorType, sensorTimestamp As ULong, data As Single()) As SdlBool
  overload: SharpSDL3.Sdl.SendJoystickVirtualSensorData*
  nameWithType.vb: Sdl.SendJoystickVirtualSensorData(IntPtr, SensorType, ULong, Single())
  fullName.vb: SharpSDL3.Sdl.SendJoystickVirtualSensorData(System.IntPtr, SharpSDL3.Enums.SensorType, ULong, Single())
  name.vb: SendJoystickVirtualSensorData(IntPtr, SensorType, ULong, Single())
- uid: SharpSDL3.Sdl.SetJoystickEventsEnabled(System.Boolean)
  commentId: M:SharpSDL3.Sdl.SetJoystickEventsEnabled(System.Boolean)
  id: SetJoystickEventsEnabled(System.Boolean)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetJoystickEventsEnabled(bool)
  nameWithType: Sdl.SetJoystickEventsEnabled(bool)
  fullName: SharpSDL3.Sdl.SetJoystickEventsEnabled(bool)
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetJoystickEventsEnabled
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 1021
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set the state of joystick event processing.
  remarks: >-
    If joystick events are disabled, you must call

    SDL_UpdateJoysticks() yourself and check the state

    of the joystick when you want joystick information.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.JoystickEventsEnabled" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.UpdateJoysticks" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void SetJoystickEventsEnabled(bool enabled)
    parameters:
    - id: enabled
      type: System.Boolean
      description: whether to process joystick events or not.
    content.vb: Public Shared Sub SetJoystickEventsEnabled(enabled As Boolean)
  overload: SharpSDL3.Sdl.SetJoystickEventsEnabled*
  nameWithType.vb: Sdl.SetJoystickEventsEnabled(Boolean)
  fullName.vb: SharpSDL3.Sdl.SetJoystickEventsEnabled(Boolean)
  name.vb: SetJoystickEventsEnabled(Boolean)
- uid: SharpSDL3.Sdl.SetJoystickLED(System.IntPtr,System.Byte,System.Byte,System.Byte)
  commentId: M:SharpSDL3.Sdl.SetJoystickLED(System.IntPtr,System.Byte,System.Byte,System.Byte)
  id: SetJoystickLED(System.IntPtr,System.Byte,System.Byte,System.Byte)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetJoystickLED(nint, byte, byte, byte)
  nameWithType: Sdl.SetJoystickLED(nint, byte, byte, byte)
  fullName: SharpSDL3.Sdl.SetJoystickLED(nint, byte, byte, byte)
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetJoystickLED
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 1040
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Update a joystick's LED color.
  remarks: >-
    An example of a joystick LED is the light on the back of a PlayStation 4's

    DualShock 4 controller.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static SdlBool SetJoystickLED(nint joystick, byte red, byte green, byte blue)
    parameters:
    - id: joystick
      type: System.IntPtr
      description: the joystick to update.
    - id: red
      type: System.Byte
      description: the intensity of the red LED.
    - id: green
      type: System.Byte
      description: the intensity of the green LED.
    - id: blue
      type: System.Byte
      description: the intensity of the blue LED.
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetJoystickLED(joystick As IntPtr, red As Byte, green As Byte, blue As Byte) As SdlBool
  overload: SharpSDL3.Sdl.SetJoystickLED*
  nameWithType.vb: Sdl.SetJoystickLED(IntPtr, Byte, Byte, Byte)
  fullName.vb: SharpSDL3.Sdl.SetJoystickLED(System.IntPtr, Byte, Byte, Byte)
  name.vb: SetJoystickLED(IntPtr, Byte, Byte, Byte)
- uid: SharpSDL3.Sdl.SetJoystickPlayerIndex(System.IntPtr,System.Int32)
  commentId: M:SharpSDL3.Sdl.SetJoystickPlayerIndex(System.IntPtr,System.Int32)
  id: SetJoystickPlayerIndex(System.IntPtr,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetJoystickPlayerIndex(nint, int)
  nameWithType: Sdl.SetJoystickPlayerIndex(nint, int)
  fullName: SharpSDL3.Sdl.SetJoystickPlayerIndex(nint, int)
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetJoystickPlayerIndex
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 1058
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set the player index of an opened joystick.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetJoystickPlayerIndex(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static SdlBool SetJoystickPlayerIndex(nint joystick, int playerIndex)
    parameters:
    - id: joystick
      type: System.IntPtr
      description: the SDL_Joystick obtained from SDL_OpenJoystick().
    - id: playerIndex
      type: System.Int32
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetJoystickPlayerIndex(joystick As IntPtr, playerIndex As Integer) As SdlBool
  overload: SharpSDL3.Sdl.SetJoystickPlayerIndex*
  nameWithType.vb: Sdl.SetJoystickPlayerIndex(IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.SetJoystickPlayerIndex(System.IntPtr, Integer)
  name.vb: SetJoystickPlayerIndex(IntPtr, Integer)
- uid: SharpSDL3.Sdl.SetJoystickVirtualAxis(System.IntPtr,System.Int32,System.Int16)
  commentId: M:SharpSDL3.Sdl.SetJoystickVirtualAxis(System.IntPtr,System.Int32,System.Int16)
  id: SetJoystickVirtualAxis(System.IntPtr,System.Int32,System.Int16)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetJoystickVirtualAxis(nint, int, short)
  nameWithType: Sdl.SetJoystickVirtualAxis(nint, int, short)
  fullName: SharpSDL3.Sdl.SetJoystickVirtualAxis(nint, int, short)
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetJoystickVirtualAxis
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 1086
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set the state of an axis on an opened virtual joystick.
  remarks: >-
    Please note that values set here will not be applied until the next call to

    SDL_UpdateJoysticks, which can either be called

    directly, or can be called indirectly through various other SDL APIs,

    including, but not limited to the following:

    SDL_PollEvent, SDL_PumpEvents,

    SDL_WaitEventTimeout,

    SDL_WaitEvent.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static SdlBool SetJoystickVirtualAxis(nint joystick, int axis, short value)
    parameters:
    - id: joystick
      type: System.IntPtr
      description: the virtual joystick on which to set state.
    - id: axis
      type: System.Int32
      description: the index of the axis on the virtual joystick to update.
    - id: value
      type: System.Int16
      description: the new value for the specified axis.
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetJoystickVirtualAxis(joystick As IntPtr, axis As Integer, value As Short) As SdlBool
  overload: SharpSDL3.Sdl.SetJoystickVirtualAxis*
  nameWithType.vb: Sdl.SetJoystickVirtualAxis(IntPtr, Integer, Short)
  fullName.vb: SharpSDL3.Sdl.SetJoystickVirtualAxis(System.IntPtr, Integer, Short)
  name.vb: SetJoystickVirtualAxis(IntPtr, Integer, Short)
- uid: SharpSDL3.Sdl.SetJoystickVirtualBall(System.IntPtr,System.Int32,System.Int16,System.Int16)
  commentId: M:SharpSDL3.Sdl.SetJoystickVirtualBall(System.IntPtr,System.Int32,System.Int16,System.Int16)
  id: SetJoystickVirtualBall(System.IntPtr,System.Int32,System.Int16,System.Int16)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetJoystickVirtualBall(nint, int, short, short)
  nameWithType: Sdl.SetJoystickVirtualBall(nint, int, short, short)
  fullName: SharpSDL3.Sdl.SetJoystickVirtualBall(nint, int, short, short)
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetJoystickVirtualBall
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 1115
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Generate ball motion on an opened virtual joystick.
  remarks: >-
    Please note that values set here will not be applied until the next call to

    SDL_UpdateJoysticks, which can either be called

    directly, or can be called indirectly through various other SDL APIs,

    including, but not limited to the following:

    SDL_PollEvent, SDL_PumpEvents,

    SDL_WaitEventTimeout,

    SDL_WaitEvent.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static SdlBool SetJoystickVirtualBall(nint joystick, int ball, short xrel, short yrel)
    parameters:
    - id: joystick
      type: System.IntPtr
      description: the virtual joystick on which to set state.
    - id: ball
      type: System.Int32
      description: the index of the ball on the virtual joystick to update.
    - id: xrel
      type: System.Int16
      description: the relative motion on the X axis.
    - id: yrel
      type: System.Int16
      description: the relative motion on the Y axis.
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetJoystickVirtualBall(joystick As IntPtr, ball As Integer, xrel As Short, yrel As Short) As SdlBool
  overload: SharpSDL3.Sdl.SetJoystickVirtualBall*
  nameWithType.vb: Sdl.SetJoystickVirtualBall(IntPtr, Integer, Short, Short)
  fullName.vb: SharpSDL3.Sdl.SetJoystickVirtualBall(System.IntPtr, Integer, Short, Short)
  name.vb: SetJoystickVirtualBall(IntPtr, Integer, Short, Short)
- uid: SharpSDL3.Sdl.SetJoystickVirtualButton(System.IntPtr,System.Int32,SharpSDL3.Structs.SdlBool)
  commentId: M:SharpSDL3.Sdl.SetJoystickVirtualButton(System.IntPtr,System.Int32,SharpSDL3.Structs.SdlBool)
  id: SetJoystickVirtualButton(System.IntPtr,System.Int32,SharpSDL3.Structs.SdlBool)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetJoystickVirtualButton(nint, int, SdlBool)
  nameWithType: Sdl.SetJoystickVirtualButton(nint, int, SdlBool)
  fullName: SharpSDL3.Sdl.SetJoystickVirtualButton(nint, int, SharpSDL3.Structs.SdlBool)
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetJoystickVirtualButton
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 1143
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set the state of a button on an opened virtual joystick.
  remarks: >-
    Please note that values set here will not be applied until the next call to

    SDL_UpdateJoysticks, which can either be called

    directly, or can be called indirectly through various other SDL APIs,

    including, but not limited to the following:

    SDL_PollEvent, SDL_PumpEvents,

    SDL_WaitEventTimeout,

    SDL_WaitEvent.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static SdlBool SetJoystickVirtualButton(nint joystick, int button, SdlBool down)
    parameters:
    - id: joystick
      type: System.IntPtr
      description: the virtual joystick on which to set state.
    - id: button
      type: System.Int32
      description: the index of the button on the virtual joystick to update.
    - id: down
      type: SharpSDL3.Structs.SdlBool
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the button is pressed, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetJoystickVirtualButton(joystick As IntPtr, button As Integer, down As SdlBool) As SdlBool
  overload: SharpSDL3.Sdl.SetJoystickVirtualButton*
  nameWithType.vb: Sdl.SetJoystickVirtualButton(IntPtr, Integer, SdlBool)
  fullName.vb: SharpSDL3.Sdl.SetJoystickVirtualButton(System.IntPtr, Integer, SharpSDL3.Structs.SdlBool)
  name.vb: SetJoystickVirtualButton(IntPtr, Integer, SdlBool)
- uid: SharpSDL3.Sdl.SetJoystickVirtualHat(System.IntPtr,System.Int32,System.Byte)
  commentId: M:SharpSDL3.Sdl.SetJoystickVirtualHat(System.IntPtr,System.Int32,System.Byte)
  id: SetJoystickVirtualHat(System.IntPtr,System.Int32,System.Byte)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetJoystickVirtualHat(nint, int, byte)
  nameWithType: Sdl.SetJoystickVirtualHat(nint, int, byte)
  fullName: SharpSDL3.Sdl.SetJoystickVirtualHat(nint, int, byte)
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetJoystickVirtualHat
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 1171
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set the state of a hat on an opened virtual joystick.
  remarks: >-
    Please note that values set here will not be applied until the next call to

    SDL_UpdateJoysticks, which can either be called

    directly, or can be called indirectly through various other SDL APIs,

    including, but not limited to the following:

    SDL_PollEvent, SDL_PumpEvents,

    SDL_WaitEventTimeout,

    SDL_WaitEvent.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static SdlBool SetJoystickVirtualHat(nint joystick, int hat, byte value)
    parameters:
    - id: joystick
      type: System.IntPtr
      description: the virtual joystick on which to set state.
    - id: hat
      type: System.Int32
      description: the index of the hat on the virtual joystick to update.
    - id: value
      type: System.Byte
      description: the new value for the specified hat.
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetJoystickVirtualHat(joystick As IntPtr, hat As Integer, value As Byte) As SdlBool
  overload: SharpSDL3.Sdl.SetJoystickVirtualHat*
  nameWithType.vb: Sdl.SetJoystickVirtualHat(IntPtr, Integer, Byte)
  fullName.vb: SharpSDL3.Sdl.SetJoystickVirtualHat(System.IntPtr, Integer, Byte)
  name.vb: SetJoystickVirtualHat(IntPtr, Integer, Byte)
- uid: SharpSDL3.Sdl.SetJoystickVirtualTouchpad(System.IntPtr,System.Int32,System.Int32,SharpSDL3.Structs.SdlBool,System.Single,System.Single,System.Single)
  commentId: M:SharpSDL3.Sdl.SetJoystickVirtualTouchpad(System.IntPtr,System.Int32,System.Int32,SharpSDL3.Structs.SdlBool,System.Single,System.Single,System.Single)
  id: SetJoystickVirtualTouchpad(System.IntPtr,System.Int32,System.Int32,SharpSDL3.Structs.SdlBool,System.Single,System.Single,System.Single)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetJoystickVirtualTouchpad(nint, int, int, SdlBool, float, float, float)
  nameWithType: Sdl.SetJoystickVirtualTouchpad(nint, int, int, SdlBool, float, float, float)
  fullName: SharpSDL3.Sdl.SetJoystickVirtualTouchpad(nint, int, int, SharpSDL3.Structs.SdlBool, float, float, float)
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetJoystickVirtualTouchpad
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 1203
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set touchpad finger state on an opened virtual joystick.
  remarks: >-
    Please note that values set here will not be applied until the next call to

    SDL_UpdateJoysticks, which can either be called

    directly, or can be called indirectly through various other SDL APIs,

    including, but not limited to the following:

    SDL_PollEvent, SDL_PumpEvents,

    SDL_WaitEventTimeout,

    SDL_WaitEvent.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static SdlBool SetJoystickVirtualTouchpad(nint joystick, int touchpad, int finger, SdlBool down, float x, float y, float pressure)
    parameters:
    - id: joystick
      type: System.IntPtr
      description: the virtual joystick on which to set state.
    - id: touchpad
      type: System.Int32
      description: the index of the touchpad on the virtual joystick to update.
    - id: finger
      type: System.Int32
      description: the index of the finger on the touchpad to set.
    - id: down
      type: SharpSDL3.Structs.SdlBool
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the finger is pressed, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if the finger is released.
    - id: x
      type: System.Single
      description: the x coordinate of the finger on the touchpad, normalized 0 to 1, with the origin in the upper left.
    - id: y
      type: System.Single
      description: the y coordinate of the finger on the touchpad, normalized 0 to 1, with the origin in the upper left.
    - id: pressure
      type: System.Single
      description: the pressure of the finger.
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetJoystickVirtualTouchpad(joystick As IntPtr, touchpad As Integer, finger As Integer, down As SdlBool, x As Single, y As Single, pressure As Single) As SdlBool
  overload: SharpSDL3.Sdl.SetJoystickVirtualTouchpad*
  nameWithType.vb: Sdl.SetJoystickVirtualTouchpad(IntPtr, Integer, Integer, SdlBool, Single, Single, Single)
  fullName.vb: SharpSDL3.Sdl.SetJoystickVirtualTouchpad(System.IntPtr, Integer, Integer, SharpSDL3.Structs.SdlBool, Single, Single, Single)
  name.vb: SetJoystickVirtualTouchpad(IntPtr, Integer, Integer, SdlBool, Single, Single, Single)
- uid: SharpSDL3.Sdl.UnlockJoysticks
  commentId: M:SharpSDL3.Sdl.UnlockJoysticks
  id: UnlockJoysticks
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: UnlockJoysticks()
  nameWithType: Sdl.UnlockJoysticks()
  fullName: SharpSDL3.Sdl.UnlockJoysticks()
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: UnlockJoysticks
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 1222
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Unlocking for atomic access to the joystick API.
  remarks: <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static void UnlockJoysticks()
    content.vb: Public Shared Sub UnlockJoysticks()
  overload: SharpSDL3.Sdl.UnlockJoysticks*
- uid: SharpSDL3.Sdl.UpdateJoysticks
  commentId: M:SharpSDL3.Sdl.UpdateJoysticks
  id: UpdateJoysticks
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: UpdateJoysticks()
  nameWithType: Sdl.UpdateJoysticks()
  fullName: SharpSDL3.Sdl.UpdateJoysticks()
  type: Method
  source:
    remote:
      path: SDL3/JoySticks.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: UpdateJoysticks
    path: ../../repos/SDL3-CS/SDL3/JoySticks.cs
    startLine: 1233
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Update the current state of the open joysticks.
  remarks: >-
    This is called automatically by the event loop if any joystick events are

    enabled.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static void UpdateJoysticks()
    content.vb: Public Shared Sub UpdateJoysticks()
  overload: SharpSDL3.Sdl.UpdateJoysticks*
- uid: SharpSDL3.Sdl.GetDefaultLogOutputFunction
  commentId: M:SharpSDL3.Sdl.GetDefaultLogOutputFunction
  id: GetDefaultLogOutputFunction
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetDefaultLogOutputFunction()
  nameWithType: Sdl.GetDefaultLogOutputFunction()
  fullName: SharpSDL3.Sdl.GetDefaultLogOutputFunction()
  type: Method
  source:
    remote:
      path: SDL3/Logger.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetDefaultLogOutputFunction
    path: ../../repos/SDL3-CS/SDL3/Logger.cs
    startLine: 19
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the default log output function.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetLogOutputFunction(SharpSDL3.Delegates.SdlLogOutputFunction%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetLogOutputFunction(SharpSDL3.Delegates.SdlLogOutputFunction%40%2cSystem.IntPtr%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static Delegates.SdlLogOutputFunction GetDefaultLogOutputFunction()
    return:
      type: SharpSDL3.Delegates.SdlLogOutputFunction
      description: Returns the default logoutput callback.
    content.vb: Public Shared Function GetDefaultLogOutputFunction() As Delegates.SdlLogOutputFunction
  overload: SharpSDL3.Sdl.GetDefaultLogOutputFunction*
- uid: SharpSDL3.Sdl.GetLogOutputFunction(SharpSDL3.Delegates.SdlLogOutputFunction@,System.IntPtr@)
  commentId: M:SharpSDL3.Sdl.GetLogOutputFunction(SharpSDL3.Delegates.SdlLogOutputFunction@,System.IntPtr@)
  id: GetLogOutputFunction(SharpSDL3.Delegates.SdlLogOutputFunction@,System.IntPtr@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetLogOutputFunction(out SdlLogOutputFunction, out nint)
  nameWithType: Sdl.GetLogOutputFunction(out Delegates.SdlLogOutputFunction, out nint)
  fullName: SharpSDL3.Sdl.GetLogOutputFunction(out SharpSDL3.Delegates.SdlLogOutputFunction, out nint)
  type: Method
  source:
    remote:
      path: SDL3/Logger.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetLogOutputFunction
    path: ../../repos/SDL3-CS/SDL3/Logger.cs
    startLine: 35
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the current log output function.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetDefaultLogOutputFunction" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetLogOutputFunction(SharpSDL3.Delegates.SdlLogOutputFunction%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void GetLogOutputFunction(out Delegates.SdlLogOutputFunction callback, out nint userdata)
    parameters:
    - id: callback
      type: SharpSDL3.Delegates.SdlLogOutputFunction
      description: an SDL_LogOutputFunction filled in with the current log callback.
    - id: userdata
      type: System.IntPtr
      description: a pointer filled in with the pointer that is passed to callback.
    content.vb: Public Shared Sub GetLogOutputFunction(callback As Delegates.SdlLogOutputFunction, userdata As IntPtr)
  overload: SharpSDL3.Sdl.GetLogOutputFunction*
  nameWithType.vb: Sdl.GetLogOutputFunction(Delegates.SdlLogOutputFunction, IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetLogOutputFunction(SharpSDL3.Delegates.SdlLogOutputFunction, System.IntPtr)
  name.vb: GetLogOutputFunction(SdlLogOutputFunction, IntPtr)
- uid: SharpSDL3.Sdl.GetLogPriority(SharpSDL3.Enums.LogCategory)
  commentId: M:SharpSDL3.Sdl.GetLogPriority(SharpSDL3.Enums.LogCategory)
  id: GetLogPriority(SharpSDL3.Enums.LogCategory)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetLogPriority(LogCategory)
  nameWithType: Sdl.GetLogPriority(LogCategory)
  fullName: SharpSDL3.Sdl.GetLogPriority(SharpSDL3.Enums.LogCategory)
  type: Method
  source:
    remote:
      path: SDL3/Logger.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetLogPriority
    path: ../../repos/SDL3-CS/SDL3/Logger.cs
    startLine: 52
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the priority of a particular log category.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetLogPriority(SharpSDL3.Enums.LogCategory%2cSharpSDL3.Enums.LogPriority)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static LogPriority GetLogPriority(LogCategory category)
    parameters:
    - id: category
      type: SharpSDL3.Enums.LogCategory
      description: the category to query.
    return:
      type: SharpSDL3.Enums.LogPriority
      description: Returns theSDL_LogPriority for the requested category.
    content.vb: Public Shared Function GetLogPriority(category As LogCategory) As LogPriority
  overload: SharpSDL3.Sdl.GetLogPriority*
- uid: SharpSDL3.Sdl.Log(System.String)
  commentId: M:SharpSDL3.Sdl.Log(System.String)
  id: Log(System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: Log(string)
  nameWithType: Sdl.Log(string)
  fullName: SharpSDL3.Sdl.Log(string)
  type: Method
  source:
    remote:
      path: SDL3/Logger.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: Log
    path: ../../repos/SDL3-CS/SDL3/Logger.cs
    startLine: 59
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static void Log(string fmt)
    parameters:
    - id: fmt
      type: System.String
    content.vb: Public Shared Sub Log(fmt As String)
  overload: SharpSDL3.Sdl.Log*
  nameWithType.vb: Sdl.Log(String)
  fullName.vb: SharpSDL3.Sdl.Log(String)
  name.vb: Log(String)
- uid: SharpSDL3.Sdl.LogCritical(SharpSDL3.Enums.LogCategory,System.String)
  commentId: M:SharpSDL3.Sdl.LogCritical(SharpSDL3.Enums.LogCategory,System.String)
  id: LogCritical(SharpSDL3.Enums.LogCategory,System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LogCritical(LogCategory, string)
  nameWithType: Sdl.LogCritical(LogCategory, string)
  fullName: SharpSDL3.Sdl.LogCritical(SharpSDL3.Enums.LogCategory, string)
  type: Method
  source:
    remote:
      path: SDL3/Logger.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LogCritical
    path: ../../repos/SDL3-CS/SDL3/Logger.cs
    startLine: 86
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Log a message with SDL_LOG_PRIORITY_CRITICAL.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.Log(System.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.LogDebug(SharpSDL3.Enums.LogCategory%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.LogError(SharpSDL3.Enums.LogCategory%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.LogInfo(SharpSDL3.Enums.LogCategory%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.LogMessage(SharpSDL3.Enums.LogCategory%2cSharpSDL3.Enums.LogPriority%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    LogMessageV

    <xref href="SharpSDL3.Sdl.LogTrace(SharpSDL3.Enums.LogCategory%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.LogVerbose(SharpSDL3.Enums.LogCategory%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.LogWarn(SharpSDL3.Enums.LogCategory%2cSystem.String)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void LogCritical(LogCategory category, string fmt)
    parameters:
    - id: category
      type: SharpSDL3.Enums.LogCategory
      description: the category of the message.
    - id: fmt
      type: System.String
      description: a printf() style message format string.
    content.vb: Public Shared Sub LogCritical(category As LogCategory, fmt As String)
  overload: SharpSDL3.Sdl.LogCritical*
  nameWithType.vb: Sdl.LogCritical(LogCategory, String)
  fullName.vb: SharpSDL3.Sdl.LogCritical(SharpSDL3.Enums.LogCategory, String)
  name.vb: LogCritical(LogCategory, String)
- uid: SharpSDL3.Sdl.LogDebug(SharpSDL3.Enums.LogCategory,System.String)
  commentId: M:SharpSDL3.Sdl.LogDebug(SharpSDL3.Enums.LogCategory,System.String)
  id: LogDebug(SharpSDL3.Enums.LogCategory,System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LogDebug(LogCategory, string)
  nameWithType: Sdl.LogDebug(LogCategory, string)
  fullName: SharpSDL3.Sdl.LogDebug(SharpSDL3.Enums.LogCategory, string)
  type: Method
  source:
    remote:
      path: SDL3/Logger.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LogDebug
    path: ../../repos/SDL3-CS/SDL3/Logger.cs
    startLine: 112
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Log a message with SDL_LOG_PRIORITY_DEBUG.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.Log(System.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.LogCritical(SharpSDL3.Enums.LogCategory%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.LogError(SharpSDL3.Enums.LogCategory%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.LogInfo(SharpSDL3.Enums.LogCategory%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.LogMessage(SharpSDL3.Enums.LogCategory%2cSharpSDL3.Enums.LogPriority%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    LogMessageV

    <xref href="SharpSDL3.Sdl.LogTrace(SharpSDL3.Enums.LogCategory%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.LogVerbose(SharpSDL3.Enums.LogCategory%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.LogWarn(SharpSDL3.Enums.LogCategory%2cSystem.String)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void LogDebug(LogCategory category, string fmt)
    parameters:
    - id: category
      type: SharpSDL3.Enums.LogCategory
      description: the category of the message.
    - id: fmt
      type: System.String
      description: a printf() style message format string.
    content.vb: Public Shared Sub LogDebug(category As LogCategory, fmt As String)
  overload: SharpSDL3.Sdl.LogDebug*
  nameWithType.vb: Sdl.LogDebug(LogCategory, String)
  fullName.vb: SharpSDL3.Sdl.LogDebug(SharpSDL3.Enums.LogCategory, String)
  name.vb: LogDebug(LogCategory, String)
- uid: SharpSDL3.Sdl.LogError(SharpSDL3.Enums.LogCategory,System.String)
  commentId: M:SharpSDL3.Sdl.LogError(SharpSDL3.Enums.LogCategory,System.String)
  id: LogError(SharpSDL3.Enums.LogCategory,System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LogError(LogCategory, string)
  nameWithType: Sdl.LogError(LogCategory, string)
  fullName: SharpSDL3.Sdl.LogError(SharpSDL3.Enums.LogCategory, string)
  type: Method
  source:
    remote:
      path: SDL3/Logger.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LogError
    path: ../../repos/SDL3-CS/SDL3/Logger.cs
    startLine: 138
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Log a message with SDL_LOG_PRIORITY_ERROR.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.Log(System.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.LogCritical(SharpSDL3.Enums.LogCategory%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.LogDebug(SharpSDL3.Enums.LogCategory%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.LogInfo(SharpSDL3.Enums.LogCategory%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.LogMessage(SharpSDL3.Enums.LogCategory%2cSharpSDL3.Enums.LogPriority%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    LogMessageV

    <xref href="SharpSDL3.Sdl.LogTrace(SharpSDL3.Enums.LogCategory%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.LogVerbose(SharpSDL3.Enums.LogCategory%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.LogWarn(SharpSDL3.Enums.LogCategory%2cSystem.String)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void LogError(LogCategory category, string fmt)
    parameters:
    - id: category
      type: SharpSDL3.Enums.LogCategory
      description: the category of the message.
    - id: fmt
      type: System.String
      description: a printf() style message format string.
    content.vb: Public Shared Sub LogError(category As LogCategory, fmt As String)
  overload: SharpSDL3.Sdl.LogError*
  nameWithType.vb: Sdl.LogError(LogCategory, String)
  fullName.vb: SharpSDL3.Sdl.LogError(SharpSDL3.Enums.LogCategory, String)
  name.vb: LogError(LogCategory, String)
- uid: SharpSDL3.Sdl.LogInfo(SharpSDL3.Enums.LogCategory,System.String)
  commentId: M:SharpSDL3.Sdl.LogInfo(SharpSDL3.Enums.LogCategory,System.String)
  id: LogInfo(SharpSDL3.Enums.LogCategory,System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LogInfo(LogCategory, string)
  nameWithType: Sdl.LogInfo(LogCategory, string)
  fullName: SharpSDL3.Sdl.LogInfo(SharpSDL3.Enums.LogCategory, string)
  type: Method
  source:
    remote:
      path: SDL3/Logger.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LogInfo
    path: ../../repos/SDL3-CS/SDL3/Logger.cs
    startLine: 164
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Log a message with SDL_LOG_PRIORITY_INFO.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.Log(System.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.LogCritical(SharpSDL3.Enums.LogCategory%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.LogDebug(SharpSDL3.Enums.LogCategory%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.LogError(SharpSDL3.Enums.LogCategory%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.LogMessage(SharpSDL3.Enums.LogCategory%2cSharpSDL3.Enums.LogPriority%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    LogMessageV

    <xref href="SharpSDL3.Sdl.LogTrace(SharpSDL3.Enums.LogCategory%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.LogVerbose(SharpSDL3.Enums.LogCategory%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.LogWarn(SharpSDL3.Enums.LogCategory%2cSystem.String)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void LogInfo(LogCategory category, string fmt)
    parameters:
    - id: category
      type: SharpSDL3.Enums.LogCategory
      description: the category of the message.
    - id: fmt
      type: System.String
      description: a printf() style message format string.
    content.vb: Public Shared Sub LogInfo(category As LogCategory, fmt As String)
  overload: SharpSDL3.Sdl.LogInfo*
  nameWithType.vb: Sdl.LogInfo(LogCategory, String)
  fullName.vb: SharpSDL3.Sdl.LogInfo(SharpSDL3.Enums.LogCategory, String)
  name.vb: LogInfo(LogCategory, String)
- uid: SharpSDL3.Sdl.LogMessage(SharpSDL3.Enums.LogCategory,SharpSDL3.Enums.LogPriority,System.String)
  commentId: M:SharpSDL3.Sdl.LogMessage(SharpSDL3.Enums.LogCategory,SharpSDL3.Enums.LogPriority,System.String)
  id: LogMessage(SharpSDL3.Enums.LogCategory,SharpSDL3.Enums.LogPriority,System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LogMessage(LogCategory, LogPriority, string)
  nameWithType: Sdl.LogMessage(LogCategory, LogPriority, string)
  fullName: SharpSDL3.Sdl.LogMessage(SharpSDL3.Enums.LogCategory, SharpSDL3.Enums.LogPriority, string)
  type: Method
  source:
    remote:
      path: SDL3/Logger.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LogMessage
    path: ../../repos/SDL3-CS/SDL3/Logger.cs
    startLine: 191
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Log a message with the specified category and priority.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.Log(System.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.LogCritical(SharpSDL3.Enums.LogCategory%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.LogDebug(SharpSDL3.Enums.LogCategory%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.LogError(SharpSDL3.Enums.LogCategory%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.LogInfo(SharpSDL3.Enums.LogCategory%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    LogMessageV

    <xref href="SharpSDL3.Sdl.LogTrace(SharpSDL3.Enums.LogCategory%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.LogVerbose(SharpSDL3.Enums.LogCategory%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.LogWarn(SharpSDL3.Enums.LogCategory%2cSystem.String)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void LogMessage(LogCategory category, LogPriority priority, string fmt)
    parameters:
    - id: category
      type: SharpSDL3.Enums.LogCategory
      description: the category of the message.
    - id: priority
      type: SharpSDL3.Enums.LogPriority
      description: the priority of the message.
    - id: fmt
      type: System.String
      description: a printf() style message format string.
    content.vb: Public Shared Sub LogMessage(category As LogCategory, priority As LogPriority, fmt As String)
  overload: SharpSDL3.Sdl.LogMessage*
  nameWithType.vb: Sdl.LogMessage(LogCategory, LogPriority, String)
  fullName.vb: SharpSDL3.Sdl.LogMessage(SharpSDL3.Enums.LogCategory, SharpSDL3.Enums.LogPriority, String)
  name.vb: LogMessage(LogCategory, LogPriority, String)
- uid: SharpSDL3.Sdl.LogTrace(SharpSDL3.Enums.LogCategory,System.String)
  commentId: M:SharpSDL3.Sdl.LogTrace(SharpSDL3.Enums.LogCategory,System.String)
  id: LogTrace(SharpSDL3.Enums.LogCategory,System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LogTrace(LogCategory, string)
  nameWithType: Sdl.LogTrace(LogCategory, string)
  fullName: SharpSDL3.Sdl.LogTrace(SharpSDL3.Enums.LogCategory, string)
  type: Method
  source:
    remote:
      path: SDL3/Logger.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LogTrace
    path: ../../repos/SDL3-CS/SDL3/Logger.cs
    startLine: 218
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Log a message with SDL_LOG_PRIORITY_TRACE.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.Log(System.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.LogCritical(SharpSDL3.Enums.LogCategory%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.LogDebug(SharpSDL3.Enums.LogCategory%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.LogError(SharpSDL3.Enums.LogCategory%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.LogInfo(SharpSDL3.Enums.LogCategory%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.LogMessage(SharpSDL3.Enums.LogCategory%2cSharpSDL3.Enums.LogPriority%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    LogMessageV

    <xref href="SharpSDL3.Sdl.LogTrace(SharpSDL3.Enums.LogCategory%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.LogVerbose(SharpSDL3.Enums.LogCategory%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.LogWarn(SharpSDL3.Enums.LogCategory%2cSystem.String)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void LogTrace(LogCategory category, string fmt)
    parameters:
    - id: category
      type: SharpSDL3.Enums.LogCategory
      description: the category of the message.
    - id: fmt
      type: System.String
      description: a printf() style message format string.
    content.vb: Public Shared Sub LogTrace(category As LogCategory, fmt As String)
  overload: SharpSDL3.Sdl.LogTrace*
  nameWithType.vb: Sdl.LogTrace(LogCategory, String)
  fullName.vb: SharpSDL3.Sdl.LogTrace(SharpSDL3.Enums.LogCategory, String)
  name.vb: LogTrace(LogCategory, String)
- uid: SharpSDL3.Sdl.LogVerbose(SharpSDL3.Enums.LogCategory,System.String)
  commentId: M:SharpSDL3.Sdl.LogVerbose(SharpSDL3.Enums.LogCategory,System.String)
  id: LogVerbose(SharpSDL3.Enums.LogCategory,System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LogVerbose(LogCategory, string)
  nameWithType: Sdl.LogVerbose(LogCategory, string)
  fullName: SharpSDL3.Sdl.LogVerbose(SharpSDL3.Enums.LogCategory, string)
  type: Method
  source:
    remote:
      path: SDL3/Logger.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LogVerbose
    path: ../../repos/SDL3-CS/SDL3/Logger.cs
    startLine: 243
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Log a message with SDL_LOG_PRIORITY_VERBOSE.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.Log(System.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.LogCritical(SharpSDL3.Enums.LogCategory%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.LogDebug(SharpSDL3.Enums.LogCategory%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.LogError(SharpSDL3.Enums.LogCategory%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.LogInfo(SharpSDL3.Enums.LogCategory%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.LogMessage(SharpSDL3.Enums.LogCategory%2cSharpSDL3.Enums.LogPriority%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    LogMessageV

    <xref href="SharpSDL3.Sdl.LogWarn(SharpSDL3.Enums.LogCategory%2cSystem.String)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void LogVerbose(LogCategory category, string fmt)
    parameters:
    - id: category
      type: SharpSDL3.Enums.LogCategory
      description: the category of the message.
    - id: fmt
      type: System.String
      description: a printf() style message format string.
    content.vb: Public Shared Sub LogVerbose(category As LogCategory, fmt As String)
  overload: SharpSDL3.Sdl.LogVerbose*
  nameWithType.vb: Sdl.LogVerbose(LogCategory, String)
  fullName.vb: SharpSDL3.Sdl.LogVerbose(SharpSDL3.Enums.LogCategory, String)
  name.vb: LogVerbose(LogCategory, String)
- uid: SharpSDL3.Sdl.LogWarn(SharpSDL3.Enums.LogCategory,System.String)
  commentId: M:SharpSDL3.Sdl.LogWarn(SharpSDL3.Enums.LogCategory,System.String)
  id: LogWarn(SharpSDL3.Enums.LogCategory,System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LogWarn(LogCategory, string)
  nameWithType: Sdl.LogWarn(LogCategory, string)
  fullName: SharpSDL3.Sdl.LogWarn(SharpSDL3.Enums.LogCategory, string)
  type: Method
  source:
    remote:
      path: SDL3/Logger.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LogWarn
    path: ../../repos/SDL3-CS/SDL3/Logger.cs
    startLine: 269
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Log a message with SDL_LOG_PRIORITY_WARN.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.Log(System.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.LogCritical(SharpSDL3.Enums.LogCategory%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.LogDebug(SharpSDL3.Enums.LogCategory%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.LogError(SharpSDL3.Enums.LogCategory%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.LogInfo(SharpSDL3.Enums.LogCategory%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.LogMessage(SharpSDL3.Enums.LogCategory%2cSharpSDL3.Enums.LogPriority%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    LogMessageV

    <xref href="SharpSDL3.Sdl.LogTrace(SharpSDL3.Enums.LogCategory%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.LogVerbose(SharpSDL3.Enums.LogCategory%2cSystem.String)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void LogWarn(LogCategory category, string fmt)
    parameters:
    - id: category
      type: SharpSDL3.Enums.LogCategory
      description: the category of the message.
    - id: fmt
      type: System.String
      description: a printf() style message format string.
    content.vb: Public Shared Sub LogWarn(category As LogCategory, fmt As String)
  overload: SharpSDL3.Sdl.LogWarn*
  nameWithType.vb: Sdl.LogWarn(LogCategory, String)
  fullName.vb: SharpSDL3.Sdl.LogWarn(SharpSDL3.Enums.LogCategory, String)
  name.vb: LogWarn(LogCategory, String)
- uid: SharpSDL3.Sdl.ResetLogPriorities
  commentId: M:SharpSDL3.Sdl.ResetLogPriorities
  id: ResetLogPriorities
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ResetLogPriorities()
  nameWithType: Sdl.ResetLogPriorities()
  fullName: SharpSDL3.Sdl.ResetLogPriorities()
  type: Method
  source:
    remote:
      path: SDL3/Logger.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ResetLogPriorities
    path: ../../repos/SDL3-CS/SDL3/Logger.cs
    startLine: 285
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Reset all priorities to default.
  remarks: >-
    This is called by <xref href="SharpSDL3.Sdl.Quit" data-throw-if-not-resolved="false"></xref>.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetLogPriorities(SharpSDL3.Enums.LogPriority)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetLogPriority(SharpSDL3.Enums.LogCategory%2cSharpSDL3.Enums.LogPriority)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void ResetLogPriorities()
    content.vb: Public Shared Sub ResetLogPriorities()
  overload: SharpSDL3.Sdl.ResetLogPriorities*
- uid: SharpSDL3.Sdl.SetLogOutputFunction(SharpSDL3.Delegates.SdlLogOutputFunction,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.SetLogOutputFunction(SharpSDL3.Delegates.SdlLogOutputFunction,System.IntPtr)
  id: SetLogOutputFunction(SharpSDL3.Delegates.SdlLogOutputFunction,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetLogOutputFunction(SdlLogOutputFunction, nint)
  nameWithType: Sdl.SetLogOutputFunction(Delegates.SdlLogOutputFunction, nint)
  fullName: SharpSDL3.Sdl.SetLogOutputFunction(SharpSDL3.Delegates.SdlLogOutputFunction, nint)
  type: Method
  source:
    remote:
      path: SDL3/Logger.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetLogOutputFunction
    path: ../../repos/SDL3-CS/SDL3/Logger.cs
    startLine: 300
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Replace the default log output function with one of your own.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetDefaultLogOutputFunction" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetLogOutputFunction(SharpSDL3.Delegates.SdlLogOutputFunction%40%2cSystem.IntPtr%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void SetLogOutputFunction(Delegates.SdlLogOutputFunction callback, nint userdata)
    parameters:
    - id: callback
      type: SharpSDL3.Delegates.SdlLogOutputFunction
      description: an SDL_LogOutputFunction to call instead of the default.
    - id: userdata
      type: System.IntPtr
      description: a pointer that is passed to callback.
    content.vb: Public Shared Sub SetLogOutputFunction(callback As Delegates.SdlLogOutputFunction, userdata As IntPtr)
  overload: SharpSDL3.Sdl.SetLogOutputFunction*
  nameWithType.vb: Sdl.SetLogOutputFunction(Delegates.SdlLogOutputFunction, IntPtr)
  fullName.vb: SharpSDL3.Sdl.SetLogOutputFunction(SharpSDL3.Delegates.SdlLogOutputFunction, System.IntPtr)
  name.vb: SetLogOutputFunction(SdlLogOutputFunction, IntPtr)
- uid: SharpSDL3.Sdl.SetLogPriorities(SharpSDL3.Enums.LogPriority)
  commentId: M:SharpSDL3.Sdl.SetLogPriorities(SharpSDL3.Enums.LogPriority)
  id: SetLogPriorities(SharpSDL3.Enums.LogPriority)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetLogPriorities(LogPriority)
  nameWithType: Sdl.SetLogPriorities(LogPriority)
  fullName: SharpSDL3.Sdl.SetLogPriorities(SharpSDL3.Enums.LogPriority)
  type: Method
  source:
    remote:
      path: SDL3/Logger.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetLogPriorities
    path: ../../repos/SDL3-CS/SDL3/Logger.cs
    startLine: 307
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static void SetLogPriorities(LogPriority priority)
    parameters:
    - id: priority
      type: SharpSDL3.Enums.LogPriority
    content.vb: Public Shared Sub SetLogPriorities(priority As LogPriority)
  overload: SharpSDL3.Sdl.SetLogPriorities*
- uid: SharpSDL3.Sdl.SetLogPriority(SharpSDL3.Enums.LogCategory,SharpSDL3.Enums.LogPriority)
  commentId: M:SharpSDL3.Sdl.SetLogPriority(SharpSDL3.Enums.LogCategory,SharpSDL3.Enums.LogPriority)
  id: SetLogPriority(SharpSDL3.Enums.LogCategory,SharpSDL3.Enums.LogPriority)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetLogPriority(LogCategory, LogPriority)
  nameWithType: Sdl.SetLogPriority(LogCategory, LogPriority)
  fullName: SharpSDL3.Sdl.SetLogPriority(SharpSDL3.Enums.LogCategory, SharpSDL3.Enums.LogPriority)
  type: Method
  source:
    remote:
      path: SDL3/Logger.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetLogPriority
    path: ../../repos/SDL3-CS/SDL3/Logger.cs
    startLine: 326
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set the priority of a particular log category.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetLogPriority(SharpSDL3.Enums.LogCategory)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.ResetLogPriorities" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetLogPriorities(SharpSDL3.Enums.LogPriority)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void SetLogPriority(LogCategory category, LogPriority priority)
    parameters:
    - id: category
      type: SharpSDL3.Enums.LogCategory
      description: the category to assign a priority to.
    - id: priority
      type: SharpSDL3.Enums.LogPriority
      description: the SDL_LogPriority to assign.
    content.vb: Public Shared Sub SetLogPriority(category As LogCategory, priority As LogPriority)
  overload: SharpSDL3.Sdl.SetLogPriority*
- uid: SharpSDL3.Sdl.SetLogPriorityPrefix(SharpSDL3.Enums.LogPriority)
  commentId: M:SharpSDL3.Sdl.SetLogPriorityPrefix(SharpSDL3.Enums.LogPriority)
  id: SetLogPriorityPrefix(SharpSDL3.Enums.LogPriority)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetLogPriorityPrefix(LogPriority)
  nameWithType: Sdl.SetLogPriorityPrefix(LogPriority)
  fullName: SharpSDL3.Sdl.SetLogPriorityPrefix(SharpSDL3.Enums.LogPriority)
  type: Method
  source:
    remote:
      path: SDL3/Logger.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetLogPriorityPrefix
    path: ../../repos/SDL3-CS/SDL3/Logger.cs
    startLine: 351
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set the text prepended to log messages of a given priority.
  remarks: >-
    By default SDL_LOG_PRIORITY_INFO and below have no

    prefix, and SDL_LOG_PRIORITY_WARN and higher have

    a prefix showing their priority, e.g. "WARNING: ".

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetLogPriorities(SharpSDL3.Enums.LogPriority)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetLogPriority(SharpSDL3.Enums.LogCategory%2cSharpSDL3.Enums.LogPriority)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void SetLogPriorityPrefix(LogPriority priority)
    parameters:
    - id: priority
      type: SharpSDL3.Enums.LogPriority
      description: the SDL_LogPriority to modify.
    content.vb: Public Shared Sub SetLogPriorityPrefix(priority As LogPriority)
  overload: SharpSDL3.Sdl.SetLogPriorityPrefix*
- uid: SharpSDL3.Sdl.SetLogPriorityPrefix(SharpSDL3.Enums.LogPriority,System.String)
  commentId: M:SharpSDL3.Sdl.SetLogPriorityPrefix(SharpSDL3.Enums.LogPriority,System.String)
  id: SetLogPriorityPrefix(SharpSDL3.Enums.LogPriority,System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetLogPriorityPrefix(LogPriority, string)
  nameWithType: Sdl.SetLogPriorityPrefix(LogPriority, string)
  fullName: SharpSDL3.Sdl.SetLogPriorityPrefix(SharpSDL3.Enums.LogPriority, string)
  type: Method
  source:
    remote:
      path: SDL3/Logger.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetLogPriorityPrefix
    path: ../../repos/SDL3-CS/SDL3/Logger.cs
    startLine: 375
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set the text prepended to log messages of a given priority.
  remarks: >-
    By default SDL_LOG_PRIORITY_INFO and below have no

    prefix, and SDL_LOG_PRIORITY_WARN and higher have

    a prefix showing their priority, e.g. "WARNING: ".

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetLogPriorities(SharpSDL3.Enums.LogPriority)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetLogPriority(SharpSDL3.Enums.LogCategory%2cSharpSDL3.Enums.LogPriority)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void SetLogPriorityPrefix(LogPriority priority, string prefix)
    parameters:
    - id: priority
      type: SharpSDL3.Enums.LogPriority
      description: the SDL_LogPriority to modify.
    - id: prefix
      type: System.String
      description: the prefix to use for that log priority, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to use no prefix.
    content.vb: Public Shared Sub SetLogPriorityPrefix(priority As LogPriority, prefix As String)
  overload: SharpSDL3.Sdl.SetLogPriorityPrefix*
  nameWithType.vb: Sdl.SetLogPriorityPrefix(LogPriority, String)
  fullName.vb: SharpSDL3.Sdl.SetLogPriorityPrefix(SharpSDL3.Enums.LogPriority, String)
  name.vb: SetLogPriorityPrefix(LogPriority, String)
- uid: SharpSDL3.Sdl.ShowMessageBox(SharpSDL3.Structs.MessageBoxData@,System.Int32@)
  commentId: M:SharpSDL3.Sdl.ShowMessageBox(SharpSDL3.Structs.MessageBoxData@,System.Int32@)
  id: ShowMessageBox(SharpSDL3.Structs.MessageBoxData@,System.Int32@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ShowMessageBox(ref MessageBoxData, out int)
  nameWithType: Sdl.ShowMessageBox(ref MessageBoxData, out int)
  fullName: SharpSDL3.Sdl.ShowMessageBox(ref SharpSDL3.Structs.MessageBoxData, out int)
  type: Method
  source:
    remote:
      path: SDL3/MessageBox.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ShowMessageBox
    path: ../../repos/SDL3-CS/SDL3/MessageBox.cs
    startLine: 10
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static bool ShowMessageBox(ref MessageBoxData messageboxdata, out int buttonid)
    parameters:
    - id: messageboxdata
      type: SharpSDL3.Structs.MessageBoxData
    - id: buttonid
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function ShowMessageBox(messageboxdata As MessageBoxData, buttonid As Integer) As Boolean
  overload: SharpSDL3.Sdl.ShowMessageBox*
  nameWithType.vb: Sdl.ShowMessageBox(MessageBoxData, Integer)
  fullName.vb: SharpSDL3.Sdl.ShowMessageBox(SharpSDL3.Structs.MessageBoxData, Integer)
  name.vb: ShowMessageBox(MessageBoxData, Integer)
- uid: SharpSDL3.Sdl.ShowMessageBox(System.String)
  commentId: M:SharpSDL3.Sdl.ShowMessageBox(System.String)
  id: ShowMessageBox(System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ShowMessageBox(string)
  nameWithType: Sdl.ShowMessageBox(string)
  fullName: SharpSDL3.Sdl.ShowMessageBox(string)
  type: Method
  source:
    remote:
      path: SDL3/MessageBox.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ShowMessageBox
    path: ../../repos/SDL3-CS/SDL3/MessageBox.cs
    startLine: 28
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static MessageBoxResult ShowMessageBox(string message)
    parameters:
    - id: message
      type: System.String
    return:
      type: SharpSDL3.Enums.MessageBoxResult
    content.vb: Public Shared Function ShowMessageBox(message As String) As MessageBoxResult
  overload: SharpSDL3.Sdl.ShowMessageBox*
  nameWithType.vb: Sdl.ShowMessageBox(String)
  fullName.vb: SharpSDL3.Sdl.ShowMessageBox(String)
  name.vb: ShowMessageBox(String)
- uid: SharpSDL3.Sdl.ShowMessageBox(System.String,System.String)
  commentId: M:SharpSDL3.Sdl.ShowMessageBox(System.String,System.String)
  id: ShowMessageBox(System.String,System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ShowMessageBox(string, string)
  nameWithType: Sdl.ShowMessageBox(string, string)
  fullName: SharpSDL3.Sdl.ShowMessageBox(string, string)
  type: Method
  source:
    remote:
      path: SDL3/MessageBox.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ShowMessageBox
    path: ../../repos/SDL3-CS/SDL3/MessageBox.cs
    startLine: 32
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static MessageBoxResult ShowMessageBox(string message, string title)
    parameters:
    - id: message
      type: System.String
    - id: title
      type: System.String
    return:
      type: SharpSDL3.Enums.MessageBoxResult
    content.vb: Public Shared Function ShowMessageBox(message As String, title As String) As MessageBoxResult
  overload: SharpSDL3.Sdl.ShowMessageBox*
  nameWithType.vb: Sdl.ShowMessageBox(String, String)
  fullName.vb: SharpSDL3.Sdl.ShowMessageBox(String, String)
  name.vb: ShowMessageBox(String, String)
- uid: SharpSDL3.Sdl.ShowMessageBox(System.IntPtr,System.String,System.String)
  commentId: M:SharpSDL3.Sdl.ShowMessageBox(System.IntPtr,System.String,System.String)
  id: ShowMessageBox(System.IntPtr,System.String,System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ShowMessageBox(nint, string, string)
  nameWithType: Sdl.ShowMessageBox(nint, string, string)
  fullName: SharpSDL3.Sdl.ShowMessageBox(nint, string, string)
  type: Method
  source:
    remote:
      path: SDL3/MessageBox.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ShowMessageBox
    path: ../../repos/SDL3-CS/SDL3/MessageBox.cs
    startLine: 48
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Create a modal message box.
  remarks: >-
    If your needs aren't complex, it might be easier to use

    SDL_ShowSimpleMessageBox.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.ShowSimpleMessageBox(SharpSDL3.Enums.MessageBoxFlags%2cSystem.String%2cSystem.String%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static MessageBoxResult ShowMessageBox(nint windowOwner, string message, string title)
    parameters:
    - id: windowOwner
      type: System.IntPtr
    - id: message
      type: System.String
    - id: title
      type: System.String
    return:
      type: SharpSDL3.Enums.MessageBoxResult
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function ShowMessageBox(windowOwner As IntPtr, message As String, title As String) As MessageBoxResult
  overload: SharpSDL3.Sdl.ShowMessageBox*
  nameWithType.vb: Sdl.ShowMessageBox(IntPtr, String, String)
  fullName.vb: SharpSDL3.Sdl.ShowMessageBox(System.IntPtr, String, String)
  name.vb: ShowMessageBox(IntPtr, String, String)
- uid: SharpSDL3.Sdl.ShowMessageBox(System.IntPtr,System.String,System.String,SharpSDL3.Enums.MessageBoxFlags)
  commentId: M:SharpSDL3.Sdl.ShowMessageBox(System.IntPtr,System.String,System.String,SharpSDL3.Enums.MessageBoxFlags)
  id: ShowMessageBox(System.IntPtr,System.String,System.String,SharpSDL3.Enums.MessageBoxFlags)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ShowMessageBox(nint, string, string, MessageBoxFlags)
  nameWithType: Sdl.ShowMessageBox(nint, string, string, MessageBoxFlags)
  fullName: SharpSDL3.Sdl.ShowMessageBox(nint, string, string, SharpSDL3.Enums.MessageBoxFlags)
  type: Method
  source:
    remote:
      path: SDL3/MessageBox.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ShowMessageBox
    path: ../../repos/SDL3-CS/SDL3/MessageBox.cs
    startLine: 52
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static MessageBoxResult ShowMessageBox(nint windowOwner, string message, string title, MessageBoxFlags flags)
    parameters:
    - id: windowOwner
      type: System.IntPtr
    - id: message
      type: System.String
    - id: title
      type: System.String
    - id: flags
      type: SharpSDL3.Enums.MessageBoxFlags
    return:
      type: SharpSDL3.Enums.MessageBoxResult
    content.vb: Public Shared Function ShowMessageBox(windowOwner As IntPtr, message As String, title As String, flags As MessageBoxFlags) As MessageBoxResult
  overload: SharpSDL3.Sdl.ShowMessageBox*
  nameWithType.vb: Sdl.ShowMessageBox(IntPtr, String, String, MessageBoxFlags)
  fullName.vb: SharpSDL3.Sdl.ShowMessageBox(System.IntPtr, String, String, SharpSDL3.Enums.MessageBoxFlags)
  name.vb: ShowMessageBox(IntPtr, String, String, MessageBoxFlags)
- uid: SharpSDL3.Sdl.ShowMessageBox(System.IntPtr,System.String,System.String,SharpSDL3.Enums.MessageBoxFlags,SharpSDL3.Enums.MessageBoxButtons)
  commentId: M:SharpSDL3.Sdl.ShowMessageBox(System.IntPtr,System.String,System.String,SharpSDL3.Enums.MessageBoxFlags,SharpSDL3.Enums.MessageBoxButtons)
  id: ShowMessageBox(System.IntPtr,System.String,System.String,SharpSDL3.Enums.MessageBoxFlags,SharpSDL3.Enums.MessageBoxButtons)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ShowMessageBox(nint, string, string, MessageBoxFlags, MessageBoxButtons)
  nameWithType: Sdl.ShowMessageBox(nint, string, string, MessageBoxFlags, MessageBoxButtons)
  fullName: SharpSDL3.Sdl.ShowMessageBox(nint, string, string, SharpSDL3.Enums.MessageBoxFlags, SharpSDL3.Enums.MessageBoxButtons)
  type: Method
  source:
    remote:
      path: SDL3/MessageBox.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ShowMessageBox
    path: ../../repos/SDL3-CS/SDL3/MessageBox.cs
    startLine: 56
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static MessageBoxResult ShowMessageBox(nint windowOwner, string message, string title, MessageBoxFlags flags, MessageBoxButtons buttons)
    parameters:
    - id: windowOwner
      type: System.IntPtr
    - id: message
      type: System.String
    - id: title
      type: System.String
    - id: flags
      type: SharpSDL3.Enums.MessageBoxFlags
    - id: buttons
      type: SharpSDL3.Enums.MessageBoxButtons
    return:
      type: SharpSDL3.Enums.MessageBoxResult
    content.vb: Public Shared Function ShowMessageBox(windowOwner As IntPtr, message As String, title As String, flags As MessageBoxFlags, buttons As MessageBoxButtons) As MessageBoxResult
  overload: SharpSDL3.Sdl.ShowMessageBox*
  nameWithType.vb: Sdl.ShowMessageBox(IntPtr, String, String, MessageBoxFlags, MessageBoxButtons)
  fullName.vb: SharpSDL3.Sdl.ShowMessageBox(System.IntPtr, String, String, SharpSDL3.Enums.MessageBoxFlags, SharpSDL3.Enums.MessageBoxButtons)
  name.vb: ShowMessageBox(IntPtr, String, String, MessageBoxFlags, MessageBoxButtons)
- uid: SharpSDL3.Sdl.ShowMessageBox(System.IntPtr,System.String,System.String,SharpSDL3.Enums.MessageBoxFlags,SharpSDL3.Enums.MessageBoxButtons,SharpSDL3.Enums.MessageBoxDefaultButton)
  commentId: M:SharpSDL3.Sdl.ShowMessageBox(System.IntPtr,System.String,System.String,SharpSDL3.Enums.MessageBoxFlags,SharpSDL3.Enums.MessageBoxButtons,SharpSDL3.Enums.MessageBoxDefaultButton)
  id: ShowMessageBox(System.IntPtr,System.String,System.String,SharpSDL3.Enums.MessageBoxFlags,SharpSDL3.Enums.MessageBoxButtons,SharpSDL3.Enums.MessageBoxDefaultButton)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ShowMessageBox(nint, string, string, MessageBoxFlags, MessageBoxButtons, MessageBoxDefaultButton)
  nameWithType: Sdl.ShowMessageBox(nint, string, string, MessageBoxFlags, MessageBoxButtons, MessageBoxDefaultButton)
  fullName: SharpSDL3.Sdl.ShowMessageBox(nint, string, string, SharpSDL3.Enums.MessageBoxFlags, SharpSDL3.Enums.MessageBoxButtons, SharpSDL3.Enums.MessageBoxDefaultButton)
  type: Method
  source:
    remote:
      path: SDL3/MessageBox.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ShowMessageBox
    path: ../../repos/SDL3-CS/SDL3/MessageBox.cs
    startLine: 72
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Create a modal message box.
  remarks: >-
    If your needs aren't complex, it might be easier to use

    SDL_ShowSimpleMessageBox.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.ShowSimpleMessageBox(SharpSDL3.Enums.MessageBoxFlags%2cSystem.String%2cSystem.String%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static MessageBoxResult ShowMessageBox(nint windowOwner, string message, string title, MessageBoxFlags flags, MessageBoxButtons buttons, MessageBoxDefaultButton accelerator)
    parameters:
    - id: windowOwner
      type: System.IntPtr
    - id: message
      type: System.String
    - id: title
      type: System.String
    - id: flags
      type: SharpSDL3.Enums.MessageBoxFlags
    - id: buttons
      type: SharpSDL3.Enums.MessageBoxButtons
    - id: accelerator
      type: SharpSDL3.Enums.MessageBoxDefaultButton
    return:
      type: SharpSDL3.Enums.MessageBoxResult
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function ShowMessageBox(windowOwner As IntPtr, message As String, title As String, flags As MessageBoxFlags, buttons As MessageBoxButtons, accelerator As MessageBoxDefaultButton) As MessageBoxResult
  overload: SharpSDL3.Sdl.ShowMessageBox*
  nameWithType.vb: Sdl.ShowMessageBox(IntPtr, String, String, MessageBoxFlags, MessageBoxButtons, MessageBoxDefaultButton)
  fullName.vb: SharpSDL3.Sdl.ShowMessageBox(System.IntPtr, String, String, SharpSDL3.Enums.MessageBoxFlags, SharpSDL3.Enums.MessageBoxButtons, SharpSDL3.Enums.MessageBoxDefaultButton)
  name.vb: ShowMessageBox(IntPtr, String, String, MessageBoxFlags, MessageBoxButtons, MessageBoxDefaultButton)
- uid: SharpSDL3.Sdl.ShowMessageBox(System.IntPtr,System.String,System.String,SharpSDL3.Enums.MessageBoxFlags,SharpSDL3.Enums.MessageBoxButtons,SharpSDL3.Enums.MessageBoxDefaultButton,SharpSDL3.Structs.MessageBoxColorScheme@)
  commentId: M:SharpSDL3.Sdl.ShowMessageBox(System.IntPtr,System.String,System.String,SharpSDL3.Enums.MessageBoxFlags,SharpSDL3.Enums.MessageBoxButtons,SharpSDL3.Enums.MessageBoxDefaultButton,SharpSDL3.Structs.MessageBoxColorScheme@)
  id: ShowMessageBox(System.IntPtr,System.String,System.String,SharpSDL3.Enums.MessageBoxFlags,SharpSDL3.Enums.MessageBoxButtons,SharpSDL3.Enums.MessageBoxDefaultButton,SharpSDL3.Structs.MessageBoxColorScheme@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ShowMessageBox(nint, string, string, MessageBoxFlags, MessageBoxButtons, MessageBoxDefaultButton, ref MessageBoxColorScheme)
  nameWithType: Sdl.ShowMessageBox(nint, string, string, MessageBoxFlags, MessageBoxButtons, MessageBoxDefaultButton, ref MessageBoxColorScheme)
  fullName: SharpSDL3.Sdl.ShowMessageBox(nint, string, string, SharpSDL3.Enums.MessageBoxFlags, SharpSDL3.Enums.MessageBoxButtons, SharpSDL3.Enums.MessageBoxDefaultButton, ref SharpSDL3.Structs.MessageBoxColorScheme)
  type: Method
  source:
    remote:
      path: SDL3/MessageBox.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ShowMessageBox
    path: ../../repos/SDL3-CS/SDL3/MessageBox.cs
    startLine: 89
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Create a modal message box.
  remarks: >-
    If your needs aren't complex, it might be easier to use

    SDL_ShowSimpleMessageBox.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.ShowSimpleMessageBox(SharpSDL3.Enums.MessageBoxFlags%2cSystem.String%2cSystem.String%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static MessageBoxResult ShowMessageBox(nint windowOwner, string message, string title, MessageBoxFlags flags, MessageBoxButtons buttons, MessageBoxDefaultButton accelerator, ref MessageBoxColorScheme scheme)
    parameters:
    - id: windowOwner
      type: System.IntPtr
    - id: message
      type: System.String
    - id: title
      type: System.String
    - id: flags
      type: SharpSDL3.Enums.MessageBoxFlags
    - id: buttons
      type: SharpSDL3.Enums.MessageBoxButtons
    - id: accelerator
      type: SharpSDL3.Enums.MessageBoxDefaultButton
    - id: scheme
      type: SharpSDL3.Structs.MessageBoxColorScheme
    return:
      type: SharpSDL3.Enums.MessageBoxResult
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function ShowMessageBox(windowOwner As IntPtr, message As String, title As String, flags As MessageBoxFlags, buttons As MessageBoxButtons, accelerator As MessageBoxDefaultButton, scheme As MessageBoxColorScheme) As MessageBoxResult
  overload: SharpSDL3.Sdl.ShowMessageBox*
  nameWithType.vb: Sdl.ShowMessageBox(IntPtr, String, String, MessageBoxFlags, MessageBoxButtons, MessageBoxDefaultButton, MessageBoxColorScheme)
  fullName.vb: SharpSDL3.Sdl.ShowMessageBox(System.IntPtr, String, String, SharpSDL3.Enums.MessageBoxFlags, SharpSDL3.Enums.MessageBoxButtons, SharpSDL3.Enums.MessageBoxDefaultButton, SharpSDL3.Structs.MessageBoxColorScheme)
  name.vb: ShowMessageBox(IntPtr, String, String, MessageBoxFlags, MessageBoxButtons, MessageBoxDefaultButton, MessageBoxColorScheme)
- uid: SharpSDL3.Sdl.ShowSimpleMessageBox(SharpSDL3.Enums.MessageBoxFlags,System.String,System.String,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.ShowSimpleMessageBox(SharpSDL3.Enums.MessageBoxFlags,System.String,System.String,System.IntPtr)
  id: ShowSimpleMessageBox(SharpSDL3.Enums.MessageBoxFlags,System.String,System.String,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ShowSimpleMessageBox(MessageBoxFlags, string, string, nint)
  nameWithType: Sdl.ShowSimpleMessageBox(MessageBoxFlags, string, string, nint)
  fullName: SharpSDL3.Sdl.ShowSimpleMessageBox(SharpSDL3.Enums.MessageBoxFlags, string, string, nint)
  type: Method
  source:
    remote:
      path: SDL3/MessageBox.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ShowSimpleMessageBox
    path: ../../repos/SDL3-CS/SDL3/MessageBox.cs
    startLine: 188
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Display a simple modal message box.
  remarks: >-
    If your needs aren't complex, this function is preferred over

    SDL_ShowMessageBox.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.ShowMessageBox(SharpSDL3.Structs.MessageBoxData%40%2cSystem.Int32%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool ShowSimpleMessageBox(MessageBoxFlags flags, string message, string title, nint window)
    parameters:
    - id: flags
      type: SharpSDL3.Enums.MessageBoxFlags
      description: an SDL_MessageBoxFlags value.
    - id: message
      type: System.String
      description: UTF-8 message text.
    - id: title
      type: System.String
      description: UTF-8 title text.
    - id: window
      type: System.IntPtr
      description: the parent window, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for no parent.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function ShowSimpleMessageBox(flags As MessageBoxFlags, message As String, title As String, window As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.ShowSimpleMessageBox*
  nameWithType.vb: Sdl.ShowSimpleMessageBox(MessageBoxFlags, String, String, IntPtr)
  fullName.vb: SharpSDL3.Sdl.ShowSimpleMessageBox(SharpSDL3.Enums.MessageBoxFlags, String, String, System.IntPtr)
  name.vb: ShowSimpleMessageBox(MessageBoxFlags, String, String, IntPtr)
- uid: SharpSDL3.Sdl.CreateView(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.CreateView(System.IntPtr)
  id: CreateView(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CreateView(nint)
  nameWithType: Sdl.CreateView(nint)
  fullName: SharpSDL3.Sdl.CreateView(nint)
  type: Method
  source:
    remote:
      path: SDL3/Metal.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CreateView
    path: ../../repos/SDL3-CS/SDL3/Metal.cs
    startLine: 9
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static nint CreateView(nint window)
    parameters:
    - id: window
      type: System.IntPtr
    return:
      type: System.IntPtr
    content.vb: Public Shared Function CreateView(window As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.CreateView*
  nameWithType.vb: Sdl.CreateView(IntPtr)
  fullName.vb: SharpSDL3.Sdl.CreateView(System.IntPtr)
  name.vb: CreateView(IntPtr)
- uid: SharpSDL3.Sdl.DestroyView(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.DestroyView(System.IntPtr)
  id: DestroyView(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: DestroyView(nint)
  nameWithType: Sdl.DestroyView(nint)
  fullName: SharpSDL3.Sdl.DestroyView(nint)
  type: Method
  source:
    remote:
      path: SDL3/Metal.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: DestroyView
    path: ../../repos/SDL3-CS/SDL3/Metal.cs
    startLine: 16
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static void DestroyView(nint view)
    parameters:
    - id: view
      type: System.IntPtr
    content.vb: Public Shared Sub DestroyView(view As IntPtr)
  overload: SharpSDL3.Sdl.DestroyView*
  nameWithType.vb: Sdl.DestroyView(IntPtr)
  fullName.vb: SharpSDL3.Sdl.DestroyView(System.IntPtr)
  name.vb: DestroyView(IntPtr)
- uid: SharpSDL3.Sdl.GetLayer(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetLayer(System.IntPtr)
  id: GetLayer(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetLayer(nint)
  nameWithType: Sdl.GetLayer(nint)
  fullName: SharpSDL3.Sdl.GetLayer(nint)
  type: Method
  source:
    remote:
      path: SDL3/Metal.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetLayer
    path: ../../repos/SDL3-CS/SDL3/Metal.cs
    startLine: 23
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static nint GetLayer(nint view)
    parameters:
    - id: view
      type: System.IntPtr
    return:
      type: System.IntPtr
    content.vb: Public Shared Function GetLayer(view As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.GetLayer*
  nameWithType.vb: Sdl.GetLayer(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetLayer(System.IntPtr)
  name.vb: GetLayer(IntPtr)
- uid: SharpSDL3.Sdl.OpenURL(System.String)
  commentId: M:SharpSDL3.Sdl.OpenURL(System.String)
  id: OpenURL(System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: OpenURL(string)
  nameWithType: Sdl.OpenURL(string)
  fullName: SharpSDL3.Sdl.OpenURL(string)
  type: Method
  source:
    remote:
      path: SDL3/Misc.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: OpenURL
    path: ../../repos/SDL3-CS/SDL3/Misc.cs
    startLine: 22
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Open a URL/URI in the browser or other appropriate external application.
  remarks: >-
    Open a URL in a separate, system-provided application. How this works will

    vary wildly depending on the platform. This will likely launch what makes

    sense to handle a specific URL's protocol (a web browser for http://,

    etc), but it might also be able to launch file managers for directories and

    other things.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool OpenURL(string url)
    parameters:
    - id: url
      type: System.String
      description: a valid URL/URI to open. Use file:///full/path/to/file for local files, if supported.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function OpenURL(url As String) As Boolean
  overload: SharpSDL3.Sdl.OpenURL*
  nameWithType.vb: Sdl.OpenURL(String)
  fullName.vb: SharpSDL3.Sdl.OpenURL(String)
  name.vb: OpenURL(String)
- uid: SharpSDL3.Sdl.HasMouse
  commentId: M:SharpSDL3.Sdl.HasMouse
  id: HasMouse
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: HasMouse()
  nameWithType: Sdl.HasMouse()
  fullName: SharpSDL3.Sdl.HasMouse()
  type: Method
  source:
    remote:
      path: SDL3/Mouse.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: HasMouse
    path: ../../repos/SDL3-CS/SDL3/Mouse.cs
    startLine: 18
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Return whether a mouse is currently connected.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetMice(System.Int32%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool HasMouse()
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if a mouse is connected, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Public Shared Function HasMouse() As Boolean
  overload: SharpSDL3.Sdl.HasMouse*
- uid: SharpSDL3.Sdl.GetMice(System.Int32@)
  commentId: M:SharpSDL3.Sdl.GetMice(System.Int32@)
  id: GetMice(System.Int32@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetMice(out int)
  nameWithType: Sdl.GetMice(out int)
  fullName: SharpSDL3.Sdl.GetMice(out int)
  type: Method
  source:
    remote:
      path: SDL3/Mouse.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetMice
    path: ../../repos/SDL3-CS/SDL3/Mouse.cs
    startLine: 35
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get a list of currently connected mice.
  remarks: >-
    Note that this will include any device or virtual driver that includes

    mouse functionality, including some game controllers, KVM switches, etc.

    You should wait for input from a device before you consider it actively in

    use.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetMouseNameForID(System.UInt32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.HasMouse" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint GetMice(out int count)
    parameters:
    - id: count
      type: System.Int32
      description: a pointer filled in with the number of mice returned, may be discarded.
    return:
      type: System.IntPtr
      description: (SDL_MouseID *) Returns a 0 terminated array of mouseinstance IDs or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information. This should be freed with <xref href="SharpSDL3.Sdl.Free(System.IntPtr)" data-throw-if-not-resolved="false"></xref> when itis no longer needed.
    content.vb: Public Shared Function GetMice(count As Integer) As IntPtr
  overload: SharpSDL3.Sdl.GetMice*
  nameWithType.vb: Sdl.GetMice(Integer)
  fullName.vb: SharpSDL3.Sdl.GetMice(Integer)
  name.vb: GetMice(Integer)
- uid: SharpSDL3.Sdl.GetMouseNameForID(System.UInt32)
  commentId: M:SharpSDL3.Sdl.GetMouseNameForID(System.UInt32)
  id: GetMouseNameForID(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetMouseNameForID(uint)
  nameWithType: Sdl.GetMouseNameForID(uint)
  fullName: SharpSDL3.Sdl.GetMouseNameForID(uint)
  type: Method
  source:
    remote:
      path: SDL3/Mouse.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetMouseNameForID
    path: ../../repos/SDL3-CS/SDL3/Mouse.cs
    startLine: 55
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the name of a mouse.
  remarks: >-
    This function returns "" if the mouse doesn't have a name.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetMice(System.Int32%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static string GetMouseNameForID(uint instanceId)
    parameters:
    - id: instanceId
      type: System.UInt32
    return:
      type: System.String
      description: Returns the name of the selected mouse, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure;call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetMouseNameForID(instanceId As UInteger) As String
  overload: SharpSDL3.Sdl.GetMouseNameForID*
  nameWithType.vb: Sdl.GetMouseNameForID(UInteger)
  fullName.vb: SharpSDL3.Sdl.GetMouseNameForID(UInteger)
  name.vb: GetMouseNameForID(UInteger)
- uid: SharpSDL3.Sdl.GetMouseFocus
  commentId: M:SharpSDL3.Sdl.GetMouseFocus
  id: GetMouseFocus
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetMouseFocus()
  nameWithType: Sdl.GetMouseFocus()
  fullName: SharpSDL3.Sdl.GetMouseFocus()
  type: Method
  source:
    remote:
      path: SDL3/Mouse.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetMouseFocus
    path: ../../repos/SDL3-CS/SDL3/Mouse.cs
    startLine: 75
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the window which currently has mouse focus.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static nint GetMouseFocus()
    return:
      type: System.IntPtr
      description: (SDL_Window *) Returns the window with mouse focus.
    content.vb: Public Shared Function GetMouseFocus() As IntPtr
  overload: SharpSDL3.Sdl.GetMouseFocus*
- uid: SharpSDL3.Sdl.GetMouseState(System.Single@,System.Single@)
  commentId: M:SharpSDL3.Sdl.GetMouseState(System.Single@,System.Single@)
  id: GetMouseState(System.Single@,System.Single@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetMouseState(out float, out float)
  nameWithType: Sdl.GetMouseState(out float, out float)
  fullName: SharpSDL3.Sdl.GetMouseState(out float, out float)
  type: Method
  source:
    remote:
      path: SDL3/Mouse.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetMouseState
    path: ../../repos/SDL3-CS/SDL3/Mouse.cs
    startLine: 91
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Query SDL's cache for the synchronous mouse button state and the window-relative SDL-cursor position.
  remarks: >-
    This function returns the cached synchronous state as SDL understands it

    from the last pump of the event queue.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetGlobalMouseState(System.Single%40%2cSystem.Single%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetRelativeMouseState(System.Single%40%2cSystem.Single%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static MouseButtonFlags GetMouseState(out float x, out float y)
    parameters:
    - id: x
      type: System.Single
      description: a pointer to receive the SDL-cursor's x-position from the focused window's top left corner, can be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if unused.
    - id: y
      type: System.Single
      description: a pointer to receive the SDL-cursor's y-position from the focused window's top left corner, can be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if unused.
    return:
      type: SharpSDL3.Enums.MouseButtonFlags
      description: Returns a 32-bit bitmask ofthe button state that can be bitwise-compared against theSDL_BUTTON_MASK(X) macro.
    content.vb: Public Shared Function GetMouseState(x As Single, y As Single) As MouseButtonFlags
  overload: SharpSDL3.Sdl.GetMouseState*
  nameWithType.vb: Sdl.GetMouseState(Single, Single)
  fullName.vb: SharpSDL3.Sdl.GetMouseState(Single, Single)
  name.vb: GetMouseState(Single, Single)
- uid: SharpSDL3.Sdl.GetGlobalMouseState(System.Single@,System.Single@)
  commentId: M:SharpSDL3.Sdl.GetGlobalMouseState(System.Single@,System.Single@)
  id: GetGlobalMouseState(System.Single@,System.Single@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetGlobalMouseState(out float, out float)
  nameWithType: Sdl.GetGlobalMouseState(out float, out float)
  fullName: SharpSDL3.Sdl.GetGlobalMouseState(out float, out float)
  type: Method
  source:
    remote:
      path: SDL3/Mouse.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetGlobalMouseState
    path: ../../repos/SDL3-CS/SDL3/Mouse.cs
    startLine: 118
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Query the platform for the asynchronous mouse button state and the desktop-relative platform-cursor position.
  remarks: >-
    This function immediately queries the platform for the most recent

    asynchronous state, more costly than retrieving SDL's cached state in

    SDL_GetMouseState().

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CaptureMouse(System.Boolean)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetMouseState(System.Single%40%2cSystem.Single%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetGlobalMouseState(System.Single%40%2cSystem.Single%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static MouseButtonFlags GetGlobalMouseState(out float x, out float y)
    parameters:
    - id: x
      type: System.Single
      description: a pointer to receive the platform-cursor's x-position from the desktop's top left corner, can be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if unused.
    - id: y
      type: System.Single
      description: a pointer to receive the platform-cursor's y-position from the desktop's top left corner, can be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if unused.
    return:
      type: SharpSDL3.Enums.MouseButtonFlags
      description: Returns a 32-bit bitmask ofthe button state that can be bitwise-compared against theSDL_BUTTON_MASK(X) macro.
    content.vb: Public Shared Function GetGlobalMouseState(x As Single, y As Single) As MouseButtonFlags
  overload: SharpSDL3.Sdl.GetGlobalMouseState*
  nameWithType.vb: Sdl.GetGlobalMouseState(Single, Single)
  fullName.vb: SharpSDL3.Sdl.GetGlobalMouseState(Single, Single)
  name.vb: GetGlobalMouseState(Single, Single)
- uid: SharpSDL3.Sdl.GetRelativeMouseState(System.Single@,System.Single@)
  commentId: M:SharpSDL3.Sdl.GetRelativeMouseState(System.Single@,System.Single@)
  id: GetRelativeMouseState(System.Single@,System.Single@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetRelativeMouseState(out float, out float)
  nameWithType: Sdl.GetRelativeMouseState(out float, out float)
  fullName: SharpSDL3.Sdl.GetRelativeMouseState(out float, out float)
  type: Method
  source:
    remote:
      path: SDL3/Mouse.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetRelativeMouseState
    path: ../../repos/SDL3-CS/SDL3/Mouse.cs
    startLine: 143
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Query SDL's cache for the synchronous mouse button state and accumulated mouse delta since last call.
  remarks: >-
    This function returns the cached synchronous state as SDL understands it

    from the last pump of the event queue.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetMouseState(System.Single%40%2cSystem.Single%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetGlobalMouseState(System.Single%40%2cSystem.Single%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static MouseButtonFlags GetRelativeMouseState(out float x, out float y)
    parameters:
    - id: x
      type: System.Single
      description: a pointer to receive the x mouse delta accumulated since last call, can be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if unused.
    - id: y
      type: System.Single
      description: a pointer to receive the y mouse delta accumulated since last call, can be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if unused.
    return:
      type: SharpSDL3.Enums.MouseButtonFlags
      description: Returns a 32-bit bitmask ofthe button state that can be bitwise-compared against theSDL_BUTTON_MASK(X) macro.
    content.vb: Public Shared Function GetRelativeMouseState(x As Single, y As Single) As MouseButtonFlags
  overload: SharpSDL3.Sdl.GetRelativeMouseState*
  nameWithType.vb: Sdl.GetRelativeMouseState(Single, Single)
  fullName.vb: SharpSDL3.Sdl.GetRelativeMouseState(Single, Single)
  name.vb: GetRelativeMouseState(Single, Single)
- uid: SharpSDL3.Sdl.WarpMouseInWindow(System.IntPtr,System.Single,System.Single)
  commentId: M:SharpSDL3.Sdl.WarpMouseInWindow(System.IntPtr,System.Single,System.Single)
  id: WarpMouseInWindow(System.IntPtr,System.Single,System.Single)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: WarpMouseInWindow(nint, float, float)
  nameWithType: Sdl.WarpMouseInWindow(nint, float, float)
  fullName: SharpSDL3.Sdl.WarpMouseInWindow(nint, float, float)
  type: Method
  source:
    remote:
      path: SDL3/Mouse.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: WarpMouseInWindow
    path: ../../repos/SDL3-CS/SDL3/Mouse.cs
    startLine: 169
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Move the mouse cursor to the given position within the window.
  remarks: >-
    This function generates a mouse motion event if relative mode is not

    enabled. If relative mode is enabled, you can force mouse events for the

    warp by setting the

    SDL_HINT_MOUSE_RELATIVE_WARP_MOTION

    hint.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.WarpMouseGlobal(System.Single%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void WarpMouseInWindow(nint window, float x, float y)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to move the mouse into, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for the current mouse focus.
    - id: x
      type: System.Single
      description: the x coordinate within the window.
    - id: y
      type: System.Single
      description: the y coordinate within the window.
    content.vb: Public Shared Sub WarpMouseInWindow(window As IntPtr, x As Single, y As Single)
  overload: SharpSDL3.Sdl.WarpMouseInWindow*
  nameWithType.vb: Sdl.WarpMouseInWindow(IntPtr, Single, Single)
  fullName.vb: SharpSDL3.Sdl.WarpMouseInWindow(System.IntPtr, Single, Single)
  name.vb: WarpMouseInWindow(IntPtr, Single, Single)
- uid: SharpSDL3.Sdl.WarpMouseGlobal(System.Single,System.Single)
  commentId: M:SharpSDL3.Sdl.WarpMouseGlobal(System.Single,System.Single)
  id: WarpMouseGlobal(System.Single,System.Single)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: WarpMouseGlobal(float, float)
  nameWithType: Sdl.WarpMouseGlobal(float, float)
  fullName: SharpSDL3.Sdl.WarpMouseGlobal(float, float)
  type: Method
  source:
    remote:
      path: SDL3/Mouse.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: WarpMouseGlobal
    path: ../../repos/SDL3-CS/SDL3/Mouse.cs
    startLine: 197
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Move the mouse to the given position in global screen space.
  remarks: >-
    This function generates a mouse motion event.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.WarpMouseInWindow(System.IntPtr%2cSystem.Single%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool WarpMouseGlobal(float x, float y)
    parameters:
    - id: x
      type: System.Single
      description: the x coordinate.
    - id: y
      type: System.Single
      description: the y coordinate.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function WarpMouseGlobal(x As Single, y As Single) As Boolean
  overload: SharpSDL3.Sdl.WarpMouseGlobal*
  nameWithType.vb: Sdl.WarpMouseGlobal(Single, Single)
  fullName.vb: SharpSDL3.Sdl.WarpMouseGlobal(Single, Single)
  name.vb: WarpMouseGlobal(Single, Single)
- uid: SharpSDL3.Sdl.SetWindowRelativeMouseMode(System.IntPtr,System.Boolean)
  commentId: M:SharpSDL3.Sdl.SetWindowRelativeMouseMode(System.IntPtr,System.Boolean)
  id: SetWindowRelativeMouseMode(System.IntPtr,System.Boolean)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetWindowRelativeMouseMode(nint, bool)
  nameWithType: Sdl.SetWindowRelativeMouseMode(nint, bool)
  fullName: SharpSDL3.Sdl.SetWindowRelativeMouseMode(nint, bool)
  type: Method
  source:
    remote:
      path: SDL3/Mouse.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetWindowRelativeMouseMode
    path: ../../repos/SDL3-CS/SDL3/Mouse.cs
    startLine: 229
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set relative mouse mode for a window.
  remarks: >-
    While the window has focus and relative mouse mode is enabled, the cursor

    is hidden, the mouse position is constrained to the window, and SDL will

    report continuous relative mouse motion even if the mouse is at the edge of

    the window.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetWindowRelativeMouseMode(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetWindowRelativeMouseMode(nint window, bool enabled)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to change.
    - id: enabled
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> to enable relative mode, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> to disable.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetWindowRelativeMouseMode(window As IntPtr, enabled As Boolean) As Boolean
  overload: SharpSDL3.Sdl.SetWindowRelativeMouseMode*
  nameWithType.vb: Sdl.SetWindowRelativeMouseMode(IntPtr, Boolean)
  fullName.vb: SharpSDL3.Sdl.SetWindowRelativeMouseMode(System.IntPtr, Boolean)
  name.vb: SetWindowRelativeMouseMode(IntPtr, Boolean)
- uid: SharpSDL3.Sdl.GetWindowRelativeMouseMode(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetWindowRelativeMouseMode(System.IntPtr)
  id: GetWindowRelativeMouseMode(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetWindowRelativeMouseMode(nint)
  nameWithType: Sdl.GetWindowRelativeMouseMode(nint)
  fullName: SharpSDL3.Sdl.GetWindowRelativeMouseMode(nint)
  type: Method
  source:
    remote:
      path: SDL3/Mouse.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetWindowRelativeMouseMode
    path: ../../repos/SDL3-CS/SDL3/Mouse.cs
    startLine: 252
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Query whether relative mouse mode is enabled for a window.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetWindowRelativeMouseMode(System.IntPtr%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool GetWindowRelativeMouseMode(nint window)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to query.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if relative mode is enabled for a window or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>otherwise.
    content.vb: Public Shared Function GetWindowRelativeMouseMode(window As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.GetWindowRelativeMouseMode*
  nameWithType.vb: Sdl.GetWindowRelativeMouseMode(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetWindowRelativeMouseMode(System.IntPtr)
  name.vb: GetWindowRelativeMouseMode(IntPtr)
- uid: SharpSDL3.Sdl.CaptureMouse(System.Boolean)
  commentId: M:SharpSDL3.Sdl.CaptureMouse(System.Boolean)
  id: CaptureMouse(System.Boolean)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CaptureMouse(bool)
  nameWithType: Sdl.CaptureMouse(bool)
  fullName: SharpSDL3.Sdl.CaptureMouse(bool)
  type: Method
  source:
    remote:
      path: SDL3/Mouse.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CaptureMouse
    path: ../../repos/SDL3-CS/SDL3/Mouse.cs
    startLine: 280
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Capture the mouse and to track input outside an SDL window.
  remarks: >-
    Capturing enables your app to obtain mouse events globally, instead of just

    within your window. Not all video targets support this function. When

    capturing is enabled, the current window will get all mouse events, but

    unlike relative mode, no change is made to the cursor and it is not

    restrained to your window.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetGlobalMouseState(System.Single%40%2cSystem.Single%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool CaptureMouse(bool enabled)
    parameters:
    - id: enabled
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> to enable capturing, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> to disable.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function CaptureMouse(enabled As Boolean) As Boolean
  overload: SharpSDL3.Sdl.CaptureMouse*
  nameWithType.vb: Sdl.CaptureMouse(Boolean)
  fullName.vb: SharpSDL3.Sdl.CaptureMouse(Boolean)
  name.vb: CaptureMouse(Boolean)
- uid: SharpSDL3.Sdl.CreateCursor(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:SharpSDL3.Sdl.CreateCursor(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)
  id: CreateCursor(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CreateCursor(nint, nint, int, int, int, int)
  nameWithType: Sdl.CreateCursor(nint, nint, int, int, int, int)
  fullName: SharpSDL3.Sdl.CreateCursor(nint, nint, int, int, int, int)
  type: Method
  source:
    remote:
      path: SDL3/Mouse.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CreateCursor
    path: ../../repos/SDL3-CS/SDL3/Mouse.cs
    startLine: 308
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Create a cursor using the specified bitmap data and mask (in MSB format).
  remarks: >-
    mask has to be in MSB (Most Significant Bit) format.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateColorCursor(System.IntPtr%2cSystem.Int32%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.CreateSystemCursor(SharpSDL3.Enums.SystemCursor)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.DestroyCursor(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetCursor(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint CreateCursor(nint data, nint mask, int w, int h, int hotX, int hotY)
    parameters:
    - id: data
      type: System.IntPtr
      description: the color value for each pixel of the cursor.
    - id: mask
      type: System.IntPtr
      description: the mask value for each pixel of the cursor.
    - id: w
      type: System.Int32
      description: the width of the cursor.
    - id: h
      type: System.Int32
      description: the height of the cursor.
    - id: hotX
      type: System.Int32
    - id: hotY
      type: System.Int32
    return:
      type: System.IntPtr
      description: (SDL_Cursor *) Returns a new cursor with the specifiedparameters on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function CreateCursor(data As IntPtr, mask As IntPtr, w As Integer, h As Integer, hotX As Integer, hotY As Integer) As IntPtr
  overload: SharpSDL3.Sdl.CreateCursor*
  nameWithType.vb: Sdl.CreateCursor(IntPtr, IntPtr, Integer, Integer, Integer, Integer)
  fullName.vb: SharpSDL3.Sdl.CreateCursor(System.IntPtr, System.IntPtr, Integer, Integer, Integer, Integer)
  name.vb: CreateCursor(IntPtr, IntPtr, Integer, Integer, Integer, Integer)
- uid: SharpSDL3.Sdl.CreateColorCursor(System.IntPtr,System.Int32,System.Int32)
  commentId: M:SharpSDL3.Sdl.CreateColorCursor(System.IntPtr,System.Int32,System.Int32)
  id: CreateColorCursor(System.IntPtr,System.Int32,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CreateColorCursor(nint, int, int)
  nameWithType: Sdl.CreateColorCursor(nint, int, int)
  fullName: SharpSDL3.Sdl.CreateColorCursor(nint, int, int)
  type: Method
  source:
    remote:
      path: SDL3/Mouse.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CreateColorCursor
    path: ../../repos/SDL3-CS/SDL3/Mouse.cs
    startLine: 365
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Create a color cursor.
  remarks: >-
    If this function is passed a surface with alternate representations, the

    surface will be interpreted as the content to be used for 100% display

    scale, and the alternate representations will be used for high DPI

    situations. For example, if the original surface is 32x32, then on a 2x

    macOS display or 200% display scale on Windows, a 64x64 version of the

    image will be used, if available. If a matching version of the image isn't

    available, the closest larger size image will be downscaled to the

    appropriate size and be used instead, if available. Otherwise, the closest

    smaller image will be upscaled and be used instead.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateCursor(System.IntPtr%2cSystem.IntPtr%2cSystem.Int32%2cSystem.Int32%2cSystem.Int32%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.CreateSystemCursor(SharpSDL3.Enums.SystemCursor)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.DestroyCursor(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetCursor(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint CreateColorCursor(nint surface, int hotX, int hotY)
    parameters:
    - id: surface
      type: System.IntPtr
      description: an SDL_Surface structure representing the cursor image.
    - id: hotX
      type: System.Int32
    - id: hotY
      type: System.Int32
    return:
      type: System.IntPtr
      description: (SDL_Cursor *) Returns the new cursor on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function CreateColorCursor(surface As IntPtr, hotX As Integer, hotY As Integer) As IntPtr
  overload: SharpSDL3.Sdl.CreateColorCursor*
  nameWithType.vb: Sdl.CreateColorCursor(IntPtr, Integer, Integer)
  fullName.vb: SharpSDL3.Sdl.CreateColorCursor(System.IntPtr, Integer, Integer)
  name.vb: CreateColorCursor(IntPtr, Integer, Integer)
- uid: SharpSDL3.Sdl.CreateSystemCursor(SharpSDL3.Enums.SystemCursor)
  commentId: M:SharpSDL3.Sdl.CreateSystemCursor(SharpSDL3.Enums.SystemCursor)
  id: CreateSystemCursor(SharpSDL3.Enums.SystemCursor)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CreateSystemCursor(SystemCursor)
  nameWithType: Sdl.CreateSystemCursor(SystemCursor)
  fullName: SharpSDL3.Sdl.CreateSystemCursor(SharpSDL3.Enums.SystemCursor)
  type: Method
  source:
    remote:
      path: SDL3/Mouse.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CreateSystemCursor
    path: ../../repos/SDL3-CS/SDL3/Mouse.cs
    startLine: 397
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Create a system cursor.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.DestroyCursor(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint CreateSystemCursor(SystemCursor id)
    parameters:
    - id: id
      type: SharpSDL3.Enums.SystemCursor
      description: an SDL_SystemCursor enum value.
    return:
      type: System.IntPtr
      description: (SDL_Cursor *) Returns a cursor on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function CreateSystemCursor(id As SystemCursor) As IntPtr
  overload: SharpSDL3.Sdl.CreateSystemCursor*
- uid: SharpSDL3.Sdl.SetCursor(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.SetCursor(System.IntPtr)
  id: SetCursor(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetCursor(nint)
  nameWithType: Sdl.SetCursor(nint)
  fullName: SharpSDL3.Sdl.SetCursor(nint)
  type: Method
  source:
    remote:
      path: SDL3/Mouse.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetCursor
    path: ../../repos/SDL3-CS/SDL3/Mouse.cs
    startLine: 424
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set the active cursor.
  remarks: >-
    This function sets the currently active cursor to the specified one. If the

    cursor is currently visible, the change will be immediately represented on

    the display. SDL_SetCursor(<a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>) can be used to force

    cursor redraw, if this is desired for any reason.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetCursor" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetCursor(nint cursor)
    parameters:
    - id: cursor
      type: System.IntPtr
      description: a cursor to make active.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetCursor(cursor As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.SetCursor*
  nameWithType.vb: Sdl.SetCursor(IntPtr)
  fullName.vb: SharpSDL3.Sdl.SetCursor(System.IntPtr)
  name.vb: SetCursor(IntPtr)
- uid: SharpSDL3.Sdl.GetCursor
  commentId: M:SharpSDL3.Sdl.GetCursor
  id: GetCursor
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetCursor()
  nameWithType: Sdl.GetCursor()
  fullName: SharpSDL3.Sdl.GetCursor()
  type: Method
  source:
    remote:
      path: SDL3/Mouse.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetCursor
    path: ../../repos/SDL3-CS/SDL3/Mouse.cs
    startLine: 448
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the active cursor.
  remarks: >-
    This function returns a pointer to the current cursor which is owned by the

    library. It is not necessary to free the cursor with

    SDL_DestroyCursor().

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetCursor(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint GetCursor()
    return:
      type: System.IntPtr
      description: (SDL_Cursor *) Returns the active cursor or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if there isno mouse.
    content.vb: Public Shared Function GetCursor() As IntPtr
  overload: SharpSDL3.Sdl.GetCursor*
- uid: SharpSDL3.Sdl.GetDefaultCursor
  commentId: M:SharpSDL3.Sdl.GetDefaultCursor
  id: GetDefaultCursor
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetDefaultCursor()
  nameWithType: Sdl.GetDefaultCursor()
  fullName: SharpSDL3.Sdl.GetDefaultCursor()
  type: Method
  source:
    remote:
      path: SDL3/Mouse.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetDefaultCursor
    path: ../../repos/SDL3-CS/SDL3/Mouse.cs
    startLine: 459
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the default cursor.
  remarks: >-
    You do not have to call SDL_DestroyCursor() on the

    return value, but it is safe to do so.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static nint GetDefaultCursor()
    return:
      type: System.IntPtr
      description: (SDL_Cursor *) Returns the default cursor on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>on failuree; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetDefaultCursor() As IntPtr
  overload: SharpSDL3.Sdl.GetDefaultCursor*
- uid: SharpSDL3.Sdl.DestroyCursor(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.DestroyCursor(System.IntPtr)
  id: DestroyCursor(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: DestroyCursor(nint)
  nameWithType: Sdl.DestroyCursor(nint)
  fullName: SharpSDL3.Sdl.DestroyCursor(nint)
  type: Method
  source:
    remote:
      path: SDL3/Mouse.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: DestroyCursor
    path: ../../repos/SDL3-CS/SDL3/Mouse.cs
    startLine: 476
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Free a previously-created cursor.
  remarks: >-
    Use this function to free cursor resources created with

    SDL_CreateCursor(),

    SDL_CreateColorCursor() or

    SDL_CreateSystemCursor().

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateColorCursor(System.IntPtr%2cSystem.Int32%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.CreateCursor(System.IntPtr%2cSystem.IntPtr%2cSystem.Int32%2cSystem.Int32%2cSystem.Int32%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.CreateSystemCursor(SharpSDL3.Enums.SystemCursor)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void DestroyCursor(nint cursor)
    parameters:
    - id: cursor
      type: System.IntPtr
      description: the cursor to free.
    content.vb: Public Shared Sub DestroyCursor(cursor As IntPtr)
  overload: SharpSDL3.Sdl.DestroyCursor*
  nameWithType.vb: Sdl.DestroyCursor(IntPtr)
  fullName.vb: SharpSDL3.Sdl.DestroyCursor(System.IntPtr)
  name.vb: DestroyCursor(IntPtr)
- uid: SharpSDL3.Sdl.ShowCursor
  commentId: M:SharpSDL3.Sdl.ShowCursor
  id: ShowCursor
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ShowCursor()
  nameWithType: Sdl.ShowCursor()
  fullName: SharpSDL3.Sdl.ShowCursor()
  type: Method
  source:
    remote:
      path: SDL3/Mouse.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ShowCursor
    path: ../../repos/SDL3-CS/SDL3/Mouse.cs
    startLine: 493
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Show the cursor.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CursorVisible" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.HideCursor" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool ShowCursor()
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function ShowCursor() As Boolean
  overload: SharpSDL3.Sdl.ShowCursor*
- uid: SharpSDL3.Sdl.HideCursor
  commentId: M:SharpSDL3.Sdl.HideCursor
  id: HideCursor
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: HideCursor()
  nameWithType: Sdl.HideCursor()
  fullName: SharpSDL3.Sdl.HideCursor()
  type: Method
  source:
    remote:
      path: SDL3/Mouse.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: HideCursor
    path: ../../repos/SDL3-CS/SDL3/Mouse.cs
    startLine: 504
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Hide the cursor.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CursorVisible" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.ShowCursor" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool HideCursor()
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function HideCursor() As Boolean
  overload: SharpSDL3.Sdl.HideCursor*
- uid: SharpSDL3.Sdl.CursorVisible
  commentId: M:SharpSDL3.Sdl.CursorVisible
  id: CursorVisible
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CursorVisible()
  nameWithType: Sdl.CursorVisible()
  fullName: SharpSDL3.Sdl.CursorVisible()
  type: Method
  source:
    remote:
      path: SDL3/Mouse.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CursorVisible
    path: ../../repos/SDL3-CS/SDL3/Mouse.cs
    startLine: 515
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Return whether the cursor is currently being shown.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.HideCursor" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.ShowCursor" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool CursorVisible()
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the cursor is being shown, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if thecursor is hidden.
    content.vb: Public Shared Function CursorVisible() As Boolean
  overload: SharpSDL3.Sdl.CursorVisible*
- uid: SharpSDL3.Sdl.BroadcastCondition(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.BroadcastCondition(System.IntPtr)
  id: BroadcastCondition(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: BroadcastCondition(nint)
  nameWithType: Sdl.BroadcastCondition(nint)
  fullName: SharpSDL3.Sdl.BroadcastCondition(nint)
  type: Method
  source:
    remote:
      path: SDL3/Mutex.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: BroadcastCondition
    path: ../../repos/SDL3-CS/SDL3/Mutex.cs
    startLine: 22
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Restart all threads that are waiting on the condition variable.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SignalCondition(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.WaitCondition(System.IntPtr%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.WaitConditionTimeout(System.IntPtr%2cSystem.IntPtr%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void BroadcastCondition(nint cond)
    parameters:
    - id: cond
      type: System.IntPtr
      description: the condition variable to signal.
    content.vb: Public Shared Sub BroadcastCondition(cond As IntPtr)
  overload: SharpSDL3.Sdl.BroadcastCondition*
  nameWithType.vb: Sdl.BroadcastCondition(IntPtr)
  fullName.vb: SharpSDL3.Sdl.BroadcastCondition(System.IntPtr)
  name.vb: BroadcastCondition(IntPtr)
- uid: SharpSDL3.Sdl.CreateCondition
  commentId: M:SharpSDL3.Sdl.CreateCondition
  id: CreateCondition
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CreateCondition()
  nameWithType: Sdl.CreateCondition()
  fullName: SharpSDL3.Sdl.CreateCondition()
  type: Method
  source:
    remote:
      path: SDL3/Mutex.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CreateCondition
    path: ../../repos/SDL3-CS/SDL3/Mutex.cs
    startLine: 40
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Create a condition variable.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.BroadcastCondition(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SignalCondition(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.WaitCondition(System.IntPtr%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.WaitConditionTimeout(System.IntPtr%2cSystem.IntPtr%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.DestroyCondition(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint CreateCondition()
    return:
      type: System.IntPtr
      description: (SDL_Condition *) Returns a new condition variable or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function CreateCondition() As IntPtr
  overload: SharpSDL3.Sdl.CreateCondition*
- uid: SharpSDL3.Sdl.CreateMutex
  commentId: M:SharpSDL3.Sdl.CreateMutex
  id: CreateMutex
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CreateMutex()
  nameWithType: Sdl.CreateMutex()
  fullName: SharpSDL3.Sdl.CreateMutex()
  type: Method
  source:
    remote:
      path: SDL3/Mutex.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CreateMutex
    path: ../../repos/SDL3-CS/SDL3/Mutex.cs
    startLine: 59
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Create a new mutex.
  remarks: >-
    All newly-created mutexes begin in the unlocked state.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.DestroyMutex(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.LockMutex(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.TryLockMutex(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.UnlockMutex(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint CreateMutex()
    return:
      type: System.IntPtr
      description: (SDL_Mutex *) Returns the initialized and unlocked mutex or<a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function CreateMutex() As IntPtr
  overload: SharpSDL3.Sdl.CreateMutex*
- uid: SharpSDL3.Sdl.CreateRWLock
  commentId: M:SharpSDL3.Sdl.CreateRWLock
  id: CreateRWLock
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CreateRWLock()
  nameWithType: Sdl.CreateRWLock()
  fullName: SharpSDL3.Sdl.CreateRWLock()
  type: Method
  source:
    remote:
      path: SDL3/Mutex.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CreateRWLock
    path: ../../repos/SDL3-CS/SDL3/Mutex.cs
    startLine: 86
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Create a new read/write lock.
  remarks: >-
    A read/write lock is useful for situations where you have multiple threads

    trying to access a resource that is rarely updated. All threads requesting

    a read-only lock will be allowed to run in parallel; if a thread requests a

    write lock, it will be provided exclusive access. This makes it safe for

    multiple threads to use a resource at the same time if they promise not to

    change it, and when it has to be changed, the rwlock will serve as a

    gateway to make sure those changes can be made safely.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.DestroyRWLock(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.LockRWLockForReading(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.LockRWLockForWriting(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.TryLockRWLockForReading(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.TryLockRWLockForWriting(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.UnlockRWLock(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint CreateRWLock()
    return:
      type: System.IntPtr
      description: (SDL_RWLock *) Returns the initialized and unlockedread/write lock or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function CreateRWLock() As IntPtr
  overload: SharpSDL3.Sdl.CreateRWLock*
- uid: SharpSDL3.Sdl.DestroyCondition(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.DestroyCondition(System.IntPtr)
  id: DestroyCondition(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: DestroyCondition(nint)
  nameWithType: Sdl.DestroyCondition(nint)
  fullName: SharpSDL3.Sdl.DestroyCondition(nint)
  type: Method
  source:
    remote:
      path: SDL3/Mutex.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: DestroyCondition
    path: ../../repos/SDL3-CS/SDL3/Mutex.cs
    startLine: 102
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Destroy a condition variable.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateCondition" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void DestroyCondition(nint cond)
    parameters:
    - id: cond
      type: System.IntPtr
      description: the condition variable to destroy.
    content.vb: Public Shared Sub DestroyCondition(cond As IntPtr)
  overload: SharpSDL3.Sdl.DestroyCondition*
  nameWithType.vb: Sdl.DestroyCondition(IntPtr)
  fullName.vb: SharpSDL3.Sdl.DestroyCondition(System.IntPtr)
  name.vb: DestroyCondition(IntPtr)
- uid: SharpSDL3.Sdl.DestroyMutex(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.DestroyMutex(System.IntPtr)
  id: DestroyMutex(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: DestroyMutex(nint)
  nameWithType: Sdl.DestroyMutex(nint)
  fullName: SharpSDL3.Sdl.DestroyMutex(nint)
  type: Method
  source:
    remote:
      path: SDL3/Mutex.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: DestroyMutex
    path: ../../repos/SDL3-CS/SDL3/Mutex.cs
    startLine: 122
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Destroy a mutex created with SDL_CreateMutex().
  remarks: >-
    This function must be called on any mutex that is no longer needed. Failure

    to destroy a mutex will result in a system memory or resource leak. While

    it is safe to destroy a mutex that is unlocked, it is not safe to attempt

    to destroy a locked mutex, and may result in undefined behavior depending

    on the platform.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateMutex" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void DestroyMutex(nint mutex)
    parameters:
    - id: mutex
      type: System.IntPtr
      description: the mutex to destroy.
    content.vb: Public Shared Sub DestroyMutex(mutex As IntPtr)
  overload: SharpSDL3.Sdl.DestroyMutex*
  nameWithType.vb: Sdl.DestroyMutex(IntPtr)
  fullName.vb: SharpSDL3.Sdl.DestroyMutex(System.IntPtr)
  name.vb: DestroyMutex(IntPtr)
- uid: SharpSDL3.Sdl.DestroyRWLock(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.DestroyRWLock(System.IntPtr)
  id: DestroyRWLock(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: DestroyRWLock(nint)
  nameWithType: Sdl.DestroyRWLock(nint)
  fullName: SharpSDL3.Sdl.DestroyRWLock(nint)
  type: Method
  source:
    remote:
      path: SDL3/Mutex.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: DestroyRWLock
    path: ../../repos/SDL3-CS/SDL3/Mutex.cs
    startLine: 142
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Destroy a read/write lock created with SDL_CreateRWLock().
  remarks: >-
    This function must be called on any read/write lock that is no longer

    needed. Failure to destroy a rwlock will result in a system memory or

    resource leak. While it is safe to destroy a rwlock that is unlocked, it

    is not safe to attempt to destroy a locked rwlock, and may result in

    undefined behavior depending on the platform.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateRWLock" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void DestroyRWLock(nint rwlock)
    parameters:
    - id: rwlock
      type: System.IntPtr
      description: the rwlock to destroy.
    content.vb: Public Shared Sub DestroyRWLock(rwlock As IntPtr)
  overload: SharpSDL3.Sdl.DestroyRWLock*
  nameWithType.vb: Sdl.DestroyRWLock(IntPtr)
  fullName.vb: SharpSDL3.Sdl.DestroyRWLock(System.IntPtr)
  name.vb: DestroyRWLock(IntPtr)
- uid: SharpSDL3.Sdl.LockMutex(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.LockMutex(System.IntPtr)
  id: LockMutex(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LockMutex(nint)
  nameWithType: Sdl.LockMutex(nint)
  fullName: SharpSDL3.Sdl.LockMutex(nint)
  type: Method
  source:
    remote:
      path: SDL3/Mutex.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LockMutex
    path: ../../repos/SDL3-CS/SDL3/Mutex.cs
    startLine: 161
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Lock the mutex.
  remarks: >-
    This will block until the mutex is available, which is to say it is in the

    unlocked state and the OS has chosen the caller as the next thread to lock

    it. Of all threads waiting to lock the mutex, only one may do so at a time.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.TryLockMutex(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.UnlockMutex(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void LockMutex(nint mutex)
    parameters:
    - id: mutex
      type: System.IntPtr
      description: the mutex to lock.
    content.vb: Public Shared Sub LockMutex(mutex As IntPtr)
  overload: SharpSDL3.Sdl.LockMutex*
  nameWithType.vb: Sdl.LockMutex(IntPtr)
  fullName.vb: SharpSDL3.Sdl.LockMutex(System.IntPtr)
  name.vb: LockMutex(IntPtr)
- uid: SharpSDL3.Sdl.LockRWLockForReading(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.LockRWLockForReading(System.IntPtr)
  id: LockRWLockForReading(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LockRWLockForReading(nint)
  nameWithType: Sdl.LockRWLockForReading(nint)
  fullName: SharpSDL3.Sdl.LockRWLockForReading(nint)
  type: Method
  source:
    remote:
      path: SDL3/Mutex.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LockRWLockForReading
    path: ../../repos/SDL3-CS/SDL3/Mutex.cs
    startLine: 184
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Lock the read/write lock for read only operations.
  remarks: >-
    This will block until the rwlock is available, which is to say it is not

    locked for writing by any other thread. Of all threads waiting to lock the

    rwlock, all may do so at the same time as long as they are requesting

    read-only access; if a thread wants to lock for writing, only one may do so

    at a time, and no other threads, read-only or not, may hold the lock at the

    same time.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.LockRWLockForWriting(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.TryLockRWLockForReading(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.UnlockRWLock(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void LockRWLockForReading(nint rwlock)
    parameters:
    - id: rwlock
      type: System.IntPtr
      description: the read/write lock to lock.
    content.vb: Public Shared Sub LockRWLockForReading(rwlock As IntPtr)
  overload: SharpSDL3.Sdl.LockRWLockForReading*
  nameWithType.vb: Sdl.LockRWLockForReading(IntPtr)
  fullName.vb: SharpSDL3.Sdl.LockRWLockForReading(System.IntPtr)
  name.vb: LockRWLockForReading(IntPtr)
- uid: SharpSDL3.Sdl.LockRWLockForWriting(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.LockRWLockForWriting(System.IntPtr)
  id: LockRWLockForWriting(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LockRWLockForWriting(nint)
  nameWithType: Sdl.LockRWLockForWriting(nint)
  fullName: SharpSDL3.Sdl.LockRWLockForWriting(nint)
  type: Method
  source:
    remote:
      path: SDL3/Mutex.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LockRWLockForWriting
    path: ../../repos/SDL3-CS/SDL3/Mutex.cs
    startLine: 206
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Lock the read/write lock for write operations.
  remarks: >-
    This will block until the rwlock is available, which is to say it is not

    locked for reading or writing by any other thread. Only one thread may hold

    the lock when it requests write access; all other threads, whether they

    also want to write or only want read-only access, must wait until the

    writer thread has released the lock.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.LockRWLockForReading(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.TryLockRWLockForWriting(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.UnlockRWLock(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void LockRWLockForWriting(nint rwlock)
    parameters:
    - id: rwlock
      type: System.IntPtr
      description: the read/write lock to lock.
    content.vb: Public Shared Sub LockRWLockForWriting(rwlock As IntPtr)
  overload: SharpSDL3.Sdl.LockRWLockForWriting*
  nameWithType.vb: Sdl.LockRWLockForWriting(IntPtr)
  fullName.vb: SharpSDL3.Sdl.LockRWLockForWriting(System.IntPtr)
  name.vb: LockRWLockForWriting(IntPtr)
- uid: SharpSDL3.Sdl.SetInitialized(SharpSDL3.Structs.InitState@,SharpSDL3.Structs.SdlBool)
  commentId: M:SharpSDL3.Sdl.SetInitialized(SharpSDL3.Structs.InitState@,SharpSDL3.Structs.SdlBool)
  id: SetInitialized(SharpSDL3.Structs.InitState@,SharpSDL3.Structs.SdlBool)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetInitialized(ref InitState, SdlBool)
  nameWithType: Sdl.SetInitialized(ref InitState, SdlBool)
  fullName: SharpSDL3.Sdl.SetInitialized(ref SharpSDL3.Structs.InitState, SharpSDL3.Structs.SdlBool)
  type: Method
  source:
    remote:
      path: SDL3/Mutex.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetInitialized
    path: ../../repos/SDL3-CS/SDL3/Mutex.cs
    startLine: 228
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Finish an initialization state transition.
  remarks: >-
    This function sets the status of the passed in state to

    SDL_INIT_STATUS_INITIALIZED or

    SDL_INIT_STATUS_UNINITIALIZED and allows

    any threads waiting for the status to proceed.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.ShouldInit(SharpSDL3.Structs.InitState%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.ShouldQuit(SharpSDL3.Structs.InitState%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void SetInitialized(ref InitState state, SdlBool initialized)
    parameters:
    - id: state
      type: SharpSDL3.Structs.InitState
      description: the initialization state to check.
    - id: initialized
      type: SharpSDL3.Structs.SdlBool
      description: the new initialization state.
    content.vb: Public Shared Sub SetInitialized(state As InitState, initialized As SdlBool)
  overload: SharpSDL3.Sdl.SetInitialized*
  nameWithType.vb: Sdl.SetInitialized(InitState, SdlBool)
  fullName.vb: SharpSDL3.Sdl.SetInitialized(SharpSDL3.Structs.InitState, SharpSDL3.Structs.SdlBool)
  name.vb: SetInitialized(InitState, SdlBool)
- uid: SharpSDL3.Sdl.ShouldInit(SharpSDL3.Structs.InitState@)
  commentId: M:SharpSDL3.Sdl.ShouldInit(SharpSDL3.Structs.InitState@)
  id: ShouldInit(SharpSDL3.Structs.InitState@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ShouldInit(ref InitState)
  nameWithType: Sdl.ShouldInit(ref InitState)
  fullName: SharpSDL3.Sdl.ShouldInit(ref SharpSDL3.Structs.InitState)
  type: Method
  source:
    remote:
      path: SDL3/Mutex.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ShouldInit
    path: ../../repos/SDL3-CS/SDL3/Mutex.cs
    startLine: 258
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Return whether initialization should be done.
  remarks: >-
    This function checks the passed in state and if initialization should be

    done, sets the status to

    SDL_INIT_STATUS_INITIALIZING and returns

    <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>. If another thread is already modifying this state, it will wait until

    that's done before returning.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetInitialized(SharpSDL3.Structs.InitState%40%2cSharpSDL3.Structs.SdlBool)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.ShouldQuit(SharpSDL3.Structs.InitState%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static SdlBool ShouldInit(ref InitState state)
    parameters:
    - id: state
      type: SharpSDL3.Structs.InitState
      description: the initialization state to check.
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if initialization needs to be done, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Public Shared Function ShouldInit(state As InitState) As SdlBool
  overload: SharpSDL3.Sdl.ShouldInit*
  nameWithType.vb: Sdl.ShouldInit(InitState)
  fullName.vb: SharpSDL3.Sdl.ShouldInit(SharpSDL3.Structs.InitState)
  name.vb: ShouldInit(InitState)
- uid: SharpSDL3.Sdl.ShouldQuit(SharpSDL3.Structs.InitState@)
  commentId: M:SharpSDL3.Sdl.ShouldQuit(SharpSDL3.Structs.InitState@)
  id: ShouldQuit(SharpSDL3.Structs.InitState@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ShouldQuit(ref InitState)
  nameWithType: Sdl.ShouldQuit(ref InitState)
  fullName: SharpSDL3.Sdl.ShouldQuit(ref SharpSDL3.Structs.InitState)
  type: Method
  source:
    remote:
      path: SDL3/Mutex.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ShouldQuit
    path: ../../repos/SDL3-CS/SDL3/Mutex.cs
    startLine: 283
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Return whether cleanup should be done.
  remarks: >-
    This function checks the passed in state and if cleanup should be done,

    sets the status to

    SDL_INIT_STATUS_UNINITIALIZING and

    returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetInitialized(SharpSDL3.Structs.InitState%40%2cSharpSDL3.Structs.SdlBool)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.ShouldInit(SharpSDL3.Structs.InitState%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static SdlBool ShouldQuit(ref InitState state)
    parameters:
    - id: state
      type: SharpSDL3.Structs.InitState
      description: the initialization state to check.
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if cleanup needs to be done, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Public Shared Function ShouldQuit(state As InitState) As SdlBool
  overload: SharpSDL3.Sdl.ShouldQuit*
  nameWithType.vb: Sdl.ShouldQuit(InitState)
  fullName.vb: SharpSDL3.Sdl.ShouldQuit(SharpSDL3.Structs.InitState)
  name.vb: ShouldQuit(InitState)
- uid: SharpSDL3.Sdl.SignalCondition(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.SignalCondition(System.IntPtr)
  id: SignalCondition(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SignalCondition(nint)
  nameWithType: Sdl.SignalCondition(nint)
  fullName: SharpSDL3.Sdl.SignalCondition(nint)
  type: Method
  source:
    remote:
      path: SDL3/Mutex.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SignalCondition
    path: ../../repos/SDL3-CS/SDL3/Mutex.cs
    startLine: 310
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Restart one of the threads that are waiting on the condition variable.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.BroadcastCondition(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.WaitCondition(System.IntPtr%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.WaitConditionTimeout(System.IntPtr%2cSystem.IntPtr%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void SignalCondition(nint cond)
    parameters:
    - id: cond
      type: System.IntPtr
      description: the condition variable to signal.
    content.vb: Public Shared Sub SignalCondition(cond As IntPtr)
  overload: SharpSDL3.Sdl.SignalCondition*
  nameWithType.vb: Sdl.SignalCondition(IntPtr)
  fullName.vb: SharpSDL3.Sdl.SignalCondition(System.IntPtr)
  name.vb: SignalCondition(IntPtr)
- uid: SharpSDL3.Sdl.TryLockMutex(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.TryLockMutex(System.IntPtr)
  id: TryLockMutex(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: TryLockMutex(nint)
  nameWithType: Sdl.TryLockMutex(nint)
  fullName: SharpSDL3.Sdl.TryLockMutex(nint)
  type: Method
  source:
    remote:
      path: SDL3/Mutex.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: TryLockMutex
    path: ../../repos/SDL3-CS/SDL3/Mutex.cs
    startLine: 329
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Try to lock a mutex without blocking.
  remarks: >-
    This works just like SDL_LockMutex(), but if the mutex is

    not available, this function returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> immediately.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.LockMutex(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.UnlockMutex(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static SdlBool TryLockMutex(nint mutex)
    parameters:
    - id: mutex
      type: System.IntPtr
      description: the mutex to try to lock.
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if the mutex would block.
    content.vb: Public Shared Function TryLockMutex(mutex As IntPtr) As SdlBool
  overload: SharpSDL3.Sdl.TryLockMutex*
  nameWithType.vb: Sdl.TryLockMutex(IntPtr)
  fullName.vb: SharpSDL3.Sdl.TryLockMutex(System.IntPtr)
  name.vb: TryLockMutex(IntPtr)
- uid: SharpSDL3.Sdl.TryLockRWLockForReading(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.TryLockRWLockForReading(System.IntPtr)
  id: TryLockRWLockForReading(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: TryLockRWLockForReading(nint)
  nameWithType: Sdl.TryLockRWLockForReading(nint)
  fullName: SharpSDL3.Sdl.TryLockRWLockForReading(nint)
  type: Method
  source:
    remote:
      path: SDL3/Mutex.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: TryLockRWLockForReading
    path: ../../repos/SDL3-CS/SDL3/Mutex.cs
    startLine: 350
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Try to lock a read/write lock for reading without blocking.
  remarks: >-
    This works just like

    SDL_LockRWLockForReading(), but if the rwlock

    is not available, then this function returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> immediately.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.LockRWLockForReading(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.TryLockRWLockForWriting(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.UnlockRWLock(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static SdlBool TryLockRWLockForReading(nint rwlock)
    parameters:
    - id: rwlock
      type: System.IntPtr
      description: the rwlock to try to lock.
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if the lock would block.
    content.vb: Public Shared Function TryLockRWLockForReading(rwlock As IntPtr) As SdlBool
  overload: SharpSDL3.Sdl.TryLockRWLockForReading*
  nameWithType.vb: Sdl.TryLockRWLockForReading(IntPtr)
  fullName.vb: SharpSDL3.Sdl.TryLockRWLockForReading(System.IntPtr)
  name.vb: TryLockRWLockForReading(IntPtr)
- uid: SharpSDL3.Sdl.TryLockRWLockForWriting(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.TryLockRWLockForWriting(System.IntPtr)
  id: TryLockRWLockForWriting(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: TryLockRWLockForWriting(nint)
  nameWithType: Sdl.TryLockRWLockForWriting(nint)
  fullName: SharpSDL3.Sdl.TryLockRWLockForWriting(nint)
  type: Method
  source:
    remote:
      path: SDL3/Mutex.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: TryLockRWLockForWriting
    path: ../../repos/SDL3-CS/SDL3/Mutex.cs
    startLine: 371
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Try to lock a read/write lock for writing without blocking.
  remarks: >-
    This works just like

    SDL_LockRWLockForWriting(), but if the rwlock

    is not available, then this function returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> immediately.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.LockRWLockForWriting(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.TryLockRWLockForReading(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.UnlockRWLock(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static SdlBool TryLockRWLockForWriting(nint rwlock)
    parameters:
    - id: rwlock
      type: System.IntPtr
      description: the rwlock to try to lock.
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if the lock would block.
    content.vb: Public Shared Function TryLockRWLockForWriting(rwlock As IntPtr) As SdlBool
  overload: SharpSDL3.Sdl.TryLockRWLockForWriting*
  nameWithType.vb: Sdl.TryLockRWLockForWriting(IntPtr)
  fullName.vb: SharpSDL3.Sdl.TryLockRWLockForWriting(System.IntPtr)
  name.vb: TryLockRWLockForWriting(IntPtr)
- uid: SharpSDL3.Sdl.UnlockMutex(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.UnlockMutex(System.IntPtr)
  id: UnlockMutex(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: UnlockMutex(nint)
  nameWithType: Sdl.UnlockMutex(nint)
  fullName: SharpSDL3.Sdl.UnlockMutex(nint)
  type: Method
  source:
    remote:
      path: SDL3/Mutex.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: UnlockMutex
    path: ../../repos/SDL3-CS/SDL3/Mutex.cs
    startLine: 390
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Unlock the mutex.
  remarks: >-
    It is legal for the owning thread to lock an already-locked mutex. It must

    unlock it the same number of times before it is actually made available for

    other threads in the system (this is known as a "recursive mutex").

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.LockMutex(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.TryLockMutex(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void UnlockMutex(nint mutex)
    parameters:
    - id: mutex
      type: System.IntPtr
      description: the mutex to unlock.
    content.vb: Public Shared Sub UnlockMutex(mutex As IntPtr)
  overload: SharpSDL3.Sdl.UnlockMutex*
  nameWithType.vb: Sdl.UnlockMutex(IntPtr)
  fullName.vb: SharpSDL3.Sdl.UnlockMutex(System.IntPtr)
  name.vb: UnlockMutex(IntPtr)
- uid: SharpSDL3.Sdl.UnlockRWLock(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.UnlockRWLock(System.IntPtr)
  id: UnlockRWLock(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: UnlockRWLock(nint)
  nameWithType: Sdl.UnlockRWLock(nint)
  fullName: SharpSDL3.Sdl.UnlockRWLock(nint)
  type: Method
  source:
    remote:
      path: SDL3/Mutex.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: UnlockRWLock
    path: ../../repos/SDL3-CS/SDL3/Mutex.cs
    startLine: 410
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Unlock the read/write lock.
  remarks: >-
    Use this function to unlock the rwlock, whether it was locked for read-only

    or write operations.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.LockRWLockForReading(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.LockRWLockForWriting(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.TryLockRWLockForReading(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.TryLockRWLockForWriting(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void UnlockRWLock(nint rwlock)
    parameters:
    - id: rwlock
      type: System.IntPtr
      description: the rwlock to unlock.
    content.vb: Public Shared Sub UnlockRWLock(rwlock As IntPtr)
  overload: SharpSDL3.Sdl.UnlockRWLock*
  nameWithType.vb: Sdl.UnlockRWLock(IntPtr)
  fullName.vb: SharpSDL3.Sdl.UnlockRWLock(System.IntPtr)
  name.vb: UnlockRWLock(IntPtr)
- uid: SharpSDL3.Sdl.WaitCondition(System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.WaitCondition(System.IntPtr,System.IntPtr)
  id: WaitCondition(System.IntPtr,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: WaitCondition(nint, nint)
  nameWithType: Sdl.WaitCondition(nint, nint)
  fullName: SharpSDL3.Sdl.WaitCondition(nint, nint)
  type: Method
  source:
    remote:
      path: SDL3/Mutex.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: WaitCondition
    path: ../../repos/SDL3-CS/SDL3/Mutex.cs
    startLine: 434
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Wait until a condition variable is signaled.
  remarks: >-
    This function unlocks the specified mutex and waits for another thread to

    call SDL_SignalCondition() or

    SDL_BroadcastCondition() on the condition

    variable cond. Once the condition variable is signaled, the mutex is

    re-locked and the function returns.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.BroadcastCondition(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SignalCondition(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.WaitConditionTimeout(System.IntPtr%2cSystem.IntPtr%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void WaitCondition(nint cond, nint mutex)
    parameters:
    - id: cond
      type: System.IntPtr
      description: the condition variable to wait on.
    - id: mutex
      type: System.IntPtr
      description: the mutex used to coordinate thread access.
    content.vb: Public Shared Sub WaitCondition(cond As IntPtr, mutex As IntPtr)
  overload: SharpSDL3.Sdl.WaitCondition*
  nameWithType.vb: Sdl.WaitCondition(IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.WaitCondition(System.IntPtr, System.IntPtr)
  name.vb: WaitCondition(IntPtr, IntPtr)
- uid: SharpSDL3.Sdl.WaitConditionTimeout(System.IntPtr,System.IntPtr,System.Int32)
  commentId: M:SharpSDL3.Sdl.WaitConditionTimeout(System.IntPtr,System.IntPtr,System.Int32)
  id: WaitConditionTimeout(System.IntPtr,System.IntPtr,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: WaitConditionTimeout(nint, nint, int)
  nameWithType: Sdl.WaitConditionTimeout(nint, nint, int)
  fullName: SharpSDL3.Sdl.WaitConditionTimeout(nint, nint, int)
  type: Method
  source:
    remote:
      path: SDL3/Mutex.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: WaitConditionTimeout
    path: ../../repos/SDL3-CS/SDL3/Mutex.cs
    startLine: 471
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Wait until a condition variable is signaled or a certain time has passed.
  remarks: >-
    This function unlocks the specified mutex and waits for another thread to

    call SDL_SignalCondition() or

    SDL_BroadcastCondition() on the condition

    variable cond, or for the specified time to elapse. Once the condition

    variable is signaled or the time elapsed, the mutex is re-locked and the

    function returns.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.BroadcastCondition(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SignalCondition(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.WaitCondition(System.IntPtr%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static SdlBool WaitConditionTimeout(nint cond, nint mutex, int timeoutMs)
    parameters:
    - id: cond
      type: System.IntPtr
      description: the condition variable to wait on.
    - id: mutex
      type: System.IntPtr
      description: the mutex used to coordinate thread access.
    - id: timeoutMs
      type: System.Int32
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the condition variable is signaled, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if thecondition is not signaled in the allotted time.
    content.vb: Public Shared Function WaitConditionTimeout(cond As IntPtr, mutex As IntPtr, timeoutMs As Integer) As SdlBool
  overload: SharpSDL3.Sdl.WaitConditionTimeout*
  nameWithType.vb: Sdl.WaitConditionTimeout(IntPtr, IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.WaitConditionTimeout(System.IntPtr, System.IntPtr, Integer)
  name.vb: WaitConditionTimeout(IntPtr, IntPtr, Integer)
- uid: SharpSDL3.Sdl.EglGetCurrentConfig
  commentId: M:SharpSDL3.Sdl.EglGetCurrentConfig
  id: EglGetCurrentConfig
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: EglGetCurrentConfig()
  nameWithType: Sdl.EglGetCurrentConfig()
  fullName: SharpSDL3.Sdl.EglGetCurrentConfig()
  type: Method
  source:
    remote:
      path: SDL3/OpenGL.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: EglGetCurrentConfig
    path: ../../repos/SDL3-CS/SDL3/OpenGL.cs
    startLine: 11
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static nint EglGetCurrentConfig()
    return:
      type: System.IntPtr
    content.vb: Public Shared Function EglGetCurrentConfig() As IntPtr
  overload: SharpSDL3.Sdl.EglGetCurrentConfig*
- uid: SharpSDL3.Sdl.EglGetCurrentDisplay
  commentId: M:SharpSDL3.Sdl.EglGetCurrentDisplay
  id: EglGetCurrentDisplay
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: EglGetCurrentDisplay()
  nameWithType: Sdl.EglGetCurrentDisplay()
  fullName: SharpSDL3.Sdl.EglGetCurrentDisplay()
  type: Method
  source:
    remote:
      path: SDL3/OpenGL.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: EglGetCurrentDisplay
    path: ../../repos/SDL3-CS/SDL3/OpenGL.cs
    startLine: 19
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static nint EglGetCurrentDisplay()
    return:
      type: System.IntPtr
    content.vb: Public Shared Function EglGetCurrentDisplay() As IntPtr
  overload: SharpSDL3.Sdl.EglGetCurrentDisplay*
- uid: SharpSDL3.Sdl.EglGetProcAddress(System.String)
  commentId: M:SharpSDL3.Sdl.EglGetProcAddress(System.String)
  id: EglGetProcAddress(System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: EglGetProcAddress(string)
  nameWithType: Sdl.EglGetProcAddress(string)
  fullName: SharpSDL3.Sdl.EglGetProcAddress(string)
  type: Method
  source:
    remote:
      path: SDL3/OpenGL.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: EglGetProcAddress
    path: ../../repos/SDL3-CS/SDL3/OpenGL.cs
    startLine: 27
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static nint EglGetProcAddress(string proc)
    parameters:
    - id: proc
      type: System.String
    return:
      type: System.IntPtr
    content.vb: Public Shared Function EglGetProcAddress(proc As String) As IntPtr
  overload: SharpSDL3.Sdl.EglGetProcAddress*
  nameWithType.vb: Sdl.EglGetProcAddress(String)
  fullName.vb: SharpSDL3.Sdl.EglGetProcAddress(String)
  name.vb: EglGetProcAddress(String)
- uid: SharpSDL3.Sdl.EglGetWindowSurface(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.EglGetWindowSurface(System.IntPtr)
  id: EglGetWindowSurface(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: EglGetWindowSurface(nint)
  nameWithType: Sdl.EglGetWindowSurface(nint)
  fullName: SharpSDL3.Sdl.EglGetWindowSurface(nint)
  type: Method
  source:
    remote:
      path: SDL3/OpenGL.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: EglGetWindowSurface
    path: ../../repos/SDL3-CS/SDL3/OpenGL.cs
    startLine: 38
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static nint EglGetWindowSurface(nint window)
    parameters:
    - id: window
      type: System.IntPtr
    return:
      type: System.IntPtr
    content.vb: Public Shared Function EglGetWindowSurface(window As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.EglGetWindowSurface*
  nameWithType.vb: Sdl.EglGetWindowSurface(IntPtr)
  fullName.vb: SharpSDL3.Sdl.EglGetWindowSurface(System.IntPtr)
  name.vb: EglGetWindowSurface(IntPtr)
- uid: SharpSDL3.Sdl.EglSetAttributeCallbacks(SharpSDL3.Delegates.SdlEglAttribArrayCallback,SharpSDL3.Delegates.SdlEglIntArrayCallback,SharpSDL3.Delegates.SdlEglIntArrayCallback,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.EglSetAttributeCallbacks(SharpSDL3.Delegates.SdlEglAttribArrayCallback,SharpSDL3.Delegates.SdlEglIntArrayCallback,SharpSDL3.Delegates.SdlEglIntArrayCallback,System.IntPtr)
  id: EglSetAttributeCallbacks(SharpSDL3.Delegates.SdlEglAttribArrayCallback,SharpSDL3.Delegates.SdlEglIntArrayCallback,SharpSDL3.Delegates.SdlEglIntArrayCallback,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: EglSetAttributeCallbacks(SdlEglAttribArrayCallback, SdlEglIntArrayCallback, SdlEglIntArrayCallback, nint)
  nameWithType: Sdl.EglSetAttributeCallbacks(Delegates.SdlEglAttribArrayCallback, Delegates.SdlEglIntArrayCallback, Delegates.SdlEglIntArrayCallback, nint)
  fullName: SharpSDL3.Sdl.EglSetAttributeCallbacks(SharpSDL3.Delegates.SdlEglAttribArrayCallback, SharpSDL3.Delegates.SdlEglIntArrayCallback, SharpSDL3.Delegates.SdlEglIntArrayCallback, nint)
  type: Method
  source:
    remote:
      path: SDL3/OpenGL.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: EglSetAttributeCallbacks
    path: ../../repos/SDL3-CS/SDL3/OpenGL.cs
    startLine: 49
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static void EglSetAttributeCallbacks(Delegates.SdlEglAttribArrayCallback platformAttribCallback, Delegates.SdlEglIntArrayCallback surfaceAttribCallback, Delegates.SdlEglIntArrayCallback contextAttribCallback, nint userdata)
    parameters:
    - id: platformAttribCallback
      type: SharpSDL3.Delegates.SdlEglAttribArrayCallback
    - id: surfaceAttribCallback
      type: SharpSDL3.Delegates.SdlEglIntArrayCallback
    - id: contextAttribCallback
      type: SharpSDL3.Delegates.SdlEglIntArrayCallback
    - id: userdata
      type: System.IntPtr
    content.vb: Public Shared Sub EglSetAttributeCallbacks(platformAttribCallback As Delegates.SdlEglAttribArrayCallback, surfaceAttribCallback As Delegates.SdlEglIntArrayCallback, contextAttribCallback As Delegates.SdlEglIntArrayCallback, userdata As IntPtr)
  overload: SharpSDL3.Sdl.EglSetAttributeCallbacks*
  nameWithType.vb: Sdl.EglSetAttributeCallbacks(Delegates.SdlEglAttribArrayCallback, Delegates.SdlEglIntArrayCallback, Delegates.SdlEglIntArrayCallback, IntPtr)
  fullName.vb: SharpSDL3.Sdl.EglSetAttributeCallbacks(SharpSDL3.Delegates.SdlEglAttribArrayCallback, SharpSDL3.Delegates.SdlEglIntArrayCallback, SharpSDL3.Delegates.SdlEglIntArrayCallback, System.IntPtr)
  name.vb: EglSetAttributeCallbacks(SdlEglAttribArrayCallback, SdlEglIntArrayCallback, SdlEglIntArrayCallback, IntPtr)
- uid: SharpSDL3.Sdl.GlCreateContext(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GlCreateContext(System.IntPtr)
  id: GlCreateContext(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GlCreateContext(nint)
  nameWithType: Sdl.GlCreateContext(nint)
  fullName: SharpSDL3.Sdl.GlCreateContext(nint)
  type: Method
  source:
    remote:
      path: SDL3/OpenGL.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GlCreateContext
    path: ../../repos/SDL3-CS/SDL3/OpenGL.cs
    startLine: 64
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static nint GlCreateContext(nint window)
    parameters:
    - id: window
      type: System.IntPtr
    return:
      type: System.IntPtr
    content.vb: Public Shared Function GlCreateContext(window As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.GlCreateContext*
  nameWithType.vb: Sdl.GlCreateContext(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GlCreateContext(System.IntPtr)
  name.vb: GlCreateContext(IntPtr)
- uid: SharpSDL3.Sdl.GlDestroyContext(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GlDestroyContext(System.IntPtr)
  id: GlDestroyContext(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GlDestroyContext(nint)
  nameWithType: Sdl.GlDestroyContext(nint)
  fullName: SharpSDL3.Sdl.GlDestroyContext(nint)
  type: Method
  source:
    remote:
      path: SDL3/OpenGL.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GlDestroyContext
    path: ../../repos/SDL3-CS/SDL3/OpenGL.cs
    startLine: 75
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static SdlBool GlDestroyContext(nint context)
    parameters:
    - id: context
      type: System.IntPtr
    return:
      type: SharpSDL3.Structs.SdlBool
    content.vb: Public Shared Function GlDestroyContext(context As IntPtr) As SdlBool
  overload: SharpSDL3.Sdl.GlDestroyContext*
  nameWithType.vb: Sdl.GlDestroyContext(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GlDestroyContext(System.IntPtr)
  name.vb: GlDestroyContext(IntPtr)
- uid: SharpSDL3.Sdl.GlExtensionSupported(System.String)
  commentId: M:SharpSDL3.Sdl.GlExtensionSupported(System.String)
  id: GlExtensionSupported(System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GlExtensionSupported(string)
  nameWithType: Sdl.GlExtensionSupported(string)
  fullName: SharpSDL3.Sdl.GlExtensionSupported(string)
  type: Method
  source:
    remote:
      path: SDL3/OpenGL.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GlExtensionSupported
    path: ../../repos/SDL3-CS/SDL3/OpenGL.cs
    startLine: 86
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static SdlBool GlExtensionSupported(string extension)
    parameters:
    - id: extension
      type: System.String
    return:
      type: SharpSDL3.Structs.SdlBool
    content.vb: Public Shared Function GlExtensionSupported(extension As String) As SdlBool
  overload: SharpSDL3.Sdl.GlExtensionSupported*
  nameWithType.vb: Sdl.GlExtensionSupported(String)
  fullName.vb: SharpSDL3.Sdl.GlExtensionSupported(String)
  name.vb: GlExtensionSupported(String)
- uid: SharpSDL3.Sdl.GlGetAttribute(SharpSDL3.Enums.GlAttr,System.Int32@)
  commentId: M:SharpSDL3.Sdl.GlGetAttribute(SharpSDL3.Enums.GlAttr,System.Int32@)
  id: GlGetAttribute(SharpSDL3.Enums.GlAttr,System.Int32@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GlGetAttribute(GlAttr, out int)
  nameWithType: Sdl.GlGetAttribute(GlAttr, out int)
  fullName: SharpSDL3.Sdl.GlGetAttribute(SharpSDL3.Enums.GlAttr, out int)
  type: Method
  source:
    remote:
      path: SDL3/OpenGL.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GlGetAttribute
    path: ../../repos/SDL3-CS/SDL3/OpenGL.cs
    startLine: 97
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static SdlBool GlGetAttribute(GlAttr attr, out int value)
    parameters:
    - id: attr
      type: SharpSDL3.Enums.GlAttr
    - id: value
      type: System.Int32
    return:
      type: SharpSDL3.Structs.SdlBool
    content.vb: Public Shared Function GlGetAttribute(attr As GlAttr, value As Integer) As SdlBool
  overload: SharpSDL3.Sdl.GlGetAttribute*
  nameWithType.vb: Sdl.GlGetAttribute(GlAttr, Integer)
  fullName.vb: SharpSDL3.Sdl.GlGetAttribute(SharpSDL3.Enums.GlAttr, Integer)
  name.vb: GlGetAttribute(GlAttr, Integer)
- uid: SharpSDL3.Sdl.GlGetCurrentContext
  commentId: M:SharpSDL3.Sdl.GlGetCurrentContext
  id: GlGetCurrentContext
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GlGetCurrentContext()
  nameWithType: Sdl.GlGetCurrentContext()
  fullName: SharpSDL3.Sdl.GlGetCurrentContext()
  type: Method
  source:
    remote:
      path: SDL3/OpenGL.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GlGetCurrentContext
    path: ../../repos/SDL3-CS/SDL3/OpenGL.cs
    startLine: 108
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static nint GlGetCurrentContext()
    return:
      type: System.IntPtr
    content.vb: Public Shared Function GlGetCurrentContext() As IntPtr
  overload: SharpSDL3.Sdl.GlGetCurrentContext*
- uid: SharpSDL3.Sdl.GlGetCurrentWindow
  commentId: M:SharpSDL3.Sdl.GlGetCurrentWindow
  id: GlGetCurrentWindow
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GlGetCurrentWindow()
  nameWithType: Sdl.GlGetCurrentWindow()
  fullName: SharpSDL3.Sdl.GlGetCurrentWindow()
  type: Method
  source:
    remote:
      path: SDL3/OpenGL.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GlGetCurrentWindow
    path: ../../repos/SDL3-CS/SDL3/OpenGL.cs
    startLine: 116
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static nint GlGetCurrentWindow()
    return:
      type: System.IntPtr
    content.vb: Public Shared Function GlGetCurrentWindow() As IntPtr
  overload: SharpSDL3.Sdl.GlGetCurrentWindow*
- uid: SharpSDL3.Sdl.GlGetProcAddress(System.String)
  commentId: M:SharpSDL3.Sdl.GlGetProcAddress(System.String)
  id: GlGetProcAddress(System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GlGetProcAddress(string)
  nameWithType: Sdl.GlGetProcAddress(string)
  fullName: SharpSDL3.Sdl.GlGetProcAddress(string)
  type: Method
  source:
    remote:
      path: SDL3/OpenGL.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GlGetProcAddress
    path: ../../repos/SDL3-CS/SDL3/OpenGL.cs
    startLine: 124
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static nint GlGetProcAddress(string proc)
    parameters:
    - id: proc
      type: System.String
    return:
      type: System.IntPtr
    content.vb: Public Shared Function GlGetProcAddress(proc As String) As IntPtr
  overload: SharpSDL3.Sdl.GlGetProcAddress*
  nameWithType.vb: Sdl.GlGetProcAddress(String)
  fullName.vb: SharpSDL3.Sdl.GlGetProcAddress(String)
  name.vb: GlGetProcAddress(String)
- uid: SharpSDL3.Sdl.GlGetSwapInterval(System.Int32@)
  commentId: M:SharpSDL3.Sdl.GlGetSwapInterval(System.Int32@)
  id: GlGetSwapInterval(System.Int32@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GlGetSwapInterval(out int)
  nameWithType: Sdl.GlGetSwapInterval(out int)
  fullName: SharpSDL3.Sdl.GlGetSwapInterval(out int)
  type: Method
  source:
    remote:
      path: SDL3/OpenGL.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GlGetSwapInterval
    path: ../../repos/SDL3-CS/SDL3/OpenGL.cs
    startLine: 135
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static SdlBool GlGetSwapInterval(out int interval)
    parameters:
    - id: interval
      type: System.Int32
    return:
      type: SharpSDL3.Structs.SdlBool
    content.vb: Public Shared Function GlGetSwapInterval(interval As Integer) As SdlBool
  overload: SharpSDL3.Sdl.GlGetSwapInterval*
  nameWithType.vb: Sdl.GlGetSwapInterval(Integer)
  fullName.vb: SharpSDL3.Sdl.GlGetSwapInterval(Integer)
  name.vb: GlGetSwapInterval(Integer)
- uid: SharpSDL3.Sdl.GlLoadLibrary(System.String)
  commentId: M:SharpSDL3.Sdl.GlLoadLibrary(System.String)
  id: GlLoadLibrary(System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GlLoadLibrary(string)
  nameWithType: Sdl.GlLoadLibrary(string)
  fullName: SharpSDL3.Sdl.GlLoadLibrary(string)
  type: Method
  source:
    remote:
      path: SDL3/OpenGL.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GlLoadLibrary
    path: ../../repos/SDL3-CS/SDL3/OpenGL.cs
    startLine: 143
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static SdlBool GlLoadLibrary(string path)
    parameters:
    - id: path
      type: System.String
    return:
      type: SharpSDL3.Structs.SdlBool
    content.vb: Public Shared Function GlLoadLibrary(path As String) As SdlBool
  overload: SharpSDL3.Sdl.GlLoadLibrary*
  nameWithType.vb: Sdl.GlLoadLibrary(String)
  fullName.vb: SharpSDL3.Sdl.GlLoadLibrary(String)
  name.vb: GlLoadLibrary(String)
- uid: SharpSDL3.Sdl.GlMakeCurrent(System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GlMakeCurrent(System.IntPtr,System.IntPtr)
  id: GlMakeCurrent(System.IntPtr,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GlMakeCurrent(nint, nint)
  nameWithType: Sdl.GlMakeCurrent(nint, nint)
  fullName: SharpSDL3.Sdl.GlMakeCurrent(nint, nint)
  type: Method
  source:
    remote:
      path: SDL3/OpenGL.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GlMakeCurrent
    path: ../../repos/SDL3-CS/SDL3/OpenGL.cs
    startLine: 156
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static SdlBool GlMakeCurrent(nint window, nint context)
    parameters:
    - id: window
      type: System.IntPtr
    - id: context
      type: System.IntPtr
    return:
      type: SharpSDL3.Structs.SdlBool
    content.vb: Public Shared Function GlMakeCurrent(window As IntPtr, context As IntPtr) As SdlBool
  overload: SharpSDL3.Sdl.GlMakeCurrent*
  nameWithType.vb: Sdl.GlMakeCurrent(IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.GlMakeCurrent(System.IntPtr, System.IntPtr)
  name.vb: GlMakeCurrent(IntPtr, IntPtr)
- uid: SharpSDL3.Sdl.GlResetAttributes
  commentId: M:SharpSDL3.Sdl.GlResetAttributes
  id: GlResetAttributes
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GlResetAttributes()
  nameWithType: Sdl.GlResetAttributes()
  fullName: SharpSDL3.Sdl.GlResetAttributes()
  type: Method
  source:
    remote:
      path: SDL3/OpenGL.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GlResetAttributes
    path: ../../repos/SDL3-CS/SDL3/OpenGL.cs
    startLine: 170
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static void GlResetAttributes()
    content.vb: Public Shared Sub GlResetAttributes()
  overload: SharpSDL3.Sdl.GlResetAttributes*
- uid: SharpSDL3.Sdl.GlSetAttribute(SharpSDL3.Enums.GlAttr,System.Int32)
  commentId: M:SharpSDL3.Sdl.GlSetAttribute(SharpSDL3.Enums.GlAttr,System.Int32)
  id: GlSetAttribute(SharpSDL3.Enums.GlAttr,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GlSetAttribute(GlAttr, int)
  nameWithType: Sdl.GlSetAttribute(GlAttr, int)
  fullName: SharpSDL3.Sdl.GlSetAttribute(SharpSDL3.Enums.GlAttr, int)
  type: Method
  source:
    remote:
      path: SDL3/OpenGL.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GlSetAttribute
    path: ../../repos/SDL3-CS/SDL3/OpenGL.cs
    startLine: 174
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static SdlBool GlSetAttribute(GlAttr attr, int value)
    parameters:
    - id: attr
      type: SharpSDL3.Enums.GlAttr
    - id: value
      type: System.Int32
    return:
      type: SharpSDL3.Structs.SdlBool
    content.vb: Public Shared Function GlSetAttribute(attr As GlAttr, value As Integer) As SdlBool
  overload: SharpSDL3.Sdl.GlSetAttribute*
  nameWithType.vb: Sdl.GlSetAttribute(GlAttr, Integer)
  fullName.vb: SharpSDL3.Sdl.GlSetAttribute(SharpSDL3.Enums.GlAttr, Integer)
  name.vb: GlSetAttribute(GlAttr, Integer)
- uid: SharpSDL3.Sdl.GlSetSwapInterval(System.Int32)
  commentId: M:SharpSDL3.Sdl.GlSetSwapInterval(System.Int32)
  id: GlSetSwapInterval(System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GlSetSwapInterval(int)
  nameWithType: Sdl.GlSetSwapInterval(int)
  fullName: SharpSDL3.Sdl.GlSetSwapInterval(int)
  type: Method
  source:
    remote:
      path: SDL3/OpenGL.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GlSetSwapInterval
    path: ../../repos/SDL3-CS/SDL3/OpenGL.cs
    startLine: 188
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static SdlBool GlSetSwapInterval(int interval)
    parameters:
    - id: interval
      type: System.Int32
    return:
      type: SharpSDL3.Structs.SdlBool
    content.vb: Public Shared Function GlSetSwapInterval(interval As Integer) As SdlBool
  overload: SharpSDL3.Sdl.GlSetSwapInterval*
  nameWithType.vb: Sdl.GlSetSwapInterval(Integer)
  fullName.vb: SharpSDL3.Sdl.GlSetSwapInterval(Integer)
  name.vb: GlSetSwapInterval(Integer)
- uid: SharpSDL3.Sdl.GlSwapWindow(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GlSwapWindow(System.IntPtr)
  id: GlSwapWindow(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GlSwapWindow(nint)
  nameWithType: Sdl.GlSwapWindow(nint)
  fullName: SharpSDL3.Sdl.GlSwapWindow(nint)
  type: Method
  source:
    remote:
      path: SDL3/OpenGL.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GlSwapWindow
    path: ../../repos/SDL3-CS/SDL3/OpenGL.cs
    startLine: 199
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static SdlBool GlSwapWindow(nint window)
    parameters:
    - id: window
      type: System.IntPtr
    return:
      type: SharpSDL3.Structs.SdlBool
    content.vb: Public Shared Function GlSwapWindow(window As IntPtr) As SdlBool
  overload: SharpSDL3.Sdl.GlSwapWindow*
  nameWithType.vb: Sdl.GlSwapWindow(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GlSwapWindow(System.IntPtr)
  name.vb: GlSwapWindow(IntPtr)
- uid: SharpSDL3.Sdl.GlUnloadLibrary
  commentId: M:SharpSDL3.Sdl.GlUnloadLibrary
  id: GlUnloadLibrary
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GlUnloadLibrary()
  nameWithType: Sdl.GlUnloadLibrary()
  fullName: SharpSDL3.Sdl.GlUnloadLibrary()
  type: Method
  source:
    remote:
      path: SDL3/OpenGL.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GlUnloadLibrary
    path: ../../repos/SDL3-CS/SDL3/OpenGL.cs
    startLine: 210
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static void GlUnloadLibrary()
    content.vb: Public Shared Sub GlUnloadLibrary()
  overload: SharpSDL3.Sdl.GlUnloadLibrary*
- uid: SharpSDL3.Sdl.GetPlatform
  commentId: M:SharpSDL3.Sdl.GetPlatform
  id: GetPlatform
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetPlatform()
  nameWithType: Sdl.GetPlatform()
  fullName: SharpSDL3.Sdl.GetPlatform()
  type: Method
  source:
    remote:
      path: SDL3/Platform.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetPlatform
    path: ../../repos/SDL3-CS/SDL3/Platform.cs
    startLine: 18
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the name of the platform.
  remarks: >-
    Here are the names returned for some (but not all) supported platforms:

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static string GetPlatform()
    return:
      type: System.String
      description: Returns the name of the platform. If the correct platformname is not available, returns a string beginning with the text "Unknown".
    content.vb: Public Shared Function GetPlatform() As String
  overload: SharpSDL3.Sdl.GetPlatform*
- uid: SharpSDL3.Sdl.CreateProcess(System.IntPtr,SharpSDL3.Structs.SdlBool)
  commentId: M:SharpSDL3.Sdl.CreateProcess(System.IntPtr,SharpSDL3.Structs.SdlBool)
  id: CreateProcess(System.IntPtr,SharpSDL3.Structs.SdlBool)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CreateProcess(nint, SdlBool)
  nameWithType: Sdl.CreateProcess(nint, SdlBool)
  fullName: SharpSDL3.Sdl.CreateProcess(nint, SharpSDL3.Structs.SdlBool)
  type: Method
  source:
    remote:
      path: SDL3/Platform.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CreateProcess
    path: ../../repos/SDL3-CS/SDL3/Platform.cs
    startLine: 43
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Create a new process.
  remarks: >-
    The path to the executable is supplied in args[0]. args[1..N] are

    additional arguments passed on the command line of the new process, and the

    argument list should be terminated with a <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>, e.g.:

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateProcessWithProperties(System.UInt32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetProcessProperties(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.ReadProcess(System.IntPtr%2cSystem.UIntPtr%40%2cSystem.Int32%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetProcessInput(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetProcessOutput(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.KillProcess(System.IntPtr%2cSharpSDL3.Structs.SdlBool)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.WaitProcess(System.IntPtr%2cSharpSDL3.Structs.SdlBool%2cSystem.Int32%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.DestroyProcess(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint CreateProcess(nint args, SdlBool pipeStdio)
    parameters:
    - id: args
      type: System.IntPtr
      description: the path and arguments for the new process.
    - id: pipeStdio
      type: SharpSDL3.Structs.SdlBool
    return:
      type: System.IntPtr
      description: (SDL_Process *) Returns the newly created and runningprocess, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if the process couldn't be created.
    content.vb: Public Shared Function CreateProcess(args As IntPtr, pipeStdio As SdlBool) As IntPtr
  overload: SharpSDL3.Sdl.CreateProcess*
  nameWithType.vb: Sdl.CreateProcess(IntPtr, SdlBool)
  fullName.vb: SharpSDL3.Sdl.CreateProcess(System.IntPtr, SharpSDL3.Structs.SdlBool)
  name.vb: CreateProcess(IntPtr, SdlBool)
- uid: SharpSDL3.Sdl.CreateProcessWithProperties(System.UInt32)
  commentId: M:SharpSDL3.Sdl.CreateProcessWithProperties(System.UInt32)
  id: CreateProcessWithProperties(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CreateProcessWithProperties(uint)
  nameWithType: Sdl.CreateProcessWithProperties(uint)
  fullName: SharpSDL3.Sdl.CreateProcessWithProperties(uint)
  type: Method
  source:
    remote:
      path: SDL3/Platform.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CreateProcessWithProperties
    path: ../../repos/SDL3-CS/SDL3/Platform.cs
    startLine: 68
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Create a new process with the specified properties.
  remarks: >-
    These are the supported properties:

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateProcess(System.IntPtr%2cSharpSDL3.Structs.SdlBool)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetProcessProperties(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.ReadProcess(System.IntPtr%2cSystem.UIntPtr%40%2cSystem.Int32%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetProcessInput(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetProcessOutput(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.KillProcess(System.IntPtr%2cSharpSDL3.Structs.SdlBool)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.WaitProcess(System.IntPtr%2cSharpSDL3.Structs.SdlBool%2cSystem.Int32%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.DestroyProcess(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint CreateProcessWithProperties(uint props)
    parameters:
    - id: props
      type: System.UInt32
      description: the properties to use.
    return:
      type: System.IntPtr
      description: (SDL_Process *) Returns the newly created and runningprocess, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if the process couldn't be created.
    content.vb: Public Shared Function CreateProcessWithProperties(props As UInteger) As IntPtr
  overload: SharpSDL3.Sdl.CreateProcessWithProperties*
  nameWithType.vb: Sdl.CreateProcessWithProperties(UInteger)
  fullName.vb: SharpSDL3.Sdl.CreateProcessWithProperties(UInteger)
  name.vb: CreateProcessWithProperties(UInteger)
- uid: SharpSDL3.Sdl.GetProcessProperties(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetProcessProperties(System.IntPtr)
  id: GetProcessProperties(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetProcessProperties(nint)
  nameWithType: Sdl.GetProcessProperties(nint)
  fullName: SharpSDL3.Sdl.GetProcessProperties(nint)
  type: Method
  source:
    remote:
      path: SDL3/Platform.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetProcessProperties
    path: ../../repos/SDL3-CS/SDL3/Platform.cs
    startLine: 94
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the properties associated with a process.
  remarks: >-
    The following read-only properties are provided by SDL:

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateProcess(System.IntPtr%2cSharpSDL3.Structs.SdlBool)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.CreateProcessWithProperties(System.UInt32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static uint GetProcessProperties(nint process)
    parameters:
    - id: process
      type: System.IntPtr
      description: the process to query.
    return:
      type: System.UInt32
      description: Returns a valid property ID on success or 0 on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetProcessProperties(process As IntPtr) As UInteger
  overload: SharpSDL3.Sdl.GetProcessProperties*
  nameWithType.vb: Sdl.GetProcessProperties(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetProcessProperties(System.IntPtr)
  name.vb: GetProcessProperties(IntPtr)
- uid: SharpSDL3.Sdl.ReadProcess(System.IntPtr,System.UIntPtr@,System.Int32@)
  commentId: M:SharpSDL3.Sdl.ReadProcess(System.IntPtr,System.UIntPtr@,System.Int32@)
  id: ReadProcess(System.IntPtr,System.UIntPtr@,System.Int32@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ReadProcess(nint, out nuint, out int)
  nameWithType: Sdl.ReadProcess(nint, out nuint, out int)
  fullName: SharpSDL3.Sdl.ReadProcess(nint, out nuint, out int)
  type: Method
  source:
    remote:
      path: SDL3/Platform.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ReadProcess
    path: ../../repos/SDL3-CS/SDL3/Platform.cs
    startLine: 118
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Read all the output from a process.
  remarks: >-
    If a process was created with I/O enabled, you can use this function to

    read the output. This function blocks until the process is complete,

    capturing all output, and providing the process exit code.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateProcess(System.IntPtr%2cSharpSDL3.Structs.SdlBool)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.CreateProcessWithProperties(System.UInt32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.DestroyProcess(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint ReadProcess(nint process, out nuint datasize, out int exitcode)
    parameters:
    - id: process
      type: System.IntPtr
      description: The process to read.
    - id: datasize
      type: System.UIntPtr
      description: a pointer filled in with the number of bytes read, may be discarded.
    - id: exitcode
      type: System.Int32
      description: a pointer filled in with the process exit code if the process has exited, may be discarded.
    return:
      type: System.IntPtr
      description: (void *) Returns the data or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function ReadProcess(process As IntPtr, datasize As UIntPtr, exitcode As Integer) As IntPtr
  overload: SharpSDL3.Sdl.ReadProcess*
  nameWithType.vb: Sdl.ReadProcess(IntPtr, UIntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.ReadProcess(System.IntPtr, System.UIntPtr, Integer)
  name.vb: ReadProcess(IntPtr, UIntPtr, Integer)
- uid: SharpSDL3.Sdl.GetProcessInput(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetProcessInput(System.IntPtr)
  id: GetProcessInput(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetProcessInput(nint)
  nameWithType: Sdl.GetProcessInput(nint)
  fullName: SharpSDL3.Sdl.GetProcessInput(nint)
  type: Method
  source:
    remote:
      path: SDL3/Platform.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetProcessInput
    path: ../../repos/SDL3-CS/SDL3/Platform.cs
    startLine: 143
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the SDL_IOStream associated with process standard input.
  remarks: >-
    The process must have been created with

    SDL_CreateProcess() and pipe_stdio set to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, or

    with SDL_CreateProcessWithProperties()

    and

    SDL_PROP_PROCESS_CREATE_STDIN_NUMBER

    set to SDL_PROCESS_STDIO_APP.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateProcess(System.IntPtr%2cSharpSDL3.Structs.SdlBool)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.CreateProcessWithProperties(System.UInt32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetProcessOutput(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint GetProcessInput(nint process)
    parameters:
    - id: process
      type: System.IntPtr
      description: The process to get the input stream for.
    return:
      type: System.IntPtr
      description: (SDL_IOStream *) Returns the input stream or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetProcessInput(process As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.GetProcessInput*
  nameWithType.vb: Sdl.GetProcessInput(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetProcessInput(System.IntPtr)
  name.vb: GetProcessInput(IntPtr)
- uid: SharpSDL3.Sdl.GetProcessOutput(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetProcessOutput(System.IntPtr)
  id: GetProcessOutput(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetProcessOutput(nint)
  nameWithType: Sdl.GetProcessOutput(nint)
  fullName: SharpSDL3.Sdl.GetProcessOutput(nint)
  type: Method
  source:
    remote:
      path: SDL3/Platform.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetProcessOutput
    path: ../../repos/SDL3-CS/SDL3/Platform.cs
    startLine: 168
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the SDL_IOStream associated with process standard output.
  remarks: >-
    The process must have been created with

    SDL_CreateProcess() and pipe_stdio set to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, or

    with SDL_CreateProcessWithProperties()

    and

    SDL_PROP_PROCESS_CREATE_STDOUT_NUMBER

    set to SDL_PROCESS_STDIO_APP.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateProcess(System.IntPtr%2cSharpSDL3.Structs.SdlBool)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.CreateProcessWithProperties(System.UInt32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetProcessInput(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint GetProcessOutput(nint process)
    parameters:
    - id: process
      type: System.IntPtr
      description: The process to get the output stream for.
    return:
      type: System.IntPtr
      description: (SDL_IOStream *) Returns the output stream or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetProcessOutput(process As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.GetProcessOutput*
  nameWithType.vb: Sdl.GetProcessOutput(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetProcessOutput(System.IntPtr)
  name.vb: GetProcessOutput(IntPtr)
- uid: SharpSDL3.Sdl.KillProcess(System.IntPtr,SharpSDL3.Structs.SdlBool)
  commentId: M:SharpSDL3.Sdl.KillProcess(System.IntPtr,SharpSDL3.Structs.SdlBool)
  id: KillProcess(System.IntPtr,SharpSDL3.Structs.SdlBool)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: KillProcess(nint, SdlBool)
  nameWithType: Sdl.KillProcess(nint, SdlBool)
  fullName: SharpSDL3.Sdl.KillProcess(nint, SharpSDL3.Structs.SdlBool)
  type: Method
  source:
    remote:
      path: SDL3/Platform.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: KillProcess
    path: ../../repos/SDL3-CS/SDL3/Platform.cs
    startLine: 189
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Stop a process.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateProcess(System.IntPtr%2cSharpSDL3.Structs.SdlBool)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.CreateProcessWithProperties(System.UInt32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.WaitProcess(System.IntPtr%2cSharpSDL3.Structs.SdlBool%2cSystem.Int32%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.DestroyProcess(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static SdlBool KillProcess(nint process, SdlBool force)
    parameters:
    - id: process
      type: System.IntPtr
      description: The process to stop.
    - id: force
      type: SharpSDL3.Structs.SdlBool
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> to terminate the process immediately, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> to try to stop the process gracefully. In general you should try to stop the process gracefully first as terminating a process may leave it with half-written data or in some other unstable state.
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function KillProcess(process As IntPtr, force As SdlBool) As SdlBool
  overload: SharpSDL3.Sdl.KillProcess*
  nameWithType.vb: Sdl.KillProcess(IntPtr, SdlBool)
  fullName.vb: SharpSDL3.Sdl.KillProcess(System.IntPtr, SharpSDL3.Structs.SdlBool)
  name.vb: KillProcess(IntPtr, SdlBool)
- uid: SharpSDL3.Sdl.WaitProcess(System.IntPtr,SharpSDL3.Structs.SdlBool,System.Int32@)
  commentId: M:SharpSDL3.Sdl.WaitProcess(System.IntPtr,SharpSDL3.Structs.SdlBool,System.Int32@)
  id: WaitProcess(System.IntPtr,SharpSDL3.Structs.SdlBool,System.Int32@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: WaitProcess(nint, SdlBool, out int)
  nameWithType: Sdl.WaitProcess(nint, SdlBool, out int)
  fullName: SharpSDL3.Sdl.WaitProcess(nint, SharpSDL3.Structs.SdlBool, out int)
  type: Method
  source:
    remote:
      path: SDL3/Platform.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: WaitProcess
    path: ../../repos/SDL3-CS/SDL3/Platform.cs
    startLine: 212
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Wait for a process to finish.
  remarks: >-
    This can be called multiple times to get the status of a process.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateProcess(System.IntPtr%2cSharpSDL3.Structs.SdlBool)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.CreateProcessWithProperties(System.UInt32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.KillProcess(System.IntPtr%2cSharpSDL3.Structs.SdlBool)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.DestroyProcess(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static SdlBool WaitProcess(nint process, SdlBool block, out int exitcode)
    parameters:
    - id: process
      type: System.IntPtr
      description: The process to wait for.
    - id: block
      type: SharpSDL3.Structs.SdlBool
      description: If <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, block until the process finishes; otherwise, report on the process' status.
    - id: exitcode
      type: System.Int32
      description: a pointer filled in with the process exit code if the process has exited, may be discarded.
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the process exited, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Public Shared Function WaitProcess(process As IntPtr, block As SdlBool, exitcode As Integer) As SdlBool
  overload: SharpSDL3.Sdl.WaitProcess*
  nameWithType.vb: Sdl.WaitProcess(IntPtr, SdlBool, Integer)
  fullName.vb: SharpSDL3.Sdl.WaitProcess(System.IntPtr, SharpSDL3.Structs.SdlBool, Integer)
  name.vb: WaitProcess(IntPtr, SdlBool, Integer)
- uid: SharpSDL3.Sdl.DestroyProcess(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.DestroyProcess(System.IntPtr)
  id: DestroyProcess(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: DestroyProcess(nint)
  nameWithType: Sdl.DestroyProcess(nint)
  fullName: SharpSDL3.Sdl.DestroyProcess(nint)
  type: Method
  source:
    remote:
      path: SDL3/Platform.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: DestroyProcess
    path: ../../repos/SDL3-CS/SDL3/Platform.cs
    startLine: 233
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Destroy a previously created process object.
  remarks: >-
    Note that this does not stop the process, just destroys the SDL object used

    to track it. If you want to stop the process you should use

    SDL_KillProcess().

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateProcess(System.IntPtr%2cSharpSDL3.Structs.SdlBool)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.CreateProcessWithProperties(System.UInt32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.KillProcess(System.IntPtr%2cSharpSDL3.Structs.SdlBool)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void DestroyProcess(nint process)
    parameters:
    - id: process
      type: System.IntPtr
      description: The process object to destroy.
    content.vb: Public Shared Sub DestroyProcess(process As IntPtr)
  overload: SharpSDL3.Sdl.DestroyProcess*
  nameWithType.vb: Sdl.DestroyProcess(IntPtr)
  fullName.vb: SharpSDL3.Sdl.DestroyProcess(System.IntPtr)
  name.vb: DestroyProcess(IntPtr)
- uid: SharpSDL3.Sdl.AddVulkanRenderSemaphores(System.IntPtr,System.UInt32,System.Int64,System.Int64)
  commentId: M:SharpSDL3.Sdl.AddVulkanRenderSemaphores(System.IntPtr,System.UInt32,System.Int64,System.Int64)
  id: AddVulkanRenderSemaphores(System.IntPtr,System.UInt32,System.Int64,System.Int64)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: AddVulkanRenderSemaphores(nint, uint, long, long)
  nameWithType: Sdl.AddVulkanRenderSemaphores(nint, uint, long, long)
  fullName: SharpSDL3.Sdl.AddVulkanRenderSemaphores(nint, uint, long, long)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: AddVulkanRenderSemaphores
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 25
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Add a set of synchronization semaphores for the current frame.
  remarks: >-
    The Vulkan renderer will wait for wait_semaphore before submitting

    rendering commands and signal signal_semaphore after rendering commands

    are complete for this frame.

    <p><strong>Thread Safety:</strong> It is NOT safe to call this function from two threads at once.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool AddVulkanRenderSemaphores(nint renderer, uint waitStageMask, long waitSemaphore, long signalSemaphore)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the rendering context.
    - id: waitStageMask
      type: System.UInt32
    - id: waitSemaphore
      type: System.Int64
    - id: signalSemaphore
      type: System.Int64
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function AddVulkanRenderSemaphores(renderer As IntPtr, waitStageMask As UInteger, waitSemaphore As Long, signalSemaphore As Long) As Boolean
  overload: SharpSDL3.Sdl.AddVulkanRenderSemaphores*
  nameWithType.vb: Sdl.AddVulkanRenderSemaphores(IntPtr, UInteger, Long, Long)
  fullName.vb: SharpSDL3.Sdl.AddVulkanRenderSemaphores(System.IntPtr, UInteger, Long, Long)
  name.vb: AddVulkanRenderSemaphores(IntPtr, UInteger, Long, Long)
- uid: SharpSDL3.Sdl.ConvertEventToRenderCoordinates(System.IntPtr,SharpSDL3.Structs.Event@)
  commentId: M:SharpSDL3.Sdl.ConvertEventToRenderCoordinates(System.IntPtr,SharpSDL3.Structs.Event@)
  id: ConvertEventToRenderCoordinates(System.IntPtr,SharpSDL3.Structs.Event@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ConvertEventToRenderCoordinates(nint, ref Event)
  nameWithType: Sdl.ConvertEventToRenderCoordinates(nint, ref Event)
  fullName: SharpSDL3.Sdl.ConvertEventToRenderCoordinates(nint, ref SharpSDL3.Structs.Event)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ConvertEventToRenderCoordinates
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 49
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Convert the coordinates in an event to render coordinates.
  remarks: >-
    This takes into account several states:

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.RenderCoordinatesFromWindow(System.IntPtr%2cSystem.Single%2cSystem.Single%2cSystem.Single%40%2cSystem.Single%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool ConvertEventToRenderCoordinates(nint renderer, ref Event @event)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the rendering context.
    - id: event
      type: SharpSDL3.Structs.Event
      description: the event to modify.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function ConvertEventToRenderCoordinates(renderer As IntPtr, [event] As [Event]) As Boolean
  overload: SharpSDL3.Sdl.ConvertEventToRenderCoordinates*
  nameWithType.vb: Sdl.ConvertEventToRenderCoordinates(IntPtr, Event)
  fullName.vb: SharpSDL3.Sdl.ConvertEventToRenderCoordinates(System.IntPtr, SharpSDL3.Structs.Event)
  name.vb: ConvertEventToRenderCoordinates(IntPtr, Event)
- uid: SharpSDL3.Sdl.CreateRenderer(System.IntPtr,System.String)
  commentId: M:SharpSDL3.Sdl.CreateRenderer(System.IntPtr,System.String)
  id: CreateRenderer(System.IntPtr,System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CreateRenderer(nint, string?)
  nameWithType: Sdl.CreateRenderer(nint, string?)
  fullName: SharpSDL3.Sdl.CreateRenderer(nint, string?)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CreateRenderer
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 87
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Create a 2D rendering context for a window.
  remarks: >-
    If you want a specific renderer, you can specify its name here. A list of

    available renderers can be obtained by calling

    SDL_GetRenderDriver() multiple times, with indices

    from 0 to SDL_GetNumRenderDrivers()-1. If you

    don't need a specific renderer, specify <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> and SDL will attempt to choose

    the best option for you, based on what is available on the user's system.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateRendererWithProperties(System.UInt32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.CreateSoftwareRenderer(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.DestroyRenderer(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetNumRenderDrivers" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetRenderDriver(System.Int32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetRendererName(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint CreateRenderer(nint window, string? name)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window where rendering is displayed.
    - id: name
      type: System.String
      description: the name of the rendering driver to initialize, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to let SDL choose one.
    return:
      type: System.IntPtr
      description: (SDL_Renderer *) Returns a valid rendering context or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>if there was an error; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function CreateRenderer(window As IntPtr, name As String) As IntPtr
  overload: SharpSDL3.Sdl.CreateRenderer*
  nameWithType.vb: Sdl.CreateRenderer(IntPtr, String)
  fullName.vb: SharpSDL3.Sdl.CreateRenderer(System.IntPtr, String)
  name.vb: CreateRenderer(IntPtr, String)
- uid: SharpSDL3.Sdl.CreateRendererWithProperties(System.UInt32)
  commentId: M:SharpSDL3.Sdl.CreateRendererWithProperties(System.UInt32)
  id: CreateRendererWithProperties(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CreateRendererWithProperties(uint)
  nameWithType: Sdl.CreateRendererWithProperties(uint)
  fullName: SharpSDL3.Sdl.CreateRendererWithProperties(uint)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CreateRendererWithProperties
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 115
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Create a 2D rendering context for a window, with the specified properties.
  remarks: >-
    These are the supported properties:

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateProperties" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.CreateRenderer(System.IntPtr%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.CreateSoftwareRenderer(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.DestroyRenderer(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetRendererName(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint CreateRendererWithProperties(uint props)
    parameters:
    - id: props
      type: System.UInt32
      description: the properties to use.
    return:
      type: System.IntPtr
      description: (SDL_Renderer *) Returns a valid rendering context or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>if there was an error; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function CreateRendererWithProperties(props As UInteger) As IntPtr
  overload: SharpSDL3.Sdl.CreateRendererWithProperties*
  nameWithType.vb: Sdl.CreateRendererWithProperties(UInteger)
  fullName.vb: SharpSDL3.Sdl.CreateRendererWithProperties(UInteger)
  name.vb: CreateRendererWithProperties(UInteger)
- uid: SharpSDL3.Sdl.CreateSoftwareRenderer(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.CreateSoftwareRenderer(System.IntPtr)
  id: CreateSoftwareRenderer(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CreateSoftwareRenderer(nint)
  nameWithType: Sdl.CreateSoftwareRenderer(nint)
  fullName: SharpSDL3.Sdl.CreateSoftwareRenderer(nint)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CreateSoftwareRenderer
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 139
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Create a 2D software rendering context for a surface.
  remarks: >-
    Two other API which can be used to create SDL_Renderer:

    SDL_CreateRenderer() and

    SDL_CreateWindowAndRenderer(). These can

    also create a software renderer, but they are intended to be used with an

    SDL_Window as the final destination and not an

    SDL_Surface.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.DestroyRenderer(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint CreateSoftwareRenderer(nint surface)
    parameters:
    - id: surface
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Surface" data-throw-if-not-resolved="false"></xref> structure representing the surface where rendering is done.
    return:
      type: System.IntPtr
      description: (SDL_Renderer *) Returns a valid rendering context or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>if there was an error; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function CreateSoftwareRenderer(surface As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.CreateSoftwareRenderer*
  nameWithType.vb: Sdl.CreateSoftwareRenderer(IntPtr)
  fullName.vb: SharpSDL3.Sdl.CreateSoftwareRenderer(System.IntPtr)
  name.vb: CreateSoftwareRenderer(IntPtr)
- uid: SharpSDL3.Sdl.CreateWindowAndRenderer(System.String,System.Int32,System.Int32,SharpSDL3.Enums.WindowFlags,System.IntPtr@,System.IntPtr@)
  commentId: M:SharpSDL3.Sdl.CreateWindowAndRenderer(System.String,System.Int32,System.Int32,SharpSDL3.Enums.WindowFlags,System.IntPtr@,System.IntPtr@)
  id: CreateWindowAndRenderer(System.String,System.Int32,System.Int32,SharpSDL3.Enums.WindowFlags,System.IntPtr@,System.IntPtr@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CreateWindowAndRenderer(string, int, int, WindowFlags, out nint, out nint)
  nameWithType: Sdl.CreateWindowAndRenderer(string, int, int, WindowFlags, out nint, out nint)
  fullName: SharpSDL3.Sdl.CreateWindowAndRenderer(string, int, int, SharpSDL3.Enums.WindowFlags, out nint, out nint)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CreateWindowAndRenderer
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 151
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static bool CreateWindowAndRenderer(string title, int width, int height, WindowFlags windowFlags, out nint window, out nint renderer)
    parameters:
    - id: title
      type: System.String
    - id: width
      type: System.Int32
    - id: height
      type: System.Int32
    - id: windowFlags
      type: SharpSDL3.Enums.WindowFlags
    - id: window
      type: System.IntPtr
    - id: renderer
      type: System.IntPtr
    return:
      type: System.Boolean
    content.vb: Public Shared Function CreateWindowAndRenderer(title As String, width As Integer, height As Integer, windowFlags As WindowFlags, window As IntPtr, renderer As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.CreateWindowAndRenderer*
  nameWithType.vb: Sdl.CreateWindowAndRenderer(String, Integer, Integer, WindowFlags, IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.CreateWindowAndRenderer(String, Integer, Integer, SharpSDL3.Enums.WindowFlags, System.IntPtr, System.IntPtr)
  name.vb: CreateWindowAndRenderer(String, Integer, Integer, WindowFlags, IntPtr, IntPtr)
- uid: SharpSDL3.Sdl.CreateWindowAndRenderer(System.String,System.Int32,System.Int32,SharpSDL3.Enums.WindowFlags,System.IntPtr@)
  commentId: M:SharpSDL3.Sdl.CreateWindowAndRenderer(System.String,System.Int32,System.Int32,SharpSDL3.Enums.WindowFlags,System.IntPtr@)
  id: CreateWindowAndRenderer(System.String,System.Int32,System.Int32,SharpSDL3.Enums.WindowFlags,System.IntPtr@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CreateWindowAndRenderer(string, int, int, WindowFlags, out nint)
  nameWithType: Sdl.CreateWindowAndRenderer(string, int, int, WindowFlags, out nint)
  fullName: SharpSDL3.Sdl.CreateWindowAndRenderer(string, int, int, SharpSDL3.Enums.WindowFlags, out nint)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CreateWindowAndRenderer
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 182
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Create a window and default renderer.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateRenderer(System.IntPtr%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.CreateWindow(System.String%2cSystem.Int32%2cSystem.Int32%2cSharpSDL3.Enums.WindowFlags)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint CreateWindowAndRenderer(string title, int width, int height, WindowFlags windowFlags, out nint renderer)
    parameters:
    - id: title
      type: System.String
      description: the title of the window, in UTF-8 encoding.
    - id: width
      type: System.Int32
      description: the width of the window.
    - id: height
      type: System.Int32
      description: the height of the window.
    - id: windowFlags
      type: SharpSDL3.Enums.WindowFlags
    - id: renderer
      type: System.IntPtr
      description: a pointer filled with the renderer, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on error.
    return:
      type: System.IntPtr
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function CreateWindowAndRenderer(title As String, width As Integer, height As Integer, windowFlags As WindowFlags, renderer As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.CreateWindowAndRenderer*
  nameWithType.vb: Sdl.CreateWindowAndRenderer(String, Integer, Integer, WindowFlags, IntPtr)
  fullName.vb: SharpSDL3.Sdl.CreateWindowAndRenderer(String, Integer, Integer, SharpSDL3.Enums.WindowFlags, System.IntPtr)
  name.vb: CreateWindowAndRenderer(String, Integer, Integer, WindowFlags, IntPtr)
- uid: SharpSDL3.Sdl.DestroyRenderer(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.DestroyRenderer(System.IntPtr)
  id: DestroyRenderer(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: DestroyRenderer(nint)
  nameWithType: Sdl.DestroyRenderer(nint)
  fullName: SharpSDL3.Sdl.DestroyRenderer(nint)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: DestroyRenderer
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 206
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Destroy the rendering context for a window and free all associated textures.
  remarks: >-
    This should be called before destroying the associated window.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateRenderer(System.IntPtr%2cSystem.String)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void DestroyRenderer(nint renderer)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the rendering context.
    content.vb: Public Shared Sub DestroyRenderer(renderer As IntPtr)
  overload: SharpSDL3.Sdl.DestroyRenderer*
  nameWithType.vb: Sdl.DestroyRenderer(IntPtr)
  fullName.vb: SharpSDL3.Sdl.DestroyRenderer(System.IntPtr)
  name.vb: DestroyRenderer(IntPtr)
- uid: SharpSDL3.Sdl.DestroyTexture(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.DestroyTexture(System.IntPtr)
  id: DestroyTexture(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: DestroyTexture(nint)
  nameWithType: Sdl.DestroyTexture(nint)
  fullName: SharpSDL3.Sdl.DestroyTexture(nint)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: DestroyTexture
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 225
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Destroy the specified texture.
  remarks: >-
    Passing <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> or an otherwise invalid texture will set the SDL error message

    to "Invalid texture".

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateTexture(System.IntPtr%2cSharpSDL3.Enums.PixelFormat%2cSharpSDL3.Enums.TextureAccess%2cSystem.Int32%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.CreateTextureFromSurface(System.IntPtr%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void DestroyTexture(nint texture)
    parameters:
    - id: texture
      type: System.IntPtr
      description: the texture to destroy.
    content.vb: Public Shared Sub DestroyTexture(texture As IntPtr)
  overload: SharpSDL3.Sdl.DestroyTexture*
  nameWithType.vb: Sdl.DestroyTexture(IntPtr)
  fullName.vb: SharpSDL3.Sdl.DestroyTexture(System.IntPtr)
  name.vb: DestroyTexture(IntPtr)
- uid: SharpSDL3.Sdl.FlushRenderer(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.FlushRenderer(System.IntPtr)
  id: FlushRenderer(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: FlushRenderer(nint)
  nameWithType: Sdl.FlushRenderer(nint)
  fullName: SharpSDL3.Sdl.FlushRenderer(nint)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: FlushRenderer
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 245
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Force the rendering context to flush any pending commands and state.
  remarks: >-
    You do not need to (and in fact, shouldn't) call this function unless you

    are planning to call into OpenGL/Direct3D/Metal/whatever directly, in

    addition to using an SDL_Renderer.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool FlushRenderer(nint renderer)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the rendering context.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function FlushRenderer(renderer As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.FlushRenderer*
  nameWithType.vb: Sdl.FlushRenderer(IntPtr)
  fullName.vb: SharpSDL3.Sdl.FlushRenderer(System.IntPtr)
  name.vb: FlushRenderer(IntPtr)
- uid: SharpSDL3.Sdl.GetCurrentRenderOutputSize(System.IntPtr,System.Int32@,System.Int32@)
  commentId: M:SharpSDL3.Sdl.GetCurrentRenderOutputSize(System.IntPtr,System.Int32@,System.Int32@)
  id: GetCurrentRenderOutputSize(System.IntPtr,System.Int32@,System.Int32@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetCurrentRenderOutputSize(nint, out int, out int)
  nameWithType: Sdl.GetCurrentRenderOutputSize(nint, out int, out int)
  fullName: SharpSDL3.Sdl.GetCurrentRenderOutputSize(nint, out int, out int)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetCurrentRenderOutputSize
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 256
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static bool GetCurrentRenderOutputSize(nint renderer, out int w, out int h)
    parameters:
    - id: renderer
      type: System.IntPtr
    - id: w
      type: System.Int32
    - id: h
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function GetCurrentRenderOutputSize(renderer As IntPtr, w As Integer, h As Integer) As Boolean
  overload: SharpSDL3.Sdl.GetCurrentRenderOutputSize*
  nameWithType.vb: Sdl.GetCurrentRenderOutputSize(IntPtr, Integer, Integer)
  fullName.vb: SharpSDL3.Sdl.GetCurrentRenderOutputSize(System.IntPtr, Integer, Integer)
  name.vb: GetCurrentRenderOutputSize(IntPtr, Integer, Integer)
- uid: SharpSDL3.Sdl.GetCurrentRenderOutputSize(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetCurrentRenderOutputSize(System.IntPtr)
  id: GetCurrentRenderOutputSize(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetCurrentRenderOutputSize(nint)
  nameWithType: Sdl.GetCurrentRenderOutputSize(nint)
  fullName: SharpSDL3.Sdl.GetCurrentRenderOutputSize(nint)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetCurrentRenderOutputSize
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 282
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the current output size in pixels of a rendering context.
  remarks: >-
    If a rendering target is active, this will return the size of the rendering

    target in pixels, otherwise return the value of

    SDL_GetRenderOutputSize().

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetRenderOutputSize(System.IntPtr%2cSystem.Int32%40%2cSystem.Int32%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static Rect GetCurrentRenderOutputSize(nint renderer)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the rendering context.
    return:
      type: SharpSDL3.Structs.Rect
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetCurrentRenderOutputSize(renderer As IntPtr) As Rect
  overload: SharpSDL3.Sdl.GetCurrentRenderOutputSize*
  nameWithType.vb: Sdl.GetCurrentRenderOutputSize(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetCurrentRenderOutputSize(System.IntPtr)
  name.vb: GetCurrentRenderOutputSize(IntPtr)
- uid: SharpSDL3.Sdl.GetNumRenderDrivers
  commentId: M:SharpSDL3.Sdl.GetNumRenderDrivers
  id: GetNumRenderDrivers
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetNumRenderDrivers()
  nameWithType: Sdl.GetNumRenderDrivers()
  fullName: SharpSDL3.Sdl.GetNumRenderDrivers()
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetNumRenderDrivers
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 302
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the number of 2D rendering drivers available for the current display.
  remarks: >-
    A render driver is a set of code that handles rendering and texture

    management on a particular display. Normally there is only one, but some

    drivers may have several available with different capabilities.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateRenderer(System.IntPtr%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetRenderDriver(System.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static int GetNumRenderDrivers()
    return:
      type: System.Int32
      description: Returns the number of built in render drivers.
    content.vb: Public Shared Function GetNumRenderDrivers() As Integer
  overload: SharpSDL3.Sdl.GetNumRenderDrivers*
- uid: SharpSDL3.Sdl.GetRenderClipRect(System.IntPtr,SharpSDL3.Structs.Rect@)
  commentId: M:SharpSDL3.Sdl.GetRenderClipRect(System.IntPtr,SharpSDL3.Structs.Rect@)
  id: GetRenderClipRect(System.IntPtr,SharpSDL3.Structs.Rect@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetRenderClipRect(nint, out Rect)
  nameWithType: Sdl.GetRenderClipRect(nint, out Rect)
  fullName: SharpSDL3.Sdl.GetRenderClipRect(nint, out SharpSDL3.Structs.Rect)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetRenderClipRect
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 310
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static bool GetRenderClipRect(nint renderer, out Rect rect)
    parameters:
    - id: renderer
      type: System.IntPtr
    - id: rect
      type: SharpSDL3.Structs.Rect
    return:
      type: System.Boolean
    content.vb: Public Shared Function GetRenderClipRect(renderer As IntPtr, rect As Rect) As Boolean
  overload: SharpSDL3.Sdl.GetRenderClipRect*
  nameWithType.vb: Sdl.GetRenderClipRect(IntPtr, Rect)
  fullName.vb: SharpSDL3.Sdl.GetRenderClipRect(System.IntPtr, SharpSDL3.Structs.Rect)
  name.vb: GetRenderClipRect(IntPtr, Rect)
- uid: SharpSDL3.Sdl.GetRenderClipRect(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetRenderClipRect(System.IntPtr)
  id: GetRenderClipRect(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetRenderClipRect(nint)
  nameWithType: Sdl.GetRenderClipRect(nint)
  fullName: SharpSDL3.Sdl.GetRenderClipRect(nint)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetRenderClipRect
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 335
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the clip rectangle for the current target.
  remarks: >-
    Each render target has its own clip rectangle. This function gets the

    cliprect for the current render target.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.RenderClipEnabled(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetRenderClipRect(System.IntPtr%2cSharpSDL3.Structs.Rect%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static Rect GetRenderClipRect(nint renderer)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the rendering context.
    return:
      type: SharpSDL3.Structs.Rect
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetRenderClipRect(renderer As IntPtr) As Rect
  overload: SharpSDL3.Sdl.GetRenderClipRect*
  nameWithType.vb: Sdl.GetRenderClipRect(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetRenderClipRect(System.IntPtr)
  name.vb: GetRenderClipRect(IntPtr)
- uid: SharpSDL3.Sdl.GetRenderColorScale(System.IntPtr,System.Single@)
  commentId: M:SharpSDL3.Sdl.GetRenderColorScale(System.IntPtr,System.Single@)
  id: GetRenderColorScale(System.IntPtr,System.Single@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetRenderColorScale(nint, out float)
  nameWithType: Sdl.GetRenderColorScale(nint, out float)
  fullName: SharpSDL3.Sdl.GetRenderColorScale(nint, out float)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetRenderColorScale
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 343
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static bool GetRenderColorScale(nint renderer, out float scale)
    parameters:
    - id: renderer
      type: System.IntPtr
    - id: scale
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Shared Function GetRenderColorScale(renderer As IntPtr, scale As Single) As Boolean
  overload: SharpSDL3.Sdl.GetRenderColorScale*
  nameWithType.vb: Sdl.GetRenderColorScale(IntPtr, Single)
  fullName.vb: SharpSDL3.Sdl.GetRenderColorScale(System.IntPtr, Single)
  name.vb: GetRenderColorScale(IntPtr, Single)
- uid: SharpSDL3.Sdl.GetRenderColorScale(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetRenderColorScale(System.IntPtr)
  id: GetRenderColorScale(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetRenderColorScale(nint)
  nameWithType: Sdl.GetRenderColorScale(nint)
  fullName: SharpSDL3.Sdl.GetRenderColorScale(nint)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetRenderColorScale
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 365
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the color scale used for render operations.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetRenderColorScale(System.IntPtr%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static float GetRenderColorScale(nint renderer)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the rendering context.
    return:
      type: System.Single
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetRenderColorScale(renderer As IntPtr) As Single
  overload: SharpSDL3.Sdl.GetRenderColorScale*
  nameWithType.vb: Sdl.GetRenderColorScale(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetRenderColorScale(System.IntPtr)
  name.vb: GetRenderColorScale(IntPtr)
- uid: SharpSDL3.Sdl.GetRenderDrawBlendMode(System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetRenderDrawBlendMode(System.IntPtr,System.IntPtr)
  id: GetRenderDrawBlendMode(System.IntPtr,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetRenderDrawBlendMode(nint, nint)
  nameWithType: Sdl.GetRenderDrawBlendMode(nint, nint)
  fullName: SharpSDL3.Sdl.GetRenderDrawBlendMode(nint, nint)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetRenderDrawBlendMode
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 384
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the blend mode used for drawing operations.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetRenderDrawBlendMode(System.IntPtr%2cSystem.UInt32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool GetRenderDrawBlendMode(nint renderer, nint blendMode)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the rendering context.
    - id: blendMode
      type: System.IntPtr
      description: a pointer filled in with the current <xref href="SharpSDL3.Enums.BlendMode" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetRenderDrawBlendMode(renderer As IntPtr, blendMode As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.GetRenderDrawBlendMode*
  nameWithType.vb: Sdl.GetRenderDrawBlendMode(IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetRenderDrawBlendMode(System.IntPtr, System.IntPtr)
  name.vb: GetRenderDrawBlendMode(IntPtr, IntPtr)
- uid: SharpSDL3.Sdl.GetRenderDrawColor(System.IntPtr,System.Byte@,System.Byte@,System.Byte@,System.Byte@)
  commentId: M:SharpSDL3.Sdl.GetRenderDrawColor(System.IntPtr,System.Byte@,System.Byte@,System.Byte@,System.Byte@)
  id: GetRenderDrawColor(System.IntPtr,System.Byte@,System.Byte@,System.Byte@,System.Byte@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetRenderDrawColor(nint, out byte, out byte, out byte, out byte)
  nameWithType: Sdl.GetRenderDrawColor(nint, out byte, out byte, out byte, out byte)
  fullName: SharpSDL3.Sdl.GetRenderDrawColor(nint, out byte, out byte, out byte, out byte)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetRenderDrawColor
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 408
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the color used for drawing operations (Rect, Line and Clear).
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetRenderDrawColorFloat(System.IntPtr%2cSystem.Single%40%2cSystem.Single%40%2cSystem.Single%40%2cSystem.Single%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetRenderDrawColor(System.IntPtr%2cSystem.Byte%2cSystem.Byte%2cSystem.Byte%2cSystem.Byte)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool GetRenderDrawColor(nint renderer, out byte r, out byte g, out byte b, out byte a)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the rendering context.
    - id: r
      type: System.Byte
      description: a pointer filled in with the red value used to draw on the rendering target.
    - id: g
      type: System.Byte
      description: a pointer filled in with the green value used to draw on the rendering target.
    - id: b
      type: System.Byte
      description: a pointer filled in with the blue value used to draw on the rendering target.
    - id: a
      type: System.Byte
      description: a pointer filled in with the alpha value used to draw on the rendering target; usually SDL_ALPHA_OPAQUE (255).
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetRenderDrawColor(renderer As IntPtr, r As Byte, g As Byte, b As Byte, a As Byte) As Boolean
  overload: SharpSDL3.Sdl.GetRenderDrawColor*
  nameWithType.vb: Sdl.GetRenderDrawColor(IntPtr, Byte, Byte, Byte, Byte)
  fullName.vb: SharpSDL3.Sdl.GetRenderDrawColor(System.IntPtr, Byte, Byte, Byte, Byte)
  name.vb: GetRenderDrawColor(IntPtr, Byte, Byte, Byte, Byte)
- uid: SharpSDL3.Sdl.GetRenderDrawColor(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetRenderDrawColor(System.IntPtr)
  id: GetRenderDrawColor(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetRenderDrawColor(nint)
  nameWithType: Sdl.GetRenderDrawColor(nint)
  fullName: SharpSDL3.Sdl.GetRenderDrawColor(nint)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetRenderDrawColor
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 428
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the color used for drawing operations (Rect, Line and Clear).
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetRenderDrawColorFloat(System.IntPtr%2cSystem.Single%40%2cSystem.Single%40%2cSystem.Single%40%2cSystem.Single%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetRenderDrawColor(System.IntPtr%2cSystem.Byte%2cSystem.Byte%2cSystem.Byte%2cSystem.Byte)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static Color GetRenderDrawColor(nint renderer)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the rendering context.
    return:
      type: SharpSDL3.Structs.Color
      description: Returns a <xref href="SharpSDL3.Structs.Color" data-throw-if-not-resolved="false"></xref> on success or a blank <xref href="SharpSDL3.Structs.Color" data-throw-if-not-resolved="false"></xref> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetRenderDrawColor(renderer As IntPtr) As Color
  overload: SharpSDL3.Sdl.GetRenderDrawColor*
  nameWithType.vb: Sdl.GetRenderDrawColor(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetRenderDrawColor(System.IntPtr)
  name.vb: GetRenderDrawColor(IntPtr)
- uid: SharpSDL3.Sdl.GetRenderDrawColorFloat(System.IntPtr,System.Single@,System.Single@,System.Single@,System.Single@)
  commentId: M:SharpSDL3.Sdl.GetRenderDrawColorFloat(System.IntPtr,System.Single@,System.Single@,System.Single@,System.Single@)
  id: GetRenderDrawColorFloat(System.IntPtr,System.Single@,System.Single@,System.Single@,System.Single@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetRenderDrawColorFloat(nint, out float, out float, out float, out float)
  nameWithType: Sdl.GetRenderDrawColorFloat(nint, out float, out float, out float, out float)
  fullName: SharpSDL3.Sdl.GetRenderDrawColorFloat(nint, out float, out float, out float, out float)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetRenderDrawColorFloat
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 436
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static bool GetRenderDrawColorFloat(nint renderer, out float r, out float g, out float b, out float a)
    parameters:
    - id: renderer
      type: System.IntPtr
    - id: r
      type: System.Single
    - id: g
      type: System.Single
    - id: b
      type: System.Single
    - id: a
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Shared Function GetRenderDrawColorFloat(renderer As IntPtr, r As Single, g As Single, b As Single, a As Single) As Boolean
  overload: SharpSDL3.Sdl.GetRenderDrawColorFloat*
  nameWithType.vb: Sdl.GetRenderDrawColorFloat(IntPtr, Single, Single, Single, Single)
  fullName.vb: SharpSDL3.Sdl.GetRenderDrawColorFloat(System.IntPtr, Single, Single, Single, Single)
  name.vb: GetRenderDrawColorFloat(IntPtr, Single, Single, Single, Single)
- uid: SharpSDL3.Sdl.GetRenderDrawColorFloat(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetRenderDrawColorFloat(System.IntPtr)
  id: GetRenderDrawColorFloat(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetRenderDrawColorFloat(nint)
  nameWithType: Sdl.GetRenderDrawColorFloat(nint)
  fullName: SharpSDL3.Sdl.GetRenderDrawColorFloat(nint)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetRenderDrawColorFloat
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 462
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the color used for drawing operations (Rect, Line and Clear).
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetRenderDrawColorFloat(System.IntPtr%2cSystem.Single%2cSystem.Single%2cSystem.Single%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetRenderDrawColor(System.IntPtr%2cSystem.Byte%40%2cSystem.Byte%40%2cSystem.Byte%40%2cSystem.Byte%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static FColor GetRenderDrawColorFloat(nint renderer)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the rendering context.
    return:
      type: SharpSDL3.Structs.FColor
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetRenderDrawColorFloat(renderer As IntPtr) As FColor
  overload: SharpSDL3.Sdl.GetRenderDrawColorFloat*
  nameWithType.vb: Sdl.GetRenderDrawColorFloat(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetRenderDrawColorFloat(System.IntPtr)
  name.vb: GetRenderDrawColorFloat(IntPtr)
- uid: SharpSDL3.Sdl.GetRenderDriver(System.Int32)
  commentId: M:SharpSDL3.Sdl.GetRenderDriver(System.Int32)
  id: GetRenderDriver(System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetRenderDriver(int)
  nameWithType: Sdl.GetRenderDriver(int)
  fullName: SharpSDL3.Sdl.GetRenderDriver(int)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetRenderDriver
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 483
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Use this function to get the name of a built in 2D rendering driver.
  remarks: >-
    The list of rendering drivers is given in the order that they are normally

    initialized by default; the drivers that seem more reasonable to choose

    first (as far as the SDL developers believe) are earlier in the list.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetNumRenderDrivers" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static string GetRenderDriver(int index)
    parameters:
    - id: index
      type: System.Int32
      description: the index of the rendering driver; the value ranges from 0 to SDL_GetNumRenderDrivers() - 1.
    return:
      type: System.String
      description: Returns the name of the rendering driver at the requestedindex, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if an invalid index was specified.
    content.vb: Public Shared Function GetRenderDriver(index As Integer) As String
  overload: SharpSDL3.Sdl.GetRenderDriver*
  nameWithType.vb: Sdl.GetRenderDriver(Integer)
  fullName.vb: SharpSDL3.Sdl.GetRenderDriver(Integer)
  name.vb: GetRenderDriver(Integer)
- uid: SharpSDL3.Sdl.GetRenderer(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetRenderer(System.IntPtr)
  id: GetRenderer(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetRenderer(nint)
  nameWithType: Sdl.GetRenderer(nint)
  fullName: SharpSDL3.Sdl.GetRenderer(nint)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetRenderer
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 504
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the renderer associated with a window.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static nint GetRenderer(nint window)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to query.
    return:
      type: System.IntPtr
      description: (SDL_Renderer *) Returns the rendering context on successor <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetRenderer(window As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.GetRenderer*
  nameWithType.vb: Sdl.GetRenderer(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetRenderer(System.IntPtr)
  name.vb: GetRenderer(IntPtr)
- uid: SharpSDL3.Sdl.GetRendererFromTexture(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetRendererFromTexture(System.IntPtr)
  id: GetRendererFromTexture(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetRendererFromTexture(nint)
  nameWithType: Sdl.GetRendererFromTexture(nint)
  fullName: SharpSDL3.Sdl.GetRendererFromTexture(nint)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetRendererFromTexture
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 525
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the renderer that created an SDL_Texture.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static nint GetRendererFromTexture(nint texture)
    parameters:
    - id: texture
      type: System.IntPtr
      description: the texture to query.
    return:
      type: System.IntPtr
      description: (SDL_Renderer *) Returns a pointer to theSDL_Renderer that created the texture, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure;call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetRendererFromTexture(texture As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.GetRendererFromTexture*
  nameWithType.vb: Sdl.GetRendererFromTexture(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetRendererFromTexture(System.IntPtr)
  name.vb: GetRendererFromTexture(IntPtr)
- uid: SharpSDL3.Sdl.GetRendererName(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetRendererName(System.IntPtr)
  id: GetRendererName(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetRendererName(nint)
  nameWithType: Sdl.GetRendererName(nint)
  fullName: SharpSDL3.Sdl.GetRendererName(nint)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetRendererName
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 548
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the name of a renderer.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateRenderer(System.IntPtr%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.CreateRendererWithProperties(System.UInt32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static string GetRendererName(nint renderer)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the rendering context.
    return:
      type: System.String
      description: Returns the name of the selected renderer, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetRendererName(renderer As IntPtr) As String
  overload: SharpSDL3.Sdl.GetRendererName*
  nameWithType.vb: Sdl.GetRendererName(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetRendererName(System.IntPtr)
  name.vb: GetRendererName(IntPtr)
- uid: SharpSDL3.Sdl.GetRendererProperties(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetRendererProperties(System.IntPtr)
  id: GetRendererProperties(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetRendererProperties(nint)
  nameWithType: Sdl.GetRendererProperties(nint)
  fullName: SharpSDL3.Sdl.GetRendererProperties(nint)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetRendererProperties
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 569
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the properties associated with a renderer.
  remarks: >-
    The following read-only properties are provided by SDL:

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static uint GetRendererProperties(nint renderer)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the rendering context.
    return:
      type: System.UInt32
      description: Returns a valid property ID on success or 0 on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetRendererProperties(renderer As IntPtr) As UInteger
  overload: SharpSDL3.Sdl.GetRendererProperties*
  nameWithType.vb: Sdl.GetRendererProperties(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetRendererProperties(System.IntPtr)
  name.vb: GetRendererProperties(IntPtr)
- uid: SharpSDL3.Sdl.GetRenderLogicalPresentation(System.IntPtr,System.Int32@,System.Int32@,SharpSDL3.Enums.RendererLogicalPresentation@)
  commentId: M:SharpSDL3.Sdl.GetRenderLogicalPresentation(System.IntPtr,System.Int32@,System.Int32@,SharpSDL3.Enums.RendererLogicalPresentation@)
  id: GetRenderLogicalPresentation(System.IntPtr,System.Int32@,System.Int32@,SharpSDL3.Enums.RendererLogicalPresentation@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetRenderLogicalPresentation(nint, out int, out int, out RendererLogicalPresentation)
  nameWithType: Sdl.GetRenderLogicalPresentation(nint, out int, out int, out RendererLogicalPresentation)
  fullName: SharpSDL3.Sdl.GetRenderLogicalPresentation(nint, out int, out int, out SharpSDL3.Enums.RendererLogicalPresentation)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetRenderLogicalPresentation
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 580
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static bool GetRenderLogicalPresentation(nint renderer, out int w, out int h, out RendererLogicalPresentation mode)
    parameters:
    - id: renderer
      type: System.IntPtr
    - id: w
      type: System.Int32
    - id: h
      type: System.Int32
    - id: mode
      type: SharpSDL3.Enums.RendererLogicalPresentation
    return:
      type: System.Boolean
    content.vb: Public Shared Function GetRenderLogicalPresentation(renderer As IntPtr, w As Integer, h As Integer, mode As RendererLogicalPresentation) As Boolean
  overload: SharpSDL3.Sdl.GetRenderLogicalPresentation*
  nameWithType.vb: Sdl.GetRenderLogicalPresentation(IntPtr, Integer, Integer, RendererLogicalPresentation)
  fullName.vb: SharpSDL3.Sdl.GetRenderLogicalPresentation(System.IntPtr, Integer, Integer, SharpSDL3.Enums.RendererLogicalPresentation)
  name.vb: GetRenderLogicalPresentation(IntPtr, Integer, Integer, RendererLogicalPresentation)
- uid: SharpSDL3.Sdl.GetRenderLogicalPresentation(System.IntPtr,SharpSDL3.Enums.RendererLogicalPresentation@)
  commentId: M:SharpSDL3.Sdl.GetRenderLogicalPresentation(System.IntPtr,SharpSDL3.Enums.RendererLogicalPresentation@)
  id: GetRenderLogicalPresentation(System.IntPtr,SharpSDL3.Enums.RendererLogicalPresentation@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetRenderLogicalPresentation(nint, out RendererLogicalPresentation)
  nameWithType: Sdl.GetRenderLogicalPresentation(nint, out RendererLogicalPresentation)
  fullName: SharpSDL3.Sdl.GetRenderLogicalPresentation(nint, out SharpSDL3.Enums.RendererLogicalPresentation)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetRenderLogicalPresentation
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 607
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get device independent resolution and presentation mode for rendering.
  remarks: >-
    This function gets the width and height of the logical rendering output, or

    the output size in pixels if a logical resolution is not enabled.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetRenderLogicalPresentation(System.IntPtr%2cSystem.Int32%2cSystem.Int32%2cSharpSDL3.Enums.RendererLogicalPresentation)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static Rect GetRenderLogicalPresentation(nint renderer, out RendererLogicalPresentation mode)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the rendering context.
    - id: mode
      type: SharpSDL3.Enums.RendererLogicalPresentation
      description: the presentation mode used.
    return:
      type: SharpSDL3.Structs.Rect
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetRenderLogicalPresentation(renderer As IntPtr, mode As RendererLogicalPresentation) As Rect
  overload: SharpSDL3.Sdl.GetRenderLogicalPresentation*
  nameWithType.vb: Sdl.GetRenderLogicalPresentation(IntPtr, RendererLogicalPresentation)
  fullName.vb: SharpSDL3.Sdl.GetRenderLogicalPresentation(System.IntPtr, SharpSDL3.Enums.RendererLogicalPresentation)
  name.vb: GetRenderLogicalPresentation(IntPtr, RendererLogicalPresentation)
- uid: SharpSDL3.Sdl.GetRenderLogicalPresentationRect(System.IntPtr,SharpSDL3.Structs.FRect@)
  commentId: M:SharpSDL3.Sdl.GetRenderLogicalPresentationRect(System.IntPtr,SharpSDL3.Structs.FRect@)
  id: GetRenderLogicalPresentationRect(System.IntPtr,SharpSDL3.Structs.FRect@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetRenderLogicalPresentationRect(nint, out FRect)
  nameWithType: Sdl.GetRenderLogicalPresentationRect(nint, out FRect)
  fullName: SharpSDL3.Sdl.GetRenderLogicalPresentationRect(nint, out SharpSDL3.Structs.FRect)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetRenderLogicalPresentationRect
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 618
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static bool GetRenderLogicalPresentationRect(nint renderer, out FRect rect)
    parameters:
    - id: renderer
      type: System.IntPtr
    - id: rect
      type: SharpSDL3.Structs.FRect
    return:
      type: System.Boolean
    content.vb: Public Shared Function GetRenderLogicalPresentationRect(renderer As IntPtr, rect As FRect) As Boolean
  overload: SharpSDL3.Sdl.GetRenderLogicalPresentationRect*
  nameWithType.vb: Sdl.GetRenderLogicalPresentationRect(IntPtr, FRect)
  fullName.vb: SharpSDL3.Sdl.GetRenderLogicalPresentationRect(System.IntPtr, SharpSDL3.Structs.FRect)
  name.vb: GetRenderLogicalPresentationRect(IntPtr, FRect)
- uid: SharpSDL3.Sdl.GetRenderLogicalPresentationRect(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetRenderLogicalPresentationRect(System.IntPtr)
  id: GetRenderLogicalPresentationRect(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetRenderLogicalPresentationRect(nint)
  nameWithType: Sdl.GetRenderLogicalPresentationRect(nint)
  fullName: SharpSDL3.Sdl.GetRenderLogicalPresentationRect(nint)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetRenderLogicalPresentationRect
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 644
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the final presentation rectangle for rendering.
  remarks: >-
    This function returns the calculated rectangle used for logical

    presentation, based on the presentation mode and output size. If logical

    presentation is disabled, it will fill the rectangle with the output size,

    in pixels.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetRenderLogicalPresentation(System.IntPtr%2cSystem.Int32%2cSystem.Int32%2cSharpSDL3.Enums.RendererLogicalPresentation)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static FRect GetRenderLogicalPresentationRect(nint renderer)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the rendering context.
    return:
      type: SharpSDL3.Structs.FRect
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetRenderLogicalPresentationRect(renderer As IntPtr) As FRect
  overload: SharpSDL3.Sdl.GetRenderLogicalPresentationRect*
  nameWithType.vb: Sdl.GetRenderLogicalPresentationRect(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetRenderLogicalPresentationRect(System.IntPtr)
  name.vb: GetRenderLogicalPresentationRect(IntPtr)
- uid: SharpSDL3.Sdl.GetRenderMetalCommandEncoder(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetRenderMetalCommandEncoder(System.IntPtr)
  id: GetRenderMetalCommandEncoder(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetRenderMetalCommandEncoder(nint)
  nameWithType: Sdl.GetRenderMetalCommandEncoder(nint)
  fullName: SharpSDL3.Sdl.GetRenderMetalCommandEncoder(nint)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetRenderMetalCommandEncoder
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 667
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the Metal command encoder for the current frame.
  remarks: >-
    This function returns void *, so SDL doesn't have to include Metal's

    headers, but it can be safely cast to an id&lt;MTLRenderCommandEncoder&gt;.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetRenderMetalLayer(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint GetRenderMetalCommandEncoder(nint renderer)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the renderer to query.
    return:
      type: System.IntPtr
      description: (void *) Returns an id&lt;MTLRenderCommandEncoder&gt; on success, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> ifthe renderer isn't a Metal renderer or there was an error.
    content.vb: Public Shared Function GetRenderMetalCommandEncoder(renderer As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.GetRenderMetalCommandEncoder*
  nameWithType.vb: Sdl.GetRenderMetalCommandEncoder(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetRenderMetalCommandEncoder(System.IntPtr)
  name.vb: GetRenderMetalCommandEncoder(IntPtr)
- uid: SharpSDL3.Sdl.GetRenderMetalLayer(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetRenderMetalLayer(System.IntPtr)
  id: GetRenderMetalLayer(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetRenderMetalLayer(nint)
  nameWithType: Sdl.GetRenderMetalLayer(nint)
  fullName: SharpSDL3.Sdl.GetRenderMetalLayer(nint)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetRenderMetalLayer
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 690
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the CAMetalLayer associated with the given Metal renderer.
  remarks: >-
    This function returns void *, so SDL doesn't have to include Metal's

    headers, but it can be safely cast to a CAMetalLayer *.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetRenderMetalCommandEncoder(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint GetRenderMetalLayer(nint renderer)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the renderer to query.
    return:
      type: System.IntPtr
      description: (void *) Returns a CAMetalLayer * on success, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if the rendererisn't a Metal renderer.
    content.vb: Public Shared Function GetRenderMetalLayer(renderer As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.GetRenderMetalLayer*
  nameWithType.vb: Sdl.GetRenderMetalLayer(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetRenderMetalLayer(System.IntPtr)
  name.vb: GetRenderMetalLayer(IntPtr)
- uid: SharpSDL3.Sdl.GetRenderOutputSize(System.IntPtr,System.Int32@,System.Int32@)
  commentId: M:SharpSDL3.Sdl.GetRenderOutputSize(System.IntPtr,System.Int32@,System.Int32@)
  id: GetRenderOutputSize(System.IntPtr,System.Int32@,System.Int32@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetRenderOutputSize(nint, out int, out int)
  nameWithType: Sdl.GetRenderOutputSize(nint, out int, out int)
  fullName: SharpSDL3.Sdl.GetRenderOutputSize(nint, out int, out int)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetRenderOutputSize
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 701
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static bool GetRenderOutputSize(nint renderer, out int w, out int h)
    parameters:
    - id: renderer
      type: System.IntPtr
    - id: w
      type: System.Int32
    - id: h
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function GetRenderOutputSize(renderer As IntPtr, w As Integer, h As Integer) As Boolean
  overload: SharpSDL3.Sdl.GetRenderOutputSize*
  nameWithType.vb: Sdl.GetRenderOutputSize(IntPtr, Integer, Integer)
  fullName.vb: SharpSDL3.Sdl.GetRenderOutputSize(System.IntPtr, Integer, Integer)
  name.vb: GetRenderOutputSize(IntPtr, Integer, Integer)
- uid: SharpSDL3.Sdl.GetRenderOutputSize(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetRenderOutputSize(System.IntPtr)
  id: GetRenderOutputSize(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetRenderOutputSize(nint)
  nameWithType: Sdl.GetRenderOutputSize(nint)
  fullName: SharpSDL3.Sdl.GetRenderOutputSize(nint)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetRenderOutputSize
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 726
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the output size in pixels of a rendering context.
  remarks: >-
    This returns the <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> output size in pixels, ignoring any render targets or

    logical size and presentation.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetCurrentRenderOutputSize(System.IntPtr%2cSystem.Int32%40%2cSystem.Int32%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static Rect GetRenderOutputSize(nint renderer)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the rendering context.
    return:
      type: SharpSDL3.Structs.Rect
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetRenderOutputSize(renderer As IntPtr) As Rect
  overload: SharpSDL3.Sdl.GetRenderOutputSize*
  nameWithType.vb: Sdl.GetRenderOutputSize(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetRenderOutputSize(System.IntPtr)
  name.vb: GetRenderOutputSize(IntPtr)
- uid: SharpSDL3.Sdl.GetRenderSafeArea(System.IntPtr,SharpSDL3.Structs.Rect@)
  commentId: M:SharpSDL3.Sdl.GetRenderSafeArea(System.IntPtr,SharpSDL3.Structs.Rect@)
  id: GetRenderSafeArea(System.IntPtr,SharpSDL3.Structs.Rect@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetRenderSafeArea(nint, out Rect)
  nameWithType: Sdl.GetRenderSafeArea(nint, out Rect)
  fullName: SharpSDL3.Sdl.GetRenderSafeArea(nint, out SharpSDL3.Structs.Rect)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetRenderSafeArea
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 734
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static bool GetRenderSafeArea(nint renderer, out Rect rect)
    parameters:
    - id: renderer
      type: System.IntPtr
    - id: rect
      type: SharpSDL3.Structs.Rect
    return:
      type: System.Boolean
    content.vb: Public Shared Function GetRenderSafeArea(renderer As IntPtr, rect As Rect) As Boolean
  overload: SharpSDL3.Sdl.GetRenderSafeArea*
  nameWithType.vb: Sdl.GetRenderSafeArea(IntPtr, Rect)
  fullName.vb: SharpSDL3.Sdl.GetRenderSafeArea(System.IntPtr, SharpSDL3.Structs.Rect)
  name.vb: GetRenderSafeArea(IntPtr, Rect)
- uid: SharpSDL3.Sdl.GetRenderSafeArea(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetRenderSafeArea(System.IntPtr)
  id: GetRenderSafeArea(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetRenderSafeArea(nint)
  nameWithType: Sdl.GetRenderSafeArea(nint)
  fullName: SharpSDL3.Sdl.GetRenderSafeArea(nint)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetRenderSafeArea
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 761
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the safe area for rendering within the current viewport.
  remarks: >-
    Some devices have portions of the screen which are partially obscured or

    not interactive, possibly due to on-screen controls, curved edges, camera

    notches, TV overscan, etc. This function provides the area of the current

    viewport which is safe to have interactible content. You should continue

    rendering into the rest of the render target, but it should not contain

    visually important or interactible content.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static Rect GetRenderSafeArea(nint renderer)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the rendering context.
    return:
      type: SharpSDL3.Structs.Rect
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetRenderSafeArea(renderer As IntPtr) As Rect
  overload: SharpSDL3.Sdl.GetRenderSafeArea*
  nameWithType.vb: Sdl.GetRenderSafeArea(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetRenderSafeArea(System.IntPtr)
  name.vb: GetRenderSafeArea(IntPtr)
- uid: SharpSDL3.Sdl.GetRenderScale(System.IntPtr,System.Single@,System.Single@)
  commentId: M:SharpSDL3.Sdl.GetRenderScale(System.IntPtr,System.Single@,System.Single@)
  id: GetRenderScale(System.IntPtr,System.Single@,System.Single@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetRenderScale(nint, out float, out float)
  nameWithType: Sdl.GetRenderScale(nint, out float, out float)
  fullName: SharpSDL3.Sdl.GetRenderScale(nint, out float, out float)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetRenderScale
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 769
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static bool GetRenderScale(nint renderer, out float scaleX, out float scaleY)
    parameters:
    - id: renderer
      type: System.IntPtr
    - id: scaleX
      type: System.Single
    - id: scaleY
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Shared Function GetRenderScale(renderer As IntPtr, scaleX As Single, scaleY As Single) As Boolean
  overload: SharpSDL3.Sdl.GetRenderScale*
  nameWithType.vb: Sdl.GetRenderScale(IntPtr, Single, Single)
  fullName.vb: SharpSDL3.Sdl.GetRenderScale(System.IntPtr, Single, Single)
  name.vb: GetRenderScale(IntPtr, Single, Single)
- uid: SharpSDL3.Sdl.GetRenderScale(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetRenderScale(System.IntPtr)
  id: GetRenderScale(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetRenderScale(nint)
  nameWithType: Sdl.GetRenderScale(nint)
  fullName: SharpSDL3.Sdl.GetRenderScale(nint)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetRenderScale
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 794
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the drawing scale for the current target.
  remarks: >-
    Each render target has its own scale. This function gets the scale for the

    current render target.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetRenderScale(System.IntPtr%2cSystem.Single%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static FPoint GetRenderScale(nint renderer)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the rendering context.
    return:
      type: SharpSDL3.Structs.FPoint
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetRenderScale(renderer As IntPtr) As FPoint
  overload: SharpSDL3.Sdl.GetRenderScale*
  nameWithType.vb: Sdl.GetRenderScale(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetRenderScale(System.IntPtr)
  name.vb: GetRenderScale(IntPtr)
- uid: SharpSDL3.Sdl.GetRenderTarget(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetRenderTarget(System.IntPtr)
  id: GetRenderTarget(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetRenderTarget(nint)
  nameWithType: Sdl.GetRenderTarget(nint)
  fullName: SharpSDL3.Sdl.GetRenderTarget(nint)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetRenderTarget
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 814
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the current render target.
  remarks: >-
    The default render target is the window for which the renderer was created,

    and is reported a <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> here.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetRenderTarget(System.IntPtr%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint GetRenderTarget(nint renderer)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the rendering context.
    return:
      type: System.IntPtr
      description: (SDL_Texture *) Returns the current render target or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>for the default render target.
    content.vb: Public Shared Function GetRenderTarget(renderer As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.GetRenderTarget*
  nameWithType.vb: Sdl.GetRenderTarget(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetRenderTarget(System.IntPtr)
  name.vb: GetRenderTarget(IntPtr)
- uid: SharpSDL3.Sdl.GetRenderViewport(System.IntPtr,SharpSDL3.Structs.Rect@)
  commentId: M:SharpSDL3.Sdl.GetRenderViewport(System.IntPtr,SharpSDL3.Structs.Rect@)
  id: GetRenderViewport(System.IntPtr,SharpSDL3.Structs.Rect@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetRenderViewport(nint, out Rect)
  nameWithType: Sdl.GetRenderViewport(nint, out Rect)
  fullName: SharpSDL3.Sdl.GetRenderViewport(nint, out SharpSDL3.Structs.Rect)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetRenderViewport
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 839
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the drawing area for the current target.
  remarks: >-
    Each render target has its own viewport. This function gets the viewport

    for the current render target.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.RenderViewportSet(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetRenderViewport(System.IntPtr%2cSharpSDL3.Structs.Rect%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool GetRenderViewport(nint renderer, out Rect rect)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the rendering context.
    - id: rect
      type: SharpSDL3.Structs.Rect
      description: an <xref href="SharpSDL3.Structs.Rect" data-throw-if-not-resolved="false"></xref> structure filled in with the current drawing area.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetRenderViewport(renderer As IntPtr, rect As Rect) As Boolean
  overload: SharpSDL3.Sdl.GetRenderViewport*
  nameWithType.vb: Sdl.GetRenderViewport(IntPtr, Rect)
  fullName.vb: SharpSDL3.Sdl.GetRenderViewport(System.IntPtr, SharpSDL3.Structs.Rect)
  name.vb: GetRenderViewport(IntPtr, Rect)
- uid: SharpSDL3.Sdl.GetRenderVsync(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetRenderVsync(System.IntPtr)
  id: GetRenderVsync(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetRenderVsync(nint)
  nameWithType: Sdl.GetRenderVsync(nint)
  fullName: SharpSDL3.Sdl.GetRenderVsync(nint)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetRenderVsync
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 861
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get VSync of the given renderer.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetRenderVSync(System.IntPtr%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static int GetRenderVsync(nint renderer)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the renderer to toggle.
    return:
      type: System.Int32
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetRenderVsync(renderer As IntPtr) As Integer
  overload: SharpSDL3.Sdl.GetRenderVsync*
  nameWithType.vb: Sdl.GetRenderVsync(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetRenderVsync(System.IntPtr)
  name.vb: GetRenderVsync(IntPtr)
- uid: SharpSDL3.Sdl.GetRenderVSync(System.IntPtr,System.Int32@)
  commentId: M:SharpSDL3.Sdl.GetRenderVSync(System.IntPtr,System.Int32@)
  id: GetRenderVSync(System.IntPtr,System.Int32@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetRenderVSync(nint, out int)
  nameWithType: Sdl.GetRenderVSync(nint, out int)
  fullName: SharpSDL3.Sdl.GetRenderVSync(nint, out int)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetRenderVSync
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 880
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get VSync of the given renderer.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetRenderVSync(System.IntPtr%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool GetRenderVSync(nint renderer, out int vsync)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the renderer to toggle.
    - id: vsync
      type: System.Int32
      description: an int filled with the current vertical refresh sync interval. See SDL_SetRenderVSync() for the meaning of the value.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetRenderVSync(renderer As IntPtr, vsync As Integer) As Boolean
  overload: SharpSDL3.Sdl.GetRenderVSync*
  nameWithType.vb: Sdl.GetRenderVSync(IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.GetRenderVSync(System.IntPtr, Integer)
  name.vb: GetRenderVSync(IntPtr, Integer)
- uid: SharpSDL3.Sdl.GetRenderWindow(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetRenderWindow(System.IntPtr)
  id: GetRenderWindow(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetRenderWindow(nint)
  nameWithType: Sdl.GetRenderWindow(nint)
  fullName: SharpSDL3.Sdl.GetRenderWindow(nint)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetRenderWindow
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 900
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the window associated with a renderer.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static nint GetRenderWindow(nint renderer)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the renderer to query.
    return:
      type: System.IntPtr
      description: (SDL_Window *) Returns the window on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetRenderWindow(renderer As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.GetRenderWindow*
  nameWithType.vb: Sdl.GetRenderWindow(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetRenderWindow(System.IntPtr)
  name.vb: GetRenderWindow(IntPtr)
- uid: SharpSDL3.Sdl.RenderClear(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.RenderClear(System.IntPtr)
  id: RenderClear(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RenderClear(nint)
  nameWithType: Sdl.RenderClear(nint)
  fullName: SharpSDL3.Sdl.RenderClear(nint)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RenderClear
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 925
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Clear the current rendering target with the drawing color.
  remarks: >-
    This function clears the entire rendering target, ignoring the viewport and

    the clip rectangle. Note, that clearing will also set/fill all pixels of

    the rendering target to current renderer draw color, so make sure to invoke

    SDL_SetRenderDrawColor() when needed.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetRenderDrawColor(System.IntPtr%2cSystem.Byte%2cSystem.Byte%2cSystem.Byte%2cSystem.Byte)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool RenderClear(nint renderer)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the rendering context.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function RenderClear(renderer As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.RenderClear*
  nameWithType.vb: Sdl.RenderClear(IntPtr)
  fullName.vb: SharpSDL3.Sdl.RenderClear(System.IntPtr)
  name.vb: RenderClear(IntPtr)
- uid: SharpSDL3.Sdl.RenderClipEnabled(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.RenderClipEnabled(System.IntPtr)
  id: RenderClipEnabled(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RenderClipEnabled(nint)
  nameWithType: Sdl.RenderClipEnabled(nint)
  fullName: SharpSDL3.Sdl.RenderClipEnabled(nint)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RenderClipEnabled
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 949
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get whether clipping is enabled on the given render target.
  remarks: >-
    Each render target has its own clip rectangle. This function checks the

    cliprect for the current render target.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetRenderClipRect(System.IntPtr%2cSharpSDL3.Structs.Rect%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetRenderClipRect(System.IntPtr%2cSharpSDL3.Structs.Rect%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool RenderClipEnabled(nint renderer)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the rendering context.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if clipping is enabled or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if not; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function RenderClipEnabled(renderer As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.RenderClipEnabled*
  nameWithType.vb: Sdl.RenderClipEnabled(IntPtr)
  fullName.vb: SharpSDL3.Sdl.RenderClipEnabled(System.IntPtr)
  name.vb: RenderClipEnabled(IntPtr)
- uid: SharpSDL3.Sdl.RenderCoordinatesFromWindow(System.IntPtr,System.Single,System.Single,System.Single@,System.Single@)
  commentId: M:SharpSDL3.Sdl.RenderCoordinatesFromWindow(System.IntPtr,System.Single,System.Single,System.Single@,System.Single@)
  id: RenderCoordinatesFromWindow(System.IntPtr,System.Single,System.Single,System.Single@,System.Single@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RenderCoordinatesFromWindow(nint, float, float, out float, out float)
  nameWithType: Sdl.RenderCoordinatesFromWindow(nint, float, float, out float, out float)
  fullName: SharpSDL3.Sdl.RenderCoordinatesFromWindow(nint, float, float, out float, out float)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RenderCoordinatesFromWindow
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 960
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static SdlBool RenderCoordinatesFromWindow(nint renderer, float windowX, float windowY, out float x, out float y)
    parameters:
    - id: renderer
      type: System.IntPtr
    - id: windowX
      type: System.Single
    - id: windowY
      type: System.Single
    - id: x
      type: System.Single
    - id: y
      type: System.Single
    return:
      type: SharpSDL3.Structs.SdlBool
    content.vb: Public Shared Function RenderCoordinatesFromWindow(renderer As IntPtr, windowX As Single, windowY As Single, x As Single, y As Single) As SdlBool
  overload: SharpSDL3.Sdl.RenderCoordinatesFromWindow*
  nameWithType.vb: Sdl.RenderCoordinatesFromWindow(IntPtr, Single, Single, Single, Single)
  fullName.vb: SharpSDL3.Sdl.RenderCoordinatesFromWindow(System.IntPtr, Single, Single, Single, Single)
  name.vb: RenderCoordinatesFromWindow(IntPtr, Single, Single, Single, Single)
- uid: SharpSDL3.Sdl.RenderCoordinatesFromWindow(System.IntPtr,SharpSDL3.Structs.FPoint)
  commentId: M:SharpSDL3.Sdl.RenderCoordinatesFromWindow(System.IntPtr,SharpSDL3.Structs.FPoint)
  id: RenderCoordinatesFromWindow(System.IntPtr,SharpSDL3.Structs.FPoint)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RenderCoordinatesFromWindow(nint, FPoint)
  nameWithType: Sdl.RenderCoordinatesFromWindow(nint, FPoint)
  fullName: SharpSDL3.Sdl.RenderCoordinatesFromWindow(nint, SharpSDL3.Structs.FPoint)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RenderCoordinatesFromWindow
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 988
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get a point in render coordinates when given a point in window coordinates.
  remarks: >-
    This takes into account several states:

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetRenderLogicalPresentation(System.IntPtr%2cSystem.Int32%2cSystem.Int32%2cSharpSDL3.Enums.RendererLogicalPresentation)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetRenderScale(System.IntPtr%2cSystem.Single%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static FPoint RenderCoordinatesFromWindow(nint renderer, FPoint windowPoint)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the rendering context.
    - id: windowPoint
      type: SharpSDL3.Structs.FPoint
    return:
      type: SharpSDL3.Structs.FPoint
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function RenderCoordinatesFromWindow(renderer As IntPtr, windowPoint As FPoint) As FPoint
  overload: SharpSDL3.Sdl.RenderCoordinatesFromWindow*
  nameWithType.vb: Sdl.RenderCoordinatesFromWindow(IntPtr, FPoint)
  fullName.vb: SharpSDL3.Sdl.RenderCoordinatesFromWindow(System.IntPtr, SharpSDL3.Structs.FPoint)
  name.vb: RenderCoordinatesFromWindow(IntPtr, FPoint)
- uid: SharpSDL3.Sdl.RenderCoordinatesToWindow(System.IntPtr,System.Single,System.Single,System.Single@,System.Single@)
  commentId: M:SharpSDL3.Sdl.RenderCoordinatesToWindow(System.IntPtr,System.Single,System.Single,System.Single@,System.Single@)
  id: RenderCoordinatesToWindow(System.IntPtr,System.Single,System.Single,System.Single@,System.Single@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RenderCoordinatesToWindow(nint, float, float, out float, out float)
  nameWithType: Sdl.RenderCoordinatesToWindow(nint, float, float, out float, out float)
  fullName: SharpSDL3.Sdl.RenderCoordinatesToWindow(nint, float, float, out float, out float)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RenderCoordinatesToWindow
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 999
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static bool RenderCoordinatesToWindow(nint renderer, float x, float y, out float windowX, out float windowY)
    parameters:
    - id: renderer
      type: System.IntPtr
    - id: x
      type: System.Single
    - id: y
      type: System.Single
    - id: windowX
      type: System.Single
    - id: windowY
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Shared Function RenderCoordinatesToWindow(renderer As IntPtr, x As Single, y As Single, windowX As Single, windowY As Single) As Boolean
  overload: SharpSDL3.Sdl.RenderCoordinatesToWindow*
  nameWithType.vb: Sdl.RenderCoordinatesToWindow(IntPtr, Single, Single, Single, Single)
  fullName.vb: SharpSDL3.Sdl.RenderCoordinatesToWindow(System.IntPtr, Single, Single, Single, Single)
  name.vb: RenderCoordinatesToWindow(IntPtr, Single, Single, Single, Single)
- uid: SharpSDL3.Sdl.RenderCoordinatesToWindow(System.IntPtr,System.Single,System.Single)
  commentId: M:SharpSDL3.Sdl.RenderCoordinatesToWindow(System.IntPtr,System.Single,System.Single)
  id: RenderCoordinatesToWindow(System.IntPtr,System.Single,System.Single)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RenderCoordinatesToWindow(nint, float, float)
  nameWithType: Sdl.RenderCoordinatesToWindow(nint, float, float)
  fullName: SharpSDL3.Sdl.RenderCoordinatesToWindow(nint, float, float)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RenderCoordinatesToWindow
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 1028
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get a point in window coordinates when given a point in render coordinates.
  remarks: >-
    This takes into account several states:

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetRenderLogicalPresentation(System.IntPtr%2cSystem.Int32%2cSystem.Int32%2cSharpSDL3.Enums.RendererLogicalPresentation)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetRenderScale(System.IntPtr%2cSystem.Single%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetRenderViewport(System.IntPtr%2cSharpSDL3.Structs.Rect%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static FPoint RenderCoordinatesToWindow(nint renderer, float x, float y)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the rendering context.
    - id: x
      type: System.Single
      description: the x coordinate in render coordinates.
    - id: y
      type: System.Single
      description: the y coordinate in render coordinates.
    return:
      type: SharpSDL3.Structs.FPoint
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function RenderCoordinatesToWindow(renderer As IntPtr, x As Single, y As Single) As FPoint
  overload: SharpSDL3.Sdl.RenderCoordinatesToWindow*
  nameWithType.vb: Sdl.RenderCoordinatesToWindow(IntPtr, Single, Single)
  fullName.vb: SharpSDL3.Sdl.RenderCoordinatesToWindow(System.IntPtr, Single, Single)
  name.vb: RenderCoordinatesToWindow(IntPtr, Single, Single)
- uid: SharpSDL3.Sdl.RenderCoordinatesToWindow(System.IntPtr,SharpSDL3.Structs.FPoint)
  commentId: M:SharpSDL3.Sdl.RenderCoordinatesToWindow(System.IntPtr,SharpSDL3.Structs.FPoint)
  id: RenderCoordinatesToWindow(System.IntPtr,SharpSDL3.Structs.FPoint)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RenderCoordinatesToWindow(nint, FPoint)
  nameWithType: Sdl.RenderCoordinatesToWindow(nint, FPoint)
  fullName: SharpSDL3.Sdl.RenderCoordinatesToWindow(nint, SharpSDL3.Structs.FPoint)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RenderCoordinatesToWindow
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 1053
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get a point in window coordinates when given a point in render coordinates.
  remarks: >-
    This takes into account several states:

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetRenderLogicalPresentation(System.IntPtr%2cSystem.Int32%2cSystem.Int32%2cSharpSDL3.Enums.RendererLogicalPresentation)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetRenderScale(System.IntPtr%2cSystem.Single%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetRenderViewport(System.IntPtr%2cSharpSDL3.Structs.Rect%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static FPoint RenderCoordinatesToWindow(nint renderer, FPoint point)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the rendering context.
    - id: point
      type: SharpSDL3.Structs.FPoint
    return:
      type: SharpSDL3.Structs.FPoint
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function RenderCoordinatesToWindow(renderer As IntPtr, point As FPoint) As FPoint
  overload: SharpSDL3.Sdl.RenderCoordinatesToWindow*
  nameWithType.vb: Sdl.RenderCoordinatesToWindow(IntPtr, FPoint)
  fullName.vb: SharpSDL3.Sdl.RenderCoordinatesToWindow(System.IntPtr, SharpSDL3.Structs.FPoint)
  name.vb: RenderCoordinatesToWindow(IntPtr, FPoint)
- uid: SharpSDL3.Sdl.RenderDebugText(System.IntPtr,System.Single,System.Single,System.String)
  commentId: M:SharpSDL3.Sdl.RenderDebugText(System.IntPtr,System.Single,System.Single,System.String)
  id: RenderDebugText(System.IntPtr,System.Single,System.Single,System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RenderDebugText(nint, float, float, string)
  nameWithType: Sdl.RenderDebugText(nint, float, float, string)
  fullName: SharpSDL3.Sdl.RenderDebugText(nint, float, float, string)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RenderDebugText
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 1078
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Draw debug text to an SDL_Renderer.
  remarks: >-
    This function will render a string of text to an

    SDL_Renderer. Note that this is a convenience function for

    debugging, with severe limitations, and not intended to be used for

    production apps and games.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.RenderDebugTextFormat(System.IntPtr%2cSystem.Single%2cSystem.Single%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    DEBUG_TEXT_FONT_CHARACTER_SIZE
  example: []
  syntax:
    content: public static bool RenderDebugText(nint renderer, float x, float y, string str)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the renderer which should draw a line of text.
    - id: x
      type: System.Single
      description: the x coordinate where the top-left corner of the text will draw.
    - id: y
      type: System.Single
      description: the y coordinate where the top-left corner of the text will draw.
    - id: str
      type: System.String
      description: the string to render.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function RenderDebugText(renderer As IntPtr, x As Single, y As Single, str As String) As Boolean
  overload: SharpSDL3.Sdl.RenderDebugText*
  nameWithType.vb: Sdl.RenderDebugText(IntPtr, Single, Single, String)
  fullName.vb: SharpSDL3.Sdl.RenderDebugText(System.IntPtr, Single, Single, String)
  name.vb: RenderDebugText(IntPtr, Single, Single, String)
- uid: SharpSDL3.Sdl.RenderDebugText(System.IntPtr,SharpSDL3.Structs.FPoint,System.String)
  commentId: M:SharpSDL3.Sdl.RenderDebugText(System.IntPtr,SharpSDL3.Structs.FPoint,System.String)
  id: RenderDebugText(System.IntPtr,SharpSDL3.Structs.FPoint,System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RenderDebugText(nint, FPoint, string)
  nameWithType: Sdl.RenderDebugText(nint, FPoint, string)
  fullName: SharpSDL3.Sdl.RenderDebugText(nint, SharpSDL3.Structs.FPoint, string)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RenderDebugText
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 1107
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Draw debug text to an SDL_Renderer.
  remarks: >-
    This function will render a string of text to an

    SDL_Renderer. Note that this is a convenience function for

    debugging, with severe limitations, and not intended to be used for

    production apps and games.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.RenderDebugTextFormat(System.IntPtr%2cSystem.Single%2cSystem.Single%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    DEBUG_TEXT_FONT_CHARACTER_SIZE
  example: []
  syntax:
    content: public static bool RenderDebugText(nint renderer, FPoint location, string str)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the renderer which should draw a line of text.
    - id: location
      type: SharpSDL3.Structs.FPoint
    - id: str
      type: System.String
      description: the string to render.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function RenderDebugText(renderer As IntPtr, location As FPoint, str As String) As Boolean
  overload: SharpSDL3.Sdl.RenderDebugText*
  nameWithType.vb: Sdl.RenderDebugText(IntPtr, FPoint, String)
  fullName.vb: SharpSDL3.Sdl.RenderDebugText(System.IntPtr, SharpSDL3.Structs.FPoint, String)
  name.vb: RenderDebugText(IntPtr, FPoint, String)
- uid: SharpSDL3.Sdl.RenderDebugTextFormat(System.IntPtr,System.Single,System.Single,System.String)
  commentId: M:SharpSDL3.Sdl.RenderDebugTextFormat(System.IntPtr,System.Single,System.Single,System.String)
  id: RenderDebugTextFormat(System.IntPtr,System.Single,System.Single,System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RenderDebugTextFormat(nint, float, float, string)
  nameWithType: Sdl.RenderDebugTextFormat(nint, float, float, string)
  fullName: SharpSDL3.Sdl.RenderDebugTextFormat(nint, float, float, string)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RenderDebugTextFormat
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 1132
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Draw debug text to an SDL_Renderer.
  remarks: >-
    This function will render a printf()-style format string to a renderer.

    Note that this is a convinence function for debugging, with severe

    limitations, and is not intended to be used for production apps and games.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.RenderDebugText(System.IntPtr%2cSystem.Single%2cSystem.Single%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    DEBUG_TEXT_FONT_CHARACTER_SIZE
  example: []
  syntax:
    content: public static bool RenderDebugTextFormat(nint renderer, float x, float y, string fmt)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the renderer which should draw the text.
    - id: x
      type: System.Single
      description: the x coordinate where the top-left corner of the text will draw.
    - id: y
      type: System.Single
      description: the y coordinate where the top-left corner of the text will draw.
    - id: fmt
      type: System.String
      description: the format string to draw.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function RenderDebugTextFormat(renderer As IntPtr, x As Single, y As Single, fmt As String) As Boolean
  overload: SharpSDL3.Sdl.RenderDebugTextFormat*
  nameWithType.vb: Sdl.RenderDebugTextFormat(IntPtr, Single, Single, String)
  fullName.vb: SharpSDL3.Sdl.RenderDebugTextFormat(System.IntPtr, Single, Single, String)
  name.vb: RenderDebugTextFormat(IntPtr, Single, Single, String)
- uid: SharpSDL3.Sdl.RenderDebugTextFormat(System.IntPtr,SharpSDL3.Structs.FPoint,System.String)
  commentId: M:SharpSDL3.Sdl.RenderDebugTextFormat(System.IntPtr,SharpSDL3.Structs.FPoint,System.String)
  id: RenderDebugTextFormat(System.IntPtr,SharpSDL3.Structs.FPoint,System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RenderDebugTextFormat(nint, FPoint, string)
  nameWithType: Sdl.RenderDebugTextFormat(nint, FPoint, string)
  fullName: SharpSDL3.Sdl.RenderDebugTextFormat(nint, SharpSDL3.Structs.FPoint, string)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RenderDebugTextFormat
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 1161
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Draw debug text to an SDL_Renderer.
  remarks: >-
    This function will render a printf()-style format string to a renderer.

    Note that this is a convinence function for debugging, with severe

    limitations, and is not intended to be used for production apps and games.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.RenderDebugText(System.IntPtr%2cSystem.Single%2cSystem.Single%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    DEBUG_TEXT_FONT_CHARACTER_SIZE
  example: []
  syntax:
    content: public static bool RenderDebugTextFormat(nint renderer, FPoint location, string fmt)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the renderer which should draw the text.
    - id: location
      type: SharpSDL3.Structs.FPoint
    - id: fmt
      type: System.String
      description: the format string to draw.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function RenderDebugTextFormat(renderer As IntPtr, location As FPoint, fmt As String) As Boolean
  overload: SharpSDL3.Sdl.RenderDebugTextFormat*
  nameWithType.vb: Sdl.RenderDebugTextFormat(IntPtr, FPoint, String)
  fullName.vb: SharpSDL3.Sdl.RenderDebugTextFormat(System.IntPtr, SharpSDL3.Structs.FPoint, String)
  name.vb: RenderDebugTextFormat(IntPtr, FPoint, String)
- uid: SharpSDL3.Sdl.RenderFillRect(System.IntPtr,SharpSDL3.Structs.FRect@)
  commentId: M:SharpSDL3.Sdl.RenderFillRect(System.IntPtr,SharpSDL3.Structs.FRect@)
  id: RenderFillRect(System.IntPtr,SharpSDL3.Structs.FRect@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RenderFillRect(nint, ref FRect)
  nameWithType: Sdl.RenderFillRect(nint, ref FRect)
  fullName: SharpSDL3.Sdl.RenderFillRect(nint, ref SharpSDL3.Structs.FRect)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RenderFillRect
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 1179
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Fill a rectangle on the current rendering target with the drawing color at subpixel precision.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.RenderFillRects(System.IntPtr%2cSystem.Span%7bSharpSDL3.Structs.FRect%7d)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool RenderFillRect(nint renderer, ref FRect rect)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the renderer which should fill a rectangle.
    - id: rect
      type: SharpSDL3.Structs.FRect
      description: a pointer to the destination rectangle, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for the entire rendering target.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function RenderFillRect(renderer As IntPtr, rect As FRect) As Boolean
  overload: SharpSDL3.Sdl.RenderFillRect*
  nameWithType.vb: Sdl.RenderFillRect(IntPtr, FRect)
  fullName.vb: SharpSDL3.Sdl.RenderFillRect(System.IntPtr, SharpSDL3.Structs.FRect)
  name.vb: RenderFillRect(IntPtr, FRect)
- uid: SharpSDL3.Sdl.RenderFillRects(System.IntPtr,System.Span{SharpSDL3.Structs.FRect})
  commentId: M:SharpSDL3.Sdl.RenderFillRects(System.IntPtr,System.Span{SharpSDL3.Structs.FRect})
  id: RenderFillRects(System.IntPtr,System.Span{SharpSDL3.Structs.FRect})
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RenderFillRects(nint, Span<FRect>)
  nameWithType: Sdl.RenderFillRects(nint, Span<FRect>)
  fullName: SharpSDL3.Sdl.RenderFillRects(nint, System.Span<SharpSDL3.Structs.FRect>)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RenderFillRects
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 1202
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Fill some number of rectangles on the current rendering target with the drawing color at subpixel precision.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.RenderFillRect(System.IntPtr%2cSharpSDL3.Structs.FRect%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool RenderFillRects(nint renderer, Span<FRect> rects)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the renderer which should fill multiple rectangles.
    - id: rects
      type: System.Span{SharpSDL3.Structs.FRect}
      description: a pointer to an array of destination rectangles.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function RenderFillRects(renderer As IntPtr, rects As Span(Of FRect)) As Boolean
  overload: SharpSDL3.Sdl.RenderFillRects*
  nameWithType.vb: Sdl.RenderFillRects(IntPtr, Span(Of FRect))
  fullName.vb: SharpSDL3.Sdl.RenderFillRects(System.IntPtr, System.Span(Of SharpSDL3.Structs.FRect))
  name.vb: RenderFillRects(IntPtr, Span(Of FRect))
- uid: SharpSDL3.Sdl.RenderFillRects(System.IntPtr,SharpSDL3.Structs.FRect[])
  commentId: M:SharpSDL3.Sdl.RenderFillRects(System.IntPtr,SharpSDL3.Structs.FRect[])
  id: RenderFillRects(System.IntPtr,SharpSDL3.Structs.FRect[])
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RenderFillRects(nint, FRect[])
  nameWithType: Sdl.RenderFillRects(nint, FRect[])
  fullName: SharpSDL3.Sdl.RenderFillRects(nint, SharpSDL3.Structs.FRect[])
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RenderFillRects
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 1225
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Fill some number of rectangles on the current rendering target with the drawing color at subpixel precision.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.RenderFillRect(System.IntPtr%2cSharpSDL3.Structs.FRect%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool RenderFillRects(nint renderer, FRect[] rects)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the renderer which should fill multiple rectangles.
    - id: rects
      type: SharpSDL3.Structs.FRect[]
      description: a pointer to an array of destination rectangles.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function RenderFillRects(renderer As IntPtr, rects As FRect()) As Boolean
  overload: SharpSDL3.Sdl.RenderFillRects*
  nameWithType.vb: Sdl.RenderFillRects(IntPtr, FRect())
  fullName.vb: SharpSDL3.Sdl.RenderFillRects(System.IntPtr, SharpSDL3.Structs.FRect())
  name.vb: RenderFillRects(IntPtr, FRect())
- uid: SharpSDL3.Sdl.RenderGeometry(System.IntPtr,System.IntPtr,System.Span{SharpSDL3.Structs.Vertex},System.Span{System.Int32})
  commentId: M:SharpSDL3.Sdl.RenderGeometry(System.IntPtr,System.IntPtr,System.Span{SharpSDL3.Structs.Vertex},System.Span{System.Int32})
  id: RenderGeometry(System.IntPtr,System.IntPtr,System.Span{SharpSDL3.Structs.Vertex},System.Span{System.Int32})
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RenderGeometry(nint, nint, Span<Vertex>, Span<int>)
  nameWithType: Sdl.RenderGeometry(nint, nint, Span<Vertex>, Span<int>)
  fullName: SharpSDL3.Sdl.RenderGeometry(nint, nint, System.Span<SharpSDL3.Structs.Vertex>, System.Span<int>)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RenderGeometry
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 1248
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Render a list of triangles, optionally using a texture and indices into the vertex array Color and alpha modulation is done per vertex (SDL_SetTextureColorMod and SDL_SetTextureAlphaMod are ignored).
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.RenderGeometryRaw(System.IntPtr%2cSystem.IntPtr%2cSystem.IntPtr%2cSystem.Int32%2cSystem.IntPtr%2cSystem.Int32%2cSystem.IntPtr%2cSystem.Int32%2cSystem.Int32%2cSystem.IntPtr%2cSystem.Int32%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>

    SetRenderTextureAddressMode
  example: []
  syntax:
    content: public static bool RenderGeometry(nint renderer, nint texture, Span<Vertex> vertices, Span<int> indices)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the rendering context.
    - id: texture
      type: System.IntPtr
      description: (optional) The SDL texture to use.
    - id: vertices
      type: System.Span{SharpSDL3.Structs.Vertex}
      description: vertices.
    - id: indices
      type: System.Span{System.Int32}
      description: (optional) An array of integer indices into the 'vertices' array, if <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> all vertices will be rendered in sequential order.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function RenderGeometry(renderer As IntPtr, texture As IntPtr, vertices As Span(Of Vertex), indices As Span(Of Integer)) As Boolean
  overload: SharpSDL3.Sdl.RenderGeometry*
  nameWithType.vb: Sdl.RenderGeometry(IntPtr, IntPtr, Span(Of Vertex), Span(Of Integer))
  fullName.vb: SharpSDL3.Sdl.RenderGeometry(System.IntPtr, System.IntPtr, System.Span(Of SharpSDL3.Structs.Vertex), System.Span(Of Integer))
  name.vb: RenderGeometry(IntPtr, IntPtr, Span(Of Vertex), Span(Of Integer))
- uid: SharpSDL3.Sdl.RenderGeometry(System.IntPtr,System.IntPtr,SharpSDL3.Structs.Vertex[],System.Int32[])
  commentId: M:SharpSDL3.Sdl.RenderGeometry(System.IntPtr,System.IntPtr,SharpSDL3.Structs.Vertex[],System.Int32[])
  id: RenderGeometry(System.IntPtr,System.IntPtr,SharpSDL3.Structs.Vertex[],System.Int32[])
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RenderGeometry(nint, nint, Vertex[], int[])
  nameWithType: Sdl.RenderGeometry(nint, nint, Vertex[], int[])
  fullName: SharpSDL3.Sdl.RenderGeometry(nint, nint, SharpSDL3.Structs.Vertex[], int[])
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RenderGeometry
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 1276
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Render a list of triangles, optionally using a texture and indices into the vertex array Color and alpha modulation is done per vertex (SDL_SetTextureColorMod and SDL_SetTextureAlphaMod are ignored).
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.RenderGeometryRaw(System.IntPtr%2cSystem.IntPtr%2cSystem.IntPtr%2cSystem.Int32%2cSystem.IntPtr%2cSystem.Int32%2cSystem.IntPtr%2cSystem.Int32%2cSystem.Int32%2cSystem.IntPtr%2cSystem.Int32%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>

    SetRenderTextureAddressMode
  example: []
  syntax:
    content: public static bool RenderGeometry(nint renderer, nint texture, Vertex[] vertices, int[] indices)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the rendering context.
    - id: texture
      type: System.IntPtr
      description: (optional) The SDL texture to use.
    - id: vertices
      type: SharpSDL3.Structs.Vertex[]
      description: vertices.
    - id: indices
      type: System.Int32[]
      description: (optional) An array of integer indices into the 'vertices' array, if <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> all vertices will be rendered in sequential order.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function RenderGeometry(renderer As IntPtr, texture As IntPtr, vertices As Vertex(), indices As Integer()) As Boolean
  overload: SharpSDL3.Sdl.RenderGeometry*
  nameWithType.vb: Sdl.RenderGeometry(IntPtr, IntPtr, Vertex(), Integer())
  fullName.vb: SharpSDL3.Sdl.RenderGeometry(System.IntPtr, System.IntPtr, SharpSDL3.Structs.Vertex(), Integer())
  name.vb: RenderGeometry(IntPtr, IntPtr, Vertex(), Integer())
- uid: SharpSDL3.Sdl.RenderGeometry(System.IntPtr,System.IntPtr,System.Span{SharpSDL3.Structs.Vertex},System.Int32[])
  commentId: M:SharpSDL3.Sdl.RenderGeometry(System.IntPtr,System.IntPtr,System.Span{SharpSDL3.Structs.Vertex},System.Int32[])
  id: RenderGeometry(System.IntPtr,System.IntPtr,System.Span{SharpSDL3.Structs.Vertex},System.Int32[])
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RenderGeometry(nint, nint, Span<Vertex>, int[])
  nameWithType: Sdl.RenderGeometry(nint, nint, Span<Vertex>, int[])
  fullName: SharpSDL3.Sdl.RenderGeometry(nint, nint, System.Span<SharpSDL3.Structs.Vertex>, int[])
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RenderGeometry
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 1299
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Render a list of triangles, optionally using a texture and indices into the vertex array Color and alpha modulation is done per vertex (SDL_SetTextureColorMod and SDL_SetTextureAlphaMod are ignored).
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.RenderGeometryRaw(System.IntPtr%2cSystem.IntPtr%2cSystem.IntPtr%2cSystem.Int32%2cSystem.IntPtr%2cSystem.Int32%2cSystem.IntPtr%2cSystem.Int32%2cSystem.Int32%2cSystem.IntPtr%2cSystem.Int32%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>

    SetRenderTextureAddressMode
  example: []
  syntax:
    content: public static bool RenderGeometry(nint renderer, nint texture, Span<Vertex> vertices, int[] indices)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the rendering context.
    - id: texture
      type: System.IntPtr
      description: (optional) The SDL texture to use.
    - id: vertices
      type: System.Span{SharpSDL3.Structs.Vertex}
      description: vertices.
    - id: indices
      type: System.Int32[]
      description: (optional) An array of integer indices into the 'vertices' array, if <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> all vertices will be rendered in sequential order.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function RenderGeometry(renderer As IntPtr, texture As IntPtr, vertices As Span(Of Vertex), indices As Integer()) As Boolean
  overload: SharpSDL3.Sdl.RenderGeometry*
  nameWithType.vb: Sdl.RenderGeometry(IntPtr, IntPtr, Span(Of Vertex), Integer())
  fullName.vb: SharpSDL3.Sdl.RenderGeometry(System.IntPtr, System.IntPtr, System.Span(Of SharpSDL3.Structs.Vertex), Integer())
  name.vb: RenderGeometry(IntPtr, IntPtr, Span(Of Vertex), Integer())
- uid: SharpSDL3.Sdl.RenderGeometry(System.IntPtr,System.IntPtr,SharpSDL3.Structs.Vertex[],System.Span{System.Int32})
  commentId: M:SharpSDL3.Sdl.RenderGeometry(System.IntPtr,System.IntPtr,SharpSDL3.Structs.Vertex[],System.Span{System.Int32})
  id: RenderGeometry(System.IntPtr,System.IntPtr,SharpSDL3.Structs.Vertex[],System.Span{System.Int32})
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RenderGeometry(nint, nint, Vertex[], Span<int>)
  nameWithType: Sdl.RenderGeometry(nint, nint, Vertex[], Span<int>)
  fullName: SharpSDL3.Sdl.RenderGeometry(nint, nint, SharpSDL3.Structs.Vertex[], System.Span<int>)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RenderGeometry
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 1322
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Render a list of triangles, optionally using a texture and indices into the vertex array Color and alpha modulation is done per vertex (SDL_SetTextureColorMod and SDL_SetTextureAlphaMod are ignored).
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.RenderGeometryRaw(System.IntPtr%2cSystem.IntPtr%2cSystem.IntPtr%2cSystem.Int32%2cSystem.IntPtr%2cSystem.Int32%2cSystem.IntPtr%2cSystem.Int32%2cSystem.Int32%2cSystem.IntPtr%2cSystem.Int32%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>

    SetRenderTextureAddressMode
  example: []
  syntax:
    content: public static bool RenderGeometry(nint renderer, nint texture, Vertex[] vertices, Span<int> indices)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the rendering context.
    - id: texture
      type: System.IntPtr
      description: (optional) The SDL texture to use.
    - id: vertices
      type: SharpSDL3.Structs.Vertex[]
      description: vertices.
    - id: indices
      type: System.Span{System.Int32}
      description: (optional) An array of integer indices into the 'vertices' array, if <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> all vertices will be rendered in sequential order.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function RenderGeometry(renderer As IntPtr, texture As IntPtr, vertices As Vertex(), indices As Span(Of Integer)) As Boolean
  overload: SharpSDL3.Sdl.RenderGeometry*
  nameWithType.vb: Sdl.RenderGeometry(IntPtr, IntPtr, Vertex(), Span(Of Integer))
  fullName.vb: SharpSDL3.Sdl.RenderGeometry(System.IntPtr, System.IntPtr, SharpSDL3.Structs.Vertex(), System.Span(Of Integer))
  name.vb: RenderGeometry(IntPtr, IntPtr, Vertex(), Span(Of Integer))
- uid: SharpSDL3.Sdl.RenderGeometryRaw(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.Int32,System.IntPtr,System.Int32,System.Int32)
  commentId: M:SharpSDL3.Sdl.RenderGeometryRaw(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.Int32,System.IntPtr,System.Int32,System.Int32)
  id: RenderGeometryRaw(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.Int32,System.IntPtr,System.Int32,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RenderGeometryRaw(nint, nint, nint, int, nint, int, nint, int, int, nint, int, int)
  nameWithType: Sdl.RenderGeometryRaw(nint, nint, nint, int, nint, int, nint, int, int, nint, int, int)
  fullName: SharpSDL3.Sdl.RenderGeometryRaw(nint, nint, nint, int, nint, int, nint, int, int, nint, int, int)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RenderGeometryRaw
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 1351
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Render a list of triangles, optionally using a texture and indices into the vertex arrays Color and alpha modulation is done per vertex (SDL_SetTextureColorMod and SDL_SetTextureAlphaMod are ignored).
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.RenderGeometry(System.IntPtr%2cSystem.IntPtr%2cSystem.Span%7bSharpSDL3.Structs.Vertex%7d%2cSystem.Span%7bSystem.Int32%7d)" data-throw-if-not-resolved="false"></xref>

    SetRenderTextureAddressMode
  example: []
  syntax:
    content: public static bool RenderGeometryRaw(nint renderer, nint texture, nint xy, int xyStride, nint color, int colorStride, nint uv, int uvStride, int numVertices, nint indices, int numIndices, int sizeIndices)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the rendering context.
    - id: texture
      type: System.IntPtr
      description: (optional) The SDL texture to use.
    - id: xy
      type: System.IntPtr
      description: vertex positions.
    - id: xyStride
      type: System.Int32
    - id: color
      type: System.IntPtr
      description: vertex colors (as SDL_FColor).
    - id: colorStride
      type: System.Int32
    - id: uv
      type: System.IntPtr
      description: vertex normalized texture coordinates.
    - id: uvStride
      type: System.Int32
    - id: numVertices
      type: System.Int32
    - id: indices
      type: System.IntPtr
      description: (optional) An array of indices into the 'vertices' arrays, if <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> all vertices will be rendered in sequential order.
    - id: numIndices
      type: System.Int32
    - id: sizeIndices
      type: System.Int32
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function RenderGeometryRaw(renderer As IntPtr, texture As IntPtr, xy As IntPtr, xyStride As Integer, color As IntPtr, colorStride As Integer, uv As IntPtr, uvStride As Integer, numVertices As Integer, indices As IntPtr, numIndices As Integer, sizeIndices As Integer) As Boolean
  overload: SharpSDL3.Sdl.RenderGeometryRaw*
  nameWithType.vb: Sdl.RenderGeometryRaw(IntPtr, IntPtr, IntPtr, Integer, IntPtr, Integer, IntPtr, Integer, Integer, IntPtr, Integer, Integer)
  fullName.vb: SharpSDL3.Sdl.RenderGeometryRaw(System.IntPtr, System.IntPtr, System.IntPtr, Integer, System.IntPtr, Integer, System.IntPtr, Integer, Integer, System.IntPtr, Integer, Integer)
  name.vb: RenderGeometryRaw(IntPtr, IntPtr, IntPtr, Integer, IntPtr, Integer, IntPtr, Integer, Integer, IntPtr, Integer, Integer)
- uid: SharpSDL3.Sdl.RenderLine(System.IntPtr,System.Single,System.Single,System.Single,System.Single)
  commentId: M:SharpSDL3.Sdl.RenderLine(System.IntPtr,System.Single,System.Single,System.Single,System.Single)
  id: RenderLine(System.IntPtr,System.Single,System.Single,System.Single,System.Single)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RenderLine(nint, float, float, float, float)
  nameWithType: Sdl.RenderLine(nint, float, float, float, float)
  fullName: SharpSDL3.Sdl.RenderLine(nint, float, float, float, float)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RenderLine
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 1378
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Draw a line on the current rendering target at subpixel precision.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.RenderLines(System.IntPtr%2cSystem.Span%7bSharpSDL3.Structs.FPoint%7d)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool RenderLine(nint renderer, float x1, float y1, float x2, float y2)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the renderer which should draw a line.
    - id: x1
      type: System.Single
      description: the x coordinate of the start point.
    - id: y1
      type: System.Single
      description: the y coordinate of the start point.
    - id: x2
      type: System.Single
      description: the x coordinate of the end point.
    - id: y2
      type: System.Single
      description: the y coordinate of the end point.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function RenderLine(renderer As IntPtr, x1 As Single, y1 As Single, x2 As Single, y2 As Single) As Boolean
  overload: SharpSDL3.Sdl.RenderLine*
  nameWithType.vb: Sdl.RenderLine(IntPtr, Single, Single, Single, Single)
  fullName.vb: SharpSDL3.Sdl.RenderLine(System.IntPtr, Single, Single, Single, Single)
  name.vb: RenderLine(IntPtr, Single, Single, Single, Single)
- uid: SharpSDL3.Sdl.RenderLine(System.IntPtr,SharpSDL3.Structs.FPoint,SharpSDL3.Structs.FPoint)
  commentId: M:SharpSDL3.Sdl.RenderLine(System.IntPtr,SharpSDL3.Structs.FPoint,SharpSDL3.Structs.FPoint)
  id: RenderLine(System.IntPtr,SharpSDL3.Structs.FPoint,SharpSDL3.Structs.FPoint)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RenderLine(nint, FPoint, FPoint)
  nameWithType: Sdl.RenderLine(nint, FPoint, FPoint)
  fullName: SharpSDL3.Sdl.RenderLine(nint, SharpSDL3.Structs.FPoint, SharpSDL3.Structs.FPoint)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RenderLine
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 1403
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Draw a line on the current rendering target at subpixel precision.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.RenderLines(System.IntPtr%2cSystem.Span%7bSharpSDL3.Structs.FPoint%7d)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool RenderLine(nint renderer, FPoint point1, FPoint point2)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the renderer which should draw a line.
    - id: point1
      type: SharpSDL3.Structs.FPoint
    - id: point2
      type: SharpSDL3.Structs.FPoint
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function RenderLine(renderer As IntPtr, point1 As FPoint, point2 As FPoint) As Boolean
  overload: SharpSDL3.Sdl.RenderLine*
  nameWithType.vb: Sdl.RenderLine(IntPtr, FPoint, FPoint)
  fullName.vb: SharpSDL3.Sdl.RenderLine(System.IntPtr, SharpSDL3.Structs.FPoint, SharpSDL3.Structs.FPoint)
  name.vb: RenderLine(IntPtr, FPoint, FPoint)
- uid: SharpSDL3.Sdl.RenderLines(System.IntPtr,System.Span{SharpSDL3.Structs.FPoint})
  commentId: M:SharpSDL3.Sdl.RenderLines(System.IntPtr,System.Span{SharpSDL3.Structs.FPoint})
  id: RenderLines(System.IntPtr,System.Span{SharpSDL3.Structs.FPoint})
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RenderLines(nint, Span<FPoint>)
  nameWithType: Sdl.RenderLines(nint, Span<FPoint>)
  fullName: SharpSDL3.Sdl.RenderLines(nint, System.Span<SharpSDL3.Structs.FPoint>)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RenderLines
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 1422
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Draw a series of connected lines on the current rendering target at subpixel precision.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.RenderLine(System.IntPtr%2cSystem.Single%2cSystem.Single%2cSystem.Single%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool RenderLines(nint renderer, Span<FPoint> points)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the renderer which should draw multiple lines.
    - id: points
      type: System.Span{SharpSDL3.Structs.FPoint}
      description: the points along the lines.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function RenderLines(renderer As IntPtr, points As Span(Of FPoint)) As Boolean
  overload: SharpSDL3.Sdl.RenderLines*
  nameWithType.vb: Sdl.RenderLines(IntPtr, Span(Of FPoint))
  fullName.vb: SharpSDL3.Sdl.RenderLines(System.IntPtr, System.Span(Of SharpSDL3.Structs.FPoint))
  name.vb: RenderLines(IntPtr, Span(Of FPoint))
- uid: SharpSDL3.Sdl.RenderLines(System.IntPtr,SharpSDL3.Structs.FPoint[])
  commentId: M:SharpSDL3.Sdl.RenderLines(System.IntPtr,SharpSDL3.Structs.FPoint[])
  id: RenderLines(System.IntPtr,SharpSDL3.Structs.FPoint[])
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RenderLines(nint, FPoint[])
  nameWithType: Sdl.RenderLines(nint, FPoint[])
  fullName: SharpSDL3.Sdl.RenderLines(nint, SharpSDL3.Structs.FPoint[])
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RenderLines
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 1445
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Draw a series of connected lines on the current rendering target at subpixel precision.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.RenderLine(System.IntPtr%2cSystem.Single%2cSystem.Single%2cSystem.Single%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool RenderLines(nint renderer, FPoint[] points)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the renderer which should draw multiple lines.
    - id: points
      type: SharpSDL3.Structs.FPoint[]
      description: the points along the lines.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function RenderLines(renderer As IntPtr, points As FPoint()) As Boolean
  overload: SharpSDL3.Sdl.RenderLines*
  nameWithType.vb: Sdl.RenderLines(IntPtr, FPoint())
  fullName.vb: SharpSDL3.Sdl.RenderLines(System.IntPtr, SharpSDL3.Structs.FPoint())
  name.vb: RenderLines(IntPtr, FPoint())
- uid: SharpSDL3.Sdl.RenderPoint(System.IntPtr,System.Single,System.Single)
  commentId: M:SharpSDL3.Sdl.RenderPoint(System.IntPtr,System.Single,System.Single)
  id: RenderPoint(System.IntPtr,System.Single,System.Single)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RenderPoint(nint, float, float)
  nameWithType: Sdl.RenderPoint(nint, float, float)
  fullName: SharpSDL3.Sdl.RenderPoint(nint, float, float)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RenderPoint
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 1464
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Draw a point on the current rendering target at subpixel precision.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.RenderPoints(System.IntPtr%2cSystem.Span%7bSharpSDL3.Structs.FPoint%7d)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool RenderPoint(nint renderer, float x, float y)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the renderer which should draw a point.
    - id: x
      type: System.Single
      description: the x coordinate of the point.
    - id: y
      type: System.Single
      description: the y coordinate of the point.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function RenderPoint(renderer As IntPtr, x As Single, y As Single) As Boolean
  overload: SharpSDL3.Sdl.RenderPoint*
  nameWithType.vb: Sdl.RenderPoint(IntPtr, Single, Single)
  fullName.vb: SharpSDL3.Sdl.RenderPoint(System.IntPtr, Single, Single)
  name.vb: RenderPoint(IntPtr, Single, Single)
- uid: SharpSDL3.Sdl.RenderPoint(System.IntPtr,SharpSDL3.Structs.FPoint)
  commentId: M:SharpSDL3.Sdl.RenderPoint(System.IntPtr,SharpSDL3.Structs.FPoint)
  id: RenderPoint(System.IntPtr,SharpSDL3.Structs.FPoint)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RenderPoint(nint, FPoint)
  nameWithType: Sdl.RenderPoint(nint, FPoint)
  fullName: SharpSDL3.Sdl.RenderPoint(nint, SharpSDL3.Structs.FPoint)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RenderPoint
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 1487
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Draw a point on the current rendering target at subpixel precision.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.RenderPoints(System.IntPtr%2cSystem.Span%7bSharpSDL3.Structs.FPoint%7d)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool RenderPoint(nint renderer, FPoint point)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the renderer which should draw a point.
    - id: point
      type: SharpSDL3.Structs.FPoint
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function RenderPoint(renderer As IntPtr, point As FPoint) As Boolean
  overload: SharpSDL3.Sdl.RenderPoint*
  nameWithType.vb: Sdl.RenderPoint(IntPtr, FPoint)
  fullName.vb: SharpSDL3.Sdl.RenderPoint(System.IntPtr, SharpSDL3.Structs.FPoint)
  name.vb: RenderPoint(IntPtr, FPoint)
- uid: SharpSDL3.Sdl.RenderPoints(System.IntPtr,System.Span{SharpSDL3.Structs.FPoint})
  commentId: M:SharpSDL3.Sdl.RenderPoints(System.IntPtr,System.Span{SharpSDL3.Structs.FPoint})
  id: RenderPoints(System.IntPtr,System.Span{SharpSDL3.Structs.FPoint})
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RenderPoints(nint, Span<FPoint>)
  nameWithType: Sdl.RenderPoints(nint, Span<FPoint>)
  fullName: SharpSDL3.Sdl.RenderPoints(nint, System.Span<SharpSDL3.Structs.FPoint>)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RenderPoints
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 1506
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Draw multiple points on the current rendering target at subpixel precision.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.RenderPoint(System.IntPtr%2cSystem.Single%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool RenderPoints(nint renderer, Span<FPoint> points)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the renderer which should draw multiple points.
    - id: points
      type: System.Span{SharpSDL3.Structs.FPoint}
      description: the points to draw.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function RenderPoints(renderer As IntPtr, points As Span(Of FPoint)) As Boolean
  overload: SharpSDL3.Sdl.RenderPoints*
  nameWithType.vb: Sdl.RenderPoints(IntPtr, Span(Of FPoint))
  fullName.vb: SharpSDL3.Sdl.RenderPoints(System.IntPtr, System.Span(Of SharpSDL3.Structs.FPoint))
  name.vb: RenderPoints(IntPtr, Span(Of FPoint))
- uid: SharpSDL3.Sdl.RenderPoints(System.IntPtr,SharpSDL3.Structs.FPoint[])
  commentId: M:SharpSDL3.Sdl.RenderPoints(System.IntPtr,SharpSDL3.Structs.FPoint[])
  id: RenderPoints(System.IntPtr,SharpSDL3.Structs.FPoint[])
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RenderPoints(nint, FPoint[])
  nameWithType: Sdl.RenderPoints(nint, FPoint[])
  fullName: SharpSDL3.Sdl.RenderPoints(nint, SharpSDL3.Structs.FPoint[])
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RenderPoints
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 1529
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Draw multiple points on the current rendering target at subpixel precision.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.RenderPoint(System.IntPtr%2cSystem.Single%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool RenderPoints(nint renderer, FPoint[] points)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the renderer which should draw multiple points.
    - id: points
      type: SharpSDL3.Structs.FPoint[]
      description: the points to draw.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function RenderPoints(renderer As IntPtr, points As FPoint()) As Boolean
  overload: SharpSDL3.Sdl.RenderPoints*
  nameWithType.vb: Sdl.RenderPoints(IntPtr, FPoint())
  fullName.vb: SharpSDL3.Sdl.RenderPoints(System.IntPtr, SharpSDL3.Structs.FPoint())
  name.vb: RenderPoints(IntPtr, FPoint())
- uid: SharpSDL3.Sdl.RenderPresent(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.RenderPresent(System.IntPtr)
  id: RenderPresent(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RenderPresent(nint)
  nameWithType: Sdl.RenderPresent(nint)
  fullName: SharpSDL3.Sdl.RenderPresent(nint)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RenderPresent
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 1562
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Update the screen with any rendering performed since the previous call.
  remarks: >-
    SDL's rendering functions operate on a backbuffer; that is, calling a

    rendering function such as SDL_RenderLine() does not

    directly put a line on the screen, but rather updates the backbuffer. As

    such, you compose your entire scene and present the composed backbuffer

    to the screen as a complete picture.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateRenderer(System.IntPtr%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.RenderClear(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.RenderFillRect(System.IntPtr%2cSharpSDL3.Structs.FRect%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.RenderFillRects(System.IntPtr%2cSystem.Span%7bSharpSDL3.Structs.FRect%7d)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.RenderLine(System.IntPtr%2cSystem.Single%2cSystem.Single%2cSystem.Single%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.RenderLines(System.IntPtr%2cSystem.Span%7bSharpSDL3.Structs.FPoint%7d)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.RenderPoint(System.IntPtr%2cSystem.Single%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.RenderPoints(System.IntPtr%2cSystem.Span%7bSharpSDL3.Structs.FPoint%7d)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.RenderRect(System.IntPtr%2cSharpSDL3.Structs.FRect%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.RenderRects(System.IntPtr%2cSystem.Span%7bSharpSDL3.Structs.FRect%7d)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetRenderDrawBlendMode(System.IntPtr%2cSystem.UInt32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetRenderDrawColor(System.IntPtr%2cSystem.Byte%2cSystem.Byte%2cSystem.Byte%2cSystem.Byte)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool RenderPresent(nint renderer)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the rendering context.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function RenderPresent(renderer As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.RenderPresent*
  nameWithType.vb: Sdl.RenderPresent(IntPtr)
  fullName.vb: SharpSDL3.Sdl.RenderPresent(System.IntPtr)
  name.vb: RenderPresent(IntPtr)
- uid: SharpSDL3.Sdl.RenderReadPixels(System.IntPtr,SharpSDL3.Structs.Rect@)
  commentId: M:SharpSDL3.Sdl.RenderReadPixels(System.IntPtr,SharpSDL3.Structs.Rect@)
  id: RenderReadPixels(System.IntPtr,SharpSDL3.Structs.Rect@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RenderReadPixels(nint, ref Rect)
  nameWithType: Sdl.RenderReadPixels(nint, ref Rect)
  fullName: SharpSDL3.Sdl.RenderReadPixels(nint, ref SharpSDL3.Structs.Rect)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RenderReadPixels
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 1586
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Read pixels from the current rendering target.
  remarks: >-
    The returned surface contains pixels inside the desired area clipped to the

    current viewport, and should be freed with

    SDL_DestroySurface().

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static nint RenderReadPixels(nint renderer, ref Rect rect)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the rendering context.
    - id: rect
      type: SharpSDL3.Structs.Rect
      description: an <xref href="SharpSDL3.Structs.Rect" data-throw-if-not-resolved="false"></xref> structure representing the area to read, which will be clipped to the current viewport, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for the entire viewport.
    return:
      type: System.IntPtr
      description: (SDL_Surface *) Returns a new SDL_Surface on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function RenderReadPixels(renderer As IntPtr, rect As Rect) As IntPtr
  overload: SharpSDL3.Sdl.RenderReadPixels*
  nameWithType.vb: Sdl.RenderReadPixels(IntPtr, Rect)
  fullName.vb: SharpSDL3.Sdl.RenderReadPixels(System.IntPtr, SharpSDL3.Structs.Rect)
  name.vb: RenderReadPixels(IntPtr, Rect)
- uid: SharpSDL3.Sdl.RenderRect(System.IntPtr,SharpSDL3.Structs.FRect@)
  commentId: M:SharpSDL3.Sdl.RenderRect(System.IntPtr,SharpSDL3.Structs.FRect@)
  id: RenderRect(System.IntPtr,SharpSDL3.Structs.FRect@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RenderRect(nint, ref FRect)
  nameWithType: Sdl.RenderRect(nint, ref FRect)
  fullName: SharpSDL3.Sdl.RenderRect(nint, ref SharpSDL3.Structs.FRect)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RenderRect
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 1608
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Draw a rectangle on the current rendering target at subpixel precision.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.RenderRects(System.IntPtr%2cSystem.Span%7bSharpSDL3.Structs.FRect%7d)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool RenderRect(nint renderer, ref FRect rect)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the renderer which should draw a rectangle.
    - id: rect
      type: SharpSDL3.Structs.FRect
      description: a pointer to the destination rectangle, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to outline the entire rendering target.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function RenderRect(renderer As IntPtr, rect As FRect) As Boolean
  overload: SharpSDL3.Sdl.RenderRect*
  nameWithType.vb: Sdl.RenderRect(IntPtr, FRect)
  fullName.vb: SharpSDL3.Sdl.RenderRect(System.IntPtr, SharpSDL3.Structs.FRect)
  name.vb: RenderRect(IntPtr, FRect)
- uid: SharpSDL3.Sdl.RenderRects(System.IntPtr,System.Span{SharpSDL3.Structs.FRect})
  commentId: M:SharpSDL3.Sdl.RenderRects(System.IntPtr,System.Span{SharpSDL3.Structs.FRect})
  id: RenderRects(System.IntPtr,System.Span{SharpSDL3.Structs.FRect})
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RenderRects(nint, Span<FRect>)
  nameWithType: Sdl.RenderRects(nint, Span<FRect>)
  fullName: SharpSDL3.Sdl.RenderRects(nint, System.Span<SharpSDL3.Structs.FRect>)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RenderRects
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 1631
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Draw some number of rectangles on the current rendering target at subpixel precision.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.RenderRect(System.IntPtr%2cSharpSDL3.Structs.FRect%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool RenderRects(nint renderer, Span<FRect> rects)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the renderer which should draw multiple rectangles.
    - id: rects
      type: System.Span{SharpSDL3.Structs.FRect}
      description: a pointer to an array of destination rectangles.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function RenderRects(renderer As IntPtr, rects As Span(Of FRect)) As Boolean
  overload: SharpSDL3.Sdl.RenderRects*
  nameWithType.vb: Sdl.RenderRects(IntPtr, Span(Of FRect))
  fullName.vb: SharpSDL3.Sdl.RenderRects(System.IntPtr, System.Span(Of SharpSDL3.Structs.FRect))
  name.vb: RenderRects(IntPtr, Span(Of FRect))
- uid: SharpSDL3.Sdl.RenderRects(System.IntPtr,SharpSDL3.Structs.FRect[])
  commentId: M:SharpSDL3.Sdl.RenderRects(System.IntPtr,SharpSDL3.Structs.FRect[])
  id: RenderRects(System.IntPtr,SharpSDL3.Structs.FRect[])
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RenderRects(nint, FRect[])
  nameWithType: Sdl.RenderRects(nint, FRect[])
  fullName: SharpSDL3.Sdl.RenderRects(nint, SharpSDL3.Structs.FRect[])
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RenderRects
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 1654
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Draw some number of rectangles on the current rendering target at subpixel precision.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.RenderRect(System.IntPtr%2cSharpSDL3.Structs.FRect%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool RenderRects(nint renderer, FRect[] rects)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the renderer which should draw multiple rectangles.
    - id: rects
      type: SharpSDL3.Structs.FRect[]
      description: a pointer to an array of destination rectangles.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function RenderRects(renderer As IntPtr, rects As FRect()) As Boolean
  overload: SharpSDL3.Sdl.RenderRects*
  nameWithType.vb: Sdl.RenderRects(IntPtr, FRect())
  fullName.vb: SharpSDL3.Sdl.RenderRects(System.IntPtr, SharpSDL3.Structs.FRect())
  name.vb: RenderRects(IntPtr, FRect())
- uid: SharpSDL3.Sdl.RenderTexture(System.IntPtr,System.IntPtr,SharpSDL3.Structs.FRect@,SharpSDL3.Structs.FRect@)
  commentId: M:SharpSDL3.Sdl.RenderTexture(System.IntPtr,System.IntPtr,SharpSDL3.Structs.FRect@,SharpSDL3.Structs.FRect@)
  id: RenderTexture(System.IntPtr,System.IntPtr,SharpSDL3.Structs.FRect@,SharpSDL3.Structs.FRect@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RenderTexture(nint, nint, ref FRect, ref FRect)
  nameWithType: Sdl.RenderTexture(nint, nint, ref FRect, ref FRect)
  fullName: SharpSDL3.Sdl.RenderTexture(nint, nint, ref SharpSDL3.Structs.FRect, ref SharpSDL3.Structs.FRect)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RenderTexture
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 1675
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Copy a portion of the texture to the current rendering target at subpixel precision.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.RenderTextureRotated(System.IntPtr%2cSystem.IntPtr%2cSharpSDL3.Structs.FRect%40%2cSharpSDL3.Structs.FRect%40%2cSystem.Double%2cSharpSDL3.Structs.FPoint%40%2cSharpSDL3.Enums.FlipMode)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.RenderTextureTiled(System.IntPtr%2cSystem.IntPtr%2cSharpSDL3.Structs.FRect%40%2cSystem.Single%2cSharpSDL3.Structs.FRect%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool RenderTexture(nint renderer, nint texture, ref FRect srcrect, ref FRect dstrect)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the renderer which should copy parts of a texture.
    - id: texture
      type: System.IntPtr
      description: the source texture.
    - id: srcrect
      type: SharpSDL3.Structs.FRect
      description: a pointer to the source rectangle, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for the entire texture.
    - id: dstrect
      type: SharpSDL3.Structs.FRect
      description: a pointer to the destination rectangle, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for the entire rendering target.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function RenderTexture(renderer As IntPtr, texture As IntPtr, srcrect As FRect, dstrect As FRect) As Boolean
  overload: SharpSDL3.Sdl.RenderTexture*
  nameWithType.vb: Sdl.RenderTexture(IntPtr, IntPtr, FRect, FRect)
  fullName.vb: SharpSDL3.Sdl.RenderTexture(System.IntPtr, System.IntPtr, SharpSDL3.Structs.FRect, SharpSDL3.Structs.FRect)
  name.vb: RenderTexture(IntPtr, IntPtr, FRect, FRect)
- uid: SharpSDL3.Sdl.RenderTexture(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.RenderTexture(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  id: RenderTexture(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RenderTexture(nint, nint, nint, nint)
  nameWithType: Sdl.RenderTexture(nint, nint, nint, nint)
  fullName: SharpSDL3.Sdl.RenderTexture(nint, nint, nint, nint)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RenderTexture
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 1700
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Copy a portion of the texture to the current rendering target at subpixel precision.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.RenderTextureRotated(System.IntPtr%2cSystem.IntPtr%2cSharpSDL3.Structs.FRect%40%2cSharpSDL3.Structs.FRect%40%2cSystem.Double%2cSharpSDL3.Structs.FPoint%40%2cSharpSDL3.Enums.FlipMode)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.RenderTextureTiled(System.IntPtr%2cSystem.IntPtr%2cSharpSDL3.Structs.FRect%40%2cSystem.Single%2cSharpSDL3.Structs.FRect%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool RenderTexture(nint renderer, nint texture, nint srcrect, nint destrect)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the renderer which should copy parts of a texture.
    - id: texture
      type: System.IntPtr
      description: the source texture.
    - id: srcrect
      type: System.IntPtr
      description: a pointer to the source rectangle, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for the entire texture.
    - id: destrect
      type: System.IntPtr
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function RenderTexture(renderer As IntPtr, texture As IntPtr, srcrect As IntPtr, destrect As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.RenderTexture*
  nameWithType.vb: Sdl.RenderTexture(IntPtr, IntPtr, IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.RenderTexture(System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr)
  name.vb: RenderTexture(IntPtr, IntPtr, IntPtr, IntPtr)
- uid: SharpSDL3.Sdl.RenderTexture(System.IntPtr,System.IntPtr,SharpSDL3.Structs.FRect@,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.RenderTexture(System.IntPtr,System.IntPtr,SharpSDL3.Structs.FRect@,System.IntPtr)
  id: RenderTexture(System.IntPtr,System.IntPtr,SharpSDL3.Structs.FRect@,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RenderTexture(nint, nint, ref FRect, nint)
  nameWithType: Sdl.RenderTexture(nint, nint, ref FRect, nint)
  fullName: SharpSDL3.Sdl.RenderTexture(nint, nint, ref SharpSDL3.Structs.FRect, nint)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RenderTexture
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 1731
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Copy a portion of the texture to the current rendering target at subpixel precision.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.RenderTextureRotated(System.IntPtr%2cSystem.IntPtr%2cSharpSDL3.Structs.FRect%40%2cSharpSDL3.Structs.FRect%40%2cSystem.Double%2cSharpSDL3.Structs.FPoint%40%2cSharpSDL3.Enums.FlipMode)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.RenderTextureTiled(System.IntPtr%2cSystem.IntPtr%2cSharpSDL3.Structs.FRect%40%2cSystem.Single%2cSharpSDL3.Structs.FRect%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool RenderTexture(nint renderer, nint texture, ref FRect srcrect, nint destrect)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the renderer which should copy parts of a texture.
    - id: texture
      type: System.IntPtr
      description: the source texture.
    - id: srcrect
      type: SharpSDL3.Structs.FRect
      description: a pointer to the source rectangle, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for the entire texture.
    - id: destrect
      type: System.IntPtr
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function RenderTexture(renderer As IntPtr, texture As IntPtr, srcrect As FRect, destrect As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.RenderTexture*
  nameWithType.vb: Sdl.RenderTexture(IntPtr, IntPtr, FRect, IntPtr)
  fullName.vb: SharpSDL3.Sdl.RenderTexture(System.IntPtr, System.IntPtr, SharpSDL3.Structs.FRect, System.IntPtr)
  name.vb: RenderTexture(IntPtr, IntPtr, FRect, IntPtr)
- uid: SharpSDL3.Sdl.RenderTexture(System.IntPtr,System.IntPtr,System.IntPtr,SharpSDL3.Structs.FRect@)
  commentId: M:SharpSDL3.Sdl.RenderTexture(System.IntPtr,System.IntPtr,System.IntPtr,SharpSDL3.Structs.FRect@)
  id: RenderTexture(System.IntPtr,System.IntPtr,System.IntPtr,SharpSDL3.Structs.FRect@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RenderTexture(nint, nint, nint, ref FRect)
  nameWithType: Sdl.RenderTexture(nint, nint, nint, ref FRect)
  fullName: SharpSDL3.Sdl.RenderTexture(nint, nint, nint, ref SharpSDL3.Structs.FRect)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RenderTexture
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 1757
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Copy a portion of the texture to the current rendering target at subpixel precision.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.RenderTextureRotated(System.IntPtr%2cSystem.IntPtr%2cSharpSDL3.Structs.FRect%40%2cSharpSDL3.Structs.FRect%40%2cSystem.Double%2cSharpSDL3.Structs.FPoint%40%2cSharpSDL3.Enums.FlipMode)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.RenderTextureTiled(System.IntPtr%2cSystem.IntPtr%2cSharpSDL3.Structs.FRect%40%2cSystem.Single%2cSharpSDL3.Structs.FRect%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool RenderTexture(nint renderer, nint texture, nint srcrect, ref FRect destrect)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the renderer which should copy parts of a texture.
    - id: texture
      type: System.IntPtr
      description: the source texture.
    - id: srcrect
      type: System.IntPtr
      description: a pointer to the source rectangle, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for the entire texture.
    - id: destrect
      type: SharpSDL3.Structs.FRect
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function RenderTexture(renderer As IntPtr, texture As IntPtr, srcrect As IntPtr, destrect As FRect) As Boolean
  overload: SharpSDL3.Sdl.RenderTexture*
  nameWithType.vb: Sdl.RenderTexture(IntPtr, IntPtr, IntPtr, FRect)
  fullName.vb: SharpSDL3.Sdl.RenderTexture(System.IntPtr, System.IntPtr, System.IntPtr, SharpSDL3.Structs.FRect)
  name.vb: RenderTexture(IntPtr, IntPtr, IntPtr, FRect)
- uid: SharpSDL3.Sdl.RenderTexture9Grid(System.IntPtr,System.IntPtr,SharpSDL3.Structs.FRect@,System.Single,System.Single,System.Single,System.Single,System.Single,SharpSDL3.Structs.FRect@)
  commentId: M:SharpSDL3.Sdl.RenderTexture9Grid(System.IntPtr,System.IntPtr,SharpSDL3.Structs.FRect@,System.Single,System.Single,System.Single,System.Single,System.Single,SharpSDL3.Structs.FRect@)
  id: RenderTexture9Grid(System.IntPtr,System.IntPtr,SharpSDL3.Structs.FRect@,System.Single,System.Single,System.Single,System.Single,System.Single,SharpSDL3.Structs.FRect@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RenderTexture9Grid(nint, nint, ref FRect, float, float, float, float, float, ref FRect)
  nameWithType: Sdl.RenderTexture9Grid(nint, nint, ref FRect, float, float, float, float, float, ref FRect)
  fullName: SharpSDL3.Sdl.RenderTexture9Grid(nint, nint, ref SharpSDL3.Structs.FRect, float, float, float, float, float, ref SharpSDL3.Structs.FRect)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RenderTexture9Grid
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 1792
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Perform a scaled copy using the 9-grid algorithm to the current rendering target at subpixel precision.
  remarks: >-
    The pixels in the texture are split into a 3x3 grid, using the different

    corner sizes for each corner, and the sides and center making up the

    remaining pixels. The corners are then scaled using scale and fit into

    the corners of the destination rectangle. The sides and center are then

    stretched into place to cover the remaining destination rectangle.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.RenderTexture(System.IntPtr%2cSystem.IntPtr%2cSharpSDL3.Structs.FRect%40%2cSharpSDL3.Structs.FRect%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool RenderTexture9Grid(nint renderer, nint texture, ref FRect srcrect, float leftWidth, float rightWidth, float topHeight, float bottomHeight, float scale, ref FRect dstrect)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the renderer which should copy parts of a texture.
    - id: texture
      type: System.IntPtr
      description: the source texture.
    - id: srcrect
      type: SharpSDL3.Structs.FRect
      description: the <xref href="SharpSDL3.Structs.Rect" data-throw-if-not-resolved="false"></xref> structure representing the rectangle to be used for the 9-grid, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to use the entire texture.
    - id: leftWidth
      type: System.Single
    - id: rightWidth
      type: System.Single
    - id: topHeight
      type: System.Single
    - id: bottomHeight
      type: System.Single
    - id: scale
      type: System.Single
      description: the scale used to transform the corner of srcrect into the corner of dstrect, or 0.0f for an unscaled copy.
    - id: dstrect
      type: SharpSDL3.Structs.FRect
      description: a pointer to the destination rectangle, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for the entire rendering target.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function RenderTexture9Grid(renderer As IntPtr, texture As IntPtr, srcrect As FRect, leftWidth As Single, rightWidth As Single, topHeight As Single, bottomHeight As Single, scale As Single, dstrect As FRect) As Boolean
  overload: SharpSDL3.Sdl.RenderTexture9Grid*
  nameWithType.vb: Sdl.RenderTexture9Grid(IntPtr, IntPtr, FRect, Single, Single, Single, Single, Single, FRect)
  fullName.vb: SharpSDL3.Sdl.RenderTexture9Grid(System.IntPtr, System.IntPtr, SharpSDL3.Structs.FRect, Single, Single, Single, Single, Single, SharpSDL3.Structs.FRect)
  name.vb: RenderTexture9Grid(IntPtr, IntPtr, FRect, Single, Single, Single, Single, Single, FRect)
- uid: SharpSDL3.Sdl.RenderTextureAffine(System.IntPtr,System.IntPtr,SharpSDL3.Structs.FRect@,SharpSDL3.Structs.FPoint@,SharpSDL3.Structs.FPoint@,SharpSDL3.Structs.FPoint@)
  commentId: M:SharpSDL3.Sdl.RenderTextureAffine(System.IntPtr,System.IntPtr,SharpSDL3.Structs.FRect@,SharpSDL3.Structs.FPoint@,SharpSDL3.Structs.FPoint@,SharpSDL3.Structs.FPoint@)
  id: RenderTextureAffine(System.IntPtr,System.IntPtr,SharpSDL3.Structs.FRect@,SharpSDL3.Structs.FPoint@,SharpSDL3.Structs.FPoint@,SharpSDL3.Structs.FPoint@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RenderTextureAffine(nint, nint, in FRect, in FPoint, in FPoint, in FPoint)
  nameWithType: Sdl.RenderTextureAffine(nint, nint, in FRect, in FPoint, in FPoint, in FPoint)
  fullName: SharpSDL3.Sdl.RenderTextureAffine(nint, nint, in SharpSDL3.Structs.FRect, in SharpSDL3.Structs.FPoint, in SharpSDL3.Structs.FPoint, in SharpSDL3.Structs.FPoint)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RenderTextureAffine
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 1820
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Copy a portion of the source texture to the current rendering target, with affine transform, at subpixel precision.
  remarks: >-
    <p><strong>Thread Safety:</strong> You may only call this function from the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.RenderTexture(System.IntPtr%2cSystem.IntPtr%2cSharpSDL3.Structs.FRect%40%2cSharpSDL3.Structs.FRect%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool RenderTextureAffine(nint renderer, nint texture, in FRect srcrect, in FPoint origin, in FPoint right, in FPoint down)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the renderer which should copy parts of a texture.
    - id: texture
      type: System.IntPtr
      description: the source texture.
    - id: srcrect
      type: SharpSDL3.Structs.FRect
      description: a pointer to the source rectangle, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for the entire texture.
    - id: origin
      type: SharpSDL3.Structs.FPoint
      description: a pointer to a point indicating where the top-left corner of srcrect should be mapped to, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for the rendering target's origin.
    - id: right
      type: SharpSDL3.Structs.FPoint
      description: a pointer to a point indicating where the top-right corner of srcrect should be mapped to, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for the rendering target's top-right corner.
    - id: down
      type: SharpSDL3.Structs.FPoint
      description: a pointer to a point indicating where the bottom-left corner of srcrect should be mapped to, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for the rendering target's bottom-left corner.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function RenderTextureAffine(renderer As IntPtr, texture As IntPtr, srcrect As FRect, origin As FPoint, right As FPoint, down As FPoint) As Boolean
  overload: SharpSDL3.Sdl.RenderTextureAffine*
  nameWithType.vb: Sdl.RenderTextureAffine(IntPtr, IntPtr, FRect, FPoint, FPoint, FPoint)
  fullName.vb: SharpSDL3.Sdl.RenderTextureAffine(System.IntPtr, System.IntPtr, SharpSDL3.Structs.FRect, SharpSDL3.Structs.FPoint, SharpSDL3.Structs.FPoint, SharpSDL3.Structs.FPoint)
  name.vb: RenderTextureAffine(IntPtr, IntPtr, FRect, FPoint, FPoint, FPoint)
- uid: SharpSDL3.Sdl.RenderTextureRotated(System.IntPtr,System.IntPtr,SharpSDL3.Structs.FRect@,SharpSDL3.Structs.FRect@,System.Double,SharpSDL3.Structs.FPoint@,SharpSDL3.Enums.FlipMode)
  commentId: M:SharpSDL3.Sdl.RenderTextureRotated(System.IntPtr,System.IntPtr,SharpSDL3.Structs.FRect@,SharpSDL3.Structs.FRect@,System.Double,SharpSDL3.Structs.FPoint@,SharpSDL3.Enums.FlipMode)
  id: RenderTextureRotated(System.IntPtr,System.IntPtr,SharpSDL3.Structs.FRect@,SharpSDL3.Structs.FRect@,System.Double,SharpSDL3.Structs.FPoint@,SharpSDL3.Enums.FlipMode)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RenderTextureRotated(nint, nint, ref FRect, ref FRect, double, ref FPoint, FlipMode)
  nameWithType: Sdl.RenderTextureRotated(nint, nint, ref FRect, ref FRect, double, ref FPoint, FlipMode)
  fullName: SharpSDL3.Sdl.RenderTextureRotated(nint, nint, ref SharpSDL3.Structs.FRect, ref SharpSDL3.Structs.FRect, double, ref SharpSDL3.Structs.FPoint, SharpSDL3.Enums.FlipMode)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RenderTextureRotated
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 1846
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Copy a portion of the source texture to the current rendering target, with rotation and flipping, at subpixel precision.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.RenderTexture(System.IntPtr%2cSystem.IntPtr%2cSharpSDL3.Structs.FRect%40%2cSharpSDL3.Structs.FRect%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool RenderTextureRotated(nint renderer, nint texture, ref FRect srcrect, ref FRect dstrect, double angle, ref FPoint center, FlipMode flip)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the renderer which should copy parts of a texture.
    - id: texture
      type: System.IntPtr
      description: the source texture.
    - id: srcrect
      type: SharpSDL3.Structs.FRect
      description: a pointer to the source rectangle, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for the entire texture.
    - id: dstrect
      type: SharpSDL3.Structs.FRect
      description: a pointer to the destination rectangle, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for the entire rendering target.
    - id: angle
      type: System.Double
      description: an angle in degrees that indicates the rotation that will be applied to dstrect, rotating it in a clockwise direction.
    - id: center
      type: SharpSDL3.Structs.FPoint
      description: a pointer to a point indicating the point around which dstrect will be rotated (if <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>, rotation will be done around dstrect.w/2, dstrect.h/2).
    - id: flip
      type: SharpSDL3.Enums.FlipMode
      description: an SDL_FlipMode value stating which flipping actions should be performed on the texture.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function RenderTextureRotated(renderer As IntPtr, texture As IntPtr, srcrect As FRect, dstrect As FRect, angle As Double, center As FPoint, flip As FlipMode) As Boolean
  overload: SharpSDL3.Sdl.RenderTextureRotated*
  nameWithType.vb: Sdl.RenderTextureRotated(IntPtr, IntPtr, FRect, FRect, Double, FPoint, FlipMode)
  fullName.vb: SharpSDL3.Sdl.RenderTextureRotated(System.IntPtr, System.IntPtr, SharpSDL3.Structs.FRect, SharpSDL3.Structs.FRect, Double, SharpSDL3.Structs.FPoint, SharpSDL3.Enums.FlipMode)
  name.vb: RenderTextureRotated(IntPtr, IntPtr, FRect, FRect, Double, FPoint, FlipMode)
- uid: SharpSDL3.Sdl.RenderTextureRotated(System.IntPtr,System.IntPtr,System.IntPtr,SharpSDL3.Structs.FRect@,System.Double,SharpSDL3.Structs.FPoint@,SharpSDL3.Enums.FlipMode)
  commentId: M:SharpSDL3.Sdl.RenderTextureRotated(System.IntPtr,System.IntPtr,System.IntPtr,SharpSDL3.Structs.FRect@,System.Double,SharpSDL3.Structs.FPoint@,SharpSDL3.Enums.FlipMode)
  id: RenderTextureRotated(System.IntPtr,System.IntPtr,System.IntPtr,SharpSDL3.Structs.FRect@,System.Double,SharpSDL3.Structs.FPoint@,SharpSDL3.Enums.FlipMode)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RenderTextureRotated(nint, nint, nint, ref FRect, double, ref FPoint, FlipMode)
  nameWithType: Sdl.RenderTextureRotated(nint, nint, nint, ref FRect, double, ref FPoint, FlipMode)
  fullName: SharpSDL3.Sdl.RenderTextureRotated(nint, nint, nint, ref SharpSDL3.Structs.FRect, double, ref SharpSDL3.Structs.FPoint, SharpSDL3.Enums.FlipMode)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RenderTextureRotated
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 1873
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Copy a portion of the source texture to the current rendering target, with rotation and flipping, at subpixel precision.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.RenderTexture(System.IntPtr%2cSystem.IntPtr%2cSharpSDL3.Structs.FRect%40%2cSharpSDL3.Structs.FRect%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool RenderTextureRotated(nint renderer, nint texture, nint srcrect, ref FRect dstrect, double angle, ref FPoint center, FlipMode flip)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the renderer which should copy parts of a texture.
    - id: texture
      type: System.IntPtr
      description: the source texture.
    - id: srcrect
      type: System.IntPtr
      description: a pointer to the source rectangle, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for the entire texture.
    - id: dstrect
      type: SharpSDL3.Structs.FRect
      description: a pointer to the destination rectangle, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for the entire rendering target.
    - id: angle
      type: System.Double
      description: an angle in degrees that indicates the rotation that will be applied to dstrect, rotating it in a clockwise direction.
    - id: center
      type: SharpSDL3.Structs.FPoint
      description: a pointer to a point indicating the point around which dstrect will be rotated (if <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>, rotation will be done around dstrect.w/2, dstrect.h/2).
    - id: flip
      type: SharpSDL3.Enums.FlipMode
      description: an SDL_FlipMode value stating which flipping actions should be performed on the texture.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function RenderTextureRotated(renderer As IntPtr, texture As IntPtr, srcrect As IntPtr, dstrect As FRect, angle As Double, center As FPoint, flip As FlipMode) As Boolean
  overload: SharpSDL3.Sdl.RenderTextureRotated*
  nameWithType.vb: Sdl.RenderTextureRotated(IntPtr, IntPtr, IntPtr, FRect, Double, FPoint, FlipMode)
  fullName.vb: SharpSDL3.Sdl.RenderTextureRotated(System.IntPtr, System.IntPtr, System.IntPtr, SharpSDL3.Structs.FRect, Double, SharpSDL3.Structs.FPoint, SharpSDL3.Enums.FlipMode)
  name.vb: RenderTextureRotated(IntPtr, IntPtr, IntPtr, FRect, Double, FPoint, FlipMode)
- uid: SharpSDL3.Sdl.RenderTextureRotated(System.IntPtr,System.IntPtr,SharpSDL3.Structs.FRect@,System.IntPtr,System.Double,SharpSDL3.Structs.FPoint@,SharpSDL3.Enums.FlipMode)
  commentId: M:SharpSDL3.Sdl.RenderTextureRotated(System.IntPtr,System.IntPtr,SharpSDL3.Structs.FRect@,System.IntPtr,System.Double,SharpSDL3.Structs.FPoint@,SharpSDL3.Enums.FlipMode)
  id: RenderTextureRotated(System.IntPtr,System.IntPtr,SharpSDL3.Structs.FRect@,System.IntPtr,System.Double,SharpSDL3.Structs.FPoint@,SharpSDL3.Enums.FlipMode)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RenderTextureRotated(nint, nint, ref FRect, nint, double, ref FPoint, FlipMode)
  nameWithType: Sdl.RenderTextureRotated(nint, nint, ref FRect, nint, double, ref FPoint, FlipMode)
  fullName: SharpSDL3.Sdl.RenderTextureRotated(nint, nint, ref SharpSDL3.Structs.FRect, nint, double, ref SharpSDL3.Structs.FPoint, SharpSDL3.Enums.FlipMode)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RenderTextureRotated
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 1898
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Copy a portion of the source texture to the current rendering target, with rotation and flipping, at subpixel precision.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.RenderTexture(System.IntPtr%2cSystem.IntPtr%2cSharpSDL3.Structs.FRect%40%2cSharpSDL3.Structs.FRect%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool RenderTextureRotated(nint renderer, nint texture, ref FRect srcrect, nint dstrect, double angle, ref FPoint center, FlipMode flip)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the renderer which should copy parts of a texture.
    - id: texture
      type: System.IntPtr
      description: the source texture.
    - id: srcrect
      type: SharpSDL3.Structs.FRect
      description: a pointer to the source rectangle, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for the entire texture.
    - id: dstrect
      type: System.IntPtr
      description: a pointer to the destination rectangle, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for the entire rendering target.
    - id: angle
      type: System.Double
      description: an angle in degrees that indicates the rotation that will be applied to dstrect, rotating it in a clockwise direction.
    - id: center
      type: SharpSDL3.Structs.FPoint
      description: a pointer to a point indicating the point around which dstrect will be rotated (if <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>, rotation will be done around dstrect.w/2, dstrect.h/2).
    - id: flip
      type: SharpSDL3.Enums.FlipMode
      description: an SDL_FlipMode value stating which flipping actions should be performed on the texture.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function RenderTextureRotated(renderer As IntPtr, texture As IntPtr, srcrect As FRect, dstrect As IntPtr, angle As Double, center As FPoint, flip As FlipMode) As Boolean
  overload: SharpSDL3.Sdl.RenderTextureRotated*
  nameWithType.vb: Sdl.RenderTextureRotated(IntPtr, IntPtr, FRect, IntPtr, Double, FPoint, FlipMode)
  fullName.vb: SharpSDL3.Sdl.RenderTextureRotated(System.IntPtr, System.IntPtr, SharpSDL3.Structs.FRect, System.IntPtr, Double, SharpSDL3.Structs.FPoint, SharpSDL3.Enums.FlipMode)
  name.vb: RenderTextureRotated(IntPtr, IntPtr, FRect, IntPtr, Double, FPoint, FlipMode)
- uid: SharpSDL3.Sdl.RenderTextureRotated(System.IntPtr,System.IntPtr,System.IntPtr,SharpSDL3.Structs.FRect@,System.Double,System.IntPtr,SharpSDL3.Enums.FlipMode)
  commentId: M:SharpSDL3.Sdl.RenderTextureRotated(System.IntPtr,System.IntPtr,System.IntPtr,SharpSDL3.Structs.FRect@,System.Double,System.IntPtr,SharpSDL3.Enums.FlipMode)
  id: RenderTextureRotated(System.IntPtr,System.IntPtr,System.IntPtr,SharpSDL3.Structs.FRect@,System.Double,System.IntPtr,SharpSDL3.Enums.FlipMode)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RenderTextureRotated(nint, nint, nint, ref FRect, double, nint, FlipMode)
  nameWithType: Sdl.RenderTextureRotated(nint, nint, nint, ref FRect, double, nint, FlipMode)
  fullName: SharpSDL3.Sdl.RenderTextureRotated(nint, nint, nint, ref SharpSDL3.Structs.FRect, double, nint, SharpSDL3.Enums.FlipMode)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RenderTextureRotated
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 1923
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Copy a portion of the source texture to the current rendering target, with rotation and flipping, at subpixel precision.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.RenderTexture(System.IntPtr%2cSystem.IntPtr%2cSharpSDL3.Structs.FRect%40%2cSharpSDL3.Structs.FRect%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool RenderTextureRotated(nint renderer, nint texture, nint srcrect, ref FRect dstrect, double angle, nint center, FlipMode flip)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the renderer which should copy parts of a texture.
    - id: texture
      type: System.IntPtr
      description: the source texture.
    - id: srcrect
      type: System.IntPtr
      description: a pointer to the source rectangle, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for the entire texture.
    - id: dstrect
      type: SharpSDL3.Structs.FRect
      description: a pointer to the destination rectangle, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for the entire rendering target.
    - id: angle
      type: System.Double
      description: an angle in degrees that indicates the rotation that will be applied to dstrect, rotating it in a clockwise direction.
    - id: center
      type: System.IntPtr
      description: a pointer to a point indicating the point around which dstrect will be rotated (if <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>, rotation will be done around dstrect.w/2, dstrect.h/2).
    - id: flip
      type: SharpSDL3.Enums.FlipMode
      description: an SDL_FlipMode value stating which flipping actions should be performed on the texture.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function RenderTextureRotated(renderer As IntPtr, texture As IntPtr, srcrect As IntPtr, dstrect As FRect, angle As Double, center As IntPtr, flip As FlipMode) As Boolean
  overload: SharpSDL3.Sdl.RenderTextureRotated*
  nameWithType.vb: Sdl.RenderTextureRotated(IntPtr, IntPtr, IntPtr, FRect, Double, IntPtr, FlipMode)
  fullName.vb: SharpSDL3.Sdl.RenderTextureRotated(System.IntPtr, System.IntPtr, System.IntPtr, SharpSDL3.Structs.FRect, Double, System.IntPtr, SharpSDL3.Enums.FlipMode)
  name.vb: RenderTextureRotated(IntPtr, IntPtr, IntPtr, FRect, Double, IntPtr, FlipMode)
- uid: SharpSDL3.Sdl.RenderTextureRotated(System.IntPtr,System.IntPtr,SharpSDL3.Structs.FRect@,System.IntPtr,System.Double,System.IntPtr,SharpSDL3.Enums.FlipMode)
  commentId: M:SharpSDL3.Sdl.RenderTextureRotated(System.IntPtr,System.IntPtr,SharpSDL3.Structs.FRect@,System.IntPtr,System.Double,System.IntPtr,SharpSDL3.Enums.FlipMode)
  id: RenderTextureRotated(System.IntPtr,System.IntPtr,SharpSDL3.Structs.FRect@,System.IntPtr,System.Double,System.IntPtr,SharpSDL3.Enums.FlipMode)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RenderTextureRotated(nint, nint, ref FRect, nint, double, nint, FlipMode)
  nameWithType: Sdl.RenderTextureRotated(nint, nint, ref FRect, nint, double, nint, FlipMode)
  fullName: SharpSDL3.Sdl.RenderTextureRotated(nint, nint, ref SharpSDL3.Structs.FRect, nint, double, nint, SharpSDL3.Enums.FlipMode)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RenderTextureRotated
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 1953
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Copy a portion of the source texture to the current rendering target, with rotation and flipping, at subpixel precision.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.RenderTexture(System.IntPtr%2cSystem.IntPtr%2cSharpSDL3.Structs.FRect%40%2cSharpSDL3.Structs.FRect%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool RenderTextureRotated(nint renderer, nint texture, ref FRect srcrect, nint dstrect, double angle, nint center, FlipMode flip)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the renderer which should copy parts of a texture.
    - id: texture
      type: System.IntPtr
      description: the source texture.
    - id: srcrect
      type: SharpSDL3.Structs.FRect
      description: a pointer to the source rectangle, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for the entire texture.
    - id: dstrect
      type: System.IntPtr
      description: a pointer to the destination rectangle, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for the entire rendering target.
    - id: angle
      type: System.Double
      description: an angle in degrees that indicates the rotation that will be applied to dstrect, rotating it in a clockwise direction.
    - id: center
      type: System.IntPtr
      description: a pointer to a point indicating the point around which dstrect will be rotated (if <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>, rotation will be done around dstrect.w/2, dstrect.h/2).
    - id: flip
      type: SharpSDL3.Enums.FlipMode
      description: an SDL_FlipMode value stating which flipping actions should be performed on the texture.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function RenderTextureRotated(renderer As IntPtr, texture As IntPtr, srcrect As FRect, dstrect As IntPtr, angle As Double, center As IntPtr, flip As FlipMode) As Boolean
  overload: SharpSDL3.Sdl.RenderTextureRotated*
  nameWithType.vb: Sdl.RenderTextureRotated(IntPtr, IntPtr, FRect, IntPtr, Double, IntPtr, FlipMode)
  fullName.vb: SharpSDL3.Sdl.RenderTextureRotated(System.IntPtr, System.IntPtr, SharpSDL3.Structs.FRect, System.IntPtr, Double, System.IntPtr, SharpSDL3.Enums.FlipMode)
  name.vb: RenderTextureRotated(IntPtr, IntPtr, FRect, IntPtr, Double, IntPtr, FlipMode)
- uid: SharpSDL3.Sdl.RenderTextureTiled(System.IntPtr,System.IntPtr,SharpSDL3.Structs.FRect@,System.Single,SharpSDL3.Structs.FRect@)
  commentId: M:SharpSDL3.Sdl.RenderTextureTiled(System.IntPtr,System.IntPtr,SharpSDL3.Structs.FRect@,System.Single,SharpSDL3.Structs.FRect@)
  id: RenderTextureTiled(System.IntPtr,System.IntPtr,SharpSDL3.Structs.FRect@,System.Single,SharpSDL3.Structs.FRect@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RenderTextureTiled(nint, nint, ref FRect, float, ref FRect)
  nameWithType: Sdl.RenderTextureTiled(nint, nint, ref FRect, float, ref FRect)
  fullName: SharpSDL3.Sdl.RenderTextureTiled(nint, nint, ref SharpSDL3.Structs.FRect, float, ref SharpSDL3.Structs.FRect)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RenderTextureTiled
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 1986
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Tile a portion of the texture to the current rendering target at subpixel precision.
  remarks: >-
    The pixels in srcrect will be repeated as many times as needed to

    completely fill dstrect.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.RenderTexture(System.IntPtr%2cSystem.IntPtr%2cSharpSDL3.Structs.FRect%40%2cSharpSDL3.Structs.FRect%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool RenderTextureTiled(nint renderer, nint texture, ref FRect srcrect, float scale, ref FRect dstrect)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the renderer which should copy parts of a texture.
    - id: texture
      type: System.IntPtr
      description: the source texture.
    - id: srcrect
      type: SharpSDL3.Structs.FRect
      description: a pointer to the source rectangle, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for the entire texture.
    - id: scale
      type: System.Single
      description: the scale used to transform srcrect into the destination rectangle, e.g. a 32x32 texture with a scale of 2 would fill 64x64 tiles.
    - id: dstrect
      type: SharpSDL3.Structs.FRect
      description: a pointer to the destination rectangle, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for the entire rendering target.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function RenderTextureTiled(renderer As IntPtr, texture As IntPtr, srcrect As FRect, scale As Single, dstrect As FRect) As Boolean
  overload: SharpSDL3.Sdl.RenderTextureTiled*
  nameWithType.vb: Sdl.RenderTextureTiled(IntPtr, IntPtr, FRect, Single, FRect)
  fullName.vb: SharpSDL3.Sdl.RenderTextureTiled(System.IntPtr, System.IntPtr, SharpSDL3.Structs.FRect, Single, SharpSDL3.Structs.FRect)
  name.vb: RenderTextureTiled(IntPtr, IntPtr, FRect, Single, FRect)
- uid: SharpSDL3.Sdl.RenderViewportSet(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.RenderViewportSet(System.IntPtr)
  id: RenderViewportSet(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RenderViewportSet(nint)
  nameWithType: Sdl.RenderViewportSet(nint)
  fullName: SharpSDL3.Sdl.RenderViewportSet(nint)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RenderViewportSet
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 2011
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Return whether an explicit rectangle was set as the viewport.
  remarks: >-
    This is useful if you're saving and restoring the viewport and want to know

    whether you should restore a specific rectangle or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetRenderViewport(System.IntPtr%2cSharpSDL3.Structs.Rect%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetRenderViewport(System.IntPtr%2cSharpSDL3.Structs.Rect%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool RenderViewportSet(nint renderer)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the rendering context.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the viewport was set to a specific rectangle, or<a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if it was set to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> (the entire target).
    content.vb: Public Shared Function RenderViewportSet(renderer As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.RenderViewportSet*
  nameWithType.vb: Sdl.RenderViewportSet(IntPtr)
  fullName.vb: SharpSDL3.Sdl.RenderViewportSet(System.IntPtr)
  name.vb: RenderViewportSet(IntPtr)
- uid: SharpSDL3.Sdl.SetRenderClipRect(System.IntPtr,SharpSDL3.Structs.Rect@)
  commentId: M:SharpSDL3.Sdl.SetRenderClipRect(System.IntPtr,SharpSDL3.Structs.Rect@)
  id: SetRenderClipRect(System.IntPtr,SharpSDL3.Structs.Rect@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetRenderClipRect(nint, ref Rect)
  nameWithType: Sdl.SetRenderClipRect(nint, ref Rect)
  fullName: SharpSDL3.Sdl.SetRenderClipRect(nint, ref SharpSDL3.Structs.Rect)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetRenderClipRect
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 2036
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set the clip rectangle for rendering on the specified target.
  remarks: >-
    Each render target has its own clip rectangle. This function sets the

    cliprect for the current render target.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetRenderClipRect(System.IntPtr%2cSharpSDL3.Structs.Rect%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.RenderClipEnabled(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetRenderClipRect(nint renderer, ref Rect rect)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the rendering context.
    - id: rect
      type: SharpSDL3.Structs.Rect
      description: an <xref href="SharpSDL3.Structs.Rect" data-throw-if-not-resolved="false"></xref> structure representing the clip area, relative to the viewport, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to disable clipping.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetRenderClipRect(renderer As IntPtr, rect As Rect) As Boolean
  overload: SharpSDL3.Sdl.SetRenderClipRect*
  nameWithType.vb: Sdl.SetRenderClipRect(IntPtr, Rect)
  fullName.vb: SharpSDL3.Sdl.SetRenderClipRect(System.IntPtr, SharpSDL3.Structs.Rect)
  name.vb: SetRenderClipRect(IntPtr, Rect)
- uid: SharpSDL3.Sdl.SetRenderColorScale(System.IntPtr,System.Single)
  commentId: M:SharpSDL3.Sdl.SetRenderColorScale(System.IntPtr,System.Single)
  id: SetRenderColorScale(System.IntPtr,System.Single)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetRenderColorScale(nint, float)
  nameWithType: Sdl.SetRenderColorScale(nint, float)
  fullName: SharpSDL3.Sdl.SetRenderColorScale(nint, float)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetRenderColorScale
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 2062
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set the color scale used for render operations.
  remarks: >-
    The color scale is an additional scale multiplied into the pixel color

    value while rendering. This can be used to adjust the brightness of colors

    during HDR rendering, or changing HDR video brightness when playing on an

    SDR display.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetRenderColorScale(System.IntPtr%2cSystem.Single%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetRenderColorScale(nint renderer, float scale)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the rendering context.
    - id: scale
      type: System.Single
      description: the color scale value.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetRenderColorScale(renderer As IntPtr, scale As Single) As Boolean
  overload: SharpSDL3.Sdl.SetRenderColorScale*
  nameWithType.vb: Sdl.SetRenderColorScale(IntPtr, Single)
  fullName.vb: SharpSDL3.Sdl.SetRenderColorScale(System.IntPtr, Single)
  name.vb: SetRenderColorScale(IntPtr, Single)
- uid: SharpSDL3.Sdl.SetRenderDrawBlendMode(System.IntPtr,System.UInt32)
  commentId: M:SharpSDL3.Sdl.SetRenderDrawBlendMode(System.IntPtr,System.UInt32)
  id: SetRenderDrawBlendMode(System.IntPtr,System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetRenderDrawBlendMode(nint, uint)
  nameWithType: Sdl.SetRenderDrawBlendMode(nint, uint)
  fullName: SharpSDL3.Sdl.SetRenderDrawBlendMode(nint, uint)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetRenderDrawBlendMode
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 2085
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set the blend mode used for drawing operations (Fill and Line).
  remarks: >-
    If the blend mode is not supported, the closest supported mode is chosen.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetRenderDrawBlendMode(System.IntPtr%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetRenderDrawBlendMode(nint renderer, uint blendMode)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the rendering context.
    - id: blendMode
      type: System.UInt32
      description: the <xref href="SharpSDL3.Enums.BlendMode" data-throw-if-not-resolved="false"></xref> to use for blending.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetRenderDrawBlendMode(renderer As IntPtr, blendMode As UInteger) As Boolean
  overload: SharpSDL3.Sdl.SetRenderDrawBlendMode*
  nameWithType.vb: Sdl.SetRenderDrawBlendMode(IntPtr, UInteger)
  fullName.vb: SharpSDL3.Sdl.SetRenderDrawBlendMode(System.IntPtr, UInteger)
  name.vb: SetRenderDrawBlendMode(IntPtr, UInteger)
- uid: SharpSDL3.Sdl.SetRenderDrawBlendMode(System.IntPtr,SharpSDL3.Enums.BlendMode)
  commentId: M:SharpSDL3.Sdl.SetRenderDrawBlendMode(System.IntPtr,SharpSDL3.Enums.BlendMode)
  id: SetRenderDrawBlendMode(System.IntPtr,SharpSDL3.Enums.BlendMode)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetRenderDrawBlendMode(nint, BlendMode)
  nameWithType: Sdl.SetRenderDrawBlendMode(nint, BlendMode)
  fullName: SharpSDL3.Sdl.SetRenderDrawBlendMode(nint, SharpSDL3.Enums.BlendMode)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetRenderDrawBlendMode
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 2108
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set the blend mode used for drawing operations (Fill and Line).
  remarks: >-
    If the blend mode is not supported, the closest supported mode is chosen.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetRenderDrawBlendMode(System.IntPtr%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetRenderDrawBlendMode(nint renderer, BlendMode mode)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the rendering context.
    - id: mode
      type: SharpSDL3.Enums.BlendMode
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetRenderDrawBlendMode(renderer As IntPtr, mode As BlendMode) As Boolean
  overload: SharpSDL3.Sdl.SetRenderDrawBlendMode*
  nameWithType.vb: Sdl.SetRenderDrawBlendMode(IntPtr, BlendMode)
  fullName.vb: SharpSDL3.Sdl.SetRenderDrawBlendMode(System.IntPtr, SharpSDL3.Enums.BlendMode)
  name.vb: SetRenderDrawBlendMode(IntPtr, BlendMode)
- uid: SharpSDL3.Sdl.SetRenderDrawColor(System.IntPtr,System.Byte,System.Byte,System.Byte,System.Byte)
  commentId: M:SharpSDL3.Sdl.SetRenderDrawColor(System.IntPtr,System.Byte,System.Byte,System.Byte,System.Byte)
  id: SetRenderDrawColor(System.IntPtr,System.Byte,System.Byte,System.Byte,System.Byte)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetRenderDrawColor(nint, byte, byte, byte, byte)
  nameWithType: Sdl.SetRenderDrawColor(nint, byte, byte, byte, byte)
  fullName: SharpSDL3.Sdl.SetRenderDrawColor(nint, byte, byte, byte, byte)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetRenderDrawColor
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 2136
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set the color used for drawing operations.
  remarks: >-
    Set the color for drawing or filling rectangles, lines, and points, and for

    SDL_RenderClear().

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetRenderDrawColor(System.IntPtr%2cSystem.Byte%40%2cSystem.Byte%40%2cSystem.Byte%40%2cSystem.Byte%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetRenderDrawColorFloat(System.IntPtr%2cSystem.Single%2cSystem.Single%2cSystem.Single%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetRenderDrawColor(nint renderer, byte r, byte g, byte b, byte a)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the rendering context.
    - id: r
      type: System.Byte
      description: the red value used to draw on the rendering target.
    - id: g
      type: System.Byte
      description: the green value used to draw on the rendering target.
    - id: b
      type: System.Byte
      description: the blue value used to draw on the rendering target.
    - id: a
      type: System.Byte
      description: the alpha value used to draw on the rendering target; usually SDL_ALPHA_OPAQUE (255). Use SDL_SetRenderDrawBlendMode to specify how the alpha channel is used.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetRenderDrawColor(renderer As IntPtr, r As Byte, g As Byte, b As Byte, a As Byte) As Boolean
  overload: SharpSDL3.Sdl.SetRenderDrawColor*
  nameWithType.vb: Sdl.SetRenderDrawColor(IntPtr, Byte, Byte, Byte, Byte)
  fullName.vb: SharpSDL3.Sdl.SetRenderDrawColor(System.IntPtr, Byte, Byte, Byte, Byte)
  name.vb: SetRenderDrawColor(IntPtr, Byte, Byte, Byte, Byte)
- uid: SharpSDL3.Sdl.SetRenderDrawColor(System.IntPtr,SharpSDL3.Structs.Color)
  commentId: M:SharpSDL3.Sdl.SetRenderDrawColor(System.IntPtr,SharpSDL3.Structs.Color)
  id: SetRenderDrawColor(System.IntPtr,SharpSDL3.Structs.Color)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetRenderDrawColor(nint, Color)
  nameWithType: Sdl.SetRenderDrawColor(nint, Color)
  fullName: SharpSDL3.Sdl.SetRenderDrawColor(nint, SharpSDL3.Structs.Color)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetRenderDrawColor
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 2164
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set the color used for drawing operations.
  remarks: >-
    Set the color for drawing or filling rectangles, lines, and points, and for

    SDL_RenderClear().

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetRenderDrawColor(System.IntPtr%2cSystem.Byte%40%2cSystem.Byte%40%2cSystem.Byte%40%2cSystem.Byte%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetRenderDrawColorFloat(System.IntPtr%2cSystem.Single%2cSystem.Single%2cSystem.Single%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetRenderDrawColor(nint renderer, Color color)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the rendering context.
    - id: color
      type: SharpSDL3.Structs.Color
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetRenderDrawColor(renderer As IntPtr, color As Color) As Boolean
  overload: SharpSDL3.Sdl.SetRenderDrawColor*
  nameWithType.vb: Sdl.SetRenderDrawColor(IntPtr, Color)
  fullName.vb: SharpSDL3.Sdl.SetRenderDrawColor(System.IntPtr, SharpSDL3.Structs.Color)
  name.vb: SetRenderDrawColor(IntPtr, Color)
- uid: SharpSDL3.Sdl.SetRenderDrawColorFloat(System.IntPtr,System.Single,System.Single,System.Single,System.Single)
  commentId: M:SharpSDL3.Sdl.SetRenderDrawColorFloat(System.IntPtr,System.Single,System.Single,System.Single,System.Single)
  id: SetRenderDrawColorFloat(System.IntPtr,System.Single,System.Single,System.Single,System.Single)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetRenderDrawColorFloat(nint, float, float, float, float)
  nameWithType: Sdl.SetRenderDrawColorFloat(nint, float, float, float, float)
  fullName: SharpSDL3.Sdl.SetRenderDrawColorFloat(nint, float, float, float, float)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetRenderDrawColorFloat
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 2188
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set the color used for drawing operations (Rect, Line and Clear).
  remarks: >-
    Set the color for drawing or filling rectangles, lines, and points, and for

    SDL_RenderClear().

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetRenderDrawColorFloat(System.IntPtr%2cSystem.Single%40%2cSystem.Single%40%2cSystem.Single%40%2cSystem.Single%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetRenderDrawColor(System.IntPtr%2cSystem.Byte%2cSystem.Byte%2cSystem.Byte%2cSystem.Byte)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetRenderDrawColorFloat(nint renderer, float r, float g, float b, float a)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the rendering context.
    - id: r
      type: System.Single
      description: the red value used to draw on the rendering target.
    - id: g
      type: System.Single
      description: the green value used to draw on the rendering target.
    - id: b
      type: System.Single
      description: the blue value used to draw on the rendering target.
    - id: a
      type: System.Single
      description: the alpha value used to draw on the rendering target. Use SDL_SetRenderDrawBlendMode to specify how the alpha channel is used.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetRenderDrawColorFloat(renderer As IntPtr, r As Single, g As Single, b As Single, a As Single) As Boolean
  overload: SharpSDL3.Sdl.SetRenderDrawColorFloat*
  nameWithType.vb: Sdl.SetRenderDrawColorFloat(IntPtr, Single, Single, Single, Single)
  fullName.vb: SharpSDL3.Sdl.SetRenderDrawColorFloat(System.IntPtr, Single, Single, Single, Single)
  name.vb: SetRenderDrawColorFloat(IntPtr, Single, Single, Single, Single)
- uid: SharpSDL3.Sdl.SetRenderDrawColorFloat(System.IntPtr,SharpSDL3.Structs.FColor)
  commentId: M:SharpSDL3.Sdl.SetRenderDrawColorFloat(System.IntPtr,SharpSDL3.Structs.FColor)
  id: SetRenderDrawColorFloat(System.IntPtr,SharpSDL3.Structs.FColor)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetRenderDrawColorFloat(nint, FColor)
  nameWithType: Sdl.SetRenderDrawColorFloat(nint, FColor)
  fullName: SharpSDL3.Sdl.SetRenderDrawColorFloat(nint, SharpSDL3.Structs.FColor)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetRenderDrawColorFloat
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 2216
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set the color used for drawing operations (Rect, Line and Clear).
  remarks: >-
    Set the color for drawing or filling rectangles, lines, and points, and for

    SDL_RenderClear().

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetRenderDrawColorFloat(System.IntPtr%2cSystem.Single%40%2cSystem.Single%40%2cSystem.Single%40%2cSystem.Single%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetRenderDrawColor(System.IntPtr%2cSystem.Byte%2cSystem.Byte%2cSystem.Byte%2cSystem.Byte)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetRenderDrawColorFloat(nint renderer, FColor color)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the rendering context.
    - id: color
      type: SharpSDL3.Structs.FColor
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetRenderDrawColorFloat(renderer As IntPtr, color As FColor) As Boolean
  overload: SharpSDL3.Sdl.SetRenderDrawColorFloat*
  nameWithType.vb: Sdl.SetRenderDrawColorFloat(IntPtr, FColor)
  fullName.vb: SharpSDL3.Sdl.SetRenderDrawColorFloat(System.IntPtr, SharpSDL3.Structs.FColor)
  name.vb: SetRenderDrawColorFloat(IntPtr, FColor)
- uid: SharpSDL3.Sdl.SetRenderLogicalPresentation(System.IntPtr,System.Int32,System.Int32,SharpSDL3.Enums.RendererLogicalPresentation)
  commentId: M:SharpSDL3.Sdl.SetRenderLogicalPresentation(System.IntPtr,System.Int32,System.Int32,SharpSDL3.Enums.RendererLogicalPresentation)
  id: SetRenderLogicalPresentation(System.IntPtr,System.Int32,System.Int32,SharpSDL3.Enums.RendererLogicalPresentation)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetRenderLogicalPresentation(nint, int, int, RendererLogicalPresentation)
  nameWithType: Sdl.SetRenderLogicalPresentation(nint, int, int, RendererLogicalPresentation)
  fullName: SharpSDL3.Sdl.SetRenderLogicalPresentation(nint, int, int, SharpSDL3.Enums.RendererLogicalPresentation)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetRenderLogicalPresentation
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 2241
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set a device-independent resolution and presentation mode for rendering.
  remarks: >-
    This function sets the width and height of the logical rendering output.

    The renderer will act as if the current render target is always the

    requested dimensions, scaling to the actual resolution as necessary.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.ConvertEventToRenderCoordinates(System.IntPtr%2cSharpSDL3.Structs.Event%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetRenderLogicalPresentation(System.IntPtr%2cSystem.Int32%40%2cSystem.Int32%40%2cSharpSDL3.Enums.RendererLogicalPresentation%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetRenderLogicalPresentationRect(System.IntPtr%2cSharpSDL3.Structs.FRect%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetRenderLogicalPresentation(nint renderer, int w, int h, RendererLogicalPresentation mode)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the rendering context.
    - id: w
      type: System.Int32
      description: the width of the logical resolution.
    - id: h
      type: System.Int32
      description: the height of the logical resolution.
    - id: mode
      type: SharpSDL3.Enums.RendererLogicalPresentation
      description: the presentation mode used.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetRenderLogicalPresentation(renderer As IntPtr, w As Integer, h As Integer, mode As RendererLogicalPresentation) As Boolean
  overload: SharpSDL3.Sdl.SetRenderLogicalPresentation*
  nameWithType.vb: Sdl.SetRenderLogicalPresentation(IntPtr, Integer, Integer, RendererLogicalPresentation)
  fullName.vb: SharpSDL3.Sdl.SetRenderLogicalPresentation(System.IntPtr, Integer, Integer, SharpSDL3.Enums.RendererLogicalPresentation)
  name.vb: SetRenderLogicalPresentation(IntPtr, Integer, Integer, RendererLogicalPresentation)
- uid: SharpSDL3.Sdl.SetRenderScale(System.IntPtr,System.Single,System.Single)
  commentId: M:SharpSDL3.Sdl.SetRenderScale(System.IntPtr,System.Single,System.Single)
  id: SetRenderScale(System.IntPtr,System.Single,System.Single)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetRenderScale(nint, float, float)
  nameWithType: Sdl.SetRenderScale(nint, float, float)
  fullName: SharpSDL3.Sdl.SetRenderScale(nint, float, float)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetRenderScale
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 2268
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set the drawing scale for rendering on the current target.
  remarks: >-
    The drawing coordinates are scaled by the x/y scaling factors before they

    are used by the renderer. This allows resolution independent drawing with a

    single coordinate system.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetRenderScale(System.IntPtr%2cSystem.Single%40%2cSystem.Single%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetRenderScale(nint renderer, float scaleX, float scaleY)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the rendering context.
    - id: scaleX
      type: System.Single
      description: the horizontal scaling factor.
    - id: scaleY
      type: System.Single
      description: the vertical scaling factor.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetRenderScale(renderer As IntPtr, scaleX As Single, scaleY As Single) As Boolean
  overload: SharpSDL3.Sdl.SetRenderScale*
  nameWithType.vb: Sdl.SetRenderScale(IntPtr, Single, Single)
  fullName.vb: SharpSDL3.Sdl.SetRenderScale(System.IntPtr, Single, Single)
  name.vb: SetRenderScale(IntPtr, Single, Single)
- uid: SharpSDL3.Sdl.SetRenderTarget(System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.SetRenderTarget(System.IntPtr,System.IntPtr)
  id: SetRenderTarget(System.IntPtr,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetRenderTarget(nint, nint)
  nameWithType: Sdl.SetRenderTarget(nint, nint)
  fullName: SharpSDL3.Sdl.SetRenderTarget(nint, nint)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetRenderTarget
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 2293
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set a texture as the current rendering target.
  remarks: >-
    The default render target is the window for which the renderer was created.

    To stop rendering to a texture and render to the window again, call this

    function with a <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> texture.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetRenderTarget(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static SdlBool SetRenderTarget(nint renderer, nint texture)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the rendering context.
    - id: texture
      type: System.IntPtr
      description: the targeted texture, which must be created with the SDL_TEXTUREACCESS_TARGET flag, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to render to the window instead of a texture.
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetRenderTarget(renderer As IntPtr, texture As IntPtr) As SdlBool
  overload: SharpSDL3.Sdl.SetRenderTarget*
  nameWithType.vb: Sdl.SetRenderTarget(IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.SetRenderTarget(System.IntPtr, System.IntPtr)
  name.vb: SetRenderTarget(IntPtr, IntPtr)
- uid: SharpSDL3.Sdl.SetRenderViewport(System.IntPtr,SharpSDL3.Structs.Rect@)
  commentId: M:SharpSDL3.Sdl.SetRenderViewport(System.IntPtr,SharpSDL3.Structs.Rect@)
  id: SetRenderViewport(System.IntPtr,SharpSDL3.Structs.Rect@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetRenderViewport(nint, ref Rect)
  nameWithType: Sdl.SetRenderViewport(nint, ref Rect)
  fullName: SharpSDL3.Sdl.SetRenderViewport(nint, ref SharpSDL3.Structs.Rect)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetRenderViewport
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 2326
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set the drawing area for rendering on the current target.
  remarks: >-
    Drawing will clip to this area (separately from any clipping done with

    SDL_SetRenderClipRect), and the top left of the

    area will become coordinate (0, 0) for future drawing commands.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetRenderViewport(System.IntPtr%2cSharpSDL3.Structs.Rect%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.RenderViewportSet(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetRenderViewport(nint renderer, ref Rect rect)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the rendering context.
    - id: rect
      type: SharpSDL3.Structs.Rect
      description: the <xref href="SharpSDL3.Structs.Rect" data-throw-if-not-resolved="false"></xref> structure representing the drawing area, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to set the viewport to the entire target.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetRenderViewport(renderer As IntPtr, rect As Rect) As Boolean
  overload: SharpSDL3.Sdl.SetRenderViewport*
  nameWithType.vb: Sdl.SetRenderViewport(IntPtr, Rect)
  fullName.vb: SharpSDL3.Sdl.SetRenderViewport(System.IntPtr, SharpSDL3.Structs.Rect)
  name.vb: SetRenderViewport(IntPtr, Rect)
- uid: SharpSDL3.Sdl.SetRenderVSync(System.IntPtr,System.Int32)
  commentId: M:SharpSDL3.Sdl.SetRenderVSync(System.IntPtr,System.Int32)
  id: SetRenderVSync(System.IntPtr,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetRenderVSync(nint, int)
  nameWithType: Sdl.SetRenderVSync(nint, int)
  fullName: SharpSDL3.Sdl.SetRenderVSync(nint, int)
  type: Method
  source:
    remote:
      path: SDL3/Render.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetRenderVSync
    path: ../../repos/SDL3-CS/SDL3/Render.cs
    startLine: 2350
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Toggle VSync of the given renderer.
  remarks: >-
    When a renderer is created, vsync defaults to

    SDL_RENDERER_VSYNC_DISABLED.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetRenderVSync(System.IntPtr%2cSystem.Int32%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetRenderVSync(nint renderer, int vsync)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the renderer to toggle.
    - id: vsync
      type: System.Int32
      description: the vertical refresh sync interval.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetRenderVSync(renderer As IntPtr, vsync As Integer) As Boolean
  overload: SharpSDL3.Sdl.SetRenderVSync*
  nameWithType.vb: Sdl.SetRenderVSync(IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.SetRenderVSync(System.IntPtr, Integer)
  name.vb: SetRenderVSync(IntPtr, Integer)
- uid: SharpSDL3.Sdl.StructureToPointer``1(``0@)
  commentId: M:SharpSDL3.Sdl.StructureToPointer``1(``0@)
  id: StructureToPointer``1(``0@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: StructureToPointer<T>(ref T)
  nameWithType: Sdl.StructureToPointer<T>(ref T)
  fullName: SharpSDL3.Sdl.StructureToPointer<T>(ref T)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: StructureToPointer
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 25
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Converts a <code class="typeparamref">T</code> to a pointer.
  example: []
  syntax:
    content: 'public static nint StructureToPointer<T>(ref T str) where T : unmanaged'
    parameters:
    - id: str
      type: '{T}'
      description: An unmanaged type to convert to a <xref href="System.IntPtr" data-throw-if-not-resolved="false"></xref>.
    typeParameters:
    - id: T
      description: The unmanaged generic type.
    return:
      type: System.IntPtr
      description: A pointer in memory to an object, else <xref href="System.IntPtr.Zero" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function StructureToPointer(Of T As Structure)(str As T) As IntPtr
  overload: SharpSDL3.Sdl.StructureToPointer*
  nameWithType.vb: Sdl.StructureToPointer(Of T)(T)
  fullName.vb: SharpSDL3.Sdl.StructureToPointer(Of T)(T)
  name.vb: StructureToPointer(Of T)(T)
- uid: SharpSDL3.Sdl.PointerToStructure``1(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.PointerToStructure``1(System.IntPtr)
  id: PointerToStructure``1(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: PointerToStructure<T>(nint)
  nameWithType: Sdl.PointerToStructure<T>(nint)
  fullName: SharpSDL3.Sdl.PointerToStructure<T>(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: PointerToStructure
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 38
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Convert a pointer to a structure of type <code class="typeparamref">T</code>.
  example: []
  syntax:
    content: 'public static T PointerToStructure<T>(nint ptr) where T : unmanaged'
    parameters:
    - id: ptr
      type: System.IntPtr
      description: The pointer of which contains a <code class="typeparamref">T</code>.
    typeParameters:
    - id: T
      description: The unmanaged generic type.
    return:
      type: '{T}'
      description: a <code class="typeparamref">T</code> filled with data.
    content.vb: Public Shared Function PointerToStructure(Of T As Structure)(ptr As IntPtr) As T
  overload: SharpSDL3.Sdl.PointerToStructure*
  nameWithType.vb: Sdl.PointerToStructure(Of T)(IntPtr)
  fullName.vb: SharpSDL3.Sdl.PointerToStructure(Of T)(System.IntPtr)
  name.vb: PointerToStructure(Of T)(IntPtr)
- uid: SharpSDL3.Sdl.VersionNum(System.Int32,System.Int32,System.Int32)
  commentId: M:SharpSDL3.Sdl.VersionNum(System.Int32,System.Int32,System.Int32)
  id: VersionNum(System.Int32,System.Int32,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: VersionNum(int, int, int)
  nameWithType: Sdl.VersionNum(int, int, int)
  fullName: SharpSDL3.Sdl.VersionNum(int, int, int)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: VersionNum
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 55
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: This macro turns the version numbers into a numeric value.
  remarks: >-
    (1,2,3) becomes 1002003.

    <p><strong>Version:</strong> This macro is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static int VersionNum(int major, int minor, int patch)
    parameters:
    - id: major
      type: System.Int32
      description: The Major versiom number
    - id: minor
      type: System.Int32
      description: The Minor version number
    - id: patch
      type: System.Int32
      description: The Patch version number
    return:
      type: System.Int32
      description: The version as a number
    content.vb: Public Shared Function VersionNum(major As Integer, minor As Integer, patch As Integer) As Integer
  overload: SharpSDL3.Sdl.VersionNum*
  nameWithType.vb: Sdl.VersionNum(Integer, Integer, Integer)
  fullName.vb: SharpSDL3.Sdl.VersionNum(Integer, Integer, Integer)
  name.vb: VersionNum(Integer, Integer, Integer)
- uid: SharpSDL3.Sdl.AddHintCallback(System.String,SharpSDL3.Delegates.SdlHintCallback,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.AddHintCallback(System.String,SharpSDL3.Delegates.SdlHintCallback,System.IntPtr)
  id: AddHintCallback(System.String,SharpSDL3.Delegates.SdlHintCallback,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: AddHintCallback(string, SdlHintCallback, nint)
  nameWithType: Sdl.AddHintCallback(string, Delegates.SdlHintCallback, nint)
  fullName: SharpSDL3.Sdl.AddHintCallback(string, SharpSDL3.Delegates.SdlHintCallback, nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: AddHintCallback
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 68
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Add a function to watch a particular hint.
  remarks: >-
    The callback function is called during this function, to provide it an initial value, and again each time the hint's value changes.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.RemoveHintCallback(System.String%2cSharpSDL3.Delegates.SdlHintCallback%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool AddHintCallback(string name, Delegates.SdlHintCallback callback, nint userdata)
    parameters:
    - id: name
      type: System.String
      description: the hint to watch.
    - id: callback
      type: SharpSDL3.Delegates.SdlHintCallback
      description: An <xref href="SharpSDL3.Delegates.SdlHintCallback" data-throw-if-not-resolved="false"></xref> function that will be called when the hint value changes.
    - id: userdata
      type: System.IntPtr
      description: a pointer to pass to the callback function.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function AddHintCallback(name As String, callback As Delegates.SdlHintCallback, userdata As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.AddHintCallback*
  nameWithType.vb: Sdl.AddHintCallback(String, Delegates.SdlHintCallback, IntPtr)
  fullName.vb: SharpSDL3.Sdl.AddHintCallback(String, SharpSDL3.Delegates.SdlHintCallback, System.IntPtr)
  name.vb: AddHintCallback(String, SdlHintCallback, IntPtr)
- uid: SharpSDL3.Sdl.AddSurfaceAlternateImage(System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.AddSurfaceAlternateImage(System.IntPtr,System.IntPtr)
  id: AddSurfaceAlternateImage(System.IntPtr,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: AddSurfaceAlternateImage(nint, nint)
  nameWithType: Sdl.AddSurfaceAlternateImage(nint, nint)
  fullName: SharpSDL3.Sdl.AddSurfaceAlternateImage(nint, nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: AddSurfaceAlternateImage
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 95
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Add an alternate version of a surface.
  remarks: >-
    This function adds an alternate version of this surface, usually used for

    content with high DPI representations like cursors or icons. The size,

    format, and content do not need to match the original surface, and these

    alternate versions will not be updated when the original surface changes.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.RemoveSurfaceAlternateImages(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetSurfaceImages(System.IntPtr%2cSystem.Int32%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SurfaceHasAlternateImages(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool AddSurfaceAlternateImage(nint surface, nint image)
    parameters:
    - id: surface
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Surface" data-throw-if-not-resolved="false"></xref> structure to update.
    - id: image
      type: System.IntPtr
      description: a pointer to an alternate SDL_Surface to associate with this surface.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function AddSurfaceAlternateImage(surface As IntPtr, image As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.AddSurfaceAlternateImage*
  nameWithType.vb: Sdl.AddSurfaceAlternateImage(IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.AddSurfaceAlternateImage(System.IntPtr, System.IntPtr)
  name.vb: AddSurfaceAlternateImage(IntPtr, IntPtr)
- uid: SharpSDL3.Sdl.BlitSurface(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.BlitSurface(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  id: BlitSurface(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: BlitSurface(nint, nint, nint, nint)
  nameWithType: Sdl.BlitSurface(nint, nint, nint, nint)
  fullName: SharpSDL3.Sdl.BlitSurface(nint, nint, nint, nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: BlitSurface
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 116
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Performs a fast blit from the source surface to the destination surface with clipping.
  remarks: >-
    If either srcrect or dstrect are <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>, the entire surface (src or dst) is copied while ensuring clipping to dst-&gt;clip_rect.

    <p><strong>Thread Safety:</strong> Only one thread should be using the src and dst surfaces at any given time.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.BlitSurfaceScaled(System.IntPtr%2cSystem.IntPtr%2cSystem.IntPtr%2cSystem.IntPtr%2cSharpSDL3.Enums.ScaleMode)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool BlitSurface(nint src, nint srcrect, nint dst, nint dstrect)
    parameters:
    - id: src
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Surface" data-throw-if-not-resolved="false"></xref> structure to be copied from.
    - id: srcrect
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Rect" data-throw-if-not-resolved="false"></xref> structure representing the rectangle to be copied, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to copy the entire surface.
    - id: dst
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Surface" data-throw-if-not-resolved="false"></xref> structure that is the blit target.
    - id: dstrect
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Rect" data-throw-if-not-resolved="false"></xref> structure representing the x and y position in the destination surface, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for (0,0). The width and height are ignored, and are copied from srcrect. If you want a specific width and height, you should use <xref href="SharpSDL3.Sdl.BlitSurfaceScaled(System.IntPtr%2cSystem.IntPtr%2cSystem.IntPtr%2cSystem.IntPtr%2cSharpSDL3.Enums.ScaleMode)" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function BlitSurface(src As IntPtr, srcrect As IntPtr, dst As IntPtr, dstrect As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.BlitSurface*
  nameWithType.vb: Sdl.BlitSurface(IntPtr, IntPtr, IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.BlitSurface(System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr)
  name.vb: BlitSurface(IntPtr, IntPtr, IntPtr, IntPtr)
- uid: SharpSDL3.Sdl.BlitSurface9Grid(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.Single,SharpSDL3.Enums.ScaleMode,System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.BlitSurface9Grid(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.Single,SharpSDL3.Enums.ScaleMode,System.IntPtr,System.IntPtr)
  id: BlitSurface9Grid(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.Single,SharpSDL3.Enums.ScaleMode,System.IntPtr,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: BlitSurface9Grid(nint, nint, int, int, int, int, float, ScaleMode, nint, nint)
  nameWithType: Sdl.BlitSurface9Grid(nint, nint, int, int, int, int, float, ScaleMode, nint, nint)
  fullName: SharpSDL3.Sdl.BlitSurface9Grid(nint, nint, int, int, int, int, float, SharpSDL3.Enums.ScaleMode, nint, nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: BlitSurface9Grid
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 146
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Perform a scaled blit using the 9-grid algorithm to a destination surface, which may be of a different format.
  remarks: >-
    The pixels in the source surface are split into a 3x3 grid, using the

    different corner sizes for each corner, and the sides and center making up

    the remaining pixels. The corners are then scaled using scale and fit

    into the corners of the destination rectangle. The sides and center are

    then stretched into place to cover the remaining destination rectangle.

    <p><strong>Thread Safety:</strong> Only one thread should be using the src and dst surfaces at any given time.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.BlitSurface(System.IntPtr%2cSystem.IntPtr%2cSystem.IntPtr%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool BlitSurface9Grid(nint src, nint srcrect, int leftWidth, int rightWidth, int topHeight, int bottomHeight, float scale, ScaleMode scaleMode, nint dst, nint dstrect)
    parameters:
    - id: src
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Surface" data-throw-if-not-resolved="false"></xref> structure to be copied from.
    - id: srcrect
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Rect" data-throw-if-not-resolved="false"></xref> structure representing the rectangle to be used for the 9-grid, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to use the entire surface.
    - id: leftWidth
      type: System.Int32
      description: the width, in pixels, of the left corners in srcrect.
    - id: rightWidth
      type: System.Int32
      description: the width, in pixels, of the right corners in srcrect.
    - id: topHeight
      type: System.Int32
      description: the height, in pixels, of the top corners in srcrect.
    - id: bottomHeight
      type: System.Int32
      description: the height, in pixels, of the bottom corners in srcrect.
    - id: scale
      type: System.Single
      description: the scale used to transform the corner of srcrect into the corner of dstrect, or 0.0f for an unscaled blit.
    - id: scaleMode
      type: SharpSDL3.Enums.ScaleMode
      description: scale algorithm to be used.
    - id: dst
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Surface" data-throw-if-not-resolved="false"></xref> structure that is the blit target.
    - id: dstrect
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Rect" data-throw-if-not-resolved="false"></xref> structure representing the target rectangle in the destination surface, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to fill the entire surface.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function BlitSurface9Grid(src As IntPtr, srcrect As IntPtr, leftWidth As Integer, rightWidth As Integer, topHeight As Integer, bottomHeight As Integer, scale As Single, scaleMode As ScaleMode, dst As IntPtr, dstrect As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.BlitSurface9Grid*
  nameWithType.vb: Sdl.BlitSurface9Grid(IntPtr, IntPtr, Integer, Integer, Integer, Integer, Single, ScaleMode, IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.BlitSurface9Grid(System.IntPtr, System.IntPtr, Integer, Integer, Integer, Integer, Single, SharpSDL3.Enums.ScaleMode, System.IntPtr, System.IntPtr)
  name.vb: BlitSurface9Grid(IntPtr, IntPtr, Integer, Integer, Integer, Integer, Single, ScaleMode, IntPtr, IntPtr)
- uid: SharpSDL3.Sdl.BlitSurfaceScaled(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,SharpSDL3.Enums.ScaleMode)
  commentId: M:SharpSDL3.Sdl.BlitSurfaceScaled(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,SharpSDL3.Enums.ScaleMode)
  id: BlitSurfaceScaled(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,SharpSDL3.Enums.ScaleMode)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: BlitSurfaceScaled(nint, nint, nint, nint, ScaleMode)
  nameWithType: Sdl.BlitSurfaceScaled(nint, nint, nint, nint, ScaleMode)
  fullName: SharpSDL3.Sdl.BlitSurfaceScaled(nint, nint, nint, nint, SharpSDL3.Enums.ScaleMode)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: BlitSurfaceScaled
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 166
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Perform a scaled blit to a destination surface, which may be of a different format.
  remarks: >-
    <p><strong>Thread Safety:</strong> Only one thread should be using the src and dst surfaces at any given time.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.BlitSurface(System.IntPtr%2cSystem.IntPtr%2cSystem.IntPtr%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool BlitSurfaceScaled(nint src, nint srcrect, nint dst, nint dstrect, ScaleMode scaleMode)
    parameters:
    - id: src
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Surface" data-throw-if-not-resolved="false"></xref> structure to be copied from.
    - id: srcrect
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Rect" data-throw-if-not-resolved="false"></xref> structure representing the rectangle to be copied, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to copy the entire surface.
    - id: dst
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Surface" data-throw-if-not-resolved="false"></xref> structure that is the blit target.
    - id: dstrect
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Rect" data-throw-if-not-resolved="false"></xref> structure representing the target rectangle in the destination surface, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to fill the entire destination surface.
    - id: scaleMode
      type: SharpSDL3.Enums.ScaleMode
      description: the <xref href="SharpSDL3.Enums.ScaleMode" data-throw-if-not-resolved="false"></xref> to be used.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function BlitSurfaceScaled(src As IntPtr, srcrect As IntPtr, dst As IntPtr, dstrect As IntPtr, scaleMode As ScaleMode) As Boolean
  overload: SharpSDL3.Sdl.BlitSurfaceScaled*
  nameWithType.vb: Sdl.BlitSurfaceScaled(IntPtr, IntPtr, IntPtr, IntPtr, ScaleMode)
  fullName.vb: SharpSDL3.Sdl.BlitSurfaceScaled(System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr, SharpSDL3.Enums.ScaleMode)
  name.vb: BlitSurfaceScaled(IntPtr, IntPtr, IntPtr, IntPtr, ScaleMode)
- uid: SharpSDL3.Sdl.BlitSurfaceTiled(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.BlitSurfaceTiled(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  id: BlitSurfaceTiled(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: BlitSurfaceTiled(nint, nint, nint, nint)
  nameWithType: Sdl.BlitSurfaceTiled(nint, nint, nint, nint)
  fullName: SharpSDL3.Sdl.BlitSurfaceTiled(nint, nint, nint, nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: BlitSurfaceTiled
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 186
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Perform a tiled blit to a destination surface, which may be of a different format.
  remarks: >-
    The pixels in srcrect will be repeated as many times as needed to completely fill dstrect.

    <p><strong>Thread Safety:</strong> Only one thread should be using the src and dst surfaces at any given time.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.BlitSurface(System.IntPtr%2cSystem.IntPtr%2cSystem.IntPtr%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool BlitSurfaceTiled(nint src, nint srcrect, nint dst, nint dstrect)
    parameters:
    - id: src
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Surface" data-throw-if-not-resolved="false"></xref> structure to be copied from.
    - id: srcrect
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Rect" data-throw-if-not-resolved="false"></xref> structure representing the rectangle to be copied, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to copy the entire surface.
    - id: dst
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Surface" data-throw-if-not-resolved="false"></xref> structure that is the blit target.
    - id: dstrect
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Rect" data-throw-if-not-resolved="false"></xref> structure representing the target rectangle in the destination surface, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to fill the entire surface.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function BlitSurfaceTiled(src As IntPtr, srcrect As IntPtr, dst As IntPtr, dstrect As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.BlitSurfaceTiled*
  nameWithType.vb: Sdl.BlitSurfaceTiled(IntPtr, IntPtr, IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.BlitSurfaceTiled(System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr)
  name.vb: BlitSurfaceTiled(IntPtr, IntPtr, IntPtr, IntPtr)
- uid: SharpSDL3.Sdl.BlitSurfaceTiledWithScale(System.IntPtr,System.IntPtr,System.Single,SharpSDL3.Enums.ScaleMode,System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.BlitSurfaceTiledWithScale(System.IntPtr,System.IntPtr,System.Single,SharpSDL3.Enums.ScaleMode,System.IntPtr,System.IntPtr)
  id: BlitSurfaceTiledWithScale(System.IntPtr,System.IntPtr,System.Single,SharpSDL3.Enums.ScaleMode,System.IntPtr,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: BlitSurfaceTiledWithScale(nint, nint, float, ScaleMode, nint, nint)
  nameWithType: Sdl.BlitSurfaceTiledWithScale(nint, nint, float, ScaleMode, nint, nint)
  fullName: SharpSDL3.Sdl.BlitSurfaceTiledWithScale(nint, nint, float, SharpSDL3.Enums.ScaleMode, nint, nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: BlitSurfaceTiledWithScale
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 209
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Perform a scaled and tiled blit to a destination surface, which may be of a different format.
  remarks: >-
    The pixels in srcrect will be scaled and repeated as many times as needed

    to completely fill dstrect.

    <p><strong>Thread Safety:</strong> Only one thread should be using the src and dst surfaces at any given time.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.BlitSurface(System.IntPtr%2cSystem.IntPtr%2cSystem.IntPtr%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool BlitSurfaceTiledWithScale(nint src, nint srcrect, float scale, ScaleMode scaleMode, nint dst, nint dstrect)
    parameters:
    - id: src
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Surface" data-throw-if-not-resolved="false"></xref> structure to be copied from.
    - id: srcrect
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Rect" data-throw-if-not-resolved="false"></xref> structure representing the rectangle to be copied, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to copy the entire surface.
    - id: scale
      type: System.Single
      description: the scale used to transform srcrect into the destination rectangle, e.g. a 32x32 texture with a scale of 2 would fill 64x64 tiles.
    - id: scaleMode
      type: SharpSDL3.Enums.ScaleMode
      description: scale algorithm to be used.
    - id: dst
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Surface" data-throw-if-not-resolved="false"></xref> structure that is the blit target.
    - id: dstrect
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Rect" data-throw-if-not-resolved="false"></xref> structure representing the target rectangle in the destination surface, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to fill the entire surface.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function BlitSurfaceTiledWithScale(src As IntPtr, srcrect As IntPtr, scale As Single, scaleMode As ScaleMode, dst As IntPtr, dstrect As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.BlitSurfaceTiledWithScale*
  nameWithType.vb: Sdl.BlitSurfaceTiledWithScale(IntPtr, IntPtr, Single, ScaleMode, IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.BlitSurfaceTiledWithScale(System.IntPtr, System.IntPtr, Single, SharpSDL3.Enums.ScaleMode, System.IntPtr, System.IntPtr)
  name.vb: BlitSurfaceTiledWithScale(IntPtr, IntPtr, Single, ScaleMode, IntPtr, IntPtr)
- uid: SharpSDL3.Sdl.BlitSurfaceUnchecked(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.BlitSurfaceUnchecked(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  id: BlitSurfaceUnchecked(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: BlitSurfaceUnchecked(nint, nint, nint, nint)
  nameWithType: Sdl.BlitSurfaceUnchecked(nint, nint, nint, nint)
  fullName: SharpSDL3.Sdl.BlitSurfaceUnchecked(nint, nint, nint, nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: BlitSurfaceUnchecked
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 230
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Perform low-level surface blitting only.
  remarks: >-
    This is a semi-private blit function and it performs low-level surface

    blitting, assuming the input rectangles have already been clipped.

    <p><strong>Thread Safety:</strong> Only one thread should be using the src and dst surfaces at any given time.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.BlitSurface(System.IntPtr%2cSystem.IntPtr%2cSystem.IntPtr%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool BlitSurfaceUnchecked(nint src, nint srcrect, nint dst, nint dstrect)
    parameters:
    - id: src
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Surface" data-throw-if-not-resolved="false"></xref> structure to be copied from.
    - id: srcrect
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Rect" data-throw-if-not-resolved="false"></xref> structure representing the rectangle to be copied, may not be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    - id: dst
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Surface" data-throw-if-not-resolved="false"></xref> structure that is the blit target.
    - id: dstrect
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Rect" data-throw-if-not-resolved="false"></xref> structure representing the target rectangle in the destination surface, may not be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function BlitSurfaceUnchecked(src As IntPtr, srcrect As IntPtr, dst As IntPtr, dstrect As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.BlitSurfaceUnchecked*
  nameWithType.vb: Sdl.BlitSurfaceUnchecked(IntPtr, IntPtr, IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.BlitSurfaceUnchecked(System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr)
  name.vb: BlitSurfaceUnchecked(IntPtr, IntPtr, IntPtr, IntPtr)
- uid: SharpSDL3.Sdl.BlitSurfaceUncheckedScaled(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,SharpSDL3.Enums.ScaleMode)
  commentId: M:SharpSDL3.Sdl.BlitSurfaceUncheckedScaled(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,SharpSDL3.Enums.ScaleMode)
  id: BlitSurfaceUncheckedScaled(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,SharpSDL3.Enums.ScaleMode)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: BlitSurfaceUncheckedScaled(nint, nint, nint, nint, ScaleMode)
  nameWithType: Sdl.BlitSurfaceUncheckedScaled(nint, nint, nint, nint, ScaleMode)
  fullName: SharpSDL3.Sdl.BlitSurfaceUncheckedScaled(nint, nint, nint, nint, SharpSDL3.Enums.ScaleMode)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: BlitSurfaceUncheckedScaled
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 253
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Perform low-level surface scaled blitting only.
  remarks: >-
    This is a semi-private function and it performs low-level surface blitting,

    assuming the input rectangles have already been clipped.

    <p><strong>Thread Safety:</strong> Only one thread should be using the src and dst surfaces at any given time.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.BlitSurfaceScaled(System.IntPtr%2cSystem.IntPtr%2cSystem.IntPtr%2cSystem.IntPtr%2cSharpSDL3.Enums.ScaleMode)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool BlitSurfaceUncheckedScaled(nint src, nint srcrect, nint dst, nint dstrect, ScaleMode scaleMode)
    parameters:
    - id: src
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Surface" data-throw-if-not-resolved="false"></xref> structure to be copied from.
    - id: srcrect
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Rect" data-throw-if-not-resolved="false"></xref> structure representing the rectangle to be copied, may not be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    - id: dst
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Surface" data-throw-if-not-resolved="false"></xref> structure that is the blit target.
    - id: dstrect
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Rect" data-throw-if-not-resolved="false"></xref> structure representing the target rectangle in the destination surface, may not be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    - id: scaleMode
      type: SharpSDL3.Enums.ScaleMode
      description: the <xref href="SharpSDL3.Enums.ScaleMode" data-throw-if-not-resolved="false"></xref> to be used.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function BlitSurfaceUncheckedScaled(src As IntPtr, srcrect As IntPtr, dst As IntPtr, dstrect As IntPtr, scaleMode As ScaleMode) As Boolean
  overload: SharpSDL3.Sdl.BlitSurfaceUncheckedScaled*
  nameWithType.vb: Sdl.BlitSurfaceUncheckedScaled(IntPtr, IntPtr, IntPtr, IntPtr, ScaleMode)
  fullName.vb: SharpSDL3.Sdl.BlitSurfaceUncheckedScaled(System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr, SharpSDL3.Enums.ScaleMode)
  name.vb: BlitSurfaceUncheckedScaled(IntPtr, IntPtr, IntPtr, IntPtr, ScaleMode)
- uid: SharpSDL3.Sdl.CleanupTls
  commentId: M:SharpSDL3.Sdl.CleanupTls
  id: CleanupTls
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CleanupTls()
  nameWithType: Sdl.CleanupTls()
  fullName: SharpSDL3.Sdl.CleanupTls()
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CleanupTls
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 269
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Cleanup all TLS data for this thread.
  remarks: >-
    If you are creating your threads outside of SDL and then calling SDL

    functions, you should call this function before your thread exits, to

    properly clean up SDL memory.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static void CleanupTls()
    content.vb: Public Shared Sub CleanupTls()
  overload: SharpSDL3.Sdl.CleanupTls*
- uid: SharpSDL3.Sdl.ClearClipboardData
  commentId: M:SharpSDL3.Sdl.ClearClipboardData
  id: ClearClipboardData
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ClearClipboardData()
  nameWithType: Sdl.ClearClipboardData()
  fullName: SharpSDL3.Sdl.ClearClipboardData()
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ClearClipboardData
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 280
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Clear the clipboard data.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetClipboardData(SharpSDL3.Delegates.SdlClipboardDataCallback%2cSharpSDL3.Delegates.SdlClipboardCleanupCallback%2cSystem.IntPtr%2cSystem.IntPtr%2cSystem.UIntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool ClearClipboardData()
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function ClearClipboardData() As Boolean
  overload: SharpSDL3.Sdl.ClearClipboardData*
- uid: SharpSDL3.Sdl.ClearComposition(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.ClearComposition(System.IntPtr)
  id: ClearComposition(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ClearComposition(nint)
  nameWithType: Sdl.ClearComposition(nint)
  fullName: SharpSDL3.Sdl.ClearComposition(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ClearComposition
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 294
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Dismiss the composition window/IME without disabling the subsystem.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.StartTextInput(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.StopTextInput(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool ClearComposition(nint window)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to affect.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function ClearComposition(window As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.ClearComposition*
  nameWithType.vb: Sdl.ClearComposition(IntPtr)
  fullName.vb: SharpSDL3.Sdl.ClearComposition(System.IntPtr)
  name.vb: ClearComposition(IntPtr)
- uid: SharpSDL3.Sdl.ClearError
  commentId: M:SharpSDL3.Sdl.ClearError
  id: ClearError
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ClearError()
  nameWithType: Sdl.ClearError()
  fullName: SharpSDL3.Sdl.ClearError()
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ClearError
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 310
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Clear any previous error message for this thread.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetError(System.String%2cSystem.Object%5b%5d)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool ClearError()
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>.
    content.vb: Public Shared Function ClearError() As Boolean
  overload: SharpSDL3.Sdl.ClearError*
- uid: SharpSDL3.Sdl.ClearProperty(System.UInt32,System.String)
  commentId: M:SharpSDL3.Sdl.ClearProperty(System.UInt32,System.String)
  id: ClearProperty(System.UInt32,System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ClearProperty(uint, string)
  nameWithType: Sdl.ClearProperty(uint, string)
  fullName: SharpSDL3.Sdl.ClearProperty(uint, string)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ClearProperty
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 322
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Clear a property from a group of properties.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool ClearProperty(uint props, string name)
    parameters:
    - id: props
      type: System.UInt32
      description: the properties to modify.
    - id: name
      type: System.String
      description: the name of the property to clear.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function ClearProperty(props As UInteger, name As String) As Boolean
  overload: SharpSDL3.Sdl.ClearProperty*
  nameWithType.vb: Sdl.ClearProperty(UInteger, String)
  fullName.vb: SharpSDL3.Sdl.ClearProperty(UInteger, String)
  name.vb: ClearProperty(UInteger, String)
- uid: SharpSDL3.Sdl.ClearSurface(System.IntPtr,System.Single,System.Single,System.Single,System.Single)
  commentId: M:SharpSDL3.Sdl.ClearSurface(System.IntPtr,System.Single,System.Single,System.Single,System.Single)
  id: ClearSurface(System.IntPtr,System.Single,System.Single,System.Single,System.Single)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ClearSurface(nint, float, float, float, float)
  nameWithType: Sdl.ClearSurface(nint, float, float, float, float)
  fullName: SharpSDL3.Sdl.ClearSurface(nint, float, float, float, float)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ClearSurface
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 342
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Clear a surface with a specific color, with floating point precision.
  remarks: >-
    This function handles all surface formats, and ignores any clip rectangle.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool ClearSurface(nint surface, float r, float g, float b, float a)
    parameters:
    - id: surface
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Surface" data-throw-if-not-resolved="false"></xref> to clear.
    - id: r
      type: System.Single
      description: the red component of the pixel, normally in the range 0-1.
    - id: g
      type: System.Single
      description: the green component of the pixel, normally in the range 0-1.
    - id: b
      type: System.Single
      description: the blue component of the pixel, normally in the range 0-1.
    - id: a
      type: System.Single
      description: the alpha component of the pixel, normally in the range 0-1.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function ClearSurface(surface As IntPtr, r As Single, g As Single, b As Single, a As Single) As Boolean
  overload: SharpSDL3.Sdl.ClearSurface*
  nameWithType.vb: Sdl.ClearSurface(IntPtr, Single, Single, Single, Single)
  fullName.vb: SharpSDL3.Sdl.ClearSurface(System.IntPtr, Single, Single, Single, Single)
  name.vb: ClearSurface(IntPtr, Single, Single, Single, Single)
- uid: SharpSDL3.Sdl.ComposeCustomBlendMode(SharpSDL3.Enums.BlendFactor,SharpSDL3.Enums.BlendFactor,SharpSDL3.Enums.BlendOperation,SharpSDL3.Enums.BlendFactor,SharpSDL3.Enums.BlendFactor,SharpSDL3.Enums.BlendOperation)
  commentId: M:SharpSDL3.Sdl.ComposeCustomBlendMode(SharpSDL3.Enums.BlendFactor,SharpSDL3.Enums.BlendFactor,SharpSDL3.Enums.BlendOperation,SharpSDL3.Enums.BlendFactor,SharpSDL3.Enums.BlendFactor,SharpSDL3.Enums.BlendOperation)
  id: ComposeCustomBlendMode(SharpSDL3.Enums.BlendFactor,SharpSDL3.Enums.BlendFactor,SharpSDL3.Enums.BlendOperation,SharpSDL3.Enums.BlendFactor,SharpSDL3.Enums.BlendFactor,SharpSDL3.Enums.BlendOperation)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ComposeCustomBlendMode(BlendFactor, BlendFactor, BlendOperation, BlendFactor, BlendFactor, BlendOperation)
  nameWithType: Sdl.ComposeCustomBlendMode(BlendFactor, BlendFactor, BlendOperation, BlendFactor, BlendFactor, BlendOperation)
  fullName: SharpSDL3.Sdl.ComposeCustomBlendMode(SharpSDL3.Enums.BlendFactor, SharpSDL3.Enums.BlendFactor, SharpSDL3.Enums.BlendOperation, SharpSDL3.Enums.BlendFactor, SharpSDL3.Enums.BlendFactor, SharpSDL3.Enums.BlendOperation)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ComposeCustomBlendMode
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 368
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Compose a custom blend mode for renderers.
  remarks: >-
    The functions <xref href="SharpSDL3.Sdl.SetRenderDrawBlendMode(System.IntPtr%2cSystem.UInt32)" data-throw-if-not-resolved="false"></xref> and <xref href="SharpSDL3.Sdl.SetTextureBlendMode(System.IntPtr%2cSystem.UInt32)" data-throw-if-not-resolved="false"></xref> accept the <xref href="SharpSDL3.Enums.BlendMode" data-throw-if-not-resolved="false"></xref> returned by this function if the renderer supports it.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetRenderDrawBlendMode(System.IntPtr%2cSystem.UInt32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetRenderDrawBlendMode(System.IntPtr%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetTextureBlendMode(System.IntPtr%2cSystem.UInt32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetTextureBlendMode(System.IntPtr%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static BlendMode ComposeCustomBlendMode(BlendFactor srcColorFactor, BlendFactor dstColorFactor, BlendOperation colorOperation, BlendFactor srcAlphaFactor, BlendFactor dstAlphaFactor, BlendOperation alphaOperation)
    parameters:
    - id: srcColorFactor
      type: SharpSDL3.Enums.BlendFactor
      description: the <xref href="SharpSDL3.Enums.BlendFactor" data-throw-if-not-resolved="false"></xref> applied to the red, green, and blue components of the source pixels.
    - id: dstColorFactor
      type: SharpSDL3.Enums.BlendFactor
      description: the <xref href="SharpSDL3.Enums.BlendFactor" data-throw-if-not-resolved="false"></xref> applied to the red, green, and blue components of the destination pixels.
    - id: colorOperation
      type: SharpSDL3.Enums.BlendOperation
      description: the <xref href="SharpSDL3.Enums.BlendOperation" data-throw-if-not-resolved="false"></xref> used to combine the red, green, and blue components of the source and destination pixels.
    - id: srcAlphaFactor
      type: SharpSDL3.Enums.BlendFactor
      description: the <xref href="SharpSDL3.Enums.BlendFactor" data-throw-if-not-resolved="false"></xref> applied to the alpha component of the source pixels.
    - id: dstAlphaFactor
      type: SharpSDL3.Enums.BlendFactor
      description: the <xref href="SharpSDL3.Enums.BlendFactor" data-throw-if-not-resolved="false"></xref> applied to the alpha component of the destination pixels.
    - id: alphaOperation
      type: SharpSDL3.Enums.BlendOperation
      description: the <xref href="SharpSDL3.Enums.BlendOperation" data-throw-if-not-resolved="false"></xref> used to combine the alpha component of the source and destination pixels.
    return:
      type: SharpSDL3.Enums.BlendMode
      description: Returns an <xref href="SharpSDL3.Enums.BlendMode" data-throw-if-not-resolved="false"></xref>that represents the chosen factors and operations.
    content.vb: Public Shared Function ComposeCustomBlendMode(srcColorFactor As BlendFactor, dstColorFactor As BlendFactor, colorOperation As BlendOperation, srcAlphaFactor As BlendFactor, dstAlphaFactor As BlendFactor, alphaOperation As BlendOperation) As BlendMode
  overload: SharpSDL3.Sdl.ComposeCustomBlendMode*
- uid: SharpSDL3.Sdl.ConvertPixels(System.Int32,System.Int32,SharpSDL3.Enums.PixelFormat,System.IntPtr,System.Int32,SharpSDL3.Enums.PixelFormat,System.IntPtr,System.Int32)
  commentId: M:SharpSDL3.Sdl.ConvertPixels(System.Int32,System.Int32,SharpSDL3.Enums.PixelFormat,System.IntPtr,System.Int32,SharpSDL3.Enums.PixelFormat,System.IntPtr,System.Int32)
  id: ConvertPixels(System.Int32,System.Int32,SharpSDL3.Enums.PixelFormat,System.IntPtr,System.Int32,SharpSDL3.Enums.PixelFormat,System.IntPtr,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ConvertPixels(int, int, PixelFormat, nint, int, PixelFormat, nint, int)
  nameWithType: Sdl.ConvertPixels(int, int, PixelFormat, nint, int, PixelFormat, nint, int)
  fullName: SharpSDL3.Sdl.ConvertPixels(int, int, SharpSDL3.Enums.PixelFormat, nint, int, SharpSDL3.Enums.PixelFormat, nint, int)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ConvertPixels
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 402
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Copy a block of pixels of one format to another format.
  remarks: >-
    <p><strong>Thread Safety:</strong> The same destination pixels should not be used from two threads at once. It is safe to use the same source pixels from multiple threads.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.ConvertPixelsAndColorspace(System.Int32%2cSystem.Int32%2cSharpSDL3.Enums.PixelFormat%2cSharpSDL3.Enums.Colorspace%2cSystem.UInt32%2cSystem.IntPtr%2cSystem.Int32%2cSharpSDL3.Enums.PixelFormat%2cSharpSDL3.Enums.Colorspace%2cSystem.UInt32%2cSystem.IntPtr%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool ConvertPixels(int width, int height, PixelFormat srcFormat, nint src, int srcPitch, PixelFormat dstFormat, nint dst, int dstPitch)
    parameters:
    - id: width
      type: System.Int32
      description: the width of the block to copy, in pixels.
    - id: height
      type: System.Int32
      description: the height of the block to copy, in pixels.
    - id: srcFormat
      type: SharpSDL3.Enums.PixelFormat
      description: an <xref href="SharpSDL3.Enums.PixelFormat" data-throw-if-not-resolved="false"></xref> value of the src pixels format.
    - id: src
      type: System.IntPtr
      description: a pointer to the source pixels.
    - id: srcPitch
      type: System.Int32
      description: the pitch of the source pixels, in bytes.
    - id: dstFormat
      type: SharpSDL3.Enums.PixelFormat
      description: an <xref href="SharpSDL3.Enums.PixelFormat" data-throw-if-not-resolved="false"></xref> value of the dst pixels format.
    - id: dst
      type: System.IntPtr
      description: a pointer to be filled in with new pixel data.
    - id: dstPitch
      type: System.Int32
      description: the pitch of the destination pixels, in bytes.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function ConvertPixels(width As Integer, height As Integer, srcFormat As PixelFormat, src As IntPtr, srcPitch As Integer, dstFormat As PixelFormat, dst As IntPtr, dstPitch As Integer) As Boolean
  overload: SharpSDL3.Sdl.ConvertPixels*
  nameWithType.vb: Sdl.ConvertPixels(Integer, Integer, PixelFormat, IntPtr, Integer, PixelFormat, IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.ConvertPixels(Integer, Integer, SharpSDL3.Enums.PixelFormat, System.IntPtr, Integer, SharpSDL3.Enums.PixelFormat, System.IntPtr, Integer)
  name.vb: ConvertPixels(Integer, Integer, PixelFormat, IntPtr, Integer, PixelFormat, IntPtr, Integer)
- uid: SharpSDL3.Sdl.ConvertPixelsAndColorspace(System.Int32,System.Int32,SharpSDL3.Enums.PixelFormat,SharpSDL3.Enums.Colorspace,System.UInt32,System.IntPtr,System.Int32,SharpSDL3.Enums.PixelFormat,SharpSDL3.Enums.Colorspace,System.UInt32,System.IntPtr,System.Int32)
  commentId: M:SharpSDL3.Sdl.ConvertPixelsAndColorspace(System.Int32,System.Int32,SharpSDL3.Enums.PixelFormat,SharpSDL3.Enums.Colorspace,System.UInt32,System.IntPtr,System.Int32,SharpSDL3.Enums.PixelFormat,SharpSDL3.Enums.Colorspace,System.UInt32,System.IntPtr,System.Int32)
  id: ConvertPixelsAndColorspace(System.Int32,System.Int32,SharpSDL3.Enums.PixelFormat,SharpSDL3.Enums.Colorspace,System.UInt32,System.IntPtr,System.Int32,SharpSDL3.Enums.PixelFormat,SharpSDL3.Enums.Colorspace,System.UInt32,System.IntPtr,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ConvertPixelsAndColorspace(int, int, PixelFormat, Colorspace, uint, nint, int, PixelFormat, Colorspace, uint, nint, int)
  nameWithType: Sdl.ConvertPixelsAndColorspace(int, int, PixelFormat, Colorspace, uint, nint, int, PixelFormat, Colorspace, uint, nint, int)
  fullName: SharpSDL3.Sdl.ConvertPixelsAndColorspace(int, int, SharpSDL3.Enums.PixelFormat, SharpSDL3.Enums.Colorspace, uint, nint, int, SharpSDL3.Enums.PixelFormat, SharpSDL3.Enums.Colorspace, uint, nint, int)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ConvertPixelsAndColorspace
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 430
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Copy a block of pixels of one format and colorspace to another format and colorspace.
  remarks: >-
    <p><strong>Thread Safety:</strong> The same destination pixels should not be used from two threads at once. It is safe to use the same source pixels from multiple threads.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.ConvertPixels(System.Int32%2cSystem.Int32%2cSharpSDL3.Enums.PixelFormat%2cSystem.IntPtr%2cSystem.Int32%2cSharpSDL3.Enums.PixelFormat%2cSystem.IntPtr%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool ConvertPixelsAndColorspace(int width, int height, PixelFormat srcFormat, Colorspace srcColorspace, uint srcProperties, nint src, int srcPitch, PixelFormat dstFormat, Colorspace dstColorspace, uint dstProperties, nint dst, int dstPitch)
    parameters:
    - id: width
      type: System.Int32
      description: the width of the block to copy, in pixels.
    - id: height
      type: System.Int32
      description: the height of the block to copy, in pixels.
    - id: srcFormat
      type: SharpSDL3.Enums.PixelFormat
      description: an <xref href="SharpSDL3.Enums.PixelFormat" data-throw-if-not-resolved="false"></xref> value of the src pixels format.
    - id: srcColorspace
      type: SharpSDL3.Enums.Colorspace
      description: an <xref href="SharpSDL3.Enums.Colorspace" data-throw-if-not-resolved="false"></xref> value describing the colorspace of the src pixels.
    - id: srcProperties
      type: System.UInt32
      description: an SDL_PropertiesID with additional source color properties, or 0.
    - id: src
      type: System.IntPtr
      description: a pointer to the source pixels.
    - id: srcPitch
      type: System.Int32
      description: the pitch of the source pixels, in bytes.
    - id: dstFormat
      type: SharpSDL3.Enums.PixelFormat
      description: an <xref href="SharpSDL3.Enums.PixelFormat" data-throw-if-not-resolved="false"></xref> value of the dst pixels format.
    - id: dstColorspace
      type: SharpSDL3.Enums.Colorspace
      description: an <xref href="SharpSDL3.Enums.Colorspace" data-throw-if-not-resolved="false"></xref> value describing the colorspace of the dst pixels.
    - id: dstProperties
      type: System.UInt32
      description: an SDL_PropertiesID with additional destination color properties, or 0.
    - id: dst
      type: System.IntPtr
      description: a pointer to be filled in with new pixel data.
    - id: dstPitch
      type: System.Int32
      description: the pitch of the destination pixels, in bytes.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function ConvertPixelsAndColorspace(width As Integer, height As Integer, srcFormat As PixelFormat, srcColorspace As Colorspace, srcProperties As UInteger, src As IntPtr, srcPitch As Integer, dstFormat As PixelFormat, dstColorspace As Colorspace, dstProperties As UInteger, dst As IntPtr, dstPitch As Integer) As Boolean
  overload: SharpSDL3.Sdl.ConvertPixelsAndColorspace*
  nameWithType.vb: Sdl.ConvertPixelsAndColorspace(Integer, Integer, PixelFormat, Colorspace, UInteger, IntPtr, Integer, PixelFormat, Colorspace, UInteger, IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.ConvertPixelsAndColorspace(Integer, Integer, SharpSDL3.Enums.PixelFormat, SharpSDL3.Enums.Colorspace, UInteger, System.IntPtr, Integer, SharpSDL3.Enums.PixelFormat, SharpSDL3.Enums.Colorspace, UInteger, System.IntPtr, Integer)
  name.vb: ConvertPixelsAndColorspace(Integer, Integer, PixelFormat, Colorspace, UInteger, IntPtr, Integer, PixelFormat, Colorspace, UInteger, IntPtr, Integer)
- uid: SharpSDL3.Sdl.ConvertSurface(System.IntPtr,SharpSDL3.Enums.PixelFormat)
  commentId: M:SharpSDL3.Sdl.ConvertSurface(System.IntPtr,SharpSDL3.Enums.PixelFormat)
  id: ConvertSurface(System.IntPtr,SharpSDL3.Enums.PixelFormat)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ConvertSurface(nint, PixelFormat)
  nameWithType: Sdl.ConvertSurface(nint, PixelFormat)
  fullName: SharpSDL3.Sdl.ConvertSurface(nint, SharpSDL3.Enums.PixelFormat)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ConvertSurface
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 454
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Copy an existing surface to a new surface of the specified format.
  remarks: >-
    This function is used to optimize images for faster repeat blitting. This

    is accomplished by converting the original and storing the result as a new

    surface. The new, optimized surface can then be used as the source for

    future blits, making them faster.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.ConvertSurfaceAndColorspace(System.IntPtr%2cSharpSDL3.Enums.PixelFormat%2cSystem.IntPtr%2cSharpSDL3.Enums.Colorspace%2cSystem.UInt32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.DestroySurface(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint ConvertSurface(nint surface, PixelFormat format)
    parameters:
    - id: surface
      type: System.IntPtr
      description: the existing SDL_Surface structure to convert.
    - id: format
      type: SharpSDL3.Enums.PixelFormat
      description: the new pixel format.
    return:
      type: System.IntPtr
      description: (SDL_Surface *) Returns the new SDL_Surfacestructure that is created or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function ConvertSurface(surface As IntPtr, format As PixelFormat) As IntPtr
  overload: SharpSDL3.Sdl.ConvertSurface*
  nameWithType.vb: Sdl.ConvertSurface(IntPtr, PixelFormat)
  fullName.vb: SharpSDL3.Sdl.ConvertSurface(System.IntPtr, SharpSDL3.Enums.PixelFormat)
  name.vb: ConvertSurface(IntPtr, PixelFormat)
- uid: SharpSDL3.Sdl.ConvertSurfaceAndColorspace(System.IntPtr,SharpSDL3.Enums.PixelFormat,System.IntPtr,SharpSDL3.Enums.Colorspace,System.UInt32)
  commentId: M:SharpSDL3.Sdl.ConvertSurfaceAndColorspace(System.IntPtr,SharpSDL3.Enums.PixelFormat,System.IntPtr,SharpSDL3.Enums.Colorspace,System.UInt32)
  id: ConvertSurfaceAndColorspace(System.IntPtr,SharpSDL3.Enums.PixelFormat,System.IntPtr,SharpSDL3.Enums.Colorspace,System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ConvertSurfaceAndColorspace(nint, PixelFormat, nint, Colorspace, uint)
  nameWithType: Sdl.ConvertSurfaceAndColorspace(nint, PixelFormat, nint, Colorspace, uint)
  fullName: SharpSDL3.Sdl.ConvertSurfaceAndColorspace(nint, SharpSDL3.Enums.PixelFormat, nint, SharpSDL3.Enums.Colorspace, uint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ConvertSurfaceAndColorspace
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 480
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Copy an existing surface to a new surface of the specified format and colorspace.
  remarks: >-
    This function converts an existing surface to a new format and colorspace

    and returns the new surface. This will perform any pixel format and

    colorspace conversion needed.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.ConvertSurface(System.IntPtr%2cSharpSDL3.Enums.PixelFormat)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.DestroySurface(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint ConvertSurfaceAndColorspace(nint surface, PixelFormat format, nint palette, Colorspace colorspace, uint props)
    parameters:
    - id: surface
      type: System.IntPtr
      description: the existing SDL_Surface structure to convert.
    - id: format
      type: SharpSDL3.Enums.PixelFormat
      description: the new pixel format.
    - id: palette
      type: System.IntPtr
      description: an optional palette to use for indexed formats, may be discarded.
    - id: colorspace
      type: SharpSDL3.Enums.Colorspace
      description: the new colorspace.
    - id: props
      type: System.UInt32
      description: an SDL_PropertiesID with additional color properties, or 0.
    return:
      type: System.IntPtr
      description: (SDL_Surface *) Returns the new SDL_Surfacestructure that is created or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function ConvertSurfaceAndColorspace(surface As IntPtr, format As PixelFormat, palette As IntPtr, colorspace As Colorspace, props As UInteger) As IntPtr
  overload: SharpSDL3.Sdl.ConvertSurfaceAndColorspace*
  nameWithType.vb: Sdl.ConvertSurfaceAndColorspace(IntPtr, PixelFormat, IntPtr, Colorspace, UInteger)
  fullName.vb: SharpSDL3.Sdl.ConvertSurfaceAndColorspace(System.IntPtr, SharpSDL3.Enums.PixelFormat, System.IntPtr, SharpSDL3.Enums.Colorspace, UInteger)
  name.vb: ConvertSurfaceAndColorspace(IntPtr, PixelFormat, IntPtr, Colorspace, UInteger)
- uid: SharpSDL3.Sdl.CopyProperties(System.UInt32,System.UInt32)
  commentId: M:SharpSDL3.Sdl.CopyProperties(System.UInt32,System.UInt32)
  id: CopyProperties(System.UInt32,System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CopyProperties(uint, uint)
  nameWithType: Sdl.CopyProperties(uint, uint)
  fullName: SharpSDL3.Sdl.CopyProperties(uint, uint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CopyProperties
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 499
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Copy a group of properties.
  remarks: >-
    Copy all the properties from one group of properties to another, with the

    exception of properties requiring cleanup (set using <xref href="SharpSDL3.Sdl.SetPointerPropertyWithCleanup(System.UInt32%2cSystem.String%2cSystem.IntPtr%2cSharpSDL3.Delegates.SdlCleanupPropertyCallback%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>),

    which will not be copied. Any property that already exists on dst will be overwritten.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool CopyProperties(uint src, uint dst)
    parameters:
    - id: src
      type: System.UInt32
      description: the properties to copy.
    - id: dst
      type: System.UInt32
      description: the destination properties.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function CopyProperties(src As UInteger, dst As UInteger) As Boolean
  overload: SharpSDL3.Sdl.CopyProperties*
  nameWithType.vb: Sdl.CopyProperties(UInteger, UInteger)
  fullName.vb: SharpSDL3.Sdl.CopyProperties(UInteger, UInteger)
  name.vb: CopyProperties(UInteger, UInteger)
- uid: SharpSDL3.Sdl.CreatePalette(System.Int32)
  commentId: M:SharpSDL3.Sdl.CreatePalette(System.Int32)
  id: CreatePalette(System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CreatePalette(int)
  nameWithType: Sdl.CreatePalette(int)
  fullName: SharpSDL3.Sdl.CreatePalette(int)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CreatePalette
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 518
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Create a palette structure with the specified number of color entries.
  remarks: >-
    The palette entries are initialized to white.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.DestroyPalette(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetPaletteColors(System.IntPtr%2cSystem.Span%7bSharpSDL3.Structs.Color%7d%2cSystem.Int32%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetSurfacePalette(System.IntPtr%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint CreatePalette(int ncolors)
    parameters:
    - id: ncolors
      type: System.Int32
      description: represents the number of color entries in the color palette.
    return:
      type: System.IntPtr
      description: (SDL_Palette *) Returns a new SDL_Palette structure on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure (e.g. if there wasn't enough memory); call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function CreatePalette(ncolors As Integer) As IntPtr
  overload: SharpSDL3.Sdl.CreatePalette*
  nameWithType.vb: Sdl.CreatePalette(Integer)
  fullName.vb: SharpSDL3.Sdl.CreatePalette(Integer)
  name.vb: CreatePalette(Integer)
- uid: SharpSDL3.Sdl.CreatePopupWindow(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,SharpSDL3.Enums.WindowFlags)
  commentId: M:SharpSDL3.Sdl.CreatePopupWindow(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,SharpSDL3.Enums.WindowFlags)
  id: CreatePopupWindow(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,SharpSDL3.Enums.WindowFlags)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CreatePopupWindow(nint, int, int, int, int, WindowFlags)
  nameWithType: Sdl.CreatePopupWindow(nint, int, int, int, int, WindowFlags)
  fullName: SharpSDL3.Sdl.CreatePopupWindow(nint, int, int, int, int, SharpSDL3.Enums.WindowFlags)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CreatePopupWindow
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 552
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Create a child popup window of the specified parent window.
  remarks: >-
    The window size is a request and may be different than expected based on

    the desktop layout and window manager policies. Your application should be

    prepared to handle a window of any size.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateWindow(System.String%2cSystem.Int32%2cSystem.Int32%2cSharpSDL3.Enums.WindowFlags)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.CreateWindowWithProperties(System.UInt32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.DestroyWindow(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetWindowParent(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint CreatePopupWindow(nint parent, int offsetX, int offsetY, int w, int h, WindowFlags flags)
    parameters:
    - id: parent
      type: System.IntPtr
      description: the parent of the window, must not be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    - id: offsetX
      type: System.Int32
      description: the x position of the popup window relative to the origin of the parent.
    - id: offsetY
      type: System.Int32
      description: the y position of the popup window relative to the origin of the parent window.
    - id: w
      type: System.Int32
      description: the width of the window.
    - id: h
      type: System.Int32
      description: the height of the window.
    - id: flags
      type: SharpSDL3.Enums.WindowFlags
      description: <xref href="SharpSDL3.Enums.WindowFlags.Tooltip" data-throw-if-not-resolved="false"></xref> or <xref href="SharpSDL3.Enums.WindowFlags.PopupMenu" data-throw-if-not-resolved="false"></xref>, and zero or more additional <xref href="SharpSDL3.Enums.WindowFlags" data-throw-if-not-resolved="false"></xref> OR'd together.
    return:
      type: System.IntPtr
      description: (SDL_Window *) Returns the window that was created or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function CreatePopupWindow(parent As IntPtr, offsetX As Integer, offsetY As Integer, w As Integer, h As Integer, flags As WindowFlags) As IntPtr
  overload: SharpSDL3.Sdl.CreatePopupWindow*
  nameWithType.vb: Sdl.CreatePopupWindow(IntPtr, Integer, Integer, Integer, Integer, WindowFlags)
  fullName.vb: SharpSDL3.Sdl.CreatePopupWindow(System.IntPtr, Integer, Integer, Integer, Integer, SharpSDL3.Enums.WindowFlags)
  name.vb: CreatePopupWindow(IntPtr, Integer, Integer, Integer, Integer, WindowFlags)
- uid: SharpSDL3.Sdl.CreateProperties
  commentId: M:SharpSDL3.Sdl.CreateProperties
  id: CreateProperties
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CreateProperties()
  nameWithType: Sdl.CreateProperties()
  fullName: SharpSDL3.Sdl.CreateProperties()
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CreateProperties
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 582
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Create a group of properties.
  remarks: >-
    All properties are automatically destroyed when <xref href="SharpSDL3.Sdl.Quit" data-throw-if-not-resolved="false"></xref> is called.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.DestroyProperties(System.UInt32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static uint CreateProperties()
    return:
      type: System.UInt32
      description: Returns an ID for a new group of properties, or 0 on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function CreateProperties() As UInteger
  overload: SharpSDL3.Sdl.CreateProperties*
- uid: SharpSDL3.Sdl.CreateSurface(System.Int32,System.Int32,SharpSDL3.Enums.PixelFormat)
  commentId: M:SharpSDL3.Sdl.CreateSurface(System.Int32,System.Int32,SharpSDL3.Enums.PixelFormat)
  id: CreateSurface(System.Int32,System.Int32,SharpSDL3.Enums.PixelFormat)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CreateSurface(int, int, PixelFormat)
  nameWithType: Sdl.CreateSurface(int, int, PixelFormat)
  fullName: SharpSDL3.Sdl.CreateSurface(int, int, SharpSDL3.Enums.PixelFormat)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CreateSurface
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 603
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Allocate a new surface with a specific pixel format.
  remarks: >-
    The pixels of the new surface are initialized to zero.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateSurfaceFrom(System.Int32%2cSystem.Int32%2cSharpSDL3.Enums.PixelFormat%2cSystem.IntPtr%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.DestroySurface(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint CreateSurface(int width, int height, PixelFormat format)
    parameters:
    - id: width
      type: System.Int32
      description: the width of the surface.
    - id: height
      type: System.Int32
      description: the height of the surface.
    - id: format
      type: SharpSDL3.Enums.PixelFormat
      description: the <xref href="SharpSDL3.Enums.PixelFormat" data-throw-if-not-resolved="false"></xref> for the new surface's pixel format.
    return:
      type: System.IntPtr
      description: (SDL_Surface *) Returns the new SDL_Surfacestructure that is created or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function CreateSurface(width As Integer, height As Integer, format As PixelFormat) As IntPtr
  overload: SharpSDL3.Sdl.CreateSurface*
  nameWithType.vb: Sdl.CreateSurface(Integer, Integer, PixelFormat)
  fullName.vb: SharpSDL3.Sdl.CreateSurface(Integer, Integer, SharpSDL3.Enums.PixelFormat)
  name.vb: CreateSurface(Integer, Integer, PixelFormat)
- uid: SharpSDL3.Sdl.CreateSurfaceFrom(System.Int32,System.Int32,SharpSDL3.Enums.PixelFormat,System.IntPtr,System.Int32)
  commentId: M:SharpSDL3.Sdl.CreateSurfaceFrom(System.Int32,System.Int32,SharpSDL3.Enums.PixelFormat,System.IntPtr,System.Int32)
  id: CreateSurfaceFrom(System.Int32,System.Int32,SharpSDL3.Enums.PixelFormat,System.IntPtr,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CreateSurfaceFrom(int, int, PixelFormat, nint, int)
  nameWithType: Sdl.CreateSurfaceFrom(int, int, PixelFormat, nint, int)
  fullName: SharpSDL3.Sdl.CreateSurfaceFrom(int, int, SharpSDL3.Enums.PixelFormat, nint, int)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CreateSurfaceFrom
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 627
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Allocate a new surface with a specific pixel format and existing pixel data.
  remarks: >-
    No copy is made of the pixel data. Pixel data is not managed automatically;

    you must free the surface before you free the pixel data.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateSurface(System.Int32%2cSystem.Int32%2cSharpSDL3.Enums.PixelFormat)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.DestroySurface(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint CreateSurfaceFrom(int width, int height, PixelFormat format, nint pixels, int pitch)
    parameters:
    - id: width
      type: System.Int32
      description: the width of the surface.
    - id: height
      type: System.Int32
      description: the height of the surface.
    - id: format
      type: SharpSDL3.Enums.PixelFormat
      description: the <xref href="SharpSDL3.Enums.PixelFormat" data-throw-if-not-resolved="false"></xref> for the new surface's pixel format.
    - id: pixels
      type: System.IntPtr
      description: a pointer to existing pixel data.
    - id: pitch
      type: System.Int32
      description: the number of bytes between each row, including padding.
    return:
      type: System.IntPtr
      description: (SDL_Surface *) Returns the new SDL_Surface structure that is created or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function CreateSurfaceFrom(width As Integer, height As Integer, format As PixelFormat, pixels As IntPtr, pitch As Integer) As IntPtr
  overload: SharpSDL3.Sdl.CreateSurfaceFrom*
  nameWithType.vb: Sdl.CreateSurfaceFrom(Integer, Integer, PixelFormat, IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.CreateSurfaceFrom(Integer, Integer, SharpSDL3.Enums.PixelFormat, System.IntPtr, Integer)
  name.vb: CreateSurfaceFrom(Integer, Integer, PixelFormat, IntPtr, Integer)
- uid: SharpSDL3.Sdl.CreateSurfacePalette(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.CreateSurfacePalette(System.IntPtr)
  id: CreateSurfacePalette(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CreateSurfacePalette(nint)
  nameWithType: Sdl.CreateSurfacePalette(nint)
  fullName: SharpSDL3.Sdl.CreateSurfacePalette(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CreateSurfacePalette
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 655
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Create a palette and associate it with a surface.
  remarks: >-
    This function creates a palette compatible with the provided surface. The

    palette is then returned for you to modify, and the surface will

    automatically use the new palette in future operations. You do not need to

    destroy the returned palette, it will be freed when the reference count

    reaches 0, usually when the surface is destroyed.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetPaletteColors(System.IntPtr%2cSystem.Span%7bSharpSDL3.Structs.Color%7d%2cSystem.Int32%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint CreateSurfacePalette(nint surface)
    parameters:
    - id: surface
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Surface" data-throw-if-not-resolved="false"></xref> structure to update.
    return:
      type: System.IntPtr
      description: (SDL_Palette *) Returns a new SDL_Palettestructure on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure (e.g. if the surface didn't have anindex format); call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function CreateSurfacePalette(surface As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.CreateSurfacePalette*
  nameWithType.vb: Sdl.CreateSurfacePalette(IntPtr)
  fullName.vb: SharpSDL3.Sdl.CreateSurfacePalette(System.IntPtr)
  name.vb: CreateSurfacePalette(IntPtr)
- uid: SharpSDL3.Sdl.CreateThreadRuntime(SharpSDL3.Delegates.SdlThreadFunction,System.String,System.IntPtr,System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.CreateThreadRuntime(SharpSDL3.Delegates.SdlThreadFunction,System.String,System.IntPtr,System.IntPtr,System.IntPtr)
  id: CreateThreadRuntime(SharpSDL3.Delegates.SdlThreadFunction,System.String,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CreateThreadRuntime(SdlThreadFunction, string, nint, nint, nint)
  nameWithType: Sdl.CreateThreadRuntime(Delegates.SdlThreadFunction, string, nint, nint, nint)
  fullName: SharpSDL3.Sdl.CreateThreadRuntime(SharpSDL3.Delegates.SdlThreadFunction, string, nint, nint, nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CreateThreadRuntime
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 663
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static nint CreateThreadRuntime(Delegates.SdlThreadFunction fn, string name, nint data, nint pfnBeginThread, nint pfnEndThread)
    parameters:
    - id: fn
      type: SharpSDL3.Delegates.SdlThreadFunction
    - id: name
      type: System.String
    - id: data
      type: System.IntPtr
    - id: pfnBeginThread
      type: System.IntPtr
    - id: pfnEndThread
      type: System.IntPtr
    return:
      type: System.IntPtr
    content.vb: Public Shared Function CreateThreadRuntime(fn As Delegates.SdlThreadFunction, name As String, data As IntPtr, pfnBeginThread As IntPtr, pfnEndThread As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.CreateThreadRuntime*
  nameWithType.vb: Sdl.CreateThreadRuntime(Delegates.SdlThreadFunction, String, IntPtr, IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.CreateThreadRuntime(SharpSDL3.Delegates.SdlThreadFunction, String, System.IntPtr, System.IntPtr, System.IntPtr)
  name.vb: CreateThreadRuntime(SdlThreadFunction, String, IntPtr, IntPtr, IntPtr)
- uid: SharpSDL3.Sdl.CreateThreadWithPropertiesRuntime(System.UInt32,System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.CreateThreadWithPropertiesRuntime(System.UInt32,System.IntPtr,System.IntPtr)
  id: CreateThreadWithPropertiesRuntime(System.UInt32,System.IntPtr,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CreateThreadWithPropertiesRuntime(uint, nint, nint)
  nameWithType: Sdl.CreateThreadWithPropertiesRuntime(uint, nint, nint)
  fullName: SharpSDL3.Sdl.CreateThreadWithPropertiesRuntime(uint, nint, nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CreateThreadWithPropertiesRuntime
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 671
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static nint CreateThreadWithPropertiesRuntime(uint props, nint pfnBeginThread, nint pfnEndThread)
    parameters:
    - id: props
      type: System.UInt32
    - id: pfnBeginThread
      type: System.IntPtr
    - id: pfnEndThread
      type: System.IntPtr
    return:
      type: System.IntPtr
    content.vb: Public Shared Function CreateThreadWithPropertiesRuntime(props As UInteger, pfnBeginThread As IntPtr, pfnEndThread As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.CreateThreadWithPropertiesRuntime*
  nameWithType.vb: Sdl.CreateThreadWithPropertiesRuntime(UInteger, IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.CreateThreadWithPropertiesRuntime(UInteger, System.IntPtr, System.IntPtr)
  name.vb: CreateThreadWithPropertiesRuntime(UInteger, IntPtr, IntPtr)
- uid: SharpSDL3.Sdl.CreateWindow(System.String,System.Int32,System.Int32,SharpSDL3.Enums.WindowFlags)
  commentId: M:SharpSDL3.Sdl.CreateWindow(System.String,System.Int32,System.Int32,SharpSDL3.Enums.WindowFlags)
  id: CreateWindow(System.String,System.Int32,System.Int32,SharpSDL3.Enums.WindowFlags)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CreateWindow(string, int, int, WindowFlags)
  nameWithType: Sdl.CreateWindow(string, int, int, WindowFlags)
  fullName: SharpSDL3.Sdl.CreateWindow(string, int, int, SharpSDL3.Enums.WindowFlags)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CreateWindow
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 706
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Create a window with the specified dimensions and flags.
  remarks: >-
    The window size is a request and may be different than expected based on

    the desktop layout and window manager policies. Your application should be

    prepared to handle a window of any size.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateWindowAndRenderer(System.String%2cSystem.Int32%2cSystem.Int32%2cSharpSDL3.Enums.WindowFlags%2cSystem.IntPtr%40%2cSystem.IntPtr%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.CreatePopupWindow(System.IntPtr%2cSystem.Int32%2cSystem.Int32%2cSystem.Int32%2cSystem.Int32%2cSharpSDL3.Enums.WindowFlags)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.CreateWindowWithProperties(System.UInt32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.DestroyWindow(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint CreateWindow(string title, int w, int h, WindowFlags flags)
    parameters:
    - id: title
      type: System.String
      description: the title of the window, in UTF-8 encoding.
    - id: w
      type: System.Int32
      description: the width of the window.
    - id: h
      type: System.Int32
      description: the height of the window.
    - id: flags
      type: SharpSDL3.Enums.WindowFlags
      description: 0, or one or more <xref href="SharpSDL3.Enums.WindowFlags" data-throw-if-not-resolved="false"></xref> OR'd together.
    return:
      type: System.IntPtr
      description: (SDL_Window *) Returns the window that was created or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function CreateWindow(title As String, w As Integer, h As Integer, flags As WindowFlags) As IntPtr
  overload: SharpSDL3.Sdl.CreateWindow*
  nameWithType.vb: Sdl.CreateWindow(String, Integer, Integer, WindowFlags)
  fullName.vb: SharpSDL3.Sdl.CreateWindow(String, Integer, Integer, SharpSDL3.Enums.WindowFlags)
  name.vb: CreateWindow(String, Integer, Integer, WindowFlags)
- uid: SharpSDL3.Sdl.CreateWindowWithProperties(System.UInt32)
  commentId: M:SharpSDL3.Sdl.CreateWindowWithProperties(System.UInt32)
  id: CreateWindowWithProperties(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CreateWindowWithProperties(uint)
  nameWithType: Sdl.CreateWindowWithProperties(uint)
  fullName: SharpSDL3.Sdl.CreateWindowWithProperties(uint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CreateWindowWithProperties
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 727
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Create a window with the specified properties.
  remarks: >-
    The window size is a request and may be different than expected based on

    the desktop layout and window manager policies. Your application should be

    prepared to handle a window of any size.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateProperties" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.CreateWindow(System.String%2cSystem.Int32%2cSystem.Int32%2cSharpSDL3.Enums.WindowFlags)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.DestroyWindow(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint CreateWindowWithProperties(uint props)
    parameters:
    - id: props
      type: System.UInt32
      description: the properties to use.
    return:
      type: System.IntPtr
      description: (SDL_Window *) Returns the window that was created or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function CreateWindowWithProperties(props As UInteger) As IntPtr
  overload: SharpSDL3.Sdl.CreateWindowWithProperties*
  nameWithType.vb: Sdl.CreateWindowWithProperties(UInteger)
  fullName.vb: SharpSDL3.Sdl.CreateWindowWithProperties(UInteger)
  name.vb: CreateWindowWithProperties(UInteger)
- uid: SharpSDL3.Sdl.DestroyPalette(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.DestroyPalette(System.IntPtr)
  id: DestroyPalette(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: DestroyPalette(nint)
  nameWithType: Sdl.DestroyPalette(nint)
  fullName: SharpSDL3.Sdl.DestroyPalette(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: DestroyPalette
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 749
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Free a palette created with <xref href="SharpSDL3.Sdl.CreatePalette(System.Int32)" data-throw-if-not-resolved="false"></xref>.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread, as long as the palette is not modified or destroyed in another thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreatePalette(System.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void DestroyPalette(nint palette)
    parameters:
    - id: palette
      type: System.IntPtr
      description: the SDL_Palette structure to be freed.
    content.vb: Public Shared Sub DestroyPalette(palette As IntPtr)
  overload: SharpSDL3.Sdl.DestroyPalette*
  nameWithType.vb: Sdl.DestroyPalette(IntPtr)
  fullName.vb: SharpSDL3.Sdl.DestroyPalette(System.IntPtr)
  name.vb: DestroyPalette(IntPtr)
- uid: SharpSDL3.Sdl.DestroyProperties(System.UInt32)
  commentId: M:SharpSDL3.Sdl.DestroyProperties(System.UInt32)
  id: DestroyProperties(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: DestroyProperties(uint)
  nameWithType: Sdl.DestroyProperties(uint)
  fullName: SharpSDL3.Sdl.DestroyProperties(uint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: DestroyProperties
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 765
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Destroy a group of properties.
  remarks: >-
    All properties are deleted and their cleanup functions will be called, if any.

    <p><strong>Thread Safety:</strong> This function should not be called while these properties are locked orother threads might be setting or getting values from these properties.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateProperties" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void DestroyProperties(uint props)
    parameters:
    - id: props
      type: System.UInt32
      description: the properties to destroy.
    content.vb: Public Shared Sub DestroyProperties(props As UInteger)
  overload: SharpSDL3.Sdl.DestroyProperties*
  nameWithType.vb: Sdl.DestroyProperties(UInteger)
  fullName.vb: SharpSDL3.Sdl.DestroyProperties(UInteger)
  name.vb: DestroyProperties(UInteger)
- uid: SharpSDL3.Sdl.DestroySurface(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.DestroySurface(System.IntPtr)
  id: DestroySurface(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: DestroySurface(nint)
  nameWithType: Sdl.DestroySurface(nint)
  fullName: SharpSDL3.Sdl.DestroySurface(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: DestroySurface
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 783
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Free a surface.
  remarks: >-
    It is safe to pass <xref href="System.IntPtr.Zero" data-throw-if-not-resolved="false"></xref> to this function.

    <p><strong>Thread Safety:</strong> No other thread should be using the surface when it is freed.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateSurface(System.Int32%2cSystem.Int32%2cSharpSDL3.Enums.PixelFormat)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.CreateSurfaceFrom(System.Int32%2cSystem.Int32%2cSharpSDL3.Enums.PixelFormat%2cSystem.IntPtr%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void DestroySurface(nint surface)
    parameters:
    - id: surface
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Surface" data-throw-if-not-resolved="false"></xref> to free.
    content.vb: Public Shared Sub DestroySurface(surface As IntPtr)
  overload: SharpSDL3.Sdl.DestroySurface*
  nameWithType.vb: Sdl.DestroySurface(IntPtr)
  fullName.vb: SharpSDL3.Sdl.DestroySurface(System.IntPtr)
  name.vb: DestroySurface(IntPtr)
- uid: SharpSDL3.Sdl.DestroyWindow(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.DestroyWindow(System.IntPtr)
  id: DestroyWindow(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: DestroyWindow(nint)
  nameWithType: Sdl.DestroyWindow(nint)
  fullName: SharpSDL3.Sdl.DestroyWindow(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: DestroyWindow
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 797
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Destroy a window.
  remarks: >-
    Any child windows owned by the window will be recursively destroyed as well.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreatePopupWindow(System.IntPtr%2cSystem.Int32%2cSystem.Int32%2cSystem.Int32%2cSystem.Int32%2cSharpSDL3.Enums.WindowFlags)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.CreateWindow(System.String%2cSystem.Int32%2cSystem.Int32%2cSharpSDL3.Enums.WindowFlags)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.CreateWindowWithProperties(System.UInt32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void DestroyWindow(nint window)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to destroy.
    content.vb: Public Shared Sub DestroyWindow(window As IntPtr)
  overload: SharpSDL3.Sdl.DestroyWindow*
  nameWithType.vb: Sdl.DestroyWindow(IntPtr)
  fullName.vb: SharpSDL3.Sdl.DestroyWindow(System.IntPtr)
  name.vb: DestroyWindow(IntPtr)
- uid: SharpSDL3.Sdl.DestroyWindowSurface(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.DestroyWindowSurface(System.IntPtr)
  id: DestroyWindowSurface(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: DestroyWindowSurface(nint)
  nameWithType: Sdl.DestroyWindowSurface(nint)
  fullName: SharpSDL3.Sdl.DestroyWindowSurface(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: DestroyWindowSurface
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 815
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Destroy the surface associated with the window.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetWindowSurface(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.WindowHasSurface(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool DestroyWindowSurface(nint window)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to update.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function DestroyWindowSurface(window As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.DestroyWindowSurface*
  nameWithType.vb: Sdl.DestroyWindowSurface(IntPtr)
  fullName.vb: SharpSDL3.Sdl.DestroyWindowSurface(System.IntPtr)
  name.vb: DestroyWindowSurface(IntPtr)
- uid: SharpSDL3.Sdl.DetachThread(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.DetachThread(System.IntPtr)
  id: DetachThread(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: DetachThread(nint)
  nameWithType: Sdl.DetachThread(nint)
  fullName: SharpSDL3.Sdl.DetachThread(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: DetachThread
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 835
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Let a thread clean up on exit without intervention.
  remarks: >-
    A thread may be "detached" to signify that it should not remain until

    another thread has called <xref href="SharpSDL3.Sdl.WaitThread(System.IntPtr%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref> on it.

    Detaching a thread is useful for long-running threads that nothing needs to

    synchronize with or further manage. When a detached thread is done, it simply goes away.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    CreateThread

    <xref href="SharpSDL3.Sdl.WaitThread(System.IntPtr%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void DetachThread(nint thread)
    parameters:
    - id: thread
      type: System.IntPtr
      description: the SDL_Thread pointer that was returned from the CreateThread call that started this thread.
    content.vb: Public Shared Sub DetachThread(thread As IntPtr)
  overload: SharpSDL3.Sdl.DetachThread*
  nameWithType.vb: Sdl.DetachThread(IntPtr)
  fullName.vb: SharpSDL3.Sdl.DetachThread(System.IntPtr)
  name.vb: DetachThread(IntPtr)
- uid: SharpSDL3.Sdl.DisableScreenSaver
  commentId: M:SharpSDL3.Sdl.DisableScreenSaver
  id: DisableScreenSaver
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: DisableScreenSaver()
  nameWithType: Sdl.DisableScreenSaver()
  fullName: SharpSDL3.Sdl.DisableScreenSaver()
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: DisableScreenSaver
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 852
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Prevent the screen from being blanked by a screen saver.
  remarks: >-
    If you disable the screensaver, it is automatically re-enabled when SDL quits.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.EnableScreenSaver" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.ScreenSaverEnabled" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool DisableScreenSaver()
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function DisableScreenSaver() As Boolean
  overload: SharpSDL3.Sdl.DisableScreenSaver*
- uid: SharpSDL3.Sdl.DuplicateSurface(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.DuplicateSurface(System.IntPtr)
  id: DuplicateSurface(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: DuplicateSurface(nint)
  nameWithType: Sdl.DuplicateSurface(nint)
  fullName: SharpSDL3.Sdl.DuplicateSurface(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: DuplicateSurface
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 865
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Creates a new surface identical to the existing surface.
  remarks: >-
    If the original surface has alternate images, the new surface will have a reference to them as well.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.DestroySurface(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint DuplicateSurface(nint surface)
    parameters:
    - id: surface
      type: System.IntPtr
      description: the surface to duplicate.
    return:
      type: System.IntPtr
      description: (SDL_Surface *) Returns a copy of the surface or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function DuplicateSurface(surface As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.DuplicateSurface*
  nameWithType.vb: Sdl.DuplicateSurface(IntPtr)
  fullName.vb: SharpSDL3.Sdl.DuplicateSurface(System.IntPtr)
  name.vb: DuplicateSurface(IntPtr)
- uid: SharpSDL3.Sdl.EnableScreenSaver
  commentId: M:SharpSDL3.Sdl.EnableScreenSaver
  id: EnableScreenSaver
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: EnableScreenSaver()
  nameWithType: Sdl.EnableScreenSaver()
  fullName: SharpSDL3.Sdl.EnableScreenSaver()
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: EnableScreenSaver
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 881
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Allow the screen to be blanked by a screen saver.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.DisableScreenSaver" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.ScreenSaverEnabled" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool EnableScreenSaver()
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function EnableScreenSaver() As Boolean
  overload: SharpSDL3.Sdl.EnableScreenSaver*
- uid: SharpSDL3.Sdl.EnterAppMainCallbacks(System.Int32,System.IntPtr,SharpSDL3.Delegates.SdlAppInitFunc,SharpSDL3.Delegates.SdlAppIterateFunc,SharpSDL3.Delegates.SdlAppEventFunc,SharpSDL3.Delegates.SdlAppQuitFunc)
  commentId: M:SharpSDL3.Sdl.EnterAppMainCallbacks(System.Int32,System.IntPtr,SharpSDL3.Delegates.SdlAppInitFunc,SharpSDL3.Delegates.SdlAppIterateFunc,SharpSDL3.Delegates.SdlAppEventFunc,SharpSDL3.Delegates.SdlAppQuitFunc)
  id: EnterAppMainCallbacks(System.Int32,System.IntPtr,SharpSDL3.Delegates.SdlAppInitFunc,SharpSDL3.Delegates.SdlAppIterateFunc,SharpSDL3.Delegates.SdlAppEventFunc,SharpSDL3.Delegates.SdlAppQuitFunc)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: EnterAppMainCallbacks(int, nint, SdlAppInitFunc, SdlAppIterateFunc, SdlAppEventFunc, SdlAppQuitFunc)
  nameWithType: Sdl.EnterAppMainCallbacks(int, nint, Delegates.SdlAppInitFunc, Delegates.SdlAppIterateFunc, Delegates.SdlAppEventFunc, Delegates.SdlAppQuitFunc)
  fullName: SharpSDL3.Sdl.EnterAppMainCallbacks(int, nint, SharpSDL3.Delegates.SdlAppInitFunc, SharpSDL3.Delegates.SdlAppIterateFunc, SharpSDL3.Delegates.SdlAppEventFunc, SharpSDL3.Delegates.SdlAppQuitFunc)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: EnterAppMainCallbacks
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 900
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: An entry point for SDL's use in SDL_MAIN_USE_CALLBACKS.
  remarks: >-
    Generally, you should not call this function directly. This only exists to

    hand off work into SDL as soon as possible, where it has a lot more control

    and functionality available, and make the inline code in SDL_main.h as small as possible.

    <p><strong>Thread Safety:</strong> It is not safe to call this anywhere except as the only function call inSDL_main.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static int EnterAppMainCallbacks(int argc, nint argv, Delegates.SdlAppInitFunc appInit, Delegates.SdlAppIterateFunc appIter, Delegates.SdlAppEventFunc sdlAppEvent, Delegates.SdlAppQuitFunc appQuit)
    parameters:
    - id: argc
      type: System.Int32
      description: standard Unix main argc.
    - id: argv
      type: System.IntPtr
      description: standard Unix main argv.
    - id: appInit
      type: SharpSDL3.Delegates.SdlAppInitFunc
      description: the application's SDL_AppInit function.
    - id: appIter
      type: SharpSDL3.Delegates.SdlAppIterateFunc
      description: the application's SDL_AppIterate function.
    - id: sdlAppEvent
      type: SharpSDL3.Delegates.SdlAppEventFunc
    - id: appQuit
      type: SharpSDL3.Delegates.SdlAppQuitFunc
      description: the application's SDL_AppQuit function.
    return:
      type: System.Int32
      description: Returns standard Unix main return value.
    content.vb: Public Shared Function EnterAppMainCallbacks(argc As Integer, argv As IntPtr, appInit As Delegates.SdlAppInitFunc, appIter As Delegates.SdlAppIterateFunc, sdlAppEvent As Delegates.SdlAppEventFunc, appQuit As Delegates.SdlAppQuitFunc) As Integer
  overload: SharpSDL3.Sdl.EnterAppMainCallbacks*
  nameWithType.vb: Sdl.EnterAppMainCallbacks(Integer, IntPtr, Delegates.SdlAppInitFunc, Delegates.SdlAppIterateFunc, Delegates.SdlAppEventFunc, Delegates.SdlAppQuitFunc)
  fullName.vb: SharpSDL3.Sdl.EnterAppMainCallbacks(Integer, System.IntPtr, SharpSDL3.Delegates.SdlAppInitFunc, SharpSDL3.Delegates.SdlAppIterateFunc, SharpSDL3.Delegates.SdlAppEventFunc, SharpSDL3.Delegates.SdlAppQuitFunc)
  name.vb: EnterAppMainCallbacks(Integer, IntPtr, SdlAppInitFunc, SdlAppIterateFunc, SdlAppEventFunc, SdlAppQuitFunc)
- uid: SharpSDL3.Sdl.EnumerateProperties(System.UInt32,SharpSDL3.Delegates.SdlEnumeratePropertiesCallback,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.EnumerateProperties(System.UInt32,SharpSDL3.Delegates.SdlEnumeratePropertiesCallback,System.IntPtr)
  id: EnumerateProperties(System.UInt32,SharpSDL3.Delegates.SdlEnumeratePropertiesCallback,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: EnumerateProperties(uint, SdlEnumeratePropertiesCallback, nint)
  nameWithType: Sdl.EnumerateProperties(uint, Delegates.SdlEnumeratePropertiesCallback, nint)
  fullName: SharpSDL3.Sdl.EnumerateProperties(uint, SharpSDL3.Delegates.SdlEnumeratePropertiesCallback, nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: EnumerateProperties
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 924
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Enumerate the properties contained in a group of properties.
  remarks: >-
    The callback function is called for each property in the group of

    properties. The properties are locked during enumeration.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool EnumerateProperties(uint props, Delegates.SdlEnumeratePropertiesCallback callback, nint userdata)
    parameters:
    - id: props
      type: System.UInt32
      description: the properties to query.
    - id: callback
      type: SharpSDL3.Delegates.SdlEnumeratePropertiesCallback
      description: the function to call for each property.
    - id: userdata
      type: System.IntPtr
      description: a pointer that is passed to callback.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function EnumerateProperties(props As UInteger, callback As Delegates.SdlEnumeratePropertiesCallback, userdata As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.EnumerateProperties*
  nameWithType.vb: Sdl.EnumerateProperties(UInteger, Delegates.SdlEnumeratePropertiesCallback, IntPtr)
  fullName.vb: SharpSDL3.Sdl.EnumerateProperties(UInteger, SharpSDL3.Delegates.SdlEnumeratePropertiesCallback, System.IntPtr)
  name.vb: EnumerateProperties(UInteger, SdlEnumeratePropertiesCallback, IntPtr)
- uid: SharpSDL3.Sdl.FillSurfaceRect(System.IntPtr,SharpSDL3.Structs.Rect,System.UInt32)
  commentId: M:SharpSDL3.Sdl.FillSurfaceRect(System.IntPtr,SharpSDL3.Structs.Rect,System.UInt32)
  id: FillSurfaceRect(System.IntPtr,SharpSDL3.Structs.Rect,System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: FillSurfaceRect(nint, Rect, uint)
  nameWithType: Sdl.FillSurfaceRect(nint, Rect, uint)
  fullName: SharpSDL3.Sdl.FillSurfaceRect(nint, SharpSDL3.Structs.Rect, uint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: FillSurfaceRect
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 946
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Perform a fast fill of a rectangle with a specific color.
  remarks: >-
    color should be a pixel of the format used by the surface, and can be

    generated by <xref href="SharpSDL3.Sdl.MapRgb(System.IntPtr%2cSystem.IntPtr%2cSystem.Byte%2cSystem.Byte%2cSystem.Byte)" data-throw-if-not-resolved="false"></xref> or <xref href="SharpSDL3.Sdl.MapRgba(System.IntPtr%2cSystem.IntPtr%2cSystem.Byte%2cSystem.Byte%2cSystem.Byte%2cSystem.Byte)" data-throw-if-not-resolved="false"></xref>. If

    the color value contains an alpha component then the destination is simply

    filled with that alpha information, no blending takes place.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.FillSurfaceRects(System.IntPtr%2cSystem.Span%7bSharpSDL3.Structs.Rect%7d%2cSystem.UInt32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool FillSurfaceRect(nint dst, Rect rect, uint color)
    parameters:
    - id: dst
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Surface" data-throw-if-not-resolved="false"></xref> structure that is the drawing target.
    - id: rect
      type: SharpSDL3.Structs.Rect
      description: the <xref href="SharpSDL3.Structs.Rect" data-throw-if-not-resolved="false"></xref> structure representing the rectangle to fill, or <xref href="System.IntPtr.Zero" data-throw-if-not-resolved="false"></xref> to fill the entire surface.
    - id: color
      type: System.UInt32
      description: the color to fill with.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function FillSurfaceRect(dst As IntPtr, rect As Rect, color As UInteger) As Boolean
  overload: SharpSDL3.Sdl.FillSurfaceRect*
  nameWithType.vb: Sdl.FillSurfaceRect(IntPtr, Rect, UInteger)
  fullName.vb: SharpSDL3.Sdl.FillSurfaceRect(System.IntPtr, SharpSDL3.Structs.Rect, UInteger)
  name.vb: FillSurfaceRect(IntPtr, Rect, UInteger)
- uid: SharpSDL3.Sdl.FillSurfaceRects(System.IntPtr,System.Span{SharpSDL3.Structs.Rect},System.UInt32)
  commentId: M:SharpSDL3.Sdl.FillSurfaceRects(System.IntPtr,System.Span{SharpSDL3.Structs.Rect},System.UInt32)
  id: FillSurfaceRects(System.IntPtr,System.Span{SharpSDL3.Structs.Rect},System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: FillSurfaceRects(nint, Span<Rect>, uint)
  nameWithType: Sdl.FillSurfaceRects(nint, Span<Rect>, uint)
  fullName: SharpSDL3.Sdl.FillSurfaceRects(nint, System.Span<SharpSDL3.Structs.Rect>, uint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: FillSurfaceRects
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 976
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Perform a fast fill of a set of rectangles with a specific color.
  remarks: >-
    color should be a pixel of the format used by the surface, and can be

    generated by <xref href="SharpSDL3.Sdl.MapRgb(System.IntPtr%2cSystem.IntPtr%2cSystem.Byte%2cSystem.Byte%2cSystem.Byte)" data-throw-if-not-resolved="false"></xref> or <xref href="SharpSDL3.Sdl.MapRgba(System.IntPtr%2cSystem.IntPtr%2cSystem.Byte%2cSystem.Byte%2cSystem.Byte%2cSystem.Byte)" data-throw-if-not-resolved="false"></xref>. If

    the color value contains an alpha component then the destination is simply

    filled with that alpha information, no blending takes place.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.FillSurfaceRect(System.IntPtr%2cSharpSDL3.Structs.Rect%2cSystem.UInt32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool FillSurfaceRects(nint dst, Span<Rect> rects, uint color)
    parameters:
    - id: dst
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Surface" data-throw-if-not-resolved="false"></xref> structure that is the drawing target.
    - id: rects
      type: System.Span{SharpSDL3.Structs.Rect}
      description: an array of <xref href="SharpSDL3.Structs.Rect" data-throw-if-not-resolved="false"></xref>s representing the rectangles to fill.
    - id: color
      type: System.UInt32
      description: the color to fill with.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function FillSurfaceRects(dst As IntPtr, rects As Span(Of Rect), color As UInteger) As Boolean
  overload: SharpSDL3.Sdl.FillSurfaceRects*
  nameWithType.vb: Sdl.FillSurfaceRects(IntPtr, Span(Of Rect), UInteger)
  fullName.vb: SharpSDL3.Sdl.FillSurfaceRects(System.IntPtr, System.Span(Of SharpSDL3.Structs.Rect), UInteger)
  name.vb: FillSurfaceRects(IntPtr, Span(Of Rect), UInteger)
- uid: SharpSDL3.Sdl.FlashWindow(System.IntPtr,SharpSDL3.Enums.FlashOperation)
  commentId: M:SharpSDL3.Sdl.FlashWindow(System.IntPtr,SharpSDL3.Enums.FlashOperation)
  id: FlashWindow(System.IntPtr,SharpSDL3.Enums.FlashOperation)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: FlashWindow(nint, FlashOperation)
  nameWithType: Sdl.FlashWindow(nint, FlashOperation)
  fullName: SharpSDL3.Sdl.FlashWindow(nint, SharpSDL3.Enums.FlashOperation)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: FlashWindow
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 1001
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Request a window to demand attention from the user.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool FlashWindow(nint window, FlashOperation operation)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to be flashed.
    - id: operation
      type: SharpSDL3.Enums.FlashOperation
      description: the operation to perform.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function FlashWindow(window As IntPtr, operation As FlashOperation) As Boolean
  overload: SharpSDL3.Sdl.FlashWindow*
  nameWithType.vb: Sdl.FlashWindow(IntPtr, FlashOperation)
  fullName.vb: SharpSDL3.Sdl.FlashWindow(System.IntPtr, SharpSDL3.Enums.FlashOperation)
  name.vb: FlashWindow(IntPtr, FlashOperation)
- uid: SharpSDL3.Sdl.FlipSurface(System.IntPtr,SharpSDL3.Enums.FlipMode)
  commentId: M:SharpSDL3.Sdl.FlipSurface(System.IntPtr,SharpSDL3.Enums.FlipMode)
  id: FlipSurface(System.IntPtr,SharpSDL3.Enums.FlipMode)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: FlipSurface(nint, FlipMode)
  nameWithType: Sdl.FlipSurface(nint, FlipMode)
  fullName: SharpSDL3.Sdl.FlipSurface(nint, SharpSDL3.Enums.FlipMode)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: FlipSurface
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 1027
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Flip a surface vertically or horizontally.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool FlipSurface(nint surface, FlipMode flip)
    parameters:
    - id: surface
      type: System.IntPtr
      description: the surface to flip.
    - id: flip
      type: SharpSDL3.Enums.FlipMode
      description: the direction to flip.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function FlipSurface(surface As IntPtr, flip As FlipMode) As Boolean
  overload: SharpSDL3.Sdl.FlipSurface*
  nameWithType.vb: Sdl.FlipSurface(IntPtr, FlipMode)
  fullName.vb: SharpSDL3.Sdl.FlipSurface(System.IntPtr, SharpSDL3.Enums.FlipMode)
  name.vb: FlipSurface(IntPtr, FlipMode)
- uid: SharpSDL3.Sdl.Free(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.Free(System.IntPtr)
  id: Free(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: Free(nint)
  nameWithType: Sdl.Free(nint)
  fullName: SharpSDL3.Sdl.Free(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: Free
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 1035
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static void Free(nint mem)
    parameters:
    - id: mem
      type: System.IntPtr
    content.vb: Public Shared Sub Free(mem As IntPtr)
  overload: SharpSDL3.Sdl.Free*
  nameWithType.vb: Sdl.Free(IntPtr)
  fullName.vb: SharpSDL3.Sdl.Free(System.IntPtr)
  name.vb: Free(IntPtr)
- uid: SharpSDL3.Sdl.GDKSuspendComplete
  commentId: M:SharpSDL3.Sdl.GDKSuspendComplete
  id: GDKSuspendComplete
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GDKSuspendComplete()
  nameWithType: Sdl.GDKSuspendComplete()
  fullName: SharpSDL3.Sdl.GDKSuspendComplete()
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GDKSuspendComplete
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 1050
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Callback from the application to let the suspend continue.
  remarks: >-
    This function is only needed for Xbox GDK support; all other platforms will

    do nothing and set an "unsupported" error message.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static void GDKSuspendComplete()
    content.vb: Public Shared Sub GDKSuspendComplete()
  overload: SharpSDL3.Sdl.GDKSuspendComplete*
- uid: SharpSDL3.Sdl.GetAppMetadataProperty(System.String)
  commentId: M:SharpSDL3.Sdl.GetAppMetadataProperty(System.String)
  id: GetAppMetadataProperty(System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetAppMetadataProperty(string)
  nameWithType: Sdl.GetAppMetadataProperty(string)
  fullName: SharpSDL3.Sdl.GetAppMetadataProperty(string)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetAppMetadataProperty
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 1065
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get metadata about your app.
  remarks: >-
    This returns metadata previously set using <xref href="SharpSDL3.Sdl.SetAppMetadata(System.String%2cSystem.String%2cSystem.String)" data-throw-if-not-resolved="false"></xref> or <xref href="SharpSDL3.Sdl.SetAppMetadataProperty(System.String%2cSystem.String)" data-throw-if-not-resolved="false"></xref>.

    <p>See <xref href="SharpSDL3.Sdl.SetAppMetadataProperty(System.String%2cSystem.String)" data-throw-if-not-resolved="false"></xref> for the list of available properties and their meanings.</p>

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread, although the stringreturned is not protected and could potentially be freed if you callSDL_SetAppMetadataProperty() to set that property from another thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetAppMetadata(System.String%2cSystem.String%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetAppMetadataProperty(System.String%2cSystem.String)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static string GetAppMetadataProperty(string name)
    parameters:
    - id: name
      type: System.String
      description: the name of the metadata property to get.
    return:
      type: System.String
      description: Returns the current value of the metadata property, or the default if it is not set, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for properties with no default.
    content.vb: Public Shared Function GetAppMetadataProperty(name As String) As String
  overload: SharpSDL3.Sdl.GetAppMetadataProperty*
  nameWithType.vb: Sdl.GetAppMetadataProperty(String)
  fullName.vb: SharpSDL3.Sdl.GetAppMetadataProperty(String)
  name.vb: GetAppMetadataProperty(String)
- uid: SharpSDL3.Sdl.GetBooleanProperty(System.UInt32,System.String,System.Boolean)
  commentId: M:SharpSDL3.Sdl.GetBooleanProperty(System.UInt32,System.String,System.Boolean)
  id: GetBooleanProperty(System.UInt32,System.String,System.Boolean)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetBooleanProperty(uint, string, bool)
  nameWithType: Sdl.GetBooleanProperty(uint, string, bool)
  fullName: SharpSDL3.Sdl.GetBooleanProperty(uint, string, bool)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetBooleanProperty
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 1090
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get a boolean property from a group of properties.
  remarks: >-
    You can use  <xref href="SharpSDL3.Sdl.GetPropertyType(System.UInt32%2cSystem.String)" data-throw-if-not-resolved="false"></xref> to query whether the property exists and is a boolean property.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetPropertyType(System.UInt32%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.HasProperty(System.UInt32%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetBooleanProperty(System.UInt32%2cSystem.String%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool GetBooleanProperty(uint props, string name, bool defaultValue)
    parameters:
    - id: props
      type: System.UInt32
      description: the properties to query.
    - id: name
      type: System.String
      description: the name of the property to query.
    - id: defaultValue
      type: System.Boolean
      description: the default value of the property.
    return:
      type: System.Boolean
      description: Returns the value of the property, or <code class="paramref">defaultValue</code> if it is not set or not a boolean property.
    content.vb: Public Shared Function GetBooleanProperty(props As UInteger, name As String, defaultValue As Boolean) As Boolean
  overload: SharpSDL3.Sdl.GetBooleanProperty*
  nameWithType.vb: Sdl.GetBooleanProperty(UInteger, String, Boolean)
  fullName.vb: SharpSDL3.Sdl.GetBooleanProperty(UInteger, String, Boolean)
  name.vb: GetBooleanProperty(UInteger, String, Boolean)
- uid: SharpSDL3.Sdl.GetClipboardData(System.String)
  commentId: M:SharpSDL3.Sdl.GetClipboardData(System.String)
  id: GetClipboardData(System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetClipboardData(string)
  nameWithType: Sdl.GetClipboardData(string)
  fullName: SharpSDL3.Sdl.GetClipboardData(string)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetClipboardData
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 1113
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the data from clipboard for a given mime type.
  remarks: >-
    The size of text data does not include the terminator, but the text is guaranteed to be null terminated.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.HasClipboardData(System.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetClipboardData(SharpSDL3.Delegates.SdlClipboardDataCallback%2cSharpSDL3.Delegates.SdlClipboardCleanupCallback%2cSystem.IntPtr%2cSystem.IntPtr%2cSystem.UIntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static Span<nint> GetClipboardData(string mimeType)
    parameters:
    - id: mimeType
      type: System.String
      description: the mime type to read from the clipboard.
    return:
      type: System.Span{System.IntPtr}
      description: (void *) Returns the retrieved data buffer or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information. This should be freedwith <xref href="SharpSDL3.Sdl.Free(System.IntPtr)" data-throw-if-not-resolved="false"></xref> when it is no longer needed.
    content.vb: Public Shared Function GetClipboardData(mimeType As String) As Span(Of IntPtr)
  overload: SharpSDL3.Sdl.GetClipboardData*
  nameWithType.vb: Sdl.GetClipboardData(String)
  fullName.vb: SharpSDL3.Sdl.GetClipboardData(String)
  name.vb: GetClipboardData(String)
- uid: SharpSDL3.Sdl.GetClipboardMimeTypes
  commentId: M:SharpSDL3.Sdl.GetClipboardMimeTypes
  id: GetClipboardMimeTypes
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetClipboardMimeTypes()
  nameWithType: Sdl.GetClipboardMimeTypes()
  fullName: SharpSDL3.Sdl.GetClipboardMimeTypes()
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetClipboardMimeTypes
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 1142
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Retrieve the list of mime types available in the clipboard.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetClipboardData(SharpSDL3.Delegates.SdlClipboardDataCallback%2cSharpSDL3.Delegates.SdlClipboardCleanupCallback%2cSystem.IntPtr%2cSystem.IntPtr%2cSystem.UIntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static Span<nint> GetClipboardMimeTypes()
    return:
      type: System.Span{System.IntPtr}
      description: (char **) Returns a null terminated array of strings with mime types, or<a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.This should be freed with <xref href="SharpSDL3.Sdl.Free(System.IntPtr)" data-throw-if-not-resolved="false"></xref> when it is no longer needed.
    content.vb: Public Shared Function GetClipboardMimeTypes() As Span(Of IntPtr)
  overload: SharpSDL3.Sdl.GetClipboardMimeTypes*
- uid: SharpSDL3.Sdl.GetClipboardMimeTypes(System.UIntPtr@)
  commentId: M:SharpSDL3.Sdl.GetClipboardMimeTypes(System.UIntPtr@)
  id: GetClipboardMimeTypes(System.UIntPtr@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetClipboardMimeTypes(out nuint)
  nameWithType: Sdl.GetClipboardMimeTypes(out nuint)
  fullName: SharpSDL3.Sdl.GetClipboardMimeTypes(out nuint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetClipboardMimeTypes
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 1163
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Retrieve the list of mime types available in the clipboard.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetClipboardData(SharpSDL3.Delegates.SdlClipboardDataCallback%2cSharpSDL3.Delegates.SdlClipboardCleanupCallback%2cSystem.IntPtr%2cSystem.IntPtr%2cSystem.UIntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint GetClipboardMimeTypes(out nuint numMimeTypes)
    parameters:
    - id: numMimeTypes
      type: System.UIntPtr
      description: a pointer filled with the number of mime types, may be discarded.
    return:
      type: System.IntPtr
      description: (char **) Returns a null terminated array of strings with mime types, or<a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.This should be freed with <xref href="SharpSDL3.Sdl.Free(System.IntPtr)" data-throw-if-not-resolved="false"></xref> when it is no longer needed.
    content.vb: Public Shared Function GetClipboardMimeTypes(numMimeTypes As UIntPtr) As IntPtr
  overload: SharpSDL3.Sdl.GetClipboardMimeTypes*
  nameWithType.vb: Sdl.GetClipboardMimeTypes(UIntPtr)
  fullName.vb: SharpSDL3.Sdl.GetClipboardMimeTypes(System.UIntPtr)
  name.vb: GetClipboardMimeTypes(UIntPtr)
- uid: SharpSDL3.Sdl.GetClipboardText
  commentId: M:SharpSDL3.Sdl.GetClipboardText
  id: GetClipboardText
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetClipboardText()
  nameWithType: Sdl.GetClipboardText()
  fullName: SharpSDL3.Sdl.GetClipboardText()
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetClipboardText
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 1181
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get UTF-8 text from the clipboard.
  remarks: >-
    This functions returns an empty string if there was not enough memory left for a copy of the clipboard's content.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.HasClipboardText" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetClipboardText(System.String)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static string GetClipboardText()
    return:
      type: System.String
      description: (char *) Returns the clipboard text on success or an empty string on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information. Thisshould be freed with <xref href="SharpSDL3.Sdl.Free(System.IntPtr)" data-throw-if-not-resolved="false"></xref> when it is no longer needed.
    content.vb: Public Shared Function GetClipboardText() As String
  overload: SharpSDL3.Sdl.GetClipboardText*
- uid: SharpSDL3.Sdl.GetClosestFullscreenDisplayMode(System.UInt32,System.Int32,System.Int32,System.Single,System.Boolean,SharpSDL3.Structs.DisplayMode@)
  commentId: M:SharpSDL3.Sdl.GetClosestFullscreenDisplayMode(System.UInt32,System.Int32,System.Int32,System.Single,System.Boolean,SharpSDL3.Structs.DisplayMode@)
  id: GetClosestFullscreenDisplayMode(System.UInt32,System.Int32,System.Int32,System.Single,System.Boolean,SharpSDL3.Structs.DisplayMode@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetClosestFullscreenDisplayMode(uint, int, int, float, bool, out DisplayMode)
  nameWithType: Sdl.GetClosestFullscreenDisplayMode(uint, int, int, float, bool, out DisplayMode)
  fullName: SharpSDL3.Sdl.GetClosestFullscreenDisplayMode(uint, int, int, float, bool, out SharpSDL3.Structs.DisplayMode)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetClosestFullscreenDisplayMode
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 1210
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the closest match to the requested display mode.
  remarks: >-
    The available display modes are scanned and closest is filled in with the

    closest mode matching the requested mode and returned. The mode format and

    refresh rate default to the desktop mode if they are set to 0. The modes

    are scanned with size being first priority, format being second priority,

    and finally checking the refresh rate. If all the available modes are too

    small, then <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> is returned.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetDisplays" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetFullscreenDisplayModes(System.UInt32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool GetClosestFullscreenDisplayMode(uint displayId, int w, int h, float refreshRate, bool includeHighDensityModes, out DisplayMode closest)
    parameters:
    - id: displayId
      type: System.UInt32
      description: the instance ID of the display to query.
    - id: w
      type: System.Int32
      description: the width in pixels of the desired display mode.
    - id: h
      type: System.Int32
      description: the height in pixels of the desired display mode.
    - id: refreshRate
      type: System.Single
      description: the refresh rate of the desired display mode, or 0.0f for the desktop refresh rate.
    - id: includeHighDensityModes
      type: System.Boolean
      description: boolean to include high density modes in the search.
    - id: closest
      type: SharpSDL3.Structs.DisplayMode
      description: a pointer filled in with the closest display mode equal to or larger than the desired mode.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetClosestFullscreenDisplayMode(displayId As UInteger, w As Integer, h As Integer, refreshRate As Single, includeHighDensityModes As Boolean, closest As DisplayMode) As Boolean
  overload: SharpSDL3.Sdl.GetClosestFullscreenDisplayMode*
  nameWithType.vb: Sdl.GetClosestFullscreenDisplayMode(UInteger, Integer, Integer, Single, Boolean, DisplayMode)
  fullName.vb: SharpSDL3.Sdl.GetClosestFullscreenDisplayMode(UInteger, Integer, Integer, Single, Boolean, SharpSDL3.Structs.DisplayMode)
  name.vb: GetClosestFullscreenDisplayMode(UInteger, Integer, Integer, Single, Boolean, DisplayMode)
- uid: SharpSDL3.Sdl.GetCurrentDisplayMode(System.UInt32)
  commentId: M:SharpSDL3.Sdl.GetCurrentDisplayMode(System.UInt32)
  id: GetCurrentDisplayMode(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetCurrentDisplayMode(uint)
  nameWithType: Sdl.GetCurrentDisplayMode(uint)
  fullName: SharpSDL3.Sdl.GetCurrentDisplayMode(uint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetCurrentDisplayMode
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 1238
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get information about the current display mode.
  remarks: >-
    There's a difference between this function and

    <xref href="SharpSDL3.Sdl.GetDesktopDisplayMode(System.UInt32)" data-throw-if-not-resolved="false"></xref> when SDL runs

    fullscreen and has changed the resolution. In that case this function will

    return the current display mode, and not the previous native display mode.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetDesktopDisplayMode(System.UInt32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetDisplays" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint GetCurrentDisplayMode(uint displayId)
    parameters:
    - id: displayId
      type: System.UInt32
      description: the instance ID of the display to query.
    return:
      type: System.IntPtr
      description: (const SDL_DisplayMode *) Returns a pointer to the desktop display mode or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetCurrentDisplayMode(displayId As UInteger) As IntPtr
  overload: SharpSDL3.Sdl.GetCurrentDisplayMode*
  nameWithType.vb: Sdl.GetCurrentDisplayMode(UInteger)
  fullName.vb: SharpSDL3.Sdl.GetCurrentDisplayMode(UInteger)
  name.vb: GetCurrentDisplayMode(UInteger)
- uid: SharpSDL3.Sdl.GetCurrentDisplayMode(System.UInt32,SharpSDL3.Structs.DisplayMode@)
  commentId: M:SharpSDL3.Sdl.GetCurrentDisplayMode(System.UInt32,SharpSDL3.Structs.DisplayMode@)
  id: GetCurrentDisplayMode(System.UInt32,SharpSDL3.Structs.DisplayMode@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetCurrentDisplayMode(uint, out DisplayMode)
  nameWithType: Sdl.GetCurrentDisplayMode(uint, out DisplayMode)
  fullName: SharpSDL3.Sdl.GetCurrentDisplayMode(uint, out SharpSDL3.Structs.DisplayMode)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetCurrentDisplayMode
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 1263
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get information about the current display mode.
  remarks: >-
    There's a difference between this function and

    <xref href="SharpSDL3.Sdl.GetDesktopDisplayMode(System.UInt32)" data-throw-if-not-resolved="false"></xref> when SDL runs

    fullscreen and has changed the resolution. In that case this function will

    return the current display mode, and not the previous native display mode.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetDesktopDisplayMode(System.UInt32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetDisplays" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void GetCurrentDisplayMode(uint displayId, out DisplayMode mode)
    parameters:
    - id: displayId
      type: System.UInt32
      description: the instance ID of the display to query.
    - id: mode
      type: SharpSDL3.Structs.DisplayMode
      description: the <xref href="SharpSDL3.Structs.DisplayMode" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Shared Sub GetCurrentDisplayMode(displayId As UInteger, mode As DisplayMode)
  overload: SharpSDL3.Sdl.GetCurrentDisplayMode*
  nameWithType.vb: Sdl.GetCurrentDisplayMode(UInteger, DisplayMode)
  fullName.vb: SharpSDL3.Sdl.GetCurrentDisplayMode(UInteger, SharpSDL3.Structs.DisplayMode)
  name.vb: GetCurrentDisplayMode(UInteger, DisplayMode)
- uid: SharpSDL3.Sdl.GetCurrentDisplayOrientation(System.UInt32)
  commentId: M:SharpSDL3.Sdl.GetCurrentDisplayOrientation(System.UInt32)
  id: GetCurrentDisplayOrientation(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetCurrentDisplayOrientation(uint)
  nameWithType: Sdl.GetCurrentDisplayOrientation(uint)
  fullName: SharpSDL3.Sdl.GetCurrentDisplayOrientation(uint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetCurrentDisplayOrientation
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 1288
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the orientation of a display.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetDisplays" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static DisplayOrientation GetCurrentDisplayOrientation(uint displayId)
    parameters:
    - id: displayId
      type: System.UInt32
      description: the instance ID of the display to query.
    return:
      type: SharpSDL3.Enums.DisplayOrientation
      description: Returns theSDL_DisplayOrientation enum value of the display,  SDL_ORIENTATION_UNKNOWN if it isn'tavailable.
    content.vb: Public Shared Function GetCurrentDisplayOrientation(displayId As UInteger) As DisplayOrientation
  overload: SharpSDL3.Sdl.GetCurrentDisplayOrientation*
  nameWithType.vb: Sdl.GetCurrentDisplayOrientation(UInteger)
  fullName.vb: SharpSDL3.Sdl.GetCurrentDisplayOrientation(UInteger)
  name.vb: GetCurrentDisplayOrientation(UInteger)
- uid: SharpSDL3.Sdl.GetCurrentThreadID
  commentId: M:SharpSDL3.Sdl.GetCurrentThreadID
  id: GetCurrentThreadID
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetCurrentThreadID()
  nameWithType: Sdl.GetCurrentThreadID()
  fullName: SharpSDL3.Sdl.GetCurrentThreadID()
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetCurrentThreadID
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 1310
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the thread identifier for the current thread.
  remarks: >-
    This thread identifier is as reported by the underlying operating system.

    If SDL is running on a platform that does not support threads the return

    value will always be zero.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetThreadId(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static ulong GetCurrentThreadID()
    return:
      type: System.UInt64
      description: Returns the ID of the current thread.
    content.vb: Public Shared Function GetCurrentThreadID() As ULong
  overload: SharpSDL3.Sdl.GetCurrentThreadID*
- uid: SharpSDL3.Sdl.GetCurrentVideoDriver
  commentId: M:SharpSDL3.Sdl.GetCurrentVideoDriver
  id: GetCurrentVideoDriver
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetCurrentVideoDriver()
  nameWithType: Sdl.GetCurrentVideoDriver()
  fullName: SharpSDL3.Sdl.GetCurrentVideoDriver()
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetCurrentVideoDriver
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 1330
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the name of the currently initialized video driver.
  remarks: >-
    The names of drivers are all simple, low-ASCII identifiers, like "cocoa",

    "x11" or "windows". These never have Unicode characters, and are not meant

    to be proper names.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetNumVideoDrivers" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetVideoDriver(System.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static string GetCurrentVideoDriver()
    return:
      type: System.String
      description: Returns the name of the current video driver or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if nodriver has been initialized.
    content.vb: Public Shared Function GetCurrentVideoDriver() As String
  overload: SharpSDL3.Sdl.GetCurrentVideoDriver*
- uid: SharpSDL3.Sdl.GetDesktopDisplayMode(System.UInt32)
  commentId: M:SharpSDL3.Sdl.GetDesktopDisplayMode(System.UInt32)
  id: GetDesktopDisplayMode(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetDesktopDisplayMode(uint)
  nameWithType: Sdl.GetDesktopDisplayMode(uint)
  fullName: SharpSDL3.Sdl.GetDesktopDisplayMode(uint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetDesktopDisplayMode
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 1347
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get information about the desktop's display mode.
  remarks: >-
    There's a difference between this function and

    <xref href="SharpSDL3.Sdl.GetCurrentDisplayMode(System.UInt32)" data-throw-if-not-resolved="false"></xref> when SDL runs

    fullscreen and has changed the resolution. In that case this function will

    return the previous native display mode, and not the current display mode.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetCurrentDisplayMode(System.UInt32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetDisplays" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static DisplayMode GetDesktopDisplayMode(uint displayId)
    parameters:
    - id: displayId
      type: System.UInt32
      description: the instance ID of the display to query.
    return:
      type: SharpSDL3.Structs.DisplayMode
      description: Returns a <xref href="SharpSDL3.Structs.DisplayMode" data-throw-if-not-resolved="false"></xref> structure to the desktop display mode or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/default">default</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetDesktopDisplayMode(displayId As UInteger) As DisplayMode
  overload: SharpSDL3.Sdl.GetDesktopDisplayMode*
  nameWithType.vb: Sdl.GetDesktopDisplayMode(UInteger)
  fullName.vb: SharpSDL3.Sdl.GetDesktopDisplayMode(UInteger)
  name.vb: GetDesktopDisplayMode(UInteger)
- uid: SharpSDL3.Sdl.GetDesktopDisplayMode(System.UInt32,SharpSDL3.Structs.DisplayMode@)
  commentId: M:SharpSDL3.Sdl.GetDesktopDisplayMode(System.UInt32,SharpSDL3.Structs.DisplayMode@)
  id: GetDesktopDisplayMode(System.UInt32,SharpSDL3.Structs.DisplayMode@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetDesktopDisplayMode(uint, out DisplayMode)
  nameWithType: Sdl.GetDesktopDisplayMode(uint, out DisplayMode)
  fullName: SharpSDL3.Sdl.GetDesktopDisplayMode(uint, out SharpSDL3.Structs.DisplayMode)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetDesktopDisplayMode
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 1365
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get information about the desktop's display mode.
  remarks: >-
    There's a difference between this function and

    <xref href="SharpSDL3.Sdl.GetCurrentDisplayMode(System.UInt32)" data-throw-if-not-resolved="false"></xref> when SDL runs

    fullscreen and has changed the resolution. In that case this function will

    return the previous native display mode, and not the current display mode.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetCurrentDisplayMode(System.UInt32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetDisplays" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void GetDesktopDisplayMode(uint displayId, out DisplayMode mode)
    parameters:
    - id: displayId
      type: System.UInt32
      description: the instance ID of the display to query.
    - id: mode
      type: SharpSDL3.Structs.DisplayMode
      description: the <xref href="SharpSDL3.Structs.DisplayMode" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Sub GetDesktopDisplayMode(displayId As UInteger, mode As DisplayMode)
  overload: SharpSDL3.Sdl.GetDesktopDisplayMode*
  nameWithType.vb: Sdl.GetDesktopDisplayMode(UInteger, DisplayMode)
  fullName.vb: SharpSDL3.Sdl.GetDesktopDisplayMode(UInteger, SharpSDL3.Structs.DisplayMode)
  name.vb: GetDesktopDisplayMode(UInteger, DisplayMode)
- uid: SharpSDL3.Sdl.GetDisplayBounds(System.UInt32,SharpSDL3.Structs.Rect@)
  commentId: M:SharpSDL3.Sdl.GetDisplayBounds(System.UInt32,SharpSDL3.Structs.Rect@)
  id: GetDisplayBounds(System.UInt32,SharpSDL3.Structs.Rect@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetDisplayBounds(uint, out Rect)
  nameWithType: Sdl.GetDisplayBounds(uint, out Rect)
  fullName: SharpSDL3.Sdl.GetDisplayBounds(uint, out SharpSDL3.Structs.Rect)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetDisplayBounds
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 1392
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the desktop area represented by a display.
  remarks: >-
    The primary display is often located at (0,0), but may be placed at a

    different location depending on monitor layout.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetDisplayUsableBounds(System.UInt32%2cSharpSDL3.Structs.Rect%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetDisplays" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool GetDisplayBounds(uint displayId, out Rect rect)
    parameters:
    - id: displayId
      type: System.UInt32
      description: the instance ID of the display to query.
    - id: rect
      type: SharpSDL3.Structs.Rect
      description: the <xref href="SharpSDL3.Structs.Rect" data-throw-if-not-resolved="false"></xref> structure filled in with the display bounds.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetDisplayBounds(displayId As UInteger, rect As Rect) As Boolean
  overload: SharpSDL3.Sdl.GetDisplayBounds*
  nameWithType.vb: Sdl.GetDisplayBounds(UInteger, Rect)
  fullName.vb: SharpSDL3.Sdl.GetDisplayBounds(UInteger, SharpSDL3.Structs.Rect)
  name.vb: GetDisplayBounds(UInteger, Rect)
- uid: SharpSDL3.Sdl.GetDisplayContentScale(System.UInt32)
  commentId: M:SharpSDL3.Sdl.GetDisplayContentScale(System.UInt32)
  id: GetDisplayContentScale(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetDisplayContentScale(uint)
  nameWithType: Sdl.GetDisplayContentScale(uint)
  fullName: SharpSDL3.Sdl.GetDisplayContentScale(uint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetDisplayContentScale
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 1418
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the content scale of a display.
  remarks: >-
    The content scale is the expected scale for content based on the DPI

    settings of the display. For example, a 4K display might have a 2.0 (200%)

    display scale, which means that the user expects UI elements to be twice as

    big on this display, to aid in readability.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetWindowDisplayScale(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetDisplays" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static float GetDisplayContentScale(uint displayId)
    parameters:
    - id: displayId
      type: System.UInt32
      description: the instance ID of the display to query.
    return:
      type: System.Single
      description: Returns the content scale of the display, or 0.0f on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetDisplayContentScale(displayId As UInteger) As Single
  overload: SharpSDL3.Sdl.GetDisplayContentScale*
  nameWithType.vb: Sdl.GetDisplayContentScale(UInteger)
  fullName.vb: SharpSDL3.Sdl.GetDisplayContentScale(UInteger)
  name.vb: GetDisplayContentScale(UInteger)
- uid: SharpSDL3.Sdl.GetDisplayForPoint(SharpSDL3.Structs.Point@)
  commentId: M:SharpSDL3.Sdl.GetDisplayForPoint(SharpSDL3.Structs.Point@)
  id: GetDisplayForPoint(SharpSDL3.Structs.Point@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetDisplayForPoint(ref Point)
  nameWithType: Sdl.GetDisplayForPoint(ref Point)
  fullName: SharpSDL3.Sdl.GetDisplayForPoint(ref SharpSDL3.Structs.Point)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetDisplayForPoint
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 1439
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the display containing a point.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetDisplayBounds(System.UInt32%2cSharpSDL3.Structs.Rect%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetDisplays" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static uint GetDisplayForPoint(ref Point point)
    parameters:
    - id: point
      type: SharpSDL3.Structs.Point
      description: the point to query.
    return:
      type: System.UInt32
      description: Returns the instance ID of the displaycontaining the point or 0 on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetDisplayForPoint(point As Point) As UInteger
  overload: SharpSDL3.Sdl.GetDisplayForPoint*
  nameWithType.vb: Sdl.GetDisplayForPoint(Point)
  fullName.vb: SharpSDL3.Sdl.GetDisplayForPoint(SharpSDL3.Structs.Point)
  name.vb: GetDisplayForPoint(Point)
- uid: SharpSDL3.Sdl.GetDisplayForRect(SharpSDL3.Structs.Rect@)
  commentId: M:SharpSDL3.Sdl.GetDisplayForRect(SharpSDL3.Structs.Rect@)
  id: GetDisplayForRect(SharpSDL3.Structs.Rect@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetDisplayForRect(ref Rect)
  nameWithType: Sdl.GetDisplayForRect(ref Rect)
  fullName: SharpSDL3.Sdl.GetDisplayForRect(ref SharpSDL3.Structs.Rect)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetDisplayForRect
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 1456
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the display primarily containing a rect.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetDisplayBounds(System.UInt32%2cSharpSDL3.Structs.Rect%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetDisplays" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static uint GetDisplayForRect(ref Rect rect)
    parameters:
    - id: rect
      type: SharpSDL3.Structs.Rect
      description: the rect to query.
    return:
      type: System.UInt32
      description: Returns the instance ID of the display entirely containing the rect or closest to the center of the rect on success or 0 on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetDisplayForRect(rect As Rect) As UInteger
  overload: SharpSDL3.Sdl.GetDisplayForRect*
  nameWithType.vb: Sdl.GetDisplayForRect(Rect)
  fullName.vb: SharpSDL3.Sdl.GetDisplayForRect(SharpSDL3.Structs.Rect)
  name.vb: GetDisplayForRect(Rect)
- uid: SharpSDL3.Sdl.GetDisplayForWindow(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetDisplayForWindow(System.IntPtr)
  id: GetDisplayForWindow(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetDisplayForWindow(nint)
  nameWithType: Sdl.GetDisplayForWindow(nint)
  fullName: SharpSDL3.Sdl.GetDisplayForWindow(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetDisplayForWindow
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 1473
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the display associated with a window.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetDisplayBounds(System.UInt32%2cSharpSDL3.Structs.Rect%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetDisplays" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static uint GetDisplayForWindow(nint window)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to query.
    return:
      type: System.UInt32
      description: Returns the instance ID of the display containing the center of the window on success or 0 on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetDisplayForWindow(window As IntPtr) As UInteger
  overload: SharpSDL3.Sdl.GetDisplayForWindow*
  nameWithType.vb: Sdl.GetDisplayForWindow(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetDisplayForWindow(System.IntPtr)
  name.vb: GetDisplayForWindow(IntPtr)
- uid: SharpSDL3.Sdl.GetDisplayName(System.UInt32)
  commentId: M:SharpSDL3.Sdl.GetDisplayName(System.UInt32)
  id: GetDisplayName(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetDisplayName(uint)
  nameWithType: Sdl.GetDisplayName(uint)
  fullName: SharpSDL3.Sdl.GetDisplayName(uint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetDisplayName
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 1493
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the name of a display in UTF-8 encoding.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetDisplays" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static string GetDisplayName(uint displayId)
    parameters:
    - id: displayId
      type: System.UInt32
      description: the instance ID of the display to query.
    return:
      type: System.String
      description: Returns the name of a display or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetDisplayName(displayId As UInteger) As String
  overload: SharpSDL3.Sdl.GetDisplayName*
  nameWithType.vb: Sdl.GetDisplayName(UInteger)
  fullName.vb: SharpSDL3.Sdl.GetDisplayName(UInteger)
  name.vb: GetDisplayName(UInteger)
- uid: SharpSDL3.Sdl.GetDisplayProperties(System.UInt32)
  commentId: M:SharpSDL3.Sdl.GetDisplayProperties(System.UInt32)
  id: GetDisplayProperties(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetDisplayProperties(uint)
  nameWithType: Sdl.GetDisplayProperties(uint)
  fullName: SharpSDL3.Sdl.GetDisplayProperties(uint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetDisplayProperties
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 1513
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the properties associated with a display.
  remarks: >-
    The following read-only properties are provided by SDL:

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static uint GetDisplayProperties(uint displayId)
    parameters:
    - id: displayId
      type: System.UInt32
      description: the instance ID of the display to query.
    return:
      type: System.UInt32
      description: Returns a valid property ID on success or 0 on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetDisplayProperties(displayId As UInteger) As UInteger
  overload: SharpSDL3.Sdl.GetDisplayProperties*
  nameWithType.vb: Sdl.GetDisplayProperties(UInteger)
  fullName.vb: SharpSDL3.Sdl.GetDisplayProperties(UInteger)
  name.vb: GetDisplayProperties(UInteger)
- uid: SharpSDL3.Sdl.GetDisplays
  commentId: M:SharpSDL3.Sdl.GetDisplays
  id: GetDisplays
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetDisplays()
  nameWithType: Sdl.GetDisplays()
  fullName: SharpSDL3.Sdl.GetDisplays()
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetDisplays
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 1531
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get a list of currently connected displays.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static Span<nint> GetDisplays()
    return:
      type: System.Span{System.IntPtr}
      description: (SDL_DisplayID *) Returns a 0 terminated array of display instance IDs or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information. This should be freed with <xref href="SharpSDL3.Sdl.Free(System.IntPtr)" data-throw-if-not-resolved="false"></xref> when itis no longer needed.
    content.vb: Public Shared Function GetDisplays() As Span(Of IntPtr)
  overload: SharpSDL3.Sdl.GetDisplays*
- uid: SharpSDL3.Sdl.GetDisplays(System.Int32@)
  commentId: M:SharpSDL3.Sdl.GetDisplays(System.Int32@)
  id: GetDisplays(System.Int32@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetDisplays(out int)
  nameWithType: Sdl.GetDisplays(out int)
  fullName: SharpSDL3.Sdl.GetDisplays(out int)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetDisplays
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 1548
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get a list of currently connected displays.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static Span<nint> GetDisplays(out int count)
    parameters:
    - id: count
      type: System.Int32
      description: a pointer filled in with the number of displays returned, may bediscarded.
    return:
      type: System.Span{System.IntPtr}
      description: (SDL_DisplayID *) Returns a 0 terminated array of display instance IDs or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information. This should be freed with <xref href="SharpSDL3.Sdl.Free(System.IntPtr)" data-throw-if-not-resolved="false"></xref> when itis no longer needed.
    content.vb: Public Shared Function GetDisplays(count As Integer) As Span(Of IntPtr)
  overload: SharpSDL3.Sdl.GetDisplays*
  nameWithType.vb: Sdl.GetDisplays(Integer)
  fullName.vb: SharpSDL3.Sdl.GetDisplays(Integer)
  name.vb: GetDisplays(Integer)
- uid: SharpSDL3.Sdl.GetDisplayUsableBounds(System.UInt32,SharpSDL3.Structs.Rect@)
  commentId: M:SharpSDL3.Sdl.GetDisplayUsableBounds(System.UInt32,SharpSDL3.Structs.Rect@)
  id: GetDisplayUsableBounds(System.UInt32,SharpSDL3.Structs.Rect@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetDisplayUsableBounds(uint, out Rect)
  nameWithType: Sdl.GetDisplayUsableBounds(uint, out Rect)
  fullName: SharpSDL3.Sdl.GetDisplayUsableBounds(uint, out SharpSDL3.Structs.Rect)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetDisplayUsableBounds
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 1574
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the usable desktop area represented by a display, in screen coordinates.
  remarks: >-
    This is the same area as <xref href="SharpSDL3.Sdl.GetDisplayBounds(System.UInt32%2cSharpSDL3.Structs.Rect%40)" data-throw-if-not-resolved="false"></xref>

    reports, but with portions reserved by the system removed. For example, on

    Apple's macOS, this subtracts the area occupied by the menu bar and dock.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetDisplayBounds(System.UInt32%2cSharpSDL3.Structs.Rect%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetDisplays" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool GetDisplayUsableBounds(uint displayId, out Rect rect)
    parameters:
    - id: displayId
      type: System.UInt32
      description: the instance ID of the display to query.
    - id: rect
      type: SharpSDL3.Structs.Rect
      description: the <xref href="SharpSDL3.Structs.Rect" data-throw-if-not-resolved="false"></xref> structure filled in with the display bounds.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetDisplayUsableBounds(displayId As UInteger, rect As Rect) As Boolean
  overload: SharpSDL3.Sdl.GetDisplayUsableBounds*
  nameWithType.vb: Sdl.GetDisplayUsableBounds(UInteger, Rect)
  fullName.vb: SharpSDL3.Sdl.GetDisplayUsableBounds(UInteger, SharpSDL3.Structs.Rect)
  name.vb: GetDisplayUsableBounds(UInteger, Rect)
- uid: SharpSDL3.Sdl.GetError
  commentId: M:SharpSDL3.Sdl.GetError
  id: GetError
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetError()
  nameWithType: Sdl.GetError()
  fullName: SharpSDL3.Sdl.GetError()
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetError
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 1597
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Retrieve a message about the last error that occurred on the current thread.
  remarks: >-
    It is possible for multiple errors to occur before calling/ <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref>. Only the last error is returned.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.ClearError" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetError(System.String%2cSystem.Object%5b%5d)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static string GetError()
    return:
      type: System.String
      description: Returns a message with information about the specific error that occurred, or an empty string if there hasn't been an error message set since the last call to <xref href="SharpSDL3.Sdl.ClearError" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function GetError() As String
  overload: SharpSDL3.Sdl.GetError*
- uid: SharpSDL3.Sdl.GetFloatProperty(System.UInt32,System.String,System.Single)
  commentId: M:SharpSDL3.Sdl.GetFloatProperty(System.UInt32,System.String,System.Single)
  id: GetFloatProperty(System.UInt32,System.String,System.Single)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetFloatProperty(uint, string, float)
  nameWithType: Sdl.GetFloatProperty(uint, string, float)
  fullName: SharpSDL3.Sdl.GetFloatProperty(uint, string, float)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetFloatProperty
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 1617
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get a floating point property from a group of properties.
  remarks: >-
    You can use <xref href="SharpSDL3.Sdl.GetPropertyType(System.UInt32%2cSystem.String)" data-throw-if-not-resolved="false"></xref> to query whether

    the property exists and is a floating point property.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetPropertyType(System.UInt32%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.HasProperty(System.UInt32%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetFloatProperty(System.UInt32%2cSystem.String%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static float GetFloatProperty(uint props, string name, float defaultValue)
    parameters:
    - id: props
      type: System.UInt32
      description: the properties to query.
    - id: name
      type: System.String
      description: the name of the property to query.
    - id: defaultValue
      type: System.Single
      description: the default value of the property.
    return:
      type: System.Single
      description: Returns the value of the property, or default_value if it is not set or not a float property.
    content.vb: Public Shared Function GetFloatProperty(props As UInteger, name As String, defaultValue As Single) As Single
  overload: SharpSDL3.Sdl.GetFloatProperty*
  nameWithType.vb: Sdl.GetFloatProperty(UInteger, String, Single)
  fullName.vb: SharpSDL3.Sdl.GetFloatProperty(UInteger, String, Single)
  name.vb: GetFloatProperty(UInteger, String, Single)
- uid: SharpSDL3.Sdl.GetFullscreenDisplayModes(System.UInt32)
  commentId: M:SharpSDL3.Sdl.GetFullscreenDisplayModes(System.UInt32)
  id: GetFullscreenDisplayModes(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetFullscreenDisplayModes(uint)
  nameWithType: Sdl.GetFullscreenDisplayModes(uint)
  fullName: SharpSDL3.Sdl.GetFullscreenDisplayModes(uint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetFullscreenDisplayModes
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 1639
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get a list of fullscreen display modes available on a display.
  remarks: >-
    The display modes are sorted in this priority:

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetDisplays" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static Span<int> GetFullscreenDisplayModes(uint displayId)
    parameters:
    - id: displayId
      type: System.UInt32
      description: the instance ID of the display to query.
    return:
      type: System.Span{System.Int32}
      description: (SDL_DisplayMode **) Returns a <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> terminated array of display mode pointers or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information. This is a singleallocation that should be freed with <xref href="SharpSDL3.Sdl.Free(System.IntPtr)" data-throw-if-not-resolved="false"></xref> when it is nolonger needed.
    content.vb: Public Shared Function GetFullscreenDisplayModes(displayId As UInteger) As Span(Of Integer)
  overload: SharpSDL3.Sdl.GetFullscreenDisplayModes*
  nameWithType.vb: Sdl.GetFullscreenDisplayModes(UInteger)
  fullName.vb: SharpSDL3.Sdl.GetFullscreenDisplayModes(UInteger)
  name.vb: GetFullscreenDisplayModes(UInteger)
- uid: SharpSDL3.Sdl.GetFullscreenDisplayModes(System.UInt32,System.Int32@)
  commentId: M:SharpSDL3.Sdl.GetFullscreenDisplayModes(System.UInt32,System.Int32@)
  id: GetFullscreenDisplayModes(System.UInt32,System.Int32@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetFullscreenDisplayModes(uint, out int)
  nameWithType: Sdl.GetFullscreenDisplayModes(uint, out int)
  fullName: SharpSDL3.Sdl.GetFullscreenDisplayModes(uint, out int)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetFullscreenDisplayModes
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 1668
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get a list of fullscreen display modes available on a display.
  remarks: >-
    The display modes are sorted in this priority:

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetDisplays" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static Span<nint> GetFullscreenDisplayModes(uint displayId, out int count)
    parameters:
    - id: displayId
      type: System.UInt32
      description: the instance ID of the display to query.
    - id: count
      type: System.Int32
      description: a pointer filled in with the number of display modes returned, may be discarded.
    return:
      type: System.Span{System.IntPtr}
      description: (SDL_DisplayMode **) Returns a <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> terminated array of display mode pointers or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information. This is a single allocation that should be freed with <xref href="SharpSDL3.Sdl.Free(System.IntPtr)" data-throw-if-not-resolved="false"></xref> when it is no longer needed.
    content.vb: Public Shared Function GetFullscreenDisplayModes(displayId As UInteger, count As Integer) As Span(Of IntPtr)
  overload: SharpSDL3.Sdl.GetFullscreenDisplayModes*
  nameWithType.vb: Sdl.GetFullscreenDisplayModes(UInteger, Integer)
  fullName.vb: SharpSDL3.Sdl.GetFullscreenDisplayModes(UInteger, Integer)
  name.vb: GetFullscreenDisplayModes(UInteger, Integer)
- uid: SharpSDL3.Sdl.GetGlobalProperties
  commentId: M:SharpSDL3.Sdl.GetGlobalProperties
  id: GetGlobalProperties
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetGlobalProperties()
  nameWithType: Sdl.GetGlobalProperties()
  fullName: SharpSDL3.Sdl.GetGlobalProperties()
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetGlobalProperties
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 1691
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the global SDL properties.
  remarks: <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static uint GetGlobalProperties()
    return:
      type: System.UInt32
      description: Returns a valid property ID on success or 0 on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetGlobalProperties() As UInteger
  overload: SharpSDL3.Sdl.GetGlobalProperties*
- uid: SharpSDL3.Sdl.GetGrabbedWindow
  commentId: M:SharpSDL3.Sdl.GetGrabbedWindow
  id: GetGrabbedWindow
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetGrabbedWindow()
  nameWithType: Sdl.GetGrabbedWindow()
  fullName: SharpSDL3.Sdl.GetGrabbedWindow()
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetGrabbedWindow
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 1703
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the window that currently has an input grab enabled.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetWindowMouseGrab(System.IntPtr%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetWindowKeyboardGrab(System.IntPtr%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint GetGrabbedWindow()
    return:
      type: System.IntPtr
      description: (SDL_Window *) Returns the window if input is grabbed or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>otherwise.
    content.vb: Public Shared Function GetGrabbedWindow() As IntPtr
  overload: SharpSDL3.Sdl.GetGrabbedWindow*
- uid: SharpSDL3.Sdl.GetHint(System.String)
  commentId: M:SharpSDL3.Sdl.GetHint(System.String)
  id: GetHint(System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetHint(string)
  nameWithType: Sdl.GetHint(string)
  fullName: SharpSDL3.Sdl.GetHint(string)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetHint
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 1720
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the value of a hint.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread, however the return value only remains valid until the hint is changed; if another thread might doso, the app should supply locks and/or make a copy of the string. Note that using a hint callback instead is always thread-safe, as SDL holds a lock onthe thread subsystem during the callback.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetHint(System.String%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetHintWithPriority(System.String%2cSystem.String%2cSharpSDL3.Enums.HintPriority)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static string GetHint(string name)
    parameters:
    - id: name
      type: System.String
      description: the hint to query.
    return:
      type: System.String
      description: Returns the string value of a hint or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if the hint isn't set.
    content.vb: Public Shared Function GetHint(name As String) As String
  overload: SharpSDL3.Sdl.GetHint*
  nameWithType.vb: Sdl.GetHint(String)
  fullName.vb: SharpSDL3.Sdl.GetHint(String)
  name.vb: GetHint(String)
- uid: SharpSDL3.Sdl.GetHintBoolean(System.String,System.Boolean)
  commentId: M:SharpSDL3.Sdl.GetHintBoolean(System.String,System.Boolean)
  id: GetHintBoolean(System.String,System.Boolean)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetHintBoolean(string, bool)
  nameWithType: Sdl.GetHintBoolean(string, bool)
  fullName: SharpSDL3.Sdl.GetHintBoolean(string, bool)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetHintBoolean
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 1743
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the boolean value of a hint variable.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetHint(System.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetHint(System.String%2cSystem.String)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool GetHintBoolean(string name, bool defaultValue)
    parameters:
    - id: name
      type: System.String
      description: the name of the hint to get the boolean value from.
    - id: defaultValue
      type: System.Boolean
      description: the value to return if the hint does not exist.
    return:
      type: System.Boolean
      description: Returns the boolean value of a hint or the provided default value if the hint does not exist.
    content.vb: Public Shared Function GetHintBoolean(name As String, defaultValue As Boolean) As Boolean
  overload: SharpSDL3.Sdl.GetHintBoolean*
  nameWithType.vb: Sdl.GetHintBoolean(String, Boolean)
  fullName.vb: SharpSDL3.Sdl.GetHintBoolean(String, Boolean)
  name.vb: GetHintBoolean(String, Boolean)
- uid: SharpSDL3.Sdl.GetKeyboards(System.Int32@)
  commentId: M:SharpSDL3.Sdl.GetKeyboards(System.Int32@)
  id: GetKeyboards(System.Int32@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetKeyboards(out int)
  nameWithType: Sdl.GetKeyboards(out int)
  fullName: SharpSDL3.Sdl.GetKeyboards(out int)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetKeyboards
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 1766
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get a list of currently connected keyboards.
  remarks: >-
    Note that this will include any device or virtual driver that includes keyboard functionality, including some mice, KVM switches, motherboard power buttons, etc.

    <p>You should wait for input from a device before you consider it actively in use.</p>

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0</p>
  example: []
  syntax:
    content: public static nint GetKeyboards(out int count)
    parameters:
    - id: count
      type: System.Int32
      description: the number of keyboards returned, may be discarded.
    return:
      type: System.IntPtr
      description: (SDL_KeyboardID *) Returns a 0 terminated array of keyboards instance IDs or <xref href="System.IntPtr.Zero" data-throw-if-not-resolved="false"></xref> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information. This should be freed with <xref href="SharpSDL3.Sdl.Free(System.IntPtr)" data-throw-if-not-resolved="false"></xref> when it is no longer needed.
    content.vb: Public Shared Function GetKeyboards(count As Integer) As IntPtr
  overload: SharpSDL3.Sdl.GetKeyboards*
  nameWithType.vb: Sdl.GetKeyboards(Integer)
  fullName.vb: SharpSDL3.Sdl.GetKeyboards(Integer)
  name.vb: GetKeyboards(Integer)
- uid: SharpSDL3.Sdl.GetKeyboards
  commentId: M:SharpSDL3.Sdl.GetKeyboards
  id: GetKeyboards
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetKeyboards()
  nameWithType: Sdl.GetKeyboards()
  fullName: SharpSDL3.Sdl.GetKeyboards()
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetKeyboards
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 1785
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get a list of currently connected keyboards.
  remarks: >-
    Note that this will include any device or virtual driver that includes keyboard functionality, including some mice, KVM switches, motherboard power buttons, etc.

    <p>You should wait for input from a device before you consider it actively in use.</p>

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0</p>
  example: []
  syntax:
    content: public static Span<nint> GetKeyboards()
    return:
      type: System.Span{System.IntPtr}
      description: (SDL_KeyboardID *) Returns a 0 terminated array of keyboards instance IDs or <xref href="System.IntPtr.Zero" data-throw-if-not-resolved="false"></xref> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information. This should be freed with <xref href="SharpSDL3.Sdl.Free(System.IntPtr)" data-throw-if-not-resolved="false"></xref> when it is no longer needed.
    content.vb: Public Shared Function GetKeyboards() As Span(Of IntPtr)
  overload: SharpSDL3.Sdl.GetKeyboards*
- uid: SharpSDL3.Sdl.GetKeyboardFocus
  commentId: M:SharpSDL3.Sdl.GetKeyboardFocus
  id: GetKeyboardFocus
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetKeyboardFocus()
  nameWithType: Sdl.GetKeyboardFocus()
  fullName: SharpSDL3.Sdl.GetKeyboardFocus()
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetKeyboardFocus
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 1809
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Query the window which currently has keyboard focus.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static nint GetKeyboardFocus()
    return:
      type: System.IntPtr
      description: (SDL_Window *) Returns the window with keyboard focus.
    content.vb: Public Shared Function GetKeyboardFocus() As IntPtr
  overload: SharpSDL3.Sdl.GetKeyboardFocus*
- uid: SharpSDL3.Sdl.GetKeyboardNameForId(System.UInt32)
  commentId: M:SharpSDL3.Sdl.GetKeyboardNameForId(System.UInt32)
  id: GetKeyboardNameForId(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetKeyboardNameForId(uint)
  nameWithType: Sdl.GetKeyboardNameForId(uint)
  fullName: SharpSDL3.Sdl.GetKeyboardNameForId(uint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetKeyboardNameForId
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 1826
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the name of a keyboard.
  remarks: >-
    This function returns "" if the keyboard doesn't have a name.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetKeyboards(System.Int32%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static string GetKeyboardNameForId(uint instanceId)
    parameters:
    - id: instanceId
      type: System.UInt32
      description: the keyboard instance ID.
    return:
      type: System.String
      description: Returns the name of the selected keyboard or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetKeyboardNameForId(instanceId As UInteger) As String
  overload: SharpSDL3.Sdl.GetKeyboardNameForId*
  nameWithType.vb: Sdl.GetKeyboardNameForId(UInteger)
  fullName.vb: SharpSDL3.Sdl.GetKeyboardNameForId(UInteger)
  name.vb: GetKeyboardNameForId(UInteger)
- uid: SharpSDL3.Sdl.GetKeyboardState(System.Int32@)
  commentId: M:SharpSDL3.Sdl.GetKeyboardState(System.Int32@)
  id: GetKeyboardState(System.Int32@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetKeyboardState(out int)
  nameWithType: Sdl.GetKeyboardState(out int)
  fullName: SharpSDL3.Sdl.GetKeyboardState(out int)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetKeyboardState
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 1849
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get a snapshot of the current state of the keyboard.
  remarks: >-
    The pointer returned is a pointer to an internal SDL array. It will be

    valid for the whole lifetime of the application and should not be freed by the caller.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.PumpEvents" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.ResetKeyboard" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static Span<bool> GetKeyboardState(out int numkeys)
    parameters:
    - id: numkeys
      type: System.Int32
      description: if non-<a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>, receives the length of the returned array.
    return:
      type: System.Span{System.Boolean}
      description: (const bool *) Returns a pointer to an array of key states.
    content.vb: Public Shared Function GetKeyboardState(numkeys As Integer) As Span(Of Boolean)
  overload: SharpSDL3.Sdl.GetKeyboardState*
  nameWithType.vb: Sdl.GetKeyboardState(Integer)
  fullName.vb: SharpSDL3.Sdl.GetKeyboardState(Integer)
  name.vb: GetKeyboardState(Integer)
- uid: SharpSDL3.Sdl.GetKeyFromName(System.String)
  commentId: M:SharpSDL3.Sdl.GetKeyFromName(System.String)
  id: GetKeyFromName(System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetKeyFromName(string)
  nameWithType: Sdl.GetKeyFromName(string)
  fullName: SharpSDL3.Sdl.GetKeyFromName(string)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetKeyFromName
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 1880
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get a key code from a human-readable name.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetKeyFromScancode(SharpSDL3.Enums.Scancode%2cSharpSDL3.Enums.KeyMod%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetKeyName(SharpSDL3.Enums.Keycode)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetScancodeFromName(System.String)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static Keycode GetKeyFromName(string name)
    parameters:
    - id: name
      type: System.String
      description: the human-readable key name.
    return:
      type: SharpSDL3.Enums.Keycode
      description: Returns <xref href="SharpSDL3.Enums.Keycode" data-throw-if-not-resolved="false"></xref>, or <xref href="SharpSDL3.Enums.Keycode.Unknown" data-throw-if-not-resolved="false"></xref> if the name wasn't recognized; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetKeyFromName(name As String) As Keycode
  overload: SharpSDL3.Sdl.GetKeyFromName*
  nameWithType.vb: Sdl.GetKeyFromName(String)
  fullName.vb: SharpSDL3.Sdl.GetKeyFromName(String)
  name.vb: GetKeyFromName(String)
- uid: SharpSDL3.Sdl.GetKeyFromScancode(SharpSDL3.Enums.Scancode,SharpSDL3.Enums.KeyMod,System.Boolean)
  commentId: M:SharpSDL3.Sdl.GetKeyFromScancode(SharpSDL3.Enums.Scancode,SharpSDL3.Enums.KeyMod,System.Boolean)
  id: GetKeyFromScancode(SharpSDL3.Enums.Scancode,SharpSDL3.Enums.KeyMod,System.Boolean)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetKeyFromScancode(Scancode, KeyMod, bool)
  nameWithType: Sdl.GetKeyFromScancode(Scancode, KeyMod, bool)
  fullName: SharpSDL3.Sdl.GetKeyFromScancode(SharpSDL3.Enums.Scancode, SharpSDL3.Enums.KeyMod, bool)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetKeyFromScancode
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 1907
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the key code corresponding to the given scancode according to the current keyboard layout.
  remarks: >-
    If you want to get the keycode as it would be delivered in key events,

    including options specified in

    SDL_HINT_KEYCODE_OPTIONS, then you should pass <code class="paramref">keyEvent</code> as <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>. Otherwise this function simply translates the scancode based on the given modifier state.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetKeyName(SharpSDL3.Enums.Keycode)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetScancodeFromKey(System.UInt32%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static uint GetKeyFromScancode(Scancode scanCode, KeyMod modstate, bool keyEvent)
    parameters:
    - id: scanCode
      type: SharpSDL3.Enums.Scancode
      description: the desired SDL_Scancode to query.
    - id: modstate
      type: SharpSDL3.Enums.KeyMod
      description: the modifier state to use when translating the scancode to a keycode.
    - id: keyEvent
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the keycode will be used in key events.
    return:
      type: System.UInt32
      description: Returns the <xref href="SharpSDL3.Enums.Keycode" data-throw-if-not-resolved="false"></xref> that corresponds to the given <xref href="SharpSDL3.Enums.Scancode" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function GetKeyFromScancode(scanCode As Scancode, modstate As KeyMod, keyEvent As Boolean) As UInteger
  overload: SharpSDL3.Sdl.GetKeyFromScancode*
  nameWithType.vb: Sdl.GetKeyFromScancode(Scancode, KeyMod, Boolean)
  fullName.vb: SharpSDL3.Sdl.GetKeyFromScancode(SharpSDL3.Enums.Scancode, SharpSDL3.Enums.KeyMod, Boolean)
  name.vb: GetKeyFromScancode(Scancode, KeyMod, Boolean)
- uid: SharpSDL3.Sdl.GetKeyName(SharpSDL3.Enums.Keycode)
  commentId: M:SharpSDL3.Sdl.GetKeyName(SharpSDL3.Enums.Keycode)
  id: GetKeyName(SharpSDL3.Enums.Keycode)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetKeyName(Keycode)
  nameWithType: Sdl.GetKeyName(Keycode)
  fullName: SharpSDL3.Sdl.GetKeyName(SharpSDL3.Enums.Keycode)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetKeyName
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 1930
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get a human-readable name for a key.
  remarks: >-
    If the key doesn't have a name, this function returns an empty string ("").

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetKeyFromName(System.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetKeyFromScancode(SharpSDL3.Enums.Scancode%2cSharpSDL3.Enums.KeyMod%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetScancodeFromKey(System.UInt32%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static string GetKeyName(Keycode key)
    parameters:
    - id: key
      type: SharpSDL3.Enums.Keycode
      description: the desired <xref href="SharpSDL3.Enums.Keycode" data-throw-if-not-resolved="false"></xref> to query.
    return:
      type: System.String
      description: Returns a UTF-8 encoded string of the key name.
    content.vb: Public Shared Function GetKeyName(key As Keycode) As String
  overload: SharpSDL3.Sdl.GetKeyName*
- uid: SharpSDL3.Sdl.GetMasksForPixelFormat(SharpSDL3.Enums.PixelFormat,System.Int32@,System.UInt32@,System.UInt32@,System.UInt32@,System.UInt32@)
  commentId: M:SharpSDL3.Sdl.GetMasksForPixelFormat(SharpSDL3.Enums.PixelFormat,System.Int32@,System.UInt32@,System.UInt32@,System.UInt32@,System.UInt32@)
  id: GetMasksForPixelFormat(SharpSDL3.Enums.PixelFormat,System.Int32@,System.UInt32@,System.UInt32@,System.UInt32@,System.UInt32@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetMasksForPixelFormat(PixelFormat, out int, out uint, out uint, out uint, out uint)
  nameWithType: Sdl.GetMasksForPixelFormat(PixelFormat, out int, out uint, out uint, out uint, out uint)
  fullName: SharpSDL3.Sdl.GetMasksForPixelFormat(SharpSDL3.Enums.PixelFormat, out int, out uint, out uint, out uint, out uint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetMasksForPixelFormat
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 1955
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Convert one of the enumerated pixel formats to a bpp value and RGBA masks.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetPixelFormatForMasks(System.Int32%2cSystem.UInt32%2cSystem.UInt32%2cSystem.UInt32%2cSystem.UInt32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool GetMasksForPixelFormat(PixelFormat format, out int bpp, out uint rmask, out uint gmask, out uint bmask, out uint amask)
    parameters:
    - id: format
      type: SharpSDL3.Enums.PixelFormat
      description: one of the <xref href="SharpSDL3.Enums.PixelFormat" data-throw-if-not-resolved="false"></xref> values.
    - id: bpp
      type: System.Int32
      description: a bits per pixel value; usually 15, 16, or 32.
    - id: rmask
      type: System.UInt32
      description: a pointer filled in with the red mask for the format.
    - id: gmask
      type: System.UInt32
      description: a pointer filled in with the green mask for the format.
    - id: bmask
      type: System.UInt32
      description: a pointer filled in with the blue mask for the format.
    - id: amask
      type: System.UInt32
      description: a pointer filled in with the alpha mask for the format.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetMasksForPixelFormat(format As PixelFormat, bpp As Integer, rmask As UInteger, gmask As UInteger, bmask As UInteger, amask As UInteger) As Boolean
  overload: SharpSDL3.Sdl.GetMasksForPixelFormat*
  nameWithType.vb: Sdl.GetMasksForPixelFormat(PixelFormat, Integer, UInteger, UInteger, UInteger, UInteger)
  fullName.vb: SharpSDL3.Sdl.GetMasksForPixelFormat(SharpSDL3.Enums.PixelFormat, Integer, UInteger, UInteger, UInteger, UInteger)
  name.vb: GetMasksForPixelFormat(PixelFormat, Integer, UInteger, UInteger, UInteger, UInteger)
- uid: SharpSDL3.Sdl.GetModState
  commentId: M:SharpSDL3.Sdl.GetModState
  id: GetModState
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetModState()
  nameWithType: Sdl.GetModState()
  fullName: SharpSDL3.Sdl.GetModState()
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetModState
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 1981
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the current key modifier state for the keyboard.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetKeyboardState(System.Int32%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetModState(SharpSDL3.Enums.KeyMod)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static KeyMod GetModState()
    return:
      type: SharpSDL3.Enums.KeyMod
      description: Returns an OR'd combination of the modifier keys for the keyboard. See <xref href="SharpSDL3.Enums.KeyMod" data-throw-if-not-resolved="false"></xref> for details.
    content.vb: Public Shared Function GetModState() As KeyMod
  overload: SharpSDL3.Sdl.GetModState*
- uid: SharpSDL3.Sdl.GetNaturalDisplayOrientation(System.UInt32)
  commentId: M:SharpSDL3.Sdl.GetNaturalDisplayOrientation(System.UInt32)
  id: GetNaturalDisplayOrientation(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetNaturalDisplayOrientation(uint)
  nameWithType: Sdl.GetNaturalDisplayOrientation(uint)
  fullName: SharpSDL3.Sdl.GetNaturalDisplayOrientation(uint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetNaturalDisplayOrientation
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 1993
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the orientation of a display when it is unrotated.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetDisplays" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static DisplayOrientation GetNaturalDisplayOrientation(uint displayId)
    parameters:
    - id: displayId
      type: System.UInt32
      description: the instance ID of the display to query.
    return:
      type: SharpSDL3.Enums.DisplayOrientation
      description: Returns the <xref href="SharpSDL3.Enums.DisplayOrientation" data-throw-if-not-resolved="false"></xref> enum value of the display, or <xref href="SharpSDL3.Enums.DisplayOrientation.Unknown" data-throw-if-not-resolved="false"></xref> if it isn't available.
    content.vb: Public Shared Function GetNaturalDisplayOrientation(displayId As UInteger) As DisplayOrientation
  overload: SharpSDL3.Sdl.GetNaturalDisplayOrientation*
  nameWithType.vb: Sdl.GetNaturalDisplayOrientation(UInteger)
  fullName.vb: SharpSDL3.Sdl.GetNaturalDisplayOrientation(UInteger)
  name.vb: GetNaturalDisplayOrientation(UInteger)
- uid: SharpSDL3.Sdl.GetNumberProperty(System.UInt32,System.String,System.Int64)
  commentId: M:SharpSDL3.Sdl.GetNumberProperty(System.UInt32,System.String,System.Int64)
  id: GetNumberProperty(System.UInt32,System.String,System.Int64)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetNumberProperty(uint, string, long)
  nameWithType: Sdl.GetNumberProperty(uint, string, long)
  fullName: SharpSDL3.Sdl.GetNumberProperty(uint, string, long)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetNumberProperty
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 2018
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get a number property from a group of properties.
  remarks: >-
    You can use <xref href="SharpSDL3.Sdl.GetPropertyType(System.UInt32%2cSystem.String)" data-throw-if-not-resolved="false"></xref> to query whether the property exists and is a number property.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetPropertyType(System.UInt32%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.HasProperty(System.UInt32%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetNumberProperty(System.UInt32%2cSystem.String%2cSystem.Int64)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static long GetNumberProperty(uint props, string name, long defaultValue)
    parameters:
    - id: props
      type: System.UInt32
      description: the properties to query.
    - id: name
      type: System.String
      description: the name of the property to query.
    - id: defaultValue
      type: System.Int64
      description: the default value of the property.
    return:
      type: System.Int64
      description: Returns the value of the property, or <code class="paramref">defaultValue</code> if it is not set or not a number property.
    content.vb: Public Shared Function GetNumberProperty(props As UInteger, name As String, defaultValue As Long) As Long
  overload: SharpSDL3.Sdl.GetNumberProperty*
  nameWithType.vb: Sdl.GetNumberProperty(UInteger, String, Long)
  fullName.vb: SharpSDL3.Sdl.GetNumberProperty(UInteger, String, Long)
  name.vb: GetNumberProperty(UInteger, String, Long)
- uid: SharpSDL3.Sdl.GetNumVideoDrivers
  commentId: M:SharpSDL3.Sdl.GetNumVideoDrivers
  id: GetNumVideoDrivers
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetNumVideoDrivers()
  nameWithType: Sdl.GetNumVideoDrivers()
  fullName: SharpSDL3.Sdl.GetNumVideoDrivers()
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetNumVideoDrivers
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 2037
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the number of video drivers compiled into SDL.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetVideoDriver(System.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static int GetNumVideoDrivers()
    return:
      type: System.Int32
      description: Returns the number of built in video drivers.
    content.vb: Public Shared Function GetNumVideoDrivers() As Integer
  overload: SharpSDL3.Sdl.GetNumVideoDrivers*
- uid: SharpSDL3.Sdl.GetPixelFormatDetails(SharpSDL3.Enums.PixelFormat)
  commentId: M:SharpSDL3.Sdl.GetPixelFormatDetails(SharpSDL3.Enums.PixelFormat)
  id: GetPixelFormatDetails(SharpSDL3.Enums.PixelFormat)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetPixelFormatDetails(PixelFormat)
  nameWithType: Sdl.GetPixelFormatDetails(PixelFormat)
  fullName: SharpSDL3.Sdl.GetPixelFormatDetails(SharpSDL3.Enums.PixelFormat)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetPixelFormatDetails
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 2056
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Create an <xref href="SharpSDL3.Enums.PixelFormat" data-throw-if-not-resolved="false"></xref>Details structure corresponding to a pixel format.
  remarks: >-
    Returned structure may come from a shared global cache (i.e. not newly allocated),

    and hence should not be modified, especially the palette.

    Weird errors such as Blit combination not supported may occur.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static nint GetPixelFormatDetails(PixelFormat format)
    parameters:
    - id: format
      type: SharpSDL3.Enums.PixelFormat
      description: one of the <xref href="SharpSDL3.Enums.PixelFormat" data-throw-if-not-resolved="false"></xref> values.
    return:
      type: System.IntPtr
      description: (const <xref href="SharpSDL3.Enums.PixelFormat" data-throw-if-not-resolved="false"></xref>Details *) Returns apointer to a <xref href="SharpSDL3.Enums.PixelFormat" data-throw-if-not-resolved="false"></xref>Details structure or<a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetPixelFormatDetails(format As PixelFormat) As IntPtr
  overload: SharpSDL3.Sdl.GetPixelFormatDetails*
- uid: SharpSDL3.Sdl.GetPixelFormatForMasks(System.Int32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)
  commentId: M:SharpSDL3.Sdl.GetPixelFormatForMasks(System.Int32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)
  id: GetPixelFormatForMasks(System.Int32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetPixelFormatForMasks(int, uint, uint, uint, uint)
  nameWithType: Sdl.GetPixelFormatForMasks(int, uint, uint, uint, uint)
  fullName: SharpSDL3.Sdl.GetPixelFormatForMasks(int, uint, uint, uint, uint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetPixelFormatForMasks
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 2081
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Convert a bpp value and RGBA masks to an enumerated pixel format.
  remarks: >-
    This will return <xref href="SharpSDL3.Enums.PixelFormat.Unknown" data-throw-if-not-resolved="false"></xref> if the conversion wasn't possible.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetMasksForPixelFormat(SharpSDL3.Enums.PixelFormat%2cSystem.Int32%40%2cSystem.UInt32%40%2cSystem.UInt32%40%2cSystem.UInt32%40%2cSystem.UInt32%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static PixelFormat GetPixelFormatForMasks(int bpp, uint rmask, uint gmask, uint bmask, uint amask)
    parameters:
    - id: bpp
      type: System.Int32
      description: a bits per pixel value; usually 15, 16, or 32.
    - id: rmask
      type: System.UInt32
      description: the red mask for the format.
    - id: gmask
      type: System.UInt32
      description: the green mask for the format.
    - id: bmask
      type: System.UInt32
      description: the blue mask for the format.
    - id: amask
      type: System.UInt32
      description: the alpha mask for the format.
    return:
      type: SharpSDL3.Enums.PixelFormat
      description: Returns the<xref href="SharpSDL3.Enums.PixelFormat" data-throw-if-not-resolved="false"></xref> value corresponding to the format masks, or <xref href="SharpSDL3.Enums.PixelFormat.Unknown" data-throw-if-not-resolved="false"></xref> if there isn't a match.
    content.vb: Public Shared Function GetPixelFormatForMasks(bpp As Integer, rmask As UInteger, gmask As UInteger, bmask As UInteger, amask As UInteger) As PixelFormat
  overload: SharpSDL3.Sdl.GetPixelFormatForMasks*
  nameWithType.vb: Sdl.GetPixelFormatForMasks(Integer, UInteger, UInteger, UInteger, UInteger)
  fullName.vb: SharpSDL3.Sdl.GetPixelFormatForMasks(Integer, UInteger, UInteger, UInteger, UInteger)
  name.vb: GetPixelFormatForMasks(Integer, UInteger, UInteger, UInteger, UInteger)
- uid: SharpSDL3.Sdl.GetPixelFormatName(SharpSDL3.Enums.PixelFormat)
  commentId: M:SharpSDL3.Sdl.GetPixelFormatName(SharpSDL3.Enums.PixelFormat)
  id: GetPixelFormatName(SharpSDL3.Enums.PixelFormat)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetPixelFormatName(PixelFormat)
  nameWithType: Sdl.GetPixelFormatName(PixelFormat)
  fullName: SharpSDL3.Sdl.GetPixelFormatName(SharpSDL3.Enums.PixelFormat)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetPixelFormatName
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 2100
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the human readable name of a pixel format.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static string GetPixelFormatName(PixelFormat format)
    parameters:
    - id: format
      type: SharpSDL3.Enums.PixelFormat
      description: the pixel format to query.
    return:
      type: System.String
      description: Returns the human readable name of the specified pixel format or "<xref href="SharpSDL3.Enums.PixelFormat.Unknown" data-throw-if-not-resolved="false"></xref>" if the format isn't recognized.
    content.vb: Public Shared Function GetPixelFormatName(format As PixelFormat) As String
  overload: SharpSDL3.Sdl.GetPixelFormatName*
- uid: SharpSDL3.Sdl.GetPointerProperty(System.UInt32,System.String,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetPointerProperty(System.UInt32,System.String,System.IntPtr)
  id: GetPointerProperty(System.UInt32,System.String,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetPointerProperty(uint, string, nint)
  nameWithType: Sdl.GetPointerProperty(uint, string, nint)
  fullName: SharpSDL3.Sdl.GetPointerProperty(uint, string, nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetPointerProperty
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 2133
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get a pointer property from a group of properties.
  remarks: >-
    By convention, the names of properties that SDL exposes on objects will

    start with "SDL.", and properties that SDL uses internally will start with

    "SDL.internal.". These should be considered read-only and should not be

    modified by applications.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread, although the data returned is not protected and could potentially be freed if you call <xref href="SharpSDL3.Sdl.SetPointerProperty(System.UInt32%2cSystem.String%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref> or <xref href="SharpSDL3.Sdl.ClearProperty(System.UInt32%2cSystem.String)" data-throw-if-not-resolved="false"></xref> on these properties from another thread.</p>

    <p>If you need to avoid this, use <xref href="SharpSDL3.Sdl.LockProperties(System.UInt32)" data-throw-if-not-resolved="false"></xref> an <xref href="SharpSDL3.Sdl.UnlockProperties(System.UInt32)" data-throw-if-not-resolved="false"></xref>.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetBooleanProperty(System.UInt32%2cSystem.String%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetFloatProperty(System.UInt32%2cSystem.String%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetNumberProperty(System.UInt32%2cSystem.String%2cSystem.Int64)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetPropertyType(System.UInt32%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetStringProperty(System.UInt32%2cSystem.String%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.HasProperty(System.UInt32%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetPointerProperty(System.UInt32%2cSystem.String%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint GetPointerProperty(uint props, string name, nint defaultValue)
    parameters:
    - id: props
      type: System.UInt32
      description: the properties to query.
    - id: name
      type: System.String
      description: the name of the property to query.
    - id: defaultValue
      type: System.IntPtr
      description: the default value of the property.
    return:
      type: System.IntPtr
      description: (void *) Returns the value of the property, or <code class="paramref">defaultValue</code> if it is not set or not a pointer property.
    content.vb: Public Shared Function GetPointerProperty(props As UInteger, name As String, defaultValue As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.GetPointerProperty*
  nameWithType.vb: Sdl.GetPointerProperty(UInteger, String, IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetPointerProperty(UInteger, String, System.IntPtr)
  name.vb: GetPointerProperty(UInteger, String, IntPtr)
- uid: SharpSDL3.Sdl.GetPowerInfo(System.Int32@,System.Int32@)
  commentId: M:SharpSDL3.Sdl.GetPowerInfo(System.Int32@,System.Int32@)
  id: GetPowerInfo(System.Int32@,System.Int32@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetPowerInfo(out int, out int)
  nameWithType: Sdl.GetPowerInfo(out int, out int)
  fullName: SharpSDL3.Sdl.GetPowerInfo(out int, out int)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetPowerInfo
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 2157
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the current power supply details.
  remarks: >-
    You should never take a battery status as absolute truth. Batteries

    (especially failing batteries) are delicate hardware, and the values

    reported here are best estimates based on what that hardware reports. It's

    not uncommon for older batteries to lose stored power much faster than it

    reports, or completely drain when reporting it has 20 percent left, etc.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static PowerState GetPowerInfo(out int seconds, out int percent)
    parameters:
    - id: seconds
      type: System.Int32
      description: a pointer filled in with the seconds of battery life left, or discarded to ignore. This will be filled in with -1 if we can't determine a value or there is no battery.
    - id: percent
      type: System.Int32
      description: a pointer filled in with the percentage of battery life left, between 0 and 100, or discarded to ignore. This will be filled in with -1 we can't determine a value or there is no battery.
    return:
      type: SharpSDL3.Enums.PowerState
      description: Returns the current battery state or <xref href="SharpSDL3.Enums.PowerState.Error" data-throw-if-not-resolved="false"></xref> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetPowerInfo(seconds As Integer, percent As Integer) As PowerState
  overload: SharpSDL3.Sdl.GetPowerInfo*
  nameWithType.vb: Sdl.GetPowerInfo(Integer, Integer)
  fullName.vb: SharpSDL3.Sdl.GetPowerInfo(Integer, Integer)
  name.vb: GetPowerInfo(Integer, Integer)
- uid: SharpSDL3.Sdl.GetPreferredLocales
  commentId: M:SharpSDL3.Sdl.GetPreferredLocales
  id: GetPreferredLocales
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetPreferredLocales()
  nameWithType: Sdl.GetPreferredLocales()
  fullName: SharpSDL3.Sdl.GetPreferredLocales()
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetPreferredLocales
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 2178
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Report the user's preferred locale.
  remarks: >-
    Returned language strings are in the format xx, where 'xx' is an ISO-639

    language specifier (such as "en" for English, "de" for German, etc).

    Country strings are in the format YY, where "YY" is an ISO-3166 country

    code (such as "US" for the United States, "CA" for Canada, etc). Country

    might be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if there's no specific guidance on them (so you might get {

    "en", "US" } for American English, but { "en", <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> } means "English

    language, generically"). Language strings are never <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>, except to

    terminate the array.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static Span<nint> GetPreferredLocales()
    return:
      type: System.Span{System.IntPtr}
      description: (SDL_Locale **) Returns a <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> terminated array of locale pointers, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information. This is a single allocation that should be freed withSDL_free() when it is no longer needed.
    content.vb: Public Shared Function GetPreferredLocales() As Span(Of IntPtr)
  overload: SharpSDL3.Sdl.GetPreferredLocales*
- uid: SharpSDL3.Sdl.GetPrimaryDisplay
  commentId: M:SharpSDL3.Sdl.GetPrimaryDisplay
  id: GetPrimaryDisplay
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetPrimaryDisplay()
  nameWithType: Sdl.GetPrimaryDisplay()
  fullName: SharpSDL3.Sdl.GetPrimaryDisplay()
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetPrimaryDisplay
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 2203
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Return the primary display.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetDisplays" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static uint GetPrimaryDisplay()
    return:
      type: System.UInt32
      description: Returns the instance ID of the primary display on success or 0 on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetPrimaryDisplay() As UInteger
  overload: SharpSDL3.Sdl.GetPrimaryDisplay*
- uid: SharpSDL3.Sdl.GetPrimarySelectionText
  commentId: M:SharpSDL3.Sdl.GetPrimarySelectionText
  id: GetPrimarySelectionText
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetPrimarySelectionText()
  nameWithType: Sdl.GetPrimarySelectionText()
  fullName: SharpSDL3.Sdl.GetPrimarySelectionText()
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetPrimarySelectionText
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 2221
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get UTF-8 text from the primary selection.
  remarks: >-
    This functions returns an empty string if there was not enough memory left

    for a copy of the primary selection's content.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.HasPrimarySelectionText" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetPrimarySelectionText(System.String)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static string GetPrimarySelectionText()
    return:
      type: System.String
      description: (char *) Returns the primary selection text on success or an empty string on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information. This should be freed with <xref href="SharpSDL3.Sdl.Free(System.IntPtr)" data-throw-if-not-resolved="false"></xref> when it is no longer needed.
    content.vb: Public Shared Function GetPrimarySelectionText() As String
  overload: SharpSDL3.Sdl.GetPrimarySelectionText*
- uid: SharpSDL3.Sdl.GetPropertyType(System.UInt32,System.String)
  commentId: M:SharpSDL3.Sdl.GetPropertyType(System.UInt32,System.String)
  id: GetPropertyType(System.UInt32,System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetPropertyType(uint, string)
  nameWithType: Sdl.GetPropertyType(uint, string)
  fullName: SharpSDL3.Sdl.GetPropertyType(uint, string)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetPropertyType
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 2239
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the type of a property in a group of properties.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.HasProperty(System.UInt32%2cSystem.String)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static PropertyType GetPropertyType(uint props, string name)
    parameters:
    - id: props
      type: System.UInt32
      description: the properties to query.
    - id: name
      type: System.String
      description: the name of the property to query.
    return:
      type: SharpSDL3.Enums.PropertyType
      description: Returns the type of the property, or <xref href="SharpSDL3.Enums.PropertyType.Invalid" data-throw-if-not-resolved="false"></xref> if it is not set.
    content.vb: Public Shared Function GetPropertyType(props As UInteger, name As String) As PropertyType
  overload: SharpSDL3.Sdl.GetPropertyType*
  nameWithType.vb: Sdl.GetPropertyType(UInteger, String)
  fullName.vb: SharpSDL3.Sdl.GetPropertyType(UInteger, String)
  name.vb: GetPropertyType(UInteger, String)
- uid: SharpSDL3.Sdl.GetRectAndLineIntersection(SharpSDL3.Structs.Rect@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)
  commentId: M:SharpSDL3.Sdl.GetRectAndLineIntersection(SharpSDL3.Structs.Rect@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)
  id: GetRectAndLineIntersection(SharpSDL3.Structs.Rect@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetRectAndLineIntersection(ref Rect, ref int, ref int, ref int, ref int)
  nameWithType: Sdl.GetRectAndLineIntersection(ref Rect, ref int, ref int, ref int, ref int)
  fullName: SharpSDL3.Sdl.GetRectAndLineIntersection(ref SharpSDL3.Structs.Rect, ref int, ref int, ref int, ref int)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetRectAndLineIntersection
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 2262
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Calculate the intersection of a rectangle and line segment.
  remarks: >-
    This function is used to clip a line segment to a rectangle. A line segment

    contained entirely within the rectangle or that does not intersect will

    remain unchanged. A line segment that crosses the rectangle at either or

    both ends will be clipped to the boundary of the rectangle and the new

    coordinates saved in <code class="paramref">x1</code>, <code class="paramref">y1</code>, <code class="paramref">x2</code>, and/or <code class="paramref">y2</code> as necessary.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool GetRectAndLineIntersection(ref Rect rect, ref int x1, ref int y1, ref int x2, ref int y2)
    parameters:
    - id: rect
      type: SharpSDL3.Structs.Rect
      description: an <xref href="SharpSDL3.Structs.Rect" data-throw-if-not-resolved="false"></xref> structure representing the rectangle to intersect.
    - id: x1
      type: System.Int32
      description: a pointer to the starting X-coordinate of the line.
    - id: y1
      type: System.Int32
      description: a pointer to the starting Y-coordinate of the line.
    - id: x2
      type: System.Int32
      description: a pointer to the ending X-coordinate of the line.
    - id: y2
      type: System.Int32
      description: a pointer to the ending Y-coordinate of the line.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if there is an intersection, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Public Shared Function GetRectAndLineIntersection(rect As Rect, x1 As Integer, y1 As Integer, x2 As Integer, y2 As Integer) As Boolean
  overload: SharpSDL3.Sdl.GetRectAndLineIntersection*
  nameWithType.vb: Sdl.GetRectAndLineIntersection(Rect, Integer, Integer, Integer, Integer)
  fullName.vb: SharpSDL3.Sdl.GetRectAndLineIntersection(SharpSDL3.Structs.Rect, Integer, Integer, Integer, Integer)
  name.vb: GetRectAndLineIntersection(Rect, Integer, Integer, Integer, Integer)
- uid: SharpSDL3.Sdl.GetRectAndLineIntersectionFloat(SharpSDL3.Structs.FRect@,System.Single@,System.Single@,System.Single@,System.Single@)
  commentId: M:SharpSDL3.Sdl.GetRectAndLineIntersectionFloat(SharpSDL3.Structs.FRect@,System.Single@,System.Single@,System.Single@,System.Single@)
  id: GetRectAndLineIntersectionFloat(SharpSDL3.Structs.FRect@,System.Single@,System.Single@,System.Single@,System.Single@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetRectAndLineIntersectionFloat(ref FRect, ref float, ref float, ref float, ref float)
  nameWithType: Sdl.GetRectAndLineIntersectionFloat(ref FRect, ref float, ref float, ref float, ref float)
  fullName: SharpSDL3.Sdl.GetRectAndLineIntersectionFloat(ref SharpSDL3.Structs.FRect, ref float, ref float, ref float, ref float)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetRectAndLineIntersectionFloat
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 2286
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Calculate the intersection of a rectangle and line segment with float precision.
  remarks: >-
    This function is used to clip a line segment to a rectangle. A line segment

    contained entirely within the rectangle or that does not intersect will

    remain unchanged. A line segment that crosses the rectangle at either or

    both ends will be clipped to the boundary of the rectangle and the new

    coordinates saved in <code class="paramref">x1</code>, <code class="paramref">y1</code>, <code class="paramref">x2</code>, and/or <code class="paramref">y2</code> as necessary.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool GetRectAndLineIntersectionFloat(ref FRect rect, ref float x1, ref float y1, ref float x2, ref float y2)
    parameters:
    - id: rect
      type: SharpSDL3.Structs.FRect
      description: an <xref href="SharpSDL3.Structs.FRect" data-throw-if-not-resolved="false"></xref> structure representing the rectangle to intersect.
    - id: x1
      type: System.Single
      description: a pointer to the starting X-coordinate of the line.
    - id: y1
      type: System.Single
      description: a pointer to the starting Y-coordinate of the line.
    - id: x2
      type: System.Single
      description: a pointer to the ending X-coordinate of the line.
    - id: y2
      type: System.Single
      description: a pointer to the ending Y-coordinate of the line.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if there is an intersection, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Public Shared Function GetRectAndLineIntersectionFloat(rect As FRect, x1 As Single, y1 As Single, x2 As Single, y2 As Single) As Boolean
  overload: SharpSDL3.Sdl.GetRectAndLineIntersectionFloat*
  nameWithType.vb: Sdl.GetRectAndLineIntersectionFloat(FRect, Single, Single, Single, Single)
  fullName.vb: SharpSDL3.Sdl.GetRectAndLineIntersectionFloat(SharpSDL3.Structs.FRect, Single, Single, Single, Single)
  name.vb: GetRectAndLineIntersectionFloat(FRect, Single, Single, Single, Single)
- uid: SharpSDL3.Sdl.GetRectEnclosingPoints(System.Span{SharpSDL3.Structs.Point},System.Int32,SharpSDL3.Structs.Rect@,SharpSDL3.Structs.Rect@)
  commentId: M:SharpSDL3.Sdl.GetRectEnclosingPoints(System.Span{SharpSDL3.Structs.Point},System.Int32,SharpSDL3.Structs.Rect@,SharpSDL3.Structs.Rect@)
  id: GetRectEnclosingPoints(System.Span{SharpSDL3.Structs.Point},System.Int32,SharpSDL3.Structs.Rect@,SharpSDL3.Structs.Rect@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetRectEnclosingPoints(Span<Point>, int, ref Rect, out Rect)
  nameWithType: Sdl.GetRectEnclosingPoints(Span<Point>, int, ref Rect, out Rect)
  fullName: SharpSDL3.Sdl.GetRectEnclosingPoints(System.Span<SharpSDL3.Structs.Point>, int, ref SharpSDL3.Structs.Rect, out SharpSDL3.Structs.Rect)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetRectEnclosingPoints
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 2306
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Calculate a minimal rectangle enclosing a set of points.
  remarks: >-
    If clip is not <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> then only points inside of the clipping rectangle are

    considered.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool GetRectEnclosingPoints(Span<Point> points, int count, ref Rect clip, out Rect result)
    parameters:
    - id: points
      type: System.Span{SharpSDL3.Structs.Point}
      description: an array of SDL_Point structures representing points to be enclosed.
    - id: count
      type: System.Int32
      description: the number of structures in the points array.
    - id: clip
      type: SharpSDL3.Structs.Rect
      description: a <xref href="SharpSDL3.Structs.Rect" data-throw-if-not-resolved="false"></xref> used for clipping or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to enclose all points.
    - id: result
      type: SharpSDL3.Structs.Rect
      description: a <xref href="SharpSDL3.Structs.Rect" data-throw-if-not-resolved="false"></xref> structure filled in with the minimal enclosing rectangle.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if any points were enclosed or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if all the points were outside of the clipping rectangle.
    content.vb: Public Shared Function GetRectEnclosingPoints(points As Span(Of Point), count As Integer, clip As Rect, result As Rect) As Boolean
  overload: SharpSDL3.Sdl.GetRectEnclosingPoints*
  nameWithType.vb: Sdl.GetRectEnclosingPoints(Span(Of Point), Integer, Rect, Rect)
  fullName.vb: SharpSDL3.Sdl.GetRectEnclosingPoints(System.Span(Of SharpSDL3.Structs.Point), Integer, SharpSDL3.Structs.Rect, SharpSDL3.Structs.Rect)
  name.vb: GetRectEnclosingPoints(Span(Of Point), Integer, Rect, Rect)
- uid: SharpSDL3.Sdl.GetRectEnclosingPointsFloat(System.Span{SharpSDL3.Structs.FPoint},System.Int32,SharpSDL3.Structs.FRect@,SharpSDL3.Structs.FRect@)
  commentId: M:SharpSDL3.Sdl.GetRectEnclosingPointsFloat(System.Span{SharpSDL3.Structs.FPoint},System.Int32,SharpSDL3.Structs.FRect@,SharpSDL3.Structs.FRect@)
  id: GetRectEnclosingPointsFloat(System.Span{SharpSDL3.Structs.FPoint},System.Int32,SharpSDL3.Structs.FRect@,SharpSDL3.Structs.FRect@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetRectEnclosingPointsFloat(Span<FPoint>, int, ref FRect, out FRect)
  nameWithType: Sdl.GetRectEnclosingPointsFloat(Span<FPoint>, int, ref FRect, out FRect)
  fullName: SharpSDL3.Sdl.GetRectEnclosingPointsFloat(System.Span<SharpSDL3.Structs.FPoint>, int, ref SharpSDL3.Structs.FRect, out SharpSDL3.Structs.FRect)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetRectEnclosingPointsFloat
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 2326
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Calculate a minimal rectangle enclosing a set of points with float precision.
  remarks: >-
    If clip is not <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> then only points inside of the clipping rectangle are

    considered.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool GetRectEnclosingPointsFloat(Span<FPoint> points, int count, ref FRect clip, out FRect result)
    parameters:
    - id: points
      type: System.Span{SharpSDL3.Structs.FPoint}
      description: an array of <xref href="SharpSDL3.Structs.FPoint" data-throw-if-not-resolved="false"></xref> structures representing points to be enclosed.
    - id: count
      type: System.Int32
      description: the number of structures in the points array.
    - id: clip
      type: SharpSDL3.Structs.FRect
      description: an <xref href="SharpSDL3.Structs.FRect" data-throw-if-not-resolved="false"></xref> used for clipping or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to enclose all points.
    - id: result
      type: SharpSDL3.Structs.FRect
      description: an <xref href="SharpSDL3.Structs.FRect" data-throw-if-not-resolved="false"></xref> structure filled in with the minimal enclosing rectangle.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if any points were enclosed or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if all the points were outside of the clipping rectangle.
    content.vb: Public Shared Function GetRectEnclosingPointsFloat(points As Span(Of FPoint), count As Integer, clip As FRect, result As FRect) As Boolean
  overload: SharpSDL3.Sdl.GetRectEnclosingPointsFloat*
  nameWithType.vb: Sdl.GetRectEnclosingPointsFloat(Span(Of FPoint), Integer, FRect, FRect)
  fullName.vb: SharpSDL3.Sdl.GetRectEnclosingPointsFloat(System.Span(Of SharpSDL3.Structs.FPoint), Integer, SharpSDL3.Structs.FRect, SharpSDL3.Structs.FRect)
  name.vb: GetRectEnclosingPointsFloat(Span(Of FPoint), Integer, FRect, FRect)
- uid: SharpSDL3.Sdl.GetRectIntersection(SharpSDL3.Structs.Rect@,SharpSDL3.Structs.Rect@,SharpSDL3.Structs.Rect@)
  commentId: M:SharpSDL3.Sdl.GetRectIntersection(SharpSDL3.Structs.Rect@,SharpSDL3.Structs.Rect@,SharpSDL3.Structs.Rect@)
  id: GetRectIntersection(SharpSDL3.Structs.Rect@,SharpSDL3.Structs.Rect@,SharpSDL3.Structs.Rect@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetRectIntersection(ref Rect, ref Rect, out Rect)
  nameWithType: Sdl.GetRectIntersection(ref Rect, ref Rect, out Rect)
  fullName: SharpSDL3.Sdl.GetRectIntersection(ref SharpSDL3.Structs.Rect, ref SharpSDL3.Structs.Rect, out SharpSDL3.Structs.Rect)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetRectIntersection
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 2344
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Calculate the intersection of two rectangles.
  remarks: >-
    If result is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> then this function will return <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.HasRectIntersection(SharpSDL3.Structs.Rect%40%2cSharpSDL3.Structs.Rect%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool GetRectIntersection(ref Rect a, ref Rect b, out Rect result)
    parameters:
    - id: a
      type: SharpSDL3.Structs.Rect
      description: a <xref href="SharpSDL3.Structs.Rect" data-throw-if-not-resolved="false"></xref> structure representing the first rectangle.
    - id: b
      type: SharpSDL3.Structs.Rect
      description: a <xref href="SharpSDL3.Structs.Rect" data-throw-if-not-resolved="false"></xref> structure representing the second rectangle.
    - id: result
      type: SharpSDL3.Structs.Rect
      description: a <xref href="SharpSDL3.Structs.Rect" data-throw-if-not-resolved="false"></xref> structure filled in with the intersection of rectangles <code class="paramref">a</code> and <code class="paramref">b</code>.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if there is an intersection, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Public Shared Function GetRectIntersection(a As Rect, b As Rect, result As Rect) As Boolean
  overload: SharpSDL3.Sdl.GetRectIntersection*
  nameWithType.vb: Sdl.GetRectIntersection(Rect, Rect, Rect)
  fullName.vb: SharpSDL3.Sdl.GetRectIntersection(SharpSDL3.Structs.Rect, SharpSDL3.Structs.Rect, SharpSDL3.Structs.Rect)
  name.vb: GetRectIntersection(Rect, Rect, Rect)
- uid: SharpSDL3.Sdl.GetRectIntersectionFloat(SharpSDL3.Structs.FRect@,SharpSDL3.Structs.FRect@,SharpSDL3.Structs.FRect@)
  commentId: M:SharpSDL3.Sdl.GetRectIntersectionFloat(SharpSDL3.Structs.FRect@,SharpSDL3.Structs.FRect@,SharpSDL3.Structs.FRect@)
  id: GetRectIntersectionFloat(SharpSDL3.Structs.FRect@,SharpSDL3.Structs.FRect@,SharpSDL3.Structs.FRect@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetRectIntersectionFloat(ref FRect, ref FRect, out FRect)
  nameWithType: Sdl.GetRectIntersectionFloat(ref FRect, ref FRect, out FRect)
  fullName: SharpSDL3.Sdl.GetRectIntersectionFloat(ref SharpSDL3.Structs.FRect, ref SharpSDL3.Structs.FRect, out SharpSDL3.Structs.FRect)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetRectIntersectionFloat
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 2363
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static bool GetRectIntersectionFloat(ref FRect a, ref FRect b, out FRect result)
    parameters:
    - id: a
      type: SharpSDL3.Structs.FRect
    - id: b
      type: SharpSDL3.Structs.FRect
    - id: result
      type: SharpSDL3.Structs.FRect
    return:
      type: System.Boolean
    content.vb: Public Shared Function GetRectIntersectionFloat(a As FRect, b As FRect, result As FRect) As Boolean
  overload: SharpSDL3.Sdl.GetRectIntersectionFloat*
  nameWithType.vb: Sdl.GetRectIntersectionFloat(FRect, FRect, FRect)
  fullName.vb: SharpSDL3.Sdl.GetRectIntersectionFloat(SharpSDL3.Structs.FRect, SharpSDL3.Structs.FRect, SharpSDL3.Structs.FRect)
  name.vb: GetRectIntersectionFloat(FRect, FRect, FRect)
- uid: SharpSDL3.Sdl.GetRectUnion(SharpSDL3.Structs.Rect@,SharpSDL3.Structs.Rect@,SharpSDL3.Structs.Rect@)
  commentId: M:SharpSDL3.Sdl.GetRectUnion(SharpSDL3.Structs.Rect@,SharpSDL3.Structs.Rect@,SharpSDL3.Structs.Rect@)
  id: GetRectUnion(SharpSDL3.Structs.Rect@,SharpSDL3.Structs.Rect@,SharpSDL3.Structs.Rect@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetRectUnion(ref Rect, ref Rect, out Rect)
  nameWithType: Sdl.GetRectUnion(ref Rect, ref Rect, out Rect)
  fullName: SharpSDL3.Sdl.GetRectUnion(ref SharpSDL3.Structs.Rect, ref SharpSDL3.Structs.Rect, out SharpSDL3.Structs.Rect)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetRectUnion
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 2379
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Calculate the union of two rectangles.
  remarks: <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool GetRectUnion(ref Rect a, ref Rect b, out Rect result)
    parameters:
    - id: a
      type: SharpSDL3.Structs.Rect
      description: an <xref href="SharpSDL3.Structs.Rect" data-throw-if-not-resolved="false"></xref> structure representing the first rectangle.
    - id: b
      type: SharpSDL3.Structs.Rect
      description: an <xref href="SharpSDL3.Structs.Rect" data-throw-if-not-resolved="false"></xref> structure representing the second rectangle.
    - id: result
      type: SharpSDL3.Structs.Rect
      description: a <xref href="SharpSDL3.Structs.Rect" data-throw-if-not-resolved="false"></xref> structure filled in with the union of rectangles <code class="paramref">a</code> and <code class="paramref">b</code>.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetRectUnion(a As Rect, b As Rect, result As Rect) As Boolean
  overload: SharpSDL3.Sdl.GetRectUnion*
  nameWithType.vb: Sdl.GetRectUnion(Rect, Rect, Rect)
  fullName.vb: SharpSDL3.Sdl.GetRectUnion(SharpSDL3.Structs.Rect, SharpSDL3.Structs.Rect, SharpSDL3.Structs.Rect)
  name.vb: GetRectUnion(Rect, Rect, Rect)
- uid: SharpSDL3.Sdl.GetRectUnionFloat(SharpSDL3.Structs.FRect@,SharpSDL3.Structs.FRect@,SharpSDL3.Structs.FRect@)
  commentId: M:SharpSDL3.Sdl.GetRectUnionFloat(SharpSDL3.Structs.FRect@,SharpSDL3.Structs.FRect@,SharpSDL3.Structs.FRect@)
  id: GetRectUnionFloat(SharpSDL3.Structs.FRect@,SharpSDL3.Structs.FRect@,SharpSDL3.Structs.FRect@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetRectUnionFloat(ref FRect, ref FRect, out FRect)
  nameWithType: Sdl.GetRectUnionFloat(ref FRect, ref FRect, out FRect)
  fullName: SharpSDL3.Sdl.GetRectUnionFloat(ref SharpSDL3.Structs.FRect, ref SharpSDL3.Structs.FRect, out SharpSDL3.Structs.FRect)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetRectUnionFloat
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 2396
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Calculate the union of two rectangles with float precision.
  remarks: <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool GetRectUnionFloat(ref FRect a, ref FRect b, out FRect result)
    parameters:
    - id: a
      type: SharpSDL3.Structs.FRect
      description: an <xref href="SharpSDL3.Structs.FRect" data-throw-if-not-resolved="false"></xref> structure representing the first rectangle.
    - id: b
      type: SharpSDL3.Structs.FRect
      description: an <xref href="SharpSDL3.Structs.FRect" data-throw-if-not-resolved="false"></xref> structure representing the second rectangle.
    - id: result
      type: SharpSDL3.Structs.FRect
      description: an <xref href="SharpSDL3.Structs.FRect" data-throw-if-not-resolved="false"></xref> structure filled in with the union of rectangles A and B.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetRectUnionFloat(a As FRect, b As FRect, result As FRect) As Boolean
  overload: SharpSDL3.Sdl.GetRectUnionFloat*
  nameWithType.vb: Sdl.GetRectUnionFloat(FRect, FRect, FRect)
  fullName.vb: SharpSDL3.Sdl.GetRectUnionFloat(SharpSDL3.Structs.FRect, SharpSDL3.Structs.FRect, SharpSDL3.Structs.FRect)
  name.vb: GetRectUnionFloat(FRect, FRect, FRect)
- uid: SharpSDL3.Sdl.GetRgb(System.UInt32,System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetRgb(System.UInt32,System.IntPtr,System.IntPtr)
  id: GetRgb(System.UInt32,System.IntPtr,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetRgb(uint, nint, nint)
  nameWithType: Sdl.GetRgb(uint, nint, nint)
  fullName: SharpSDL3.Sdl.GetRgb(uint, nint, nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetRgb
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 2420
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get RGB values from a pixel in the specified format.
  remarks: >-
    This function uses the entire 8-bit [0..255] range when converting color

    components from pixel formats with less than 8-bits per RGB component

    (e.g., a completely white pixel in 16-bit RGB565 format would return [0xff,

    0xff, 0xff] not [0xf8, 0xfc, 0xf8]).

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread, as long as the palette is not modified.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetPixelFormatDetails(SharpSDL3.Enums.PixelFormat)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetRgba(System.UInt32%2cSystem.IntPtr%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.MapRgb(System.IntPtr%2cSystem.IntPtr%2cSystem.Byte%2cSystem.Byte%2cSystem.Byte)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.MapRgba(System.IntPtr%2cSystem.IntPtr%2cSystem.Byte%2cSystem.Byte%2cSystem.Byte%2cSystem.Byte)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static Color GetRgb(uint pixel, nint format, nint palette)
    parameters:
    - id: pixel
      type: System.UInt32
      description: a pixel value.
    - id: format
      type: System.IntPtr
      description: a pointer to <xref href="SharpSDL3.Enums.PixelFormat" data-throw-if-not-resolved="false"></xref>Details describing the pixel format.
    - id: palette
      type: System.IntPtr
      description: an optional palette for indexed formats, may be discarded.
    return:
      type: SharpSDL3.Structs.Color
    content.vb: Public Shared Function GetRgb(pixel As UInteger, format As IntPtr, palette As IntPtr) As Color
  overload: SharpSDL3.Sdl.GetRgb*
  nameWithType.vb: Sdl.GetRgb(UInteger, IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetRgb(UInteger, System.IntPtr, System.IntPtr)
  name.vb: GetRgb(UInteger, IntPtr, IntPtr)
- uid: SharpSDL3.Sdl.GetRgba(System.UInt32,System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetRgba(System.UInt32,System.IntPtr,System.IntPtr)
  id: GetRgba(System.UInt32,System.IntPtr,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetRgba(uint, nint, nint)
  nameWithType: Sdl.GetRgba(uint, nint, nint)
  fullName: SharpSDL3.Sdl.GetRgba(uint, nint, nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetRgba
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 2450
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get RGBA values from a pixel in the specified format.
  remarks: >-
    This function uses the entire 8-bit [0..255] range when converting color

    components from pixel formats with less than 8-bits per RGB component

    (e.g., a completely white pixel in 16-bit RGB565 format would return [0xff,

    0xff, 0xff] not [0xf8, 0xfc, 0xf8]).

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread, as long as the palette is not modified.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetPixelFormatDetails(SharpSDL3.Enums.PixelFormat)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetRgb(System.UInt32%2cSystem.IntPtr%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.MapRgb(System.IntPtr%2cSystem.IntPtr%2cSystem.Byte%2cSystem.Byte%2cSystem.Byte)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.MapRgba(System.IntPtr%2cSystem.IntPtr%2cSystem.Byte%2cSystem.Byte%2cSystem.Byte%2cSystem.Byte)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static Color GetRgba(uint pixel, nint format, nint palette)
    parameters:
    - id: pixel
      type: System.UInt32
      description: a pixel value.
    - id: format
      type: System.IntPtr
      description: a pointer to <xref href="SharpSDL3.Enums.PixelFormat" data-throw-if-not-resolved="false"></xref>Details describing the pixel format.
    - id: palette
      type: System.IntPtr
      description: an optional palette for indexed formats, may be discarded.
    return:
      type: SharpSDL3.Structs.Color
    content.vb: Public Shared Function GetRgba(pixel As UInteger, format As IntPtr, palette As IntPtr) As Color
  overload: SharpSDL3.Sdl.GetRgba*
  nameWithType.vb: Sdl.GetRgba(UInteger, IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetRgba(UInteger, System.IntPtr, System.IntPtr)
  name.vb: GetRgba(UInteger, IntPtr, IntPtr)
- uid: SharpSDL3.Sdl.GetScancodeFromKey(System.UInt32,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetScancodeFromKey(System.UInt32,System.IntPtr)
  id: GetScancodeFromKey(System.UInt32,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetScancodeFromKey(uint, nint)
  nameWithType: Sdl.GetScancodeFromKey(uint, nint)
  fullName: SharpSDL3.Sdl.GetScancodeFromKey(uint, nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetScancodeFromKey
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 2474
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the scancode corresponding to the given key code according to the current keyboard layout.
  remarks: >-
    Note that there may be multiple scancode+modifier states that can generate

    this keycode, this will just return the first one found.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetKeyFromScancode(SharpSDL3.Enums.Scancode%2cSharpSDL3.Enums.KeyMod%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetScancodeName(SharpSDL3.Enums.Scancode)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static Scancode GetScancodeFromKey(uint key, nint modstate)
    parameters:
    - id: key
      type: System.UInt32
      description: the desired SDL_Keycode to query.
    - id: modstate
      type: System.IntPtr
      description: a pointer to the modifier state that would be used when the scancode generates this key, can be <xref href="System.IntPtr.Zero" data-throw-if-not-resolved="false"></xref>.
    return:
      type: SharpSDL3.Enums.Scancode
      description: Returns the <xref href="SharpSDL3.Enums.Scancode" data-throw-if-not-resolved="false"></xref> that corresponds to the given <xref href="SharpSDL3.Enums.Keycode" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function GetScancodeFromKey(key As UInteger, modstate As IntPtr) As Scancode
  overload: SharpSDL3.Sdl.GetScancodeFromKey*
  nameWithType.vb: Sdl.GetScancodeFromKey(UInteger, IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetScancodeFromKey(UInteger, System.IntPtr)
  name.vb: GetScancodeFromKey(UInteger, IntPtr)
- uid: SharpSDL3.Sdl.GetScancodeFromName(System.String)
  commentId: M:SharpSDL3.Sdl.GetScancodeFromName(System.String)
  id: GetScancodeFromName(System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetScancodeFromName(string)
  nameWithType: Sdl.GetScancodeFromName(string)
  fullName: SharpSDL3.Sdl.GetScancodeFromName(string)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetScancodeFromName
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 2496
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get a scancode from a human-readable name.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetKeyFromName(System.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetScancodeFromKey(System.UInt32%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetScancodeName(SharpSDL3.Enums.Scancode)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static Scancode GetScancodeFromName(string name)
    parameters:
    - id: name
      type: System.String
      description: the human-readable scancode name.
    return:
      type: SharpSDL3.Enums.Scancode
      description: Returns the <xref href="SharpSDL3.Enums.Scancode" data-throw-if-not-resolved="false"></xref>, or <xref href="SharpSDL3.Enums.Scancode.Unknown" data-throw-if-not-resolved="false"></xref> if the name wasn't recognized; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetScancodeFromName(name As String) As Scancode
  overload: SharpSDL3.Sdl.GetScancodeFromName*
  nameWithType.vb: Sdl.GetScancodeFromName(String)
  fullName.vb: SharpSDL3.Sdl.GetScancodeFromName(String)
  name.vb: GetScancodeFromName(String)
- uid: SharpSDL3.Sdl.GetScancodeName(SharpSDL3.Enums.Scancode)
  commentId: M:SharpSDL3.Sdl.GetScancodeName(SharpSDL3.Enums.Scancode)
  id: GetScancodeName(SharpSDL3.Enums.Scancode)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetScancodeName(Scancode)
  nameWithType: Sdl.GetScancodeName(Scancode)
  fullName: SharpSDL3.Sdl.GetScancodeName(SharpSDL3.Enums.Scancode)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetScancodeName
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 2527
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get a human-readable name for a scancode.
  remarks: >-
    Warning: The returned name is by design not stable across platforms,

    e.g. the name for <xref href="SharpSDL3.Enums.Scancode.LGui" data-throw-if-not-resolved="false"></xref> is "Left GUI"

    under Linux but "Left Windows" under Microsoft Windows, and some scancodes

    like <xref href="SharpSDL3.Enums.Scancode.NonUsBackslash" data-throw-if-not-resolved="false"></xref> don't

    have any name at all. There are even scancodes that share names, e.g.

    <xref href="SharpSDL3.Enums.Scancode.Return" data-throw-if-not-resolved="false"></xref> and

    <xref href="SharpSDL3.Enums.Scancode.Return2" data-throw-if-not-resolved="false"></xref> (both called "Return"). This

    function is therefore unsuitable for creating a stable cross-platform

    two-way mapping between strings and scancodes.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetScancodeFromKey(System.UInt32%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetScancodeFromName(System.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetScancodeName(SharpSDL3.Enums.Scancode%2cSystem.String)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static string GetScancodeName(Scancode scanCode)
    parameters:
    - id: scanCode
      type: SharpSDL3.Enums.Scancode
      description: the desired SDL_Scancode to query.
    return:
      type: System.String
      description: Returns a pointer to the name for the scancode. If the scancode doesn't have a name this function returns an empty string ("").
    content.vb: Public Shared Function GetScancodeName(scanCode As Scancode) As String
  overload: SharpSDL3.Sdl.GetScancodeName*
- uid: SharpSDL3.Sdl.GetStringProperty(System.UInt32,System.String,System.String)
  commentId: M:SharpSDL3.Sdl.GetStringProperty(System.UInt32,System.String,System.String)
  id: GetStringProperty(System.UInt32,System.String,System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetStringProperty(uint, string, string)
  nameWithType: Sdl.GetStringProperty(uint, string, string)
  fullName: SharpSDL3.Sdl.GetStringProperty(uint, string, string)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetStringProperty
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 2553
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get a string property from a group of properties.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread, although the data returned is not protected and could potentially be freed if you call <xref href="SharpSDL3.Sdl.SetStringProperty(System.UInt32%2cSystem.String%2cSystem.String)" data-throw-if-not-resolved="false"></xref> or <xref href="SharpSDL3.Sdl.ClearProperty(System.UInt32%2cSystem.String)" data-throw-if-not-resolved="false"></xref> on these properties from another thread.</p>

    <p>If you need to avoid this, use <xref href="SharpSDL3.Sdl.LockProperties(System.UInt32)" data-throw-if-not-resolved="false"></xref> and <xref href="SharpSDL3.Sdl.UnlockProperties(System.UInt32)" data-throw-if-not-resolved="false"></xref>.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetPropertyType(System.UInt32%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.HasProperty(System.UInt32%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetStringProperty(System.UInt32%2cSystem.String%2cSystem.String)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static string GetStringProperty(uint props, string name, string defaultValue)
    parameters:
    - id: props
      type: System.UInt32
      description: the properties to query.
    - id: name
      type: System.String
      description: the name of the property to query.
    - id: defaultValue
      type: System.String
      description: the default value of the property.
    return:
      type: System.String
      description: Returns the value of the property, or <code class="paramref">defaultValue</code> if itis not set or not a string property.
    content.vb: Public Shared Function GetStringProperty(props As UInteger, name As String, defaultValue As String) As String
  overload: SharpSDL3.Sdl.GetStringProperty*
  nameWithType.vb: Sdl.GetStringProperty(UInteger, String, String)
  fullName.vb: SharpSDL3.Sdl.GetStringProperty(UInteger, String, String)
  name.vb: GetStringProperty(UInteger, String, String)
- uid: SharpSDL3.Sdl.GetSurfaceAlphaMod(System.IntPtr,System.Byte@)
  commentId: M:SharpSDL3.Sdl.GetSurfaceAlphaMod(System.IntPtr,System.Byte@)
  id: GetSurfaceAlphaMod(System.IntPtr,System.Byte@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetSurfaceAlphaMod(nint, out byte)
  nameWithType: Sdl.GetSurfaceAlphaMod(nint, out byte)
  fullName: SharpSDL3.Sdl.GetSurfaceAlphaMod(nint, out byte)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetSurfaceAlphaMod
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 2575
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the additional alpha value used in blit operations.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetSurfaceColorMod(System.IntPtr%2cSystem.Byte%40%2cSystem.Byte%40%2cSystem.Byte%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetSurfaceAlphaMod(System.IntPtr%2cSystem.Byte)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool GetSurfaceAlphaMod(nint surface, out byte alpha)
    parameters:
    - id: surface
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Surface" data-throw-if-not-resolved="false"></xref> structure to query.
    - id: alpha
      type: System.Byte
      description: a pointer filled in with the current alpha value.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetSurfaceAlphaMod(surface As IntPtr, alpha As Byte) As Boolean
  overload: SharpSDL3.Sdl.GetSurfaceAlphaMod*
  nameWithType.vb: Sdl.GetSurfaceAlphaMod(IntPtr, Byte)
  fullName.vb: SharpSDL3.Sdl.GetSurfaceAlphaMod(System.IntPtr, Byte)
  name.vb: GetSurfaceAlphaMod(IntPtr, Byte)
- uid: SharpSDL3.Sdl.GetSurfacePalette(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetSurfacePalette(System.IntPtr)
  id: GetSurfacePalette(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetSurfacePalette(nint)
  nameWithType: Sdl.GetSurfacePalette(nint)
  fullName: SharpSDL3.Sdl.GetSurfacePalette(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetSurfacePalette
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 2598
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the palette used by a surface.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetSurfacePalette(System.IntPtr%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint GetSurfacePalette(nint surface)
    parameters:
    - id: surface
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Surface" data-throw-if-not-resolved="false"></xref> to query.
    return:
      type: System.IntPtr
      description: (SDL_Palette *) Returns a pointer to the palette used by the surface, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if there is no palette used.
    content.vb: Public Shared Function GetSurfacePalette(surface As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.GetSurfacePalette*
  nameWithType.vb: Sdl.GetSurfacePalette(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetSurfacePalette(System.IntPtr)
  name.vb: GetSurfacePalette(IntPtr)
- uid: SharpSDL3.Sdl.GetSurfaceBlendMode(System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetSurfaceBlendMode(System.IntPtr,System.IntPtr)
  id: GetSurfaceBlendMode(System.IntPtr,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetSurfaceBlendMode(nint, nint)
  nameWithType: Sdl.GetSurfaceBlendMode(nint, nint)
  fullName: SharpSDL3.Sdl.GetSurfaceBlendMode(nint, nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetSurfaceBlendMode
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 2620
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the blend mode used for blit operations.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetSurfaceBlendMode(System.IntPtr%2cSystem.UInt32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool GetSurfaceBlendMode(nint surface, nint blendMode)
    parameters:
    - id: surface
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Surface" data-throw-if-not-resolved="false"></xref> structure to query.
    - id: blendMode
      type: System.IntPtr
      description: a pointer filled in with the current <xref href="SharpSDL3.Enums.BlendMode" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetSurfaceBlendMode(surface As IntPtr, blendMode As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.GetSurfaceBlendMode*
  nameWithType.vb: Sdl.GetSurfaceBlendMode(IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetSurfaceBlendMode(System.IntPtr, System.IntPtr)
  name.vb: GetSurfaceBlendMode(IntPtr, IntPtr)
- uid: SharpSDL3.Sdl.GetSurfaceClipRect(System.IntPtr,SharpSDL3.Structs.Rect@)
  commentId: M:SharpSDL3.Sdl.GetSurfaceClipRect(System.IntPtr,SharpSDL3.Structs.Rect@)
  id: GetSurfaceClipRect(System.IntPtr,SharpSDL3.Structs.Rect@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetSurfaceClipRect(nint, out Rect)
  nameWithType: Sdl.GetSurfaceClipRect(nint, out Rect)
  fullName: SharpSDL3.Sdl.GetSurfaceClipRect(nint, out SharpSDL3.Structs.Rect)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetSurfaceClipRect
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 2642
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the clipping rectangle for a surface.
  remarks: >-
    When surface is the destination of a blit, only the area within the clip rectangle is drawn into.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetSurfaceClipRect(System.IntPtr%2cSharpSDL3.Structs.Rect%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool GetSurfaceClipRect(nint surface, out Rect rect)
    parameters:
    - id: surface
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Surface" data-throw-if-not-resolved="false"></xref> structure representing the surface to be clipped.
    - id: rect
      type: SharpSDL3.Structs.Rect
      description: a <xref href="SharpSDL3.Structs.Rect" data-throw-if-not-resolved="false"></xref> structure filled in with the clipping rectangle for the surface.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetSurfaceClipRect(surface As IntPtr, rect As Rect) As Boolean
  overload: SharpSDL3.Sdl.GetSurfaceClipRect*
  nameWithType.vb: Sdl.GetSurfaceClipRect(IntPtr, Rect)
  fullName.vb: SharpSDL3.Sdl.GetSurfaceClipRect(System.IntPtr, SharpSDL3.Structs.Rect)
  name.vb: GetSurfaceClipRect(IntPtr, Rect)
- uid: SharpSDL3.Sdl.GetSurfaceColorKey(System.IntPtr,System.UInt32@)
  commentId: M:SharpSDL3.Sdl.GetSurfaceColorKey(System.IntPtr,System.UInt32@)
  id: GetSurfaceColorKey(System.IntPtr,System.UInt32@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetSurfaceColorKey(nint, out uint)
  nameWithType: Sdl.GetSurfaceColorKey(nint, out uint)
  fullName: SharpSDL3.Sdl.GetSurfaceColorKey(nint, out uint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetSurfaceColorKey
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 2666
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the color key (transparent pixel) for a surface.
  remarks: >-
    The color key is a pixel of the format used by the surface, as generated by <xref href="SharpSDL3.Sdl.MapRgb(System.IntPtr%2cSystem.IntPtr%2cSystem.Byte%2cSystem.Byte%2cSystem.Byte)" data-throw-if-not-resolved="false"></xref>.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetSurfaceColorKey(System.IntPtr%2cSystem.Boolean%2cSystem.UInt32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SurfaceHasColorKey(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool GetSurfaceColorKey(nint surface, out uint key)
    parameters:
    - id: surface
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Surface" data-throw-if-not-resolved="false"></xref> structure to query.
    - id: key
      type: System.UInt32
      description: a pointer filled in with the transparent pixel.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetSurfaceColorKey(surface As IntPtr, key As UInteger) As Boolean
  overload: SharpSDL3.Sdl.GetSurfaceColorKey*
  nameWithType.vb: Sdl.GetSurfaceColorKey(IntPtr, UInteger)
  fullName.vb: SharpSDL3.Sdl.GetSurfaceColorKey(System.IntPtr, UInteger)
  name.vb: GetSurfaceColorKey(IntPtr, UInteger)
- uid: SharpSDL3.Sdl.GetSurfaceColorMod(System.IntPtr,System.Byte@,System.Byte@,System.Byte@)
  commentId: M:SharpSDL3.Sdl.GetSurfaceColorMod(System.IntPtr,System.Byte@,System.Byte@,System.Byte@)
  id: GetSurfaceColorMod(System.IntPtr,System.Byte@,System.Byte@,System.Byte@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetSurfaceColorMod(nint, out byte, out byte, out byte)
  nameWithType: Sdl.GetSurfaceColorMod(nint, out byte, out byte, out byte)
  fullName: SharpSDL3.Sdl.GetSurfaceColorMod(nint, out byte, out byte, out byte)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetSurfaceColorMod
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 2691
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the additional color value multiplied into blit operations.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetSurfaceAlphaMod(System.IntPtr%2cSystem.Byte%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetSurfaceColorMod(System.IntPtr%2cSystem.Byte%2cSystem.Byte%2cSystem.Byte)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool GetSurfaceColorMod(nint surface, out byte r, out byte g, out byte b)
    parameters:
    - id: surface
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Surface" data-throw-if-not-resolved="false"></xref> structure to query.
    - id: r
      type: System.Byte
      description: a pointer filled in with the current red color value.
    - id: g
      type: System.Byte
      description: a pointer filled in with the current green color value.
    - id: b
      type: System.Byte
      description: a pointer filled in with the current blue color value.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetSurfaceColorMod(surface As IntPtr, r As Byte, g As Byte, b As Byte) As Boolean
  overload: SharpSDL3.Sdl.GetSurfaceColorMod*
  nameWithType.vb: Sdl.GetSurfaceColorMod(IntPtr, Byte, Byte, Byte)
  fullName.vb: SharpSDL3.Sdl.GetSurfaceColorMod(System.IntPtr, Byte, Byte, Byte)
  name.vb: GetSurfaceColorMod(IntPtr, Byte, Byte, Byte)
- uid: SharpSDL3.Sdl.GetSurfaceImages(System.IntPtr,System.Int32@)
  commentId: M:SharpSDL3.Sdl.GetSurfaceImages(System.IntPtr,System.Int32@)
  id: GetSurfaceImages(System.IntPtr,System.Int32@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetSurfaceImages(nint, out int)
  nameWithType: Sdl.GetSurfaceImages(nint, out int)
  fullName: SharpSDL3.Sdl.GetSurfaceImages(nint, out int)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetSurfaceImages
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 2717
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get an array including all versions of a surface.
  remarks: >-
    This returns all versions of a surface, with the surface being queried as

    the first element in the returned array.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.AddSurfaceAlternateImage(System.IntPtr%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.RemoveSurfaceAlternateImages(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SurfaceHasAlternateImages(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static Span<nint> GetSurfaceImages(nint surface, out int count)
    parameters:
    - id: surface
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Surface" data-throw-if-not-resolved="false"></xref> structure to query.
    - id: count
      type: System.Int32
      description: a pointer filled in with the number of surface pointers returned, may be discarded.
    return:
      type: System.Span{System.IntPtr}
      description: (SDL_Surface **) Returns a <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> terminated array ofSDL_Surface pointers or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information. This should be freedwith <xref href="SharpSDL3.Sdl.Free(System.IntPtr)" data-throw-if-not-resolved="false"></xref> when it is no longer needed.
    content.vb: Public Shared Function GetSurfaceImages(surface As IntPtr, count As Integer) As Span(Of IntPtr)
  overload: SharpSDL3.Sdl.GetSurfaceImages*
  nameWithType.vb: Sdl.GetSurfaceImages(IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.GetSurfaceImages(System.IntPtr, Integer)
  name.vb: GetSurfaceImages(IntPtr, Integer)
- uid: SharpSDL3.Sdl.GetSurfaceProperties(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetSurfaceProperties(System.IntPtr)
  id: GetSurfaceProperties(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetSurfaceProperties(nint)
  nameWithType: Sdl.GetSurfaceProperties(nint)
  fullName: SharpSDL3.Sdl.GetSurfaceProperties(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetSurfaceProperties
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 2765
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the properties associated with a surface.
  remarks: >-
    The following properties are understood by SDL:

    <ul><li>SDL_PROP_SURFACE_SDR_WHITE_POINT_FLOAT: for HDR10 and floating point surfaces, this defines the value of 100% diffuse white, with higher values being displayed in the High Dynamic Range headroom.This defaults to 203 for HDR10 surfaces and 1.0 for floating point surfaces.</li><li>SDL_PROP_SURFACE_HDR_HEADROOM_FLOAT: for HDR10 and floating point surfaces, this defines the maximum dynamic range used by the content, in terms of the SDR white point.This defaults to 0.0, which disables tone mapping.</li><li>SDL_PROP_SURFACE_TONEMAP_OPERATOR_STRING: the tone mapping operator used when compressing from a surface with high dynamic range to another with lower dynamic range. Currently this supports "chrome", which uses the same tone mapping that Chrome uses for HDR content, the form "*=N", where N is a floating point scale factor applied in linear space, and "none", which disables tone mapping. This defaults to "chrome".</li><li>SDL_PROP_SURFACE_HOTSPOT_X_NUMBER: the hotspot pixel offset from the left edge of the image, if this surface is being used as a cursor.</li><li>SDL_PROP_SURFACE_HOTSPOT_Y_NUMBER: the hotspot pixel offset from the top edge of the image, if this surface is being used as a cursor.</li></ul>

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static uint GetSurfaceProperties(nint surface)
    parameters:
    - id: surface
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Surface" data-throw-if-not-resolved="false"></xref> structure to query.
    return:
      type: System.UInt32
      description: Returns a valid property ID on success or 0 on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetSurfaceProperties(surface As IntPtr) As UInteger
  overload: SharpSDL3.Sdl.GetSurfaceProperties*
  nameWithType.vb: Sdl.GetSurfaceProperties(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetSurfaceProperties(System.IntPtr)
  name.vb: GetSurfaceProperties(IntPtr)
- uid: SharpSDL3.Sdl.GetSystemTheme
  commentId: M:SharpSDL3.Sdl.GetSystemTheme
  id: GetSystemTheme
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetSystemTheme()
  nameWithType: Sdl.GetSystemTheme()
  fullName: SharpSDL3.Sdl.GetSystemTheme()
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetSystemTheme
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 2783
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the current system theme.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static SystemTheme GetSystemTheme()
    return:
      type: SharpSDL3.Enums.SystemTheme
      description: Returns the current system theme,light, dark, or unknown.
    content.vb: Public Shared Function GetSystemTheme() As SystemTheme
  overload: SharpSDL3.Sdl.GetSystemTheme*
- uid: SharpSDL3.Sdl.GetTextInputArea(System.IntPtr,SharpSDL3.Structs.Rect@,System.Int32@)
  commentId: M:SharpSDL3.Sdl.GetTextInputArea(System.IntPtr,SharpSDL3.Structs.Rect@,System.Int32@)
  id: GetTextInputArea(System.IntPtr,SharpSDL3.Structs.Rect@,System.Int32@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetTextInputArea(nint, out Rect, out int)
  nameWithType: Sdl.GetTextInputArea(nint, out Rect, out int)
  fullName: SharpSDL3.Sdl.GetTextInputArea(nint, out SharpSDL3.Structs.Rect, out int)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetTextInputArea
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 2802
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the area used to type Unicode text input.
  remarks: >-
    This returns the values previously set by <xref href="SharpSDL3.Sdl.SetTextInputArea(System.IntPtr%2cSharpSDL3.Structs.Rect%40%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetTextInputArea(System.IntPtr%2cSharpSDL3.Structs.Rect%40%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool GetTextInputArea(nint window, out Rect rect, out int cursor)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window for which to query the text input area.
    - id: rect
      type: SharpSDL3.Structs.Rect
      description: a pointer to an <xref href="SharpSDL3.Structs.Rect" data-throw-if-not-resolved="false"></xref> filled in with the text input area, can bediscarded.
    - id: cursor
      type: System.Int32
      description: a pointer to the offset of the current cursor location relative to rect-&gt;x, may be discarded.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetTextInputArea(window As IntPtr, rect As Rect, cursor As Integer) As Boolean
  overload: SharpSDL3.Sdl.GetTextInputArea*
  nameWithType.vb: Sdl.GetTextInputArea(IntPtr, Rect, Integer)
  fullName.vb: SharpSDL3.Sdl.GetTextInputArea(System.IntPtr, SharpSDL3.Structs.Rect, Integer)
  name.vb: GetTextInputArea(IntPtr, Rect, Integer)
- uid: SharpSDL3.Sdl.GetThreadId(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetThreadId(System.IntPtr)
  id: GetThreadId(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetThreadId(nint)
  nameWithType: Sdl.GetThreadId(nint)
  fullName: SharpSDL3.Sdl.GetThreadId(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetThreadId
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 2826
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the thread identifier for the specified thread.
  remarks: >-
    This thread identifier is as reported by the underlying operating system.

    If SDL is running on a platform that does not support threads the return

    value will always be zero.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetCurrentThreadID" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static ulong GetThreadId(nint thread)
    parameters:
    - id: thread
      type: System.IntPtr
      description: the thread to query.
    return:
      type: System.UInt64
      description: Returns the ID of the specified thread, orthe ID of the current thread if thread is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    content.vb: Public Shared Function GetThreadId(thread As IntPtr) As ULong
  overload: SharpSDL3.Sdl.GetThreadId*
  nameWithType.vb: Sdl.GetThreadId(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetThreadId(System.IntPtr)
  name.vb: GetThreadId(IntPtr)
- uid: SharpSDL3.Sdl.GetThreadName(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetThreadName(System.IntPtr)
  id: GetThreadName(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetThreadName(nint)
  nameWithType: Sdl.GetThreadName(nint)
  fullName: SharpSDL3.Sdl.GetThreadName(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetThreadName
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 2844
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the thread name as it was specified in CreateThread.
  remarks: <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static string GetThreadName(nint thread)
    parameters:
    - id: thread
      type: System.IntPtr
      description: the thread to query.
    return:
      type: System.String
      description: Returns a pointer to a UTF-8 string that names the specifiedthread, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if it doesn't have a name.
    content.vb: Public Shared Function GetThreadName(thread As IntPtr) As String
  overload: SharpSDL3.Sdl.GetThreadName*
  nameWithType.vb: Sdl.GetThreadName(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetThreadName(System.IntPtr)
  name.vb: GetThreadName(IntPtr)
- uid: SharpSDL3.Sdl.GetThreadState(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetThreadState(System.IntPtr)
  id: GetThreadState(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetThreadState(nint)
  nameWithType: Sdl.GetThreadState(nint)
  fullName: SharpSDL3.Sdl.GetThreadState(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetThreadState
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 2863
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the current state of a thread.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Enums.ThreadState" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static ThreadState GetThreadState(nint thread)
    parameters:
    - id: thread
      type: System.IntPtr
      description: the thread to query.
    return:
      type: SharpSDL3.Enums.ThreadState
      description: Returns the current state of a thread,  SDL_THREAD_UNKNOWN if the thread isn't valid.
    content.vb: Public Shared Function GetThreadState(thread As IntPtr) As ThreadState
  overload: SharpSDL3.Sdl.GetThreadState*
  nameWithType.vb: Sdl.GetThreadState(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetThreadState(System.IntPtr)
  name.vb: GetThreadState(IntPtr)
- uid: SharpSDL3.Sdl.GetTls(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetTls(System.IntPtr)
  id: GetTls(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetTls(nint)
  nameWithType: Sdl.GetTls(nint)
  fullName: SharpSDL3.Sdl.GetTls(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetTls
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 2883
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the current thread's value associated with a thread local storage ID.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetTls(System.IntPtr%2cSystem.IntPtr%2cSharpSDL3.Delegates.SdlTlsDestructorCallback)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint GetTls(nint id)
    parameters:
    - id: id
      type: System.IntPtr
      description: a pointer to the thread local storage ID, may not be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    return:
      type: System.IntPtr
      description: (void *) Returns the value associated with the ID for the current thread or<a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if no value has been set; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetTls(id As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.GetTls*
  nameWithType.vb: Sdl.GetTls(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetTls(System.IntPtr)
  name.vb: GetTls(IntPtr)
- uid: SharpSDL3.Sdl.GetVideoDriver(System.Int32)
  commentId: M:SharpSDL3.Sdl.GetVideoDriver(System.Int32)
  id: GetVideoDriver(System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetVideoDriver(int)
  nameWithType: Sdl.GetVideoDriver(int)
  fullName: SharpSDL3.Sdl.GetVideoDriver(int)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetVideoDriver
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 2904
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the name of a built in video driver.
  remarks: >-
    The video drivers are presented in the order in which they are normally checked during initialization.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetNumVideoDrivers" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static string GetVideoDriver(int index)
    parameters:
    - id: index
      type: System.Int32
      description: the index of a video driver.
    return:
      type: System.String
      description: Returns the name of the video driver with the givenindex.
    content.vb: Public Shared Function GetVideoDriver(index As Integer) As String
  overload: SharpSDL3.Sdl.GetVideoDriver*
  nameWithType.vb: Sdl.GetVideoDriver(Integer)
  fullName.vb: SharpSDL3.Sdl.GetVideoDriver(Integer)
  name.vb: GetVideoDriver(Integer)
- uid: SharpSDL3.Sdl.GetWindowAspectRatio(System.IntPtr,System.Single@,System.Single@)
  commentId: M:SharpSDL3.Sdl.GetWindowAspectRatio(System.IntPtr,System.Single@,System.Single@)
  id: GetWindowAspectRatio(System.IntPtr,System.Single@,System.Single@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetWindowAspectRatio(nint, out float, out float)
  nameWithType: Sdl.GetWindowAspectRatio(nint, out float, out float)
  fullName: SharpSDL3.Sdl.GetWindowAspectRatio(nint, out float, out float)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetWindowAspectRatio
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 2926
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the size of a window's client area.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetWindowAspectRatio(System.IntPtr%2cSystem.Single%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool GetWindowAspectRatio(nint window, out float minAspect, out float maxAspect)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to query the width and height from.
    - id: minAspect
      type: System.Single
      description: a pointer filled in with the minimum aspect ratio of the window, may be discarded.
    - id: maxAspect
      type: System.Single
      description: a pointer filled in with the maximum aspect ratio of the window, may be discarded.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetWindowAspectRatio(window As IntPtr, minAspect As Single, maxAspect As Single) As Boolean
  overload: SharpSDL3.Sdl.GetWindowAspectRatio*
  nameWithType.vb: Sdl.GetWindowAspectRatio(IntPtr, Single, Single)
  fullName.vb: SharpSDL3.Sdl.GetWindowAspectRatio(System.IntPtr, Single, Single)
  name.vb: GetWindowAspectRatio(IntPtr, Single, Single)
- uid: SharpSDL3.Sdl.GetWindowBordersSize(System.IntPtr,System.Int32@,System.Int32@,System.Int32@,System.Int32@)
  commentId: M:SharpSDL3.Sdl.GetWindowBordersSize(System.IntPtr,System.Int32@,System.Int32@,System.Int32@,System.Int32@)
  id: GetWindowBordersSize(System.IntPtr,System.Int32@,System.Int32@,System.Int32@,System.Int32@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetWindowBordersSize(nint, out int, out int, out int, out int)
  nameWithType: Sdl.GetWindowBordersSize(nint, out int, out int, out int, out int)
  fullName: SharpSDL3.Sdl.GetWindowBordersSize(nint, out int, out int, out int, out int)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetWindowBordersSize
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 2957
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the size of a window's borders (decorations) around the client area.
  remarks: >-
    <p>&gt;Note: If this function fails (returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>), the size values will be initialized to 0, 0, 0, 0 (if a non-NULL pointer is provided), as if the window in question was borderless.</p>

    <p>Note: This function may fail on systems where the window has not yet been decorated by the display server(for example, immediately after calling <xref href="SharpSDL3.Sdl.CreateWindow(System.String%2cSystem.Int32%2cSystem.Int32%2cSharpSDL3.Enums.WindowFlags)" data-throw-if-not-resolved="false"></xref>).</p>

    <p>It is recommended that you wait at least until the window has been presented and composited, so that the window system has a chance to decorate the window and provide the border dimensions to SDL.</p>

    <p>This function also returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if getting the information is not supported.</p>

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetWindowSize(System.IntPtr%2cSystem.Int32%40%2cSystem.Int32%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool GetWindowBordersSize(nint window, out int top, out int left, out int bottom, out int right)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to query the size values of the border (decorations) from.
    - id: top
      type: System.Int32
      description: out to variable for storing the size of the top border; discard is permitted.
    - id: left
      type: System.Int32
      description: out to variable for storing the size of the left border; discard is permitted.
    - id: bottom
      type: System.Int32
      description: out to variable for storing the size of the bottom border; discard is permitted.
    - id: right
      type: System.Int32
      description: out to variable for storing the size of the right border; discard is permitted.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetWindowBordersSize(window As IntPtr, top As Integer, left As Integer, bottom As Integer, right As Integer) As Boolean
  overload: SharpSDL3.Sdl.GetWindowBordersSize*
  nameWithType.vb: Sdl.GetWindowBordersSize(IntPtr, Integer, Integer, Integer, Integer)
  fullName.vb: SharpSDL3.Sdl.GetWindowBordersSize(System.IntPtr, Integer, Integer, Integer, Integer)
  name.vb: GetWindowBordersSize(IntPtr, Integer, Integer, Integer, Integer)
- uid: SharpSDL3.Sdl.GetWindowBordersSize(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetWindowBordersSize(System.IntPtr)
  id: GetWindowBordersSize(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetWindowBordersSize(nint)
  nameWithType: Sdl.GetWindowBordersSize(nint)
  fullName: SharpSDL3.Sdl.GetWindowBordersSize(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetWindowBordersSize
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 2984
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the size of a window's borders (decorations) around the client area.
  remarks: >-
    <p>&gt;Note: If this function fails (returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>), the size values will be initialized to 0, 0, 0, 0 (if a non-NULL pointer is provided), as if the window in question was borderless.</p>

    <p>Note: This function may fail on systems where the window has not yet been decorated by the display server(for example, immediately after calling <xref href="SharpSDL3.Sdl.CreateWindow(System.String%2cSystem.Int32%2cSystem.Int32%2cSharpSDL3.Enums.WindowFlags)" data-throw-if-not-resolved="false"></xref>).</p>

    <p>It is recommended that you wait at least until the window has been presented and composited, so that the window system has a chance to decorate the window and provide the border dimensions to SDL.</p>

    <p>This function also returns a blank <xref href="SharpSDL3.Structs.Rect" data-throw-if-not-resolved="false"></xref> if getting the information is not supported.</p>

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetWindowSize(System.IntPtr%2cSystem.Int32%40%2cSystem.Int32%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static Rect GetWindowBordersSize(nint window)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to query the size values of the border (decorations) from.
    return:
      type: SharpSDL3.Structs.Rect
      description: Returns a <xref href="SharpSDL3.Structs.Rect" data-throw-if-not-resolved="false"></xref> on success, or a blank <xref href="SharpSDL3.Structs.Rect" data-throw-if-not-resolved="false"></xref> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetWindowBordersSize(window As IntPtr) As Rect
  overload: SharpSDL3.Sdl.GetWindowBordersSize*
  nameWithType.vb: Sdl.GetWindowBordersSize(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetWindowBordersSize(System.IntPtr)
  name.vb: GetWindowBordersSize(IntPtr)
- uid: SharpSDL3.Sdl.GetWindowDisplayScale(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetWindowDisplayScale(System.IntPtr)
  id: GetWindowDisplayScale(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetWindowDisplayScale(nint)
  nameWithType: Sdl.GetWindowDisplayScale(nint)
  fullName: SharpSDL3.Sdl.GetWindowDisplayScale(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetWindowDisplayScale
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 3009
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the content display scale relative to a window's pixel size.
  remarks: >-
    This is a combination of the window pixel density and the display content

    scale, and is the expected scale for displaying content in this window. For

    example, if a 3840x2160 window had a display scale of 2.0, the user expects

    the content to take twice as many pixels and be the same physical size as

    if it were being displayed in a 1920x1080 window with a display scale of

    1.0.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static float GetWindowDisplayScale(nint window)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to query.
    return:
      type: System.Single
      description: Returns the display scale, or 0.0f on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetWindowDisplayScale(window As IntPtr) As Single
  overload: SharpSDL3.Sdl.GetWindowDisplayScale*
  nameWithType.vb: Sdl.GetWindowDisplayScale(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetWindowDisplayScale(System.IntPtr)
  name.vb: GetWindowDisplayScale(IntPtr)
- uid: SharpSDL3.Sdl.GetWindowFlags(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetWindowFlags(System.IntPtr)
  id: GetWindowFlags(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetWindowFlags(nint)
  nameWithType: Sdl.GetWindowFlags(nint)
  fullName: SharpSDL3.Sdl.GetWindowFlags(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetWindowFlags
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 3035
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the window flags.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateWindow(System.String%2cSystem.Int32%2cSystem.Int32%2cSharpSDL3.Enums.WindowFlags)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.HideWindow(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.MaximizeWindow(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.MinimizeWindow(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetWindowFullscreen(System.IntPtr%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetWindowMouseGrab(System.IntPtr%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.ShowWindow(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static WindowFlags GetWindowFlags(nint window)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to query.
    return:
      type: SharpSDL3.Enums.WindowFlags
      description: Returns a mask of the<xref href="SharpSDL3.Enums.WindowFlags" data-throw-if-not-resolved="false"></xref> associated with window.
    content.vb: Public Shared Function GetWindowFlags(window As IntPtr) As WindowFlags
  overload: SharpSDL3.Sdl.GetWindowFlags*
  nameWithType.vb: Sdl.GetWindowFlags(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetWindowFlags(System.IntPtr)
  name.vb: GetWindowFlags(IntPtr)
- uid: SharpSDL3.Sdl.GetWindowFromId(System.UInt32)
  commentId: M:SharpSDL3.Sdl.GetWindowFromId(System.UInt32)
  id: GetWindowFromId(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetWindowFromId(uint)
  nameWithType: Sdl.GetWindowFromId(uint)
  fullName: SharpSDL3.Sdl.GetWindowFromId(uint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetWindowFromId
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 3058
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get a window from a stored ID.
  remarks: >-
    The numeric ID is what <xref href="SharpSDL3.Structs.WindowEvent" data-throw-if-not-resolved="false"></xref> references, and

    is necessary to map these events to specific SDL_Window

    objects.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetWindowId(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint GetWindowFromId(uint id)
    parameters:
    - id: id
      type: System.UInt32
      description: the ID of the window.
    return:
      type: System.IntPtr
      description: (SDL_Window *) Returns the window associated with id or<a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if it doesn't exist; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetWindowFromId(id As UInteger) As IntPtr
  overload: SharpSDL3.Sdl.GetWindowFromId*
  nameWithType.vb: Sdl.GetWindowFromId(UInteger)
  fullName.vb: SharpSDL3.Sdl.GetWindowFromId(UInteger)
  name.vb: GetWindowFromId(UInteger)
- uid: SharpSDL3.Sdl.GetWindowFullscreenMode(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetWindowFullscreenMode(System.IntPtr)
  id: GetWindowFullscreenMode(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetWindowFullscreenMode(nint)
  nameWithType: Sdl.GetWindowFullscreenMode(nint)
  fullName: SharpSDL3.Sdl.GetWindowFullscreenMode(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetWindowFullscreenMode
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 3079
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Query the display mode to use when a window is visible at fullscreen.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetWindowFullscreenMode(System.IntPtr%2cSharpSDL3.Structs.DisplayMode%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetWindowFullscreen(System.IntPtr%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint GetWindowFullscreenMode(nint window)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to query.
    return:
      type: System.IntPtr
      description: (const SDL_DisplayMode *) Returns a pointer to the exclusive fullscreen mode to use or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for borderless fullscreen desktopmode.
    content.vb: Public Shared Function GetWindowFullscreenMode(window As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.GetWindowFullscreenMode*
  nameWithType.vb: Sdl.GetWindowFullscreenMode(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetWindowFullscreenMode(System.IntPtr)
  name.vb: GetWindowFullscreenMode(IntPtr)
- uid: SharpSDL3.Sdl.GetWindowFullScreenMode(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetWindowFullScreenMode(System.IntPtr)
  id: GetWindowFullScreenMode(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetWindowFullScreenMode(nint)
  nameWithType: Sdl.GetWindowFullScreenMode(nint)
  fullName: SharpSDL3.Sdl.GetWindowFullScreenMode(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetWindowFullScreenMode
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 3100
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Query the display mode to use when a window is visible at fullscreen.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetWindowFullscreenMode(System.IntPtr%2cSharpSDL3.Structs.DisplayMode%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetWindowFullscreen(System.IntPtr%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static DisplayMode GetWindowFullScreenMode(nint window)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to query.
    return:
      type: SharpSDL3.Structs.DisplayMode
      description: (const SDL_DisplayMode *) Returns a pointer to the exclusive fullscreen mode to use or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for borderless fullscreen desktop mode.
    content.vb: Public Shared Function GetWindowFullScreenMode(window As IntPtr) As DisplayMode
  overload: SharpSDL3.Sdl.GetWindowFullScreenMode*
  nameWithType.vb: Sdl.GetWindowFullScreenMode(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetWindowFullScreenMode(System.IntPtr)
  name.vb: GetWindowFullScreenMode(IntPtr)
- uid: SharpSDL3.Sdl.GetWindowICCProfile(System.IntPtr,System.UIntPtr@)
  commentId: M:SharpSDL3.Sdl.GetWindowICCProfile(System.IntPtr,System.UIntPtr@)
  id: GetWindowICCProfile(System.IntPtr,System.UIntPtr@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetWindowICCProfile(nint, out nuint)
  nameWithType: Sdl.GetWindowICCProfile(nint, out nuint)
  fullName: SharpSDL3.Sdl.GetWindowICCProfile(nint, out nuint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetWindowICCProfile
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 3120
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the raw ICC profile data for the screen the window is currently on.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static nint GetWindowICCProfile(nint window, out nuint size)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to query.
    - id: size
      type: System.UIntPtr
      description: the size of the ICC profile.
    return:
      type: System.IntPtr
      description: (void *) Returns the raw ICC profile data on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure;call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information. This should befreed with <xref href="SharpSDL3.Sdl.Free(System.IntPtr)" data-throw-if-not-resolved="false"></xref> when it is no longer needed.
    content.vb: Public Shared Function GetWindowICCProfile(window As IntPtr, size As UIntPtr) As IntPtr
  overload: SharpSDL3.Sdl.GetWindowICCProfile*
  nameWithType.vb: Sdl.GetWindowICCProfile(IntPtr, UIntPtr)
  fullName.vb: SharpSDL3.Sdl.GetWindowICCProfile(System.IntPtr, System.UIntPtr)
  name.vb: GetWindowICCProfile(IntPtr, UIntPtr)
- uid: SharpSDL3.Sdl.GetWindowId(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetWindowId(System.IntPtr)
  id: GetWindowId(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetWindowId(nint)
  nameWithType: Sdl.GetWindowId(nint)
  fullName: SharpSDL3.Sdl.GetWindowId(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetWindowId
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 3144
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the numeric ID of a window.
  remarks: >-
    The numeric ID is what <xref href="SharpSDL3.Structs.WindowEvent" data-throw-if-not-resolved="false"></xref> references, and

    is necessary to map these events to specific SDL_Window

    objects.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetWindowFromId(System.UInt32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static uint GetWindowId(nint window)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to query.
    return:
      type: System.UInt32
      description: Returns the ID of the window on success or 0 on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetWindowId(window As IntPtr) As UInteger
  overload: SharpSDL3.Sdl.GetWindowId*
  nameWithType.vb: Sdl.GetWindowId(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetWindowId(System.IntPtr)
  name.vb: GetWindowId(IntPtr)
- uid: SharpSDL3.Sdl.GetWindowKeyboardGrab(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetWindowKeyboardGrab(System.IntPtr)
  id: GetWindowKeyboardGrab(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetWindowKeyboardGrab(nint)
  nameWithType: Sdl.GetWindowKeyboardGrab(nint)
  fullName: SharpSDL3.Sdl.GetWindowKeyboardGrab(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetWindowKeyboardGrab
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 3166
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get a window's keyboard grab mode.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetWindowKeyboardGrab(System.IntPtr%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool GetWindowKeyboardGrab(nint window)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to query.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if keyboard is grabbed, and <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Public Shared Function GetWindowKeyboardGrab(window As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.GetWindowKeyboardGrab*
  nameWithType.vb: Sdl.GetWindowKeyboardGrab(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetWindowKeyboardGrab(System.IntPtr)
  name.vb: GetWindowKeyboardGrab(IntPtr)
- uid: SharpSDL3.Sdl.GetWindowMaximumSize(System.IntPtr,System.Int32@,System.Int32@)
  commentId: M:SharpSDL3.Sdl.GetWindowMaximumSize(System.IntPtr,System.Int32@,System.Int32@)
  id: GetWindowMaximumSize(System.IntPtr,System.Int32@,System.Int32@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetWindowMaximumSize(nint, out int, out int)
  nameWithType: Sdl.GetWindowMaximumSize(nint, out int, out int)
  fullName: SharpSDL3.Sdl.GetWindowMaximumSize(nint, out int, out int)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetWindowMaximumSize
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 3189
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the maximum size of a window's client area.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetWindowMinimumSize(System.IntPtr%2cSystem.Int32%40%2cSystem.Int32%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetWindowMaximumSize(System.IntPtr%2cSystem.Int32%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool GetWindowMaximumSize(nint window, out int w, out int h)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to query.
    - id: w
      type: System.Int32
      description: a pointer filled in with the maximum width of the window, may be discarded.
    - id: h
      type: System.Int32
      description: a pointer filled in with the maximum height of the window, may be discarded.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetWindowMaximumSize(window As IntPtr, w As Integer, h As Integer) As Boolean
  overload: SharpSDL3.Sdl.GetWindowMaximumSize*
  nameWithType.vb: Sdl.GetWindowMaximumSize(IntPtr, Integer, Integer)
  fullName.vb: SharpSDL3.Sdl.GetWindowMaximumSize(System.IntPtr, Integer, Integer)
  name.vb: GetWindowMaximumSize(IntPtr, Integer, Integer)
- uid: SharpSDL3.Sdl.GetWindowMaximumSize(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetWindowMaximumSize(System.IntPtr)
  id: GetWindowMaximumSize(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetWindowMaximumSize(nint)
  nameWithType: Sdl.GetWindowMaximumSize(nint)
  fullName: SharpSDL3.Sdl.GetWindowMaximumSize(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetWindowMaximumSize
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 3211
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the maximum size of a window's client area.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetWindowMinimumSize(System.IntPtr%2cSystem.Int32%40%2cSystem.Int32%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetWindowMaximumSize(System.IntPtr%2cSystem.Int32%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static Rect GetWindowMaximumSize(nint window)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to query.
    return:
      type: SharpSDL3.Structs.Rect
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetWindowMaximumSize(window As IntPtr) As Rect
  overload: SharpSDL3.Sdl.GetWindowMaximumSize*
  nameWithType.vb: Sdl.GetWindowMaximumSize(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetWindowMaximumSize(System.IntPtr)
  name.vb: GetWindowMaximumSize(IntPtr)
- uid: SharpSDL3.Sdl.GetWindowMinimumSize(System.IntPtr,System.Int32@,System.Int32@)
  commentId: M:SharpSDL3.Sdl.GetWindowMinimumSize(System.IntPtr,System.Int32@,System.Int32@)
  id: GetWindowMinimumSize(System.IntPtr,System.Int32@,System.Int32@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetWindowMinimumSize(nint, out int, out int)
  nameWithType: Sdl.GetWindowMinimumSize(nint, out int, out int)
  fullName: SharpSDL3.Sdl.GetWindowMinimumSize(nint, out int, out int)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetWindowMinimumSize
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 3235
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the minimum size of a window's client area.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetWindowMaximumSize(System.IntPtr%2cSystem.Int32%40%2cSystem.Int32%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetWindowMinimumSize(System.IntPtr%2cSystem.Int32%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool GetWindowMinimumSize(nint window, out int w, out int h)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to query.
    - id: w
      type: System.Int32
      description: a pointer filled in with the minimum width of the window, may be discarded.
    - id: h
      type: System.Int32
      description: a pointer filled in with the minimum height of the window, may be discarded.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetWindowMinimumSize(window As IntPtr, w As Integer, h As Integer) As Boolean
  overload: SharpSDL3.Sdl.GetWindowMinimumSize*
  nameWithType.vb: Sdl.GetWindowMinimumSize(IntPtr, Integer, Integer)
  fullName.vb: SharpSDL3.Sdl.GetWindowMinimumSize(System.IntPtr, Integer, Integer)
  name.vb: GetWindowMinimumSize(IntPtr, Integer, Integer)
- uid: SharpSDL3.Sdl.GetWindowMinimumSize(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetWindowMinimumSize(System.IntPtr)
  id: GetWindowMinimumSize(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetWindowMinimumSize(nint)
  nameWithType: Sdl.GetWindowMinimumSize(nint)
  fullName: SharpSDL3.Sdl.GetWindowMinimumSize(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetWindowMinimumSize
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 3257
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the minimum size of a window's client area.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetWindowMaximumSize(System.IntPtr%2cSystem.Int32%40%2cSystem.Int32%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetWindowMinimumSize(System.IntPtr%2cSystem.Int32%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static Rect GetWindowMinimumSize(nint window)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to query.
    return:
      type: SharpSDL3.Structs.Rect
      description: Returns a <xref href="SharpSDL3.Structs.Rect" data-throw-if-not-resolved="false"></xref> on success or a blank <xref href="SharpSDL3.Structs.Rect" data-throw-if-not-resolved="false"></xref> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetWindowMinimumSize(window As IntPtr) As Rect
  overload: SharpSDL3.Sdl.GetWindowMinimumSize*
  nameWithType.vb: Sdl.GetWindowMinimumSize(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetWindowMinimumSize(System.IntPtr)
  name.vb: GetWindowMinimumSize(IntPtr)
- uid: SharpSDL3.Sdl.GetWindowMouseGrab(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetWindowMouseGrab(System.IntPtr)
  id: GetWindowMouseGrab(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetWindowMouseGrab(nint)
  nameWithType: Sdl.GetWindowMouseGrab(nint)
  fullName: SharpSDL3.Sdl.GetWindowMouseGrab(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetWindowMouseGrab
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 3280
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get a window's mouse grab mode.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetWindowMouseRect(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetWindowMouseRect(System.IntPtr%2cSharpSDL3.Structs.Rect%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetWindowMouseGrab(System.IntPtr%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetWindowKeyboardGrab(System.IntPtr%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool GetWindowMouseGrab(nint window)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to query.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if mouse is grabbed, and <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Public Shared Function GetWindowMouseGrab(window As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.GetWindowMouseGrab*
  nameWithType.vb: Sdl.GetWindowMouseGrab(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetWindowMouseGrab(System.IntPtr)
  name.vb: GetWindowMouseGrab(IntPtr)
- uid: SharpSDL3.Sdl.GetWindowMouseRectPtr(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetWindowMouseRectPtr(System.IntPtr)
  id: GetWindowMouseRectPtr(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetWindowMouseRectPtr(nint)
  nameWithType: Sdl.GetWindowMouseRectPtr(nint)
  fullName: SharpSDL3.Sdl.GetWindowMouseRectPtr(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetWindowMouseRectPtr
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 3304
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the mouse confinement rectangle of a window.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetWindowMouseRect(System.IntPtr%2cSharpSDL3.Structs.Rect%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetWindowMouseGrab(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetWindowMouseGrab(System.IntPtr%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint GetWindowMouseRectPtr(nint window)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to query.
    return:
      type: System.IntPtr
      description: ''
    content.vb: Public Shared Function GetWindowMouseRectPtr(window As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.GetWindowMouseRectPtr*
  nameWithType.vb: Sdl.GetWindowMouseRectPtr(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetWindowMouseRectPtr(System.IntPtr)
  name.vb: GetWindowMouseRectPtr(IntPtr)
- uid: SharpSDL3.Sdl.GetWindowMouseRect(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetWindowMouseRect(System.IntPtr)
  id: GetWindowMouseRect(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetWindowMouseRect(nint)
  nameWithType: Sdl.GetWindowMouseRect(nint)
  fullName: SharpSDL3.Sdl.GetWindowMouseRect(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetWindowMouseRect
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 3326
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the mouse confinement rectangle of a window.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetWindowMouseRect(System.IntPtr%2cSharpSDL3.Structs.Rect%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetWindowMouseGrab(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetWindowMouseGrab(System.IntPtr%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static Rect GetWindowMouseRect(nint window)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to query.
    return:
      type: SharpSDL3.Structs.Rect
      description: (const <xref href="SharpSDL3.Structs.Rect" data-throw-if-not-resolved="false"></xref> *) Returns a pointer to the mouse confinement rectangle of a window, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if there isn't one.
    content.vb: Public Shared Function GetWindowMouseRect(window As IntPtr) As Rect
  overload: SharpSDL3.Sdl.GetWindowMouseRect*
  nameWithType.vb: Sdl.GetWindowMouseRect(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetWindowMouseRect(System.IntPtr)
  name.vb: GetWindowMouseRect(IntPtr)
- uid: SharpSDL3.Sdl.GetWindowOpacity(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetWindowOpacity(System.IntPtr)
  id: GetWindowOpacity(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetWindowOpacity(nint)
  nameWithType: Sdl.GetWindowOpacity(nint)
  fullName: SharpSDL3.Sdl.GetWindowOpacity(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetWindowOpacity
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 3347
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the opacity of a window.
  remarks: >-
    If transparency isn't supported on this platform, opacity will be returned as 1.0f without error.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetWindowOpacity(System.IntPtr%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static float GetWindowOpacity(nint window)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to get the current opacity value from.
    return:
      type: System.Single
      description: Returns the opacity, (0.0f - transparent, 1.0f - opaque), or -1.0f on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetWindowOpacity(window As IntPtr) As Single
  overload: SharpSDL3.Sdl.GetWindowOpacity*
  nameWithType.vb: Sdl.GetWindowOpacity(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetWindowOpacity(System.IntPtr)
  name.vb: GetWindowOpacity(IntPtr)
- uid: SharpSDL3.Sdl.GetWindowParent(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetWindowParent(System.IntPtr)
  id: GetWindowParent(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetWindowParent(nint)
  nameWithType: Sdl.GetWindowParent(nint)
  fullName: SharpSDL3.Sdl.GetWindowParent(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetWindowParent
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 3367
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get parent of a window.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreatePopupWindow(System.IntPtr%2cSystem.Int32%2cSystem.Int32%2cSystem.Int32%2cSystem.Int32%2cSharpSDL3.Enums.WindowFlags)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint GetWindowParent(nint window)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to query.
    return:
      type: System.IntPtr
      description: (SDL_Window *) Returns the parent of the window on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if the window has no parent.
    content.vb: Public Shared Function GetWindowParent(window As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.GetWindowParent*
  nameWithType.vb: Sdl.GetWindowParent(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetWindowParent(System.IntPtr)
  name.vb: GetWindowParent(IntPtr)
- uid: SharpSDL3.Sdl.GetWindowPixelDensity(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetWindowPixelDensity(System.IntPtr)
  id: GetWindowPixelDensity(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetWindowPixelDensity(nint)
  nameWithType: Sdl.GetWindowPixelDensity(nint)
  fullName: SharpSDL3.Sdl.GetWindowPixelDensity(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetWindowPixelDensity
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 3390
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the pixel density of a window.
  remarks: >-
    This is a ratio of pixel size to window size. For example, if the window is

    1920x1080 and it has a high density back buffer of 3840x2160 pixels, it

    would have a pixel density of 2.0.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetWindowDisplayScale(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static float GetWindowPixelDensity(nint window)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to query.
    return:
      type: System.Single
      description: Returns the pixel density or 0.0f on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetWindowPixelDensity(window As IntPtr) As Single
  overload: SharpSDL3.Sdl.GetWindowPixelDensity*
  nameWithType.vb: Sdl.GetWindowPixelDensity(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetWindowPixelDensity(System.IntPtr)
  name.vb: GetWindowPixelDensity(IntPtr)
- uid: SharpSDL3.Sdl.GetWindowPixelFormat(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetWindowPixelFormat(System.IntPtr)
  id: GetWindowPixelFormat(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetWindowPixelFormat(nint)
  nameWithType: Sdl.GetWindowPixelFormat(nint)
  fullName: SharpSDL3.Sdl.GetWindowPixelFormat(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetWindowPixelFormat
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 3409
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the pixel format associated with the window.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static PixelFormat GetWindowPixelFormat(nint window)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to query.
    return:
      type: SharpSDL3.Enums.PixelFormat
      description: Returns the pixel format of the window on success or <xref href="SharpSDL3.Enums.PixelFormat.Unknown" data-throw-if-not-resolved="false"></xref> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetWindowPixelFormat(window As IntPtr) As PixelFormat
  overload: SharpSDL3.Sdl.GetWindowPixelFormat*
  nameWithType.vb: Sdl.GetWindowPixelFormat(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetWindowPixelFormat(System.IntPtr)
  name.vb: GetWindowPixelFormat(IntPtr)
- uid: SharpSDL3.Sdl.GetWindowPosition(System.IntPtr,System.Int32@,System.Int32@)
  commentId: M:SharpSDL3.Sdl.GetWindowPosition(System.IntPtr,System.Int32@,System.Int32@)
  id: GetWindowPosition(System.IntPtr,System.Int32@,System.Int32@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetWindowPosition(nint, out int, out int)
  nameWithType: Sdl.GetWindowPosition(nint, out int, out int)
  fullName: SharpSDL3.Sdl.GetWindowPosition(nint, out int, out int)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetWindowPosition
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 3432
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the position of a window.
  remarks: >-
    This is the current position of the window as last reported by the windowing system.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetWindowPosition(System.IntPtr%2cSystem.Int32%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool GetWindowPosition(nint window, out int x, out int y)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to query.
    - id: x
      type: System.Int32
      description: a pointer filled in with the x position of the window, may be discarded.
    - id: y
      type: System.Int32
      description: a pointer filled in with the y position of the window, may be discarded.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetWindowPosition(window As IntPtr, x As Integer, y As Integer) As Boolean
  overload: SharpSDL3.Sdl.GetWindowPosition*
  nameWithType.vb: Sdl.GetWindowPosition(IntPtr, Integer, Integer)
  fullName.vb: SharpSDL3.Sdl.GetWindowPosition(System.IntPtr, Integer, Integer)
  name.vb: GetWindowPosition(IntPtr, Integer, Integer)
- uid: SharpSDL3.Sdl.GetWindowPosition(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetWindowPosition(System.IntPtr)
  id: GetWindowPosition(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetWindowPosition(nint)
  nameWithType: Sdl.GetWindowPosition(nint)
  fullName: SharpSDL3.Sdl.GetWindowPosition(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetWindowPosition
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 3455
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the position of a window.
  remarks: >-
    This is the current position of the window as last reported by the

    windowing system.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetWindowPosition(System.IntPtr%2cSystem.Int32%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static Point GetWindowPosition(nint window)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to query.
    return:
      type: SharpSDL3.Structs.Point
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetWindowPosition(window As IntPtr) As Point
  overload: SharpSDL3.Sdl.GetWindowPosition*
  nameWithType.vb: Sdl.GetWindowPosition(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetWindowPosition(System.IntPtr)
  name.vb: GetWindowPosition(IntPtr)
- uid: SharpSDL3.Sdl.GetWindowProperties(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetWindowProperties(System.IntPtr)
  id: GetWindowProperties(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetWindowProperties(nint)
  nameWithType: Sdl.GetWindowProperties(nint)
  fullName: SharpSDL3.Sdl.GetWindowProperties(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetWindowProperties
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 3475
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the properties associated with a window.
  remarks: >-
    The following read-only properties are provided by SDL:

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static uint GetWindowProperties(nint window)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to query.
    return:
      type: System.UInt32
      description: Returns a valid property ID on success or 0 on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetWindowProperties(window As IntPtr) As UInteger
  overload: SharpSDL3.Sdl.GetWindowProperties*
  nameWithType.vb: Sdl.GetWindowProperties(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetWindowProperties(System.IntPtr)
  name.vb: GetWindowProperties(IntPtr)
- uid: SharpSDL3.Sdl.GetWindows(System.Int32@)
  commentId: M:SharpSDL3.Sdl.GetWindows(System.Int32@)
  id: GetWindows(System.Int32@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetWindows(out int)
  nameWithType: Sdl.GetWindows(out int)
  fullName: SharpSDL3.Sdl.GetWindows(out int)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetWindows
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 3494
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get a list of valid windows.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static Span<nint> GetWindows(out int count)
    parameters:
    - id: count
      type: System.Int32
      description: a pointer filled in with the number of windows returned, may be discarded.
    return:
      type: System.Span{System.IntPtr}
      description: (SDL_Window **) Returns a <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> terminated array of SDL_Window pointers or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information. This is a single allocation that should be freed with <xref href="SharpSDL3.Sdl.Free(System.IntPtr)" data-throw-if-not-resolved="false"></xref> when it is nol onger needed.
    content.vb: Public Shared Function GetWindows(count As Integer) As Span(Of IntPtr)
  overload: SharpSDL3.Sdl.GetWindows*
  nameWithType.vb: Sdl.GetWindows(Integer)
  fullName.vb: SharpSDL3.Sdl.GetWindows(Integer)
  name.vb: GetWindows(Integer)
- uid: SharpSDL3.Sdl.GetWindows
  commentId: M:SharpSDL3.Sdl.GetWindows
  id: GetWindows
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetWindows()
  nameWithType: Sdl.GetWindows()
  fullName: SharpSDL3.Sdl.GetWindows()
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetWindows
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 3521
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get a list of valid windows.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static Span<nint> GetWindows()
    return:
      type: System.Span{System.IntPtr}
      description: (SDL_Window **) Returns a <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> terminated array ofSDL_Window pointers or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information. This is a single allocation that should be freed with <xref href="SharpSDL3.Sdl.Free(System.IntPtr)" data-throw-if-not-resolved="false"></xref> when it is no longer needed.
    content.vb: Public Shared Function GetWindows() As Span(Of IntPtr)
  overload: SharpSDL3.Sdl.GetWindows*
- uid: SharpSDL3.Sdl.GetWindowSafeArea(System.IntPtr,SharpSDL3.Structs.Rect@)
  commentId: M:SharpSDL3.Sdl.GetWindowSafeArea(System.IntPtr,SharpSDL3.Structs.Rect@)
  id: GetWindowSafeArea(System.IntPtr,SharpSDL3.Structs.Rect@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetWindowSafeArea(nint, out Rect)
  nameWithType: Sdl.GetWindowSafeArea(nint, out Rect)
  fullName: SharpSDL3.Sdl.GetWindowSafeArea(nint, out SharpSDL3.Structs.Rect)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetWindowSafeArea
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 3539
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the safe area for this window.
  remarks: >-
    Some devices have portions of the screen which are partially obscured or

    not interactive, possibly due to on-screen controls, curved edges, camera

    notches, TV overscan, etc. This function provides the area of the window

    which is safe to have interactable content. You should continue rendering

    into the rest of the window, but it should not contain visually important

    or interactible content.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool GetWindowSafeArea(nint window, out Rect rect)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to query.
    - id: rect
      type: SharpSDL3.Structs.Rect
      description: a pointer filled in with the client area that is safe for interactive content.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetWindowSafeArea(window As IntPtr, rect As Rect) As Boolean
  overload: SharpSDL3.Sdl.GetWindowSafeArea*
  nameWithType.vb: Sdl.GetWindowSafeArea(IntPtr, Rect)
  fullName.vb: SharpSDL3.Sdl.GetWindowSafeArea(System.IntPtr, SharpSDL3.Structs.Rect)
  name.vb: GetWindowSafeArea(IntPtr, Rect)
- uid: SharpSDL3.Sdl.GetWindowSafeArea(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetWindowSafeArea(System.IntPtr)
  id: GetWindowSafeArea(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetWindowSafeArea(nint)
  nameWithType: Sdl.GetWindowSafeArea(nint)
  fullName: SharpSDL3.Sdl.GetWindowSafeArea(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetWindowSafeArea
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 3565
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the safe area for this window.
  remarks: >-
    Some devices have portions of the screen which are partially obscured or

    not interactive, possibly due to on-screen controls, curved edges, camera

    notches, TV overscan, etc. This function provides the area of the window

    which is safe to have interactable content. You should continue rendering

    into the rest of the window, but it should not contain visually important

    or interactible content.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static Rect GetWindowSafeArea(nint window)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to query.
    return:
      type: SharpSDL3.Structs.Rect
      description: Returns a <xref href="SharpSDL3.Structs.Rect" data-throw-if-not-resolved="false"></xref> on success or an empty <xref href="SharpSDL3.Structs.Rect" data-throw-if-not-resolved="false"></xref> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetWindowSafeArea(window As IntPtr) As Rect
  overload: SharpSDL3.Sdl.GetWindowSafeArea*
  nameWithType.vb: Sdl.GetWindowSafeArea(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetWindowSafeArea(System.IntPtr)
  name.vb: GetWindowSafeArea(IntPtr)
- uid: SharpSDL3.Sdl.GetWindowSize(System.IntPtr,System.Int32@,System.Int32@)
  commentId: M:SharpSDL3.Sdl.GetWindowSize(System.IntPtr,System.Int32@,System.Int32@)
  id: GetWindowSize(System.IntPtr,System.Int32@,System.Int32@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetWindowSize(nint, out int, out int)
  nameWithType: Sdl.GetWindowSize(nint, out int, out int)
  fullName: SharpSDL3.Sdl.GetWindowSize(nint, out int, out int)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetWindowSize
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 3591
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the size of a window's client area.
  remarks: >-
    The window pixel size may differ from its window coordinate size if the

    window is on a high pixel density display. Use <xref href="SharpSDL3.Sdl.GetWindowSizeInPixels(System.IntPtr%2cSystem.Int32%40%2cSystem.Int32%40)" data-throw-if-not-resolved="false"></xref> or <xref href="SharpSDL3.Sdl.GetRenderOutputSize(System.IntPtr%2cSystem.Int32%40%2cSystem.Int32%40)" data-throw-if-not-resolved="false"></xref> to get the real client area size in pixels.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetRenderOutputSize(System.IntPtr%2cSystem.Int32%40%2cSystem.Int32%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetWindowSizeInPixels(System.IntPtr%2cSystem.Int32%40%2cSystem.Int32%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetWindowSize(System.IntPtr%2cSystem.Int32%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool GetWindowSize(nint window, out int w, out int h)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to query the width and height from.
    - id: w
      type: System.Int32
      description: a pointer filled in with the width of the window, may be discarded.
    - id: h
      type: System.Int32
      description: a pointer filled in with the height of the window, may be discarded.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetWindowSize(window As IntPtr, w As Integer, h As Integer) As Boolean
  overload: SharpSDL3.Sdl.GetWindowSize*
  nameWithType.vb: Sdl.GetWindowSize(IntPtr, Integer, Integer)
  fullName.vb: SharpSDL3.Sdl.GetWindowSize(System.IntPtr, Integer, Integer)
  name.vb: GetWindowSize(IntPtr, Integer, Integer)
- uid: SharpSDL3.Sdl.GetWindowSize(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetWindowSize(System.IntPtr)
  id: GetWindowSize(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetWindowSize(nint)
  nameWithType: Sdl.GetWindowSize(nint)
  fullName: SharpSDL3.Sdl.GetWindowSize(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetWindowSize
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 3616
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the size of a window's client area.
  remarks: >-
    The window pixel size may differ from its window coordinate size if the

    window is on a high pixel density display. Use <xref href="SharpSDL3.Sdl.GetWindowSizeInPixels(System.IntPtr%2cSystem.Int32%40%2cSystem.Int32%40)" data-throw-if-not-resolved="false"></xref> or <xref href="SharpSDL3.Sdl.GetRenderOutputSize(System.IntPtr%2cSystem.Int32%40%2cSystem.Int32%40)" data-throw-if-not-resolved="false"></xref> to get the real client area size in pixels.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetRenderOutputSize(System.IntPtr%2cSystem.Int32%40%2cSystem.Int32%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetWindowSizeInPixels(System.IntPtr%2cSystem.Int32%40%2cSystem.Int32%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetWindowSize(System.IntPtr%2cSystem.Int32%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static Rect GetWindowSize(nint window)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to query the width and height from.
    return:
      type: SharpSDL3.Structs.Rect
      description: Returns a <xref href="SharpSDL3.Structs.Rect" data-throw-if-not-resolved="false"></xref> on success or an empty <xref href="SharpSDL3.Structs.Rect" data-throw-if-not-resolved="false"></xref> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetWindowSize(window As IntPtr) As Rect
  overload: SharpSDL3.Sdl.GetWindowSize*
  nameWithType.vb: Sdl.GetWindowSize(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetWindowSize(System.IntPtr)
  name.vb: GetWindowSize(IntPtr)
- uid: SharpSDL3.Sdl.GetWindowSizeInPixels(System.IntPtr,System.Int32@,System.Int32@)
  commentId: M:SharpSDL3.Sdl.GetWindowSizeInPixels(System.IntPtr,System.Int32@,System.Int32@)
  id: GetWindowSizeInPixels(System.IntPtr,System.Int32@,System.Int32@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetWindowSizeInPixels(nint, out int, out int)
  nameWithType: Sdl.GetWindowSizeInPixels(nint, out int, out int)
  fullName: SharpSDL3.Sdl.GetWindowSizeInPixels(nint, out int, out int)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetWindowSizeInPixels
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 3639
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the size of a window's client area, in pixels.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateWindow(System.String%2cSystem.Int32%2cSystem.Int32%2cSharpSDL3.Enums.WindowFlags)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetWindowSize(System.IntPtr%2cSystem.Int32%40%2cSystem.Int32%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool GetWindowSizeInPixels(nint window, out int w, out int h)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window from which the drawable size should be queried.
    - id: w
      type: System.Int32
      description: a pointer to variable for storing the width in pixels, may be discarded.
    - id: h
      type: System.Int32
      description: a pointer to variable for storing the height in pixels, may be discarded.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetWindowSizeInPixels(window As IntPtr, w As Integer, h As Integer) As Boolean
  overload: SharpSDL3.Sdl.GetWindowSizeInPixels*
  nameWithType.vb: Sdl.GetWindowSizeInPixels(IntPtr, Integer, Integer)
  fullName.vb: SharpSDL3.Sdl.GetWindowSizeInPixels(System.IntPtr, Integer, Integer)
  name.vb: GetWindowSizeInPixels(IntPtr, Integer, Integer)
- uid: SharpSDL3.Sdl.GetWindowSizeInPixels(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetWindowSizeInPixels(System.IntPtr)
  id: GetWindowSizeInPixels(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetWindowSizeInPixels(nint)
  nameWithType: Sdl.GetWindowSizeInPixels(nint)
  fullName: SharpSDL3.Sdl.GetWindowSizeInPixels(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetWindowSizeInPixels
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 3661
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the size of a window's client area, in pixels.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateWindow(System.String%2cSystem.Int32%2cSystem.Int32%2cSharpSDL3.Enums.WindowFlags)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetWindowSize(System.IntPtr%2cSystem.Int32%40%2cSystem.Int32%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static Rect GetWindowSizeInPixels(nint window)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window from which the drawable size should be queried.
    return:
      type: SharpSDL3.Structs.Rect
      description: Returns a <xref href="SharpSDL3.Structs.Rect" data-throw-if-not-resolved="false"></xref> on success or an empty <xref href="SharpSDL3.Structs.Rect" data-throw-if-not-resolved="false"></xref> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetWindowSizeInPixels(window As IntPtr) As Rect
  overload: SharpSDL3.Sdl.GetWindowSizeInPixels*
  nameWithType.vb: Sdl.GetWindowSizeInPixels(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetWindowSizeInPixels(System.IntPtr)
  name.vb: GetWindowSizeInPixels(IntPtr)
- uid: SharpSDL3.Sdl.GetWindowSurface(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetWindowSurface(System.IntPtr)
  id: GetWindowSurface(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetWindowSurface(nint)
  nameWithType: Sdl.GetWindowSurface(nint)
  fullName: SharpSDL3.Sdl.GetWindowSurface(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetWindowSurface
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 3690
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the SDL surface associated with the window.
  remarks: >-
    A new surface will be created with the optimal format for the window, if necessary. This surface will be freed when the window is destroyed. Do not free this surface.

    <p>This surface will be invalidated if the window is resized.After resizing a window this function must be called again to return a valid surface.</p>

    <p>You may not combine this with 3D or the rendering API on this window.</p>

    <p>This function is affected by SDL_HINT_FRAMEBUFFER_ACCELERATION.</p>

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.DestroyWindowSurface(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.WindowHasSurface(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.UpdateWindowSurface(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.UpdateWindowSurfaceRects(System.IntPtr%2cSystem.Span%7bSharpSDL3.Structs.Rect%7d%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint GetWindowSurface(nint window)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to query.
    return:
      type: System.IntPtr
      description: (SDL_Surface *) Returns the surface associated with the window, or <xref href="System.IntPtr.Zero" data-throw-if-not-resolved="false"></xref> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetWindowSurface(window As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.GetWindowSurface*
  nameWithType.vb: Sdl.GetWindowSurface(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetWindowSurface(System.IntPtr)
  name.vb: GetWindowSurface(IntPtr)
- uid: SharpSDL3.Sdl.GetWindowSurfaceVSync(System.IntPtr,System.Int32@)
  commentId: M:SharpSDL3.Sdl.GetWindowSurfaceVSync(System.IntPtr,System.Int32@)
  id: GetWindowSurfaceVSync(System.IntPtr,System.Int32@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetWindowSurfaceVSync(nint, out int)
  nameWithType: Sdl.GetWindowSurfaceVSync(nint, out int)
  fullName: SharpSDL3.Sdl.GetWindowSurfaceVSync(nint, out int)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetWindowSurfaceVSync
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 3711
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get VSync for the window surface.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetWindowSurfaceVSync(System.IntPtr%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool GetWindowSurfaceVSync(nint window, out int vsync)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to query.
    - id: vsync
      type: System.Int32
      description: an int filled with the current vertical refresh sync interval. See <xref href="SharpSDL3.Sdl.SetWindowSurfaceVSync(System.IntPtr%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref> for the meaning of the value.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetWindowSurfaceVSync(window As IntPtr, vsync As Integer) As Boolean
  overload: SharpSDL3.Sdl.GetWindowSurfaceVSync*
  nameWithType.vb: Sdl.GetWindowSurfaceVSync(IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.GetWindowSurfaceVSync(System.IntPtr, Integer)
  name.vb: GetWindowSurfaceVSync(IntPtr, Integer)
- uid: SharpSDL3.Sdl.GetWindowSurfaceVSync(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetWindowSurfaceVSync(System.IntPtr)
  id: GetWindowSurfaceVSync(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetWindowSurfaceVSync(nint)
  nameWithType: Sdl.GetWindowSurfaceVSync(nint)
  fullName: SharpSDL3.Sdl.GetWindowSurfaceVSync(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetWindowSurfaceVSync
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 3732
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get VSync for the window surface.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetWindowSurfaceVSync(System.IntPtr%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static int GetWindowSurfaceVSync(nint window)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to query.
    return:
      type: System.Int32
      description: Returns the vsync on success or 0 on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetWindowSurfaceVSync(window As IntPtr) As Integer
  overload: SharpSDL3.Sdl.GetWindowSurfaceVSync*
  nameWithType.vb: Sdl.GetWindowSurfaceVSync(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetWindowSurfaceVSync(System.IntPtr)
  name.vb: GetWindowSurfaceVSync(IntPtr)
- uid: SharpSDL3.Sdl.GetWindowTitle(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetWindowTitle(System.IntPtr)
  id: GetWindowTitle(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetWindowTitle(nint)
  nameWithType: Sdl.GetWindowTitle(nint)
  fullName: SharpSDL3.Sdl.GetWindowTitle(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetWindowTitle
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 3752
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the title of a window.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetWindowTitle(System.IntPtr%2cSystem.String)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static string GetWindowTitle(nint window)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to query.
    return:
      type: System.String
      description: Returns the title of the window in UTF-8 format or "" if there is no title.
    content.vb: Public Shared Function GetWindowTitle(window As IntPtr) As String
  overload: SharpSDL3.Sdl.GetWindowTitle*
  nameWithType.vb: Sdl.GetWindowTitle(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetWindowTitle(System.IntPtr)
  name.vb: GetWindowTitle(IntPtr)
- uid: SharpSDL3.Sdl.GuidToString(SharpSDL3.Structs.SdlGuid,System.String,System.Int32)
  commentId: M:SharpSDL3.Sdl.GuidToString(SharpSDL3.Structs.SdlGuid,System.String,System.Int32)
  id: GuidToString(SharpSDL3.Structs.SdlGuid,System.String,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GuidToString(SdlGuid, string, int)
  nameWithType: Sdl.GuidToString(SdlGuid, string, int)
  fullName: SharpSDL3.Sdl.GuidToString(SharpSDL3.Structs.SdlGuid, string, int)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GuidToString
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 3773
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get an ASCII string representation for a given <xref href="SharpSDL3.Structs.SdlGuid" data-throw-if-not-resolved="false"></xref>.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.StringToGUID(System.String)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void GuidToString(SdlGuid guid, string pszGuid, int cbGuid)
    parameters:
    - id: guid
      type: SharpSDL3.Structs.SdlGuid
      description: the <xref href="SharpSDL3.Structs.SdlGuid" data-throw-if-not-resolved="false"></xref> you wish to convert to string.
    - id: pszGuid
      type: System.String
      description: buffer in which to write the ASCII string.
    - id: cbGuid
      type: System.Int32
      description: the size of pszGUID, should be at least 33 bytes.
    content.vb: Public Shared Sub GuidToString(guid As SdlGuid, pszGuid As String, cbGuid As Integer)
  overload: SharpSDL3.Sdl.GuidToString*
  nameWithType.vb: Sdl.GuidToString(SdlGuid, String, Integer)
  fullName.vb: SharpSDL3.Sdl.GuidToString(SharpSDL3.Structs.SdlGuid, String, Integer)
  name.vb: GuidToString(SdlGuid, String, Integer)
- uid: SharpSDL3.Sdl.HasClipboardData(System.String)
  commentId: M:SharpSDL3.Sdl.HasClipboardData(System.String)
  id: HasClipboardData(System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: HasClipboardData(string)
  nameWithType: Sdl.HasClipboardData(string)
  fullName: SharpSDL3.Sdl.HasClipboardData(string)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: HasClipboardData
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 3790
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Query whether there is data in the clipboard for the provided mime type.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetClipboardData(SharpSDL3.Delegates.SdlClipboardDataCallback%2cSharpSDL3.Delegates.SdlClipboardCleanupCallback%2cSystem.IntPtr%2cSystem.IntPtr%2cSystem.UIntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetClipboardData(System.String)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool HasClipboardData(string mimeType)
    parameters:
    - id: mimeType
      type: System.String
      description: the mime type to check for data for.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if there exists data in clipboard for the provided mimetype, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if it does not.
    content.vb: Public Shared Function HasClipboardData(mimeType As String) As Boolean
  overload: SharpSDL3.Sdl.HasClipboardData*
  nameWithType.vb: Sdl.HasClipboardData(String)
  fullName.vb: SharpSDL3.Sdl.HasClipboardData(String)
  name.vb: HasClipboardData(String)
- uid: SharpSDL3.Sdl.HasClipboardText
  commentId: M:SharpSDL3.Sdl.HasClipboardText
  id: HasClipboardText
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: HasClipboardText()
  nameWithType: Sdl.HasClipboardText()
  fullName: SharpSDL3.Sdl.HasClipboardText()
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: HasClipboardText
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 3810
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Query whether the clipboard exists and contains a non-empty text string.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetClipboardText" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetClipboardText(System.String)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool HasClipboardText()
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the clipboard has text, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if it does not.
    content.vb: Public Shared Function HasClipboardText() As Boolean
  overload: SharpSDL3.Sdl.HasClipboardText*
- uid: SharpSDL3.Sdl.HasKeyboard
  commentId: M:SharpSDL3.Sdl.HasKeyboard
  id: HasKeyboard
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: HasKeyboard()
  nameWithType: Sdl.HasKeyboard()
  fullName: SharpSDL3.Sdl.HasKeyboard()
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: HasKeyboard
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 3825
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Return whether a keyboard is currently connected.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetKeyboards(System.Int32%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool HasKeyboard()
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if a keyboard is connected, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Public Shared Function HasKeyboard() As Boolean
  overload: SharpSDL3.Sdl.HasKeyboard*
- uid: SharpSDL3.Sdl.HasPrimarySelectionText
  commentId: M:SharpSDL3.Sdl.HasPrimarySelectionText
  id: HasPrimarySelectionText
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: HasPrimarySelectionText()
  nameWithType: Sdl.HasPrimarySelectionText()
  fullName: SharpSDL3.Sdl.HasPrimarySelectionText()
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: HasPrimarySelectionText
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 3841
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Query whether the primary selection exists and contains a non-empty text string.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetPrimarySelectionText" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetPrimarySelectionText(System.String)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool HasPrimarySelectionText()
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the primary selection has text, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if it does not.
    content.vb: Public Shared Function HasPrimarySelectionText() As Boolean
  overload: SharpSDL3.Sdl.HasPrimarySelectionText*
- uid: SharpSDL3.Sdl.HasProperty(System.UInt32,System.String)
  commentId: M:SharpSDL3.Sdl.HasProperty(System.UInt32,System.String)
  id: HasProperty(System.UInt32,System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: HasProperty(uint, string)
  nameWithType: Sdl.HasProperty(uint, string)
  fullName: SharpSDL3.Sdl.HasProperty(uint, string)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: HasProperty
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 3858
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Return whether a property exists in a group of properties.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetPropertyType(System.UInt32%2cSystem.String)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool HasProperty(uint props, string name)
    parameters:
    - id: props
      type: System.UInt32
      description: the properties to query.
    - id: name
      type: System.String
      description: the name of the property to query.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the property exists, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if it doesn't.
    content.vb: Public Shared Function HasProperty(props As UInteger, name As String) As Boolean
  overload: SharpSDL3.Sdl.HasProperty*
  nameWithType.vb: Sdl.HasProperty(UInteger, String)
  fullName.vb: SharpSDL3.Sdl.HasProperty(UInteger, String)
  name.vb: HasProperty(UInteger, String)
- uid: SharpSDL3.Sdl.HasRectIntersection(SharpSDL3.Structs.Rect@,SharpSDL3.Structs.Rect@)
  commentId: M:SharpSDL3.Sdl.HasRectIntersection(SharpSDL3.Structs.Rect@,SharpSDL3.Structs.Rect@)
  id: HasRectIntersection(SharpSDL3.Structs.Rect@,SharpSDL3.Structs.Rect@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: HasRectIntersection(ref Rect, ref Rect)
  nameWithType: Sdl.HasRectIntersection(ref Rect, ref Rect)
  fullName: SharpSDL3.Sdl.HasRectIntersection(ref SharpSDL3.Structs.Rect, ref SharpSDL3.Structs.Rect)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: HasRectIntersection
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 3880
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Determine whether two rectangles intersect.
  remarks: >-
    If either pointer is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> the function will return false.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetRectIntersection(SharpSDL3.Structs.Rect%40%2cSharpSDL3.Structs.Rect%40%2cSharpSDL3.Structs.Rect%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool HasRectIntersection(ref Rect a, ref Rect b)
    parameters:
    - id: a
      type: SharpSDL3.Structs.Rect
      description: an <xref href="SharpSDL3.Structs.Rect" data-throw-if-not-resolved="false"></xref> structure representing the first rectangle.
    - id: b
      type: SharpSDL3.Structs.Rect
      description: an <xref href="SharpSDL3.Structs.Rect" data-throw-if-not-resolved="false"></xref> structure representing the second rectangle.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if there is an intersection, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Public Shared Function HasRectIntersection(a As Rect, b As Rect) As Boolean
  overload: SharpSDL3.Sdl.HasRectIntersection*
  nameWithType.vb: Sdl.HasRectIntersection(Rect, Rect)
  fullName.vb: SharpSDL3.Sdl.HasRectIntersection(SharpSDL3.Structs.Rect, SharpSDL3.Structs.Rect)
  name.vb: HasRectIntersection(Rect, Rect)
- uid: SharpSDL3.Sdl.HasRectIntersectionFloat(SharpSDL3.Structs.FRect@,SharpSDL3.Structs.FRect@)
  commentId: M:SharpSDL3.Sdl.HasRectIntersectionFloat(SharpSDL3.Structs.FRect@,SharpSDL3.Structs.FRect@)
  id: HasRectIntersectionFloat(SharpSDL3.Structs.FRect@,SharpSDL3.Structs.FRect@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: HasRectIntersectionFloat(ref FRect, ref FRect)
  nameWithType: Sdl.HasRectIntersectionFloat(ref FRect, ref FRect)
  fullName: SharpSDL3.Sdl.HasRectIntersectionFloat(ref SharpSDL3.Structs.FRect, ref SharpSDL3.Structs.FRect)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: HasRectIntersectionFloat
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 3897
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Determine whether two rectangles intersect with float precision.
  remarks: >-
    If either pointer is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> the function will return false.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetRectIntersection(SharpSDL3.Structs.Rect%40%2cSharpSDL3.Structs.Rect%40%2cSharpSDL3.Structs.Rect%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool HasRectIntersectionFloat(ref FRect a, ref FRect b)
    parameters:
    - id: a
      type: SharpSDL3.Structs.FRect
      description: an <xref href="SharpSDL3.Structs.FRect" data-throw-if-not-resolved="false"></xref> structure representing the first rectangle.
    - id: b
      type: SharpSDL3.Structs.FRect
      description: an <xref href="SharpSDL3.Structs.FRect" data-throw-if-not-resolved="false"></xref> structure representing the second rectangle.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if there is an intersection, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Public Shared Function HasRectIntersectionFloat(a As FRect, b As FRect) As Boolean
  overload: SharpSDL3.Sdl.HasRectIntersectionFloat*
  nameWithType.vb: Sdl.HasRectIntersectionFloat(FRect, FRect)
  fullName.vb: SharpSDL3.Sdl.HasRectIntersectionFloat(SharpSDL3.Structs.FRect, SharpSDL3.Structs.FRect)
  name.vb: HasRectIntersectionFloat(FRect, FRect)
- uid: SharpSDL3.Sdl.HasScreenKeyboardSupport
  commentId: M:SharpSDL3.Sdl.HasScreenKeyboardSupport
  id: HasScreenKeyboardSupport
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: HasScreenKeyboardSupport()
  nameWithType: Sdl.HasScreenKeyboardSupport()
  fullName: SharpSDL3.Sdl.HasScreenKeyboardSupport()
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: HasScreenKeyboardSupport
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 3913
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Check whether the platform has screen keyboard support.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.StartTextInput(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.ScreenKeyboardShown(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool HasScreenKeyboardSupport()
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the platform has some screen keyboard support or<a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if not.
    content.vb: Public Shared Function HasScreenKeyboardSupport() As Boolean
  overload: SharpSDL3.Sdl.HasScreenKeyboardSupport*
- uid: SharpSDL3.Sdl.HideWindow(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.HideWindow(System.IntPtr)
  id: HideWindow(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: HideWindow(nint)
  nameWithType: Sdl.HideWindow(nint)
  fullName: SharpSDL3.Sdl.HideWindow(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: HideWindow
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 3930
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Hide a window.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.ShowWindow(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Enums.WindowFlags.Hidden" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool HideWindow(nint window)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to hide.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function HideWindow(window As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.HideWindow*
  nameWithType.vb: Sdl.HideWindow(IntPtr)
  fullName.vb: SharpSDL3.Sdl.HideWindow(System.IntPtr)
  name.vb: HideWindow(IntPtr)
- uid: SharpSDL3.Sdl.Init(SharpSDL3.Enums.InitFlags)
  commentId: M:SharpSDL3.Sdl.Init(SharpSDL3.Enums.InitFlags)
  id: Init(SharpSDL3.Enums.InitFlags)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: Init(InitFlags)
  nameWithType: Sdl.Init(InitFlags)
  fullName: SharpSDL3.Sdl.Init(SharpSDL3.Enums.InitFlags)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: Init
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 3968
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Initialize the SDL library.
  remarks: >-
    <xref href="SharpSDL3.Sdl.Init" data-throw-if-not-resolved="false"></xref> simply forwards to calling <xref href="SharpSDL3.Sdl.InitSubSystem(SharpSDL3.Enums.InitFlags)" data-throw-if-not-resolved="false"></xref>. Therefore, the two may be used interchangeably. Though for readability of your code <xref href="SharpSDL3.Sdl.InitSubSystem(SharpSDL3.Enums.InitFlags)" data-throw-if-not-resolved="false"></xref> might be preferred.

    <p>The file I/O(for example: <xref href="SharpSDL3.Sdl.IOFromFile(System.String%2cSystem.String)" data-throw-if-not-resolved="false"></xref>) and threading (CreateThread) subsystems are initialized by default.</p>

    <p>Message boxes(<xref href="SharpSDL3.Sdl.ShowSimpleMessageBox(SharpSDL3.Enums.MessageBoxFlags%2cSystem.String%2cSystem.String%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>) also attempt to work without initializing the video subsystem, in hopes of being useful in showing an error dialog when <xref href="SharpSDL3.Sdl.Init" data-throw-if-not-resolved="false"></xref> fails. You must specifically initialize other subsystems if you use them in your application.</p>

    <p>Logging(such as <xref href="SharpSDL3.Sdl.Log(System.String)" data-throw-if-not-resolved="false"></xref>) works without initialization, too.

    flags may be any of the following OR'd together:

    <ul><li><xref href="SharpSDL3.Enums.InitFlags.Audio" data-throw-if-not-resolved="false"></xref>: audio subsystem; automatically initializes the events subsystem</li><li><xref href="SharpSDL3.Enums.InitFlags.Video" data-throw-if-not-resolved="false"></xref>: video subsystem; automatically initializes the events subsystem, should be initialized on the main thread.</li><li><xref href="SharpSDL3.Enums.InitFlags.Joystick" data-throw-if-not-resolved="false"></xref>: joystick subsystem; automatically initializes the events subsystem</li><li><xref href="SharpSDL3.Enums.InitFlags.Haptic" data-throw-if-not-resolved="false"></xref>: haptic(force feedback) subsystem</li><li><xref href="SharpSDL3.Enums.InitFlags.Gamepad" data-throw-if-not-resolved="false"></xref>: gamepad subsystem; automatically initializes the joystick subsystem</li><li><xref href="SharpSDL3.Enums.InitFlags.Events" data-throw-if-not-resolved="false"></xref>: events subsystem</li><li><xref href="SharpSDL3.Enums.InitFlags.Sensor" data-throw-if-not-resolved="false"></xref>: sensor subsystem; automatically initializes the events subsystem</li><li><xref href="SharpSDL3.Enums.InitFlags.Camera" data-throw-if-not-resolved="false"></xref>: camera subsystem; automatically initializes the events subsystem</li><li><xref href="SharpSDL3.Enums.InitFlags.Everything" data-throw-if-not-resolved="false"></xref>: all of the above subsystems; automatically initializes the events subsystem</li></ul>

    </p>

    <p>Subsystem initialization is ref-counted, you must call <xref href="SharpSDL3.Sdl.QuitSubSystem(SharpSDL3.Enums.InitFlags)" data-throw-if-not-resolved="false"></xref> for each <xref href="SharpSDL3.Sdl.InitSubSystem(SharpSDL3.Enums.InitFlags)" data-throw-if-not-resolved="false"></xref> to correctly shutdown a subsystem manually(or call <xref href="SharpSDL3.Sdl.Quit" data-throw-if-not-resolved="false"></xref> to force shutdown). If a subsystem is already loaded then this call will increase the ref-count and return.</p>

    <p>Consider reporting some basic metadata about your application before calling <xref href="SharpSDL3.Sdl.Init" data-throw-if-not-resolved="false"></xref>, using either <xref href="SharpSDL3.Sdl.SetAppMetadata(System.String%2cSystem.String%2cSystem.String)" data-throw-if-not-resolved="false"></xref> or <xref href="SharpSDL3.Sdl.SetAppMetadataProperty(System.String%2cSystem.String)" data-throw-if-not-resolved="false"></xref>.</p>
  example: []
  syntax:
    content: public static bool Init(InitFlags flags)
    parameters:
    - id: flags
      type: SharpSDL3.Enums.InitFlags
      description: subsystem initialization flags.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function Init(flags As InitFlags) As Boolean
  overload: SharpSDL3.Sdl.Init*
- uid: SharpSDL3.Sdl.InitSubSystem(SharpSDL3.Enums.InitFlags)
  commentId: M:SharpSDL3.Sdl.InitSubSystem(SharpSDL3.Enums.InitFlags)
  id: InitSubSystem(SharpSDL3.Enums.InitFlags)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: InitSubSystem(InitFlags)
  nameWithType: Sdl.InitSubSystem(InitFlags)
  fullName: SharpSDL3.Sdl.InitSubSystem(SharpSDL3.Enums.InitFlags)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: InitSubSystem
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 3991
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Compatibility function to initialize the SDL library.
  remarks: >-
    This function and <xref href="SharpSDL3.Sdl.Init" data-throw-if-not-resolved="false"></xref>() are interchangeable.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.Init" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.Quit" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.QuitSubSystem(SharpSDL3.Enums.InitFlags)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool InitSubSystem(InitFlags flags)
    parameters:
    - id: flags
      type: SharpSDL3.Enums.InitFlags
      description: any of the flags used by <xref href="SharpSDL3.Sdl.Init" data-throw-if-not-resolved="false"></xref>(); see <xref href="SharpSDL3.Sdl.Init" data-throw-if-not-resolved="false"></xref> for details.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function InitSubSystem(flags As InitFlags) As Boolean
  overload: SharpSDL3.Sdl.InitSubSystem*
- uid: SharpSDL3.Sdl.IsMainThread
  commentId: M:SharpSDL3.Sdl.IsMainThread
  id: IsMainThread
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: IsMainThread()
  nameWithType: Sdl.IsMainThread()
  fullName: SharpSDL3.Sdl.IsMainThread()
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: IsMainThread
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 4017
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Return whether this is the main thread.
  remarks: >-
    On Apple platforms, the main thread is the thread that runs your program's

    main() entry point. On other platforms, the main thread is the one that

    calls SDL_Init(SDL_INIT_VIDEO), which should

    usually be the one that runs your program's main() entry point. If you are

    using the main callbacks, <xref href="SharpSDL3.Delegates.SdlAppInitFunc" data-throw-if-not-resolved="false"></xref>,

    <xref href="SharpSDL3.Delegates.SdlAppIterateFunc" data-throw-if-not-resolved="false"></xref>, and <xref href="SharpSDL3.Delegates.SdlAppQuitFunc" data-throw-if-not-resolved="false"></xref> are

    all called on the main thread.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.RunOnMainThread(SharpSDL3.Delegates.SdlMainThreadCallback%2cSystem.IntPtr%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool IsMainThread()
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if this thread is the main thread, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Public Shared Function IsMainThread() As Boolean
  overload: SharpSDL3.Sdl.IsMainThread*
- uid: SharpSDL3.Sdl.LoadBmp(System.String)
  commentId: M:SharpSDL3.Sdl.LoadBmp(System.String)
  id: LoadBmp(System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LoadBmp(string)
  nameWithType: Sdl.LoadBmp(string)
  fullName: SharpSDL3.Sdl.LoadBmp(string)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LoadBmp
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 4036
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Load a BMP image from a file.
  remarks: >-
    The new surface should be freed with <xref href="SharpSDL3.Sdl.DestroySurface(System.IntPtr)" data-throw-if-not-resolved="false"></xref>. Not doing so will result in a memory leak.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.DestroySurface(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    LoadBmp_IO

    SaveBMP
  example: []
  syntax:
    content: public static nint LoadBmp(string file)
    parameters:
    - id: file
      type: System.String
      description: the BMP file to load.
    return:
      type: System.IntPtr
      description: (SDL_Surface *) Returns a pointer to a new SDL_Surface structure or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function LoadBmp(file As String) As IntPtr
  overload: SharpSDL3.Sdl.LoadBmp*
  nameWithType.vb: Sdl.LoadBmp(String)
  fullName.vb: SharpSDL3.Sdl.LoadBmp(String)
  name.vb: LoadBmp(String)
- uid: SharpSDL3.Sdl.LoadBmpIO(System.IntPtr,System.Boolean)
  commentId: M:SharpSDL3.Sdl.LoadBmpIO(System.IntPtr,System.Boolean)
  id: LoadBmpIO(System.IntPtr,System.Boolean)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LoadBmpIO(nint, bool)
  nameWithType: Sdl.LoadBmpIO(nint, bool)
  fullName: SharpSDL3.Sdl.LoadBmpIO(nint, bool)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LoadBmpIO
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 4062
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Load a BMP image from a seekable SDL data stream.
  remarks: >-
    The new surface should be freed with <xref href="SharpSDL3.Sdl.DestroySurface(System.IntPtr)" data-throw-if-not-resolved="false"></xref>. Not doing so will result in a memory leak.

    <p><strong>Thread Safety:</strong> it is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL3 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.DestroySurface(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.LoadBmp(System.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SaveBmpIO(System.IntPtr%2cSystem.IntPtr%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint LoadBmpIO(nint src, bool closeIo)
    parameters:
    - id: src
      type: System.IntPtr
      description: the data stream for the surface.
    - id: closeIo
      type: System.Boolean
      description: if <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, calls <xref href="SharpSDL3.Sdl.CloseIO(SharpSDL3.Structs.IOStream)" data-throw-if-not-resolved="false"></xref> on src before returning, even in the case of an error.
    return:
      type: System.IntPtr
      description: (SDL_Surface *) Returns a pointer to a new SDL_Surface structure or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function LoadBmpIO(src As IntPtr, closeIo As Boolean) As IntPtr
  overload: SharpSDL3.Sdl.LoadBmpIO*
  nameWithType.vb: Sdl.LoadBmpIO(IntPtr, Boolean)
  fullName.vb: SharpSDL3.Sdl.LoadBmpIO(System.IntPtr, Boolean)
  name.vb: LoadBmpIO(IntPtr, Boolean)
- uid: SharpSDL3.Sdl.LoadFunction(System.IntPtr,System.String)
  commentId: M:SharpSDL3.Sdl.LoadFunction(System.IntPtr,System.String)
  id: LoadFunction(System.IntPtr,System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LoadFunction(nint, string)
  nameWithType: Sdl.LoadFunction(nint, string)
  fullName: SharpSDL3.Sdl.LoadFunction(nint, string)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LoadFunction
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 4084
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Look up the address of the named function in a shared object.
  remarks: >-
    This function pointer is no longer valid after calling <xref href="SharpSDL3.Sdl.UnloadObject(System.IntPtr)" data-throw-if-not-resolved="false"></xref>.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.LoadObject(System.String)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint LoadFunction(nint handle, string name)
    parameters:
    - id: handle
      type: System.IntPtr
      description: a valid shared object handle returned by SDL_LoadObject().
    - id: name
      type: System.String
      description: the name of the function to look up.
    return:
      type: System.IntPtr
      description: Returns a pointer to the function or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function LoadFunction(handle As IntPtr, name As String) As IntPtr
  overload: SharpSDL3.Sdl.LoadFunction*
  nameWithType.vb: Sdl.LoadFunction(IntPtr, String)
  fullName.vb: SharpSDL3.Sdl.LoadFunction(System.IntPtr, String)
  name.vb: LoadFunction(IntPtr, String)
- uid: SharpSDL3.Sdl.LoadObject(System.String)
  commentId: M:SharpSDL3.Sdl.LoadObject(System.String)
  id: LoadObject(System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LoadObject(string)
  nameWithType: Sdl.LoadObject(string)
  fullName: SharpSDL3.Sdl.LoadObject(string)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LoadObject
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 4109
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Dynamically load a shared object.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.LoadFunction(System.IntPtr%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.UnloadObject(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint LoadObject(string sofile)
    parameters:
    - id: sofile
      type: System.String
      description: a system-dependent name of the object file.
    return:
      type: System.IntPtr
      description: (SDL_SharedObject *) Returns an opaque pointer to the object handle or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function LoadObject(sofile As String) As IntPtr
  overload: SharpSDL3.Sdl.LoadObject*
  nameWithType.vb: Sdl.LoadObject(String)
  fullName.vb: SharpSDL3.Sdl.LoadObject(String)
  name.vb: LoadObject(String)
- uid: SharpSDL3.Sdl.LockProperties(System.UInt32)
  commentId: M:SharpSDL3.Sdl.LockProperties(System.UInt32)
  id: LockProperties(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LockProperties(uint)
  nameWithType: Sdl.LockProperties(uint)
  fullName: SharpSDL3.Sdl.LockProperties(uint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LockProperties
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 4132
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Lock a group of properties.
  remarks: >-
    Obtain a multi-threaded lock for these properties. Other threads will wait

    while trying to lock these properties until they are unlocked. Properties

    must be unlocked before they are destroyed.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.UnlockProperties(System.UInt32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool LockProperties(uint props)
    parameters:
    - id: props
      type: System.UInt32
      description: the properties to lock.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function LockProperties(props As UInteger) As Boolean
  overload: SharpSDL3.Sdl.LockProperties*
  nameWithType.vb: Sdl.LockProperties(UInteger)
  fullName.vb: SharpSDL3.Sdl.LockProperties(UInteger)
  name.vb: LockProperties(UInteger)
- uid: SharpSDL3.Sdl.LockSurface(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.LockSurface(System.IntPtr)
  id: LockSurface(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LockSurface(nint)
  nameWithType: Sdl.LockSurface(nint)
  fullName: SharpSDL3.Sdl.LockSurface(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LockSurface
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 4158
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set up a surface for directly accessing the pixels.
  remarks: >-
    Between calls to <xref href="SharpSDL3.Sdl.LockSurface(System.IntPtr)" data-throw-if-not-resolved="false"></xref> /

    <xref href="SharpSDL3.Sdl.UnlockSurface(System.IntPtr)" data-throw-if-not-resolved="false"></xref>, you can write to and read from

    surface-&gt;pixels, using the pixel format stored in surface-&gt;format. Once

    you are done accessing the surface, you should use

    <xref href="SharpSDL3.Sdl.UnlockSurface(System.IntPtr)" data-throw-if-not-resolved="false"></xref> to release it.

    <p><strong>Thread Safety:</strong> This function is not thread safe. The locking referred to by this function is making the pixels available for direct access, not thread-safe locking.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    MUSTLOCK

    <xref href="SharpSDL3.Sdl.UnlockSurface(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool LockSurface(nint surface)
    parameters:
    - id: surface
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Surface" data-throw-if-not-resolved="false"></xref> structure to be locked.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function LockSurface(surface As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.LockSurface*
  nameWithType.vb: Sdl.LockSurface(IntPtr)
  fullName.vb: SharpSDL3.Sdl.LockSurface(System.IntPtr)
  name.vb: LockSurface(IntPtr)
- uid: SharpSDL3.Sdl.Malloc(System.UIntPtr)
  commentId: M:SharpSDL3.Sdl.Malloc(System.UIntPtr)
  id: Malloc(System.UIntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: Malloc(nuint)
  nameWithType: Sdl.Malloc(nuint)
  fullName: SharpSDL3.Sdl.Malloc(nuint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: Malloc
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 4182
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Allocate uninitialized memory.
  remarks: >-
    The allocated memory returned by this function must be freed with <xref href="SharpSDL3.Sdl.Free(System.IntPtr)" data-throw-if-not-resolved="false"></xref>.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.Free(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    calloc

    realloc

    aligned_alloc
  example: []
  syntax:
    content: public static nint Malloc(nuint size)
    parameters:
    - id: size
      type: System.UIntPtr
      description: the size to allocate.
    return:
      type: System.IntPtr
      description: (void *) Returns a pointer to the allocated memory, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if allocation failed.
    content.vb: Public Shared Function Malloc(size As UIntPtr) As IntPtr
  overload: SharpSDL3.Sdl.Malloc*
  nameWithType.vb: Sdl.Malloc(UIntPtr)
  fullName.vb: SharpSDL3.Sdl.Malloc(System.UIntPtr)
  name.vb: Malloc(UIntPtr)
- uid: SharpSDL3.Sdl.MapRgb(System.IntPtr,System.IntPtr,System.Byte,System.Byte,System.Byte)
  commentId: M:SharpSDL3.Sdl.MapRgb(System.IntPtr,System.IntPtr,System.Byte,System.Byte,System.Byte)
  id: MapRgb(System.IntPtr,System.IntPtr,System.Byte,System.Byte,System.Byte)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: MapRgb(nint, nint, byte, byte, byte)
  nameWithType: Sdl.MapRgb(nint, nint, byte, byte, byte)
  fullName: SharpSDL3.Sdl.MapRgb(nint, nint, byte, byte, byte)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: MapRgb
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 4216
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Map an RGB triple to an opaque pixel value for a given pixel format.
  remarks: >-
    This function maps the RGB color value to the specified pixel format and

    returns the pixel value best approximating the given RGB color value for

    the given pixel format.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread, as long as the palette is not modified.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetPixelFormatDetails(SharpSDL3.Enums.PixelFormat)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetRgb(System.UInt32%2cSystem.IntPtr%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.MapRgba(System.IntPtr%2cSystem.IntPtr%2cSystem.Byte%2cSystem.Byte%2cSystem.Byte%2cSystem.Byte)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.MapSurfaceRgb(System.IntPtr%2cSystem.Byte%2cSystem.Byte%2cSystem.Byte)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static uint MapRgb(nint format, nint palette, byte r, byte g, byte b)
    parameters:
    - id: format
      type: System.IntPtr
      description: a pointer to <xref href="SharpSDL3.Enums.PixelFormat" data-throw-if-not-resolved="false"></xref>Details describing the pixel format.
    - id: palette
      type: System.IntPtr
      description: an optional palette for indexed formats, may be discarded.
    - id: r
      type: System.Byte
      description: the red component of the pixel in the range 0-255.
    - id: g
      type: System.Byte
      description: the green component of the pixel in the range 0-255.
    - id: b
      type: System.Byte
      description: the blue component of the pixel in the range 0-255.
    return:
      type: System.UInt32
      description: Returns a pixel value.
    content.vb: Public Shared Function MapRgb(format As IntPtr, palette As IntPtr, r As Byte, g As Byte, b As Byte) As UInteger
  overload: SharpSDL3.Sdl.MapRgb*
  nameWithType.vb: Sdl.MapRgb(IntPtr, IntPtr, Byte, Byte, Byte)
  fullName.vb: SharpSDL3.Sdl.MapRgb(System.IntPtr, System.IntPtr, Byte, Byte, Byte)
  name.vb: MapRgb(IntPtr, IntPtr, Byte, Byte, Byte)
- uid: SharpSDL3.Sdl.MapRgba(System.IntPtr,System.IntPtr,System.Byte,System.Byte,System.Byte,System.Byte)
  commentId: M:SharpSDL3.Sdl.MapRgba(System.IntPtr,System.IntPtr,System.Byte,System.Byte,System.Byte,System.Byte)
  id: MapRgba(System.IntPtr,System.IntPtr,System.Byte,System.Byte,System.Byte,System.Byte)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: MapRgba(nint, nint, byte, byte, byte, byte)
  nameWithType: Sdl.MapRgba(nint, nint, byte, byte, byte, byte)
  fullName: SharpSDL3.Sdl.MapRgba(nint, nint, byte, byte, byte, byte)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: MapRgba
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 4247
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Map an RGBA quadruple to a pixel value for a given pixel format.
  remarks: >-
    This function maps the RGBA color value to the specified pixel format and

    returns the pixel value best approximating the given RGBA color value for

    the given pixel format.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread, as long as the palette is not modified.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetPixelFormatDetails(SharpSDL3.Enums.PixelFormat)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetRgba(System.UInt32%2cSystem.IntPtr%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.MapRgb(System.IntPtr%2cSystem.IntPtr%2cSystem.Byte%2cSystem.Byte%2cSystem.Byte)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.MapSurfaceRgba(System.IntPtr%2cSystem.Byte%2cSystem.Byte%2cSystem.Byte%2cSystem.Byte)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static uint MapRgba(nint format, nint palette, byte r, byte g, byte b, byte a)
    parameters:
    - id: format
      type: System.IntPtr
      description: a pointer to <xref href="SharpSDL3.Enums.PixelFormat" data-throw-if-not-resolved="false"></xref>Details describing the pixel format.
    - id: palette
      type: System.IntPtr
      description: an optional palette for indexed formats, may be discarded.
    - id: r
      type: System.Byte
      description: the red component of the pixel in the range 0-255.
    - id: g
      type: System.Byte
      description: the green component of the pixel in the range 0-255.
    - id: b
      type: System.Byte
      description: the blue component of the pixel in the range 0-255.
    - id: a
      type: System.Byte
      description: the alpha component of the pixel in the range 0-255.
    return:
      type: System.UInt32
      description: Returns a pixel value.
    content.vb: Public Shared Function MapRgba(format As IntPtr, palette As IntPtr, r As Byte, g As Byte, b As Byte, a As Byte) As UInteger
  overload: SharpSDL3.Sdl.MapRgba*
  nameWithType.vb: Sdl.MapRgba(IntPtr, IntPtr, Byte, Byte, Byte, Byte)
  fullName.vb: SharpSDL3.Sdl.MapRgba(System.IntPtr, System.IntPtr, Byte, Byte, Byte, Byte)
  name.vb: MapRgba(IntPtr, IntPtr, Byte, Byte, Byte, Byte)
- uid: SharpSDL3.Sdl.MapSurfaceRgb(System.IntPtr,System.Byte,System.Byte,System.Byte)
  commentId: M:SharpSDL3.Sdl.MapSurfaceRgb(System.IntPtr,System.Byte,System.Byte,System.Byte)
  id: MapSurfaceRgb(System.IntPtr,System.Byte,System.Byte,System.Byte)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: MapSurfaceRgb(nint, byte, byte, byte)
  nameWithType: Sdl.MapSurfaceRgb(nint, byte, byte, byte)
  fullName: SharpSDL3.Sdl.MapSurfaceRgb(nint, byte, byte, byte)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: MapSurfaceRgb
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 4273
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Map an RGB triple to an opaque pixel value for a surface.
  remarks: >-
    This function maps the RGB color value to the specified pixel format and

    returns the pixel value best approximating the given RGB color value for

    the given pixel format.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.MapSurfaceRgba(System.IntPtr%2cSystem.Byte%2cSystem.Byte%2cSystem.Byte%2cSystem.Byte)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static uint MapSurfaceRgb(nint surface, byte r, byte g, byte b)
    parameters:
    - id: surface
      type: System.IntPtr
      description: the surface to use for the pixel format and palette.
    - id: r
      type: System.Byte
      description: the red component of the pixel in the range 0-255.
    - id: g
      type: System.Byte
      description: the green component of the pixel in the range 0-255.
    - id: b
      type: System.Byte
      description: the blue component of the pixel in the range 0-255.
    return:
      type: System.UInt32
      description: Returns a pixel value.
    content.vb: Public Shared Function MapSurfaceRgb(surface As IntPtr, r As Byte, g As Byte, b As Byte) As UInteger
  overload: SharpSDL3.Sdl.MapSurfaceRgb*
  nameWithType.vb: Sdl.MapSurfaceRgb(IntPtr, Byte, Byte, Byte)
  fullName.vb: SharpSDL3.Sdl.MapSurfaceRgb(System.IntPtr, Byte, Byte, Byte)
  name.vb: MapSurfaceRgb(IntPtr, Byte, Byte, Byte)
- uid: SharpSDL3.Sdl.MapSurfaceRgb(System.IntPtr,SharpSDL3.Structs.Color)
  commentId: M:SharpSDL3.Sdl.MapSurfaceRgb(System.IntPtr,SharpSDL3.Structs.Color)
  id: MapSurfaceRgb(System.IntPtr,SharpSDL3.Structs.Color)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: MapSurfaceRgb(nint, Color)
  nameWithType: Sdl.MapSurfaceRgb(nint, Color)
  fullName: SharpSDL3.Sdl.MapSurfaceRgb(nint, SharpSDL3.Structs.Color)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: MapSurfaceRgb
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 4298
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Map an RGB triple to an opaque pixel value for a surface.
  remarks: >-
    This function maps the RGB color value to the specified pixel format and

    returns the pixel value best approximating the given RGB color value for

    the given pixel format.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.MapSurfaceRgba(System.IntPtr%2cSystem.Byte%2cSystem.Byte%2cSystem.Byte%2cSystem.Byte)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static uint MapSurfaceRgb(nint surface, Color color)
    parameters:
    - id: surface
      type: System.IntPtr
      description: the surface to use for the pixel format and palette.
    - id: color
      type: SharpSDL3.Structs.Color
      description: the <xref href="SharpSDL3.Structs.Color" data-throw-if-not-resolved="false"></xref> representing RGB ranging from 0-255.
    return:
      type: System.UInt32
      description: Returns a pixel value.
    content.vb: Public Shared Function MapSurfaceRgb(surface As IntPtr, color As Color) As UInteger
  overload: SharpSDL3.Sdl.MapSurfaceRgb*
  nameWithType.vb: Sdl.MapSurfaceRgb(IntPtr, Color)
  fullName.vb: SharpSDL3.Sdl.MapSurfaceRgb(System.IntPtr, SharpSDL3.Structs.Color)
  name.vb: MapSurfaceRgb(IntPtr, Color)
- uid: SharpSDL3.Sdl.MapSurfaceRgba(System.IntPtr,System.Byte,System.Byte,System.Byte,System.Byte)
  commentId: M:SharpSDL3.Sdl.MapSurfaceRgba(System.IntPtr,System.Byte,System.Byte,System.Byte,System.Byte)
  id: MapSurfaceRgba(System.IntPtr,System.Byte,System.Byte,System.Byte,System.Byte)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: MapSurfaceRgba(nint, byte, byte, byte, byte)
  nameWithType: Sdl.MapSurfaceRgba(nint, byte, byte, byte, byte)
  fullName: SharpSDL3.Sdl.MapSurfaceRgba(nint, byte, byte, byte, byte)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: MapSurfaceRgba
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 4327
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Map an RGBA quadruple to a pixel value for a surface.
  remarks: >-
    This function maps the RGBA color value to the specified pixel format and

    returns the pixel value best approximating the given RGBA color value for

    the given pixel format.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.MapSurfaceRgb(System.IntPtr%2cSystem.Byte%2cSystem.Byte%2cSystem.Byte)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static uint MapSurfaceRgba(nint surface, byte r, byte g, byte b, byte a)
    parameters:
    - id: surface
      type: System.IntPtr
      description: the surface to use for the pixel format and palette.
    - id: r
      type: System.Byte
      description: the red component of the pixel in the range 0-255.
    - id: g
      type: System.Byte
      description: the green component of the pixel in the range 0-255.
    - id: b
      type: System.Byte
      description: the blue component of the pixel in the range 0-255.
    - id: a
      type: System.Byte
      description: the alpha component of the pixel in the range 0-255.
    return:
      type: System.UInt32
      description: Returns a pixel value.
    content.vb: Public Shared Function MapSurfaceRgba(surface As IntPtr, r As Byte, g As Byte, b As Byte, a As Byte) As UInteger
  overload: SharpSDL3.Sdl.MapSurfaceRgba*
  nameWithType.vb: Sdl.MapSurfaceRgba(IntPtr, Byte, Byte, Byte, Byte)
  fullName.vb: SharpSDL3.Sdl.MapSurfaceRgba(System.IntPtr, Byte, Byte, Byte, Byte)
  name.vb: MapSurfaceRgba(IntPtr, Byte, Byte, Byte, Byte)
- uid: SharpSDL3.Sdl.MapSurfaceRgba(System.IntPtr,SharpSDL3.Structs.Color)
  commentId: M:SharpSDL3.Sdl.MapSurfaceRgba(System.IntPtr,SharpSDL3.Structs.Color)
  id: MapSurfaceRgba(System.IntPtr,SharpSDL3.Structs.Color)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: MapSurfaceRgba(nint, Color)
  nameWithType: Sdl.MapSurfaceRgba(nint, Color)
  fullName: SharpSDL3.Sdl.MapSurfaceRgba(nint, SharpSDL3.Structs.Color)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: MapSurfaceRgba
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 4352
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Map an RGBA quadruple to a pixel value for a surface.
  remarks: >-
    This function maps the RGBA color value to the specified pixel format and

    returns the pixel value best approximating the given RGBA color value for

    the given pixel format.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.MapSurfaceRgb(System.IntPtr%2cSystem.Byte%2cSystem.Byte%2cSystem.Byte)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static uint MapSurfaceRgba(nint surface, Color color)
    parameters:
    - id: surface
      type: System.IntPtr
      description: the surface to use for the pixel format and palette.
    - id: color
      type: SharpSDL3.Structs.Color
      description: the <xref href="SharpSDL3.Structs.Color" data-throw-if-not-resolved="false"></xref> representing RGB ranging from 0-255.
    return:
      type: System.UInt32
      description: Returns a pixel value.
    content.vb: Public Shared Function MapSurfaceRgba(surface As IntPtr, color As Color) As UInteger
  overload: SharpSDL3.Sdl.MapSurfaceRgba*
  nameWithType.vb: Sdl.MapSurfaceRgba(IntPtr, Color)
  fullName.vb: SharpSDL3.Sdl.MapSurfaceRgba(System.IntPtr, SharpSDL3.Structs.Color)
  name.vb: MapSurfaceRgba(IntPtr, Color)
- uid: SharpSDL3.Sdl.MaximizeWindow(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.MaximizeWindow(System.IntPtr)
  id: MaximizeWindow(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: MaximizeWindow(nint)
  nameWithType: Sdl.MaximizeWindow(nint)
  fullName: SharpSDL3.Sdl.MaximizeWindow(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: MaximizeWindow
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 4375
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Request that the window be made as large as possible.
  remarks: >-
    Non-resizable windows can't be maximized. The window must have the <xref href="SharpSDL3.Enums.WindowFlags.Resizable" data-throw-if-not-resolved="false"></xref> flag set, or this will have no effect.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.MinimizeWindow(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.RestoreWindow(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SyncWindow(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool MaximizeWindow(nint window)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to maximize.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function MaximizeWindow(window As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.MaximizeWindow*
  nameWithType.vb: Sdl.MaximizeWindow(IntPtr)
  fullName.vb: SharpSDL3.Sdl.MaximizeWindow(System.IntPtr)
  name.vb: MaximizeWindow(IntPtr)
- uid: SharpSDL3.Sdl.MinimizeWindow(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.MinimizeWindow(System.IntPtr)
  id: MinimizeWindow(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: MinimizeWindow(nint)
  nameWithType: Sdl.MinimizeWindow(nint)
  fullName: SharpSDL3.Sdl.MinimizeWindow(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: MinimizeWindow
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 4399
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Request that the window be minimized to an iconic representation.
  remarks: >-
    If the window is in a fullscreen state, this request has no direct effect.

    It may alter the state the window is returned to when leaving fullscreen.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.MaximizeWindow(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.RestoreWindow(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SyncWindow(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool MinimizeWindow(nint window)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to minimize.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function MinimizeWindow(window As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.MinimizeWindow*
  nameWithType.vb: Sdl.MinimizeWindow(IntPtr)
  fullName.vb: SharpSDL3.Sdl.MinimizeWindow(System.IntPtr)
  name.vb: MinimizeWindow(IntPtr)
- uid: SharpSDL3.Sdl.OutOfMemory
  commentId: M:SharpSDL3.Sdl.OutOfMemory
  id: OutOfMemory
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: OutOfMemory()
  nameWithType: Sdl.OutOfMemory()
  fullName: SharpSDL3.Sdl.OutOfMemory()
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: OutOfMemory
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 4418
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set an error indicating that memory allocation failed.
  remarks: >-
    This function does not do any memory allocation.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool OutOfMemory()
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Shared Function OutOfMemory() As Boolean
  overload: SharpSDL3.Sdl.OutOfMemory*
- uid: SharpSDL3.Sdl.PremultiplyAlpha(System.Int32,System.Int32,SharpSDL3.Enums.PixelFormat,System.IntPtr,System.Int32,SharpSDL3.Enums.PixelFormat,System.IntPtr,System.Int32,System.Boolean)
  commentId: M:SharpSDL3.Sdl.PremultiplyAlpha(System.Int32,System.Int32,SharpSDL3.Enums.PixelFormat,System.IntPtr,System.Int32,SharpSDL3.Enums.PixelFormat,System.IntPtr,System.Int32,System.Boolean)
  id: PremultiplyAlpha(System.Int32,System.Int32,SharpSDL3.Enums.PixelFormat,System.IntPtr,System.Int32,SharpSDL3.Enums.PixelFormat,System.IntPtr,System.Int32,System.Boolean)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: PremultiplyAlpha(int, int, PixelFormat, nint, int, PixelFormat, nint, int, bool)
  nameWithType: Sdl.PremultiplyAlpha(int, int, PixelFormat, nint, int, PixelFormat, nint, int, bool)
  fullName: SharpSDL3.Sdl.PremultiplyAlpha(int, int, SharpSDL3.Enums.PixelFormat, nint, int, SharpSDL3.Enums.PixelFormat, nint, int, bool)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: PremultiplyAlpha
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 4434
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Premultiply the alpha on a block of pixels.
  remarks: >-
    This is safe to use with <code class="paramref">src</code> == <code class="paramref">dst</code>, but not for other overlapping areas.

    <p><strong>Thread Safety:</strong> The same destination pixels should not be used from two threads at once. It is safe to use the same source pixels from multiple threads.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool PremultiplyAlpha(int width, int height, PixelFormat srcFormat, nint src, int srcPitch, PixelFormat dstFormat, nint dst, int dstPitch, bool linear)
    parameters:
    - id: width
      type: System.Int32
      description: the width of the block to convert, in pixels.
    - id: height
      type: System.Int32
      description: the height of the block to convert, in pixels.
    - id: srcFormat
      type: SharpSDL3.Enums.PixelFormat
    - id: src
      type: System.IntPtr
      description: a pointer to the source pixels.
    - id: srcPitch
      type: System.Int32
    - id: dstFormat
      type: SharpSDL3.Enums.PixelFormat
    - id: dst
      type: System.IntPtr
      description: a pointer to be filled in with premultiplied pixel data.
    - id: dstPitch
      type: System.Int32
    - id: linear
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> to convert from sRGB to linear space for the alpha multiplication, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> to do multiplication in sRGB space.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function PremultiplyAlpha(width As Integer, height As Integer, srcFormat As PixelFormat, src As IntPtr, srcPitch As Integer, dstFormat As PixelFormat, dst As IntPtr, dstPitch As Integer, linear As Boolean) As Boolean
  overload: SharpSDL3.Sdl.PremultiplyAlpha*
  nameWithType.vb: Sdl.PremultiplyAlpha(Integer, Integer, PixelFormat, IntPtr, Integer, PixelFormat, IntPtr, Integer, Boolean)
  fullName.vb: SharpSDL3.Sdl.PremultiplyAlpha(Integer, Integer, SharpSDL3.Enums.PixelFormat, System.IntPtr, Integer, SharpSDL3.Enums.PixelFormat, System.IntPtr, Integer, Boolean)
  name.vb: PremultiplyAlpha(Integer, Integer, PixelFormat, IntPtr, Integer, PixelFormat, IntPtr, Integer, Boolean)
- uid: SharpSDL3.Sdl.PremultiplyAlpha(SharpSDL3.Structs.Rect,SharpSDL3.Enums.PixelFormat,System.IntPtr,System.Int32,SharpSDL3.Enums.PixelFormat,System.IntPtr,System.Int32,System.Boolean)
  commentId: M:SharpSDL3.Sdl.PremultiplyAlpha(SharpSDL3.Structs.Rect,SharpSDL3.Enums.PixelFormat,System.IntPtr,System.Int32,SharpSDL3.Enums.PixelFormat,System.IntPtr,System.Int32,System.Boolean)
  id: PremultiplyAlpha(SharpSDL3.Structs.Rect,SharpSDL3.Enums.PixelFormat,System.IntPtr,System.Int32,SharpSDL3.Enums.PixelFormat,System.IntPtr,System.Int32,System.Boolean)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: PremultiplyAlpha(Rect, PixelFormat, nint, int, PixelFormat, nint, int, bool)
  nameWithType: Sdl.PremultiplyAlpha(Rect, PixelFormat, nint, int, PixelFormat, nint, int, bool)
  fullName: SharpSDL3.Sdl.PremultiplyAlpha(SharpSDL3.Structs.Rect, SharpSDL3.Enums.PixelFormat, nint, int, SharpSDL3.Enums.PixelFormat, nint, int, bool)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: PremultiplyAlpha
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 4458
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static bool PremultiplyAlpha(Rect rect, PixelFormat srcFormat, nint src, int srcPitch, PixelFormat dstFormat, nint dst, int dstPitch, bool linear)
    parameters:
    - id: rect
      type: SharpSDL3.Structs.Rect
    - id: srcFormat
      type: SharpSDL3.Enums.PixelFormat
    - id: src
      type: System.IntPtr
    - id: srcPitch
      type: System.Int32
    - id: dstFormat
      type: SharpSDL3.Enums.PixelFormat
    - id: dst
      type: System.IntPtr
    - id: dstPitch
      type: System.Int32
    - id: linear
      type: System.Boolean
    return:
      type: System.Boolean
    content.vb: Public Shared Function PremultiplyAlpha(rect As Rect, srcFormat As PixelFormat, src As IntPtr, srcPitch As Integer, dstFormat As PixelFormat, dst As IntPtr, dstPitch As Integer, linear As Boolean) As Boolean
  overload: SharpSDL3.Sdl.PremultiplyAlpha*
  nameWithType.vb: Sdl.PremultiplyAlpha(Rect, PixelFormat, IntPtr, Integer, PixelFormat, IntPtr, Integer, Boolean)
  fullName.vb: SharpSDL3.Sdl.PremultiplyAlpha(SharpSDL3.Structs.Rect, SharpSDL3.Enums.PixelFormat, System.IntPtr, Integer, SharpSDL3.Enums.PixelFormat, System.IntPtr, Integer, Boolean)
  name.vb: PremultiplyAlpha(Rect, PixelFormat, IntPtr, Integer, PixelFormat, IntPtr, Integer, Boolean)
- uid: SharpSDL3.Sdl.PremultiplySurfaceAlpha(System.IntPtr,System.Boolean)
  commentId: M:SharpSDL3.Sdl.PremultiplySurfaceAlpha(System.IntPtr,System.Boolean)
  id: PremultiplySurfaceAlpha(System.IntPtr,System.Boolean)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: PremultiplySurfaceAlpha(nint, bool)
  nameWithType: Sdl.PremultiplySurfaceAlpha(nint, bool)
  fullName: SharpSDL3.Sdl.PremultiplySurfaceAlpha(nint, bool)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: PremultiplySurfaceAlpha
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 4481
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Premultiply the alpha in a surface.
  remarks: >-
    This is safe to use with src == dst, but not for other overlapping areas.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool PremultiplySurfaceAlpha(nint surface, bool linear)
    parameters:
    - id: surface
      type: System.IntPtr
      description: the surface to modify.
    - id: linear
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> to convert from sRGB to linear space for the alpha multiplication, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> to do multiplication in sRGB space.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function PremultiplySurfaceAlpha(surface As IntPtr, linear As Boolean) As Boolean
  overload: SharpSDL3.Sdl.PremultiplySurfaceAlpha*
  nameWithType.vb: Sdl.PremultiplySurfaceAlpha(IntPtr, Boolean)
  fullName.vb: SharpSDL3.Sdl.PremultiplySurfaceAlpha(System.IntPtr, Boolean)
  name.vb: PremultiplySurfaceAlpha(IntPtr, Boolean)
- uid: SharpSDL3.Sdl.Quit
  commentId: M:SharpSDL3.Sdl.Quit
  id: Quit
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: Quit()
  nameWithType: Sdl.Quit()
  fullName: SharpSDL3.Sdl.Quit()
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: Quit
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 4503
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Clean up all initialized subsystems.
  remarks: >-
    You should call this function even if you have already shutdown each initialized subsystem with <xref href="SharpSDL3.Sdl.QuitSubSystem(SharpSDL3.Enums.InitFlags)" data-throw-if-not-resolved="false"></xref>. It is safe to call this function even in the case of errors in initialization.

    You can use this function with atexit() to ensure that it is run when your application is shutdown, but it is not wise to do this from a library or other dynamically loaded code.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.Init" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.QuitSubSystem(SharpSDL3.Enums.InitFlags)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void Quit()
    content.vb: Public Shared Sub Quit()
  overload: SharpSDL3.Sdl.Quit*
- uid: SharpSDL3.Sdl.QuitSubSystem(SharpSDL3.Enums.InitFlags)
  commentId: M:SharpSDL3.Sdl.QuitSubSystem(SharpSDL3.Enums.InitFlags)
  id: QuitSubSystem(SharpSDL3.Enums.InitFlags)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: QuitSubSystem(InitFlags)
  nameWithType: Sdl.QuitSubSystem(InitFlags)
  fullName: SharpSDL3.Sdl.QuitSubSystem(SharpSDL3.Enums.InitFlags)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: QuitSubSystem
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 4516
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Shut down specific SDL subsystems.
  remarks: >-
    You still need to call <xref href="SharpSDL3.Sdl.Quit" data-throw-if-not-resolved="false"></xref> even if you close all open

    subsystems with <xref href="SharpSDL3.Sdl.QuitSubSystem(SharpSDL3.Enums.InitFlags)" data-throw-if-not-resolved="false"></xref>.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.InitSubSystem(SharpSDL3.Enums.InitFlags)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.Quit" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void QuitSubSystem(InitFlags flags)
    parameters:
    - id: flags
      type: SharpSDL3.Enums.InitFlags
      description: any of the flags used by <xref href="SharpSDL3.Sdl.Init" data-throw-if-not-resolved="false"></xref>; see <xref href="SharpSDL3.Sdl.Init" data-throw-if-not-resolved="false"></xref> for details.
    content.vb: Public Shared Sub QuitSubSystem(flags As InitFlags)
  overload: SharpSDL3.Sdl.QuitSubSystem*
- uid: SharpSDL3.Sdl.RaiseWindow(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.RaiseWindow(System.IntPtr)
  id: RaiseWindow(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RaiseWindow(nint)
  nameWithType: Sdl.RaiseWindow(nint)
  fullName: SharpSDL3.Sdl.RaiseWindow(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RaiseWindow
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 4529
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Request that a window be raised above other windows and gain the input focus.
  example: []
  syntax:
    content: public static bool RaiseWindow(nint window)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to raise.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function RaiseWindow(window As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.RaiseWindow*
  nameWithType.vb: Sdl.RaiseWindow(IntPtr)
  fullName.vb: SharpSDL3.Sdl.RaiseWindow(System.IntPtr)
  name.vb: RaiseWindow(IntPtr)
- uid: SharpSDL3.Sdl.ReadSurfacePixel(System.IntPtr,System.Int32,System.Int32,System.Byte@,System.Byte@,System.Byte@,System.Byte@)
  commentId: M:SharpSDL3.Sdl.ReadSurfacePixel(System.IntPtr,System.Int32,System.Int32,System.Byte@,System.Byte@,System.Byte@,System.Byte@)
  id: ReadSurfacePixel(System.IntPtr,System.Int32,System.Int32,System.Byte@,System.Byte@,System.Byte@,System.Byte@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ReadSurfacePixel(nint, int, int, out byte, out byte, out byte, out byte)
  nameWithType: Sdl.ReadSurfacePixel(nint, int, int, out byte, out byte, out byte, out byte)
  fullName: SharpSDL3.Sdl.ReadSurfacePixel(nint, int, int, out byte, out byte, out byte, out byte)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ReadSurfacePixel
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 4556
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Retrieves a single pixel from a surface.
  remarks: >-
    This function prioritizes correctness over speed: it is suitable for unit

    tests, but is not intended for use in a game engine.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool ReadSurfacePixel(nint surface, int x, int y, out byte r, out byte g, out byte b, out byte a)
    parameters:
    - id: surface
      type: System.IntPtr
      description: the surface to read.
    - id: x
      type: System.Int32
      description: the horizontal coordinate, 0 &lt;= x &lt; width.
    - id: y
      type: System.Int32
      description: the vertical coordinate, 0 &lt;= y &lt; height.
    - id: r
      type: System.Byte
      description: a pointer filled in with the red channel, 0-255, or discard to ignore this channel.
    - id: g
      type: System.Byte
      description: a pointer filled in with the green channel, 0-255, or discard to ignore this channel.
    - id: b
      type: System.Byte
      description: a pointer filled in with the blue channel, 0-255, or discard to ignore this channel.
    - id: a
      type: System.Byte
      description: a pointer filled in with the alpha channel, 0-255, or discard to ignore this channel.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function ReadSurfacePixel(surface As IntPtr, x As Integer, y As Integer, r As Byte, g As Byte, b As Byte, a As Byte) As Boolean
  overload: SharpSDL3.Sdl.ReadSurfacePixel*
  nameWithType.vb: Sdl.ReadSurfacePixel(IntPtr, Integer, Integer, Byte, Byte, Byte, Byte)
  fullName.vb: SharpSDL3.Sdl.ReadSurfacePixel(System.IntPtr, Integer, Integer, Byte, Byte, Byte, Byte)
  name.vb: ReadSurfacePixel(IntPtr, Integer, Integer, Byte, Byte, Byte, Byte)
- uid: SharpSDL3.Sdl.ReadSurfacePixel(System.IntPtr,System.Int32,System.Int32,SharpSDL3.Structs.Color@)
  commentId: M:SharpSDL3.Sdl.ReadSurfacePixel(System.IntPtr,System.Int32,System.Int32,SharpSDL3.Structs.Color@)
  id: ReadSurfacePixel(System.IntPtr,System.Int32,System.Int32,SharpSDL3.Structs.Color@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ReadSurfacePixel(nint, int, int, out Color)
  nameWithType: Sdl.ReadSurfacePixel(nint, int, int, out Color)
  fullName: SharpSDL3.Sdl.ReadSurfacePixel(nint, int, int, out SharpSDL3.Structs.Color)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ReadSurfacePixel
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 4580
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Retrieves a single pixel from a surface.
  remarks: >-
    This function prioritizes correctness over speed: it is suitable for unit

    tests, but is not intended for use in a game engine.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool ReadSurfacePixel(nint surface, int x, int y, out Color color)
    parameters:
    - id: surface
      type: System.IntPtr
      description: the surface to read.
    - id: x
      type: System.Int32
      description: the horizontal coordinate, 0 &lt;= x &lt; width.
    - id: y
      type: System.Int32
      description: the vertical coordinate, 0 &lt;= y &lt; height.
    - id: color
      type: SharpSDL3.Structs.Color
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function ReadSurfacePixel(surface As IntPtr, x As Integer, y As Integer, color As Color) As Boolean
  overload: SharpSDL3.Sdl.ReadSurfacePixel*
  nameWithType.vb: Sdl.ReadSurfacePixel(IntPtr, Integer, Integer, Color)
  fullName.vb: SharpSDL3.Sdl.ReadSurfacePixel(System.IntPtr, Integer, Integer, SharpSDL3.Structs.Color)
  name.vb: ReadSurfacePixel(IntPtr, Integer, Integer, Color)
- uid: SharpSDL3.Sdl.ReadSurfacePixel(System.IntPtr,System.Int32,System.Int32)
  commentId: M:SharpSDL3.Sdl.ReadSurfacePixel(System.IntPtr,System.Int32,System.Int32)
  id: ReadSurfacePixel(System.IntPtr,System.Int32,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ReadSurfacePixel(nint, int, int)
  nameWithType: Sdl.ReadSurfacePixel(nint, int, int)
  fullName: SharpSDL3.Sdl.ReadSurfacePixel(nint, int, int)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ReadSurfacePixel
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 4607
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Retrieves a single pixel from a surface.
  remarks: >-
    This function prioritizes correctness over speed: it is suitable for unit

    tests, but is not intended for use in a game engine.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static Color ReadSurfacePixel(nint surface, int x, int y)
    parameters:
    - id: surface
      type: System.IntPtr
      description: the surface to read.
    - id: x
      type: System.Int32
      description: the horizontal coordinate, 0 &lt;= x &lt; width.
    - id: y
      type: System.Int32
      description: the vertical coordinate, 0 &lt;= y &lt; height.
    return:
      type: SharpSDL3.Structs.Color
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function ReadSurfacePixel(surface As IntPtr, x As Integer, y As Integer) As Color
  overload: SharpSDL3.Sdl.ReadSurfacePixel*
  nameWithType.vb: Sdl.ReadSurfacePixel(IntPtr, Integer, Integer)
  fullName.vb: SharpSDL3.Sdl.ReadSurfacePixel(System.IntPtr, Integer, Integer)
  name.vb: ReadSurfacePixel(IntPtr, Integer, Integer)
- uid: SharpSDL3.Sdl.ReadSurfacePixelFloat(System.IntPtr,System.Int32,System.Int32,System.Single@,System.Single@,System.Single@,System.Single@)
  commentId: M:SharpSDL3.Sdl.ReadSurfacePixelFloat(System.IntPtr,System.Int32,System.Int32,System.Single@,System.Single@,System.Single@,System.Single@)
  id: ReadSurfacePixelFloat(System.IntPtr,System.Int32,System.Int32,System.Single@,System.Single@,System.Single@,System.Single@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ReadSurfacePixelFloat(nint, int, int, out float, out float, out float, out float)
  nameWithType: Sdl.ReadSurfacePixelFloat(nint, int, int, out float, out float, out float, out float)
  fullName: SharpSDL3.Sdl.ReadSurfacePixelFloat(nint, int, int, out float, out float, out float, out float)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ReadSurfacePixelFloat
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 4635
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Retrieves a single pixel from a surface.
  remarks: >-
    This function prioritizes correctness over speed: it is suitable for unit

    tests, but is not intended for use in a game engine.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool ReadSurfacePixelFloat(nint surface, int x, int y, out float r, out float g, out float b, out float a)
    parameters:
    - id: surface
      type: System.IntPtr
      description: the surface to read.
    - id: x
      type: System.Int32
      description: the horizontal coordinate, 0 &lt;= x &lt; width.
    - id: y
      type: System.Int32
      description: the vertical coordinate, 0 &lt;= y &lt; height.
    - id: r
      type: System.Single
      description: a pointer filled in with the red channel, normally in the range 0-1, or discard to ignore this channel.
    - id: g
      type: System.Single
      description: a pointer filled in with the green channel, normally in the range 0-1, or discard to ignore this channel.
    - id: b
      type: System.Single
      description: a pointer filled in with the blue channel, normally in the range 0-1, or discard to ignore this channel.
    - id: a
      type: System.Single
      description: a pointer filled in with the alpha channel, normally in the range 0-1, or discard to ignore this channel.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function ReadSurfacePixelFloat(surface As IntPtr, x As Integer, y As Integer, r As Single, g As Single, b As Single, a As Single) As Boolean
  overload: SharpSDL3.Sdl.ReadSurfacePixelFloat*
  nameWithType.vb: Sdl.ReadSurfacePixelFloat(IntPtr, Integer, Integer, Single, Single, Single, Single)
  fullName.vb: SharpSDL3.Sdl.ReadSurfacePixelFloat(System.IntPtr, Integer, Integer, Single, Single, Single, Single)
  name.vb: ReadSurfacePixelFloat(IntPtr, Integer, Integer, Single, Single, Single, Single)
- uid: SharpSDL3.Sdl.ReadSurfacePixelFloat(System.IntPtr,System.Int32,System.Int32,SharpSDL3.Structs.FColor@)
  commentId: M:SharpSDL3.Sdl.ReadSurfacePixelFloat(System.IntPtr,System.Int32,System.Int32,SharpSDL3.Structs.FColor@)
  id: ReadSurfacePixelFloat(System.IntPtr,System.Int32,System.Int32,SharpSDL3.Structs.FColor@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ReadSurfacePixelFloat(nint, int, int, out FColor)
  nameWithType: Sdl.ReadSurfacePixelFloat(nint, int, int, out FColor)
  fullName: SharpSDL3.Sdl.ReadSurfacePixelFloat(nint, int, int, out SharpSDL3.Structs.FColor)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ReadSurfacePixelFloat
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 4660
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Retrieves a single pixel from a surface.
  remarks: >-
    This function prioritizes correctness over speed: it is suitable for unit

    tests, but is not intended for use in a game engine.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool ReadSurfacePixelFloat(nint surface, int x, int y, out FColor color)
    parameters:
    - id: surface
      type: System.IntPtr
      description: the surface to read.
    - id: x
      type: System.Int32
      description: the horizontal coordinate, 0 &lt;= x &lt; width.
    - id: y
      type: System.Int32
      description: the vertical coordinate, 0 &lt;= y &lt; height.
    - id: color
      type: SharpSDL3.Structs.FColor
      description: the <xref href="SharpSDL3.Structs.FColor" data-throw-if-not-resolved="false"></xref> structure filled with color data, or discard to ignore.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function ReadSurfacePixelFloat(surface As IntPtr, x As Integer, y As Integer, color As FColor) As Boolean
  overload: SharpSDL3.Sdl.ReadSurfacePixelFloat*
  nameWithType.vb: Sdl.ReadSurfacePixelFloat(IntPtr, Integer, Integer, FColor)
  fullName.vb: SharpSDL3.Sdl.ReadSurfacePixelFloat(System.IntPtr, Integer, Integer, SharpSDL3.Structs.FColor)
  name.vb: ReadSurfacePixelFloat(IntPtr, Integer, Integer, FColor)
- uid: SharpSDL3.Sdl.ReadSurfacePixelFloat(System.IntPtr,System.Int32,System.Int32)
  commentId: M:SharpSDL3.Sdl.ReadSurfacePixelFloat(System.IntPtr,System.Int32,System.Int32)
  id: ReadSurfacePixelFloat(System.IntPtr,System.Int32,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ReadSurfacePixelFloat(nint, int, int)
  nameWithType: Sdl.ReadSurfacePixelFloat(nint, int, int)
  fullName: SharpSDL3.Sdl.ReadSurfacePixelFloat(nint, int, int)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ReadSurfacePixelFloat
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 4687
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Retrieves a single pixel from a surface.
  remarks: >-
    This function prioritizes correctness over speed: it is suitable for unit

    tests, but is not intended for use in a game engine.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static FColor ReadSurfacePixelFloat(nint surface, int x, int y)
    parameters:
    - id: surface
      type: System.IntPtr
      description: the surface to read.
    - id: x
      type: System.Int32
      description: the horizontal coordinate, 0 &lt;= x &lt; width.
    - id: y
      type: System.Int32
      description: the vertical coordinate, 0 &lt;= y &lt; height.
    return:
      type: SharpSDL3.Structs.FColor
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function ReadSurfacePixelFloat(surface As IntPtr, x As Integer, y As Integer) As FColor
  overload: SharpSDL3.Sdl.ReadSurfacePixelFloat*
  nameWithType.vb: Sdl.ReadSurfacePixelFloat(IntPtr, Integer, Integer)
  fullName.vb: SharpSDL3.Sdl.ReadSurfacePixelFloat(System.IntPtr, Integer, Integer)
  name.vb: ReadSurfacePixelFloat(IntPtr, Integer, Integer)
- uid: SharpSDL3.Sdl.RemoveHintCallback(System.String,SharpSDL3.Delegates.SdlHintCallback,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.RemoveHintCallback(System.String,SharpSDL3.Delegates.SdlHintCallback,System.IntPtr)
  id: RemoveHintCallback(System.String,SharpSDL3.Delegates.SdlHintCallback,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RemoveHintCallback(string, SdlHintCallback, nint)
  nameWithType: Sdl.RemoveHintCallback(string, Delegates.SdlHintCallback, nint)
  fullName: SharpSDL3.Sdl.RemoveHintCallback(string, SharpSDL3.Delegates.SdlHintCallback, nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RemoveHintCallback
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 4709
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Remove a function watching a particular hint.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.AddHintCallback(System.String%2cSharpSDL3.Delegates.SdlHintCallback%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void RemoveHintCallback(string name, Delegates.SdlHintCallback callback, nint userdata)
    parameters:
    - id: name
      type: System.String
      description: the hint being watched.
    - id: callback
      type: SharpSDL3.Delegates.SdlHintCallback
      description: an <xref href="SharpSDL3.Delegates.SdlHintCallback" data-throw-if-not-resolved="false"></xref> function that will be called when the hint value changes.
    - id: userdata
      type: System.IntPtr
      description: a pointer being passed to the callback function.
    content.vb: Public Shared Sub RemoveHintCallback(name As String, callback As Delegates.SdlHintCallback, userdata As IntPtr)
  overload: SharpSDL3.Sdl.RemoveHintCallback*
  nameWithType.vb: Sdl.RemoveHintCallback(String, Delegates.SdlHintCallback, IntPtr)
  fullName.vb: SharpSDL3.Sdl.RemoveHintCallback(String, SharpSDL3.Delegates.SdlHintCallback, System.IntPtr)
  name.vb: RemoveHintCallback(String, SdlHintCallback, IntPtr)
- uid: SharpSDL3.Sdl.RemoveSurfaceAlternateImages(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.RemoveSurfaceAlternateImages(System.IntPtr)
  id: RemoveSurfaceAlternateImages(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RemoveSurfaceAlternateImages(nint)
  nameWithType: Sdl.RemoveSurfaceAlternateImages(nint)
  fullName: SharpSDL3.Sdl.RemoveSurfaceAlternateImages(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RemoveSurfaceAlternateImages
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 4728
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Remove all alternate versions of a surface.
  remarks: >-
    This function removes a reference from all the alternative versions,

    destroying them if this is the last reference to them.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.AddSurfaceAlternateImage(System.IntPtr%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetSurfaceImages(System.IntPtr%2cSystem.Int32%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SurfaceHasAlternateImages(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void RemoveSurfaceAlternateImages(nint surface)
    parameters:
    - id: surface
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Surface" data-throw-if-not-resolved="false"></xref> structure to update.
    content.vb: Public Shared Sub RemoveSurfaceAlternateImages(surface As IntPtr)
  overload: SharpSDL3.Sdl.RemoveSurfaceAlternateImages*
  nameWithType.vb: Sdl.RemoveSurfaceAlternateImages(IntPtr)
  fullName.vb: SharpSDL3.Sdl.RemoveSurfaceAlternateImages(System.IntPtr)
  name.vb: RemoveSurfaceAlternateImages(IntPtr)
- uid: SharpSDL3.Sdl.ResetHint(System.String)
  commentId: M:SharpSDL3.Sdl.ResetHint(System.String)
  id: ResetHint(System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ResetHint(string)
  nameWithType: Sdl.ResetHint(string)
  fullName: SharpSDL3.Sdl.ResetHint(string)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ResetHint
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 4748
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Reset a hint to the default value.
  remarks: >-
    This will reset a hint to the value of the environment variable, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if

    the environment isn't set. Callbacks will be called normally with this

    change.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetHint(System.String%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.ResetHints" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool ResetHint(string name)
    parameters:
    - id: name
      type: System.String
      description: the hint to set.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function ResetHint(name As String) As Boolean
  overload: SharpSDL3.Sdl.ResetHint*
  nameWithType.vb: Sdl.ResetHint(String)
  fullName.vb: SharpSDL3.Sdl.ResetHint(String)
  name.vb: ResetHint(String)
- uid: SharpSDL3.Sdl.ResetHints
  commentId: M:SharpSDL3.Sdl.ResetHints
  id: ResetHints
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ResetHints()
  nameWithType: Sdl.ResetHints()
  fullName: SharpSDL3.Sdl.ResetHints()
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ResetHints
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 4769
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Reset all hints to the default values.
  remarks: >-
    This will reset all hints to the value of the associated environment

    variable, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if the environment isn't set. Callbacks will be called

    normally with this change.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.ResetHint(System.String)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void ResetHints()
    content.vb: Public Shared Sub ResetHints()
  overload: SharpSDL3.Sdl.ResetHints*
- uid: SharpSDL3.Sdl.ResetKeyboard
  commentId: M:SharpSDL3.Sdl.ResetKeyboard
  id: ResetKeyboard
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ResetKeyboard()
  nameWithType: Sdl.ResetKeyboard()
  fullName: SharpSDL3.Sdl.ResetKeyboard()
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ResetKeyboard
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 4780
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Clear the state of the keyboard.
  remarks: >-
    This function will generate key up events for all pressed keys.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetKeyboardState(System.Int32%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void ResetKeyboard()
    content.vb: Public Shared Sub ResetKeyboard()
  overload: SharpSDL3.Sdl.ResetKeyboard*
- uid: SharpSDL3.Sdl.RestoreWindow(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.RestoreWindow(System.IntPtr)
  id: RestoreWindow(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RestoreWindow(nint)
  nameWithType: Sdl.RestoreWindow(nint)
  fullName: SharpSDL3.Sdl.RestoreWindow(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RestoreWindow
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 4796
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Request that the size and position of a minimized or maximized window be restored.
  remarks: >-
    If the window is in a fullscreen state, this request has no direct effect.

    It may alter the state the window is returned to when leaving fullscreen.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.MaximizeWindow(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.MinimizeWindow(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SyncWindow(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool RestoreWindow(nint window)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to restore.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function RestoreWindow(window As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.RestoreWindow*
  nameWithType.vb: Sdl.RestoreWindow(IntPtr)
  fullName.vb: SharpSDL3.Sdl.RestoreWindow(System.IntPtr)
  name.vb: RestoreWindow(IntPtr)
- uid: SharpSDL3.Sdl.RunApp(System.Int32,System.IntPtr,SharpSDL3.Delegates.SdlMainFunc,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.RunApp(System.Int32,System.IntPtr,SharpSDL3.Delegates.SdlMainFunc,System.IntPtr)
  id: RunApp(System.Int32,System.IntPtr,SharpSDL3.Delegates.SdlMainFunc,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RunApp(int, nint, SdlMainFunc, nint)
  nameWithType: Sdl.RunApp(int, nint, Delegates.SdlMainFunc, nint)
  fullName: SharpSDL3.Sdl.RunApp(int, nint, SharpSDL3.Delegates.SdlMainFunc, nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RunApp
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 4820
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Initializes and launches an SDL application, by doing platform-specific initialization before calling your mainFunction and cleanups after it returns, if that is needed for a specific platform, otherwise it just calls mainFunction.
  remarks: >-
    You can use this if you want to use your own main() implementation without

    using SDL_main (like when using SDL_MAIN_HANDLED). When using this, you do not need <xref href="SharpSDL3.Sdl.SetMainReady" data-throw-if-not-resolved="false"></xref>.

    <p><strong>Thread Safety:</strong> Generally this is called once, near startup, from the process's initial thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static int RunApp(int argc, nint argv, Delegates.SdlMainFunc mainFunction, nint reserved)
    parameters:
    - id: argc
      type: System.Int32
      description: the argc parameter from the application's main() function, or 0 if the platform's main-equivalent has no argc.
    - id: argv
      type: System.IntPtr
      description: the argv parameter from the application's main() function, or <xref href="System.IntPtr.Zero" data-throw-if-not-resolved="false"></xref> if the platform's main-equivalent has no argv.
    - id: mainFunction
      type: SharpSDL3.Delegates.SdlMainFunc
      description: your SDL app's C-style main(). NOT the function you're calling this from! Its name doesn't matter; it doesn't literally have to be main.
    - id: reserved
      type: System.IntPtr
      description: should be <xref href="System.IntPtr.Zero" data-throw-if-not-resolved="false"></xref> (reserved for future use, will probably be platform-specific then).
    return:
      type: System.Int32
      description: 'Returns the return value from mainFunction: 0 on success, otherwise failure; <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> might have more information on the failure.'
    content.vb: Public Shared Function RunApp(argc As Integer, argv As IntPtr, mainFunction As Delegates.SdlMainFunc, reserved As IntPtr) As Integer
  overload: SharpSDL3.Sdl.RunApp*
  nameWithType.vb: Sdl.RunApp(Integer, IntPtr, Delegates.SdlMainFunc, IntPtr)
  fullName.vb: SharpSDL3.Sdl.RunApp(Integer, System.IntPtr, SharpSDL3.Delegates.SdlMainFunc, System.IntPtr)
  name.vb: RunApp(Integer, IntPtr, SdlMainFunc, IntPtr)
- uid: SharpSDL3.Sdl.RunOnMainThread(SharpSDL3.Delegates.SdlMainThreadCallback,System.IntPtr,System.Boolean)
  commentId: M:SharpSDL3.Sdl.RunOnMainThread(SharpSDL3.Delegates.SdlMainThreadCallback,System.IntPtr,System.Boolean)
  id: RunOnMainThread(SharpSDL3.Delegates.SdlMainThreadCallback,System.IntPtr,System.Boolean)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RunOnMainThread(SdlMainThreadCallback, nint, bool)
  nameWithType: Sdl.RunOnMainThread(Delegates.SdlMainThreadCallback, nint, bool)
  fullName: SharpSDL3.Sdl.RunOnMainThread(SharpSDL3.Delegates.SdlMainThreadCallback, nint, bool)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RunOnMainThread
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 4847
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Call a function on the main thread during event processing.
  remarks: >-
    If this is called on the main thread, the callback is executed immediately.

    If this is called on another thread, this callback is queued for execution

    on the main thread during event processing.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.IsMainThread" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool RunOnMainThread(Delegates.SdlMainThreadCallback callback, nint userdata, bool waitComplete)
    parameters:
    - id: callback
      type: SharpSDL3.Delegates.SdlMainThreadCallback
      description: the callback to call on the main thread.
    - id: userdata
      type: System.IntPtr
      description: a pointer that is passed to callback.
    - id: waitComplete
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> to wait for the callback to complete, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> to return immediately.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function RunOnMainThread(callback As Delegates.SdlMainThreadCallback, userdata As IntPtr, waitComplete As Boolean) As Boolean
  overload: SharpSDL3.Sdl.RunOnMainThread*
  nameWithType.vb: Sdl.RunOnMainThread(Delegates.SdlMainThreadCallback, IntPtr, Boolean)
  fullName.vb: SharpSDL3.Sdl.RunOnMainThread(SharpSDL3.Delegates.SdlMainThreadCallback, System.IntPtr, Boolean)
  name.vb: RunOnMainThread(SdlMainThreadCallback, IntPtr, Boolean)
- uid: SharpSDL3.Sdl.SaveBmp(System.IntPtr,System.String)
  commentId: M:SharpSDL3.Sdl.SaveBmp(System.IntPtr,System.String)
  id: SaveBmp(System.IntPtr,System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SaveBmp(nint, string)
  nameWithType: Sdl.SaveBmp(nint, string)
  fullName: SharpSDL3.Sdl.SaveBmp(nint, string)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SaveBmp
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 4874
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Save a surface to a file.
  remarks: >-
    Surfaces with a 24-bit, 32-bit and paletted 8-bit format get saved in the

    BMP directly. Other RGB formats with 8-bit or higher get converted to a

    24-bit surface or, if they have an alpha mask or a colorkey, to a 32-bit

    surface before they are saved. YUV and paletted 1-bit and 4-bit formats are

    not supported.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.LoadBmp(System.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SaveBmpIO(System.IntPtr%2cSystem.IntPtr%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SaveBmp(nint surface, string file)
    parameters:
    - id: surface
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Surface" data-throw-if-not-resolved="false"></xref> structure containing the image to be saved.
    - id: file
      type: System.String
      description: a file to save to.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SaveBmp(surface As IntPtr, file As String) As Boolean
  overload: SharpSDL3.Sdl.SaveBmp*
  nameWithType.vb: Sdl.SaveBmp(IntPtr, String)
  fullName.vb: SharpSDL3.Sdl.SaveBmp(System.IntPtr, String)
  name.vb: SaveBmp(IntPtr, String)
- uid: SharpSDL3.Sdl.SaveBmpIO(System.IntPtr,System.IntPtr,System.Boolean)
  commentId: M:SharpSDL3.Sdl.SaveBmpIO(System.IntPtr,System.IntPtr,System.Boolean)
  id: SaveBmpIO(System.IntPtr,System.IntPtr,System.Boolean)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SaveBmpIO(nint, nint, bool)
  nameWithType: Sdl.SaveBmpIO(nint, nint, bool)
  fullName: SharpSDL3.Sdl.SaveBmpIO(nint, nint, bool)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SaveBmpIO
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 4906
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Save a surface to a seekable SDL data stream in BMP format.
  remarks: >-
    Surfaces with a 24-bit, 32-bit and paletted 8-bit format get saved in the BMP directly. 

    Other RGB formats with 8-bit or higher get converted to a 24-bit surface or, if they have an alpha mask or a color key, to a 32-bit surface before they are saved. 

    YUV and paletted 1-bit and 4-bit formats are not supported.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.LoadBmpIO(System.IntPtr%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SaveBmp(System.IntPtr%2cSystem.String)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SaveBmpIO(nint surface, nint dst, bool closeIo)
    parameters:
    - id: surface
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Surface" data-throw-if-not-resolved="false"></xref> structure containing the image to be saved.
    - id: dst
      type: System.IntPtr
      description: a data stream to save to.
    - id: closeIo
      type: System.Boolean
      description: if <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, calls <xref href="SharpSDL3.Sdl.CloseIO(SharpSDL3.Structs.IOStream)" data-throw-if-not-resolved="false"></xref> on <code class="paramref">dst</code> before returning, even in case of an error.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function SaveBmpIO(surface As IntPtr, dst As IntPtr, closeIo As Boolean) As Boolean
  overload: SharpSDL3.Sdl.SaveBmpIO*
  nameWithType.vb: Sdl.SaveBmpIO(IntPtr, IntPtr, Boolean)
  fullName.vb: SharpSDL3.Sdl.SaveBmpIO(System.IntPtr, System.IntPtr, Boolean)
  name.vb: SaveBmpIO(IntPtr, IntPtr, Boolean)
- uid: SharpSDL3.Sdl.ScaleSurface(System.IntPtr,System.Int32,System.Int32,SharpSDL3.Enums.ScaleMode)
  commentId: M:SharpSDL3.Sdl.ScaleSurface(System.IntPtr,System.Int32,System.Int32,SharpSDL3.Enums.ScaleMode)
  id: ScaleSurface(System.IntPtr,System.Int32,System.Int32,SharpSDL3.Enums.ScaleMode)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ScaleSurface(nint, int, int, ScaleMode)
  nameWithType: Sdl.ScaleSurface(nint, int, int, ScaleMode)
  fullName: SharpSDL3.Sdl.ScaleSurface(nint, int, int, SharpSDL3.Enums.ScaleMode)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ScaleSurface
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 4936
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Creates a new surface identical to the existing surface, scaled to the desired size.
  remarks: >-
    The returned surface should be freed with

    <xref href="SharpSDL3.Sdl.DestroySurface(System.IntPtr)" data-throw-if-not-resolved="false"></xref>.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.DestroySurface(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint ScaleSurface(nint surface, int width, int height, ScaleMode scaleMode)
    parameters:
    - id: surface
      type: System.IntPtr
      description: the surface to duplicate and scale.
    - id: width
      type: System.Int32
      description: the width of the new surface.
    - id: height
      type: System.Int32
      description: the height of the new surface.
    - id: scaleMode
      type: SharpSDL3.Enums.ScaleMode
      description: the <xref href="SharpSDL3.Enums.ScaleMode" data-throw-if-not-resolved="false"></xref> to be used.
    return:
      type: System.IntPtr
      description: (SDL_Surface *) Returns a copy of the surface or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function ScaleSurface(surface As IntPtr, width As Integer, height As Integer, scaleMode As ScaleMode) As IntPtr
  overload: SharpSDL3.Sdl.ScaleSurface*
  nameWithType.vb: Sdl.ScaleSurface(IntPtr, Integer, Integer, ScaleMode)
  fullName.vb: SharpSDL3.Sdl.ScaleSurface(System.IntPtr, Integer, Integer, SharpSDL3.Enums.ScaleMode)
  name.vb: ScaleSurface(IntPtr, Integer, Integer, ScaleMode)
- uid: SharpSDL3.Sdl.ScreenKeyboardShown(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.ScreenKeyboardShown(System.IntPtr)
  id: ScreenKeyboardShown(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ScreenKeyboardShown(nint)
  nameWithType: Sdl.ScreenKeyboardShown(nint)
  fullName: SharpSDL3.Sdl.ScreenKeyboardShown(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ScreenKeyboardShown
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 4966
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Check whether the screen keyboard is shown for given window.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.HasScreenKeyboardSupport" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool ScreenKeyboardShown(nint window)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window for which screen keyboard should be queried.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if screen keyboard is shown or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if not.
    content.vb: Public Shared Function ScreenKeyboardShown(window As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.ScreenKeyboardShown*
  nameWithType.vb: Sdl.ScreenKeyboardShown(IntPtr)
  fullName.vb: SharpSDL3.Sdl.ScreenKeyboardShown(System.IntPtr)
  name.vb: ScreenKeyboardShown(IntPtr)
- uid: SharpSDL3.Sdl.ScreenSaverEnabled
  commentId: M:SharpSDL3.Sdl.ScreenSaverEnabled
  id: ScreenSaverEnabled
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ScreenSaverEnabled()
  nameWithType: Sdl.ScreenSaverEnabled()
  fullName: SharpSDL3.Sdl.ScreenSaverEnabled()
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ScreenSaverEnabled
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 4987
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Check whether the screensaver is currently enabled.
  remarks: >-
    The screensaver is disabled by default.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.DisableScreenSaver" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.EnableScreenSaver" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool ScreenSaverEnabled()
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the screensaver is enabled, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if it is disabled.
    content.vb: Public Shared Function ScreenSaverEnabled() As Boolean
  overload: SharpSDL3.Sdl.ScreenSaverEnabled*
- uid: SharpSDL3.Sdl.SetAppMetadata(System.String,System.String,System.String)
  commentId: M:SharpSDL3.Sdl.SetAppMetadata(System.String,System.String,System.String)
  id: SetAppMetadata(System.String,System.String,System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetAppMetadata(string, string, string)
  nameWithType: Sdl.SetAppMetadata(string, string, string)
  fullName: SharpSDL3.Sdl.SetAppMetadata(string, string, string)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetAppMetadata
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 5009
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Specify basic metadata about your app.
  remarks: >-
    You can optionally provide metadata about your app to SDL. This is not

    required, but strongly encouraged.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetAppMetadataProperty(System.String%2cSystem.String)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetAppMetadata(string appname, string appversion, string appidentifier)
    parameters:
    - id: appname
      type: System.String
      description: "The name of the application (\"My Game 2: Bad Guy's Revenge!\")."
    - id: appversion
      type: System.String
      description: The version of the application ("1.0.0beta5" or a git hash, or whatever makes sense).
    - id: appidentifier
      type: System.String
      description: A unique string in reverse-domain format that identifies this app ("com.example.mygame2").
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetAppMetadata(appname As String, appversion As String, appidentifier As String) As Boolean
  overload: SharpSDL3.Sdl.SetAppMetadata*
  nameWithType.vb: Sdl.SetAppMetadata(String, String, String)
  fullName.vb: SharpSDL3.Sdl.SetAppMetadata(String, String, String)
  name.vb: SetAppMetadata(String, String, String)
- uid: SharpSDL3.Sdl.SetAppMetadataProperty(System.String,System.String)
  commentId: M:SharpSDL3.Sdl.SetAppMetadataProperty(System.String,System.String)
  id: SetAppMetadataProperty(System.String,System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetAppMetadataProperty(string, string)
  nameWithType: Sdl.SetAppMetadataProperty(string, string)
  fullName: SharpSDL3.Sdl.SetAppMetadataProperty(string, string)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetAppMetadataProperty
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 5033
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Specify metadata about your app through a set of properties.
  remarks: >-
    You can optionally provide metadata about your app to SDL. This is not

    required, but strongly encouraged.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetAppMetadataProperty(System.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetAppMetadata(System.String%2cSystem.String%2cSystem.String)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetAppMetadataProperty(string name, string value)
    parameters:
    - id: name
      type: System.String
      description: the name of the metadata property to set.
    - id: value
      type: System.String
      description: the value of the property, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to remove that property.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetAppMetadataProperty(name As String, value As String) As Boolean
  overload: SharpSDL3.Sdl.SetAppMetadataProperty*
  nameWithType.vb: Sdl.SetAppMetadataProperty(String, String)
  fullName.vb: SharpSDL3.Sdl.SetAppMetadataProperty(String, String)
  name.vb: SetAppMetadataProperty(String, String)
- uid: SharpSDL3.Sdl.SetBooleanProperty(System.UInt32,System.String,System.Boolean)
  commentId: M:SharpSDL3.Sdl.SetBooleanProperty(System.UInt32,System.String,System.Boolean)
  id: SetBooleanProperty(System.UInt32,System.String,System.Boolean)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetBooleanProperty(uint, string, bool)
  nameWithType: Sdl.SetBooleanProperty(uint, string, bool)
  fullName: SharpSDL3.Sdl.SetBooleanProperty(uint, string, bool)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetBooleanProperty
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 5055
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set a boolean property in a group of properties.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetBooleanProperty(System.UInt32%2cSystem.String%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetBooleanProperty(uint props, string name, bool value)
    parameters:
    - id: props
      type: System.UInt32
      description: the properties to modify.
    - id: name
      type: System.String
      description: the name of the property to modify.
    - id: value
      type: System.Boolean
      description: the new value of the property.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetBooleanProperty(props As UInteger, name As String, value As Boolean) As Boolean
  overload: SharpSDL3.Sdl.SetBooleanProperty*
  nameWithType.vb: Sdl.SetBooleanProperty(UInteger, String, Boolean)
  fullName.vb: SharpSDL3.Sdl.SetBooleanProperty(UInteger, String, Boolean)
  name.vb: SetBooleanProperty(UInteger, String, Boolean)
- uid: SharpSDL3.Sdl.SetClipboardData(SharpSDL3.Delegates.SdlClipboardDataCallback,SharpSDL3.Delegates.SdlClipboardCleanupCallback,System.IntPtr,System.IntPtr,System.UIntPtr)
  commentId: M:SharpSDL3.Sdl.SetClipboardData(SharpSDL3.Delegates.SdlClipboardDataCallback,SharpSDL3.Delegates.SdlClipboardCleanupCallback,System.IntPtr,System.IntPtr,System.UIntPtr)
  id: SetClipboardData(SharpSDL3.Delegates.SdlClipboardDataCallback,SharpSDL3.Delegates.SdlClipboardCleanupCallback,System.IntPtr,System.IntPtr,System.UIntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetClipboardData(SdlClipboardDataCallback, SdlClipboardCleanupCallback, nint, nint, nuint)
  nameWithType: Sdl.SetClipboardData(Delegates.SdlClipboardDataCallback, Delegates.SdlClipboardCleanupCallback, nint, nint, nuint)
  fullName: SharpSDL3.Sdl.SetClipboardData(SharpSDL3.Delegates.SdlClipboardDataCallback, SharpSDL3.Delegates.SdlClipboardCleanupCallback, nint, nint, nuint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetClipboardData
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 5086
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Offer clipboard data to the OS.
  remarks: >-
    Tell the operating system that the application is offering clipboard data

    for each of the provided mime-types. Once another application requests the

    data the callback function will be called, allowing it to generate and

    respond with the data for the requested mime-type.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.ClearClipboardData" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetClipboardData(System.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.HasClipboardData(System.String)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetClipboardData(Delegates.SdlClipboardDataCallback callback, Delegates.SdlClipboardCleanupCallback cleanup, nint userdata, nint mimeTypes, nuint numMimeTypes)
    parameters:
    - id: callback
      type: SharpSDL3.Delegates.SdlClipboardDataCallback
      description: a function pointer to the function that provides the clipboard data.
    - id: cleanup
      type: SharpSDL3.Delegates.SdlClipboardCleanupCallback
      description: a function pointer to the function that cleans up the clipboard data.
    - id: userdata
      type: System.IntPtr
      description: an opaque pointer that will be forwarded to the callbacks.
    - id: mimeTypes
      type: System.IntPtr
      description: a list of mime-types that are being offered.
    - id: numMimeTypes
      type: System.UIntPtr
      description: the number of mime-types in the mime_types list.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetClipboardData(callback As Delegates.SdlClipboardDataCallback, cleanup As Delegates.SdlClipboardCleanupCallback, userdata As IntPtr, mimeTypes As IntPtr, numMimeTypes As UIntPtr) As Boolean
  overload: SharpSDL3.Sdl.SetClipboardData*
  nameWithType.vb: Sdl.SetClipboardData(Delegates.SdlClipboardDataCallback, Delegates.SdlClipboardCleanupCallback, IntPtr, IntPtr, UIntPtr)
  fullName.vb: SharpSDL3.Sdl.SetClipboardData(SharpSDL3.Delegates.SdlClipboardDataCallback, SharpSDL3.Delegates.SdlClipboardCleanupCallback, System.IntPtr, System.IntPtr, System.UIntPtr)
  name.vb: SetClipboardData(SdlClipboardDataCallback, SdlClipboardCleanupCallback, IntPtr, IntPtr, UIntPtr)
- uid: SharpSDL3.Sdl.SetClipboardText(System.String)
  commentId: M:SharpSDL3.Sdl.SetClipboardText(System.String)
  id: SetClipboardText(System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetClipboardText(string)
  nameWithType: Sdl.SetClipboardText(string)
  fullName: SharpSDL3.Sdl.SetClipboardText(string)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetClipboardText
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 5109
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Put UTF-8 text into the clipboard.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetClipboardText" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.HasClipboardText" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetClipboardText(string text)
    parameters:
    - id: text
      type: System.String
      description: the text to store in the clipboard.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetClipboardText(text As String) As Boolean
  overload: SharpSDL3.Sdl.SetClipboardText*
  nameWithType.vb: Sdl.SetClipboardText(String)
  fullName.vb: SharpSDL3.Sdl.SetClipboardText(String)
  name.vb: SetClipboardText(String)
- uid: SharpSDL3.Sdl.SetCurrentThreadPriority(SharpSDL3.Enums.ThreadPriority)
  commentId: M:SharpSDL3.Sdl.SetCurrentThreadPriority(SharpSDL3.Enums.ThreadPriority)
  id: SetCurrentThreadPriority(SharpSDL3.Enums.ThreadPriority)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetCurrentThreadPriority(ThreadPriority)
  nameWithType: Sdl.SetCurrentThreadPriority(ThreadPriority)
  fullName: SharpSDL3.Sdl.SetCurrentThreadPriority(SharpSDL3.Enums.ThreadPriority)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetCurrentThreadPriority
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 5130
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set the priority for the current thread.
  remarks: >-
    Note that some platforms will not let you alter the priority (or at least,

    promote the thread to a higher priority) at all, and some require you to be

    an administrator account. Be prepared for this to fail.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool SetCurrentThreadPriority(ThreadPriority priority)
    parameters:
    - id: priority
      type: SharpSDL3.Enums.ThreadPriority
      description: the SDL_ThreadPriority to set.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetCurrentThreadPriority(priority As ThreadPriority) As Boolean
  overload: SharpSDL3.Sdl.SetCurrentThreadPriority*
- uid: SharpSDL3.Sdl.SetError(System.String,System.Object[])
  commentId: M:SharpSDL3.Sdl.SetError(System.String,System.Object[])
  id: SetError(System.String,System.Object[])
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetError(string, params object[])
  nameWithType: Sdl.SetError(string, params object[])
  fullName: SharpSDL3.Sdl.SetError(string, params object[])
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetError
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 5156
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set the SDL error message for the current thread.
  remarks: >-
    Calling this function will replace any previous error message that was set.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.ClearError" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref>

    SetErrorV
  example: []
  syntax:
    content: public static bool SetError(string fmt, params object[] args)
    parameters:
    - id: fmt
      type: System.String
      description: a printf()-style message format string.
    - id: args
      type: System.Object[]
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Shared Function SetError(fmt As String, ParamArray args As Object()) As Boolean
  overload: SharpSDL3.Sdl.SetError*
  nameWithType.vb: Sdl.SetError(String, ParamArray Object())
  fullName.vb: SharpSDL3.Sdl.SetError(String, ParamArray Object())
  name.vb: SetError(String, ParamArray Object())
- uid: SharpSDL3.Sdl.SetFloatProperty(System.UInt32,System.String,System.Single)
  commentId: M:SharpSDL3.Sdl.SetFloatProperty(System.UInt32,System.String,System.Single)
  id: SetFloatProperty(System.UInt32,System.String,System.Single)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetFloatProperty(uint, string, float)
  nameWithType: Sdl.SetFloatProperty(uint, string, float)
  fullName: SharpSDL3.Sdl.SetFloatProperty(uint, string, float)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetFloatProperty
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 5178
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set a floating point property in a group of properties.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetFloatProperty(System.UInt32%2cSystem.String%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetFloatProperty(uint props, string name, float value)
    parameters:
    - id: props
      type: System.UInt32
      description: the properties to modify.
    - id: name
      type: System.String
      description: the name of the property to modify.
    - id: value
      type: System.Single
      description: the new value of the property.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetFloatProperty(props As UInteger, name As String, value As Single) As Boolean
  overload: SharpSDL3.Sdl.SetFloatProperty*
  nameWithType.vb: Sdl.SetFloatProperty(UInteger, String, Single)
  fullName.vb: SharpSDL3.Sdl.SetFloatProperty(UInteger, String, Single)
  name.vb: SetFloatProperty(UInteger, String, Single)
- uid: SharpSDL3.Sdl.SetHint(System.String,System.String)
  commentId: M:SharpSDL3.Sdl.SetHint(System.String,System.String)
  id: SetHint(System.String,System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetHint(string, string)
  nameWithType: Sdl.SetHint(string, string)
  fullName: SharpSDL3.Sdl.SetHint(string, string)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetHint
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 5196
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: ''
  example: []
  syntax:
    content: public static bool SetHint(string name, string value)
    parameters:
    - id: name
      type: System.String
      description: ''
    - id: value
      type: System.String
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function SetHint(name As String, value As String) As Boolean
  overload: SharpSDL3.Sdl.SetHint*
  nameWithType.vb: Sdl.SetHint(String, String)
  fullName.vb: SharpSDL3.Sdl.SetHint(String, String)
  name.vb: SetHint(String, String)
- uid: SharpSDL3.Sdl.SetHintWithPriority(System.String,System.String,SharpSDL3.Enums.HintPriority)
  commentId: M:SharpSDL3.Sdl.SetHintWithPriority(System.String,System.String,SharpSDL3.Enums.HintPriority)
  id: SetHintWithPriority(System.String,System.String,SharpSDL3.Enums.HintPriority)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetHintWithPriority(string, string, HintPriority)
  nameWithType: Sdl.SetHintWithPriority(string, string, HintPriority)
  fullName: SharpSDL3.Sdl.SetHintWithPriority(string, string, SharpSDL3.Enums.HintPriority)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetHintWithPriority
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 5224
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set a hint with a specific priority.
  remarks: >-
    The priority controls the behavior when setting a hint that already has a

    value. Hints will replace existing hints of their priority and lower.

    Environment variables are considered to have override priority.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetHint(System.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.ResetHint(System.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetHint(System.String%2cSystem.String)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetHintWithPriority(string name, string value, HintPriority priority)
    parameters:
    - id: name
      type: System.String
      description: the hint to set.
    - id: value
      type: System.String
      description: the value of the hint variable.
    - id: priority
      type: SharpSDL3.Enums.HintPriority
      description: the SDL_HintPriority level for the hint.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetHintWithPriority(name As String, value As String, priority As HintPriority) As Boolean
  overload: SharpSDL3.Sdl.SetHintWithPriority*
  nameWithType.vb: Sdl.SetHintWithPriority(String, String, HintPriority)
  fullName.vb: SharpSDL3.Sdl.SetHintWithPriority(String, String, SharpSDL3.Enums.HintPriority)
  name.vb: SetHintWithPriority(String, String, HintPriority)
- uid: SharpSDL3.Sdl.SetMainReady
  commentId: M:SharpSDL3.Sdl.SetMainReady
  id: SetMainReady
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetMainReady()
  nameWithType: Sdl.SetMainReady()
  fullName: SharpSDL3.Sdl.SetMainReady()
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetMainReady
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 5245
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Circumvent failure of <xref href="SharpSDL3.Sdl.Init" data-throw-if-not-resolved="false"></xref> when not using SDL_main() as an entry point.
  remarks: >-
    This function is defined in SDL_main.h, along with the

    preprocessor rule to redefine main() as SDL_main(). Thus to

    ensure that your main() function will not be changed it is necessary to

    define SDL_MAIN_HANDLED before including SDL.h.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.Init" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void SetMainReady()
    content.vb: Public Shared Sub SetMainReady()
  overload: SharpSDL3.Sdl.SetMainReady*
- uid: SharpSDL3.Sdl.SetModState(SharpSDL3.Enums.KeyMod)
  commentId: M:SharpSDL3.Sdl.SetModState(SharpSDL3.Enums.KeyMod)
  id: SetModState(SharpSDL3.Enums.KeyMod)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetModState(KeyMod)
  nameWithType: Sdl.SetModState(KeyMod)
  fullName: SharpSDL3.Sdl.SetModState(SharpSDL3.Enums.KeyMod)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetModState
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 5262
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set the current key modifier state for the keyboard.
  remarks: >-
    The inverse of SDL_GetModState(),

    SDL_SetModState() allows you to impose modifier key

    states on your application. Simply pass your desired modifier states into

    <code class="paramref">modstate</code>. This value may be a bitwise, OR'd combination of

    <xref href="SharpSDL3.Enums.KeyMod" data-throw-if-not-resolved="false"></xref> values.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetModState" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void SetModState(KeyMod modstate)
    parameters:
    - id: modstate
      type: SharpSDL3.Enums.KeyMod
      description: the desired <xref href="SharpSDL3.Enums.KeyMod" data-throw-if-not-resolved="false"></xref> for the keyboard.
    content.vb: Public Shared Sub SetModState(modstate As KeyMod)
  overload: SharpSDL3.Sdl.SetModState*
- uid: SharpSDL3.Sdl.SetNumberProperty(System.UInt32,System.String,System.Int64)
  commentId: M:SharpSDL3.Sdl.SetNumberProperty(System.UInt32,System.String,System.Int64)
  id: SetNumberProperty(System.UInt32,System.String,System.Int64)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetNumberProperty(uint, string, long)
  nameWithType: Sdl.SetNumberProperty(uint, string, long)
  fullName: SharpSDL3.Sdl.SetNumberProperty(uint, string, long)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetNumberProperty
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 5280
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set an integer property in a group of properties.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetNumberProperty(System.UInt32%2cSystem.String%2cSystem.Int64)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetNumberProperty(uint props, string name, long value)
    parameters:
    - id: props
      type: System.UInt32
      description: the properties to modify.
    - id: name
      type: System.String
      description: the name of the property to modify.
    - id: value
      type: System.Int64
      description: the new value of the property.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetNumberProperty(props As UInteger, name As String, value As Long) As Boolean
  overload: SharpSDL3.Sdl.SetNumberProperty*
  nameWithType.vb: Sdl.SetNumberProperty(UInteger, String, Long)
  fullName.vb: SharpSDL3.Sdl.SetNumberProperty(UInteger, String, Long)
  name.vb: SetNumberProperty(UInteger, String, Long)
- uid: SharpSDL3.Sdl.SetPaletteColors(System.IntPtr,System.Span{SharpSDL3.Structs.Color},System.Int32,System.Int32)
  commentId: M:SharpSDL3.Sdl.SetPaletteColors(System.IntPtr,System.Span{SharpSDL3.Structs.Color},System.Int32,System.Int32)
  id: SetPaletteColors(System.IntPtr,System.Span{SharpSDL3.Structs.Color},System.Int32,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetPaletteColors(nint, Span<Color>, int, int)
  nameWithType: Sdl.SetPaletteColors(nint, Span<Color>, int, int)
  fullName: SharpSDL3.Sdl.SetPaletteColors(nint, System.Span<SharpSDL3.Structs.Color>, int, int)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetPaletteColors
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 5302
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set a range of colors in a palette.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread, as long as the palette is not modified or destroyed in another thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool SetPaletteColors(nint palette, Span<Color> colors, int firstcolor, int ncolors)
    parameters:
    - id: palette
      type: System.IntPtr
      description: the SDL_Palette structure to modify.
    - id: colors
      type: System.Span{SharpSDL3.Structs.Color}
      description: an array of SDL_Color structures to copy into the palette.
    - id: firstcolor
      type: System.Int32
      description: the index of the first palette entry to modify.
    - id: ncolors
      type: System.Int32
      description: the number of entries to modify.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetPaletteColors(palette As IntPtr, colors As Span(Of Color), firstcolor As Integer, ncolors As Integer) As Boolean
  overload: SharpSDL3.Sdl.SetPaletteColors*
  nameWithType.vb: Sdl.SetPaletteColors(IntPtr, Span(Of Color), Integer, Integer)
  fullName.vb: SharpSDL3.Sdl.SetPaletteColors(System.IntPtr, System.Span(Of SharpSDL3.Structs.Color), Integer, Integer)
  name.vb: SetPaletteColors(IntPtr, Span(Of Color), Integer, Integer)
- uid: SharpSDL3.Sdl.SetPointerProperty(System.UInt32,System.String,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.SetPointerProperty(System.UInt32,System.String,System.IntPtr)
  id: SetPointerProperty(System.UInt32,System.String,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetPointerProperty(uint, string, nint)
  nameWithType: Sdl.SetPointerProperty(uint, string, nint)
  fullName: SharpSDL3.Sdl.SetPointerProperty(uint, string, nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetPointerProperty
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 5336
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set a pointer property in a group of properties.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetPointerProperty(System.UInt32%2cSystem.String%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.HasProperty(System.UInt32%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetBooleanProperty(System.UInt32%2cSystem.String%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetFloatProperty(System.UInt32%2cSystem.String%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetNumberProperty(System.UInt32%2cSystem.String%2cSystem.Int64)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetPointerPropertyWithCleanup(System.UInt32%2cSystem.String%2cSystem.IntPtr%2cSharpSDL3.Delegates.SdlCleanupPropertyCallback%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetStringProperty(System.UInt32%2cSystem.String%2cSystem.String)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetPointerProperty(uint props, string name, nint value)
    parameters:
    - id: props
      type: System.UInt32
      description: the properties to modify.
    - id: name
      type: System.String
      description: the name of the property to modify.
    - id: value
      type: System.IntPtr
      description: the new value of the property, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to delete the property.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetPointerProperty(props As UInteger, name As String, value As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.SetPointerProperty*
  nameWithType.vb: Sdl.SetPointerProperty(UInteger, String, IntPtr)
  fullName.vb: SharpSDL3.Sdl.SetPointerProperty(UInteger, String, System.IntPtr)
  name.vb: SetPointerProperty(UInteger, String, IntPtr)
- uid: SharpSDL3.Sdl.SetPointerPropertyWithCleanup(System.UInt32,System.String,System.IntPtr,SharpSDL3.Delegates.SdlCleanupPropertyCallback,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.SetPointerPropertyWithCleanup(System.UInt32,System.String,System.IntPtr,SharpSDL3.Delegates.SdlCleanupPropertyCallback,System.IntPtr)
  id: SetPointerPropertyWithCleanup(System.UInt32,System.String,System.IntPtr,SharpSDL3.Delegates.SdlCleanupPropertyCallback,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetPointerPropertyWithCleanup(uint, string, nint, SdlCleanupPropertyCallback, nint)
  nameWithType: Sdl.SetPointerPropertyWithCleanup(uint, string, nint, Delegates.SdlCleanupPropertyCallback, nint)
  fullName: SharpSDL3.Sdl.SetPointerPropertyWithCleanup(uint, string, nint, SharpSDL3.Delegates.SdlCleanupPropertyCallback, nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetPointerPropertyWithCleanup
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 5366
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set a pointer property in a group of properties with a cleanup function that is called when the property is deleted.
  remarks: >-
    The cleanup function is also called if setting the property fails for any

    reason.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetPointerProperty(System.UInt32%2cSystem.String%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetPointerProperty(System.UInt32%2cSystem.String%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>

    CleanupPropertyCallback
  example: []
  syntax:
    content: public static bool SetPointerPropertyWithCleanup(uint props, string name, nint value, Delegates.SdlCleanupPropertyCallback cleanup, nint userdata)
    parameters:
    - id: props
      type: System.UInt32
      description: the properties to modify.
    - id: name
      type: System.String
      description: the name of the property to modify.
    - id: value
      type: System.IntPtr
      description: the new value of the property, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to delete the property.
    - id: cleanup
      type: SharpSDL3.Delegates.SdlCleanupPropertyCallback
      description: the function to call when this property is deleted, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if no cleanup is necessary.
    - id: userdata
      type: System.IntPtr
      description: a pointer that is passed to the cleanup function.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetPointerPropertyWithCleanup(props As UInteger, name As String, value As IntPtr, cleanup As Delegates.SdlCleanupPropertyCallback, userdata As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.SetPointerPropertyWithCleanup*
  nameWithType.vb: Sdl.SetPointerPropertyWithCleanup(UInteger, String, IntPtr, Delegates.SdlCleanupPropertyCallback, IntPtr)
  fullName.vb: SharpSDL3.Sdl.SetPointerPropertyWithCleanup(UInteger, String, System.IntPtr, SharpSDL3.Delegates.SdlCleanupPropertyCallback, System.IntPtr)
  name.vb: SetPointerPropertyWithCleanup(UInteger, String, IntPtr, SdlCleanupPropertyCallback, IntPtr)
- uid: SharpSDL3.Sdl.SetPrimarySelectionText(System.String)
  commentId: M:SharpSDL3.Sdl.SetPrimarySelectionText(System.String)
  id: SetPrimarySelectionText(System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetPrimarySelectionText(string)
  nameWithType: Sdl.SetPrimarySelectionText(string)
  fullName: SharpSDL3.Sdl.SetPrimarySelectionText(string)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetPrimarySelectionText
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 5390
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Put UTF-8 text into the primary selection.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetPrimarySelectionText" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.HasPrimarySelectionText" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetPrimarySelectionText(string text)
    parameters:
    - id: text
      type: System.String
      description: the text to store in the primary selection.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetPrimarySelectionText(text As String) As Boolean
  overload: SharpSDL3.Sdl.SetPrimarySelectionText*
  nameWithType.vb: Sdl.SetPrimarySelectionText(String)
  fullName.vb: SharpSDL3.Sdl.SetPrimarySelectionText(String)
  name.vb: SetPrimarySelectionText(String)
- uid: SharpSDL3.Sdl.SetScancodeName(SharpSDL3.Enums.Scancode,System.String)
  commentId: M:SharpSDL3.Sdl.SetScancodeName(SharpSDL3.Enums.Scancode,System.String)
  id: SetScancodeName(SharpSDL3.Enums.Scancode,System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetScancodeName(Scancode, string)
  nameWithType: Sdl.SetScancodeName(Scancode, string)
  fullName: SharpSDL3.Sdl.SetScancodeName(SharpSDL3.Enums.Scancode, string)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetScancodeName
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 5413
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set a human-readable name for a scancode.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetScancodeName(SharpSDL3.Enums.Scancode)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetScancodeName(Scancode scanCode, string name)
    parameters:
    - id: scanCode
      type: SharpSDL3.Enums.Scancode
    - id: name
      type: System.String
      description: the name to use for the scancode, encoded as UTF-8. The string is not copied, so the pointer given to this function must stay valid while SDL is being used.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetScancodeName(scanCode As Scancode, name As String) As Boolean
  overload: SharpSDL3.Sdl.SetScancodeName*
  nameWithType.vb: Sdl.SetScancodeName(Scancode, String)
  fullName.vb: SharpSDL3.Sdl.SetScancodeName(SharpSDL3.Enums.Scancode, String)
  name.vb: SetScancodeName(Scancode, String)
- uid: SharpSDL3.Sdl.SetStringProperty(System.UInt32,System.String,System.String)
  commentId: M:SharpSDL3.Sdl.SetStringProperty(System.UInt32,System.String,System.String)
  id: SetStringProperty(System.UInt32,System.String,System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetStringProperty(uint, string, string)
  nameWithType: Sdl.SetStringProperty(uint, string, string)
  fullName: SharpSDL3.Sdl.SetStringProperty(uint, string, string)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetStringProperty
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 5439
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set a string property in a group of properties.
  remarks: >-
    This function makes a copy of the string; the caller does not have to

    preserve the data after this call completes.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetStringProperty(System.UInt32%2cSystem.String%2cSystem.String)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetStringProperty(uint props, string name, string value)
    parameters:
    - id: props
      type: System.UInt32
      description: the properties to modify.
    - id: name
      type: System.String
      description: the name of the property to modify.
    - id: value
      type: System.String
      description: the new value of the property, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to delete the property.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetStringProperty(props As UInteger, name As String, value As String) As Boolean
  overload: SharpSDL3.Sdl.SetStringProperty*
  nameWithType.vb: Sdl.SetStringProperty(UInteger, String, String)
  fullName.vb: SharpSDL3.Sdl.SetStringProperty(UInteger, String, String)
  name.vb: SetStringProperty(UInteger, String, String)
- uid: SharpSDL3.Sdl.SetSurfaceAlphaMod(System.IntPtr,System.Byte)
  commentId: M:SharpSDL3.Sdl.SetSurfaceAlphaMod(System.IntPtr,System.Byte)
  id: SetSurfaceAlphaMod(System.IntPtr,System.Byte)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetSurfaceAlphaMod(nint, byte)
  nameWithType: Sdl.SetSurfaceAlphaMod(nint, byte)
  fullName: SharpSDL3.Sdl.SetSurfaceAlphaMod(nint, byte)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetSurfaceAlphaMod
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 5465
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set an additional alpha value used in blit operations.
  remarks: >-
    When this surface is blitted, during the blit operation the source alpha

    value is modulated by this alpha value according to the following formula:

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetSurfaceAlphaMod(System.IntPtr%2cSystem.Byte%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetSurfaceColorMod(System.IntPtr%2cSystem.Byte%2cSystem.Byte%2cSystem.Byte)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetSurfaceAlphaMod(nint surface, byte alpha)
    parameters:
    - id: surface
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Surface" data-throw-if-not-resolved="false"></xref> structure to update.
    - id: alpha
      type: System.Byte
      description: the alpha value multiplied into blit operations.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetSurfaceAlphaMod(surface As IntPtr, alpha As Byte) As Boolean
  overload: SharpSDL3.Sdl.SetSurfaceAlphaMod*
  nameWithType.vb: Sdl.SetSurfaceAlphaMod(IntPtr, Byte)
  fullName.vb: SharpSDL3.Sdl.SetSurfaceAlphaMod(System.IntPtr, Byte)
  name.vb: SetSurfaceAlphaMod(IntPtr, Byte)
- uid: SharpSDL3.Sdl.SetSurfaceBlendMode(System.IntPtr,System.UInt32)
  commentId: M:SharpSDL3.Sdl.SetSurfaceBlendMode(System.IntPtr,System.UInt32)
  id: SetSurfaceBlendMode(System.IntPtr,System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetSurfaceBlendMode(nint, uint)
  nameWithType: Sdl.SetSurfaceBlendMode(nint, uint)
  fullName: SharpSDL3.Sdl.SetSurfaceBlendMode(nint, uint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetSurfaceBlendMode
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 5491
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set the blend mode used for blit operations.
  remarks: >-
    To copy a surface to another surface (or texture) without blending with the

    existing data, the blendmode of the SOURCE surface should be set to

    SDL_BLENDMODE_NONE.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetSurfaceBlendMode(System.IntPtr%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetSurfaceBlendMode(nint surface, uint blendMode)
    parameters:
    - id: surface
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Surface" data-throw-if-not-resolved="false"></xref> structure to update.
    - id: blendMode
      type: System.UInt32
      description: the <xref href="SharpSDL3.Enums.BlendMode" data-throw-if-not-resolved="false"></xref> to use for blit blending.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetSurfaceBlendMode(surface As IntPtr, blendMode As UInteger) As Boolean
  overload: SharpSDL3.Sdl.SetSurfaceBlendMode*
  nameWithType.vb: Sdl.SetSurfaceBlendMode(IntPtr, UInteger)
  fullName.vb: SharpSDL3.Sdl.SetSurfaceBlendMode(System.IntPtr, UInteger)
  name.vb: SetSurfaceBlendMode(IntPtr, UInteger)
- uid: SharpSDL3.Sdl.SetSurfaceClipRect(System.IntPtr,SharpSDL3.Structs.Rect@)
  commentId: M:SharpSDL3.Sdl.SetSurfaceClipRect(System.IntPtr,SharpSDL3.Structs.Rect@)
  id: SetSurfaceClipRect(System.IntPtr,SharpSDL3.Structs.Rect@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetSurfaceClipRect(nint, ref Rect)
  nameWithType: Sdl.SetSurfaceClipRect(nint, ref Rect)
  fullName: SharpSDL3.Sdl.SetSurfaceClipRect(nint, ref SharpSDL3.Structs.Rect)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetSurfaceClipRect
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 5516
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set the clipping rectangle for a surface.
  remarks: >-
    When surface is the destination of a blit, only the area within the clip

    rectangle is drawn into.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetSurfaceClipRect(System.IntPtr%2cSharpSDL3.Structs.Rect%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetSurfaceClipRect(nint surface, ref Rect rect)
    parameters:
    - id: surface
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Surface" data-throw-if-not-resolved="false"></xref> structure to be clipped.
    - id: rect
      type: SharpSDL3.Structs.Rect
      description: the <xref href="SharpSDL3.Structs.Rect" data-throw-if-not-resolved="false"></xref> structure representing the clipping rectangle, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to disable clipping.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the rectangle intersects the surface, otherwise<a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> and blits will be completely clipped.
    content.vb: Public Shared Function SetSurfaceClipRect(surface As IntPtr, rect As Rect) As Boolean
  overload: SharpSDL3.Sdl.SetSurfaceClipRect*
  nameWithType.vb: Sdl.SetSurfaceClipRect(IntPtr, Rect)
  fullName.vb: SharpSDL3.Sdl.SetSurfaceClipRect(System.IntPtr, SharpSDL3.Structs.Rect)
  name.vb: SetSurfaceClipRect(IntPtr, Rect)
- uid: SharpSDL3.Sdl.SetSurfaceColorKey(System.IntPtr,System.Boolean,System.UInt32)
  commentId: M:SharpSDL3.Sdl.SetSurfaceColorKey(System.IntPtr,System.Boolean,System.UInt32)
  id: SetSurfaceColorKey(System.IntPtr,System.Boolean,System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetSurfaceColorKey(nint, bool, uint)
  nameWithType: Sdl.SetSurfaceColorKey(nint, bool, uint)
  fullName: SharpSDL3.Sdl.SetSurfaceColorKey(nint, bool, uint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetSurfaceColorKey
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 5545
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set the color key (transparent pixel) in a surface.
  remarks: >-
    The color key defines a pixel value that will be treated as transparent in

    a blit. For example, one can use this to specify that cyan pixels should be

    considered transparent, and therefore not rendered.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetSurfaceColorKey(System.IntPtr%2cSystem.UInt32%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetSurfaceRLE(System.IntPtr%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SurfaceHasColorKey(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetSurfaceColorKey(nint surface, bool enabled, uint key)
    parameters:
    - id: surface
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Surface" data-throw-if-not-resolved="false"></xref> structure to update.
    - id: enabled
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> to enable color key, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> to disable color key.
    - id: key
      type: System.UInt32
      description: the transparent pixel.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetSurfaceColorKey(surface As IntPtr, enabled As Boolean, key As UInteger) As Boolean
  overload: SharpSDL3.Sdl.SetSurfaceColorKey*
  nameWithType.vb: Sdl.SetSurfaceColorKey(IntPtr, Boolean, UInteger)
  fullName.vb: SharpSDL3.Sdl.SetSurfaceColorKey(System.IntPtr, Boolean, UInteger)
  name.vb: SetSurfaceColorKey(IntPtr, Boolean, UInteger)
- uid: SharpSDL3.Sdl.SetSurfaceColorMod(System.IntPtr,System.Byte,System.Byte,System.Byte)
  commentId: M:SharpSDL3.Sdl.SetSurfaceColorMod(System.IntPtr,System.Byte,System.Byte,System.Byte)
  id: SetSurfaceColorMod(System.IntPtr,System.Byte,System.Byte,System.Byte)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetSurfaceColorMod(nint, byte, byte, byte)
  nameWithType: Sdl.SetSurfaceColorMod(nint, byte, byte, byte)
  fullName: SharpSDL3.Sdl.SetSurfaceColorMod(nint, byte, byte, byte)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetSurfaceColorMod
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 5574
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set an additional color value multiplied into blit operations.
  remarks: >-
    When this surface is blitted, during the blit operation each source color

    channel is modulated by the appropriate color value according to the

    following formula:

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetSurfaceColorMod(System.IntPtr%2cSystem.Byte%40%2cSystem.Byte%40%2cSystem.Byte%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetSurfaceAlphaMod(System.IntPtr%2cSystem.Byte)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetSurfaceColorMod(nint surface, byte r, byte g, byte b)
    parameters:
    - id: surface
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Surface" data-throw-if-not-resolved="false"></xref> structure to update.
    - id: r
      type: System.Byte
      description: the red color value multiplied into blit operations.
    - id: g
      type: System.Byte
      description: the green color value multiplied into blit operations.
    - id: b
      type: System.Byte
      description: the blue color value multiplied into blit operations.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetSurfaceColorMod(surface As IntPtr, r As Byte, g As Byte, b As Byte) As Boolean
  overload: SharpSDL3.Sdl.SetSurfaceColorMod*
  nameWithType.vb: Sdl.SetSurfaceColorMod(IntPtr, Byte, Byte, Byte)
  fullName.vb: SharpSDL3.Sdl.SetSurfaceColorMod(System.IntPtr, Byte, Byte, Byte)
  name.vb: SetSurfaceColorMod(IntPtr, Byte, Byte, Byte)
- uid: SharpSDL3.Sdl.SetSurfaceColorMod(System.IntPtr,SharpSDL3.Structs.Color)
  commentId: M:SharpSDL3.Sdl.SetSurfaceColorMod(System.IntPtr,SharpSDL3.Structs.Color)
  id: SetSurfaceColorMod(System.IntPtr,SharpSDL3.Structs.Color)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetSurfaceColorMod(nint, Color)
  nameWithType: Sdl.SetSurfaceColorMod(nint, Color)
  fullName: SharpSDL3.Sdl.SetSurfaceColorMod(nint, SharpSDL3.Structs.Color)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetSurfaceColorMod
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 5603
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set an additional color value multiplied into blit operations.
  remarks: >-
    When this surface is blitted, during the blit operation each source color

    channel is modulated by the appropriate color value according to the

    following formula:

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetSurfaceColorMod(System.IntPtr%2cSystem.Byte%40%2cSystem.Byte%40%2cSystem.Byte%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetSurfaceAlphaMod(System.IntPtr%2cSystem.Byte)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetSurfaceColorMod(nint surface, Color color)
    parameters:
    - id: surface
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Surface" data-throw-if-not-resolved="false"></xref> structure to update.
    - id: color
      type: SharpSDL3.Structs.Color
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetSurfaceColorMod(surface As IntPtr, color As Color) As Boolean
  overload: SharpSDL3.Sdl.SetSurfaceColorMod*
  nameWithType.vb: Sdl.SetSurfaceColorMod(IntPtr, Color)
  fullName.vb: SharpSDL3.Sdl.SetSurfaceColorMod(System.IntPtr, SharpSDL3.Structs.Color)
  name.vb: SetSurfaceColorMod(IntPtr, Color)
- uid: SharpSDL3.Sdl.SetSurfaceColorspace(System.IntPtr,SharpSDL3.Enums.Colorspace)
  commentId: M:SharpSDL3.Sdl.SetSurfaceColorspace(System.IntPtr,SharpSDL3.Enums.Colorspace)
  id: SetSurfaceColorspace(System.IntPtr,SharpSDL3.Enums.Colorspace)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetSurfaceColorspace(nint, Colorspace)
  nameWithType: Sdl.SetSurfaceColorspace(nint, Colorspace)
  fullName: SharpSDL3.Sdl.SetSurfaceColorspace(nint, SharpSDL3.Enums.Colorspace)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetSurfaceColorspace
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 5628
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set the colorspace used by a surface.
  remarks: >-
    Setting the colorspace doesn't change the pixels, only how they are

    interpreted in color operations.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    GetSurfaceColorspace
  example: []
  syntax:
    content: public static bool SetSurfaceColorspace(nint surface, Colorspace colorspace)
    parameters:
    - id: surface
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Surface" data-throw-if-not-resolved="false"></xref> structure to update.
    - id: colorspace
      type: SharpSDL3.Enums.Colorspace
      description: an <xref href="SharpSDL3.Enums.Colorspace" data-throw-if-not-resolved="false"></xref> value describing the surface colorspace.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetSurfaceColorspace(surface As IntPtr, colorspace As Colorspace) As Boolean
  overload: SharpSDL3.Sdl.SetSurfaceColorspace*
  nameWithType.vb: Sdl.SetSurfaceColorspace(IntPtr, Colorspace)
  fullName.vb: SharpSDL3.Sdl.SetSurfaceColorspace(System.IntPtr, SharpSDL3.Enums.Colorspace)
  name.vb: SetSurfaceColorspace(IntPtr, Colorspace)
- uid: SharpSDL3.Sdl.SetSurfacePalette(System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.SetSurfacePalette(System.IntPtr,System.IntPtr)
  id: SetSurfacePalette(System.IntPtr,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetSurfacePalette(nint, nint)
  nameWithType: Sdl.SetSurfacePalette(nint, nint)
  fullName: SharpSDL3.Sdl.SetSurfacePalette(nint, nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetSurfacePalette
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 5653
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set the palette used by a surface.
  remarks: >-
    A single palette can be shared with many surfaces.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreatePalette(System.Int32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetSurfacePalette(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetSurfacePalette(nint surface, nint palette)
    parameters:
    - id: surface
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Surface" data-throw-if-not-resolved="false"></xref> structure to update.
    - id: palette
      type: System.IntPtr
      description: the SDL_Palette structure to use.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetSurfacePalette(surface As IntPtr, palette As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.SetSurfacePalette*
  nameWithType.vb: Sdl.SetSurfacePalette(IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.SetSurfacePalette(System.IntPtr, System.IntPtr)
  name.vb: SetSurfacePalette(IntPtr, IntPtr)
- uid: SharpSDL3.Sdl.SetSurfaceRLE(System.IntPtr,System.Boolean)
  commentId: M:SharpSDL3.Sdl.SetSurfaceRLE(System.IntPtr,System.Boolean)
  id: SetSurfaceRLE(System.IntPtr,System.Boolean)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetSurfaceRLE(nint, bool)
  nameWithType: Sdl.SetSurfaceRLE(nint, bool)
  fullName: SharpSDL3.Sdl.SetSurfaceRLE(nint, bool)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetSurfaceRLE
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 5684
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set the RLE acceleration hint for a surface.
  remarks: >-
    If RLE is enabled, color key and alpha blending blits are much faster, but

    the surface must be locked before directly accessing the pixels.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.BlitSurface(System.IntPtr%2cSystem.IntPtr%2cSystem.IntPtr%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.LockSurface(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.UnlockSurface(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetSurfaceRLE(nint surface, bool enabled)
    parameters:
    - id: surface
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Surface" data-throw-if-not-resolved="false"></xref> structure to optimize.
    - id: enabled
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> to enable RLE acceleration, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> to disable it.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetSurfaceRLE(surface As IntPtr, enabled As Boolean) As Boolean
  overload: SharpSDL3.Sdl.SetSurfaceRLE*
  nameWithType.vb: Sdl.SetSurfaceRLE(IntPtr, Boolean)
  fullName.vb: SharpSDL3.Sdl.SetSurfaceRLE(System.IntPtr, Boolean)
  name.vb: SetSurfaceRLE(IntPtr, Boolean)
- uid: SharpSDL3.Sdl.SetTextInputArea(System.IntPtr,SharpSDL3.Structs.Rect@,System.Int32)
  commentId: M:SharpSDL3.Sdl.SetTextInputArea(System.IntPtr,SharpSDL3.Structs.Rect@,System.Int32)
  id: SetTextInputArea(System.IntPtr,SharpSDL3.Structs.Rect@,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetTextInputArea(nint, ref Rect, int)
  nameWithType: Sdl.SetTextInputArea(nint, ref Rect, int)
  fullName: SharpSDL3.Sdl.SetTextInputArea(nint, ref SharpSDL3.Structs.Rect, int)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetTextInputArea
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 5711
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set the area used to type Unicode text input.
  remarks: >-
    Native input methods may place a window with word suggestions near the

    cursor, without covering the text being entered.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetTextInputArea(System.IntPtr%2cSharpSDL3.Structs.Rect%40%2cSystem.Int32%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.StartTextInput(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetTextInputArea(nint window, ref Rect rect, int cursor)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window for which to set the text input area.
    - id: rect
      type: SharpSDL3.Structs.Rect
      description: the <xref href="SharpSDL3.Structs.Rect" data-throw-if-not-resolved="false"></xref> representing the text input area, in window coordinates, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to clear it.
    - id: cursor
      type: System.Int32
      description: the offset of the current cursor location relative to rect-&gt;x, in window coordinates.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetTextInputArea(window As IntPtr, rect As Rect, cursor As Integer) As Boolean
  overload: SharpSDL3.Sdl.SetTextInputArea*
  nameWithType.vb: Sdl.SetTextInputArea(IntPtr, Rect, Integer)
  fullName.vb: SharpSDL3.Sdl.SetTextInputArea(System.IntPtr, SharpSDL3.Structs.Rect, Integer)
  name.vb: SetTextInputArea(IntPtr, Rect, Integer)
- uid: SharpSDL3.Sdl.SetTls(System.IntPtr,System.IntPtr,SharpSDL3.Delegates.SdlTlsDestructorCallback)
  commentId: M:SharpSDL3.Sdl.SetTls(System.IntPtr,System.IntPtr,SharpSDL3.Delegates.SdlTlsDestructorCallback)
  id: SetTls(System.IntPtr,System.IntPtr,SharpSDL3.Delegates.SdlTlsDestructorCallback)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetTls(nint, nint, SdlTlsDestructorCallback)
  nameWithType: Sdl.SetTls(nint, nint, Delegates.SdlTlsDestructorCallback)
  fullName: SharpSDL3.Sdl.SetTls(nint, nint, SharpSDL3.Delegates.SdlTlsDestructorCallback)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetTls
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 5738
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set the current thread's value associated with a thread local storage ID.
  remarks: >-
    If the thread local storage ID is not initialized (the value is 0), a new

    ID will be created in a thread-safe way, so all calls using a pointer to

    the same ID will refer to the same local storage.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetTls(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetTls(nint id, nint value, Delegates.SdlTlsDestructorCallback destructor)
    parameters:
    - id: id
      type: System.IntPtr
      description: a pointer to the thread local storage ID, may not be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    - id: value
      type: System.IntPtr
      description: the value to associate with the ID for the current thread.
    - id: destructor
      type: SharpSDL3.Delegates.SdlTlsDestructorCallback
      description: a function called when the thread exits, to free the value, may be discarded.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetTls(id As IntPtr, value As IntPtr, destructor As Delegates.SdlTlsDestructorCallback) As Boolean
  overload: SharpSDL3.Sdl.SetTls*
  nameWithType.vb: Sdl.SetTls(IntPtr, IntPtr, Delegates.SdlTlsDestructorCallback)
  fullName.vb: SharpSDL3.Sdl.SetTls(System.IntPtr, System.IntPtr, SharpSDL3.Delegates.SdlTlsDestructorCallback)
  name.vb: SetTls(IntPtr, IntPtr, SdlTlsDestructorCallback)
- uid: SharpSDL3.Sdl.SetWindowAlwaysOnTop(System.IntPtr,System.Boolean)
  commentId: M:SharpSDL3.Sdl.SetWindowAlwaysOnTop(System.IntPtr,System.Boolean)
  id: SetWindowAlwaysOnTop(System.IntPtr,System.Boolean)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetWindowAlwaysOnTop(nint, bool)
  nameWithType: Sdl.SetWindowAlwaysOnTop(nint, bool)
  fullName: SharpSDL3.Sdl.SetWindowAlwaysOnTop(nint, bool)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetWindowAlwaysOnTop
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 5764
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set the window to always be above the others.
  remarks: >-
    This will add or remove the window's

    SDL_WINDOW_ALWAYS_ON_TOP flag. This will

    bring the window to the front and keep the window above the rest.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetWindowFlags(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetWindowAlwaysOnTop(nint window, bool onTop)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window of which to change the always on top state.
    - id: onTop
      type: System.Boolean
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetWindowAlwaysOnTop(window As IntPtr, onTop As Boolean) As Boolean
  overload: SharpSDL3.Sdl.SetWindowAlwaysOnTop*
  nameWithType.vb: Sdl.SetWindowAlwaysOnTop(IntPtr, Boolean)
  fullName.vb: SharpSDL3.Sdl.SetWindowAlwaysOnTop(System.IntPtr, Boolean)
  name.vb: SetWindowAlwaysOnTop(IntPtr, Boolean)
- uid: SharpSDL3.Sdl.SetWindowAspectRatio(System.IntPtr,System.Single,System.Single)
  commentId: M:SharpSDL3.Sdl.SetWindowAspectRatio(System.IntPtr,System.Single,System.Single)
  id: SetWindowAspectRatio(System.IntPtr,System.Single,System.Single)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetWindowAspectRatio(nint, float, float)
  nameWithType: Sdl.SetWindowAspectRatio(nint, float, float)
  fullName: SharpSDL3.Sdl.SetWindowAspectRatio(nint, float, float)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetWindowAspectRatio
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 5792
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Request that the aspect ratio of a window's client area be set.
  remarks: >-
    The aspect ratio is the ratio of width divided by height, e.g. 2560x1600

    would be 1.6. Larger aspect ratios are wider and smaller aspect ratios are

    narrower.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetWindowAspectRatio(System.IntPtr%2cSystem.Single%40%2cSystem.Single%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SyncWindow(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetWindowAspectRatio(nint window, float minAspect, float maxAspect)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to change.
    - id: minAspect
      type: System.Single
    - id: maxAspect
      type: System.Single
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetWindowAspectRatio(window As IntPtr, minAspect As Single, maxAspect As Single) As Boolean
  overload: SharpSDL3.Sdl.SetWindowAspectRatio*
  nameWithType.vb: Sdl.SetWindowAspectRatio(IntPtr, Single, Single)
  fullName.vb: SharpSDL3.Sdl.SetWindowAspectRatio(System.IntPtr, Single, Single)
  name.vb: SetWindowAspectRatio(IntPtr, Single, Single)
- uid: SharpSDL3.Sdl.SetWindowBordered(System.IntPtr,System.Boolean)
  commentId: M:SharpSDL3.Sdl.SetWindowBordered(System.IntPtr,System.Boolean)
  id: SetWindowBordered(System.IntPtr,System.Boolean)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetWindowBordered(nint, bool)
  nameWithType: Sdl.SetWindowBordered(nint, bool)
  fullName: SharpSDL3.Sdl.SetWindowBordered(nint, bool)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetWindowBordered
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 5819
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set the border state of a window.
  remarks: >-
    This will add or remove the window's

    SDL_WINDOW_BORDERLESS flag and add or remove the

    border from the actual window. This is a no-op if the window's border

    already matches the requested state.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetWindowFlags(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetWindowBordered(nint window, bool bordered)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window of which to change the border state.
    - id: bordered
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> to remove border, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> to add border.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetWindowBordered(window As IntPtr, bordered As Boolean) As Boolean
  overload: SharpSDL3.Sdl.SetWindowBordered*
  nameWithType.vb: Sdl.SetWindowBordered(IntPtr, Boolean)
  fullName.vb: SharpSDL3.Sdl.SetWindowBordered(System.IntPtr, Boolean)
  name.vb: SetWindowBordered(IntPtr, Boolean)
- uid: SharpSDL3.Sdl.SetWindowFocusable(System.IntPtr,System.Boolean)
  commentId: M:SharpSDL3.Sdl.SetWindowFocusable(System.IntPtr,System.Boolean)
  id: SetWindowFocusable(System.IntPtr,System.Boolean)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetWindowFocusable(nint, bool)
  nameWithType: Sdl.SetWindowFocusable(nint, bool)
  fullName: SharpSDL3.Sdl.SetWindowFocusable(nint, bool)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetWindowFocusable
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 5841
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set whether the window may have input focus.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool SetWindowFocusable(nint window, bool focusable)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to set focusable state.
    - id: focusable
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> to allow input focus, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> to not allow input focus.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetWindowFocusable(window As IntPtr, focusable As Boolean) As Boolean
  overload: SharpSDL3.Sdl.SetWindowFocusable*
  nameWithType.vb: Sdl.SetWindowFocusable(IntPtr, Boolean)
  fullName.vb: SharpSDL3.Sdl.SetWindowFocusable(System.IntPtr, Boolean)
  name.vb: SetWindowFocusable(IntPtr, Boolean)
- uid: SharpSDL3.Sdl.SetWindowFullscreen(System.IntPtr,System.Boolean)
  commentId: M:SharpSDL3.Sdl.SetWindowFullscreen(System.IntPtr,System.Boolean)
  id: SetWindowFullscreen(System.IntPtr,System.Boolean)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetWindowFullscreen(nint, bool)
  nameWithType: Sdl.SetWindowFullscreen(nint, bool)
  fullName: SharpSDL3.Sdl.SetWindowFullscreen(nint, bool)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetWindowFullscreen
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 5870
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Request that the window's fullscreen state be changed.
  remarks: >-
    By default a window in fullscreen state uses borderless fullscreen desktop

    mode, but a specific exclusive display mode can be set using

    SDL_SetWindowFullscreenMode().

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetWindowFullscreenMode(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetWindowFullscreenMode(System.IntPtr%2cSharpSDL3.Structs.DisplayMode%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SyncWindow(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    WINDOW_FULLSCREEN
  example: []
  syntax:
    content: public static bool SetWindowFullscreen(nint window, bool fullscreen)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to change.
    - id: fullscreen
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> for fullscreen mode, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> for windowed mode.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetWindowFullscreen(window As IntPtr, fullscreen As Boolean) As Boolean
  overload: SharpSDL3.Sdl.SetWindowFullscreen*
  nameWithType.vb: Sdl.SetWindowFullscreen(IntPtr, Boolean)
  fullName.vb: SharpSDL3.Sdl.SetWindowFullscreen(System.IntPtr, Boolean)
  name.vb: SetWindowFullscreen(IntPtr, Boolean)
- uid: SharpSDL3.Sdl.SetWindowFullscreenMode(System.IntPtr,SharpSDL3.Structs.DisplayMode@)
  commentId: M:SharpSDL3.Sdl.SetWindowFullscreenMode(System.IntPtr,SharpSDL3.Structs.DisplayMode@)
  id: SetWindowFullscreenMode(System.IntPtr,SharpSDL3.Structs.DisplayMode@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetWindowFullscreenMode(nint, ref DisplayMode)
  nameWithType: Sdl.SetWindowFullscreenMode(nint, ref DisplayMode)
  fullName: SharpSDL3.Sdl.SetWindowFullscreenMode(nint, ref SharpSDL3.Structs.DisplayMode)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetWindowFullscreenMode
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 5898
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set the display mode to use when a window is visible and fullscreen.
  remarks: >-
    This only affects the display mode used when the window is fullscreen. To

    change the window size when the window is not fullscreen, use

    SDL_SetWindowSize().

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetWindowFullscreenMode(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetWindowFullscreen(System.IntPtr%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SyncWindow(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetWindowFullscreenMode(nint window, ref DisplayMode mode)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to affect.
    - id: mode
      type: SharpSDL3.Structs.DisplayMode
      description: a pointer to the display mode to use, which can be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for borderless fullscreen desktop mode, or one of the fullscreen modes returned by SDL_GetFullscreenDisplayModes() to set an exclusive fullscreen mode.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetWindowFullscreenMode(window As IntPtr, mode As DisplayMode) As Boolean
  overload: SharpSDL3.Sdl.SetWindowFullscreenMode*
  nameWithType.vb: Sdl.SetWindowFullscreenMode(IntPtr, DisplayMode)
  fullName.vb: SharpSDL3.Sdl.SetWindowFullscreenMode(System.IntPtr, SharpSDL3.Structs.DisplayMode)
  name.vb: SetWindowFullscreenMode(IntPtr, DisplayMode)
- uid: SharpSDL3.Sdl.SetWindowHitTest(System.IntPtr,SharpSDL3.Delegates.SdlHitTest,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.SetWindowHitTest(System.IntPtr,SharpSDL3.Delegates.SdlHitTest,System.IntPtr)
  id: SetWindowHitTest(System.IntPtr,SharpSDL3.Delegates.SdlHitTest,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetWindowHitTest(nint, SdlHitTest, nint)
  nameWithType: Sdl.SetWindowHitTest(nint, Delegates.SdlHitTest, nint)
  fullName: SharpSDL3.Sdl.SetWindowHitTest(nint, SharpSDL3.Delegates.SdlHitTest, nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetWindowHitTest
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 5926
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Provide a callback that decides if a window region has special properties.
  remarks: >-
    Normally windows are dragged and resized by decorations provided by the

    system window manager (a title bar, borders, etc), but for some apps, it

    makes sense to drag them from somewhere else inside the window itself; for

    example, one might have a borderless window that wants to be draggable from

    any part, or simulate its own title bar, etc.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool SetWindowHitTest(nint window, Delegates.SdlHitTest callback, nint callbackData)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to set hit-testing on.
    - id: callback
      type: SharpSDL3.Delegates.SdlHitTest
      description: the function to call when doing a hit-test.
    - id: callbackData
      type: System.IntPtr
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetWindowHitTest(window As IntPtr, callback As Delegates.SdlHitTest, callbackData As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.SetWindowHitTest*
  nameWithType.vb: Sdl.SetWindowHitTest(IntPtr, Delegates.SdlHitTest, IntPtr)
  fullName.vb: SharpSDL3.Sdl.SetWindowHitTest(System.IntPtr, SharpSDL3.Delegates.SdlHitTest, System.IntPtr)
  name.vb: SetWindowHitTest(IntPtr, SdlHitTest, IntPtr)
- uid: SharpSDL3.Sdl.SetWindowIcon(System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.SetWindowIcon(System.IntPtr,System.IntPtr)
  id: SetWindowIcon(System.IntPtr,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetWindowIcon(nint, nint)
  nameWithType: Sdl.SetWindowIcon(nint, nint)
  fullName: SharpSDL3.Sdl.SetWindowIcon(nint, nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetWindowIcon
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 5957
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set the icon for a window.
  remarks: >-
    If this function is passed a surface with alternate representations, the

    surface will be interpreted as the content to be used for 100% display

    scale, and the alternate representations will be used for high DPI

    situations. For example, if the original surface is 32x32, then on a 2x

    macOS display or 200% display scale on Windows, a 64x64 version of the

    image will be used, if available. If a matching version of the image isn't

    available, the closest larger size image will be downscaled to the

    appropriate size and be used instead, if available. Otherwise, the closest

    smaller image will be upscaled and be used instead.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool SetWindowIcon(nint window, nint icon)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to change.
    - id: icon
      type: System.IntPtr
      description: an SDL_Surface structure containing the icon for the window.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetWindowIcon(window As IntPtr, icon As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.SetWindowIcon*
  nameWithType.vb: Sdl.SetWindowIcon(IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.SetWindowIcon(System.IntPtr, System.IntPtr)
  name.vb: SetWindowIcon(IntPtr, IntPtr)
- uid: SharpSDL3.Sdl.SetWindowKeyboardGrab(System.IntPtr,System.Boolean)
  commentId: M:SharpSDL3.Sdl.SetWindowKeyboardGrab(System.IntPtr,System.Boolean)
  id: SetWindowKeyboardGrab(System.IntPtr,System.Boolean)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetWindowKeyboardGrab(nint, bool)
  nameWithType: Sdl.SetWindowKeyboardGrab(nint, bool)
  fullName: SharpSDL3.Sdl.SetWindowKeyboardGrab(nint, bool)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetWindowKeyboardGrab
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 5989
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set a window's keyboard grab mode.
  remarks: >-
    Keyboard grab enables capture of system keyboard shortcuts like Alt+Tab or

    the Meta/Super key. Note that not all system keyboard shortcuts can be

    captured by applications (one example is Ctrl+Alt+Del on Windows).

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetWindowKeyboardGrab(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetWindowMouseGrab(System.IntPtr%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetWindowKeyboardGrab(nint window, bool grabbed)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window for which the keyboard grab mode should be set.
    - id: grabbed
      type: System.Boolean
      description: this is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> to grab keyboard, and <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> to release.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetWindowKeyboardGrab(window As IntPtr, grabbed As Boolean) As Boolean
  overload: SharpSDL3.Sdl.SetWindowKeyboardGrab*
  nameWithType.vb: Sdl.SetWindowKeyboardGrab(IntPtr, Boolean)
  fullName.vb: SharpSDL3.Sdl.SetWindowKeyboardGrab(System.IntPtr, Boolean)
  name.vb: SetWindowKeyboardGrab(IntPtr, Boolean)
- uid: SharpSDL3.Sdl.SetWindowMaximumSize(System.IntPtr,System.Int32,System.Int32)
  commentId: M:SharpSDL3.Sdl.SetWindowMaximumSize(System.IntPtr,System.Int32,System.Int32)
  id: SetWindowMaximumSize(System.IntPtr,System.Int32,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetWindowMaximumSize(nint, int, int)
  nameWithType: Sdl.SetWindowMaximumSize(nint, int, int)
  fullName: SharpSDL3.Sdl.SetWindowMaximumSize(nint, int, int)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetWindowMaximumSize
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 6014
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set the maximum size of a window's client area.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetWindowMaximumSize(System.IntPtr%2cSystem.Int32%40%2cSystem.Int32%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetWindowMinimumSize(System.IntPtr%2cSystem.Int32%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetWindowMaximumSize(nint window, int maxW, int maxH)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to change.
    - id: maxW
      type: System.Int32
    - id: maxH
      type: System.Int32
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetWindowMaximumSize(window As IntPtr, maxW As Integer, maxH As Integer) As Boolean
  overload: SharpSDL3.Sdl.SetWindowMaximumSize*
  nameWithType.vb: Sdl.SetWindowMaximumSize(IntPtr, Integer, Integer)
  fullName.vb: SharpSDL3.Sdl.SetWindowMaximumSize(System.IntPtr, Integer, Integer)
  name.vb: SetWindowMaximumSize(IntPtr, Integer, Integer)
- uid: SharpSDL3.Sdl.SetWindowMinimumSize(System.IntPtr,System.Int32,System.Int32)
  commentId: M:SharpSDL3.Sdl.SetWindowMinimumSize(System.IntPtr,System.Int32,System.Int32)
  id: SetWindowMinimumSize(System.IntPtr,System.Int32,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetWindowMinimumSize(nint, int, int)
  nameWithType: Sdl.SetWindowMinimumSize(nint, int, int)
  fullName: SharpSDL3.Sdl.SetWindowMinimumSize(nint, int, int)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetWindowMinimumSize
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 6039
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set the minimum size of a window's client area.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetWindowMinimumSize(System.IntPtr%2cSystem.Int32%40%2cSystem.Int32%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetWindowMaximumSize(System.IntPtr%2cSystem.Int32%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetWindowMinimumSize(nint window, int minW, int minH)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to change.
    - id: minW
      type: System.Int32
    - id: minH
      type: System.Int32
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetWindowMinimumSize(window As IntPtr, minW As Integer, minH As Integer) As Boolean
  overload: SharpSDL3.Sdl.SetWindowMinimumSize*
  nameWithType.vb: Sdl.SetWindowMinimumSize(IntPtr, Integer, Integer)
  fullName.vb: SharpSDL3.Sdl.SetWindowMinimumSize(System.IntPtr, Integer, Integer)
  name.vb: SetWindowMinimumSize(IntPtr, Integer, Integer)
- uid: SharpSDL3.Sdl.SetWindowModal(System.IntPtr,System.Boolean)
  commentId: M:SharpSDL3.Sdl.SetWindowModal(System.IntPtr,System.Boolean)
  id: SetWindowModal(System.IntPtr,System.Boolean)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetWindowModal(nint, bool)
  nameWithType: Sdl.SetWindowModal(nint, bool)
  fullName: SharpSDL3.Sdl.SetWindowModal(nint, bool)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetWindowModal
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 6065
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Toggle the state of the window as modal.
  remarks: >-
    To enable modal status on a window, the window must currently be the child

    window of a parent, or toggling modal status on will fail.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetWindowParent(System.IntPtr%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>

    WINDOW_MODAL
  example: []
  syntax:
    content: public static bool SetWindowModal(nint window, bool modal)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window on which to set the modal state.
    - id: modal
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> to toggle modal status on, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> to toggle it off.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetWindowModal(window As IntPtr, modal As Boolean) As Boolean
  overload: SharpSDL3.Sdl.SetWindowModal*
  nameWithType.vb: Sdl.SetWindowModal(IntPtr, Boolean)
  fullName.vb: SharpSDL3.Sdl.SetWindowModal(System.IntPtr, Boolean)
  name.vb: SetWindowModal(IntPtr, Boolean)
- uid: SharpSDL3.Sdl.SetWindowMouseGrab(System.IntPtr,System.Boolean)
  commentId: M:SharpSDL3.Sdl.SetWindowMouseGrab(System.IntPtr,System.Boolean)
  id: SetWindowMouseGrab(System.IntPtr,System.Boolean)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetWindowMouseGrab(nint, bool)
  nameWithType: Sdl.SetWindowMouseGrab(nint, bool)
  fullName: SharpSDL3.Sdl.SetWindowMouseGrab(nint, bool)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetWindowMouseGrab
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 6091
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set a window's mouse grab mode.
  remarks: >-
    Mouse grab confines the mouse cursor to the window.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetWindowMouseRect(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetWindowMouseRect(System.IntPtr%2cSharpSDL3.Structs.Rect%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetWindowKeyboardGrab(System.IntPtr%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetWindowMouseGrab(nint window, bool grabbed)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window for which the mouse grab mode should be set.
    - id: grabbed
      type: System.Boolean
      description: this is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> to grab mouse, and <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> to release.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetWindowMouseGrab(window As IntPtr, grabbed As Boolean) As Boolean
  overload: SharpSDL3.Sdl.SetWindowMouseGrab*
  nameWithType.vb: Sdl.SetWindowMouseGrab(IntPtr, Boolean)
  fullName.vb: SharpSDL3.Sdl.SetWindowMouseGrab(System.IntPtr, Boolean)
  name.vb: SetWindowMouseGrab(IntPtr, Boolean)
- uid: SharpSDL3.Sdl.SetWindowMouseRect(System.IntPtr,SharpSDL3.Structs.Rect@)
  commentId: M:SharpSDL3.Sdl.SetWindowMouseRect(System.IntPtr,SharpSDL3.Structs.Rect@)
  id: SetWindowMouseRect(System.IntPtr,SharpSDL3.Structs.Rect@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetWindowMouseRect(nint, ref Rect)
  nameWithType: Sdl.SetWindowMouseRect(nint, ref Rect)
  fullName: SharpSDL3.Sdl.SetWindowMouseRect(nint, ref SharpSDL3.Structs.Rect)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetWindowMouseRect
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 6118
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Confines the cursor to the specified area of a window.
  remarks: >-
    Note that this does NOT grab the cursor, it only defines the area a cursor

    is restricted to when the window has mouse focus.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetWindowMouseRect(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetWindowMouseGrab(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetWindowMouseGrab(System.IntPtr%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetWindowMouseRect(nint window, ref Rect rect)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window that will be associated with the barrier.
    - id: rect
      type: SharpSDL3.Structs.Rect
      description: a rectangle area in window-relative coordinates. If <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> the barrier for the specified window will be destroyed.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetWindowMouseRect(window As IntPtr, rect As Rect) As Boolean
  overload: SharpSDL3.Sdl.SetWindowMouseRect*
  nameWithType.vb: Sdl.SetWindowMouseRect(IntPtr, Rect)
  fullName.vb: SharpSDL3.Sdl.SetWindowMouseRect(System.IntPtr, SharpSDL3.Structs.Rect)
  name.vb: SetWindowMouseRect(IntPtr, Rect)
- uid: SharpSDL3.Sdl.SetWindowOpacity(System.IntPtr,System.Single)
  commentId: M:SharpSDL3.Sdl.SetWindowOpacity(System.IntPtr,System.Single)
  id: SetWindowOpacity(System.IntPtr,System.Single)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetWindowOpacity(nint, float)
  nameWithType: Sdl.SetWindowOpacity(nint, float)
  fullName: SharpSDL3.Sdl.SetWindowOpacity(nint, float)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetWindowOpacity
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 6143
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set the opacity for a window.
  remarks: >-
    The parameter opacity will be clamped internally between 0.0f

    (transparent) and 1.0f (opaque).

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetWindowOpacity(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetWindowOpacity(nint window, float opacity)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window which will be made transparent or opaque.
    - id: opacity
      type: System.Single
      description: the opacity value (0.0f - transparent, 1.0f - opaque).
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetWindowOpacity(window As IntPtr, opacity As Single) As Boolean
  overload: SharpSDL3.Sdl.SetWindowOpacity*
  nameWithType.vb: Sdl.SetWindowOpacity(IntPtr, Single)
  fullName.vb: SharpSDL3.Sdl.SetWindowOpacity(System.IntPtr, Single)
  name.vb: SetWindowOpacity(IntPtr, Single)
- uid: SharpSDL3.Sdl.SetWindowParent(System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.SetWindowParent(System.IntPtr,System.IntPtr)
  id: SetWindowParent(System.IntPtr,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetWindowParent(nint, nint)
  nameWithType: Sdl.SetWindowParent(nint, nint)
  fullName: SharpSDL3.Sdl.SetWindowParent(nint, nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetWindowParent
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 6169
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set the window as a child of a parent window.
  remarks: >-
    If the window is already the child of an existing window, it will be

    reparented to the new owner. Setting the parent window to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> unparents

    the window and removes child window status.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetWindowModal(System.IntPtr%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetWindowParent(nint window, nint parent)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window that should become the child of a parent.
    - id: parent
      type: System.IntPtr
      description: the new parent window for the child window.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetWindowParent(window As IntPtr, parent As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.SetWindowParent*
  nameWithType.vb: Sdl.SetWindowParent(IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.SetWindowParent(System.IntPtr, System.IntPtr)
  name.vb: SetWindowParent(IntPtr, IntPtr)
- uid: SharpSDL3.Sdl.SetWindowPosition(System.IntPtr,System.Int32,System.Int32)
  commentId: M:SharpSDL3.Sdl.SetWindowPosition(System.IntPtr,System.Int32,System.Int32)
  id: SetWindowPosition(System.IntPtr,System.Int32,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetWindowPosition(nint, int, int)
  nameWithType: Sdl.SetWindowPosition(nint, int, int)
  fullName: SharpSDL3.Sdl.SetWindowPosition(nint, int, int)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetWindowPosition
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 6200
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Request that the window's position be set.
  remarks: >-
    If the window is in an exclusive fullscreen or maximized state, this

    request has no effect.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetWindowPosition(System.IntPtr%2cSystem.Int32%40%2cSystem.Int32%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SyncWindow(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetWindowPosition(nint window, int x, int y)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to reposition.
    - id: x
      type: System.Int32
      description: the x coordinate of the window, or SDL_WINDOWPOS_CENTERED or SDL_WINDOWPOS_UNDEFINED.
    - id: y
      type: System.Int32
      description: the y coordinate of the window, or SDL_WINDOWPOS_CENTERED or SDL_WINDOWPOS_UNDEFINED.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetWindowPosition(window As IntPtr, x As Integer, y As Integer) As Boolean
  overload: SharpSDL3.Sdl.SetWindowPosition*
  nameWithType.vb: Sdl.SetWindowPosition(IntPtr, Integer, Integer)
  fullName.vb: SharpSDL3.Sdl.SetWindowPosition(System.IntPtr, Integer, Integer)
  name.vb: SetWindowPosition(IntPtr, Integer, Integer)
- uid: SharpSDL3.Sdl.SetWindowPosition(System.IntPtr,SharpSDL3.Structs.Point)
  commentId: M:SharpSDL3.Sdl.SetWindowPosition(System.IntPtr,SharpSDL3.Structs.Point)
  id: SetWindowPosition(System.IntPtr,SharpSDL3.Structs.Point)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetWindowPosition(nint, Point)
  nameWithType: Sdl.SetWindowPosition(nint, Point)
  fullName: SharpSDL3.Sdl.SetWindowPosition(nint, SharpSDL3.Structs.Point)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetWindowPosition
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 6227
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Request that the window's position be set.
  remarks: >-
    If the window is in an exclusive fullscreen or maximized state, this

    request has no effect.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetWindowPosition(System.IntPtr%2cSystem.Int32%40%2cSystem.Int32%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SyncWindow(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetWindowPosition(nint window, Point position)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to reposition.
    - id: position
      type: SharpSDL3.Structs.Point
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetWindowPosition(window As IntPtr, position As Point) As Boolean
  overload: SharpSDL3.Sdl.SetWindowPosition*
  nameWithType.vb: Sdl.SetWindowPosition(IntPtr, Point)
  fullName.vb: SharpSDL3.Sdl.SetWindowPosition(System.IntPtr, SharpSDL3.Structs.Point)
  name.vb: SetWindowPosition(IntPtr, Point)
- uid: SharpSDL3.Sdl.SetWindowResizable(System.IntPtr,System.Boolean)
  commentId: M:SharpSDL3.Sdl.SetWindowResizable(System.IntPtr,System.Boolean)
  id: SetWindowResizable(System.IntPtr,System.Boolean)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetWindowResizable(nint, bool)
  nameWithType: Sdl.SetWindowResizable(nint, bool)
  fullName: SharpSDL3.Sdl.SetWindowResizable(nint, bool)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetWindowResizable
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 6254
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set the user-resizable state of a window.
  remarks: >-
    This will add or remove the window's

    SDL_WINDOW_RESIZABLE flag and allow/disallow user

    resizing of the window. This is a no-op if the window's resizable state

    already matches the requested state.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetWindowFlags(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetWindowResizable(nint window, bool resizable)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window of which to change the resizable state.
    - id: resizable
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> to allow resizing, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> to disallow.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetWindowResizable(window As IntPtr, resizable As Boolean) As Boolean
  overload: SharpSDL3.Sdl.SetWindowResizable*
  nameWithType.vb: Sdl.SetWindowResizable(IntPtr, Boolean)
  fullName.vb: SharpSDL3.Sdl.SetWindowResizable(System.IntPtr, Boolean)
  name.vb: SetWindowResizable(IntPtr, Boolean)
- uid: SharpSDL3.Sdl.SetWindowShape(System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.SetWindowShape(System.IntPtr,System.IntPtr)
  id: SetWindowShape(System.IntPtr,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetWindowShape(nint, nint)
  nameWithType: Sdl.SetWindowShape(nint, nint)
  fullName: SharpSDL3.Sdl.SetWindowShape(nint, nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetWindowShape
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 6281
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set the shape of a transparent window.
  remarks: >-
    This sets the alpha channel of a transparent window and any fully

    transparent areas are also transparent to mouse clicks. If you are using

    something besides the SDL render API, then you are responsible for drawing

    the alpha channel of the window to match the shape alpha channel to get

    consistent cross-platform results.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool SetWindowShape(nint window, nint shape)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window.
    - id: shape
      type: System.IntPtr
      description: the surface representing the shape of the window, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to remove any current shape.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetWindowShape(window As IntPtr, shape As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.SetWindowShape*
  nameWithType.vb: Sdl.SetWindowShape(IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.SetWindowShape(System.IntPtr, System.IntPtr)
  name.vb: SetWindowShape(IntPtr, IntPtr)
- uid: SharpSDL3.Sdl.SetWindowSize(System.IntPtr,System.Int32,System.Int32)
  commentId: M:SharpSDL3.Sdl.SetWindowSize(System.IntPtr,System.Int32,System.Int32)
  id: SetWindowSize(System.IntPtr,System.Int32,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetWindowSize(nint, int, int)
  nameWithType: Sdl.SetWindowSize(nint, int, int)
  fullName: SharpSDL3.Sdl.SetWindowSize(nint, int, int)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetWindowSize
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 6313
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Request that the size of a window's client area be set.
  remarks: >-
    If the window is in a fullscreen or maximized state, this request has no

    effect.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetWindowSize(System.IntPtr%2cSystem.Int32%40%2cSystem.Int32%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetWindowFullscreenMode(System.IntPtr%2cSharpSDL3.Structs.DisplayMode%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SyncWindow(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetWindowSize(nint window, int w, int h)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to change.
    - id: w
      type: System.Int32
      description: the width of the window, must be &gt; 0.
    - id: h
      type: System.Int32
      description: the height of the window, must be &gt; 0.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetWindowSize(window As IntPtr, w As Integer, h As Integer) As Boolean
  overload: SharpSDL3.Sdl.SetWindowSize*
  nameWithType.vb: Sdl.SetWindowSize(IntPtr, Integer, Integer)
  fullName.vb: SharpSDL3.Sdl.SetWindowSize(System.IntPtr, Integer, Integer)
  name.vb: SetWindowSize(IntPtr, Integer, Integer)
- uid: SharpSDL3.Sdl.SetWindowSize(System.IntPtr,SharpSDL3.Structs.Rect)
  commentId: M:SharpSDL3.Sdl.SetWindowSize(System.IntPtr,SharpSDL3.Structs.Rect)
  id: SetWindowSize(System.IntPtr,SharpSDL3.Structs.Rect)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetWindowSize(nint, Rect)
  nameWithType: Sdl.SetWindowSize(nint, Rect)
  fullName: SharpSDL3.Sdl.SetWindowSize(nint, SharpSDL3.Structs.Rect)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetWindowSize
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 6341
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Request that the size of a window's client area be set.
  remarks: >-
    If the window is in a fullscreen or maximized state, this request has no

    effect.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetWindowSize(System.IntPtr%2cSystem.Int32%40%2cSystem.Int32%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetWindowFullscreenMode(System.IntPtr%2cSharpSDL3.Structs.DisplayMode%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SyncWindow(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetWindowSize(nint window, Rect rect)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to change.
    - id: rect
      type: SharpSDL3.Structs.Rect
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetWindowSize(window As IntPtr, rect As Rect) As Boolean
  overload: SharpSDL3.Sdl.SetWindowSize*
  nameWithType.vb: Sdl.SetWindowSize(IntPtr, Rect)
  fullName.vb: SharpSDL3.Sdl.SetWindowSize(System.IntPtr, SharpSDL3.Structs.Rect)
  name.vb: SetWindowSize(IntPtr, Rect)
- uid: SharpSDL3.Sdl.SetWindowSurfaceVSync(System.IntPtr,System.Int32)
  commentId: M:SharpSDL3.Sdl.SetWindowSurfaceVSync(System.IntPtr,System.Int32)
  id: SetWindowSurfaceVSync(System.IntPtr,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetWindowSurfaceVSync(nint, int)
  nameWithType: Sdl.SetWindowSurfaceVSync(nint, int)
  fullName: SharpSDL3.Sdl.SetWindowSurfaceVSync(nint, int)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetWindowSurfaceVSync
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 6366
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Toggle VSync for the window surface.
  remarks: >-
    When a window surface is created, vsync defaults to

    SDL_WINDOW_SURFACE_VSYNC_DISABLED.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetWindowSurfaceVSync(System.IntPtr%2cSystem.Int32%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetWindowSurfaceVSync(nint window, int vsync)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window.
    - id: vsync
      type: System.Int32
      description: the vertical refresh sync interval.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetWindowSurfaceVSync(window As IntPtr, vsync As Integer) As Boolean
  overload: SharpSDL3.Sdl.SetWindowSurfaceVSync*
  nameWithType.vb: Sdl.SetWindowSurfaceVSync(IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.SetWindowSurfaceVSync(System.IntPtr, Integer)
  name.vb: SetWindowSurfaceVSync(IntPtr, Integer)
- uid: SharpSDL3.Sdl.SetWindowTitle(System.IntPtr,System.String)
  commentId: M:SharpSDL3.Sdl.SetWindowTitle(System.IntPtr,System.String)
  id: SetWindowTitle(System.IntPtr,System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetWindowTitle(nint, string)
  nameWithType: Sdl.SetWindowTitle(nint, string)
  fullName: SharpSDL3.Sdl.SetWindowTitle(nint, string)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetWindowTitle
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 6390
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set the title of a window.
  remarks: >-
    This string is expected to be in UTF-8 encoding.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetWindowTitle(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetWindowTitle(nint window, string title)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to change.
    - id: title
      type: System.String
      description: the desired window title in UTF-8 format.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetWindowTitle(window As IntPtr, title As String) As Boolean
  overload: SharpSDL3.Sdl.SetWindowTitle*
  nameWithType.vb: Sdl.SetWindowTitle(IntPtr, String)
  fullName.vb: SharpSDL3.Sdl.SetWindowTitle(System.IntPtr, String)
  name.vb: SetWindowTitle(IntPtr, String)
- uid: SharpSDL3.Sdl.ShowWindow(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.ShowWindow(System.IntPtr)
  id: ShowWindow(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ShowWindow(nint)
  nameWithType: Sdl.ShowWindow(nint)
  fullName: SharpSDL3.Sdl.ShowWindow(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ShowWindow
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 6413
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Show a window.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.HideWindow(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.RaiseWindow(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool ShowWindow(nint window)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to show.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function ShowWindow(window As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.ShowWindow*
  nameWithType.vb: Sdl.ShowWindow(IntPtr)
  fullName.vb: SharpSDL3.Sdl.ShowWindow(System.IntPtr)
  name.vb: ShowWindow(IntPtr)
- uid: SharpSDL3.Sdl.ShowWindowSystemMenu(System.IntPtr,System.Int32,System.Int32)
  commentId: M:SharpSDL3.Sdl.ShowWindowSystemMenu(System.IntPtr,System.Int32,System.Int32)
  id: ShowWindowSystemMenu(System.IntPtr,System.Int32,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ShowWindowSystemMenu(nint, int, int)
  nameWithType: Sdl.ShowWindowSystemMenu(nint, int, int)
  fullName: SharpSDL3.Sdl.ShowWindowSystemMenu(nint, int, int)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ShowWindowSystemMenu
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 6440
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Display the system-level window menu.
  remarks: >-
    This default window menu is provided by the system and on some platforms

    provides functionality for setting or changing privileged state on the

    window, such as moving it between workspaces or displays, or toggling the

    always-on-top property.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool ShowWindowSystemMenu(nint window, int x, int y)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window for which the menu will be displayed.
    - id: x
      type: System.Int32
      description: the x coordinate of the menu, relative to the origin (top-left) of the client area.
    - id: y
      type: System.Int32
      description: the y coordinate of the menu, relative to the origin (top-left) of the client area.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function ShowWindowSystemMenu(window As IntPtr, x As Integer, y As Integer) As Boolean
  overload: SharpSDL3.Sdl.ShowWindowSystemMenu*
  nameWithType.vb: Sdl.ShowWindowSystemMenu(IntPtr, Integer, Integer)
  fullName.vb: SharpSDL3.Sdl.ShowWindowSystemMenu(System.IntPtr, Integer, Integer)
  name.vb: ShowWindowSystemMenu(IntPtr, Integer, Integer)
- uid: SharpSDL3.Sdl.ShowWindowSystemMenu(System.IntPtr,SharpSDL3.Structs.Point)
  commentId: M:SharpSDL3.Sdl.ShowWindowSystemMenu(System.IntPtr,SharpSDL3.Structs.Point)
  id: ShowWindowSystemMenu(System.IntPtr,SharpSDL3.Structs.Point)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ShowWindowSystemMenu(nint, Point)
  nameWithType: Sdl.ShowWindowSystemMenu(nint, Point)
  fullName: SharpSDL3.Sdl.ShowWindowSystemMenu(nint, SharpSDL3.Structs.Point)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ShowWindowSystemMenu
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 6467
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Display the system-level window menu.
  remarks: >-
    This default window menu is provided by the system and on some platforms

    provides functionality for setting or changing privileged state on the

    window, such as moving it between workspaces or displays, or toggling the

    always-on-top property.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool ShowWindowSystemMenu(nint window, Point position)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window for which the menu will be displayed.
    - id: position
      type: SharpSDL3.Structs.Point
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function ShowWindowSystemMenu(window As IntPtr, position As Point) As Boolean
  overload: SharpSDL3.Sdl.ShowWindowSystemMenu*
  nameWithType.vb: Sdl.ShowWindowSystemMenu(IntPtr, Point)
  fullName.vb: SharpSDL3.Sdl.ShowWindowSystemMenu(System.IntPtr, SharpSDL3.Structs.Point)
  name.vb: ShowWindowSystemMenu(IntPtr, Point)
- uid: SharpSDL3.Sdl.SizeOf``1
  commentId: M:SharpSDL3.Sdl.SizeOf``1
  id: SizeOf``1
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SizeOf<T>()
  nameWithType: Sdl.SizeOf<T>()
  fullName: SharpSDL3.Sdl.SizeOf<T>()
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SizeOf
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 6475
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: 'public static nuint SizeOf<T>() where T : unmanaged'
    typeParameters:
    - id: T
    return:
      type: System.UIntPtr
    content.vb: Public Shared Function SizeOf(Of T As Structure)() As UIntPtr
  overload: SharpSDL3.Sdl.SizeOf*
  nameWithType.vb: Sdl.SizeOf(Of T)()
  fullName.vb: SharpSDL3.Sdl.SizeOf(Of T)()
  name.vb: SizeOf(Of T)()
- uid: SharpSDL3.Sdl.StartTextInput(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.StartTextInput(System.IntPtr)
  id: StartTextInput(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: StartTextInput(nint)
  nameWithType: Sdl.StartTextInput(nint)
  fullName: SharpSDL3.Sdl.StartTextInput(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: StartTextInput
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 6501
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Start accepting Unicode text input events in a window.
  remarks: >-
    This function will enable text input

    (SDL_EVENT_TEXT_INPUT and

    SDL_EVENT_TEXT_EDITING events) in the specified

    window. Please use this function paired with

    SDL_StopTextInput().

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetTextInputArea(System.IntPtr%2cSharpSDL3.Structs.Rect%40%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.StartTextInputWithProperties(System.IntPtr%2cSystem.UInt32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.StopTextInput(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.TextInputActive(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool StartTextInput(nint window)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to enable text input.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function StartTextInput(window As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.StartTextInput*
  nameWithType.vb: Sdl.StartTextInput(IntPtr)
  fullName.vb: SharpSDL3.Sdl.StartTextInput(System.IntPtr)
  name.vb: StartTextInput(IntPtr)
- uid: SharpSDL3.Sdl.StartTextInputWithProperties(System.IntPtr,System.UInt32)
  commentId: M:SharpSDL3.Sdl.StartTextInputWithProperties(System.IntPtr,System.UInt32)
  id: StartTextInputWithProperties(System.IntPtr,System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: StartTextInputWithProperties(nint, uint)
  nameWithType: Sdl.StartTextInputWithProperties(nint, uint)
  fullName: SharpSDL3.Sdl.StartTextInputWithProperties(nint, uint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: StartTextInputWithProperties
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 6532
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Start accepting Unicode text input events in a window, with properties describing the input.
  remarks: >-
    This function will enable text input

    (SDL_EVENT_TEXT_INPUT and

    SDL_EVENT_TEXT_EDITING events) in the specified

    window. Please use this function paired with

    SDL_StopTextInput().

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetTextInputArea(System.IntPtr%2cSharpSDL3.Structs.Rect%40%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.StartTextInput(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.StopTextInput(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.TextInputActive(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool StartTextInputWithProperties(nint window, uint props)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to enable text input.
    - id: props
      type: System.UInt32
      description: the properties to use.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function StartTextInputWithProperties(window As IntPtr, props As UInteger) As Boolean
  overload: SharpSDL3.Sdl.StartTextInputWithProperties*
  nameWithType.vb: Sdl.StartTextInputWithProperties(IntPtr, UInteger)
  fullName.vb: SharpSDL3.Sdl.StartTextInputWithProperties(System.IntPtr, UInteger)
  name.vb: StartTextInputWithProperties(IntPtr, UInteger)
- uid: SharpSDL3.Sdl.StopTextInput(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.StopTextInput(System.IntPtr)
  id: StopTextInput(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: StopTextInput(nint)
  nameWithType: Sdl.StopTextInput(nint)
  fullName: SharpSDL3.Sdl.StopTextInput(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: StopTextInput
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 6556
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Stop receiving any text input events in a window.
  remarks: >-
    If SDL_StartTextInput() showed the screen keyboard,

    this function will hide it.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.StartTextInput(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool StopTextInput(nint window)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to disable text input.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function StopTextInput(window As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.StopTextInput*
  nameWithType.vb: Sdl.StopTextInput(IntPtr)
  fullName.vb: SharpSDL3.Sdl.StopTextInput(System.IntPtr)
  name.vb: StopTextInput(IntPtr)
- uid: SharpSDL3.Sdl.StringToGUID(System.String)
  commentId: M:SharpSDL3.Sdl.StringToGUID(System.String)
  id: StringToGUID(System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: StringToGUID(string)
  nameWithType: Sdl.StringToGUID(string)
  fullName: SharpSDL3.Sdl.StringToGUID(string)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: StringToGUID
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 6581
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Convert a GUID string into a <xref href="SharpSDL3.Structs.SdlGuid" data-throw-if-not-resolved="false"></xref> structure.
  remarks: >-
    Performs no error checking. If this function is given a string containing

    an invalid GUID, the function will silently succeed, but the GUID generated

    will not be useful.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    GUIDToString
  example: []
  syntax:
    content: public static SdlGuid StringToGUID(string pchGuid)
    parameters:
    - id: pchGuid
      type: System.String
    return:
      type: SharpSDL3.Structs.SdlGuid
      description: Returns a <xref href="SharpSDL3.Structs.SdlGuid" data-throw-if-not-resolved="false"></xref> structure.
    content.vb: Public Shared Function StringToGUID(pchGuid As String) As SdlGuid
  overload: SharpSDL3.Sdl.StringToGUID*
  nameWithType.vb: Sdl.StringToGUID(String)
  fullName.vb: SharpSDL3.Sdl.StringToGUID(String)
  name.vb: StringToGUID(String)
- uid: SharpSDL3.Sdl.SurfaceHasAlternateImages(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.SurfaceHasAlternateImages(System.IntPtr)
  id: SurfaceHasAlternateImages(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SurfaceHasAlternateImages(nint)
  nameWithType: Sdl.SurfaceHasAlternateImages(nint)
  fullName: SharpSDL3.Sdl.SurfaceHasAlternateImages(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SurfaceHasAlternateImages
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 6605
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Return whether a surface has alternate versions available.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.AddSurfaceAlternateImage(System.IntPtr%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.RemoveSurfaceAlternateImages(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetSurfaceImages(System.IntPtr%2cSystem.Int32%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SurfaceHasAlternateImages(nint surface)
    parameters:
    - id: surface
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Surface" data-throw-if-not-resolved="false"></xref> structure to query.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if alternate versions are available or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Public Shared Function SurfaceHasAlternateImages(surface As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.SurfaceHasAlternateImages*
  nameWithType.vb: Sdl.SurfaceHasAlternateImages(IntPtr)
  fullName.vb: SharpSDL3.Sdl.SurfaceHasAlternateImages(System.IntPtr)
  name.vb: SurfaceHasAlternateImages(IntPtr)
- uid: SharpSDL3.Sdl.SurfaceHasColorKey(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.SurfaceHasColorKey(System.IntPtr)
  id: SurfaceHasColorKey(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SurfaceHasColorKey(nint)
  nameWithType: Sdl.SurfaceHasColorKey(nint)
  fullName: SharpSDL3.Sdl.SurfaceHasColorKey(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SurfaceHasColorKey
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 6629
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Returns whether the surface has a color key.
  remarks: >-
    It is safe to pass a <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> surface here; it will return false.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetSurfaceColorKey(System.IntPtr%2cSystem.Boolean%2cSystem.UInt32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetSurfaceColorKey(System.IntPtr%2cSystem.UInt32%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SurfaceHasColorKey(nint surface)
    parameters:
    - id: surface
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Surface" data-throw-if-not-resolved="false"></xref> structure to query.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the surface has a color key, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Public Shared Function SurfaceHasColorKey(surface As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.SurfaceHasColorKey*
  nameWithType.vb: Sdl.SurfaceHasColorKey(IntPtr)
  fullName.vb: SharpSDL3.Sdl.SurfaceHasColorKey(System.IntPtr)
  name.vb: SurfaceHasColorKey(IntPtr)
- uid: SharpSDL3.Sdl.SurfaceHasRLE(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.SurfaceHasRLE(System.IntPtr)
  id: SurfaceHasRLE(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SurfaceHasRLE(nint)
  nameWithType: Sdl.SurfaceHasRLE(nint)
  fullName: SharpSDL3.Sdl.SurfaceHasRLE(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SurfaceHasRLE
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 6652
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Returns whether the surface is RLE enabled.
  remarks: >-
    It is safe to pass a <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> surface here; it will return false.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetSurfaceRLE(System.IntPtr%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SurfaceHasRLE(nint surface)
    parameters:
    - id: surface
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Surface" data-throw-if-not-resolved="false"></xref> structure to query.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the surface is RLE enabled, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Public Shared Function SurfaceHasRLE(surface As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.SurfaceHasRLE*
  nameWithType.vb: Sdl.SurfaceHasRLE(IntPtr)
  fullName.vb: SharpSDL3.Sdl.SurfaceHasRLE(System.IntPtr)
  name.vb: SurfaceHasRLE(IntPtr)
- uid: SharpSDL3.Sdl.SyncWindow(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.SyncWindow(System.IntPtr)
  id: SyncWindow(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SyncWindow(nint)
  nameWithType: Sdl.SyncWindow(nint)
  fullName: SharpSDL3.Sdl.SyncWindow(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SyncWindow
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 6686
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Block until any pending window state is finalized.
  remarks: >-
    On asynchronous windowing systems, this acts as a synchronization barrier

    for pending window state. It will attempt to wait until any pending window

    state has been applied and is guaranteed to return within finite time. Note

    that for how long it can potentially block depends on the underlying window

    system, as window state changes may involve somewhat lengthy animations

    that must complete before the window is in its final requested state.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetWindowSize(System.IntPtr%2cSystem.Int32%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetWindowPosition(System.IntPtr%2cSystem.Int32%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetWindowFullscreen(System.IntPtr%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.MinimizeWindow(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.MaximizeWindow(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.RestoreWindow(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    HINT_VIDEO_SYNC_WINDOW_OPERATIONS
  example: []
  syntax:
    content: public static bool SyncWindow(nint window)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window for which to wait for the pending state to be applied.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if the operation timed out beforethe window was in the requested state.
    content.vb: Public Shared Function SyncWindow(window As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.SyncWindow*
  nameWithType.vb: Sdl.SyncWindow(IntPtr)
  fullName.vb: SharpSDL3.Sdl.SyncWindow(System.IntPtr)
  name.vb: SyncWindow(IntPtr)
- uid: SharpSDL3.Sdl.TextInputActive(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.TextInputActive(System.IntPtr)
  id: TextInputActive(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: TextInputActive(nint)
  nameWithType: Sdl.TextInputActive(nint)
  fullName: SharpSDL3.Sdl.TextInputActive(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: TextInputActive
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 6708
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Check whether or not Unicode text input events are enabled for a window.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.StartTextInput(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool TextInputActive(nint window)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to check.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if text input events are enabled else <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Shared Function TextInputActive(window As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.TextInputActive*
  nameWithType.vb: Sdl.TextInputActive(IntPtr)
  fullName.vb: SharpSDL3.Sdl.TextInputActive(System.IntPtr)
  name.vb: TextInputActive(IntPtr)
- uid: SharpSDL3.Sdl.UnloadObject(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.UnloadObject(System.IntPtr)
  id: UnloadObject(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: UnloadObject(nint)
  nameWithType: Sdl.UnloadObject(nint)
  fullName: SharpSDL3.Sdl.UnloadObject(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: UnloadObject
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 6731
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Unload a shared object from memory.
  remarks: >-
    Note that any pointers from this object looked up through

    SDL_LoadFunction() will no longer be valid.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.LoadObject(System.String)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void UnloadObject(nint handle)
    parameters:
    - id: handle
      type: System.IntPtr
      description: a valid shared object handle returned by SDL_LoadObject().
    content.vb: Public Shared Sub UnloadObject(handle As IntPtr)
  overload: SharpSDL3.Sdl.UnloadObject*
  nameWithType.vb: Sdl.UnloadObject(IntPtr)
  fullName.vb: SharpSDL3.Sdl.UnloadObject(System.IntPtr)
  name.vb: UnloadObject(IntPtr)
- uid: SharpSDL3.Sdl.UnlockProperties(System.UInt32)
  commentId: M:SharpSDL3.Sdl.UnlockProperties(System.UInt32)
  id: UnlockProperties(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: UnlockProperties(uint)
  nameWithType: Sdl.UnlockProperties(uint)
  fullName: SharpSDL3.Sdl.UnlockProperties(uint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: UnlockProperties
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 6748
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Unlock a group of properties.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.LockProperties(System.UInt32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void UnlockProperties(uint props)
    parameters:
    - id: props
      type: System.UInt32
      description: the properties to unlock.
    content.vb: Public Shared Sub UnlockProperties(props As UInteger)
  overload: SharpSDL3.Sdl.UnlockProperties*
  nameWithType.vb: Sdl.UnlockProperties(UInteger)
  fullName.vb: SharpSDL3.Sdl.UnlockProperties(UInteger)
  name.vb: UnlockProperties(UInteger)
- uid: SharpSDL3.Sdl.UnlockSurface(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.UnlockSurface(System.IntPtr)
  id: UnlockSurface(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: UnlockSurface(nint)
  nameWithType: Sdl.UnlockSurface(nint)
  fullName: SharpSDL3.Sdl.UnlockSurface(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: UnlockSurface
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 6765
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Release a surface after directly accessing the pixels.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function is not thread safe. The locking referred to by this functionis making the pixels available for direct access, not thread-safe locking.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.LockSurface(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void UnlockSurface(nint surface)
    parameters:
    - id: surface
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Surface" data-throw-if-not-resolved="false"></xref> structure to be unlocked.
    content.vb: Public Shared Sub UnlockSurface(surface As IntPtr)
  overload: SharpSDL3.Sdl.UnlockSurface*
  nameWithType.vb: Sdl.UnlockSurface(IntPtr)
  fullName.vb: SharpSDL3.Sdl.UnlockSurface(System.IntPtr)
  name.vb: UnlockSurface(IntPtr)
- uid: SharpSDL3.Sdl.UpdateWindowSurface(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.UpdateWindowSurface(System.IntPtr)
  id: UpdateWindowSurface(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: UpdateWindowSurface(nint)
  nameWithType: Sdl.UpdateWindowSurface(nint)
  fullName: SharpSDL3.Sdl.UpdateWindowSurface(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: UpdateWindowSurface
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 6786
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Copy the window surface to the screen.
  remarks: >-
    This is the function you use to reflect any changes to the surface on the

    screen.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetWindowSurface(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.UpdateWindowSurfaceRects(System.IntPtr%2cSystem.Span%7bSharpSDL3.Structs.Rect%7d%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool UpdateWindowSurface(nint window)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to update.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function UpdateWindowSurface(window As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.UpdateWindowSurface*
  nameWithType.vb: Sdl.UpdateWindowSurface(IntPtr)
  fullName.vb: SharpSDL3.Sdl.UpdateWindowSurface(System.IntPtr)
  name.vb: UpdateWindowSurface(IntPtr)
- uid: SharpSDL3.Sdl.UpdateWindowSurfaceRects(System.IntPtr,System.Span{SharpSDL3.Structs.Rect},System.Int32)
  commentId: M:SharpSDL3.Sdl.UpdateWindowSurfaceRects(System.IntPtr,System.Span{SharpSDL3.Structs.Rect},System.Int32)
  id: UpdateWindowSurfaceRects(System.IntPtr,System.Span{SharpSDL3.Structs.Rect},System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: UpdateWindowSurfaceRects(nint, Span<Rect>, int)
  nameWithType: Sdl.UpdateWindowSurfaceRects(nint, Span<Rect>, int)
  fullName: SharpSDL3.Sdl.UpdateWindowSurfaceRects(nint, System.Span<SharpSDL3.Structs.Rect>, int)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: UpdateWindowSurfaceRects
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 6813
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Copy areas of the window surface to the screen.
  remarks: >-
    This is the function you use to reflect changes to portions of the surface

    on the screen.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetWindowSurface(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.UpdateWindowSurface(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool UpdateWindowSurfaceRects(nint window, Span<Rect> rects, int numrects)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to update.
    - id: rects
      type: System.Span{SharpSDL3.Structs.Rect}
      description: an array of <xref href="SharpSDL3.Structs.Rect" data-throw-if-not-resolved="false"></xref> structures representing areas of the surface to copy, in pixels.
    - id: numrects
      type: System.Int32
      description: the number of rectangles.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function UpdateWindowSurfaceRects(window As IntPtr, rects As Span(Of Rect), numrects As Integer) As Boolean
  overload: SharpSDL3.Sdl.UpdateWindowSurfaceRects*
  nameWithType.vb: Sdl.UpdateWindowSurfaceRects(IntPtr, Span(Of Rect), Integer)
  fullName.vb: SharpSDL3.Sdl.UpdateWindowSurfaceRects(System.IntPtr, System.Span(Of SharpSDL3.Structs.Rect), Integer)
  name.vb: UpdateWindowSurfaceRects(IntPtr, Span(Of Rect), Integer)
- uid: SharpSDL3.Sdl.UpdateWindowSurfaceRects(System.IntPtr,SharpSDL3.Structs.Rect[])
  commentId: M:SharpSDL3.Sdl.UpdateWindowSurfaceRects(System.IntPtr,SharpSDL3.Structs.Rect[])
  id: UpdateWindowSurfaceRects(System.IntPtr,SharpSDL3.Structs.Rect[])
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: UpdateWindowSurfaceRects(nint, Rect[])
  nameWithType: Sdl.UpdateWindowSurfaceRects(nint, Rect[])
  fullName: SharpSDL3.Sdl.UpdateWindowSurfaceRects(nint, SharpSDL3.Structs.Rect[])
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: UpdateWindowSurfaceRects
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 6844
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Copy areas of the window surface to the screen.
  remarks: >-
    This is the function you use to reflect changes to portions of the surface

    on the screen.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetWindowSurface(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.UpdateWindowSurface(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool UpdateWindowSurfaceRects(nint window, Rect[] rects)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to update.
    - id: rects
      type: SharpSDL3.Structs.Rect[]
      description: an array of <xref href="SharpSDL3.Structs.Rect" data-throw-if-not-resolved="false"></xref> structures representing areas of the surface to copy, in pixels.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function UpdateWindowSurfaceRects(window As IntPtr, rects As Rect()) As Boolean
  overload: SharpSDL3.Sdl.UpdateWindowSurfaceRects*
  nameWithType.vb: Sdl.UpdateWindowSurfaceRects(IntPtr, Rect())
  fullName.vb: SharpSDL3.Sdl.UpdateWindowSurfaceRects(System.IntPtr, SharpSDL3.Structs.Rect())
  name.vb: UpdateWindowSurfaceRects(IntPtr, Rect())
- uid: SharpSDL3.Sdl.WaitThread(System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.WaitThread(System.IntPtr,System.IntPtr)
  id: WaitThread(System.IntPtr,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: WaitThread(nint, nint)
  nameWithType: Sdl.WaitThread(nint, nint)
  fullName: SharpSDL3.Sdl.WaitThread(nint, nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: WaitThread
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 6872
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Wait for a thread to finish.
  remarks: >-
    Threads that haven't been detached will remain until this function cleans

    them up. Not doing so is a resource leak.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    CreateThread

    <xref href="SharpSDL3.Sdl.DetachThread(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void WaitThread(nint thread, nint status)
    parameters:
    - id: thread
      type: System.IntPtr
      description: the SDL_Thread pointer that was returned from the SDL_CreateThread() call that started this thread.
    - id: status
      type: System.IntPtr
      description: a pointer filled in with the value returned from the thread function by its 'return', or -1 if the thread has been detached or isn't valid, may be discarded.
    content.vb: Public Shared Sub WaitThread(thread As IntPtr, status As IntPtr)
  overload: SharpSDL3.Sdl.WaitThread*
  nameWithType.vb: Sdl.WaitThread(IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.WaitThread(System.IntPtr, System.IntPtr)
  name.vb: WaitThread(IntPtr, IntPtr)
- uid: SharpSDL3.Sdl.WasInit(SharpSDL3.Enums.InitFlags)
  commentId: M:SharpSDL3.Sdl.WasInit(SharpSDL3.Enums.InitFlags)
  id: WasInit(SharpSDL3.Enums.InitFlags)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: WasInit(InitFlags)
  nameWithType: Sdl.WasInit(InitFlags)
  fullName: SharpSDL3.Sdl.WasInit(SharpSDL3.Enums.InitFlags)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: WasInit
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 6880
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static InitFlags WasInit(InitFlags flags)
    parameters:
    - id: flags
      type: SharpSDL3.Enums.InitFlags
    return:
      type: SharpSDL3.Enums.InitFlags
    content.vb: Public Shared Function WasInit(flags As InitFlags) As InitFlags
  overload: SharpSDL3.Sdl.WasInit*
- uid: SharpSDL3.Sdl.WindowHasSurface(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.WindowHasSurface(System.IntPtr)
  id: WindowHasSurface(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: WindowHasSurface(nint)
  nameWithType: Sdl.WindowHasSurface(nint)
  fullName: SharpSDL3.Sdl.WindowHasSurface(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: WindowHasSurface
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 6906
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Return whether the window has a surface associated with it.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetWindowSurface(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool WindowHasSurface(nint window)
    parameters:
    - id: window
      type: System.IntPtr
      description: the window to query.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if there is a surface associated with the window, or<a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Public Shared Function WindowHasSurface(window As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.WindowHasSurface*
  nameWithType.vb: Sdl.WindowHasSurface(IntPtr)
  fullName.vb: SharpSDL3.Sdl.WindowHasSurface(System.IntPtr)
  name.vb: WindowHasSurface(IntPtr)
- uid: SharpSDL3.Sdl.WriteSurfacePixel(System.IntPtr,System.Int32,System.Int32,System.Byte,System.Byte,System.Byte,System.Byte)
  commentId: M:SharpSDL3.Sdl.WriteSurfacePixel(System.IntPtr,System.Int32,System.Int32,System.Byte,System.Byte,System.Byte,System.Byte)
  id: WriteSurfacePixel(System.IntPtr,System.Int32,System.Int32,System.Byte,System.Byte,System.Byte,System.Byte)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: WriteSurfacePixel(nint, int, int, byte, byte, byte, byte)
  nameWithType: Sdl.WriteSurfacePixel(nint, int, int, byte, byte, byte, byte)
  fullName: SharpSDL3.Sdl.WriteSurfacePixel(nint, int, int, byte, byte, byte, byte)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: WriteSurfacePixel
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 6935
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Writes a single pixel to a surface.
  remarks: >-
    This function prioritizes correctness over speed: it is suitable for unit

    tests, but is not intended for use in a game engine.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool WriteSurfacePixel(nint surface, int x, int y, byte r, byte g, byte b, byte a)
    parameters:
    - id: surface
      type: System.IntPtr
      description: the surface to write.
    - id: x
      type: System.Int32
      description: the horizontal coordinate, 0 &lt;= x &lt; width.
    - id: y
      type: System.Int32
      description: the vertical coordinate, 0 &lt;= y &lt; height.
    - id: r
      type: System.Byte
      description: the red channel value, 0-255.
    - id: g
      type: System.Byte
      description: the green channel value, 0-255.
    - id: b
      type: System.Byte
      description: the blue channel value, 0-255.
    - id: a
      type: System.Byte
      description: the alpha channel value, 0-255.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function WriteSurfacePixel(surface As IntPtr, x As Integer, y As Integer, r As Byte, g As Byte, b As Byte, a As Byte) As Boolean
  overload: SharpSDL3.Sdl.WriteSurfacePixel*
  nameWithType.vb: Sdl.WriteSurfacePixel(IntPtr, Integer, Integer, Byte, Byte, Byte, Byte)
  fullName.vb: SharpSDL3.Sdl.WriteSurfacePixel(System.IntPtr, Integer, Integer, Byte, Byte, Byte, Byte)
  name.vb: WriteSurfacePixel(IntPtr, Integer, Integer, Byte, Byte, Byte, Byte)
- uid: SharpSDL3.Sdl.WriteSurfacePixel(System.IntPtr,System.Int32,System.Int32,SharpSDL3.Structs.Color)
  commentId: M:SharpSDL3.Sdl.WriteSurfacePixel(System.IntPtr,System.Int32,System.Int32,SharpSDL3.Structs.Color)
  id: WriteSurfacePixel(System.IntPtr,System.Int32,System.Int32,SharpSDL3.Structs.Color)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: WriteSurfacePixel(nint, int, int, Color)
  nameWithType: Sdl.WriteSurfacePixel(nint, int, int, Color)
  fullName: SharpSDL3.Sdl.WriteSurfacePixel(nint, int, int, SharpSDL3.Structs.Color)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: WriteSurfacePixel
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 6964
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Writes a single pixel to a surface.
  remarks: >-
    This function prioritizes correctness over speed: it is suitable for unit

    tests, but is not intended for use in a game engine.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool WriteSurfacePixel(nint surface, int x, int y, Color color)
    parameters:
    - id: surface
      type: System.IntPtr
      description: the surface to write.
    - id: x
      type: System.Int32
      description: the horizontal coordinate, 0 &lt;= x &lt; width.
    - id: y
      type: System.Int32
      description: the vertical coordinate, 0 &lt;= y &lt; height.
    - id: color
      type: SharpSDL3.Structs.Color
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function WriteSurfacePixel(surface As IntPtr, x As Integer, y As Integer, color As Color) As Boolean
  overload: SharpSDL3.Sdl.WriteSurfacePixel*
  nameWithType.vb: Sdl.WriteSurfacePixel(IntPtr, Integer, Integer, Color)
  fullName.vb: SharpSDL3.Sdl.WriteSurfacePixel(System.IntPtr, Integer, Integer, SharpSDL3.Structs.Color)
  name.vb: WriteSurfacePixel(IntPtr, Integer, Integer, Color)
- uid: SharpSDL3.Sdl.WriteSurfacePixel(System.IntPtr,SharpSDL3.Structs.Point,SharpSDL3.Structs.Color)
  commentId: M:SharpSDL3.Sdl.WriteSurfacePixel(System.IntPtr,SharpSDL3.Structs.Point,SharpSDL3.Structs.Color)
  id: WriteSurfacePixel(System.IntPtr,SharpSDL3.Structs.Point,SharpSDL3.Structs.Color)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: WriteSurfacePixel(nint, Point, Color)
  nameWithType: Sdl.WriteSurfacePixel(nint, Point, Color)
  fullName: SharpSDL3.Sdl.WriteSurfacePixel(nint, SharpSDL3.Structs.Point, SharpSDL3.Structs.Color)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: WriteSurfacePixel
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 6993
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Writes a single pixel to a surface.
  remarks: >-
    This function prioritizes correctness over speed: it is suitable for unit

    tests, but is not intended for use in a game engine.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool WriteSurfacePixel(nint surface, Point location, Color color)
    parameters:
    - id: surface
      type: System.IntPtr
      description: the surface to write.
    - id: location
      type: SharpSDL3.Structs.Point
    - id: color
      type: SharpSDL3.Structs.Color
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function WriteSurfacePixel(surface As IntPtr, location As Point, color As Color) As Boolean
  overload: SharpSDL3.Sdl.WriteSurfacePixel*
  nameWithType.vb: Sdl.WriteSurfacePixel(IntPtr, Point, Color)
  fullName.vb: SharpSDL3.Sdl.WriteSurfacePixel(System.IntPtr, SharpSDL3.Structs.Point, SharpSDL3.Structs.Color)
  name.vb: WriteSurfacePixel(IntPtr, Point, Color)
- uid: SharpSDL3.Sdl.WriteSurfacePixel(System.IntPtr,SharpSDL3.Structs.Point,System.Byte,System.Byte,System.Byte,System.Byte)
  commentId: M:SharpSDL3.Sdl.WriteSurfacePixel(System.IntPtr,SharpSDL3.Structs.Point,System.Byte,System.Byte,System.Byte,System.Byte)
  id: WriteSurfacePixel(System.IntPtr,SharpSDL3.Structs.Point,System.Byte,System.Byte,System.Byte,System.Byte)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: WriteSurfacePixel(nint, Point, byte, byte, byte, byte)
  nameWithType: Sdl.WriteSurfacePixel(nint, Point, byte, byte, byte, byte)
  fullName: SharpSDL3.Sdl.WriteSurfacePixel(nint, SharpSDL3.Structs.Point, byte, byte, byte, byte)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: WriteSurfacePixel
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 7018
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Writes a single pixel to a surface.
  remarks: >-
    This function prioritizes correctness over speed: it is suitable for unit

    tests, but is not intended for use in a game engine.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool WriteSurfacePixel(nint surface, Point location, byte r, byte g, byte b, byte a)
    parameters:
    - id: surface
      type: System.IntPtr
      description: the surface to write.
    - id: location
      type: SharpSDL3.Structs.Point
    - id: r
      type: System.Byte
      description: the red channel value, 0-255.
    - id: g
      type: System.Byte
      description: the green channel value, 0-255.
    - id: b
      type: System.Byte
      description: the blue channel value, 0-255.
    - id: a
      type: System.Byte
      description: the alpha channel value, 0-255.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function WriteSurfacePixel(surface As IntPtr, location As Point, r As Byte, g As Byte, b As Byte, a As Byte) As Boolean
  overload: SharpSDL3.Sdl.WriteSurfacePixel*
  nameWithType.vb: Sdl.WriteSurfacePixel(IntPtr, Point, Byte, Byte, Byte, Byte)
  fullName.vb: SharpSDL3.Sdl.WriteSurfacePixel(System.IntPtr, SharpSDL3.Structs.Point, Byte, Byte, Byte, Byte)
  name.vb: WriteSurfacePixel(IntPtr, Point, Byte, Byte, Byte, Byte)
- uid: SharpSDL3.Sdl.WriteSurfacePixelFloat(System.IntPtr,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single)
  commentId: M:SharpSDL3.Sdl.WriteSurfacePixelFloat(System.IntPtr,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single)
  id: WriteSurfacePixelFloat(System.IntPtr,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: WriteSurfacePixelFloat(nint, int, int, float, float, float, float)
  nameWithType: Sdl.WriteSurfacePixelFloat(nint, int, int, float, float, float, float)
  fullName: SharpSDL3.Sdl.WriteSurfacePixelFloat(nint, int, int, float, float, float, float)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: WriteSurfacePixelFloat
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 7043
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Writes a single pixel to a surface.
  remarks: >-
    This function prioritizes correctness over speed: it is suitable for unit

    tests, but is not intended for use in a game engine.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool WriteSurfacePixelFloat(nint surface, int x, int y, float r, float g, float b, float a)
    parameters:
    - id: surface
      type: System.IntPtr
      description: the surface to write.
    - id: x
      type: System.Int32
      description: the horizontal coordinate, 0 &lt;= x &lt; width.
    - id: y
      type: System.Int32
      description: the vertical coordinate, 0 &lt;= y &lt; height.
    - id: r
      type: System.Single
      description: the red channel value, normally in the range 0-1.
    - id: g
      type: System.Single
      description: the green channel value, normally in the range 0-1.
    - id: b
      type: System.Single
      description: the blue channel value, normally in the range 0-1.
    - id: a
      type: System.Single
      description: the alpha channel value, normally in the range 0-1.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function WriteSurfacePixelFloat(surface As IntPtr, x As Integer, y As Integer, r As Single, g As Single, b As Single, a As Single) As Boolean
  overload: SharpSDL3.Sdl.WriteSurfacePixelFloat*
  nameWithType.vb: Sdl.WriteSurfacePixelFloat(IntPtr, Integer, Integer, Single, Single, Single, Single)
  fullName.vb: SharpSDL3.Sdl.WriteSurfacePixelFloat(System.IntPtr, Integer, Integer, Single, Single, Single, Single)
  name.vb: WriteSurfacePixelFloat(IntPtr, Integer, Integer, Single, Single, Single, Single)
- uid: SharpSDL3.Sdl.WriteSurfacePixelFloat(System.IntPtr,SharpSDL3.Structs.Point,SharpSDL3.Structs.FColor)
  commentId: M:SharpSDL3.Sdl.WriteSurfacePixelFloat(System.IntPtr,SharpSDL3.Structs.Point,SharpSDL3.Structs.FColor)
  id: WriteSurfacePixelFloat(System.IntPtr,SharpSDL3.Structs.Point,SharpSDL3.Structs.FColor)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: WriteSurfacePixelFloat(nint, Point, FColor)
  nameWithType: Sdl.WriteSurfacePixelFloat(nint, Point, FColor)
  fullName: SharpSDL3.Sdl.WriteSurfacePixelFloat(nint, SharpSDL3.Structs.Point, SharpSDL3.Structs.FColor)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: WriteSurfacePixelFloat
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 7072
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Writes a single pixel to a surface.
  remarks: >-
    This function prioritizes correctness over speed: it is suitable for unit

    tests, but is not intended for use in a game engine.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool WriteSurfacePixelFloat(nint window, Point location, FColor color)
    parameters:
    - id: window
      type: System.IntPtr
    - id: location
      type: SharpSDL3.Structs.Point
    - id: color
      type: SharpSDL3.Structs.FColor
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function WriteSurfacePixelFloat(window As IntPtr, location As Point, color As FColor) As Boolean
  overload: SharpSDL3.Sdl.WriteSurfacePixelFloat*
  nameWithType.vb: Sdl.WriteSurfacePixelFloat(IntPtr, Point, FColor)
  fullName.vb: SharpSDL3.Sdl.WriteSurfacePixelFloat(System.IntPtr, SharpSDL3.Structs.Point, SharpSDL3.Structs.FColor)
  name.vb: WriteSurfacePixelFloat(IntPtr, Point, FColor)
- uid: SharpSDL3.Sdl.WriteSurfacePixelFloat(System.IntPtr,SharpSDL3.Structs.Point,System.Single,System.Single,System.Single,System.Single)
  commentId: M:SharpSDL3.Sdl.WriteSurfacePixelFloat(System.IntPtr,SharpSDL3.Structs.Point,System.Single,System.Single,System.Single,System.Single)
  id: WriteSurfacePixelFloat(System.IntPtr,SharpSDL3.Structs.Point,System.Single,System.Single,System.Single,System.Single)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: WriteSurfacePixelFloat(nint, Point, float, float, float, float)
  nameWithType: Sdl.WriteSurfacePixelFloat(nint, Point, float, float, float, float)
  fullName: SharpSDL3.Sdl.WriteSurfacePixelFloat(nint, SharpSDL3.Structs.Point, float, float, float, float)
  type: Method
  source:
    remote:
      path: SDL3/Sdl.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: WriteSurfacePixelFloat
    path: ../../repos/SDL3-CS/SDL3/Sdl.cs
    startLine: 7098
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Writes a single pixel to a surface.
  remarks: >-
    This function prioritizes correctness over speed: it is suitable for unit

    tests, but is not intended for use in a game engine.

    <p><strong>Thread Safety:</strong> This function is not thread safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool WriteSurfacePixelFloat(nint window, Point location, float r, float g, float b, float a)
    parameters:
    - id: window
      type: System.IntPtr
    - id: location
      type: SharpSDL3.Structs.Point
    - id: r
      type: System.Single
      description: the red channel value, normally in the range 0-1.
    - id: g
      type: System.Single
      description: the green channel value, normally in the range 0-1.
    - id: b
      type: System.Single
      description: the blue channel value, normally in the range 0-1.
    - id: a
      type: System.Single
      description: the alpha channel value, normally in the range 0-1.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function WriteSurfacePixelFloat(window As IntPtr, location As Point, r As Single, g As Single, b As Single, a As Single) As Boolean
  overload: SharpSDL3.Sdl.WriteSurfacePixelFloat*
  nameWithType.vb: Sdl.WriteSurfacePixelFloat(IntPtr, Point, Single, Single, Single, Single)
  fullName.vb: SharpSDL3.Sdl.WriteSurfacePixelFloat(System.IntPtr, SharpSDL3.Structs.Point, Single, Single, Single, Single)
  name.vb: WriteSurfacePixelFloat(IntPtr, Point, Single, Single, Single, Single)
- uid: SharpSDL3.Sdl.Create(System.UInt32)
  commentId: M:SharpSDL3.Sdl.Create(System.UInt32)
  id: Create(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: Create(uint)
  nameWithType: Sdl.Create(uint)
  fullName: SharpSDL3.Sdl.Create(uint)
  type: Method
  source:
    remote:
      path: SDL3/Semaphore.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: Create
    path: ../../repos/SDL3-CS/SDL3/Semaphore.cs
    startLine: 9
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static nint Create(uint initialValue)
    parameters:
    - id: initialValue
      type: System.UInt32
    return:
      type: System.IntPtr
    content.vb: Public Shared Function Create(initialValue As UInteger) As IntPtr
  overload: SharpSDL3.Sdl.Create*
  nameWithType.vb: Sdl.Create(UInteger)
  fullName.vb: SharpSDL3.Sdl.Create(UInteger)
  name.vb: Create(UInteger)
- uid: SharpSDL3.Sdl.Destroy(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.Destroy(System.IntPtr)
  id: Destroy(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: Destroy(nint)
  nameWithType: Sdl.Destroy(nint)
  fullName: SharpSDL3.Sdl.Destroy(nint)
  type: Method
  source:
    remote:
      path: SDL3/Semaphore.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: Destroy
    path: ../../repos/SDL3-CS/SDL3/Semaphore.cs
    startLine: 17
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static void Destroy(nint sem)
    parameters:
    - id: sem
      type: System.IntPtr
    content.vb: Public Shared Sub Destroy(sem As IntPtr)
  overload: SharpSDL3.Sdl.Destroy*
  nameWithType.vb: Sdl.Destroy(IntPtr)
  fullName.vb: SharpSDL3.Sdl.Destroy(System.IntPtr)
  name.vb: Destroy(IntPtr)
- uid: SharpSDL3.Sdl.GetValue(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetValue(System.IntPtr)
  id: GetValue(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetValue(nint)
  nameWithType: Sdl.GetValue(nint)
  fullName: SharpSDL3.Sdl.GetValue(nint)
  type: Method
  source:
    remote:
      path: SDL3/Semaphore.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetValue
    path: ../../repos/SDL3-CS/SDL3/Semaphore.cs
    startLine: 24
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static uint GetValue(nint sem)
    parameters:
    - id: sem
      type: System.IntPtr
    return:
      type: System.UInt32
    content.vb: Public Shared Function GetValue(sem As IntPtr) As UInteger
  overload: SharpSDL3.Sdl.GetValue*
  nameWithType.vb: Sdl.GetValue(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetValue(System.IntPtr)
  name.vb: GetValue(IntPtr)
- uid: SharpSDL3.Sdl.Signal(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.Signal(System.IntPtr)
  id: Signal(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: Signal(nint)
  nameWithType: Sdl.Signal(nint)
  fullName: SharpSDL3.Sdl.Signal(nint)
  type: Method
  source:
    remote:
      path: SDL3/Semaphore.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: Signal
    path: ../../repos/SDL3-CS/SDL3/Semaphore.cs
    startLine: 31
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static void Signal(nint sem)
    parameters:
    - id: sem
      type: System.IntPtr
    content.vb: Public Shared Sub Signal(sem As IntPtr)
  overload: SharpSDL3.Sdl.Signal*
  nameWithType.vb: Sdl.Signal(IntPtr)
  fullName.vb: SharpSDL3.Sdl.Signal(System.IntPtr)
  name.vb: Signal(IntPtr)
- uid: SharpSDL3.Sdl.TryWait(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.TryWait(System.IntPtr)
  id: TryWait(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: TryWait(nint)
  nameWithType: Sdl.TryWait(nint)
  fullName: SharpSDL3.Sdl.TryWait(nint)
  type: Method
  source:
    remote:
      path: SDL3/Semaphore.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: TryWait
    path: ../../repos/SDL3-CS/SDL3/Semaphore.cs
    startLine: 38
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static bool TryWait(nint sem)
    parameters:
    - id: sem
      type: System.IntPtr
    return:
      type: System.Boolean
    content.vb: Public Shared Function TryWait(sem As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.TryWait*
  nameWithType.vb: Sdl.TryWait(IntPtr)
  fullName.vb: SharpSDL3.Sdl.TryWait(System.IntPtr)
  name.vb: TryWait(IntPtr)
- uid: SharpSDL3.Sdl.Wait(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.Wait(System.IntPtr)
  id: Wait(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: Wait(nint)
  nameWithType: Sdl.Wait(nint)
  fullName: SharpSDL3.Sdl.Wait(nint)
  type: Method
  source:
    remote:
      path: SDL3/Semaphore.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: Wait
    path: ../../repos/SDL3-CS/SDL3/Semaphore.cs
    startLine: 45
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static void Wait(nint sem)
    parameters:
    - id: sem
      type: System.IntPtr
    content.vb: Public Shared Sub Wait(sem As IntPtr)
  overload: SharpSDL3.Sdl.Wait*
  nameWithType.vb: Sdl.Wait(IntPtr)
  fullName.vb: SharpSDL3.Sdl.Wait(System.IntPtr)
  name.vb: Wait(IntPtr)
- uid: SharpSDL3.Sdl.WaitTimeout(System.IntPtr,System.Int32)
  commentId: M:SharpSDL3.Sdl.WaitTimeout(System.IntPtr,System.Int32)
  id: WaitTimeout(System.IntPtr,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: WaitTimeout(nint, int)
  nameWithType: Sdl.WaitTimeout(nint, int)
  fullName: SharpSDL3.Sdl.WaitTimeout(nint, int)
  type: Method
  source:
    remote:
      path: SDL3/Semaphore.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: WaitTimeout
    path: ../../repos/SDL3-CS/SDL3/Semaphore.cs
    startLine: 52
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static bool WaitTimeout(nint sem, int timeoutMs)
    parameters:
    - id: sem
      type: System.IntPtr
    - id: timeoutMs
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function WaitTimeout(sem As IntPtr, timeoutMs As Integer) As Boolean
  overload: SharpSDL3.Sdl.WaitTimeout*
  nameWithType.vb: Sdl.WaitTimeout(IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.WaitTimeout(System.IntPtr, Integer)
  name.vb: WaitTimeout(IntPtr, Integer)
- uid: SharpSDL3.Sdl.CloseSensor(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.CloseSensor(System.IntPtr)
  id: CloseSensor(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CloseSensor(nint)
  nameWithType: Sdl.CloseSensor(nint)
  fullName: SharpSDL3.Sdl.CloseSensor(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sensors.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CloseSensor
    path: ../../repos/SDL3-CS/SDL3/Sensors.cs
    startLine: 17
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Close a sensor previously opened with SDL_OpenSensor().
  remarks: <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static void CloseSensor(nint sensor)
    parameters:
    - id: sensor
      type: System.IntPtr
      description: the SDL_Sensor object to close.
    content.vb: Public Shared Sub CloseSensor(sensor As IntPtr)
  overload: SharpSDL3.Sdl.CloseSensor*
  nameWithType.vb: Sdl.CloseSensor(IntPtr)
  fullName.vb: SharpSDL3.Sdl.CloseSensor(System.IntPtr)
  name.vb: CloseSensor(IntPtr)
- uid: SharpSDL3.Sdl.GetSensorData(System.IntPtr,System.IntPtr,System.Int32)
  commentId: M:SharpSDL3.Sdl.GetSensorData(System.IntPtr,System.IntPtr,System.Int32)
  id: GetSensorData(System.IntPtr,System.IntPtr,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetSensorData(nint, nint, int)
  nameWithType: Sdl.GetSensorData(nint, nint, int)
  fullName: SharpSDL3.Sdl.GetSensorData(nint, nint, int)
  type: Method
  source:
    remote:
      path: SDL3/Sensors.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetSensorData
    path: ../../repos/SDL3-CS/SDL3/Sensors.cs
    startLine: 40
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the current state of an opened sensor.
  remarks: >-
    The number of values and interpretation of the data is sensor dependent.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool GetSensorData(nint sensor, nint data, int numValues)
    parameters:
    - id: sensor
      type: System.IntPtr
      description: the SDL_Sensor object to query.
    - id: data
      type: System.IntPtr
      description: a pointer filled with the current sensor state.
    - id: numValues
      type: System.Int32
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetSensorData(sensor As IntPtr, data As IntPtr, numValues As Integer) As Boolean
  overload: SharpSDL3.Sdl.GetSensorData*
  nameWithType.vb: Sdl.GetSensorData(IntPtr, IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.GetSensorData(System.IntPtr, System.IntPtr, Integer)
  name.vb: GetSensorData(IntPtr, IntPtr, Integer)
- uid: SharpSDL3.Sdl.GetSensorFromID(System.UInt32)
  commentId: M:SharpSDL3.Sdl.GetSensorFromID(System.UInt32)
  id: GetSensorFromID(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetSensorFromID(uint)
  nameWithType: Sdl.GetSensorFromID(uint)
  fullName: SharpSDL3.Sdl.GetSensorFromID(uint)
  type: Method
  source:
    remote:
      path: SDL3/Sensors.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetSensorFromID
    path: ../../repos/SDL3-CS/SDL3/Sensors.cs
    startLine: 56
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Return the SDL_Sensor associated with an instance ID.
  remarks: <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static nint GetSensorFromID(uint instanceId)
    parameters:
    - id: instanceId
      type: System.UInt32
    return:
      type: System.IntPtr
      description: (SDL_Sensor *) Returns an SDL_Sensor object or<a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetSensorFromID(instanceId As UInteger) As IntPtr
  overload: SharpSDL3.Sdl.GetSensorFromID*
  nameWithType.vb: Sdl.GetSensorFromID(UInteger)
  fullName.vb: SharpSDL3.Sdl.GetSensorFromID(UInteger)
  name.vb: GetSensorFromID(UInteger)
- uid: SharpSDL3.Sdl.GetSensorID(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetSensorID(System.IntPtr)
  id: GetSensorID(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetSensorID(nint)
  nameWithType: Sdl.GetSensorID(nint)
  fullName: SharpSDL3.Sdl.GetSensorID(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sensors.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetSensorID
    path: ../../repos/SDL3-CS/SDL3/Sensors.cs
    startLine: 72
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the instance ID of a sensor.
  remarks: <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static uint GetSensorID(nint sensor)
    parameters:
    - id: sensor
      type: System.IntPtr
      description: the SDL_Sensor object to inspect.
    return:
      type: System.UInt32
      description: Returns the sensor instance ID, or 0 on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetSensorID(sensor As IntPtr) As UInteger
  overload: SharpSDL3.Sdl.GetSensorID*
  nameWithType.vb: Sdl.GetSensorID(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetSensorID(System.IntPtr)
  name.vb: GetSensorID(IntPtr)
- uid: SharpSDL3.Sdl.GetSensorName(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetSensorName(System.IntPtr)
  id: GetSensorName(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetSensorName(nint)
  nameWithType: Sdl.GetSensorName(nint)
  fullName: SharpSDL3.Sdl.GetSensorName(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sensors.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetSensorName
    path: ../../repos/SDL3-CS/SDL3/Sensors.cs
    startLine: 88
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the implementation dependent name of a sensor.
  remarks: <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static string GetSensorName(nint sensor)
    parameters:
    - id: sensor
      type: System.IntPtr
      description: the SDL_Sensor object.
    return:
      type: System.String
      description: Returns the sensor name or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetSensorName(sensor As IntPtr) As String
  overload: SharpSDL3.Sdl.GetSensorName*
  nameWithType.vb: Sdl.GetSensorName(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetSensorName(System.IntPtr)
  name.vb: GetSensorName(IntPtr)
- uid: SharpSDL3.Sdl.GetSensorNameForID(System.UInt32)
  commentId: M:SharpSDL3.Sdl.GetSensorNameForID(System.UInt32)
  id: GetSensorNameForID(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetSensorNameForID(uint)
  nameWithType: Sdl.GetSensorNameForID(uint)
  fullName: SharpSDL3.Sdl.GetSensorNameForID(uint)
  type: Method
  source:
    remote:
      path: SDL3/Sensors.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetSensorNameForID
    path: ../../repos/SDL3-CS/SDL3/Sensors.cs
    startLine: 105
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the implementation dependent name of a sensor.
  remarks: >-
    This can be called before any sensors are opened.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static string GetSensorNameForID(uint instanceId)
    parameters:
    - id: instanceId
      type: System.UInt32
    return:
      type: System.String
      description: Returns the sensor name, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if instance_id is notvalid.
    content.vb: Public Shared Function GetSensorNameForID(instanceId As UInteger) As String
  overload: SharpSDL3.Sdl.GetSensorNameForID*
  nameWithType.vb: Sdl.GetSensorNameForID(UInteger)
  fullName.vb: SharpSDL3.Sdl.GetSensorNameForID(UInteger)
  name.vb: GetSensorNameForID(UInteger)
- uid: SharpSDL3.Sdl.GetSensorNonPortableType(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetSensorNonPortableType(System.IntPtr)
  id: GetSensorNonPortableType(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetSensorNonPortableType(nint)
  nameWithType: Sdl.GetSensorNonPortableType(nint)
  fullName: SharpSDL3.Sdl.GetSensorNonPortableType(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sensors.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetSensorNonPortableType
    path: ../../repos/SDL3-CS/SDL3/Sensors.cs
    startLine: 121
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the platform dependent type of a sensor.
  remarks: <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static int GetSensorNonPortableType(nint sensor)
    parameters:
    - id: sensor
      type: System.IntPtr
      description: the SDL_Sensor object to inspect.
    return:
      type: System.Int32
      description: Returns the sensor platform dependent type, or -1 if sensor is<a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    content.vb: Public Shared Function GetSensorNonPortableType(sensor As IntPtr) As Integer
  overload: SharpSDL3.Sdl.GetSensorNonPortableType*
  nameWithType.vb: Sdl.GetSensorNonPortableType(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetSensorNonPortableType(System.IntPtr)
  name.vb: GetSensorNonPortableType(IntPtr)
- uid: SharpSDL3.Sdl.GetSensorNonPortableTypeForID(System.UInt32)
  commentId: M:SharpSDL3.Sdl.GetSensorNonPortableTypeForID(System.UInt32)
  id: GetSensorNonPortableTypeForID(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetSensorNonPortableTypeForID(uint)
  nameWithType: Sdl.GetSensorNonPortableTypeForID(uint)
  fullName: SharpSDL3.Sdl.GetSensorNonPortableTypeForID(uint)
  type: Method
  source:
    remote:
      path: SDL3/Sensors.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetSensorNonPortableTypeForID
    path: ../../repos/SDL3-CS/SDL3/Sensors.cs
    startLine: 138
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the platform dependent type of a sensor.
  remarks: >-
    This can be called before any sensors are opened.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static int GetSensorNonPortableTypeForID(uint instanceId)
    parameters:
    - id: instanceId
      type: System.UInt32
    return:
      type: System.Int32
      description: Returns the sensor platform dependent type, or -1 if instance_id is not valid.
    content.vb: Public Shared Function GetSensorNonPortableTypeForID(instanceId As UInteger) As Integer
  overload: SharpSDL3.Sdl.GetSensorNonPortableTypeForID*
  nameWithType.vb: Sdl.GetSensorNonPortableTypeForID(UInteger)
  fullName.vb: SharpSDL3.Sdl.GetSensorNonPortableTypeForID(UInteger)
  name.vb: GetSensorNonPortableTypeForID(UInteger)
- uid: SharpSDL3.Sdl.GetSensorProperties(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetSensorProperties(System.IntPtr)
  id: GetSensorProperties(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetSensorProperties(nint)
  nameWithType: Sdl.GetSensorProperties(nint)
  fullName: SharpSDL3.Sdl.GetSensorProperties(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sensors.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetSensorProperties
    path: ../../repos/SDL3-CS/SDL3/Sensors.cs
    startLine: 154
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the properties associated with a sensor.
  remarks: <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static uint GetSensorProperties(nint sensor)
    parameters:
    - id: sensor
      type: System.IntPtr
      description: the SDL_Sensor object.
    return:
      type: System.UInt32
      description: Returns a valid property ID on success or 0 on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetSensorProperties(sensor As IntPtr) As UInteger
  overload: SharpSDL3.Sdl.GetSensorProperties*
  nameWithType.vb: Sdl.GetSensorProperties(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetSensorProperties(System.IntPtr)
  name.vb: GetSensorProperties(IntPtr)
- uid: SharpSDL3.Sdl.GetSensors(System.Int32@)
  commentId: M:SharpSDL3.Sdl.GetSensors(System.Int32@)
  id: GetSensors(System.Int32@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetSensors(out int)
  nameWithType: Sdl.GetSensors(out int)
  fullName: SharpSDL3.Sdl.GetSensors(out int)
  type: Method
  source:
    remote:
      path: SDL3/Sensors.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetSensors
    path: ../../repos/SDL3-CS/SDL3/Sensors.cs
    startLine: 170
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get a list of currently connected sensors.
  remarks: <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static nint GetSensors(out int count)
    parameters:
    - id: count
      type: System.Int32
      description: a pointer filled in with the number of sensors returned, may be discarded.
    return:
      type: System.IntPtr
      description: (SDL_SensorID *) Returns a 0 terminated array of sensorinstance IDs or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information. This should be freed with <xref href="SharpSDL3.Sdl.Free(System.IntPtr)" data-throw-if-not-resolved="false"></xref> when itis no longer needed.
    content.vb: Public Shared Function GetSensors(count As Integer) As IntPtr
  overload: SharpSDL3.Sdl.GetSensors*
  nameWithType.vb: Sdl.GetSensors(Integer)
  fullName.vb: SharpSDL3.Sdl.GetSensors(Integer)
  name.vb: GetSensors(Integer)
- uid: SharpSDL3.Sdl.GetSensorType(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetSensorType(System.IntPtr)
  id: GetSensorType(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetSensorType(nint)
  nameWithType: Sdl.GetSensorType(nint)
  fullName: SharpSDL3.Sdl.GetSensorType(nint)
  type: Method
  source:
    remote:
      path: SDL3/Sensors.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetSensorType
    path: ../../repos/SDL3-CS/SDL3/Sensors.cs
    startLine: 186
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the type of a sensor.
  remarks: <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static SensorType GetSensorType(nint sensor)
    parameters:
    - id: sensor
      type: System.IntPtr
      description: the SDL_Sensor object to inspect.
    return:
      type: SharpSDL3.Enums.SensorType
      description: Returns theSDL_SensorType type, orSDL_SENSOR_INVALID if sensor is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    content.vb: Public Shared Function GetSensorType(sensor As IntPtr) As SensorType
  overload: SharpSDL3.Sdl.GetSensorType*
  nameWithType.vb: Sdl.GetSensorType(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetSensorType(System.IntPtr)
  name.vb: GetSensorType(IntPtr)
- uid: SharpSDL3.Sdl.GetSensorTypeForID(System.UInt32)
  commentId: M:SharpSDL3.Sdl.GetSensorTypeForID(System.UInt32)
  id: GetSensorTypeForID(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetSensorTypeForID(uint)
  nameWithType: Sdl.GetSensorTypeForID(uint)
  fullName: SharpSDL3.Sdl.GetSensorTypeForID(uint)
  type: Method
  source:
    remote:
      path: SDL3/Sensors.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetSensorTypeForID
    path: ../../repos/SDL3-CS/SDL3/Sensors.cs
    startLine: 203
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the type of a sensor.
  remarks: >-
    This can be called before any sensors are opened.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static SensorType GetSensorTypeForID(uint instanceId)
    parameters:
    - id: instanceId
      type: System.UInt32
    return:
      type: SharpSDL3.Enums.SensorType
      description: Returns theSDL_SensorType, orSDL_SENSOR_INVALID if instance_id is not valid.
    content.vb: Public Shared Function GetSensorTypeForID(instanceId As UInteger) As SensorType
  overload: SharpSDL3.Sdl.GetSensorTypeForID*
  nameWithType.vb: Sdl.GetSensorTypeForID(UInteger)
  fullName.vb: SharpSDL3.Sdl.GetSensorTypeForID(UInteger)
  name.vb: GetSensorTypeForID(UInteger)
- uid: SharpSDL3.Sdl.OpenSensor(System.UInt32)
  commentId: M:SharpSDL3.Sdl.OpenSensor(System.UInt32)
  id: OpenSensor(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: OpenSensor(uint)
  nameWithType: Sdl.OpenSensor(uint)
  fullName: SharpSDL3.Sdl.OpenSensor(uint)
  type: Method
  source:
    remote:
      path: SDL3/Sensors.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: OpenSensor
    path: ../../repos/SDL3-CS/SDL3/Sensors.cs
    startLine: 219
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Open a sensor for use.
  remarks: <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static nint OpenSensor(uint instanceId)
    parameters:
    - id: instanceId
      type: System.UInt32
    return:
      type: System.IntPtr
      description: (SDL_Sensor *) Returns an SDL_Sensor object or<a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function OpenSensor(instanceId As UInteger) As IntPtr
  overload: SharpSDL3.Sdl.OpenSensor*
  nameWithType.vb: Sdl.OpenSensor(UInteger)
  fullName.vb: SharpSDL3.Sdl.OpenSensor(UInteger)
  name.vb: OpenSensor(UInteger)
- uid: SharpSDL3.Sdl.UpdateSensors
  commentId: M:SharpSDL3.Sdl.UpdateSensors
  id: UpdateSensors
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: UpdateSensors()
  nameWithType: Sdl.UpdateSensors()
  fullName: SharpSDL3.Sdl.UpdateSensors()
  type: Method
  source:
    remote:
      path: SDL3/Sensors.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: UpdateSensors
    path: ../../repos/SDL3-CS/SDL3/Sensors.cs
    startLine: 234
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Update the current state of the open sensors.
  remarks: >-
    This is called automatically by the event loop if sensor events are

    enabled.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static void UpdateSensors()
    content.vb: Public Shared Sub UpdateSensors()
  overload: SharpSDL3.Sdl.UpdateSensors*
- uid: SharpSDL3.Sdl.CloseStorage(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.CloseStorage(System.IntPtr)
  id: CloseStorage(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CloseStorage(nint)
  nameWithType: Sdl.CloseStorage(nint)
  fullName: SharpSDL3.Sdl.CloseStorage(nint)
  type: Method
  source:
    remote:
      path: SDL3/Storage.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CloseStorage
    path: ../../repos/SDL3-CS/SDL3/Storage.cs
    startLine: 22
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Closes and frees a storage container.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.OpenFileStorage(System.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.OpenStorage(SharpSDL3.Structs.StorageInterface%40%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.OpenTitleStorage(System.String%2cSystem.UInt32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.OpenUserStorage(System.String%2cSystem.String%2cSystem.UInt32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void CloseStorage(nint storage)
    parameters:
    - id: storage
      type: System.IntPtr
      description: a storage container to close.
    content.vb: Public Shared Sub CloseStorage(storage As IntPtr)
  overload: SharpSDL3.Sdl.CloseStorage*
  nameWithType.vb: Sdl.CloseStorage(IntPtr)
  fullName.vb: SharpSDL3.Sdl.CloseStorage(System.IntPtr)
  name.vb: CloseStorage(IntPtr)
- uid: SharpSDL3.Sdl.CopyStorageFile(System.IntPtr,System.String,System.String)
  commentId: M:SharpSDL3.Sdl.CopyStorageFile(System.IntPtr,System.String,System.String)
  id: CopyStorageFile(System.IntPtr,System.String,System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CopyStorageFile(nint, string, string)
  nameWithType: Sdl.CopyStorageFile(nint, string, string)
  fullName: SharpSDL3.Sdl.CopyStorageFile(nint, string, string)
  type: Method
  source:
    remote:
      path: SDL3/Storage.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CopyStorageFile
    path: ../../repos/SDL3-CS/SDL3/Storage.cs
    startLine: 43
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Copy a file in a writable storage container.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    StorageReady
  example: []
  syntax:
    content: public static bool CopyStorageFile(nint storage, string oldpath, string newpath)
    parameters:
    - id: storage
      type: System.IntPtr
      description: a storage container.
    - id: oldpath
      type: System.String
      description: the old path.
    - id: newpath
      type: System.String
      description: the new path.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function CopyStorageFile(storage As IntPtr, oldpath As String, newpath As String) As Boolean
  overload: SharpSDL3.Sdl.CopyStorageFile*
  nameWithType.vb: Sdl.CopyStorageFile(IntPtr, String, String)
  fullName.vb: SharpSDL3.Sdl.CopyStorageFile(System.IntPtr, String, String)
  name.vb: CopyStorageFile(IntPtr, String, String)
- uid: SharpSDL3.Sdl.CreateStorageDirectory(System.IntPtr,System.String)
  commentId: M:SharpSDL3.Sdl.CreateStorageDirectory(System.IntPtr,System.String)
  id: CreateStorageDirectory(System.IntPtr,System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CreateStorageDirectory(nint, string)
  nameWithType: Sdl.CreateStorageDirectory(nint, string)
  fullName: SharpSDL3.Sdl.CreateStorageDirectory(nint, string)
  type: Method
  source:
    remote:
      path: SDL3/Storage.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CreateStorageDirectory
    path: ../../repos/SDL3-CS/SDL3/Storage.cs
    startLine: 66
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Create a directory in a writable storage container.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    StorageReady
  example: []
  syntax:
    content: public static bool CreateStorageDirectory(nint storage, string path)
    parameters:
    - id: storage
      type: System.IntPtr
      description: a storage container.
    - id: path
      type: System.String
      description: the path of the directory to create.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function CreateStorageDirectory(storage As IntPtr, path As String) As Boolean
  overload: SharpSDL3.Sdl.CreateStorageDirectory*
  nameWithType.vb: Sdl.CreateStorageDirectory(IntPtr, String)
  fullName.vb: SharpSDL3.Sdl.CreateStorageDirectory(System.IntPtr, String)
  name.vb: CreateStorageDirectory(IntPtr, String)
- uid: SharpSDL3.Sdl.EnumerateStorageDirectory(System.IntPtr,System.String,SharpSDL3.Delegates.SdlEnumerateDirectoryCallback,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.EnumerateStorageDirectory(System.IntPtr,System.String,SharpSDL3.Delegates.SdlEnumerateDirectoryCallback,System.IntPtr)
  id: EnumerateStorageDirectory(System.IntPtr,System.String,SharpSDL3.Delegates.SdlEnumerateDirectoryCallback,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: EnumerateStorageDirectory(nint, string, SdlEnumerateDirectoryCallback, nint)
  nameWithType: Sdl.EnumerateStorageDirectory(nint, string, Delegates.SdlEnumerateDirectoryCallback, nint)
  fullName: SharpSDL3.Sdl.EnumerateStorageDirectory(nint, string, SharpSDL3.Delegates.SdlEnumerateDirectoryCallback, nint)
  type: Method
  source:
    remote:
      path: SDL3/Storage.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: EnumerateStorageDirectory
    path: ../../repos/SDL3-CS/SDL3/Storage.cs
    startLine: 93
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Enumerate a directory in a storage container through a callback function.
  remarks: >-
    This function provides every directory entry through an app-provided

    callback, called once for each directory entry, until all results have been

    provided or the callback returns either

    SDL_ENUM_SUCCESS or

    SDL_ENUM_FAILURE.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    StorageReady
  example: []
  syntax:
    content: public static bool EnumerateStorageDirectory(nint storage, string path, Delegates.SdlEnumerateDirectoryCallback callback, nint userdata = 0)
    parameters:
    - id: storage
      type: System.IntPtr
      description: a storage container.
    - id: path
      type: System.String
      description: the path of the directory to enumerate, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for the root.
    - id: callback
      type: SharpSDL3.Delegates.SdlEnumerateDirectoryCallback
      description: a function that is called for each entry in the directory.
    - id: userdata
      type: System.IntPtr
      description: a pointer that is passed to callback.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function EnumerateStorageDirectory(storage As IntPtr, path As String, callback As Delegates.SdlEnumerateDirectoryCallback, userdata As IntPtr = 0) As Boolean
  overload: SharpSDL3.Sdl.EnumerateStorageDirectory*
  nameWithType.vb: Sdl.EnumerateStorageDirectory(IntPtr, String, Delegates.SdlEnumerateDirectoryCallback, IntPtr)
  fullName.vb: SharpSDL3.Sdl.EnumerateStorageDirectory(System.IntPtr, String, SharpSDL3.Delegates.SdlEnumerateDirectoryCallback, System.IntPtr)
  name.vb: EnumerateStorageDirectory(IntPtr, String, SdlEnumerateDirectoryCallback, IntPtr)
- uid: SharpSDL3.Sdl.GetStorageFileSize(System.IntPtr,System.String)
  commentId: M:SharpSDL3.Sdl.GetStorageFileSize(System.IntPtr,System.String)
  id: GetStorageFileSize(System.IntPtr,System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetStorageFileSize(nint, string)
  nameWithType: Sdl.GetStorageFileSize(nint, string)
  fullName: SharpSDL3.Sdl.GetStorageFileSize(nint, string)
  type: Method
  source:
    remote:
      path: SDL3/Storage.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetStorageFileSize
    path: ../../repos/SDL3-CS/SDL3/Storage.cs
    startLine: 118
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Query the size of a file within a storage container.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.ReadStorageFile(System.IntPtr%2cSystem.String%2cSystem.IntPtr%2cSystem.UInt64)" data-throw-if-not-resolved="false"></xref>

    StorageReady
  example: []
  syntax:
    content: public static ulong GetStorageFileSize(nint storage, string path)
    parameters:
    - id: storage
      type: System.IntPtr
      description: a storage container to query.
    - id: path
      type: System.String
      description: the relative path of the file to query.
    return:
      type: System.UInt64
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the file could be queried or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetStorageFileSize(storage As IntPtr, path As String) As ULong
  overload: SharpSDL3.Sdl.GetStorageFileSize*
  nameWithType.vb: Sdl.GetStorageFileSize(IntPtr, String)
  fullName.vb: SharpSDL3.Sdl.GetStorageFileSize(System.IntPtr, String)
  name.vb: GetStorageFileSize(IntPtr, String)
- uid: SharpSDL3.Sdl.GetStoragePathInfo(System.IntPtr,System.String)
  commentId: M:SharpSDL3.Sdl.GetStoragePathInfo(System.IntPtr,System.String)
  id: GetStoragePathInfo(System.IntPtr,System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetStoragePathInfo(nint, string)
  nameWithType: Sdl.GetStoragePathInfo(nint, string)
  fullName: SharpSDL3.Sdl.GetStoragePathInfo(nint, string)
  type: Method
  source:
    remote:
      path: SDL3/Storage.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetStoragePathInfo
    path: ../../repos/SDL3-CS/SDL3/Storage.cs
    startLine: 143
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get information about a filesystem path in a storage container.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    StorageReady
  example: []
  syntax:
    content: public static PathInfo GetStoragePathInfo(nint storage, string path)
    parameters:
    - id: storage
      type: System.IntPtr
      description: a storage container.
    - id: path
      type: System.String
      description: the path to query.
    return:
      type: SharpSDL3.Structs.PathInfo
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if the file doesn't exist, oranother failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetStoragePathInfo(storage As IntPtr, path As String) As PathInfo
  overload: SharpSDL3.Sdl.GetStoragePathInfo*
  nameWithType.vb: Sdl.GetStoragePathInfo(IntPtr, String)
  fullName.vb: SharpSDL3.Sdl.GetStoragePathInfo(System.IntPtr, String)
  name.vb: GetStoragePathInfo(IntPtr, String)
- uid: SharpSDL3.Sdl.GetStorageSpaceRemaining(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetStorageSpaceRemaining(System.IntPtr)
  id: GetStorageSpaceRemaining(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetStorageSpaceRemaining(nint)
  nameWithType: Sdl.GetStorageSpaceRemaining(nint)
  fullName: SharpSDL3.Sdl.GetStorageSpaceRemaining(nint)
  type: Method
  source:
    remote:
      path: SDL3/Storage.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetStorageSpaceRemaining
    path: ../../repos/SDL3-CS/SDL3/Storage.cs
    startLine: 167
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Queries the remaining space in a storage container.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    StorageReady

    <xref href="SharpSDL3.Sdl.WriteStorageFile(System.IntPtr%2cSystem.String%2cSystem.IntPtr%2cSystem.UInt64)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static ulong GetStorageSpaceRemaining(nint storage)
    parameters:
    - id: storage
      type: System.IntPtr
      description: a storage container to query.
    return:
      type: System.UInt64
      description: Returns the amount of remaining space, in bytes.
    content.vb: Public Shared Function GetStorageSpaceRemaining(storage As IntPtr) As ULong
  overload: SharpSDL3.Sdl.GetStorageSpaceRemaining*
  nameWithType.vb: Sdl.GetStorageSpaceRemaining(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetStorageSpaceRemaining(System.IntPtr)
  name.vb: GetStorageSpaceRemaining(IntPtr)
- uid: SharpSDL3.Sdl.GlobStorageDirectory(System.IntPtr,System.String,System.String,SharpSDL3.Enums.GlobFlags,System.Int32@)
  commentId: M:SharpSDL3.Sdl.GlobStorageDirectory(System.IntPtr,System.String,System.String,SharpSDL3.Enums.GlobFlags,System.Int32@)
  id: GlobStorageDirectory(System.IntPtr,System.String,System.String,SharpSDL3.Enums.GlobFlags,System.Int32@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GlobStorageDirectory(nint, string, string, GlobFlags, out int)
  nameWithType: Sdl.GlobStorageDirectory(nint, string, string, GlobFlags, out int)
  fullName: SharpSDL3.Sdl.GlobStorageDirectory(nint, string, string, SharpSDL3.Enums.GlobFlags, out int)
  type: Method
  source:
    remote:
      path: SDL3/Storage.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GlobStorageDirectory
    path: ../../repos/SDL3-CS/SDL3/Storage.cs
    startLine: 193
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Enumerate a directory tree, filtered by pattern, and return a list.
  remarks: >-
    Files are filtered out if they don't match the string in pattern, which

    may contain wildcard characters * (match everything) and ? (match one

    character). If pattern is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>, no filtering is done and all results are

    returned. Subdirectories are permitted, and are specified with a path

    separator of '/'. Wildcard characters * and ? never match a path

    separator.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread, assuming the storageobject is thread-safe.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static nint GlobStorageDirectory(nint storage, string path, string pattern, GlobFlags flags, out int count)
    parameters:
    - id: storage
      type: System.IntPtr
      description: a storage container.
    - id: path
      type: System.String
      description: the path of the directory to enumerate, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for the root.
    - id: pattern
      type: System.String
      description: the pattern that files in the directory must match. Can be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    - id: flags
      type: SharpSDL3.Enums.GlobFlags
      description: SDL_GLOB_* bitflags that affect this search.
    - id: count
      type: System.Int32
      description: on return, will be set to the number of items in the returned array. Can be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    return:
      type: System.IntPtr
      description: (char **) Returns an array of strings on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information. The caller should passthe returned pointer to SDL_free when done with it. This is asingle allocation that should be freed with <xref href="SharpSDL3.Sdl.Free(System.IntPtr)" data-throw-if-not-resolved="false"></xref> when itis no longer needed.
    content.vb: Public Shared Function GlobStorageDirectory(storage As IntPtr, path As String, pattern As String, flags As GlobFlags, count As Integer) As IntPtr
  overload: SharpSDL3.Sdl.GlobStorageDirectory*
  nameWithType.vb: Sdl.GlobStorageDirectory(IntPtr, String, String, GlobFlags, Integer)
  fullName.vb: SharpSDL3.Sdl.GlobStorageDirectory(System.IntPtr, String, String, SharpSDL3.Enums.GlobFlags, Integer)
  name.vb: GlobStorageDirectory(IntPtr, String, String, GlobFlags, Integer)
- uid: SharpSDL3.Sdl.IsStorageReady(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.IsStorageReady(System.IntPtr)
  id: IsStorageReady(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: IsStorageReady(nint)
  nameWithType: Sdl.IsStorageReady(nint)
  fullName: SharpSDL3.Sdl.IsStorageReady(nint)
  type: Method
  source:
    remote:
      path: SDL3/Storage.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: IsStorageReady
    path: ../../repos/SDL3-CS/SDL3/Storage.cs
    startLine: 210
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static bool IsStorageReady(nint storage)
    parameters:
    - id: storage
      type: System.IntPtr
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsStorageReady(storage As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.IsStorageReady*
  nameWithType.vb: Sdl.IsStorageReady(IntPtr)
  fullName.vb: SharpSDL3.Sdl.IsStorageReady(System.IntPtr)
  name.vb: IsStorageReady(IntPtr)
- uid: SharpSDL3.Sdl.OpenFileStorage(System.String)
  commentId: M:SharpSDL3.Sdl.OpenFileStorage(System.String)
  id: OpenFileStorage(System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: OpenFileStorage(string)
  nameWithType: Sdl.OpenFileStorage(string)
  fullName: SharpSDL3.Sdl.OpenFileStorage(string)
  type: Method
  source:
    remote:
      path: SDL3/Storage.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: OpenFileStorage
    path: ../../repos/SDL3-CS/SDL3/Storage.cs
    startLine: 235
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Opens up a container for local filesystem storage.
  remarks: >-
    This is provided for development and tools. Portable applications should

    use SDL_OpenTitleStorage() for access to game data

    and SDL_OpenUserStorage() for access to user data.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CloseStorage(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetStorageFileSize(System.IntPtr%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetStorageSpaceRemaining(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.OpenTitleStorage(System.String%2cSystem.UInt32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.OpenUserStorage(System.String%2cSystem.String%2cSystem.UInt32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.ReadStorageFile(System.IntPtr%2cSystem.String%2cSystem.IntPtr%2cSystem.UInt64)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.WriteStorageFile(System.IntPtr%2cSystem.String%2cSystem.IntPtr%2cSystem.UInt64)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint OpenFileStorage(string path)
    parameters:
    - id: path
      type: System.String
      description: the base path prepended to all storage paths, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for no base path.
    return:
      type: System.IntPtr
      description: (SDL_Storage *) Returns a filesystem storage container on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function OpenFileStorage(path As String) As IntPtr
  overload: SharpSDL3.Sdl.OpenFileStorage*
  nameWithType.vb: Sdl.OpenFileStorage(String)
  fullName.vb: SharpSDL3.Sdl.OpenFileStorage(String)
  name.vb: OpenFileStorage(String)
- uid: SharpSDL3.Sdl.OpenStorage(SharpSDL3.Structs.StorageInterface@,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.OpenStorage(SharpSDL3.Structs.StorageInterface@,System.IntPtr)
  id: OpenStorage(SharpSDL3.Structs.StorageInterface@,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: OpenStorage(ref StorageInterface, nint)
  nameWithType: Sdl.OpenStorage(ref StorageInterface, nint)
  fullName: SharpSDL3.Sdl.OpenStorage(ref SharpSDL3.Structs.StorageInterface, nint)
  type: Method
  source:
    remote:
      path: SDL3/Storage.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: OpenStorage
    path: ../../repos/SDL3-CS/SDL3/Storage.cs
    startLine: 263
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Opens up a container using a client-provided storage interface.
  remarks: >-
    Applications do not need to use this function unless they are providing

    their own SDL_Storage implementation. If you just need an

    SDL_Storage, you should use the built-in implementations in

    SDL, like SDL_OpenTitleStorage() or

    SDL_OpenUserStorage().

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CloseStorage(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetStorageFileSize(System.IntPtr%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetStorageSpaceRemaining(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    INIT_INTERFACE

    <xref href="SharpSDL3.Sdl.ReadStorageFile(System.IntPtr%2cSystem.String%2cSystem.IntPtr%2cSystem.UInt64)" data-throw-if-not-resolved="false"></xref>

    StorageReady

    <xref href="SharpSDL3.Sdl.WriteStorageFile(System.IntPtr%2cSystem.String%2cSystem.IntPtr%2cSystem.UInt64)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint OpenStorage(ref StorageInterface iface, nint userdata = 0)
    parameters:
    - id: iface
      type: SharpSDL3.Structs.StorageInterface
      description: the interface that implements this storage, initialized using SDL_INIT_INTERFACE().
    - id: userdata
      type: System.IntPtr
      description: the pointer that will be passed to the interface functions.
    return:
      type: System.IntPtr
      description: (SDL_Storage *) Returns a storage container on success or<a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function OpenStorage(iface As StorageInterface, userdata As IntPtr = 0) As IntPtr
  overload: SharpSDL3.Sdl.OpenStorage*
  nameWithType.vb: Sdl.OpenStorage(StorageInterface, IntPtr)
  fullName.vb: SharpSDL3.Sdl.OpenStorage(SharpSDL3.Structs.StorageInterface, System.IntPtr)
  name.vb: OpenStorage(StorageInterface, IntPtr)
- uid: SharpSDL3.Sdl.OpenTitleStorage(System.String,System.UInt32)
  commentId: M:SharpSDL3.Sdl.OpenTitleStorage(System.String,System.UInt32)
  id: OpenTitleStorage(System.String,System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: OpenTitleStorage(string?, uint)
  nameWithType: Sdl.OpenTitleStorage(string?, uint)
  fullName: SharpSDL3.Sdl.OpenTitleStorage(string?, uint)
  type: Method
  source:
    remote:
      path: SDL3/Storage.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: OpenTitleStorage
    path: ../../repos/SDL3-CS/SDL3/Storage.cs
    startLine: 287
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Opens up a read-only container for the application's filesystem.
  remarks: >-
    By default, SDL_OpenTitleStorage uses the generic

    storage implementation. When the path override is not provided, the generic

    implementation will use the output of SDL_GetBasePath as

    the base path.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CloseStorage(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetStorageFileSize(System.IntPtr%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.OpenUserStorage(System.String%2cSystem.String%2cSystem.UInt32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.ReadStorageFile(System.IntPtr%2cSystem.String%2cSystem.IntPtr%2cSystem.UInt64)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint OpenTitleStorage(string? @override = null, uint props = 0)
    parameters:
    - id: override
      type: System.String
      description: a path to override the backend's default title root.
    - id: props
      type: System.UInt32
      description: a property list that may contain backend-specific information.
    return:
      type: System.IntPtr
      description: (SDL_Storage *) Returns a title storage container on successor <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function OpenTitleStorage(override As String = Nothing, props As UInteger = 0) As IntPtr
  overload: SharpSDL3.Sdl.OpenTitleStorage*
  nameWithType.vb: Sdl.OpenTitleStorage(String, UInteger)
  fullName.vb: SharpSDL3.Sdl.OpenTitleStorage(String, UInteger)
  name.vb: OpenTitleStorage(String, UInteger)
- uid: SharpSDL3.Sdl.OpenUserStorage(System.String,System.String,System.UInt32)
  commentId: M:SharpSDL3.Sdl.OpenUserStorage(System.String,System.String,System.UInt32)
  id: OpenUserStorage(System.String,System.String,System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: OpenUserStorage(string, string, uint)
  nameWithType: Sdl.OpenUserStorage(string, string, uint)
  fullName: SharpSDL3.Sdl.OpenUserStorage(string, string, uint)
  type: Method
  source:
    remote:
      path: SDL3/Storage.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: OpenUserStorage
    path: ../../repos/SDL3-CS/SDL3/Storage.cs
    startLine: 315
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Opens up a container for a user's unique read/write filesystem.
  remarks: >-
    While title storage can generally be kept open throughout runtime, user

    storage should only be opened when the client is ready to read/write files.

    This allows the backend to properly batch file operations and flush them

    when the container has been closed; ensuring safe and optimal save I/O.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CloseStorage(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetStorageFileSize(System.IntPtr%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetStorageSpaceRemaining(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.OpenTitleStorage(System.String%2cSystem.UInt32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.ReadStorageFile(System.IntPtr%2cSystem.String%2cSystem.IntPtr%2cSystem.UInt64)" data-throw-if-not-resolved="false"></xref>

    StorageReady

    <xref href="SharpSDL3.Sdl.WriteStorageFile(System.IntPtr%2cSystem.String%2cSystem.IntPtr%2cSystem.UInt64)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint OpenUserStorage(string org, string app, uint props = 0)
    parameters:
    - id: org
      type: System.String
      description: the name of your organization.
    - id: app
      type: System.String
      description: the name of your application.
    - id: props
      type: System.UInt32
      description: a property list that may contain backend-specific information.
    return:
      type: System.IntPtr
      description: (SDL_Storage *) Returns a user storage container on successor <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function OpenUserStorage(org As String, app As String, props As UInteger = 0) As IntPtr
  overload: SharpSDL3.Sdl.OpenUserStorage*
  nameWithType.vb: Sdl.OpenUserStorage(String, String, UInteger)
  fullName.vb: SharpSDL3.Sdl.OpenUserStorage(String, String, UInteger)
  name.vb: OpenUserStorage(String, String, UInteger)
- uid: SharpSDL3.Sdl.ReadStorageFile(System.IntPtr,System.String,System.IntPtr,System.UInt64)
  commentId: M:SharpSDL3.Sdl.ReadStorageFile(System.IntPtr,System.String,System.IntPtr,System.UInt64)
  id: ReadStorageFile(System.IntPtr,System.String,System.IntPtr,System.UInt64)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ReadStorageFile(nint, string, nint, ulong)
  nameWithType: Sdl.ReadStorageFile(nint, string, nint, ulong)
  fullName: SharpSDL3.Sdl.ReadStorageFile(nint, string, nint, ulong)
  type: Method
  source:
    remote:
      path: SDL3/Storage.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ReadStorageFile
    path: ../../repos/SDL3-CS/SDL3/Storage.cs
    startLine: 339
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Synchronously read a file from a storage container into a client-provided buffer.
  remarks: >-
    The value of length must match the length of the file exactly; call

    SDL_GetStorageFileSize() to get this value. This

    behavior may be relaxed in a future release.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetStorageFileSize(System.IntPtr%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    StorageReady

    <xref href="SharpSDL3.Sdl.WriteStorageFile(System.IntPtr%2cSystem.String%2cSystem.IntPtr%2cSystem.UInt64)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool ReadStorageFile(nint storage, string path, nint destination, ulong length)
    parameters:
    - id: storage
      type: System.IntPtr
      description: a storage container to read from.
    - id: path
      type: System.String
      description: the relative path of the file to read.
    - id: destination
      type: System.IntPtr
      description: a client-provided buffer to read the file into.
    - id: length
      type: System.UInt64
      description: the length of the destination buffer.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the file was read or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function ReadStorageFile(storage As IntPtr, path As String, destination As IntPtr, length As ULong) As Boolean
  overload: SharpSDL3.Sdl.ReadStorageFile*
  nameWithType.vb: Sdl.ReadStorageFile(IntPtr, String, IntPtr, ULong)
  fullName.vb: SharpSDL3.Sdl.ReadStorageFile(System.IntPtr, String, System.IntPtr, ULong)
  name.vb: ReadStorageFile(IntPtr, String, IntPtr, ULong)
- uid: SharpSDL3.Sdl.RemoveStoragePath(System.IntPtr,System.String)
  commentId: M:SharpSDL3.Sdl.RemoveStoragePath(System.IntPtr,System.String)
  id: RemoveStoragePath(System.IntPtr,System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RemoveStoragePath(nint, string)
  nameWithType: Sdl.RemoveStoragePath(nint, string)
  fullName: SharpSDL3.Sdl.RemoveStoragePath(nint, string)
  type: Method
  source:
    remote:
      path: SDL3/Storage.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RemoveStoragePath
    path: ../../repos/SDL3-CS/SDL3/Storage.cs
    startLine: 359
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Remove a file or an empty directory in a writable storage container.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    StorageReady
  example: []
  syntax:
    content: public static bool RemoveStoragePath(nint storage, string path)
    parameters:
    - id: storage
      type: System.IntPtr
      description: a storage container.
    - id: path
      type: System.String
      description: the path of the directory to enumerate.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function RemoveStoragePath(storage As IntPtr, path As String) As Boolean
  overload: SharpSDL3.Sdl.RemoveStoragePath*
  nameWithType.vb: Sdl.RemoveStoragePath(IntPtr, String)
  fullName.vb: SharpSDL3.Sdl.RemoveStoragePath(System.IntPtr, String)
  name.vb: RemoveStoragePath(IntPtr, String)
- uid: SharpSDL3.Sdl.RenameStoragePath(System.IntPtr,System.String,System.String)
  commentId: M:SharpSDL3.Sdl.RenameStoragePath(System.IntPtr,System.String,System.String)
  id: RenameStoragePath(System.IntPtr,System.String,System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RenameStoragePath(nint, string, string)
  nameWithType: Sdl.RenameStoragePath(nint, string, string)
  fullName: SharpSDL3.Sdl.RenameStoragePath(nint, string, string)
  type: Method
  source:
    remote:
      path: SDL3/Storage.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RenameStoragePath
    path: ../../repos/SDL3-CS/SDL3/Storage.cs
    startLine: 380
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Rename a file or directory in a writable storage container.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    StorageReady
  example: []
  syntax:
    content: public static bool RenameStoragePath(nint storage, string oldpath, string newpath)
    parameters:
    - id: storage
      type: System.IntPtr
      description: a storage container.
    - id: oldpath
      type: System.String
      description: the old path.
    - id: newpath
      type: System.String
      description: the new path.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function RenameStoragePath(storage As IntPtr, oldpath As String, newpath As String) As Boolean
  overload: SharpSDL3.Sdl.RenameStoragePath*
  nameWithType.vb: Sdl.RenameStoragePath(IntPtr, String, String)
  fullName.vb: SharpSDL3.Sdl.RenameStoragePath(System.IntPtr, String, String)
  name.vb: RenameStoragePath(IntPtr, String, String)
- uid: SharpSDL3.Sdl.WriteStorageFile(System.IntPtr,System.String,System.IntPtr,System.UInt64)
  commentId: M:SharpSDL3.Sdl.WriteStorageFile(System.IntPtr,System.String,System.IntPtr,System.UInt64)
  id: WriteStorageFile(System.IntPtr,System.String,System.IntPtr,System.UInt64)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: WriteStorageFile(nint, string, nint, ulong)
  nameWithType: Sdl.WriteStorageFile(nint, string, nint, ulong)
  fullName: SharpSDL3.Sdl.WriteStorageFile(nint, string, nint, ulong)
  type: Method
  source:
    remote:
      path: SDL3/Storage.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: WriteStorageFile
    path: ../../repos/SDL3-CS/SDL3/Storage.cs
    startLine: 407
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Synchronously write a file from client memory into a storage container.
  remarks: >-
    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetStorageSpaceRemaining(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.ReadStorageFile(System.IntPtr%2cSystem.String%2cSystem.IntPtr%2cSystem.UInt64)" data-throw-if-not-resolved="false"></xref>

    StorageReady
  example: []
  syntax:
    content: public static bool WriteStorageFile(nint storage, string path, nint source, ulong length)
    parameters:
    - id: storage
      type: System.IntPtr
      description: a storage container to write to.
    - id: path
      type: System.String
      description: the relative path of the file to write.
    - id: source
      type: System.IntPtr
      description: a client-provided buffer to write from.
    - id: length
      type: System.UInt64
      description: the length of the source buffer.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the file was written or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function WriteStorageFile(storage As IntPtr, path As String, source As IntPtr, length As ULong) As Boolean
  overload: SharpSDL3.Sdl.WriteStorageFile*
  nameWithType.vb: Sdl.WriteStorageFile(IntPtr, String, IntPtr, ULong)
  fullName.vb: SharpSDL3.Sdl.WriteStorageFile(System.IntPtr, String, System.IntPtr, ULong)
  name.vb: WriteStorageFile(IntPtr, String, IntPtr, ULong)
- uid: SharpSDL3.Sdl.DateTimeToTime(SharpSDL3.Structs.DateTime@,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.DateTimeToTime(SharpSDL3.Structs.DateTime@,System.IntPtr)
  id: DateTimeToTime(SharpSDL3.Structs.DateTime@,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: DateTimeToTime(ref DateTime, nint)
  nameWithType: Sdl.DateTimeToTime(ref DateTime, nint)
  fullName: SharpSDL3.Sdl.DateTimeToTime(ref SharpSDL3.Structs.DateTime, nint)
  type: Method
  source:
    remote:
      path: SDL3/System.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: DateTimeToTime
    path: ../../repos/SDL3-CS/SDL3/System.cs
    startLine: 22
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Converts a calendar time to an SDL_Time in nanoseconds since the epoch.
  remarks: >-
    This function ignores the day_of_week member of the

    SDL_DateTime struct, so it may remain unset.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool DateTimeToTime(ref DateTime dt, nint ticks)
    parameters:
    - id: dt
      type: SharpSDL3.Structs.DateTime
      description: the source SDL_DateTime.
    - id: ticks
      type: System.IntPtr
      description: the resulting SDL_Time.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function DateTimeToTime(dt As DateTime, ticks As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.DateTimeToTime*
  nameWithType.vb: Sdl.DateTimeToTime(DateTime, IntPtr)
  fullName.vb: SharpSDL3.Sdl.DateTimeToTime(SharpSDL3.Structs.DateTime, System.IntPtr)
  name.vb: DateTimeToTime(DateTime, IntPtr)
- uid: SharpSDL3.Sdl.GetCurrentTime(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetCurrentTime(System.IntPtr)
  id: GetCurrentTime(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetCurrentTime(nint)
  nameWithType: Sdl.GetCurrentTime(nint)
  fullName: SharpSDL3.Sdl.GetCurrentTime(nint)
  type: Method
  source:
    remote:
      path: SDL3/System.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetCurrentTime
    path: ../../repos/SDL3-CS/SDL3/System.cs
    startLine: 34
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Gets the current value of the system realtime clock in nanoseconds since Jan 1, 1970 in Universal Coordinated Time (UTC).
  remarks: <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool GetCurrentTime(nint ticks)
    parameters:
    - id: ticks
      type: System.IntPtr
      description: the SDL_Time to hold the returned tick count.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetCurrentTime(ticks As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.GetCurrentTime*
  nameWithType.vb: Sdl.GetCurrentTime(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetCurrentTime(System.IntPtr)
  name.vb: GetCurrentTime(IntPtr)
- uid: SharpSDL3.Sdl.GetDateTimeLocalePreferences(SharpSDL3.Enums.DateFormat@,SharpSDL3.Enums.TimeFormat@)
  commentId: M:SharpSDL3.Sdl.GetDateTimeLocalePreferences(SharpSDL3.Enums.DateFormat@,SharpSDL3.Enums.TimeFormat@)
  id: GetDateTimeLocalePreferences(SharpSDL3.Enums.DateFormat@,SharpSDL3.Enums.TimeFormat@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetDateTimeLocalePreferences(out DateFormat, out TimeFormat)
  nameWithType: Sdl.GetDateTimeLocalePreferences(out DateFormat, out TimeFormat)
  fullName: SharpSDL3.Sdl.GetDateTimeLocalePreferences(out SharpSDL3.Enums.DateFormat, out SharpSDL3.Enums.TimeFormat)
  type: Method
  source:
    remote:
      path: SDL3/System.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetDateTimeLocalePreferences
    path: ../../repos/SDL3-CS/SDL3/System.cs
    startLine: 51
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Gets the current preferred date and time format for the system locale.
  remarks: >-
    This might be a "slow" call that has to query the operating system. It's

    best to ask for this once and save the results. However, the preferred

    formats can change, usually because the user has changed a system

    preference outside of your program.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool GetDateTimeLocalePreferences(out DateFormat dateFormat, out TimeFormat timeFormat)
    parameters:
    - id: dateFormat
      type: SharpSDL3.Enums.DateFormat
      description: a pointer to the SDL_DateFormat to hold the returned date format, may be discarded.
    - id: timeFormat
      type: SharpSDL3.Enums.TimeFormat
      description: a pointer to the SDL_TimeFormat to hold the returned time format, may be discarded.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetDateTimeLocalePreferences(dateFormat As DateFormat, timeFormat As TimeFormat) As Boolean
  overload: SharpSDL3.Sdl.GetDateTimeLocalePreferences*
  nameWithType.vb: Sdl.GetDateTimeLocalePreferences(DateFormat, TimeFormat)
  fullName.vb: SharpSDL3.Sdl.GetDateTimeLocalePreferences(SharpSDL3.Enums.DateFormat, SharpSDL3.Enums.TimeFormat)
  name.vb: GetDateTimeLocalePreferences(DateFormat, TimeFormat)
- uid: SharpSDL3.Sdl.GetDayOfWeek(System.Int32,System.Int32,System.Int32)
  commentId: M:SharpSDL3.Sdl.GetDayOfWeek(System.Int32,System.Int32,System.Int32)
  id: GetDayOfWeek(System.Int32,System.Int32,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetDayOfWeek(int, int, int)
  nameWithType: Sdl.GetDayOfWeek(int, int, int)
  fullName: SharpSDL3.Sdl.GetDayOfWeek(int, int, int)
  type: Method
  source:
    remote:
      path: SDL3/System.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetDayOfWeek
    path: ../../repos/SDL3-CS/SDL3/System.cs
    startLine: 65
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the day of week for a calendar date.
  remarks: <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static int GetDayOfWeek(int year, int month, int day)
    parameters:
    - id: year
      type: System.Int32
      description: the year component of the date.
    - id: month
      type: System.Int32
      description: the month component of the date.
    - id: day
      type: System.Int32
      description: the day component of the date.
    return:
      type: System.Int32
      description: Returns a value between 0 and 6 (0 being Sunday) if the date is validor -1 on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetDayOfWeek(year As Integer, month As Integer, day As Integer) As Integer
  overload: SharpSDL3.Sdl.GetDayOfWeek*
  nameWithType.vb: Sdl.GetDayOfWeek(Integer, Integer, Integer)
  fullName.vb: SharpSDL3.Sdl.GetDayOfWeek(Integer, Integer, Integer)
  name.vb: GetDayOfWeek(Integer, Integer, Integer)
- uid: SharpSDL3.Sdl.GetDayOfYear(System.Int32,System.Int32,System.Int32)
  commentId: M:SharpSDL3.Sdl.GetDayOfYear(System.Int32,System.Int32,System.Int32)
  id: GetDayOfYear(System.Int32,System.Int32,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetDayOfYear(int, int, int)
  nameWithType: Sdl.GetDayOfYear(int, int, int)
  fullName: SharpSDL3.Sdl.GetDayOfYear(int, int, int)
  type: Method
  source:
    remote:
      path: SDL3/System.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetDayOfYear
    path: ../../repos/SDL3-CS/SDL3/System.cs
    startLine: 85
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the day of year for a calendar date.
  remarks: <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static int GetDayOfYear(int year, int month, int day)
    parameters:
    - id: year
      type: System.Int32
      description: the year component of the date.
    - id: month
      type: System.Int32
      description: the month component of the date.
    - id: day
      type: System.Int32
      description: the day component of the date.
    return:
      type: System.Int32
      description: Returns the day of year [0-365] if the date is valid or -1 on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetDayOfYear(year As Integer, month As Integer, day As Integer) As Integer
  overload: SharpSDL3.Sdl.GetDayOfYear*
  nameWithType.vb: Sdl.GetDayOfYear(Integer, Integer, Integer)
  fullName.vb: SharpSDL3.Sdl.GetDayOfYear(Integer, Integer, Integer)
  name.vb: GetDayOfYear(Integer, Integer, Integer)
- uid: SharpSDL3.Sdl.GetDaysInMonth(System.Int32,System.Int32)
  commentId: M:SharpSDL3.Sdl.GetDaysInMonth(System.Int32,System.Int32)
  id: GetDaysInMonth(System.Int32,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetDaysInMonth(int, int)
  nameWithType: Sdl.GetDaysInMonth(int, int)
  fullName: SharpSDL3.Sdl.GetDaysInMonth(int, int)
  type: Method
  source:
    remote:
      path: SDL3/System.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetDaysInMonth
    path: ../../repos/SDL3-CS/SDL3/System.cs
    startLine: 104
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the number of days in a month for a given year.
  remarks: <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static int GetDaysInMonth(int year, int month)
    parameters:
    - id: year
      type: System.Int32
      description: the year.
    - id: month
      type: System.Int32
      description: the month [1-12].
    return:
      type: System.Int32
      description: Returns the number of days in the requested month or -1 on failure;call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetDaysInMonth(year As Integer, month As Integer) As Integer
  overload: SharpSDL3.Sdl.GetDaysInMonth*
  nameWithType.vb: Sdl.GetDaysInMonth(Integer, Integer)
  fullName.vb: SharpSDL3.Sdl.GetDaysInMonth(Integer, Integer)
  name.vb: GetDaysInMonth(Integer, Integer)
- uid: SharpSDL3.Sdl.GetMonth(System.Int32,System.Boolean)
  commentId: M:SharpSDL3.Sdl.GetMonth(System.Int32,System.Boolean)
  id: GetMonth(System.Int32,System.Boolean)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetMonth(int, bool)
  nameWithType: Sdl.GetMonth(int, bool)
  fullName: SharpSDL3.Sdl.GetMonth(int, bool)
  type: Method
  source:
    remote:
      path: SDL3/System.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetMonth
    path: ../../repos/SDL3-CS/SDL3/System.cs
    startLine: 111
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static string GetMonth(int month, bool shortCode = false)
    parameters:
    - id: month
      type: System.Int32
    - id: shortCode
      type: System.Boolean
    return:
      type: System.String
    content.vb: Public Shared Function GetMonth(month As Integer, shortCode As Boolean = False) As String
  overload: SharpSDL3.Sdl.GetMonth*
  nameWithType.vb: Sdl.GetMonth(Integer, Boolean)
  fullName.vb: SharpSDL3.Sdl.GetMonth(Integer, Boolean)
  name.vb: GetMonth(Integer, Boolean)
- uid: SharpSDL3.Sdl.GetSandbox
  commentId: M:SharpSDL3.Sdl.GetSandbox
  id: GetSandbox
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetSandbox()
  nameWithType: Sdl.GetSandbox()
  fullName: SharpSDL3.Sdl.GetSandbox()
  type: Method
  source:
    remote:
      path: SDL3/System.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetSandbox
    path: ../../repos/SDL3-CS/SDL3/System.cs
    startLine: 140
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the application sandbox environment, if any.
  remarks: <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static Sandbox GetSandbox()
    return:
      type: SharpSDL3.Enums.Sandbox
      description: Returns the application sandbox environment orSDL_SANDBOX_NONE if the application is not running in asandbox environment.
    content.vb: Public Shared Function GetSandbox() As Sandbox
  overload: SharpSDL3.Sdl.GetSandbox*
- uid: SharpSDL3.Sdl.IsTablet
  commentId: M:SharpSDL3.Sdl.IsTablet
  id: IsTablet
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: IsTablet()
  nameWithType: Sdl.IsTablet()
  fullName: SharpSDL3.Sdl.IsTablet()
  type: Method
  source:
    remote:
      path: SDL3/System.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: IsTablet
    path: ../../repos/SDL3-CS/SDL3/System.cs
    startLine: 151
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Query if the current device is a tablet.
  remarks: >-
    If SDL can't determine this, it will return false.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool IsTablet()
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the device is a tablet, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Public Shared Function IsTablet() As Boolean
  overload: SharpSDL3.Sdl.IsTablet*
- uid: SharpSDL3.Sdl.IsTV
  commentId: M:SharpSDL3.Sdl.IsTV
  id: IsTV
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: IsTV()
  nameWithType: Sdl.IsTV()
  fullName: SharpSDL3.Sdl.IsTV()
  type: Method
  source:
    remote:
      path: SDL3/System.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: IsTV
    path: ../../repos/SDL3-CS/SDL3/System.cs
    startLine: 162
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Query if the current device is a TV.
  remarks: >-
    If SDL can't determine this, it will return false.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool IsTV()
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the device is a TV, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Public Shared Function IsTV() As Boolean
  overload: SharpSDL3.Sdl.IsTV*
- uid: SharpSDL3.Sdl.OnApplicationDidEnterBackground
  commentId: M:SharpSDL3.Sdl.OnApplicationDidEnterBackground
  id: OnApplicationDidEnterBackground
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: OnApplicationDidEnterBackground()
  nameWithType: Sdl.OnApplicationDidEnterBackground()
  fullName: SharpSDL3.Sdl.OnApplicationDidEnterBackground()
  type: Method
  source:
    remote:
      path: SDL3/System.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: OnApplicationDidEnterBackground
    path: ../../repos/SDL3-CS/SDL3/System.cs
    startLine: 179
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Let iOS apps with external event handling report onApplicationDidEnterBackground.
  remarks: >-
    This functions allows iOS apps that have their own event handling to hook

    into SDL to generate SDL events. This maps directly to an iOS-specific

    event, but since it doesn't do anything iOS-specific internally, it is

    available on all platforms, in case it might be useful for some specific

    paradigm. Most apps do not need to use this directly; SDL's internal event

    code will handle all this for windows created by

    SDL_CreateWindow!

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static void OnApplicationDidEnterBackground()
    content.vb: Public Shared Sub OnApplicationDidEnterBackground()
  overload: SharpSDL3.Sdl.OnApplicationDidEnterBackground*
- uid: SharpSDL3.Sdl.OnApplicationDidEnterForeground
  commentId: M:SharpSDL3.Sdl.OnApplicationDidEnterForeground
  id: OnApplicationDidEnterForeground
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: OnApplicationDidEnterForeground()
  nameWithType: Sdl.OnApplicationDidEnterForeground()
  fullName: SharpSDL3.Sdl.OnApplicationDidEnterForeground()
  type: Method
  source:
    remote:
      path: SDL3/System.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: OnApplicationDidEnterForeground
    path: ../../repos/SDL3-CS/SDL3/System.cs
    startLine: 196
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Let iOS apps with external event handling report onApplicationDidBecomeActive.
  remarks: >-
    This functions allows iOS apps that have their own event handling to hook

    into SDL to generate SDL events. This maps directly to an iOS-specific

    event, but since it doesn't do anything iOS-specific internally, it is

    available on all platforms, in case it might be useful for some specific

    paradigm. Most apps do not need to use this directly; SDL's internal event

    code will handle all this for windows created by

    SDL_CreateWindow!

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static void OnApplicationDidEnterForeground()
    content.vb: Public Shared Sub OnApplicationDidEnterForeground()
  overload: SharpSDL3.Sdl.OnApplicationDidEnterForeground*
- uid: SharpSDL3.Sdl.OnApplicationDidReceiveMemoryWarning
  commentId: M:SharpSDL3.Sdl.OnApplicationDidReceiveMemoryWarning
  id: OnApplicationDidReceiveMemoryWarning
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: OnApplicationDidReceiveMemoryWarning()
  nameWithType: Sdl.OnApplicationDidReceiveMemoryWarning()
  fullName: SharpSDL3.Sdl.OnApplicationDidReceiveMemoryWarning()
  type: Method
  source:
    remote:
      path: SDL3/System.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: OnApplicationDidReceiveMemoryWarning
    path: ../../repos/SDL3-CS/SDL3/System.cs
    startLine: 213
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Let iOS apps with external event handling report onApplicationDidReceiveMemoryWarning.
  remarks: >-
    This functions allows iOS apps that have their own event handling to hook

    into SDL to generate SDL events. This maps directly to an iOS-specific

    event, but since it doesn't do anything iOS-specific internally, it is

    available on all platforms, in case it might be useful for some specific

    paradigm. Most apps do not need to use this directly; SDL's internal event

    code will handle all this for windows created by

    SDL_CreateWindow!

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static void OnApplicationDidReceiveMemoryWarning()
    content.vb: Public Shared Sub OnApplicationDidReceiveMemoryWarning()
  overload: SharpSDL3.Sdl.OnApplicationDidReceiveMemoryWarning*
- uid: SharpSDL3.Sdl.OnApplicationWillEnterBackground
  commentId: M:SharpSDL3.Sdl.OnApplicationWillEnterBackground
  id: OnApplicationWillEnterBackground
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: OnApplicationWillEnterBackground()
  nameWithType: Sdl.OnApplicationWillEnterBackground()
  fullName: SharpSDL3.Sdl.OnApplicationWillEnterBackground()
  type: Method
  source:
    remote:
      path: SDL3/System.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: OnApplicationWillEnterBackground
    path: ../../repos/SDL3-CS/SDL3/System.cs
    startLine: 230
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Let iOS apps with external event handling report onApplicationWillResignActive.
  remarks: >-
    This functions allows iOS apps that have their own event handling to hook

    into SDL to generate SDL events. This maps directly to an iOS-specific

    event, but since it doesn't do anything iOS-specific internally, it is

    available on all platforms, in case it might be useful for some specific

    paradigm. Most apps do not need to use this directly; SDL's internal event

    code will handle all this for windows created by

    SDL_CreateWindow!

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static void OnApplicationWillEnterBackground()
    content.vb: Public Shared Sub OnApplicationWillEnterBackground()
  overload: SharpSDL3.Sdl.OnApplicationWillEnterBackground*
- uid: SharpSDL3.Sdl.OnApplicationWillEnterForeground
  commentId: M:SharpSDL3.Sdl.OnApplicationWillEnterForeground
  id: OnApplicationWillEnterForeground
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: OnApplicationWillEnterForeground()
  nameWithType: Sdl.OnApplicationWillEnterForeground()
  fullName: SharpSDL3.Sdl.OnApplicationWillEnterForeground()
  type: Method
  source:
    remote:
      path: SDL3/System.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: OnApplicationWillEnterForeground
    path: ../../repos/SDL3-CS/SDL3/System.cs
    startLine: 247
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Let iOS apps with external event handling report onApplicationWillEnterForeground.
  remarks: >-
    This functions allows iOS apps that have their own event handling to hook

    into SDL to generate SDL events. This maps directly to an iOS-specific

    event, but since it doesn't do anything iOS-specific internally, it is

    available on all platforms, in case it might be useful for some specific

    paradigm. Most apps do not need to use this directly; SDL's internal event

    code will handle all this for windows created by

    SDL_CreateWindow!

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static void OnApplicationWillEnterForeground()
    content.vb: Public Shared Sub OnApplicationWillEnterForeground()
  overload: SharpSDL3.Sdl.OnApplicationWillEnterForeground*
- uid: SharpSDL3.Sdl.OnApplicationWillTerminate
  commentId: M:SharpSDL3.Sdl.OnApplicationWillTerminate
  id: OnApplicationWillTerminate
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: OnApplicationWillTerminate()
  nameWithType: Sdl.OnApplicationWillTerminate()
  fullName: SharpSDL3.Sdl.OnApplicationWillTerminate()
  type: Method
  source:
    remote:
      path: SDL3/System.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: OnApplicationWillTerminate
    path: ../../repos/SDL3-CS/SDL3/System.cs
    startLine: 264
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Let iOS apps with external event handling report onApplicationWillTerminate.
  remarks: >-
    This functions allows iOS apps that have their own event handling to hook

    into SDL to generate SDL events. This maps directly to an iOS-specific

    event, but since it doesn't do anything iOS-specific internally, it is

    available on all platforms, in case it might be useful for some specific

    paradigm. Most apps do not need to use this directly; SDL's internal event

    code will handle all this for windows created by

    SDL_CreateWindow!

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static void OnApplicationWillTerminate()
    content.vb: Public Shared Sub OnApplicationWillTerminate()
  overload: SharpSDL3.Sdl.OnApplicationWillTerminate*
- uid: SharpSDL3.Sdl.TimeFromWindows(System.UInt32,System.UInt32)
  commentId: M:SharpSDL3.Sdl.TimeFromWindows(System.UInt32,System.UInt32)
  id: TimeFromWindows(System.UInt32,System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: TimeFromWindows(uint, uint)
  nameWithType: Sdl.TimeFromWindows(uint, uint)
  fullName: SharpSDL3.Sdl.TimeFromWindows(uint, uint)
  type: Method
  source:
    remote:
      path: SDL3/System.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: TimeFromWindows
    path: ../../repos/SDL3-CS/SDL3/System.cs
    startLine: 279
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Converts a Windows FILETIME (100-nanosecond intervals since January 1, 1601) to an SDL time.
  remarks: >-
    This function takes the two 32-bit values of the FILETIME structure as

    parameters.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static long TimeFromWindows(uint dwLowDateTime, uint dwHighDateTime)
    parameters:
    - id: dwLowDateTime
      type: System.UInt32
      description: the low portion of the Windows FILETIME value.
    - id: dwHighDateTime
      type: System.UInt32
      description: the high portion of the Windows FILETIME value.
    return:
      type: System.Int64
      description: Returns the converted SDL time.
    content.vb: Public Shared Function TimeFromWindows(dwLowDateTime As UInteger, dwHighDateTime As UInteger) As Long
  overload: SharpSDL3.Sdl.TimeFromWindows*
  nameWithType.vb: Sdl.TimeFromWindows(UInteger, UInteger)
  fullName.vb: SharpSDL3.Sdl.TimeFromWindows(UInteger, UInteger)
  name.vb: TimeFromWindows(UInteger, UInteger)
- uid: SharpSDL3.Sdl.TimeToDateTime(System.Int64,SharpSDL3.Structs.DateTime@,System.Boolean)
  commentId: M:SharpSDL3.Sdl.TimeToDateTime(System.Int64,SharpSDL3.Structs.DateTime@,System.Boolean)
  id: TimeToDateTime(System.Int64,SharpSDL3.Structs.DateTime@,System.Boolean)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: TimeToDateTime(long, out DateTime, bool)
  nameWithType: Sdl.TimeToDateTime(long, out DateTime, bool)
  fullName: SharpSDL3.Sdl.TimeToDateTime(long, out SharpSDL3.Structs.DateTime, bool)
  type: Method
  source:
    remote:
      path: SDL3/System.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: TimeToDateTime
    path: ../../repos/SDL3-CS/SDL3/System.cs
    startLine: 293
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Converts an SDL_Time in nanoseconds since the epoch to a calendar time in the SDL_DateTime format.
  remarks: <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static bool TimeToDateTime(long ticks, out DateTime dt, bool localTime = true)
    parameters:
    - id: ticks
      type: System.Int64
      description: the SDL_Time to be converted.
    - id: dt
      type: SharpSDL3.Structs.DateTime
      description: the resulting SDL_DateTime.
    - id: localTime
      type: System.Boolean
      description: the resulting SDL_DateTime will be expressed in local time if <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, otherwise it will be in Universal Coordinated Time (UTC).
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function TimeToDateTime(ticks As Long, dt As DateTime, localTime As Boolean = True) As Boolean
  overload: SharpSDL3.Sdl.TimeToDateTime*
  nameWithType.vb: Sdl.TimeToDateTime(Long, DateTime, Boolean)
  fullName.vb: SharpSDL3.Sdl.TimeToDateTime(Long, SharpSDL3.Structs.DateTime, Boolean)
  name.vb: TimeToDateTime(Long, DateTime, Boolean)
- uid: SharpSDL3.Sdl.TimeToWindows(System.Int64,System.UInt32@,System.UInt32@)
  commentId: M:SharpSDL3.Sdl.TimeToWindows(System.Int64,System.UInt32@,System.UInt32@)
  id: TimeToWindows(System.Int64,System.UInt32@,System.UInt32@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: TimeToWindows(long, out uint, out uint)
  nameWithType: Sdl.TimeToWindows(long, out uint, out uint)
  fullName: SharpSDL3.Sdl.TimeToWindows(long, out uint, out uint)
  type: Method
  source:
    remote:
      path: SDL3/System.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: TimeToWindows
    path: ../../repos/SDL3-CS/SDL3/System.cs
    startLine: 308
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Converts an SDL time into a Windows FILETIME (100-nanosecond intervals since January 1, 1601).
  remarks: >-
    This function fills in the two 32-bit values of the FILETIME structure.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static void TimeToWindows(long ticks, out uint dwLowDateTime, out uint dwHighDateTime)
    parameters:
    - id: ticks
      type: System.Int64
      description: the time to convert.
    - id: dwLowDateTime
      type: System.UInt32
      description: a pointer filled in with the low portion of the Windows FILETIME value.
    - id: dwHighDateTime
      type: System.UInt32
      description: a pointer filled in with the high portion of the Windows FILETIME value.
    content.vb: Public Shared Sub TimeToWindows(ticks As Long, dwLowDateTime As UInteger, dwHighDateTime As UInteger)
  overload: SharpSDL3.Sdl.TimeToWindows*
  nameWithType.vb: Sdl.TimeToWindows(Long, UInteger, UInteger)
  fullName.vb: SharpSDL3.Sdl.TimeToWindows(Long, UInteger, UInteger)
  name.vb: TimeToWindows(Long, UInteger, UInteger)
- uid: SharpSDL3.Sdl.CreateTexture(System.IntPtr,SharpSDL3.Enums.PixelFormat,SharpSDL3.Enums.TextureAccess,System.Int32,System.Int32)
  commentId: M:SharpSDL3.Sdl.CreateTexture(System.IntPtr,SharpSDL3.Enums.PixelFormat,SharpSDL3.Enums.TextureAccess,System.Int32,System.Int32)
  id: CreateTexture(System.IntPtr,SharpSDL3.Enums.PixelFormat,SharpSDL3.Enums.TextureAccess,System.Int32,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CreateTexture(nint, PixelFormat, TextureAccess, int, int)
  nameWithType: Sdl.CreateTexture(nint, PixelFormat, TextureAccess, int, int)
  fullName: SharpSDL3.Sdl.CreateTexture(nint, SharpSDL3.Enums.PixelFormat, SharpSDL3.Enums.TextureAccess, int, int)
  type: Method
  source:
    remote:
      path: SDL3/Textures.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CreateTexture
    path: ../../repos/SDL3-CS/SDL3/Textures.cs
    startLine: 28
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Create a texture for a rendering context.
  remarks: >-
    The contents of a texture when first created are not defined.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateTextureFromSurface(System.IntPtr%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.CreateTextureWithProperties(System.IntPtr%2cSystem.UInt32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.DestroyTexture(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetTextureSize(System.IntPtr%2cSystem.Single%40%2cSystem.Single%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.UpdateTexture(System.IntPtr%2cSharpSDL3.Structs.Rect%40%2cSystem.IntPtr%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint CreateTexture(nint renderer, PixelFormat format, TextureAccess access, int w, int h)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the rendering context.
    - id: format
      type: SharpSDL3.Enums.PixelFormat
      description: one of the enumerated values in <xref href="SharpSDL3.Enums.PixelFormat" data-throw-if-not-resolved="false"></xref>.
    - id: access
      type: SharpSDL3.Enums.TextureAccess
      description: one of the enumerated values in SDL_TextureAccess.
    - id: w
      type: System.Int32
      description: the width of the texture in pixels.
    - id: h
      type: System.Int32
      description: the height of the texture in pixels.
    return:
      type: System.IntPtr
      description: (SDL_Texture *) Returns the created texture or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function CreateTexture(renderer As IntPtr, format As PixelFormat, access As TextureAccess, w As Integer, h As Integer) As IntPtr
  overload: SharpSDL3.Sdl.CreateTexture*
  nameWithType.vb: Sdl.CreateTexture(IntPtr, PixelFormat, TextureAccess, Integer, Integer)
  fullName.vb: SharpSDL3.Sdl.CreateTexture(System.IntPtr, SharpSDL3.Enums.PixelFormat, SharpSDL3.Enums.TextureAccess, Integer, Integer)
  name.vb: CreateTexture(IntPtr, PixelFormat, TextureAccess, Integer, Integer)
- uid: SharpSDL3.Sdl.CreateTextureFromSurface(System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.CreateTextureFromSurface(System.IntPtr,System.IntPtr)
  id: CreateTextureFromSurface(System.IntPtr,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CreateTextureFromSurface(nint, nint)
  nameWithType: Sdl.CreateTextureFromSurface(nint, nint)
  fullName: SharpSDL3.Sdl.CreateTextureFromSurface(nint, nint)
  type: Method
  source:
    remote:
      path: SDL3/Textures.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CreateTextureFromSurface
    path: ../../repos/SDL3-CS/SDL3/Textures.cs
    startLine: 59
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Create a texture from an existing surface.
  remarks: >-
    The surface is not modified or freed by this function.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateTexture(System.IntPtr%2cSharpSDL3.Enums.PixelFormat%2cSharpSDL3.Enums.TextureAccess%2cSystem.Int32%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.CreateTextureWithProperties(System.IntPtr%2cSystem.UInt32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.DestroyTexture(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint CreateTextureFromSurface(nint renderer, nint surface)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the rendering context.
    - id: surface
      type: System.IntPtr
      description: the <xref href="SharpSDL3.Structs.Surface" data-throw-if-not-resolved="false"></xref> structure containing pixel data used to fill the texture.
    return:
      type: System.IntPtr
      description: (SDL_Texture *) Returns the created texture or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function CreateTextureFromSurface(renderer As IntPtr, surface As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.CreateTextureFromSurface*
  nameWithType.vb: Sdl.CreateTextureFromSurface(IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.CreateTextureFromSurface(System.IntPtr, System.IntPtr)
  name.vb: CreateTextureFromSurface(IntPtr, IntPtr)
- uid: SharpSDL3.Sdl.CreateTextureWithProperties(System.IntPtr,System.UInt32)
  commentId: M:SharpSDL3.Sdl.CreateTextureWithProperties(System.IntPtr,System.UInt32)
  id: CreateTextureWithProperties(System.IntPtr,System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CreateTextureWithProperties(nint, uint)
  nameWithType: Sdl.CreateTextureWithProperties(nint, uint)
  fullName: SharpSDL3.Sdl.CreateTextureWithProperties(nint, uint)
  type: Method
  source:
    remote:
      path: SDL3/Textures.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CreateTextureWithProperties
    path: ../../repos/SDL3-CS/SDL3/Textures.cs
    startLine: 86
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Create a texture for a rendering context with the specified properties.
  remarks: >-
    These are the supported properties:

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateProperties" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.CreateTexture(System.IntPtr%2cSharpSDL3.Enums.PixelFormat%2cSharpSDL3.Enums.TextureAccess%2cSystem.Int32%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.CreateTextureFromSurface(System.IntPtr%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.DestroyTexture(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetTextureSize(System.IntPtr%2cSystem.Single%40%2cSystem.Single%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.UpdateTexture(System.IntPtr%2cSharpSDL3.Structs.Rect%40%2cSystem.IntPtr%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint CreateTextureWithProperties(nint renderer, uint props)
    parameters:
    - id: renderer
      type: System.IntPtr
      description: the rendering context.
    - id: props
      type: System.UInt32
      description: the properties to use.
    return:
      type: System.IntPtr
      description: (SDL_Texture *) Returns the created texture or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function CreateTextureWithProperties(renderer As IntPtr, props As UInteger) As IntPtr
  overload: SharpSDL3.Sdl.CreateTextureWithProperties*
  nameWithType.vb: Sdl.CreateTextureWithProperties(IntPtr, UInteger)
  fullName.vb: SharpSDL3.Sdl.CreateTextureWithProperties(System.IntPtr, UInteger)
  name.vb: CreateTextureWithProperties(IntPtr, UInteger)
- uid: SharpSDL3.Sdl.GetTextureAlphaMod(System.IntPtr,System.Byte@)
  commentId: M:SharpSDL3.Sdl.GetTextureAlphaMod(System.IntPtr,System.Byte@)
  id: GetTextureAlphaMod(System.IntPtr,System.Byte@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetTextureAlphaMod(nint, out byte)
  nameWithType: Sdl.GetTextureAlphaMod(nint, out byte)
  fullName: SharpSDL3.Sdl.GetTextureAlphaMod(nint, out byte)
  type: Method
  source:
    remote:
      path: SDL3/Textures.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetTextureAlphaMod
    path: ../../repos/SDL3-CS/SDL3/Textures.cs
    startLine: 93
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static bool GetTextureAlphaMod(nint texture, out byte alpha)
    parameters:
    - id: texture
      type: System.IntPtr
    - id: alpha
      type: System.Byte
    return:
      type: System.Boolean
    content.vb: Public Shared Function GetTextureAlphaMod(texture As IntPtr, alpha As Byte) As Boolean
  overload: SharpSDL3.Sdl.GetTextureAlphaMod*
  nameWithType.vb: Sdl.GetTextureAlphaMod(IntPtr, Byte)
  fullName.vb: SharpSDL3.Sdl.GetTextureAlphaMod(System.IntPtr, Byte)
  name.vb: GetTextureAlphaMod(IntPtr, Byte)
- uid: SharpSDL3.Sdl.GetTextureAlphaMod(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetTextureAlphaMod(System.IntPtr)
  id: GetTextureAlphaMod(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetTextureAlphaMod(nint)
  nameWithType: Sdl.GetTextureAlphaMod(nint)
  fullName: SharpSDL3.Sdl.GetTextureAlphaMod(nint)
  type: Method
  source:
    remote:
      path: SDL3/Textures.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetTextureAlphaMod
    path: ../../repos/SDL3-CS/SDL3/Textures.cs
    startLine: 113
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the additional alpha value multiplied into render copy operations.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetTextureAlphaModFloat(System.IntPtr%2cSystem.Single%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetTextureColorMod(System.IntPtr%2cSystem.Byte%40%2cSystem.Byte%40%2cSystem.Byte%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetTextureAlphaMod(System.IntPtr%2cSystem.Byte)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static byte GetTextureAlphaMod(nint texture)
    parameters:
    - id: texture
      type: System.IntPtr
      description: the texture to query.
    return:
      type: System.Byte
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetTextureAlphaMod(texture As IntPtr) As Byte
  overload: SharpSDL3.Sdl.GetTextureAlphaMod*
  nameWithType.vb: Sdl.GetTextureAlphaMod(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetTextureAlphaMod(System.IntPtr)
  name.vb: GetTextureAlphaMod(IntPtr)
- uid: SharpSDL3.Sdl.GetTextureAlphaModFloat(System.IntPtr,System.Single@)
  commentId: M:SharpSDL3.Sdl.GetTextureAlphaModFloat(System.IntPtr,System.Single@)
  id: GetTextureAlphaModFloat(System.IntPtr,System.Single@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetTextureAlphaModFloat(nint, out float)
  nameWithType: Sdl.GetTextureAlphaModFloat(nint, out float)
  fullName: SharpSDL3.Sdl.GetTextureAlphaModFloat(nint, out float)
  type: Method
  source:
    remote:
      path: SDL3/Textures.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetTextureAlphaModFloat
    path: ../../repos/SDL3-CS/SDL3/Textures.cs
    startLine: 121
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static bool GetTextureAlphaModFloat(nint texture, out float alpha)
    parameters:
    - id: texture
      type: System.IntPtr
    - id: alpha
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Shared Function GetTextureAlphaModFloat(texture As IntPtr, alpha As Single) As Boolean
  overload: SharpSDL3.Sdl.GetTextureAlphaModFloat*
  nameWithType.vb: Sdl.GetTextureAlphaModFloat(IntPtr, Single)
  fullName.vb: SharpSDL3.Sdl.GetTextureAlphaModFloat(System.IntPtr, Single)
  name.vb: GetTextureAlphaModFloat(IntPtr, Single)
- uid: SharpSDL3.Sdl.GetTextureAlphaModFloat(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetTextureAlphaModFloat(System.IntPtr)
  id: GetTextureAlphaModFloat(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetTextureAlphaModFloat(nint)
  nameWithType: Sdl.GetTextureAlphaModFloat(nint)
  fullName: SharpSDL3.Sdl.GetTextureAlphaModFloat(nint)
  type: Method
  source:
    remote:
      path: SDL3/Textures.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetTextureAlphaModFloat
    path: ../../repos/SDL3-CS/SDL3/Textures.cs
    startLine: 141
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the additional alpha value multiplied into render copy operations.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetTextureAlphaMod(System.IntPtr%2cSystem.Byte%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetTextureColorModFloat(System.IntPtr%2cSystem.Single%40%2cSystem.Single%40%2cSystem.Single%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetTextureAlphaModFloat(System.IntPtr%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static float GetTextureAlphaModFloat(nint texture)
    parameters:
    - id: texture
      type: System.IntPtr
      description: the texture to query.
    return:
      type: System.Single
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetTextureAlphaModFloat(texture As IntPtr) As Single
  overload: SharpSDL3.Sdl.GetTextureAlphaModFloat*
  nameWithType.vb: Sdl.GetTextureAlphaModFloat(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetTextureAlphaModFloat(System.IntPtr)
  name.vb: GetTextureAlphaModFloat(IntPtr)
- uid: SharpSDL3.Sdl.GetTextureBlendMode(System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetTextureBlendMode(System.IntPtr,System.IntPtr)
  id: GetTextureBlendMode(System.IntPtr,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetTextureBlendMode(nint, nint)
  nameWithType: Sdl.GetTextureBlendMode(nint, nint)
  fullName: SharpSDL3.Sdl.GetTextureBlendMode(nint, nint)
  type: Method
  source:
    remote:
      path: SDL3/Textures.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetTextureBlendMode
    path: ../../repos/SDL3-CS/SDL3/Textures.cs
    startLine: 160
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the blend mode used for texture copy operations.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetTextureBlendMode(System.IntPtr%2cSystem.UInt32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool GetTextureBlendMode(nint texture, nint blendMode)
    parameters:
    - id: texture
      type: System.IntPtr
      description: the texture to query.
    - id: blendMode
      type: System.IntPtr
      description: a pointer filled in with the current <xref href="SharpSDL3.Enums.BlendMode" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetTextureBlendMode(texture As IntPtr, blendMode As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.GetTextureBlendMode*
  nameWithType.vb: Sdl.GetTextureBlendMode(IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetTextureBlendMode(System.IntPtr, System.IntPtr)
  name.vb: GetTextureBlendMode(IntPtr, IntPtr)
- uid: SharpSDL3.Sdl.GetTextureColorMod(System.IntPtr,System.Byte@,System.Byte@,System.Byte@)
  commentId: M:SharpSDL3.Sdl.GetTextureColorMod(System.IntPtr,System.Byte@,System.Byte@,System.Byte@)
  id: GetTextureColorMod(System.IntPtr,System.Byte@,System.Byte@,System.Byte@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetTextureColorMod(nint, out byte, out byte, out byte)
  nameWithType: Sdl.GetTextureColorMod(nint, out byte, out byte, out byte)
  fullName: SharpSDL3.Sdl.GetTextureColorMod(nint, out byte, out byte, out byte)
  type: Method
  source:
    remote:
      path: SDL3/Textures.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetTextureColorMod
    path: ../../repos/SDL3-CS/SDL3/Textures.cs
    startLine: 167
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static bool GetTextureColorMod(nint texture, out byte r, out byte g, out byte b)
    parameters:
    - id: texture
      type: System.IntPtr
    - id: r
      type: System.Byte
    - id: g
      type: System.Byte
    - id: b
      type: System.Byte
    return:
      type: System.Boolean
    content.vb: Public Shared Function GetTextureColorMod(texture As IntPtr, r As Byte, g As Byte, b As Byte) As Boolean
  overload: SharpSDL3.Sdl.GetTextureColorMod*
  nameWithType.vb: Sdl.GetTextureColorMod(IntPtr, Byte, Byte, Byte)
  fullName.vb: SharpSDL3.Sdl.GetTextureColorMod(System.IntPtr, Byte, Byte, Byte)
  name.vb: GetTextureColorMod(IntPtr, Byte, Byte, Byte)
- uid: SharpSDL3.Sdl.GetTextureColorMod(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetTextureColorMod(System.IntPtr)
  id: GetTextureColorMod(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetTextureColorMod(nint)
  nameWithType: Sdl.GetTextureColorMod(nint)
  fullName: SharpSDL3.Sdl.GetTextureColorMod(nint)
  type: Method
  source:
    remote:
      path: SDL3/Textures.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetTextureColorMod
    path: ../../repos/SDL3-CS/SDL3/Textures.cs
    startLine: 189
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the additional color value multiplied into render copy operations.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetTextureAlphaMod(System.IntPtr%2cSystem.Byte%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetTextureColorModFloat(System.IntPtr%2cSystem.Single%40%2cSystem.Single%40%2cSystem.Single%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetTextureColorMod(System.IntPtr%2cSystem.Byte%2cSystem.Byte%2cSystem.Byte)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static Color GetTextureColorMod(nint texture)
    parameters:
    - id: texture
      type: System.IntPtr
      description: the texture to query.
    return:
      type: SharpSDL3.Structs.Color
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetTextureColorMod(texture As IntPtr) As Color
  overload: SharpSDL3.Sdl.GetTextureColorMod*
  nameWithType.vb: Sdl.GetTextureColorMod(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetTextureColorMod(System.IntPtr)
  name.vb: GetTextureColorMod(IntPtr)
- uid: SharpSDL3.Sdl.GetTextureColorModFloat(System.IntPtr,System.Single@,System.Single@,System.Single@)
  commentId: M:SharpSDL3.Sdl.GetTextureColorModFloat(System.IntPtr,System.Single@,System.Single@,System.Single@)
  id: GetTextureColorModFloat(System.IntPtr,System.Single@,System.Single@,System.Single@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetTextureColorModFloat(nint, out float, out float, out float)
  nameWithType: Sdl.GetTextureColorModFloat(nint, out float, out float, out float)
  fullName: SharpSDL3.Sdl.GetTextureColorModFloat(nint, out float, out float, out float)
  type: Method
  source:
    remote:
      path: SDL3/Textures.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetTextureColorModFloat
    path: ../../repos/SDL3-CS/SDL3/Textures.cs
    startLine: 197
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static bool GetTextureColorModFloat(nint texture, out float r, out float g, out float b)
    parameters:
    - id: texture
      type: System.IntPtr
    - id: r
      type: System.Single
    - id: g
      type: System.Single
    - id: b
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Shared Function GetTextureColorModFloat(texture As IntPtr, r As Single, g As Single, b As Single) As Boolean
  overload: SharpSDL3.Sdl.GetTextureColorModFloat*
  nameWithType.vb: Sdl.GetTextureColorModFloat(IntPtr, Single, Single, Single)
  fullName.vb: SharpSDL3.Sdl.GetTextureColorModFloat(System.IntPtr, Single, Single, Single)
  name.vb: GetTextureColorModFloat(IntPtr, Single, Single, Single)
- uid: SharpSDL3.Sdl.GetTextureColorModFloat(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetTextureColorModFloat(System.IntPtr)
  id: GetTextureColorModFloat(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetTextureColorModFloat(nint)
  nameWithType: Sdl.GetTextureColorModFloat(nint)
  fullName: SharpSDL3.Sdl.GetTextureColorModFloat(nint)
  type: Method
  source:
    remote:
      path: SDL3/Textures.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetTextureColorModFloat
    path: ../../repos/SDL3-CS/SDL3/Textures.cs
    startLine: 219
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the additional color value multiplied into render copy operations.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetTextureAlphaModFloat(System.IntPtr%2cSystem.Single%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetTextureColorMod(System.IntPtr%2cSystem.Byte%40%2cSystem.Byte%40%2cSystem.Byte%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetTextureColorModFloat(System.IntPtr%2cSystem.Single%2cSystem.Single%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static FColor GetTextureColorModFloat(nint texture)
    parameters:
    - id: texture
      type: System.IntPtr
      description: the texture to query.
    return:
      type: SharpSDL3.Structs.FColor
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetTextureColorModFloat(texture As IntPtr) As FColor
  overload: SharpSDL3.Sdl.GetTextureColorModFloat*
  nameWithType.vb: Sdl.GetTextureColorModFloat(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetTextureColorModFloat(System.IntPtr)
  name.vb: GetTextureColorModFloat(IntPtr)
- uid: SharpSDL3.Sdl.GetTextureProperties(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetTextureProperties(System.IntPtr)
  id: GetTextureProperties(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetTextureProperties(nint)
  nameWithType: Sdl.GetTextureProperties(nint)
  fullName: SharpSDL3.Sdl.GetTextureProperties(nint)
  type: Method
  source:
    remote:
      path: SDL3/Textures.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetTextureProperties
    path: ../../repos/SDL3-CS/SDL3/Textures.cs
    startLine: 237
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the properties associated with a texture.
  remarks: >-
    The following read-only properties are provided by SDL:

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static uint GetTextureProperties(nint texture)
    parameters:
    - id: texture
      type: System.IntPtr
      description: the texture to query.
    return:
      type: System.UInt32
      description: Returns a valid property ID on success or 0 on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetTextureProperties(texture As IntPtr) As UInteger
  overload: SharpSDL3.Sdl.GetTextureProperties*
  nameWithType.vb: Sdl.GetTextureProperties(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetTextureProperties(System.IntPtr)
  name.vb: GetTextureProperties(IntPtr)
- uid: SharpSDL3.Sdl.GetTextureScaleMode(System.IntPtr,SharpSDL3.Enums.ScaleMode@)
  commentId: M:SharpSDL3.Sdl.GetTextureScaleMode(System.IntPtr,SharpSDL3.Enums.ScaleMode@)
  id: GetTextureScaleMode(System.IntPtr,SharpSDL3.Enums.ScaleMode@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetTextureScaleMode(nint, out ScaleMode)
  nameWithType: Sdl.GetTextureScaleMode(nint, out ScaleMode)
  fullName: SharpSDL3.Sdl.GetTextureScaleMode(nint, out SharpSDL3.Enums.ScaleMode)
  type: Method
  source:
    remote:
      path: SDL3/Textures.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetTextureScaleMode
    path: ../../repos/SDL3-CS/SDL3/Textures.cs
    startLine: 244
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static bool GetTextureScaleMode(nint texture, out ScaleMode scaleMode)
    parameters:
    - id: texture
      type: System.IntPtr
    - id: scaleMode
      type: SharpSDL3.Enums.ScaleMode
    return:
      type: System.Boolean
    content.vb: Public Shared Function GetTextureScaleMode(texture As IntPtr, scaleMode As ScaleMode) As Boolean
  overload: SharpSDL3.Sdl.GetTextureScaleMode*
  nameWithType.vb: Sdl.GetTextureScaleMode(IntPtr, ScaleMode)
  fullName.vb: SharpSDL3.Sdl.GetTextureScaleMode(System.IntPtr, SharpSDL3.Enums.ScaleMode)
  name.vb: GetTextureScaleMode(IntPtr, ScaleMode)
- uid: SharpSDL3.Sdl.GetTextureScaleMode(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetTextureScaleMode(System.IntPtr)
  id: GetTextureScaleMode(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetTextureScaleMode(nint)
  nameWithType: Sdl.GetTextureScaleMode(nint)
  fullName: SharpSDL3.Sdl.GetTextureScaleMode(nint)
  type: Method
  source:
    remote:
      path: SDL3/Textures.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetTextureScaleMode
    path: ../../repos/SDL3-CS/SDL3/Textures.cs
    startLine: 262
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the scale mode used for texture scale operations.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.SetTextureScaleMode(System.IntPtr%2cSharpSDL3.Enums.ScaleMode)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static ScaleMode GetTextureScaleMode(nint texture)
    parameters:
    - id: texture
      type: System.IntPtr
      description: the texture to query.
    return:
      type: SharpSDL3.Enums.ScaleMode
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetTextureScaleMode(texture As IntPtr) As ScaleMode
  overload: SharpSDL3.Sdl.GetTextureScaleMode*
  nameWithType.vb: Sdl.GetTextureScaleMode(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetTextureScaleMode(System.IntPtr)
  name.vb: GetTextureScaleMode(IntPtr)
- uid: SharpSDL3.Sdl.GetTextureSize(System.IntPtr,System.Single@,System.Single@)
  commentId: M:SharpSDL3.Sdl.GetTextureSize(System.IntPtr,System.Single@,System.Single@)
  id: GetTextureSize(System.IntPtr,System.Single@,System.Single@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetTextureSize(nint, out float, out float)
  nameWithType: Sdl.GetTextureSize(nint, out float, out float)
  fullName: SharpSDL3.Sdl.GetTextureSize(nint, out float, out float)
  type: Method
  source:
    remote:
      path: SDL3/Textures.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetTextureSize
    path: ../../repos/SDL3-CS/SDL3/Textures.cs
    startLine: 270
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  syntax:
    content: public static bool GetTextureSize(nint texture, out float w, out float h)
    parameters:
    - id: texture
      type: System.IntPtr
    - id: w
      type: System.Single
    - id: h
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Shared Function GetTextureSize(texture As IntPtr, w As Single, h As Single) As Boolean
  overload: SharpSDL3.Sdl.GetTextureSize*
  nameWithType.vb: Sdl.GetTextureSize(IntPtr, Single, Single)
  fullName.vb: SharpSDL3.Sdl.GetTextureSize(System.IntPtr, Single, Single)
  name.vb: GetTextureSize(IntPtr, Single, Single)
- uid: SharpSDL3.Sdl.GetTextureSize(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetTextureSize(System.IntPtr)
  id: GetTextureSize(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetTextureSize(nint)
  nameWithType: Sdl.GetTextureSize(nint)
  fullName: SharpSDL3.Sdl.GetTextureSize(nint)
  type: Method
  source:
    remote:
      path: SDL3/Textures.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetTextureSize
    path: ../../repos/SDL3-CS/SDL3/Textures.cs
    startLine: 288
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the size of a texture, as floating point values.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static Vector2 GetTextureSize(nint texture)
    parameters:
    - id: texture
      type: System.IntPtr
      description: the texture to query.
    return:
      type: SharpSDL3.Structs.Vector2
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetTextureSize(texture As IntPtr) As Vector2
  overload: SharpSDL3.Sdl.GetTextureSize*
  nameWithType.vb: Sdl.GetTextureSize(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetTextureSize(System.IntPtr)
  name.vb: GetTextureSize(IntPtr)
- uid: SharpSDL3.Sdl.LockTexture(System.IntPtr,SharpSDL3.Structs.Rect@,System.IntPtr@,System.Int32@)
  commentId: M:SharpSDL3.Sdl.LockTexture(System.IntPtr,SharpSDL3.Structs.Rect@,System.IntPtr@,System.Int32@)
  id: LockTexture(System.IntPtr,SharpSDL3.Structs.Rect@,System.IntPtr@,System.Int32@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LockTexture(nint, ref Rect, out nint, out int)
  nameWithType: Sdl.LockTexture(nint, ref Rect, out nint, out int)
  fullName: SharpSDL3.Sdl.LockTexture(nint, ref SharpSDL3.Structs.Rect, out nint, out int)
  type: Method
  source:
    remote:
      path: SDL3/Textures.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LockTexture
    path: ../../repos/SDL3-CS/SDL3/Textures.cs
    startLine: 314
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Lock a portion of the texture for write-only pixel access.
  remarks: >-
    As an optimization, the pixels made available for editing don't necessarily

    contain the old texture data. This is a write-only operation, and if you

    need to keep a copy of the texture data you should do that at the

    application level.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.LockTextureToSurface(System.IntPtr%2cSharpSDL3.Structs.Rect%40%2cSystem.IntPtr%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.UnlockTexture(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool LockTexture(nint texture, ref Rect rect, out nint pixels, out int pitch)
    parameters:
    - id: texture
      type: System.IntPtr
      description: the texture to lock for access, which was created with SDL_TEXTUREACCESS_STREAMING.
    - id: rect
      type: SharpSDL3.Structs.Rect
      description: an <xref href="SharpSDL3.Structs.Rect" data-throw-if-not-resolved="false"></xref> structure representing the area to lock for access; <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to lock the entire texture.
    - id: pixels
      type: System.IntPtr
      description: this is filled in with a pointer to the locked pixels, appropriately offset by the locked area.
    - id: pitch
      type: System.Int32
      description: this is filled in with the pitch of the locked pixels; the pitch is the length of one row in bytes.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if the texture is not valid or wasnot created withSDL_TEXTUREACCESS_STREAMING; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function LockTexture(texture As IntPtr, rect As Rect, pixels As IntPtr, pitch As Integer) As Boolean
  overload: SharpSDL3.Sdl.LockTexture*
  nameWithType.vb: Sdl.LockTexture(IntPtr, Rect, IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.LockTexture(System.IntPtr, SharpSDL3.Structs.Rect, System.IntPtr, Integer)
  name.vb: LockTexture(IntPtr, Rect, IntPtr, Integer)
- uid: SharpSDL3.Sdl.LockTexture(System.IntPtr,System.IntPtr,System.IntPtr@,System.Int32@)
  commentId: M:SharpSDL3.Sdl.LockTexture(System.IntPtr,System.IntPtr,System.IntPtr@,System.Int32@)
  id: LockTexture(System.IntPtr,System.IntPtr,System.IntPtr@,System.Int32@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LockTexture(nint, nint, out nint, out int)
  nameWithType: Sdl.LockTexture(nint, nint, out nint, out int)
  fullName: SharpSDL3.Sdl.LockTexture(nint, nint, out nint, out int)
  type: Method
  source:
    remote:
      path: SDL3/Textures.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LockTexture
    path: ../../repos/SDL3-CS/SDL3/Textures.cs
    startLine: 340
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Lock a portion of the texture for write-only pixel access.
  remarks: >-
    As an optimization, the pixels made available for editing don't necessarily

    contain the old texture data. This is a write-only operation, and if you

    need to keep a copy of the texture data you should do that at the

    application level.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.LockTextureToSurface(System.IntPtr%2cSharpSDL3.Structs.Rect%40%2cSystem.IntPtr%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.UnlockTexture(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool LockTexture(nint texture, nint rect, out nint pixels, out int pitch)
    parameters:
    - id: texture
      type: System.IntPtr
      description: the texture to lock for access, which was created with SDL_TEXTUREACCESS_STREAMING.
    - id: rect
      type: System.IntPtr
      description: an <xref href="SharpSDL3.Structs.Rect" data-throw-if-not-resolved="false"></xref> structure representing the area to lock for access; <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to lock the entire texture.
    - id: pixels
      type: System.IntPtr
      description: this is filled in with a pointer to the locked pixels, appropriately offset by the locked area.
    - id: pitch
      type: System.Int32
      description: this is filled in with the pitch of the locked pixels; the pitch is the length of one row in bytes.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if the texture is not valid or wasnot created withSDL_TEXTUREACCESS_STREAMING; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function LockTexture(texture As IntPtr, rect As IntPtr, pixels As IntPtr, pitch As Integer) As Boolean
  overload: SharpSDL3.Sdl.LockTexture*
  nameWithType.vb: Sdl.LockTexture(IntPtr, IntPtr, IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.LockTexture(System.IntPtr, System.IntPtr, System.IntPtr, Integer)
  name.vb: LockTexture(IntPtr, IntPtr, IntPtr, Integer)
- uid: SharpSDL3.Sdl.LockTextureToSurface(System.IntPtr,SharpSDL3.Structs.Rect@,System.IntPtr@)
  commentId: M:SharpSDL3.Sdl.LockTextureToSurface(System.IntPtr,SharpSDL3.Structs.Rect@,System.IntPtr@)
  id: LockTextureToSurface(System.IntPtr,SharpSDL3.Structs.Rect@,System.IntPtr@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: LockTextureToSurface(nint, ref Rect, out nint)
  nameWithType: Sdl.LockTextureToSurface(nint, ref Rect, out nint)
  fullName: SharpSDL3.Sdl.LockTextureToSurface(nint, ref SharpSDL3.Structs.Rect, out nint)
  type: Method
  source:
    remote:
      path: SDL3/Textures.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: LockTextureToSurface
    path: ../../repos/SDL3-CS/SDL3/Textures.cs
    startLine: 364
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Lock a portion of the texture for write-only pixel access, and expose it as a SDL surface.
  remarks: >-
    Besides providing an SDL_Surface instead of raw pixel data,

    this function operates like SDL_LockTexture.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.LockTexture(System.IntPtr%2cSharpSDL3.Structs.Rect%40%2cSystem.IntPtr%40%2cSystem.Int32%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.UnlockTexture(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool LockTextureToSurface(nint texture, ref Rect rect, out nint surface)
    parameters:
    - id: texture
      type: System.IntPtr
      description: the texture to lock for access, which must be created with SDL_TEXTUREACCESS_STREAMING.
    - id: rect
      type: SharpSDL3.Structs.Rect
      description: a pointer to the rectangle to lock for access. If the rect is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>, the entire texture will be locked.
    - id: surface
      type: System.IntPtr
      description: a pointer to an SDL surface of size rect. Don't assume any specific pixel content.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function LockTextureToSurface(texture As IntPtr, rect As Rect, surface As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.LockTextureToSurface*
  nameWithType.vb: Sdl.LockTextureToSurface(IntPtr, Rect, IntPtr)
  fullName.vb: SharpSDL3.Sdl.LockTextureToSurface(System.IntPtr, SharpSDL3.Structs.Rect, System.IntPtr)
  name.vb: LockTextureToSurface(IntPtr, Rect, IntPtr)
- uid: SharpSDL3.Sdl.SetTextureAlphaMod(System.IntPtr,System.Byte)
  commentId: M:SharpSDL3.Sdl.SetTextureAlphaMod(System.IntPtr,System.Byte)
  id: SetTextureAlphaMod(System.IntPtr,System.Byte)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetTextureAlphaMod(nint, byte)
  nameWithType: Sdl.SetTextureAlphaMod(nint, byte)
  fullName: SharpSDL3.Sdl.SetTextureAlphaMod(nint, byte)
  type: Method
  source:
    remote:
      path: SDL3/Textures.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetTextureAlphaMod
    path: ../../repos/SDL3-CS/SDL3/Textures.cs
    startLine: 387
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set an additional alpha value multiplied into render copy operations.
  remarks: >-
    When this texture is rendered, during the copy operation the source alpha

    value is modulated by this alpha value according to the following formula:

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetTextureAlphaMod(System.IntPtr%2cSystem.Byte%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetTextureAlphaModFloat(System.IntPtr%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetTextureColorMod(System.IntPtr%2cSystem.Byte%2cSystem.Byte%2cSystem.Byte)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetTextureAlphaMod(nint texture, byte alpha)
    parameters:
    - id: texture
      type: System.IntPtr
      description: the texture to update.
    - id: alpha
      type: System.Byte
      description: the source alpha value multiplied into copy operations.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetTextureAlphaMod(texture As IntPtr, alpha As Byte) As Boolean
  overload: SharpSDL3.Sdl.SetTextureAlphaMod*
  nameWithType.vb: Sdl.SetTextureAlphaMod(IntPtr, Byte)
  fullName.vb: SharpSDL3.Sdl.SetTextureAlphaMod(System.IntPtr, Byte)
  name.vb: SetTextureAlphaMod(IntPtr, Byte)
- uid: SharpSDL3.Sdl.SetTextureAlphaModFloat(System.IntPtr,System.Single)
  commentId: M:SharpSDL3.Sdl.SetTextureAlphaModFloat(System.IntPtr,System.Single)
  id: SetTextureAlphaModFloat(System.IntPtr,System.Single)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetTextureAlphaModFloat(nint, float)
  nameWithType: Sdl.SetTextureAlphaModFloat(nint, float)
  fullName: SharpSDL3.Sdl.SetTextureAlphaModFloat(nint, float)
  type: Method
  source:
    remote:
      path: SDL3/Textures.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetTextureAlphaModFloat
    path: ../../repos/SDL3-CS/SDL3/Textures.cs
    startLine: 409
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set an additional alpha value multiplied into render copy operations.
  remarks: >-
    When this texture is rendered, during the copy operation the source alpha

    value is modulated by this alpha value according to the following formula:

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetTextureAlphaModFloat(System.IntPtr%2cSystem.Single%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetTextureAlphaMod(System.IntPtr%2cSystem.Byte)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetTextureColorModFloat(System.IntPtr%2cSystem.Single%2cSystem.Single%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetTextureAlphaModFloat(nint texture, float alpha)
    parameters:
    - id: texture
      type: System.IntPtr
      description: the texture to update.
    - id: alpha
      type: System.Single
      description: the source alpha value multiplied into copy operations.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetTextureAlphaModFloat(texture As IntPtr, alpha As Single) As Boolean
  overload: SharpSDL3.Sdl.SetTextureAlphaModFloat*
  nameWithType.vb: Sdl.SetTextureAlphaModFloat(IntPtr, Single)
  fullName.vb: SharpSDL3.Sdl.SetTextureAlphaModFloat(System.IntPtr, Single)
  name.vb: SetTextureAlphaModFloat(IntPtr, Single)
- uid: SharpSDL3.Sdl.SetTextureBlendMode(System.IntPtr,System.UInt32)
  commentId: M:SharpSDL3.Sdl.SetTextureBlendMode(System.IntPtr,System.UInt32)
  id: SetTextureBlendMode(System.IntPtr,System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetTextureBlendMode(nint, uint)
  nameWithType: Sdl.SetTextureBlendMode(nint, uint)
  fullName: SharpSDL3.Sdl.SetTextureBlendMode(nint, uint)
  type: Method
  source:
    remote:
      path: SDL3/Textures.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetTextureBlendMode
    path: ../../repos/SDL3-CS/SDL3/Textures.cs
    startLine: 429
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set the blend mode for a texture, used by SDL_RenderTexture().
  remarks: >-
    If the blend mode is not supported, the closest supported mode is chosen

    and this function returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetTextureBlendMode(System.IntPtr%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetTextureBlendMode(nint texture, uint blendMode)
    parameters:
    - id: texture
      type: System.IntPtr
      description: the texture to update.
    - id: blendMode
      type: System.UInt32
      description: the <xref href="SharpSDL3.Enums.BlendMode" data-throw-if-not-resolved="false"></xref> to use for texture blending.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetTextureBlendMode(texture As IntPtr, blendMode As UInteger) As Boolean
  overload: SharpSDL3.Sdl.SetTextureBlendMode*
  nameWithType.vb: Sdl.SetTextureBlendMode(IntPtr, UInteger)
  fullName.vb: SharpSDL3.Sdl.SetTextureBlendMode(System.IntPtr, UInteger)
  name.vb: SetTextureBlendMode(IntPtr, UInteger)
- uid: SharpSDL3.Sdl.SetTextureColorMod(System.IntPtr,System.Byte,System.Byte,System.Byte)
  commentId: M:SharpSDL3.Sdl.SetTextureColorMod(System.IntPtr,System.Byte,System.Byte,System.Byte)
  id: SetTextureColorMod(System.IntPtr,System.Byte,System.Byte,System.Byte)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetTextureColorMod(nint, byte, byte, byte)
  nameWithType: Sdl.SetTextureColorMod(nint, byte, byte, byte)
  fullName: SharpSDL3.Sdl.SetTextureColorMod(nint, byte, byte, byte)
  type: Method
  source:
    remote:
      path: SDL3/Textures.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetTextureColorMod
    path: ../../repos/SDL3-CS/SDL3/Textures.cs
    startLine: 454
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set an additional color value multiplied into render copy operations.
  remarks: >-
    When this texture is rendered, during the copy operation each source color

    channel is modulated by the appropriate color value according to the

    following formula:

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetTextureColorMod(System.IntPtr%2cSystem.Byte%40%2cSystem.Byte%40%2cSystem.Byte%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetTextureAlphaMod(System.IntPtr%2cSystem.Byte)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetTextureColorModFloat(System.IntPtr%2cSystem.Single%2cSystem.Single%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetTextureColorMod(nint texture, byte r, byte g, byte b)
    parameters:
    - id: texture
      type: System.IntPtr
      description: the texture to update.
    - id: r
      type: System.Byte
      description: the red color value multiplied into copy operations.
    - id: g
      type: System.Byte
      description: the green color value multiplied into copy operations.
    - id: b
      type: System.Byte
      description: the blue color value multiplied into copy operations.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetTextureColorMod(texture As IntPtr, r As Byte, g As Byte, b As Byte) As Boolean
  overload: SharpSDL3.Sdl.SetTextureColorMod*
  nameWithType.vb: Sdl.SetTextureColorMod(IntPtr, Byte, Byte, Byte)
  fullName.vb: SharpSDL3.Sdl.SetTextureColorMod(System.IntPtr, Byte, Byte, Byte)
  name.vb: SetTextureColorMod(IntPtr, Byte, Byte, Byte)
- uid: SharpSDL3.Sdl.SetTextureColorMod(System.IntPtr,SharpSDL3.Structs.Color)
  commentId: M:SharpSDL3.Sdl.SetTextureColorMod(System.IntPtr,SharpSDL3.Structs.Color)
  id: SetTextureColorMod(System.IntPtr,SharpSDL3.Structs.Color)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetTextureColorMod(nint, Color)
  nameWithType: Sdl.SetTextureColorMod(nint, Color)
  fullName: SharpSDL3.Sdl.SetTextureColorMod(nint, SharpSDL3.Structs.Color)
  type: Method
  source:
    remote:
      path: SDL3/Textures.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetTextureColorMod
    path: ../../repos/SDL3-CS/SDL3/Textures.cs
    startLine: 479
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set an additional color value multiplied into render copy operations.
  remarks: >-
    When this texture is rendered, during the copy operation each source color

    channel is modulated by the appropriate color value according to the

    following formula:

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetTextureColorMod(System.IntPtr%2cSystem.Byte%40%2cSystem.Byte%40%2cSystem.Byte%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetTextureAlphaMod(System.IntPtr%2cSystem.Byte)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetTextureColorModFloat(System.IntPtr%2cSystem.Single%2cSystem.Single%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetTextureColorMod(nint texture, Color color)
    parameters:
    - id: texture
      type: System.IntPtr
      description: the texture to update.
    - id: color
      type: SharpSDL3.Structs.Color
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetTextureColorMod(texture As IntPtr, color As Color) As Boolean
  overload: SharpSDL3.Sdl.SetTextureColorMod*
  nameWithType.vb: Sdl.SetTextureColorMod(IntPtr, Color)
  fullName.vb: SharpSDL3.Sdl.SetTextureColorMod(System.IntPtr, SharpSDL3.Structs.Color)
  name.vb: SetTextureColorMod(IntPtr, Color)
- uid: SharpSDL3.Sdl.SetTextureColorModFloat(System.IntPtr,System.Single,System.Single,System.Single)
  commentId: M:SharpSDL3.Sdl.SetTextureColorModFloat(System.IntPtr,System.Single,System.Single,System.Single)
  id: SetTextureColorModFloat(System.IntPtr,System.Single,System.Single,System.Single)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetTextureColorModFloat(nint, float, float, float)
  nameWithType: Sdl.SetTextureColorModFloat(nint, float, float, float)
  fullName: SharpSDL3.Sdl.SetTextureColorModFloat(nint, float, float, float)
  type: Method
  source:
    remote:
      path: SDL3/Textures.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetTextureColorModFloat
    path: ../../repos/SDL3-CS/SDL3/Textures.cs
    startLine: 504
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set an additional color value multiplied into render copy operations.
  remarks: >-
    When this texture is rendered, during the copy operation each source color

    channel is modulated by the appropriate color value according to the

    following formula:

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetTextureColorModFloat(System.IntPtr%2cSystem.Single%40%2cSystem.Single%40%2cSystem.Single%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetTextureAlphaModFloat(System.IntPtr%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetTextureColorMod(System.IntPtr%2cSystem.Byte%2cSystem.Byte%2cSystem.Byte)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetTextureColorModFloat(nint texture, float r, float g, float b)
    parameters:
    - id: texture
      type: System.IntPtr
      description: the texture to update.
    - id: r
      type: System.Single
      description: the red color value multiplied into copy operations.
    - id: g
      type: System.Single
      description: the green color value multiplied into copy operations.
    - id: b
      type: System.Single
      description: the blue color value multiplied into copy operations.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetTextureColorModFloat(texture As IntPtr, r As Single, g As Single, b As Single) As Boolean
  overload: SharpSDL3.Sdl.SetTextureColorModFloat*
  nameWithType.vb: Sdl.SetTextureColorModFloat(IntPtr, Single, Single, Single)
  fullName.vb: SharpSDL3.Sdl.SetTextureColorModFloat(System.IntPtr, Single, Single, Single)
  name.vb: SetTextureColorModFloat(IntPtr, Single, Single, Single)
- uid: SharpSDL3.Sdl.SetTextureColorModFloat(System.IntPtr,SharpSDL3.Structs.FColor)
  commentId: M:SharpSDL3.Sdl.SetTextureColorModFloat(System.IntPtr,SharpSDL3.Structs.FColor)
  id: SetTextureColorModFloat(System.IntPtr,SharpSDL3.Structs.FColor)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetTextureColorModFloat(nint, FColor)
  nameWithType: Sdl.SetTextureColorModFloat(nint, FColor)
  fullName: SharpSDL3.Sdl.SetTextureColorModFloat(nint, SharpSDL3.Structs.FColor)
  type: Method
  source:
    remote:
      path: SDL3/Textures.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetTextureColorModFloat
    path: ../../repos/SDL3-CS/SDL3/Textures.cs
    startLine: 529
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set an additional color value multiplied into render copy operations.
  remarks: >-
    When this texture is rendered, during the copy operation each source color

    channel is modulated by the appropriate color value according to the

    following formula:

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetTextureColorModFloat(System.IntPtr%2cSystem.Single%40%2cSystem.Single%40%2cSystem.Single%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetTextureAlphaModFloat(System.IntPtr%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetTextureColorMod(System.IntPtr%2cSystem.Byte%2cSystem.Byte%2cSystem.Byte)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetTextureColorModFloat(nint texture, FColor color)
    parameters:
    - id: texture
      type: System.IntPtr
      description: the texture to update.
    - id: color
      type: SharpSDL3.Structs.FColor
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetTextureColorModFloat(texture As IntPtr, color As FColor) As Boolean
  overload: SharpSDL3.Sdl.SetTextureColorModFloat*
  nameWithType.vb: Sdl.SetTextureColorModFloat(IntPtr, FColor)
  fullName.vb: SharpSDL3.Sdl.SetTextureColorModFloat(System.IntPtr, SharpSDL3.Structs.FColor)
  name.vb: SetTextureColorModFloat(IntPtr, FColor)
- uid: SharpSDL3.Sdl.SetTextureScaleMode(System.IntPtr,SharpSDL3.Enums.ScaleMode)
  commentId: M:SharpSDL3.Sdl.SetTextureScaleMode(System.IntPtr,SharpSDL3.Enums.ScaleMode)
  id: SetTextureScaleMode(System.IntPtr,SharpSDL3.Enums.ScaleMode)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetTextureScaleMode(nint, ScaleMode)
  nameWithType: Sdl.SetTextureScaleMode(nint, ScaleMode)
  fullName: SharpSDL3.Sdl.SetTextureScaleMode(nint, SharpSDL3.Enums.ScaleMode)
  type: Method
  source:
    remote:
      path: SDL3/Textures.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetTextureScaleMode
    path: ../../repos/SDL3-CS/SDL3/Textures.cs
    startLine: 549
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Set the scale mode used for texture scale operations.
  remarks: >-
    The default texture scale mode is

    SDL_SCALEMODE_LINEAR.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetTextureScaleMode(System.IntPtr%2cSharpSDL3.Enums.ScaleMode%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool SetTextureScaleMode(nint texture, ScaleMode scaleMode)
    parameters:
    - id: texture
      type: System.IntPtr
      description: the texture to update.
    - id: scaleMode
      type: SharpSDL3.Enums.ScaleMode
      description: the <xref href="SharpSDL3.Enums.ScaleMode" data-throw-if-not-resolved="false"></xref> to use for texture scaling.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function SetTextureScaleMode(texture As IntPtr, scaleMode As ScaleMode) As Boolean
  overload: SharpSDL3.Sdl.SetTextureScaleMode*
  nameWithType.vb: Sdl.SetTextureScaleMode(IntPtr, ScaleMode)
  fullName.vb: SharpSDL3.Sdl.SetTextureScaleMode(System.IntPtr, SharpSDL3.Enums.ScaleMode)
  name.vb: SetTextureScaleMode(IntPtr, ScaleMode)
- uid: SharpSDL3.Sdl.UnlockTexture(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.UnlockTexture(System.IntPtr)
  id: UnlockTexture(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: UnlockTexture(nint)
  nameWithType: Sdl.UnlockTexture(nint)
  fullName: SharpSDL3.Sdl.UnlockTexture(nint)
  type: Method
  source:
    remote:
      path: SDL3/Textures.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: UnlockTexture
    path: ../../repos/SDL3-CS/SDL3/Textures.cs
    startLine: 570
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Unlock a texture, uploading the changes to video memory, if needed.
  remarks: >-
    Warning: Please note that SDL_LockTexture() is

    intended to be write-only; it will not guarantee the previous contents of

    the texture will be provided. You must fully initialize any area of a

    texture that you lock before unlocking it, as the pixels might otherwise be

    uninitialized memory.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.LockTexture(System.IntPtr%2cSharpSDL3.Structs.Rect%40%2cSystem.IntPtr%40%2cSystem.Int32%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void UnlockTexture(nint texture)
    parameters:
    - id: texture
      type: System.IntPtr
      description: a texture locked by SDL_LockTexture().
    content.vb: Public Shared Sub UnlockTexture(texture As IntPtr)
  overload: SharpSDL3.Sdl.UnlockTexture*
  nameWithType.vb: Sdl.UnlockTexture(IntPtr)
  fullName.vb: SharpSDL3.Sdl.UnlockTexture(System.IntPtr)
  name.vb: UnlockTexture(IntPtr)
- uid: SharpSDL3.Sdl.UpdateNVTexture(System.IntPtr,SharpSDL3.Structs.Rect@,System.IntPtr,System.Int32,System.IntPtr,System.Int32)
  commentId: M:SharpSDL3.Sdl.UpdateNVTexture(System.IntPtr,SharpSDL3.Structs.Rect@,System.IntPtr,System.Int32,System.IntPtr,System.Int32)
  id: UpdateNVTexture(System.IntPtr,SharpSDL3.Structs.Rect@,System.IntPtr,System.Int32,System.IntPtr,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: UpdateNVTexture(nint, ref Rect, nint, int, nint, int)
  nameWithType: Sdl.UpdateNVTexture(nint, ref Rect, nint, int, nint, int)
  fullName: SharpSDL3.Sdl.UpdateNVTexture(nint, ref SharpSDL3.Structs.Rect, nint, int, nint, int)
  type: Method
  source:
    remote:
      path: SDL3/Textures.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: UpdateNVTexture
    path: ../../repos/SDL3-CS/SDL3/Textures.cs
    startLine: 596
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Update a rectangle within a planar NV12 or NV21 texture with new pixels.
  remarks: >-
    You can use SDL_UpdateTexture() as long as your pixel

    data is a contiguous block of NV12/21 planes in the proper order, but this

    function is available if your pixel data is not contiguous.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.UpdateTexture(System.IntPtr%2cSharpSDL3.Structs.Rect%40%2cSystem.IntPtr%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.UpdateYUVTexture(System.IntPtr%2cSharpSDL3.Structs.Rect%40%2cSystem.IntPtr%2cSystem.Int32%2cSystem.IntPtr%2cSystem.Int32%2cSystem.IntPtr%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool UpdateNVTexture(nint texture, ref Rect rect, nint yplane, int ypitch, nint uVplane, int uVpitch)
    parameters:
    - id: texture
      type: System.IntPtr
      description: the texture to update.
    - id: rect
      type: SharpSDL3.Structs.Rect
      description: a pointer to the rectangle of pixels to update, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to update the entire texture.
    - id: yplane
      type: System.IntPtr
    - id: ypitch
      type: System.Int32
    - id: uVplane
      type: System.IntPtr
    - id: uVpitch
      type: System.Int32
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function UpdateNVTexture(texture As IntPtr, rect As Rect, yplane As IntPtr, ypitch As Integer, uVplane As IntPtr, uVpitch As Integer) As Boolean
  overload: SharpSDL3.Sdl.UpdateNVTexture*
  nameWithType.vb: Sdl.UpdateNVTexture(IntPtr, Rect, IntPtr, Integer, IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.UpdateNVTexture(System.IntPtr, SharpSDL3.Structs.Rect, System.IntPtr, Integer, System.IntPtr, Integer)
  name.vb: UpdateNVTexture(IntPtr, Rect, IntPtr, Integer, IntPtr, Integer)
- uid: SharpSDL3.Sdl.UpdateTexture(System.IntPtr,SharpSDL3.Structs.Rect@,System.IntPtr,System.Int32)
  commentId: M:SharpSDL3.Sdl.UpdateTexture(System.IntPtr,SharpSDL3.Structs.Rect@,System.IntPtr,System.Int32)
  id: UpdateTexture(System.IntPtr,SharpSDL3.Structs.Rect@,System.IntPtr,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: UpdateTexture(nint, ref Rect, nint, int)
  nameWithType: Sdl.UpdateTexture(nint, ref Rect, nint, int)
  fullName: SharpSDL3.Sdl.UpdateTexture(nint, ref SharpSDL3.Structs.Rect, nint, int)
  type: Method
  source:
    remote:
      path: SDL3/Textures.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: UpdateTexture
    path: ../../repos/SDL3-CS/SDL3/Textures.cs
    startLine: 623
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Update the given texture rectangle with new pixel data.
  remarks: >-
    The pixel data must be in the pixel format of the texture, which can be

    queried using the

    SDL_PROP_TEXTURE_FORMAT_NUMBER property.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.LockTexture(System.IntPtr%2cSharpSDL3.Structs.Rect%40%2cSystem.IntPtr%40%2cSystem.Int32%40)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.UnlockTexture(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.UpdateNVTexture(System.IntPtr%2cSharpSDL3.Structs.Rect%40%2cSystem.IntPtr%2cSystem.Int32%2cSystem.IntPtr%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.UpdateYUVTexture(System.IntPtr%2cSharpSDL3.Structs.Rect%40%2cSystem.IntPtr%2cSystem.Int32%2cSystem.IntPtr%2cSystem.Int32%2cSystem.IntPtr%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool UpdateTexture(nint texture, ref Rect rect, nint pixels, int pitch)
    parameters:
    - id: texture
      type: System.IntPtr
      description: the texture to update.
    - id: rect
      type: SharpSDL3.Structs.Rect
      description: an <xref href="SharpSDL3.Structs.Rect" data-throw-if-not-resolved="false"></xref> structure representing the area to update, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to update the entire texture.
    - id: pixels
      type: System.IntPtr
      description: the raw pixel data in the format of the texture.
    - id: pitch
      type: System.Int32
      description: the number of bytes in a row of pixel data, including padding between lines.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function UpdateTexture(texture As IntPtr, rect As Rect, pixels As IntPtr, pitch As Integer) As Boolean
  overload: SharpSDL3.Sdl.UpdateTexture*
  nameWithType.vb: Sdl.UpdateTexture(IntPtr, Rect, IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.UpdateTexture(System.IntPtr, SharpSDL3.Structs.Rect, System.IntPtr, Integer)
  name.vb: UpdateTexture(IntPtr, Rect, IntPtr, Integer)
- uid: SharpSDL3.Sdl.UpdateYUVTexture(System.IntPtr,SharpSDL3.Structs.Rect@,System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.IntPtr,System.Int32)
  commentId: M:SharpSDL3.Sdl.UpdateYUVTexture(System.IntPtr,SharpSDL3.Structs.Rect@,System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.IntPtr,System.Int32)
  id: UpdateYUVTexture(System.IntPtr,SharpSDL3.Structs.Rect@,System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.IntPtr,System.Int32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: UpdateYUVTexture(nint, ref Rect, nint, int, nint, int, nint, int)
  nameWithType: Sdl.UpdateYUVTexture(nint, ref Rect, nint, int, nint, int, nint, int)
  fullName: SharpSDL3.Sdl.UpdateYUVTexture(nint, ref SharpSDL3.Structs.Rect, nint, int, nint, int, nint, int)
  type: Method
  source:
    remote:
      path: SDL3/Textures.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: UpdateYUVTexture
    path: ../../repos/SDL3-CS/SDL3/Textures.cs
    startLine: 651
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Update a rectangle within a planar YV12 or IYUV texture with new pixel data.
  remarks: >-
    You can use SDL_UpdateTexture() as long as your pixel

    data is a contiguous block of Y and U/V planes in the proper order, but

    this function is available if your pixel data is not contiguous.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.UpdateNVTexture(System.IntPtr%2cSharpSDL3.Structs.Rect%40%2cSystem.IntPtr%2cSystem.Int32%2cSystem.IntPtr%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.UpdateTexture(System.IntPtr%2cSharpSDL3.Structs.Rect%40%2cSystem.IntPtr%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool UpdateYUVTexture(nint texture, ref Rect rect, nint yplane, int ypitch, nint uplane, int upitch, nint vplane, int vpitch)
    parameters:
    - id: texture
      type: System.IntPtr
      description: the texture to update.
    - id: rect
      type: SharpSDL3.Structs.Rect
      description: a pointer to the rectangle of pixels to update, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to update the entire texture.
    - id: yplane
      type: System.IntPtr
    - id: ypitch
      type: System.Int32
    - id: uplane
      type: System.IntPtr
    - id: upitch
      type: System.Int32
    - id: vplane
      type: System.IntPtr
    - id: vpitch
      type: System.Int32
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function UpdateYUVTexture(texture As IntPtr, rect As Rect, yplane As IntPtr, ypitch As Integer, uplane As IntPtr, upitch As Integer, vplane As IntPtr, vpitch As Integer) As Boolean
  overload: SharpSDL3.Sdl.UpdateYUVTexture*
  nameWithType.vb: Sdl.UpdateYUVTexture(IntPtr, Rect, IntPtr, Integer, IntPtr, Integer, IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.UpdateYUVTexture(System.IntPtr, SharpSDL3.Structs.Rect, System.IntPtr, Integer, System.IntPtr, Integer, System.IntPtr, Integer)
  name.vb: UpdateYUVTexture(IntPtr, Rect, IntPtr, Integer, IntPtr, Integer, IntPtr, Integer)
- uid: SharpSDL3.Sdl.AddTimer(System.UInt32,SharpSDL3.Delegates.SdlTimerCallback,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.AddTimer(System.UInt32,SharpSDL3.Delegates.SdlTimerCallback,System.IntPtr)
  id: AddTimer(System.UInt32,SharpSDL3.Delegates.SdlTimerCallback,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: AddTimer(uint, SdlTimerCallback, nint)
  nameWithType: Sdl.AddTimer(uint, Delegates.SdlTimerCallback, nint)
  fullName: SharpSDL3.Sdl.AddTimer(uint, SharpSDL3.Delegates.SdlTimerCallback, nint)
  type: Method
  source:
    remote:
      path: SDL3/Timer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: AddTimer
    path: ../../repos/SDL3-CS/SDL3/Timer.cs
    startLine: 28
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Call a callback function at a future time.
  remarks: >-
    The callback function is passed the current timer interval and the user

    supplied parameter from the SDL_AddTimer() call and should

    return the next timer interval. If the value returned from the callback is

    0, the timer is canceled and will be removed.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.AddTimerNS(System.UInt64%2cSharpSDL3.Delegates.SdlNsTimerCallback%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.RemoveTimer(System.UInt32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static uint AddTimer(uint interval, Delegates.SdlTimerCallback callback, nint userdata)
    parameters:
    - id: interval
      type: System.UInt32
      description: the timer delay, in milliseconds, passed to callback.
    - id: callback
      type: SharpSDL3.Delegates.SdlTimerCallback
      description: the SDL_TimerCallback function to call when the specified interval elapses.
    - id: userdata
      type: System.IntPtr
      description: a pointer that is passed to callback.
    return:
      type: System.UInt32
      description: Returns a timer ID or 0 on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function AddTimer(interval As UInteger, callback As Delegates.SdlTimerCallback, userdata As IntPtr) As UInteger
  overload: SharpSDL3.Sdl.AddTimer*
  nameWithType.vb: Sdl.AddTimer(UInteger, Delegates.SdlTimerCallback, IntPtr)
  fullName.vb: SharpSDL3.Sdl.AddTimer(UInteger, SharpSDL3.Delegates.SdlTimerCallback, System.IntPtr)
  name.vb: AddTimer(UInteger, SdlTimerCallback, IntPtr)
- uid: SharpSDL3.Sdl.AddTimerNS(System.UInt64,SharpSDL3.Delegates.SdlNsTimerCallback,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.AddTimerNS(System.UInt64,SharpSDL3.Delegates.SdlNsTimerCallback,System.IntPtr)
  id: AddTimerNS(System.UInt64,SharpSDL3.Delegates.SdlNsTimerCallback,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: AddTimerNS(ulong, SdlNsTimerCallback, nint)
  nameWithType: Sdl.AddTimerNS(ulong, Delegates.SdlNsTimerCallback, nint)
  fullName: SharpSDL3.Sdl.AddTimerNS(ulong, SharpSDL3.Delegates.SdlNsTimerCallback, nint)
  type: Method
  source:
    remote:
      path: SDL3/Timer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: AddTimerNS
    path: ../../repos/SDL3-CS/SDL3/Timer.cs
    startLine: 63
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Call a callback function at a future time.
  remarks: >-
    The callback function is passed the current timer interval and the user

    supplied parameter from the SDL_AddTimerNS() call and

    should return the next timer interval. If the value returned from the

    callback is 0, the timer is canceled and will be removed.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.AddTimer(System.UInt32%2cSharpSDL3.Delegates.SdlTimerCallback%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.RemoveTimer(System.UInt32)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static uint AddTimerNS(ulong interval, Delegates.SdlNsTimerCallback callback, nint userdata)
    parameters:
    - id: interval
      type: System.UInt64
      description: the timer delay, in nanoseconds, passed to callback.
    - id: callback
      type: SharpSDL3.Delegates.SdlNsTimerCallback
      description: the SDL_TimerCallback function to call when the specified interval elapses.
    - id: userdata
      type: System.IntPtr
      description: a pointer that is passed to callback.
    return:
      type: System.UInt32
      description: Returns a timer ID or 0 on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function AddTimerNS(interval As ULong, callback As Delegates.SdlNsTimerCallback, userdata As IntPtr) As UInteger
  overload: SharpSDL3.Sdl.AddTimerNS*
  nameWithType.vb: Sdl.AddTimerNS(ULong, Delegates.SdlNsTimerCallback, IntPtr)
  fullName.vb: SharpSDL3.Sdl.AddTimerNS(ULong, SharpSDL3.Delegates.SdlNsTimerCallback, System.IntPtr)
  name.vb: AddTimerNS(ULong, SdlNsTimerCallback, IntPtr)
- uid: SharpSDL3.Sdl.Delay(System.UInt32)
  commentId: M:SharpSDL3.Sdl.Delay(System.UInt32)
  id: Delay(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: Delay(uint)
  nameWithType: Sdl.Delay(uint)
  fullName: SharpSDL3.Sdl.Delay(uint)
  type: Method
  source:
    remote:
      path: SDL3/Timer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: Delay
    path: ../../repos/SDL3-CS/SDL3/Timer.cs
    startLine: 94
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Wait a specified number of milliseconds before returning.
  remarks: >-
    This function waits a specified number of milliseconds before returning. It

    waits at least the specified time, but possibly longer due to OS

    scheduling.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.DelayNS(System.UInt64)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.DelayPrecise(System.UInt64)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void Delay(uint ms)
    parameters:
    - id: ms
      type: System.UInt32
      description: the number of milliseconds to delay.
    content.vb: Public Shared Sub Delay(ms As UInteger)
  overload: SharpSDL3.Sdl.Delay*
  nameWithType.vb: Sdl.Delay(UInteger)
  fullName.vb: SharpSDL3.Sdl.Delay(UInteger)
  name.vb: Delay(UInteger)
- uid: SharpSDL3.Sdl.DelayNS(System.UInt64)
  commentId: M:SharpSDL3.Sdl.DelayNS(System.UInt64)
  id: DelayNS(System.UInt64)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: DelayNS(ulong)
  nameWithType: Sdl.DelayNS(ulong)
  fullName: SharpSDL3.Sdl.DelayNS(ulong)
  type: Method
  source:
    remote:
      path: SDL3/Timer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: DelayNS
    path: ../../repos/SDL3-CS/SDL3/Timer.cs
    startLine: 121
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Wait a specified number of nanoseconds before returning.
  remarks: >-
    This function waits a specified number of nanoseconds before returning. It

    waits at least the specified time, but possibly longer due to OS

    scheduling.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.Delay(System.UInt32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.DelayPrecise(System.UInt64)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void DelayNS(ulong ns)
    parameters:
    - id: ns
      type: System.UInt64
      description: the number of nanoseconds to delay.
    content.vb: Public Shared Sub DelayNS(ns As ULong)
  overload: SharpSDL3.Sdl.DelayNS*
  nameWithType.vb: Sdl.DelayNS(ULong)
  fullName.vb: SharpSDL3.Sdl.DelayNS(ULong)
  name.vb: DelayNS(ULong)
- uid: SharpSDL3.Sdl.DelayPrecise(System.UInt64)
  commentId: M:SharpSDL3.Sdl.DelayPrecise(System.UInt64)
  id: DelayPrecise(System.UInt64)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: DelayPrecise(ulong)
  nameWithType: Sdl.DelayPrecise(ulong)
  fullName: SharpSDL3.Sdl.DelayPrecise(ulong)
  type: Method
  source:
    remote:
      path: SDL3/Timer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: DelayPrecise
    path: ../../repos/SDL3-CS/SDL3/Timer.cs
    startLine: 148
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Wait a specified number of nanoseconds before returning.
  remarks: >-
    This function waits a specified number of nanoseconds before returning. It

    will attempt to wait as close to the requested time as possible, busy

    waiting if necessary, but could return later due to OS scheduling.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.Delay(System.UInt32)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.DelayNS(System.UInt64)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void DelayPrecise(ulong ns)
    parameters:
    - id: ns
      type: System.UInt64
      description: the number of nanoseconds to delay.
    content.vb: Public Shared Sub DelayPrecise(ns As ULong)
  overload: SharpSDL3.Sdl.DelayPrecise*
  nameWithType.vb: Sdl.DelayPrecise(ULong)
  fullName.vb: SharpSDL3.Sdl.DelayPrecise(ULong)
  name.vb: DelayPrecise(ULong)
- uid: SharpSDL3.Sdl.GetPerformanceCounter
  commentId: M:SharpSDL3.Sdl.GetPerformanceCounter
  id: GetPerformanceCounter
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetPerformanceCounter()
  nameWithType: Sdl.GetPerformanceCounter()
  fullName: SharpSDL3.Sdl.GetPerformanceCounter()
  type: Method
  source:
    remote:
      path: SDL3/Timer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetPerformanceCounter
    path: ../../repos/SDL3-CS/SDL3/Timer.cs
    startLine: 171
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the current value of the high resolution counter.
  remarks: >-
    This function is typically used for profiling.

    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetPerformanceFrequency" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static ulong GetPerformanceCounter()
    return:
      type: System.UInt64
      description: Returns the current counter value.
    content.vb: Public Shared Function GetPerformanceCounter() As ULong
  overload: SharpSDL3.Sdl.GetPerformanceCounter*
- uid: SharpSDL3.Sdl.GetPerformanceFrequency
  commentId: M:SharpSDL3.Sdl.GetPerformanceFrequency
  id: GetPerformanceFrequency
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetPerformanceFrequency()
  nameWithType: Sdl.GetPerformanceFrequency()
  fullName: SharpSDL3.Sdl.GetPerformanceFrequency()
  type: Method
  source:
    remote:
      path: SDL3/Timer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetPerformanceFrequency
    path: ../../repos/SDL3-CS/SDL3/Timer.cs
    startLine: 183
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the count per second of the high resolution counter.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetPerformanceCounter" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static ulong GetPerformanceFrequency()
    return:
      type: System.UInt64
      description: Returns a platform-specific count per second.
    content.vb: Public Shared Function GetPerformanceFrequency() As ULong
  overload: SharpSDL3.Sdl.GetPerformanceFrequency*
- uid: SharpSDL3.Sdl.GetTicks
  commentId: M:SharpSDL3.Sdl.GetTicks
  id: GetTicks
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetTicks()
  nameWithType: Sdl.GetTicks()
  fullName: SharpSDL3.Sdl.GetTicks()
  type: Method
  source:
    remote:
      path: SDL3/Timer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetTicks
    path: ../../repos/SDL3-CS/SDL3/Timer.cs
    startLine: 194
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the number of milliseconds that have elapsed since the SDL library initialization.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static ulong GetTicks()
    return:
      type: System.UInt64
      description: Returns an unsigned 64‑bit integer that represents thenumber of milliseconds that have elapsed since the SDL library wasinitialized (typically via a call to SDL_Init).
    content.vb: Public Shared Function GetTicks() As ULong
  overload: SharpSDL3.Sdl.GetTicks*
- uid: SharpSDL3.Sdl.GetTicksNS
  commentId: M:SharpSDL3.Sdl.GetTicksNS
  id: GetTicksNS
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetTicksNS()
  nameWithType: Sdl.GetTicksNS()
  fullName: SharpSDL3.Sdl.GetTicksNS()
  type: Method
  source:
    remote:
      path: SDL3/Timer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetTicksNS
    path: ../../repos/SDL3-CS/SDL3/Timer.cs
    startLine: 205
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the number of nanoseconds since SDL library initialization.
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static ulong GetTicksNS()
    return:
      type: System.UInt64
      description: Returns an unsigned 64-bit value representing the numberof nanoseconds since the SDL library initialized.
    content.vb: Public Shared Function GetTicksNS() As ULong
  overload: SharpSDL3.Sdl.GetTicksNS*
- uid: SharpSDL3.Sdl.RemoveTimer(System.UInt32)
  commentId: M:SharpSDL3.Sdl.RemoveTimer(System.UInt32)
  id: RemoveTimer(System.UInt32)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RemoveTimer(uint)
  nameWithType: Sdl.RemoveTimer(uint)
  fullName: SharpSDL3.Sdl.RemoveTimer(uint)
  type: Method
  source:
    remote:
      path: SDL3/Timer.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RemoveTimer
    path: ../../repos/SDL3-CS/SDL3/Timer.cs
    startLine: 219
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Remove a timer created with SDL_AddTimer().
  remarks: >-
    <p><strong>Thread Safety:</strong> It is safe to call this function from any thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.AddTimer(System.UInt32%2cSharpSDL3.Delegates.SdlTimerCallback%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static SdlBool RemoveTimer(uint id)
    parameters:
    - id: id
      type: System.UInt32
      description: the ID of the timer to remove.
    return:
      type: SharpSDL3.Structs.SdlBool
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> on success or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function RemoveTimer(id As UInteger) As SdlBool
  overload: SharpSDL3.Sdl.RemoveTimer*
  nameWithType.vb: Sdl.RemoveTimer(UInteger)
  fullName.vb: SharpSDL3.Sdl.RemoveTimer(UInteger)
  name.vb: RemoveTimer(UInteger)
- uid: SharpSDL3.Sdl.GetTouchDeviceName(System.UInt64)
  commentId: M:SharpSDL3.Sdl.GetTouchDeviceName(System.UInt64)
  id: GetTouchDeviceName(System.UInt64)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetTouchDeviceName(ulong)
  nameWithType: Sdl.GetTouchDeviceName(ulong)
  fullName: SharpSDL3.Sdl.GetTouchDeviceName(ulong)
  type: Method
  source:
    remote:
      path: SDL3/Touch.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetTouchDeviceName
    path: ../../repos/SDL3-CS/SDL3/Touch.cs
    startLine: 17
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the touch device name as reported from the driver.
  remarks: <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static string GetTouchDeviceName(ulong touchId)
    parameters:
    - id: touchId
      type: System.UInt64
    return:
      type: System.String
      description: Returns touch device name, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information.
    content.vb: Public Shared Function GetTouchDeviceName(touchId As ULong) As String
  overload: SharpSDL3.Sdl.GetTouchDeviceName*
  nameWithType.vb: Sdl.GetTouchDeviceName(ULong)
  fullName.vb: SharpSDL3.Sdl.GetTouchDeviceName(ULong)
  name.vb: GetTouchDeviceName(ULong)
- uid: SharpSDL3.Sdl.GetTouchDevices
  commentId: M:SharpSDL3.Sdl.GetTouchDevices
  id: GetTouchDevices
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetTouchDevices()
  nameWithType: Sdl.GetTouchDevices()
  fullName: SharpSDL3.Sdl.GetTouchDevices()
  type: Method
  source:
    remote:
      path: SDL3/Touch.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetTouchDevices
    path: ../../repos/SDL3-CS/SDL3/Touch.cs
    startLine: 42
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get a list of registered touch devices.
  remarks: >-
    On some platforms SDL first sees the touch device if it was actually used.

    Therefore the returned list might be empty, although devices are available.

    After using all devices at least once the number will be correct.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static Span<nint> GetTouchDevices()
    return:
      type: System.Span{System.IntPtr}
      description: (SDL_TouchID *) Returns a 0 terminated array of touch deviceIDs or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information. This should be freed with <xref href="SharpSDL3.Sdl.Free(System.IntPtr)" data-throw-if-not-resolved="false"></xref> when it is no longer needed.
    content.vb: Public Shared Function GetTouchDevices() As Span(Of IntPtr)
  overload: SharpSDL3.Sdl.GetTouchDevices*
- uid: SharpSDL3.Sdl.GetTouchDeviceType(System.UInt64)
  commentId: M:SharpSDL3.Sdl.GetTouchDeviceType(System.UInt64)
  id: GetTouchDeviceType(System.UInt64)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetTouchDeviceType(ulong)
  nameWithType: Sdl.GetTouchDeviceType(ulong)
  fullName: SharpSDL3.Sdl.GetTouchDeviceType(ulong)
  type: Method
  source:
    remote:
      path: SDL3/Touch.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetTouchDeviceType
    path: ../../repos/SDL3-CS/SDL3/Touch.cs
    startLine: 63
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the type of the given touch device.
  remarks: <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static TouchDeviceType GetTouchDeviceType(ulong touchId)
    parameters:
    - id: touchId
      type: System.UInt64
    return:
      type: SharpSDL3.Enums.TouchDeviceType
      description: Returns touch device type.
    content.vb: Public Shared Function GetTouchDeviceType(touchId As ULong) As TouchDeviceType
  overload: SharpSDL3.Sdl.GetTouchDeviceType*
  nameWithType.vb: Sdl.GetTouchDeviceType(ULong)
  fullName.vb: SharpSDL3.Sdl.GetTouchDeviceType(ULong)
  name.vb: GetTouchDeviceType(ULong)
- uid: SharpSDL3.Sdl.GetTouchFingers(System.UInt64)
  commentId: M:SharpSDL3.Sdl.GetTouchFingers(System.UInt64)
  id: GetTouchFingers(System.UInt64)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetTouchFingers(ulong)
  nameWithType: Sdl.GetTouchFingers(ulong)
  fullName: SharpSDL3.Sdl.GetTouchFingers(ulong)
  type: Method
  source:
    remote:
      path: SDL3/Touch.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetTouchFingers
    path: ../../repos/SDL3-CS/SDL3/Touch.cs
    startLine: 83
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get a list of active fingers for a given touch device.
  remarks: <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static Span<nint> GetTouchFingers(ulong touchId)
    parameters:
    - id: touchId
      type: System.UInt64
    return:
      type: System.Span{System.IntPtr}
      description: (SDL_Finger **) Returns a <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> terminated array ofSDL_Finger pointers or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information. This is a single allocation that should be freed with <xref href="SharpSDL3.Sdl.Free(System.IntPtr)" data-throw-if-not-resolved="false"></xref> when it is no longer needed.
    content.vb: Public Shared Function GetTouchFingers(touchId As ULong) As Span(Of IntPtr)
  overload: SharpSDL3.Sdl.GetTouchFingers*
  nameWithType.vb: Sdl.GetTouchFingers(ULong)
  fullName.vb: SharpSDL3.Sdl.GetTouchFingers(ULong)
  name.vb: GetTouchFingers(ULong)
- uid: SharpSDL3.Sdl.GetTouchFingers(System.UInt64,System.Int32@)
  commentId: M:SharpSDL3.Sdl.GetTouchFingers(System.UInt64,System.Int32@)
  id: GetTouchFingers(System.UInt64,System.Int32@)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetTouchFingers(ulong, out int)
  nameWithType: Sdl.GetTouchFingers(ulong, out int)
  fullName: SharpSDL3.Sdl.GetTouchFingers(ulong, out int)
  type: Method
  source:
    remote:
      path: SDL3/Touch.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetTouchFingers
    path: ../../repos/SDL3-CS/SDL3/Touch.cs
    startLine: 104
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get a list of active fingers for a given touch device.
  remarks: <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static Span<nint> GetTouchFingers(ulong touchId, out int count)
    parameters:
    - id: touchId
      type: System.UInt64
    - id: count
      type: System.Int32
      description: a pointer filled in with the number of fingers returned, can be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    return:
      type: System.Span{System.IntPtr}
      description: (SDL_Finger **) Returns a <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> terminated array ofSDL_Finger pointers or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> on failure; call <xref href="SharpSDL3.Sdl.GetError" data-throw-if-not-resolved="false"></xref> for more information. This is a single allocation that should be freed with <xref href="SharpSDL3.Sdl.Free(System.IntPtr)" data-throw-if-not-resolved="false"></xref> when it is no longer needed.
    content.vb: Public Shared Function GetTouchFingers(touchId As ULong, count As Integer) As Span(Of IntPtr)
  overload: SharpSDL3.Sdl.GetTouchFingers*
  nameWithType.vb: Sdl.GetTouchFingers(ULong, Integer)
  fullName.vb: SharpSDL3.Sdl.GetTouchFingers(ULong, Integer)
  name.vb: GetTouchFingers(ULong, Integer)
- uid: SharpSDL3.Sdl.ClickTrayEntry(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.ClickTrayEntry(System.IntPtr)
  id: ClickTrayEntry(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: ClickTrayEntry(nint)
  nameWithType: Sdl.ClickTrayEntry(nint)
  fullName: SharpSDL3.Sdl.ClickTrayEntry(nint)
  type: Method
  source:
    remote:
      path: SDL3/Tray.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: ClickTrayEntry
    path: ../../repos/SDL3-CS/SDL3/Tray.cs
    startLine: 19
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Simulate a click on a tray entry.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should be called on the thread that created the tray.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>
  example: []
  syntax:
    content: public static void ClickTrayEntry(nint entry)
    parameters:
    - id: entry
      type: System.IntPtr
      description: The entry to activate.
    content.vb: Public Shared Sub ClickTrayEntry(entry As IntPtr)
  overload: SharpSDL3.Sdl.ClickTrayEntry*
  nameWithType.vb: Sdl.ClickTrayEntry(IntPtr)
  fullName.vb: SharpSDL3.Sdl.ClickTrayEntry(System.IntPtr)
  name.vb: ClickTrayEntry(IntPtr)
- uid: SharpSDL3.Sdl.CreateTray(System.IntPtr,System.String)
  commentId: M:SharpSDL3.Sdl.CreateTray(System.IntPtr,System.String)
  id: CreateTray(System.IntPtr,System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CreateTray(nint, string)
  nameWithType: Sdl.CreateTray(nint, string)
  fullName: SharpSDL3.Sdl.CreateTray(nint, string)
  type: Method
  source:
    remote:
      path: SDL3/Tray.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CreateTray
    path: ../../repos/SDL3-CS/SDL3/Tray.cs
    startLine: 42
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Create an icon to be placed in the operating system's tray, or equivalent.
  remarks: >-
    Many platforms advise not using a system tray unless persistence is a

    necessary feature. Avoid needlessly creating a tray icon, as the user may

    feel like it clutters their interface.

    <p><strong>Thread Safety:</strong> This function should only be called on the main thread.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateTrayMenu(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetTrayMenu(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.DestroyTray(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint CreateTray(nint icon, string tooltip)
    parameters:
    - id: icon
      type: System.IntPtr
      description: a surface to be used as icon. May be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    - id: tooltip
      type: System.String
      description: a tooltip to be displayed when the mouse hovers the icon in UTF-8 encoding. Not supported on all platforms. May be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    return:
      type: System.IntPtr
      description: (SDL_Tray *) Returns The newly created system tray icon.
    content.vb: Public Shared Function CreateTray(icon As IntPtr, tooltip As String) As IntPtr
  overload: SharpSDL3.Sdl.CreateTray*
  nameWithType.vb: Sdl.CreateTray(IntPtr, String)
  fullName.vb: SharpSDL3.Sdl.CreateTray(System.IntPtr, String)
  name.vb: CreateTray(IntPtr, String)
- uid: SharpSDL3.Sdl.CreateTrayMenu(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.CreateTrayMenu(System.IntPtr)
  id: CreateTrayMenu(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CreateTrayMenu(nint)
  nameWithType: Sdl.CreateTrayMenu(nint)
  fullName: SharpSDL3.Sdl.CreateTrayMenu(nint)
  type: Method
  source:
    remote:
      path: SDL3/Tray.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CreateTrayMenu
    path: ../../repos/SDL3-CS/SDL3/Tray.cs
    startLine: 69
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Create a menu for a system tray.
  remarks: >-
    This should be called at most once per tray icon.

    <p><strong>Thread Safety:</strong> This function should be called on the thread that created the tray.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateTray(System.IntPtr%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetTrayMenu(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetTrayMenuParentTray(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint CreateTrayMenu(nint tray)
    parameters:
    - id: tray
      type: System.IntPtr
      description: the tray to bind the menu to.
    return:
      type: System.IntPtr
      description: (SDL_TrayMenu *) Returns the newly created menu.
    content.vb: Public Shared Function CreateTrayMenu(tray As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.CreateTrayMenu*
  nameWithType.vb: Sdl.CreateTrayMenu(IntPtr)
  fullName.vb: SharpSDL3.Sdl.CreateTrayMenu(System.IntPtr)
  name.vb: CreateTrayMenu(IntPtr)
- uid: SharpSDL3.Sdl.CreateTraySubmenu(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.CreateTraySubmenu(System.IntPtr)
  id: CreateTraySubmenu(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: CreateTraySubmenu(nint)
  nameWithType: Sdl.CreateTraySubmenu(nint)
  fullName: SharpSDL3.Sdl.CreateTraySubmenu(nint)
  type: Method
  source:
    remote:
      path: SDL3/Tray.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: CreateTraySubmenu
    path: ../../repos/SDL3-CS/SDL3/Tray.cs
    startLine: 93
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Create a submenu for a system tray entry.
  remarks: >-
    This should be called at most once per tray entry.

    <p><strong>Thread Safety:</strong> This function should be called on the thread that created the tray.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.InsertTrayEntryAt(System.IntPtr%2cSystem.Int32%2cSystem.String%2cSharpSDL3.Enums.TrayEntryFlags)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetTraySubmenu(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetTrayMenuParentEntry(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint CreateTraySubmenu(nint entry)
    parameters:
    - id: entry
      type: System.IntPtr
      description: the tray entry to bind the menu to.
    return:
      type: System.IntPtr
      description: (SDL_TrayMenu *) Returns the newly created menu.
    content.vb: Public Shared Function CreateTraySubmenu(entry As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.CreateTraySubmenu*
  nameWithType.vb: Sdl.CreateTraySubmenu(IntPtr)
  fullName.vb: SharpSDL3.Sdl.CreateTraySubmenu(System.IntPtr)
  name.vb: CreateTraySubmenu(IntPtr)
- uid: SharpSDL3.Sdl.DestroyTray(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.DestroyTray(System.IntPtr)
  id: DestroyTray(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: DestroyTray(nint)
  nameWithType: Sdl.DestroyTray(nint)
  fullName: SharpSDL3.Sdl.DestroyTray(nint)
  type: Method
  source:
    remote:
      path: SDL3/Tray.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: DestroyTray
    path: ../../repos/SDL3-CS/SDL3/Tray.cs
    startLine: 114
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Destroys a tray object.
  remarks: >-
    This also destroys all associated menus and entries.

    <p><strong>Thread Safety:</strong> This function should be called on the thread that created the tray.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateTray(System.IntPtr%2cSystem.String)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void DestroyTray(nint tray)
    parameters:
    - id: tray
      type: System.IntPtr
      description: the tray icon to be destroyed.
    content.vb: Public Shared Sub DestroyTray(tray As IntPtr)
  overload: SharpSDL3.Sdl.DestroyTray*
  nameWithType.vb: Sdl.DestroyTray(IntPtr)
  fullName.vb: SharpSDL3.Sdl.DestroyTray(System.IntPtr)
  name.vb: DestroyTray(IntPtr)
- uid: SharpSDL3.Sdl.GetTrayEntries(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetTrayEntries(System.IntPtr)
  id: GetTrayEntries(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetTrayEntries(nint)
  nameWithType: Sdl.GetTrayEntries(nint)
  fullName: SharpSDL3.Sdl.GetTrayEntries(nint)
  type: Method
  source:
    remote:
      path: SDL3/Tray.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetTrayEntries
    path: ../../repos/SDL3-CS/SDL3/Tray.cs
    startLine: 133
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Returns a list of entries in the menu, in order.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should be called on the thread that created the tray.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.RemoveTrayEntry(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.InsertTrayEntryAt(System.IntPtr%2cSystem.Int32%2cSystem.String%2cSharpSDL3.Enums.TrayEntryFlags)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static Span<nint> GetTrayEntries(nint menu)
    parameters:
    - id: menu
      type: System.IntPtr
      description: The menu to get entries from.
    return:
      type: System.Span{System.IntPtr}
      description: (const SDL_TrayEntry **) Returns a <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>-terminated list ofentries within the given menu. The pointer becomes invalid when anyfunction that inserts or deletes entries in the menu is called.
    content.vb: Public Shared Function GetTrayEntries(menu As IntPtr) As Span(Of IntPtr)
  overload: SharpSDL3.Sdl.GetTrayEntries*
  nameWithType.vb: Sdl.GetTrayEntries(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetTrayEntries(System.IntPtr)
  name.vb: GetTrayEntries(IntPtr)
- uid: SharpSDL3.Sdl.GetTrayEntryChecked(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetTrayEntryChecked(System.IntPtr)
  id: GetTrayEntryChecked(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetTrayEntryChecked(nint)
  nameWithType: Sdl.GetTrayEntryChecked(nint)
  fullName: SharpSDL3.Sdl.GetTrayEntryChecked(nint)
  type: Method
  source:
    remote:
      path: SDL3/Tray.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetTrayEntryChecked
    path: ../../repos/SDL3-CS/SDL3/Tray.cs
    startLine: 172
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Gets whether or not an entry is checked.
  remarks: >-
    The entry must have been created with the

    SDL_TRAYENTRY_CHECKBOX flag.

    <p><strong>Thread Safety:</strong> This function should be called on the thread that created the tray.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetTrayEntries(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.InsertTrayEntryAt(System.IntPtr%2cSystem.Int32%2cSystem.String%2cSharpSDL3.Enums.TrayEntryFlags)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetTrayEntryChecked(System.IntPtr%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool GetTrayEntryChecked(nint entry)
    parameters:
    - id: entry
      type: System.IntPtr
      description: the entry to be read.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the entry is checked; <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Public Shared Function GetTrayEntryChecked(entry As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.GetTrayEntryChecked*
  nameWithType.vb: Sdl.GetTrayEntryChecked(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetTrayEntryChecked(System.IntPtr)
  name.vb: GetTrayEntryChecked(IntPtr)
- uid: SharpSDL3.Sdl.GetTrayEntryEnabled(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetTrayEntryEnabled(System.IntPtr)
  id: GetTrayEntryEnabled(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetTrayEntryEnabled(nint)
  nameWithType: Sdl.GetTrayEntryEnabled(nint)
  fullName: SharpSDL3.Sdl.GetTrayEntryEnabled(nint)
  type: Method
  source:
    remote:
      path: SDL3/Tray.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetTrayEntryEnabled
    path: ../../repos/SDL3-CS/SDL3/Tray.cs
    startLine: 195
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Gets whether or not an entry is enabled.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should be called on the thread that created the tray.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetTrayEntries(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.InsertTrayEntryAt(System.IntPtr%2cSystem.Int32%2cSystem.String%2cSharpSDL3.Enums.TrayEntryFlags)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetTrayEntryEnabled(System.IntPtr%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static bool GetTrayEntryEnabled(nint entry)
    parameters:
    - id: entry
      type: System.IntPtr
      description: the entry to be read.
    return:
      type: System.Boolean
      description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the entry is enabled; <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Public Shared Function GetTrayEntryEnabled(entry As IntPtr) As Boolean
  overload: SharpSDL3.Sdl.GetTrayEntryEnabled*
  nameWithType.vb: Sdl.GetTrayEntryEnabled(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetTrayEntryEnabled(System.IntPtr)
  name.vb: GetTrayEntryEnabled(IntPtr)
- uid: SharpSDL3.Sdl.GetTrayEntryLabel(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetTrayEntryLabel(System.IntPtr)
  id: GetTrayEntryLabel(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetTrayEntryLabel(nint)
  nameWithType: Sdl.GetTrayEntryLabel(nint)
  fullName: SharpSDL3.Sdl.GetTrayEntryLabel(nint)
  type: Method
  source:
    remote:
      path: SDL3/Tray.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetTrayEntryLabel
    path: ../../repos/SDL3-CS/SDL3/Tray.cs
    startLine: 219
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Gets the label of an entry.
  remarks: >-
    If the returned value is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>, the entry is a separator.

    <p><strong>Thread Safety:</strong> This function should be called on the thread that created the tray.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetTrayEntries(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.InsertTrayEntryAt(System.IntPtr%2cSystem.Int32%2cSystem.String%2cSharpSDL3.Enums.TrayEntryFlags)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.SetTrayEntryLabel(System.IntPtr%2cSystem.String)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static string GetTrayEntryLabel(nint entry)
    parameters:
    - id: entry
      type: System.IntPtr
      description: the entry to be read.
    return:
      type: System.String
      description: Returns the label of the entry in UTF-8 encoding.
    content.vb: Public Shared Function GetTrayEntryLabel(entry As IntPtr) As String
  overload: SharpSDL3.Sdl.GetTrayEntryLabel*
  nameWithType.vb: Sdl.GetTrayEntryLabel(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetTrayEntryLabel(System.IntPtr)
  name.vb: GetTrayEntryLabel(IntPtr)
- uid: SharpSDL3.Sdl.GetTrayEntryParent(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetTrayEntryParent(System.IntPtr)
  id: GetTrayEntryParent(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetTrayEntryParent(nint)
  nameWithType: Sdl.GetTrayEntryParent(nint)
  fullName: SharpSDL3.Sdl.GetTrayEntryParent(nint)
  type: Method
  source:
    remote:
      path: SDL3/Tray.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetTrayEntryParent
    path: ../../repos/SDL3-CS/SDL3/Tray.cs
    startLine: 240
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Gets the menu containing a certain tray entry.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should be called on the thread that created the tray.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.InsertTrayEntryAt(System.IntPtr%2cSystem.Int32%2cSystem.String%2cSharpSDL3.Enums.TrayEntryFlags)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint GetTrayEntryParent(nint entry)
    parameters:
    - id: entry
      type: System.IntPtr
      description: the entry for which to get the parent menu.
    return:
      type: System.IntPtr
      description: (SDL_TrayMenu *) Returns the parent menu.
    content.vb: Public Shared Function GetTrayEntryParent(entry As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.GetTrayEntryParent*
  nameWithType.vb: Sdl.GetTrayEntryParent(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetTrayEntryParent(System.IntPtr)
  name.vb: GetTrayEntryParent(IntPtr)
- uid: SharpSDL3.Sdl.GetTrayMenu(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetTrayMenu(System.IntPtr)
  id: GetTrayMenu(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetTrayMenu(nint)
  nameWithType: Sdl.GetTrayMenu(nint)
  fullName: SharpSDL3.Sdl.GetTrayMenu(nint)
  type: Method
  source:
    remote:
      path: SDL3/Tray.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetTrayMenu
    path: ../../repos/SDL3-CS/SDL3/Tray.cs
    startLine: 264
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Gets a previously created tray menu.
  remarks: >-
    You should have called SDL_CreateTrayMenu() on the

    tray object. This function allows you to fetch it again later.

    <p><strong>Thread Safety:</strong> This function should be called on the thread that created the tray.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateTray(System.IntPtr%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.CreateTrayMenu(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint GetTrayMenu(nint tray)
    parameters:
    - id: tray
      type: System.IntPtr
      description: the tray entry to bind the menu to.
    return:
      type: System.IntPtr
      description: (SDL_TrayMenu *) Returns the newly created menu.
    content.vb: Public Shared Function GetTrayMenu(tray As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.GetTrayMenu*
  nameWithType.vb: Sdl.GetTrayMenu(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetTrayMenu(System.IntPtr)
  name.vb: GetTrayMenu(IntPtr)
- uid: SharpSDL3.Sdl.GetTrayMenuParentEntry(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetTrayMenuParentEntry(System.IntPtr)
  id: GetTrayMenuParentEntry(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetTrayMenuParentEntry(nint)
  nameWithType: Sdl.GetTrayMenuParentEntry(nint)
  fullName: SharpSDL3.Sdl.GetTrayMenuParentEntry(nint)
  type: Method
  source:
    remote:
      path: SDL3/Tray.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetTrayMenuParentEntry
    path: ../../repos/SDL3-CS/SDL3/Tray.cs
    startLine: 289
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Gets the entry for which the menu is a submenu, if the current menu is a submenu.
  remarks: >-
    Either this function or

    SDL_GetTrayMenuParentTray() will return

    non-<a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for any given menu.

    <p><strong>Thread Safety:</strong> This function should be called on the thread that created the tray.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateTraySubmenu(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetTrayMenuParentTray(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint GetTrayMenuParentEntry(nint menu)
    parameters:
    - id: menu
      type: System.IntPtr
      description: the menu for which to get the parent entry.
    return:
      type: System.IntPtr
      description: (SDL_TrayEntry *) Returns the parent entry, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> ifthis menu is not a submenu.
    content.vb: Public Shared Function GetTrayMenuParentEntry(menu As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.GetTrayMenuParentEntry*
  nameWithType.vb: Sdl.GetTrayMenuParentEntry(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetTrayMenuParentEntry(System.IntPtr)
  name.vb: GetTrayMenuParentEntry(IntPtr)
- uid: SharpSDL3.Sdl.GetTrayMenuParentTray(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetTrayMenuParentTray(System.IntPtr)
  id: GetTrayMenuParentTray(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetTrayMenuParentTray(nint)
  nameWithType: Sdl.GetTrayMenuParentTray(nint)
  fullName: SharpSDL3.Sdl.GetTrayMenuParentTray(nint)
  type: Method
  source:
    remote:
      path: SDL3/Tray.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetTrayMenuParentTray
    path: ../../repos/SDL3-CS/SDL3/Tray.cs
    startLine: 314
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Gets the tray for which this menu is the first-level menu, if the current menu isn't a submenu.
  remarks: >-
    Either this function or

    SDL_GetTrayMenuParentEntry() will return

    non-<a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for any given menu.

    <p><strong>Thread Safety:</strong> This function should be called on the thread that created the tray.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateTrayMenu(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetTrayMenuParentEntry(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint GetTrayMenuParentTray(nint menu)
    parameters:
    - id: menu
      type: System.IntPtr
      description: the menu for which to get the parent enttrayry.
    return:
      type: System.IntPtr
      description: (SDL_Tray *) Returns the parent tray, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if this menu is asubmenu.
    content.vb: Public Shared Function GetTrayMenuParentTray(menu As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.GetTrayMenuParentTray*
  nameWithType.vb: Sdl.GetTrayMenuParentTray(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetTrayMenuParentTray(System.IntPtr)
  name.vb: GetTrayMenuParentTray(IntPtr)
- uid: SharpSDL3.Sdl.GetTraySubmenu(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetTraySubmenu(System.IntPtr)
  id: GetTraySubmenu(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetTraySubmenu(nint)
  nameWithType: Sdl.GetTraySubmenu(nint)
  fullName: SharpSDL3.Sdl.GetTraySubmenu(nint)
  type: Method
  source:
    remote:
      path: SDL3/Tray.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetTraySubmenu
    path: ../../repos/SDL3-CS/SDL3/Tray.cs
    startLine: 338
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Gets a previously created tray entry submenu.
  remarks: >-
    You should have called SDL_CreateTraySubmenu() on

    the entry object. This function allows you to fetch it again later.

    <p><strong>Thread Safety:</strong> This function should be called on the thread that created the tray.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.InsertTrayEntryAt(System.IntPtr%2cSystem.Int32%2cSystem.String%2cSharpSDL3.Enums.TrayEntryFlags)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.CreateTraySubmenu(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint GetTraySubmenu(nint entry)
    parameters:
    - id: entry
      type: System.IntPtr
      description: the tray entry to bind the menu to.
    return:
      type: System.IntPtr
      description: (SDL_TrayMenu *) Returns the newly created menu.
    content.vb: Public Shared Function GetTraySubmenu(entry As IntPtr) As IntPtr
  overload: SharpSDL3.Sdl.GetTraySubmenu*
  nameWithType.vb: Sdl.GetTraySubmenu(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetTraySubmenu(System.IntPtr)
  name.vb: GetTraySubmenu(IntPtr)
- uid: SharpSDL3.Sdl.InsertTrayEntryAt(System.IntPtr,System.Int32,System.String,SharpSDL3.Enums.TrayEntryFlags)
  commentId: M:SharpSDL3.Sdl.InsertTrayEntryAt(System.IntPtr,System.Int32,System.String,SharpSDL3.Enums.TrayEntryFlags)
  id: InsertTrayEntryAt(System.IntPtr,System.Int32,System.String,SharpSDL3.Enums.TrayEntryFlags)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: InsertTrayEntryAt(nint, int, string, TrayEntryFlags)
  nameWithType: Sdl.InsertTrayEntryAt(nint, int, string, TrayEntryFlags)
  fullName: SharpSDL3.Sdl.InsertTrayEntryAt(nint, int, string, SharpSDL3.Enums.TrayEntryFlags)
  type: Method
  source:
    remote:
      path: SDL3/Tray.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: InsertTrayEntryAt
    path: ../../repos/SDL3-CS/SDL3/Tray.cs
    startLine: 367
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Insert a tray entry at a given position.
  remarks: >-
    If label is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>, the entry will be a separator. Many functions won't work

    for an entry that is a separator.

    <p><strong>Thread Safety:</strong> This function should be called on the thread that created the tray.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Enums.TrayEntryFlags" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetTrayEntries(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.RemoveTrayEntry(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetTrayEntryParent(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static nint InsertTrayEntryAt(nint menu, int pos, string label, TrayEntryFlags flags)
    parameters:
    - id: menu
      type: System.IntPtr
      description: the menu to append the entry to.
    - id: pos
      type: System.Int32
      description: the desired position for the new entry. Entries at or following this place will be moved. If pos is -1, the entry is appended.
    - id: label
      type: System.String
      description: the text to be displayed on the entry, in UTF-8 encoding, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for a separator.
    - id: flags
      type: SharpSDL3.Enums.TrayEntryFlags
      description: a combination of flags, some of which are mandatory.
    return:
      type: System.IntPtr
      description: (SDL_TrayEntry *) Returns the newly created entry, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>if pos is out of bounds.
    content.vb: Public Shared Function InsertTrayEntryAt(menu As IntPtr, pos As Integer, label As String, flags As TrayEntryFlags) As IntPtr
  overload: SharpSDL3.Sdl.InsertTrayEntryAt*
  nameWithType.vb: Sdl.InsertTrayEntryAt(IntPtr, Integer, String, TrayEntryFlags)
  fullName.vb: SharpSDL3.Sdl.InsertTrayEntryAt(System.IntPtr, Integer, String, SharpSDL3.Enums.TrayEntryFlags)
  name.vb: InsertTrayEntryAt(IntPtr, Integer, String, TrayEntryFlags)
- uid: SharpSDL3.Sdl.RemoveTrayEntry(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.RemoveTrayEntry(System.IntPtr)
  id: RemoveTrayEntry(System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: RemoveTrayEntry(nint)
  nameWithType: Sdl.RemoveTrayEntry(nint)
  fullName: SharpSDL3.Sdl.RemoveTrayEntry(nint)
  type: Method
  source:
    remote:
      path: SDL3/Tray.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: RemoveTrayEntry
    path: ../../repos/SDL3-CS/SDL3/Tray.cs
    startLine: 391
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Removes a tray entry.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should be called on the thread that created the tray.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetTrayEntries(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.InsertTrayEntryAt(System.IntPtr%2cSystem.Int32%2cSystem.String%2cSharpSDL3.Enums.TrayEntryFlags)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void RemoveTrayEntry(nint entry)
    parameters:
    - id: entry
      type: System.IntPtr
      description: The entry to be deleted.
    content.vb: Public Shared Sub RemoveTrayEntry(entry As IntPtr)
  overload: SharpSDL3.Sdl.RemoveTrayEntry*
  nameWithType.vb: Sdl.RemoveTrayEntry(IntPtr)
  fullName.vb: SharpSDL3.Sdl.RemoveTrayEntry(System.IntPtr)
  name.vb: RemoveTrayEntry(IntPtr)
- uid: SharpSDL3.Sdl.SetTrayEntryCallback(System.IntPtr,SharpSDL3.Delegates.SdlTrayCallback,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.SetTrayEntryCallback(System.IntPtr,SharpSDL3.Delegates.SdlTrayCallback,System.IntPtr)
  id: SetTrayEntryCallback(System.IntPtr,SharpSDL3.Delegates.SdlTrayCallback,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetTrayEntryCallback(nint, SdlTrayCallback, nint)
  nameWithType: Sdl.SetTrayEntryCallback(nint, Delegates.SdlTrayCallback, nint)
  fullName: SharpSDL3.Sdl.SetTrayEntryCallback(nint, SharpSDL3.Delegates.SdlTrayCallback, nint)
  type: Method
  source:
    remote:
      path: SDL3/Tray.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetTrayEntryCallback
    path: ../../repos/SDL3-CS/SDL3/Tray.cs
    startLine: 410
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Sets a callback to be invoked when the entry is selected.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should be called on the thread that created the tray.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetTrayEntries(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.InsertTrayEntryAt(System.IntPtr%2cSystem.Int32%2cSystem.String%2cSharpSDL3.Enums.TrayEntryFlags)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void SetTrayEntryCallback(nint entry, Delegates.SdlTrayCallback callback, nint userdata)
    parameters:
    - id: entry
      type: System.IntPtr
      description: the entry to be updated.
    - id: callback
      type: SharpSDL3.Delegates.SdlTrayCallback
      description: a callback to be invoked when the entry is selected.
    - id: userdata
      type: System.IntPtr
      description: an optional pointer to pass extra data to the callback when it will be invoked.
    content.vb: Public Shared Sub SetTrayEntryCallback(entry As IntPtr, callback As Delegates.SdlTrayCallback, userdata As IntPtr)
  overload: SharpSDL3.Sdl.SetTrayEntryCallback*
  nameWithType.vb: Sdl.SetTrayEntryCallback(IntPtr, Delegates.SdlTrayCallback, IntPtr)
  fullName.vb: SharpSDL3.Sdl.SetTrayEntryCallback(System.IntPtr, SharpSDL3.Delegates.SdlTrayCallback, System.IntPtr)
  name.vb: SetTrayEntryCallback(IntPtr, SdlTrayCallback, IntPtr)
- uid: SharpSDL3.Sdl.SetTrayEntryChecked(System.IntPtr,System.Boolean)
  commentId: M:SharpSDL3.Sdl.SetTrayEntryChecked(System.IntPtr,System.Boolean)
  id: SetTrayEntryChecked(System.IntPtr,System.Boolean)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetTrayEntryChecked(nint, bool)
  nameWithType: Sdl.SetTrayEntryChecked(nint, bool)
  fullName: SharpSDL3.Sdl.SetTrayEntryChecked(nint, bool)
  type: Method
  source:
    remote:
      path: SDL3/Tray.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetTrayEntryChecked
    path: ../../repos/SDL3-CS/SDL3/Tray.cs
    startLine: 434
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Sets whether or not an entry is checked.
  remarks: >-
    The entry must have been created with the

    SDL_TRAYENTRY_CHECKBOX flag.

    <p><strong>Thread Safety:</strong> This function should be called on the thread that created the tray.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetTrayEntries(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.InsertTrayEntryAt(System.IntPtr%2cSystem.Int32%2cSystem.String%2cSharpSDL3.Enums.TrayEntryFlags)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetTrayEntryChecked(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void SetTrayEntryChecked(nint entry, bool check)
    parameters:
    - id: entry
      type: System.IntPtr
      description: the entry to be updated.
    - id: check
      type: System.Boolean
    content.vb: Public Shared Sub SetTrayEntryChecked(entry As IntPtr, check As Boolean)
  overload: SharpSDL3.Sdl.SetTrayEntryChecked*
  nameWithType.vb: Sdl.SetTrayEntryChecked(IntPtr, Boolean)
  fullName.vb: SharpSDL3.Sdl.SetTrayEntryChecked(System.IntPtr, Boolean)
  name.vb: SetTrayEntryChecked(IntPtr, Boolean)
- uid: SharpSDL3.Sdl.SetTrayEntryEnabled(System.IntPtr,System.Boolean)
  commentId: M:SharpSDL3.Sdl.SetTrayEntryEnabled(System.IntPtr,System.Boolean)
  id: SetTrayEntryEnabled(System.IntPtr,System.Boolean)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetTrayEntryEnabled(nint, bool)
  nameWithType: Sdl.SetTrayEntryEnabled(nint, bool)
  fullName: SharpSDL3.Sdl.SetTrayEntryEnabled(nint, bool)
  type: Method
  source:
    remote:
      path: SDL3/Tray.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetTrayEntryEnabled
    path: ../../repos/SDL3-CS/SDL3/Tray.cs
    startLine: 453
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Sets whether or not an entry is enabled.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should be called on the thread that created the tray.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetTrayEntries(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.InsertTrayEntryAt(System.IntPtr%2cSystem.Int32%2cSystem.String%2cSharpSDL3.Enums.TrayEntryFlags)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetTrayEntryEnabled(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void SetTrayEntryEnabled(nint entry, bool enabled)
    parameters:
    - id: entry
      type: System.IntPtr
      description: the entry to be updated.
    - id: enabled
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the entry should be enabled; <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Public Shared Sub SetTrayEntryEnabled(entry As IntPtr, enabled As Boolean)
  overload: SharpSDL3.Sdl.SetTrayEntryEnabled*
  nameWithType.vb: Sdl.SetTrayEntryEnabled(IntPtr, Boolean)
  fullName.vb: SharpSDL3.Sdl.SetTrayEntryEnabled(System.IntPtr, Boolean)
  name.vb: SetTrayEntryEnabled(IntPtr, Boolean)
- uid: SharpSDL3.Sdl.SetTrayEntryLabel(System.IntPtr,System.String)
  commentId: M:SharpSDL3.Sdl.SetTrayEntryLabel(System.IntPtr,System.String)
  id: SetTrayEntryLabel(System.IntPtr,System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetTrayEntryLabel(nint, string)
  nameWithType: Sdl.SetTrayEntryLabel(nint, string)
  fullName: SharpSDL3.Sdl.SetTrayEntryLabel(nint, string)
  type: Method
  source:
    remote:
      path: SDL3/Tray.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetTrayEntryLabel
    path: ../../repos/SDL3-CS/SDL3/Tray.cs
    startLine: 476
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Sets the label of an entry.
  remarks: >-
    An entry cannot change between a separator and an ordinary entry; that is,

    it is not possible to set a non-<a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> label on an entry that has a <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>

    label (separators), or to set a <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> label to an entry that has a non-<a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>

    label. The function will silently fail if that happens.

    <p><strong>Thread Safety:</strong> This function should be called on the thread that created the tray.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetTrayEntries(System.IntPtr)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.InsertTrayEntryAt(System.IntPtr%2cSystem.Int32%2cSystem.String%2cSharpSDL3.Enums.TrayEntryFlags)" data-throw-if-not-resolved="false"></xref>

    <xref href="SharpSDL3.Sdl.GetTrayEntryLabel(System.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void SetTrayEntryLabel(nint entry, string label)
    parameters:
    - id: entry
      type: System.IntPtr
      description: the entry to be updated.
    - id: label
      type: System.String
      description: the new label for the entry in UTF-8 encoding.
    content.vb: Public Shared Sub SetTrayEntryLabel(entry As IntPtr, label As String)
  overload: SharpSDL3.Sdl.SetTrayEntryLabel*
  nameWithType.vb: Sdl.SetTrayEntryLabel(IntPtr, String)
  fullName.vb: SharpSDL3.Sdl.SetTrayEntryLabel(System.IntPtr, String)
  name.vb: SetTrayEntryLabel(IntPtr, String)
- uid: SharpSDL3.Sdl.SetTrayIcon(System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.SetTrayIcon(System.IntPtr,System.IntPtr)
  id: SetTrayIcon(System.IntPtr,System.IntPtr)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetTrayIcon(nint, nint)
  nameWithType: Sdl.SetTrayIcon(nint, nint)
  fullName: SharpSDL3.Sdl.SetTrayIcon(nint, nint)
  type: Method
  source:
    remote:
      path: SDL3/Tray.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetTrayIcon
    path: ../../repos/SDL3-CS/SDL3/Tray.cs
    startLine: 496
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Updates the system tray icon's icon.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should be called on the thread that created the tray.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateTray(System.IntPtr%2cSystem.String)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void SetTrayIcon(nint tray, nint icon)
    parameters:
    - id: tray
      type: System.IntPtr
      description: the tray icon to be updated.
    - id: icon
      type: System.IntPtr
      description: the new icon. May be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    content.vb: Public Shared Sub SetTrayIcon(tray As IntPtr, icon As IntPtr)
  overload: SharpSDL3.Sdl.SetTrayIcon*
  nameWithType.vb: Sdl.SetTrayIcon(IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.SetTrayIcon(System.IntPtr, System.IntPtr)
  name.vb: SetTrayIcon(IntPtr, IntPtr)
- uid: SharpSDL3.Sdl.SetTrayTooltip(System.IntPtr,System.String)
  commentId: M:SharpSDL3.Sdl.SetTrayTooltip(System.IntPtr,System.String)
  id: SetTrayTooltip(System.IntPtr,System.String)
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: SetTrayTooltip(nint, string)
  nameWithType: Sdl.SetTrayTooltip(nint, string)
  fullName: SharpSDL3.Sdl.SetTrayTooltip(nint, string)
  type: Method
  source:
    remote:
      path: SDL3/Tray.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: SetTrayTooltip
    path: ../../repos/SDL3-CS/SDL3/Tray.cs
    startLine: 516
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Updates the system tray icon's tooltip.
  remarks: >-
    <p><strong>Thread Safety:</strong> This function should be called on the thread that created the tray.</p>

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.CreateTray(System.IntPtr%2cSystem.String)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void SetTrayTooltip(nint tray, string tooltip)
    parameters:
    - id: tray
      type: System.IntPtr
      description: the tray icon to be updated.
    - id: tooltip
      type: System.String
      description: the new tooltip in UTF-8 encoding. May be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    content.vb: Public Shared Sub SetTrayTooltip(tray As IntPtr, tooltip As String)
  overload: SharpSDL3.Sdl.SetTrayTooltip*
  nameWithType.vb: Sdl.SetTrayTooltip(IntPtr, String)
  fullName.vb: SharpSDL3.Sdl.SetTrayTooltip(System.IntPtr, String)
  name.vb: SetTrayTooltip(IntPtr, String)
- uid: SharpSDL3.Sdl.GetRevision
  commentId: M:SharpSDL3.Sdl.GetRevision
  id: GetRevision
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetRevision()
  nameWithType: Sdl.GetRevision()
  fullName: SharpSDL3.Sdl.GetRevision()
  type: Method
  source:
    remote:
      path: SDL3/Version.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetRevision
    path: ../../repos/SDL3-CS/SDL3/Version.cs
    startLine: 19
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the code revision of the SDL library that is linked against your program.
  remarks: >-
    This value is the revision of the code you are linking against and may be

    different from the code you are compiling with, which is found in the

    constant SDL_REVISION.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetVersion" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static string GetRevision()
    return:
      type: System.String
      description: Returns an arbitrary string, uniquely identifying the exactrevision of the SDL library in use.
    content.vb: Public Shared Function GetRevision() As String
  overload: SharpSDL3.Sdl.GetRevision*
- uid: SharpSDL3.Sdl.GetVersion
  commentId: M:SharpSDL3.Sdl.GetVersion
  id: GetVersion
  parent: SharpSDL3.Sdl
  langs:
  - csharp
  - vb
  name: GetVersion()
  nameWithType: Sdl.GetVersion()
  fullName: SharpSDL3.Sdl.GetVersion()
  type: Method
  source:
    remote:
      path: SDL3/Version.cs
      branch: main
      repo: https://github.com/Blizzardo1/SharpSDL3
    id: GetVersion
    path: ../../repos/SDL3-CS/SDL3/Version.cs
    startLine: 34
  assemblies:
  - SharpSDL3
  namespace: SharpSDL3
  summary: Get the version of SDL that is linked against your program.
  remarks: >-
    If you are linking to SDL dynamically, then it is possible that the current

    version will be different than the version you compiled against. This

    function returns the current version, while SDL_VERSION is

    the version you compiled with.

    <p><strong>Version:</strong> This function is available since SDL 3.2.0.</p>

    <xref href="SharpSDL3.Sdl.GetRevision" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static int GetVersion()
    return:
      type: System.Int32
      description: Returns the version of the linked library.
    content.vb: Public Shared Function GetVersion() As Integer
  overload: SharpSDL3.Sdl.GetVersion*
references:
- uid: SharpSDL3
  commentId: N:SharpSDL3
  href: SharpSDL3.html
  name: SharpSDL3
  nameWithType: SharpSDL3
  fullName: SharpSDL3
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SharpSDL3.Sdl.SetAssertionHandler(SharpSDL3.Delegates.SdlAssertionHandler,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.SetAssertionHandler(SharpSDL3.Delegates.SdlAssertionHandler,System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetAssertionHandler_SharpSDL3_Delegates_SdlAssertionHandler_System_IntPtr_
  name: SetAssertionHandler(SdlAssertionHandler, nint)
  nameWithType: Sdl.SetAssertionHandler(Delegates.SdlAssertionHandler, nint)
  fullName: SharpSDL3.Sdl.SetAssertionHandler(SharpSDL3.Delegates.SdlAssertionHandler, nint)
  nameWithType.vb: Sdl.SetAssertionHandler(Delegates.SdlAssertionHandler, IntPtr)
  fullName.vb: SharpSDL3.Sdl.SetAssertionHandler(SharpSDL3.Delegates.SdlAssertionHandler, System.IntPtr)
  name.vb: SetAssertionHandler(SdlAssertionHandler, IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetAssertionHandler(SharpSDL3.Delegates.SdlAssertionHandler,System.IntPtr)
    name: SetAssertionHandler
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetAssertionHandler_SharpSDL3_Delegates_SdlAssertionHandler_System_IntPtr_
  - name: (
  - uid: SharpSDL3.Delegates.SdlAssertionHandler
    name: SdlAssertionHandler
    href: SharpSDL3.Delegates.SdlAssertionHandler.html
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetAssertionHandler(SharpSDL3.Delegates.SdlAssertionHandler,System.IntPtr)
    name: SetAssertionHandler
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetAssertionHandler_SharpSDL3_Delegates_SdlAssertionHandler_System_IntPtr_
  - name: (
  - uid: SharpSDL3.Delegates.SdlAssertionHandler
    name: SdlAssertionHandler
    href: SharpSDL3.Delegates.SdlAssertionHandler.html
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GetAssertionHandler*
  commentId: Overload:SharpSDL3.Sdl.GetAssertionHandler
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAssertionHandler_System_IntPtr__
  name: GetAssertionHandler
  nameWithType: Sdl.GetAssertionHandler
  fullName: SharpSDL3.Sdl.GetAssertionHandler
- uid: System.IntPtr
  commentId: T:System.IntPtr
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.intptr
  name: nint
  nameWithType: nint
  fullName: nint
  nameWithType.vb: IntPtr
  fullName.vb: System.IntPtr
  name.vb: IntPtr
- uid: SharpSDL3.Delegates.SdlAssertionHandler
  commentId: T:SharpSDL3.Delegates.SdlAssertionHandler
  parent: SharpSDL3
  href: SharpSDL3.Delegates.html
  name: Delegates.SdlAssertionHandler
  nameWithType: Delegates.SdlAssertionHandler
  fullName: SharpSDL3.Delegates.SdlAssertionHandler
  spec.csharp:
  - uid: SharpSDL3.Delegates
    name: Delegates
    href: SharpSDL3.Delegates.html
  - name: .
  - uid: SharpSDL3.Delegates.SdlAssertionHandler
    name: SdlAssertionHandler
    href: SharpSDL3.Delegates.SdlAssertionHandler.html
  spec.vb:
  - uid: SharpSDL3.Delegates
    name: Delegates
    href: SharpSDL3.Delegates.html
  - name: .
  - uid: SharpSDL3.Delegates.SdlAssertionHandler
    name: SdlAssertionHandler
    href: SharpSDL3.Delegates.SdlAssertionHandler.html
- uid: SharpSDL3.Sdl.ResetAssertionReport
  commentId: M:SharpSDL3.Sdl.ResetAssertionReport
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ResetAssertionReport
  name: ResetAssertionReport()
  nameWithType: Sdl.ResetAssertionReport()
  fullName: SharpSDL3.Sdl.ResetAssertionReport()
  spec.csharp:
  - uid: SharpSDL3.Sdl.ResetAssertionReport
    name: ResetAssertionReport
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ResetAssertionReport
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.ResetAssertionReport
    name: ResetAssertionReport
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ResetAssertionReport
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.Quit
  commentId: M:SharpSDL3.Sdl.Quit
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_Quit
  name: Quit()
  nameWithType: Sdl.Quit()
  fullName: SharpSDL3.Sdl.Quit()
  spec.csharp:
  - uid: SharpSDL3.Sdl.Quit
    name: Quit
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_Quit
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.Quit
    name: Quit
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_Quit
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.GetAssertionReport*
  commentId: Overload:SharpSDL3.Sdl.GetAssertionReport
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAssertionReport
  name: GetAssertionReport
  nameWithType: Sdl.GetAssertionReport
  fullName: SharpSDL3.Sdl.GetAssertionReport
- uid: SharpSDL3.Sdl.GetAssertionHandler(System.IntPtr@)
  commentId: M:SharpSDL3.Sdl.GetAssertionHandler(System.IntPtr@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAssertionHandler_System_IntPtr__
  name: GetAssertionHandler(out nint)
  nameWithType: Sdl.GetAssertionHandler(out nint)
  fullName: SharpSDL3.Sdl.GetAssertionHandler(out nint)
  nameWithType.vb: Sdl.GetAssertionHandler(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetAssertionHandler(System.IntPtr)
  name.vb: GetAssertionHandler(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetAssertionHandler(System.IntPtr@)
    name: GetAssertionHandler
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAssertionHandler_System_IntPtr__
  - name: (
  - name: out
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetAssertionHandler(System.IntPtr@)
    name: GetAssertionHandler
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAssertionHandler_System_IntPtr__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GetDefaultAssertionHandler*
  commentId: Overload:SharpSDL3.Sdl.GetDefaultAssertionHandler
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetDefaultAssertionHandler
  name: GetDefaultAssertionHandler
  nameWithType: Sdl.GetDefaultAssertionHandler
  fullName: SharpSDL3.Sdl.GetDefaultAssertionHandler
- uid: SharpSDL3.Sdl.ReportAssertion*
  commentId: Overload:SharpSDL3.Sdl.ReportAssertion
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReportAssertion_SharpSDL3_Structs_AssertData__System_String_System_String_System_Int32_
  name: ReportAssertion
  nameWithType: Sdl.ReportAssertion
  fullName: SharpSDL3.Sdl.ReportAssertion
- uid: SharpSDL3.Structs.AssertData
  commentId: T:SharpSDL3.Structs.AssertData
  parent: SharpSDL3.Structs
  href: SharpSDL3.Structs.AssertData.html
  name: AssertData
  nameWithType: AssertData
  fullName: SharpSDL3.Structs.AssertData
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: SharpSDL3.Enums.AssertState
  commentId: T:SharpSDL3.Enums.AssertState
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.AssertState.html
  name: AssertState
  nameWithType: AssertState
  fullName: SharpSDL3.Enums.AssertState
- uid: SharpSDL3.Structs
  commentId: N:SharpSDL3.Structs
  href: SharpSDL3.html
  name: SharpSDL3.Structs
  nameWithType: SharpSDL3.Structs
  fullName: SharpSDL3.Structs
  spec.csharp:
  - uid: SharpSDL3
    name: SharpSDL3
    href: SharpSDL3.html
  - name: .
  - uid: SharpSDL3.Structs
    name: Structs
    href: SharpSDL3.Structs.html
  spec.vb:
  - uid: SharpSDL3
    name: SharpSDL3
    href: SharpSDL3.html
  - name: .
  - uid: SharpSDL3.Structs
    name: Structs
    href: SharpSDL3.Structs.html
- uid: SharpSDL3.Enums
  commentId: N:SharpSDL3.Enums
  href: SharpSDL3.html
  name: SharpSDL3.Enums
  nameWithType: SharpSDL3.Enums
  fullName: SharpSDL3.Enums
  spec.csharp:
  - uid: SharpSDL3
    name: SharpSDL3
    href: SharpSDL3.html
  - name: .
  - uid: SharpSDL3.Enums
    name: Enums
    href: SharpSDL3.Enums.html
  spec.vb:
  - uid: SharpSDL3
    name: SharpSDL3
    href: SharpSDL3.html
  - name: .
  - uid: SharpSDL3.Enums
    name: Enums
    href: SharpSDL3.Enums.html
- uid: SharpSDL3.Sdl.GetAssertionReport
  commentId: M:SharpSDL3.Sdl.GetAssertionReport
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAssertionReport
  name: GetAssertionReport()
  nameWithType: Sdl.GetAssertionReport()
  fullName: SharpSDL3.Sdl.GetAssertionReport()
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetAssertionReport
    name: GetAssertionReport
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAssertionReport
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetAssertionReport
    name: GetAssertionReport
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAssertionReport
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.ResetAssertionReport*
  commentId: Overload:SharpSDL3.Sdl.ResetAssertionReport
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ResetAssertionReport
  name: ResetAssertionReport
  nameWithType: Sdl.ResetAssertionReport
  fullName: SharpSDL3.Sdl.ResetAssertionReport
- uid: SharpSDL3.Sdl.SetAssertionHandler*
  commentId: Overload:SharpSDL3.Sdl.SetAssertionHandler
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetAssertionHandler_SharpSDL3_Delegates_SdlAssertionHandler_System_IntPtr_
  name: SetAssertionHandler
  nameWithType: Sdl.SetAssertionHandler
  fullName: SharpSDL3.Sdl.SetAssertionHandler
- uid: SharpSDL3.Sdl.CloseAsyncIO(System.IntPtr,SharpSDL3.Structs.SdlBool,System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.CloseAsyncIO(System.IntPtr,SharpSDL3.Structs.SdlBool,System.IntPtr,System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CloseAsyncIO_System_IntPtr_SharpSDL3_Structs_SdlBool_System_IntPtr_System_IntPtr_
  name: CloseAsyncIO(nint, SdlBool, nint, nint)
  nameWithType: Sdl.CloseAsyncIO(nint, SdlBool, nint, nint)
  fullName: SharpSDL3.Sdl.CloseAsyncIO(nint, SharpSDL3.Structs.SdlBool, nint, nint)
  nameWithType.vb: Sdl.CloseAsyncIO(IntPtr, SdlBool, IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.CloseAsyncIO(System.IntPtr, SharpSDL3.Structs.SdlBool, System.IntPtr, System.IntPtr)
  name.vb: CloseAsyncIO(IntPtr, SdlBool, IntPtr, IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.CloseAsyncIO(System.IntPtr,SharpSDL3.Structs.SdlBool,System.IntPtr,System.IntPtr)
    name: CloseAsyncIO
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CloseAsyncIO_System_IntPtr_SharpSDL3_Structs_SdlBool_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.SdlBool
    name: SdlBool
    href: SharpSDL3.Structs.SdlBool.html
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.CloseAsyncIO(System.IntPtr,SharpSDL3.Structs.SdlBool,System.IntPtr,System.IntPtr)
    name: CloseAsyncIO
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CloseAsyncIO_System_IntPtr_SharpSDL3_Structs_SdlBool_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.SdlBool
    name: SdlBool
    href: SharpSDL3.Structs.SdlBool.html
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.ReadAsyncIO(System.IntPtr,System.IntPtr,System.UInt64,System.UInt64,System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.ReadAsyncIO(System.IntPtr,System.IntPtr,System.UInt64,System.UInt64,System.IntPtr,System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReadAsyncIO_System_IntPtr_System_IntPtr_System_UInt64_System_UInt64_System_IntPtr_System_IntPtr_
  name: ReadAsyncIO(nint, nint, ulong, ulong, nint, nint)
  nameWithType: Sdl.ReadAsyncIO(nint, nint, ulong, ulong, nint, nint)
  fullName: SharpSDL3.Sdl.ReadAsyncIO(nint, nint, ulong, ulong, nint, nint)
  nameWithType.vb: Sdl.ReadAsyncIO(IntPtr, IntPtr, ULong, ULong, IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.ReadAsyncIO(System.IntPtr, System.IntPtr, ULong, ULong, System.IntPtr, System.IntPtr)
  name.vb: ReadAsyncIO(IntPtr, IntPtr, ULong, ULong, IntPtr, IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.ReadAsyncIO(System.IntPtr,System.IntPtr,System.UInt64,System.UInt64,System.IntPtr,System.IntPtr)
    name: ReadAsyncIO
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReadAsyncIO_System_IntPtr_System_IntPtr_System_UInt64_System_UInt64_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.ReadAsyncIO(System.IntPtr,System.IntPtr,System.UInt64,System.UInt64,System.IntPtr,System.IntPtr)
    name: ReadAsyncIO
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReadAsyncIO_System_IntPtr_System_IntPtr_System_UInt64_System_UInt64_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.WriteAsyncIO(System.IntPtr,System.IntPtr,System.UInt64,System.UInt64,System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.WriteAsyncIO(System.IntPtr,System.IntPtr,System.UInt64,System.UInt64,System.IntPtr,System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WriteAsyncIO_System_IntPtr_System_IntPtr_System_UInt64_System_UInt64_System_IntPtr_System_IntPtr_
  name: WriteAsyncIO(nint, nint, ulong, ulong, nint, nint)
  nameWithType: Sdl.WriteAsyncIO(nint, nint, ulong, ulong, nint, nint)
  fullName: SharpSDL3.Sdl.WriteAsyncIO(nint, nint, ulong, ulong, nint, nint)
  nameWithType.vb: Sdl.WriteAsyncIO(IntPtr, IntPtr, ULong, ULong, IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.WriteAsyncIO(System.IntPtr, System.IntPtr, ULong, ULong, System.IntPtr, System.IntPtr)
  name.vb: WriteAsyncIO(IntPtr, IntPtr, ULong, ULong, IntPtr, IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.WriteAsyncIO(System.IntPtr,System.IntPtr,System.UInt64,System.UInt64,System.IntPtr,System.IntPtr)
    name: WriteAsyncIO
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WriteAsyncIO_System_IntPtr_System_IntPtr_System_UInt64_System_UInt64_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.WriteAsyncIO(System.IntPtr,System.IntPtr,System.UInt64,System.UInt64,System.IntPtr,System.IntPtr)
    name: WriteAsyncIO
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WriteAsyncIO_System_IntPtr_System_IntPtr_System_UInt64_System_UInt64_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GetError
  commentId: M:SharpSDL3.Sdl.GetError
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetError
  name: GetError()
  nameWithType: Sdl.GetError()
  fullName: SharpSDL3.Sdl.GetError()
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetError
    name: GetError
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetError
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetError
    name: GetError
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetError
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.AsyncIOFromFile*
  commentId: Overload:SharpSDL3.Sdl.AsyncIOFromFile
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_AsyncIOFromFile_System_String_System_String_
  name: AsyncIOFromFile
  nameWithType: Sdl.AsyncIOFromFile
  fullName: SharpSDL3.Sdl.AsyncIOFromFile
- uid: SharpSDL3.Sdl.CloseAsyncIO*
  commentId: Overload:SharpSDL3.Sdl.CloseAsyncIO
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CloseAsyncIO_System_IntPtr_SharpSDL3_Structs_SdlBool_System_IntPtr_System_IntPtr_
  name: CloseAsyncIO
  nameWithType: Sdl.CloseAsyncIO
  fullName: SharpSDL3.Sdl.CloseAsyncIO
- uid: SharpSDL3.Structs.SdlBool
  commentId: T:SharpSDL3.Structs.SdlBool
  parent: SharpSDL3.Structs
  href: SharpSDL3.Structs.SdlBool.html
  name: SdlBool
  nameWithType: SdlBool
  fullName: SharpSDL3.Structs.SdlBool
- uid: SharpSDL3.Sdl.DestroyAsyncIOQueue(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.DestroyAsyncIOQueue(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyAsyncIOQueue_System_IntPtr_
  name: DestroyAsyncIOQueue(nint)
  nameWithType: Sdl.DestroyAsyncIOQueue(nint)
  fullName: SharpSDL3.Sdl.DestroyAsyncIOQueue(nint)
  nameWithType.vb: Sdl.DestroyAsyncIOQueue(IntPtr)
  fullName.vb: SharpSDL3.Sdl.DestroyAsyncIOQueue(System.IntPtr)
  name.vb: DestroyAsyncIOQueue(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.DestroyAsyncIOQueue(System.IntPtr)
    name: DestroyAsyncIOQueue
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyAsyncIOQueue_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.DestroyAsyncIOQueue(System.IntPtr)
    name: DestroyAsyncIOQueue
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyAsyncIOQueue_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GetAsyncIOResult(System.IntPtr,SharpSDL3.Structs.AsyncIoOutcome@)
  commentId: M:SharpSDL3.Sdl.GetAsyncIOResult(System.IntPtr,SharpSDL3.Structs.AsyncIoOutcome@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAsyncIOResult_System_IntPtr_SharpSDL3_Structs_AsyncIoOutcome__
  name: GetAsyncIOResult(nint, out AsyncIoOutcome)
  nameWithType: Sdl.GetAsyncIOResult(nint, out AsyncIoOutcome)
  fullName: SharpSDL3.Sdl.GetAsyncIOResult(nint, out SharpSDL3.Structs.AsyncIoOutcome)
  nameWithType.vb: Sdl.GetAsyncIOResult(IntPtr, AsyncIoOutcome)
  fullName.vb: SharpSDL3.Sdl.GetAsyncIOResult(System.IntPtr, SharpSDL3.Structs.AsyncIoOutcome)
  name.vb: GetAsyncIOResult(IntPtr, AsyncIoOutcome)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetAsyncIOResult(System.IntPtr,SharpSDL3.Structs.AsyncIoOutcome@)
    name: GetAsyncIOResult
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAsyncIOResult_System_IntPtr_SharpSDL3_Structs_AsyncIoOutcome__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: SharpSDL3.Structs.AsyncIoOutcome
    name: AsyncIoOutcome
    href: SharpSDL3.Structs.AsyncIoOutcome.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetAsyncIOResult(System.IntPtr,SharpSDL3.Structs.AsyncIoOutcome@)
    name: GetAsyncIOResult
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAsyncIOResult_System_IntPtr_SharpSDL3_Structs_AsyncIoOutcome__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.AsyncIoOutcome
    name: AsyncIoOutcome
    href: SharpSDL3.Structs.AsyncIoOutcome.html
  - name: )
- uid: SharpSDL3.Sdl.WaitAsyncIOResult(System.IntPtr,SharpSDL3.Structs.AsyncIoOutcome@,System.Int32)
  commentId: M:SharpSDL3.Sdl.WaitAsyncIOResult(System.IntPtr,SharpSDL3.Structs.AsyncIoOutcome@,System.Int32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WaitAsyncIOResult_System_IntPtr_SharpSDL3_Structs_AsyncIoOutcome__System_Int32_
  name: WaitAsyncIOResult(nint, out AsyncIoOutcome, int)
  nameWithType: Sdl.WaitAsyncIOResult(nint, out AsyncIoOutcome, int)
  fullName: SharpSDL3.Sdl.WaitAsyncIOResult(nint, out SharpSDL3.Structs.AsyncIoOutcome, int)
  nameWithType.vb: Sdl.WaitAsyncIOResult(IntPtr, AsyncIoOutcome, Integer)
  fullName.vb: SharpSDL3.Sdl.WaitAsyncIOResult(System.IntPtr, SharpSDL3.Structs.AsyncIoOutcome, Integer)
  name.vb: WaitAsyncIOResult(IntPtr, AsyncIoOutcome, Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.WaitAsyncIOResult(System.IntPtr,SharpSDL3.Structs.AsyncIoOutcome@,System.Int32)
    name: WaitAsyncIOResult
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WaitAsyncIOResult_System_IntPtr_SharpSDL3_Structs_AsyncIoOutcome__System_Int32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: SharpSDL3.Structs.AsyncIoOutcome
    name: AsyncIoOutcome
    href: SharpSDL3.Structs.AsyncIoOutcome.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.WaitAsyncIOResult(System.IntPtr,SharpSDL3.Structs.AsyncIoOutcome@,System.Int32)
    name: WaitAsyncIOResult
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WaitAsyncIOResult_System_IntPtr_SharpSDL3_Structs_AsyncIoOutcome__System_Int32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.AsyncIoOutcome
    name: AsyncIoOutcome
    href: SharpSDL3.Structs.AsyncIoOutcome.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.CreateAsyncIOQueue*
  commentId: Overload:SharpSDL3.Sdl.CreateAsyncIOQueue
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateAsyncIOQueue
  name: CreateAsyncIOQueue
  nameWithType: Sdl.CreateAsyncIOQueue
  fullName: SharpSDL3.Sdl.CreateAsyncIOQueue
- uid: SharpSDL3.Sdl.DestroyAsyncIOQueue*
  commentId: Overload:SharpSDL3.Sdl.DestroyAsyncIOQueue
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyAsyncIOQueue_System_IntPtr_
  name: DestroyAsyncIOQueue
  nameWithType: Sdl.DestroyAsyncIOQueue
  fullName: SharpSDL3.Sdl.DestroyAsyncIOQueue
- uid: SharpSDL3.Sdl.GetAsyncIOResult*
  commentId: Overload:SharpSDL3.Sdl.GetAsyncIOResult
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAsyncIOResult_System_IntPtr_SharpSDL3_Structs_AsyncIoOutcome__
  name: GetAsyncIOResult
  nameWithType: Sdl.GetAsyncIOResult
  fullName: SharpSDL3.Sdl.GetAsyncIOResult
- uid: SharpSDL3.Structs.AsyncIoOutcome
  commentId: T:SharpSDL3.Structs.AsyncIoOutcome
  parent: SharpSDL3.Structs
  href: SharpSDL3.Structs.AsyncIoOutcome.html
  name: AsyncIoOutcome
  nameWithType: AsyncIoOutcome
  fullName: SharpSDL3.Structs.AsyncIoOutcome
- uid: SharpSDL3.Sdl.GetAsyncIOSize*
  commentId: Overload:SharpSDL3.Sdl.GetAsyncIOSize
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAsyncIOSize_System_IntPtr_
  name: GetAsyncIOSize
  nameWithType: Sdl.GetAsyncIOSize
  fullName: SharpSDL3.Sdl.GetAsyncIOSize
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: SharpSDL3.Sdl.LoadFileAsync*
  commentId: Overload:SharpSDL3.Sdl.LoadFileAsync
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LoadFileAsync_System_String_System_IntPtr_System_IntPtr_
  name: LoadFileAsync
  nameWithType: Sdl.LoadFileAsync
  fullName: SharpSDL3.Sdl.LoadFileAsync
- uid: SharpSDL3.Sdl.ReadAsyncIO*
  commentId: Overload:SharpSDL3.Sdl.ReadAsyncIO
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReadAsyncIO_System_IntPtr_System_IntPtr_System_UInt64_System_UInt64_System_IntPtr_System_IntPtr_
  name: ReadAsyncIO
  nameWithType: Sdl.ReadAsyncIO
  fullName: SharpSDL3.Sdl.ReadAsyncIO
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong
  nameWithType: ulong
  fullName: ulong
  nameWithType.vb: ULong
  fullName.vb: ULong
  name.vb: ULong
- uid: SharpSDL3.Sdl.SignalAsyncIOQueue*
  commentId: Overload:SharpSDL3.Sdl.SignalAsyncIOQueue
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SignalAsyncIOQueue_System_IntPtr_
  name: SignalAsyncIOQueue
  nameWithType: Sdl.SignalAsyncIOQueue
  fullName: SharpSDL3.Sdl.SignalAsyncIOQueue
- uid: SharpSDL3.Sdl.SignalAsyncIOQueue(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.SignalAsyncIOQueue(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SignalAsyncIOQueue_System_IntPtr_
  name: SignalAsyncIOQueue(nint)
  nameWithType: Sdl.SignalAsyncIOQueue(nint)
  fullName: SharpSDL3.Sdl.SignalAsyncIOQueue(nint)
  nameWithType.vb: Sdl.SignalAsyncIOQueue(IntPtr)
  fullName.vb: SharpSDL3.Sdl.SignalAsyncIOQueue(System.IntPtr)
  name.vb: SignalAsyncIOQueue(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SignalAsyncIOQueue(System.IntPtr)
    name: SignalAsyncIOQueue
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SignalAsyncIOQueue_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SignalAsyncIOQueue(System.IntPtr)
    name: SignalAsyncIOQueue
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SignalAsyncIOQueue_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.WaitAsyncIOResult*
  commentId: Overload:SharpSDL3.Sdl.WaitAsyncIOResult
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WaitAsyncIOResult_System_IntPtr_SharpSDL3_Structs_AsyncIoOutcome__System_Int32_
  name: WaitAsyncIOResult
  nameWithType: Sdl.WaitAsyncIOResult
  fullName: SharpSDL3.Sdl.WaitAsyncIOResult
- uid: SharpSDL3.Sdl.WriteAsyncIO*
  commentId: Overload:SharpSDL3.Sdl.WriteAsyncIO
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WriteAsyncIO_System_IntPtr_System_IntPtr_System_UInt64_System_UInt64_System_IntPtr_System_IntPtr_
  name: WriteAsyncIO
  nameWithType: Sdl.WriteAsyncIO
  fullName: SharpSDL3.Sdl.WriteAsyncIO
- uid: SharpSDL3.Sdl.AddAtomicInt*
  commentId: Overload:SharpSDL3.Sdl.AddAtomicInt
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_AddAtomicInt_SharpSDL3_Structs_AtomicInt__System_Int32_
  name: AddAtomicInt
  nameWithType: Sdl.AddAtomicInt
  fullName: SharpSDL3.Sdl.AddAtomicInt
- uid: SharpSDL3.Structs.AtomicInt
  commentId: T:SharpSDL3.Structs.AtomicInt
  parent: SharpSDL3.Structs
  href: SharpSDL3.Structs.AtomicInt.html
  name: AtomicInt
  nameWithType: AtomicInt
  fullName: SharpSDL3.Structs.AtomicInt
- uid: SharpSDL3.Sdl.GetAtomicInt(SharpSDL3.Structs.AtomicInt@)
  commentId: M:SharpSDL3.Sdl.GetAtomicInt(SharpSDL3.Structs.AtomicInt@)
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAtomicInt_SharpSDL3_Structs_AtomicInt__
  name: GetAtomicInt(ref AtomicInt)
  nameWithType: Sdl.GetAtomicInt(ref AtomicInt)
  fullName: SharpSDL3.Sdl.GetAtomicInt(ref SharpSDL3.Structs.AtomicInt)
  nameWithType.vb: Sdl.GetAtomicInt(AtomicInt)
  fullName.vb: SharpSDL3.Sdl.GetAtomicInt(SharpSDL3.Structs.AtomicInt)
  name.vb: GetAtomicInt(AtomicInt)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetAtomicInt(SharpSDL3.Structs.AtomicInt@)
    name: GetAtomicInt
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAtomicInt_SharpSDL3_Structs_AtomicInt__
  - name: (
  - name: ref
  - name: " "
  - uid: SharpSDL3.Structs.AtomicInt
    name: AtomicInt
    href: SharpSDL3.Structs.AtomicInt.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetAtomicInt(SharpSDL3.Structs.AtomicInt@)
    name: GetAtomicInt
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAtomicInt_SharpSDL3_Structs_AtomicInt__
  - name: (
  - uid: SharpSDL3.Structs.AtomicInt
    name: AtomicInt
    href: SharpSDL3.Structs.AtomicInt.html
  - name: )
- uid: SharpSDL3.Sdl.SetAtomicInt(SharpSDL3.Structs.AtomicInt@,System.Int32)
  commentId: M:SharpSDL3.Sdl.SetAtomicInt(SharpSDL3.Structs.AtomicInt@,System.Int32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetAtomicInt_SharpSDL3_Structs_AtomicInt__System_Int32_
  name: SetAtomicInt(ref AtomicInt, int)
  nameWithType: Sdl.SetAtomicInt(ref AtomicInt, int)
  fullName: SharpSDL3.Sdl.SetAtomicInt(ref SharpSDL3.Structs.AtomicInt, int)
  nameWithType.vb: Sdl.SetAtomicInt(AtomicInt, Integer)
  fullName.vb: SharpSDL3.Sdl.SetAtomicInt(SharpSDL3.Structs.AtomicInt, Integer)
  name.vb: SetAtomicInt(AtomicInt, Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetAtomicInt(SharpSDL3.Structs.AtomicInt@,System.Int32)
    name: SetAtomicInt
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetAtomicInt_SharpSDL3_Structs_AtomicInt__System_Int32_
  - name: (
  - name: ref
  - name: " "
  - uid: SharpSDL3.Structs.AtomicInt
    name: AtomicInt
    href: SharpSDL3.Structs.AtomicInt.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetAtomicInt(SharpSDL3.Structs.AtomicInt@,System.Int32)
    name: SetAtomicInt
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetAtomicInt_SharpSDL3_Structs_AtomicInt__System_Int32_
  - name: (
  - uid: SharpSDL3.Structs.AtomicInt
    name: AtomicInt
    href: SharpSDL3.Structs.AtomicInt.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.CompareAndSwapAtomicInt*
  commentId: Overload:SharpSDL3.Sdl.CompareAndSwapAtomicInt
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CompareAndSwapAtomicInt_SharpSDL3_Structs_AtomicInt__System_Int32_System_Int32_
  name: CompareAndSwapAtomicInt
  nameWithType: Sdl.CompareAndSwapAtomicInt
  fullName: SharpSDL3.Sdl.CompareAndSwapAtomicInt
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SharpSDL3.Sdl.CompareAndSwapAtomicInt(SharpSDL3.Structs.AtomicInt@,System.Int32,System.Int32)
  commentId: M:SharpSDL3.Sdl.CompareAndSwapAtomicInt(SharpSDL3.Structs.AtomicInt@,System.Int32,System.Int32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CompareAndSwapAtomicInt_SharpSDL3_Structs_AtomicInt__System_Int32_System_Int32_
  name: CompareAndSwapAtomicInt(ref AtomicInt, int, int)
  nameWithType: Sdl.CompareAndSwapAtomicInt(ref AtomicInt, int, int)
  fullName: SharpSDL3.Sdl.CompareAndSwapAtomicInt(ref SharpSDL3.Structs.AtomicInt, int, int)
  nameWithType.vb: Sdl.CompareAndSwapAtomicInt(AtomicInt, Integer, Integer)
  fullName.vb: SharpSDL3.Sdl.CompareAndSwapAtomicInt(SharpSDL3.Structs.AtomicInt, Integer, Integer)
  name.vb: CompareAndSwapAtomicInt(AtomicInt, Integer, Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.CompareAndSwapAtomicInt(SharpSDL3.Structs.AtomicInt@,System.Int32,System.Int32)
    name: CompareAndSwapAtomicInt
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CompareAndSwapAtomicInt_SharpSDL3_Structs_AtomicInt__System_Int32_System_Int32_
  - name: (
  - name: ref
  - name: " "
  - uid: SharpSDL3.Structs.AtomicInt
    name: AtomicInt
    href: SharpSDL3.Structs.AtomicInt.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.CompareAndSwapAtomicInt(SharpSDL3.Structs.AtomicInt@,System.Int32,System.Int32)
    name: CompareAndSwapAtomicInt
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CompareAndSwapAtomicInt_SharpSDL3_Structs_AtomicInt__System_Int32_System_Int32_
  - name: (
  - uid: SharpSDL3.Structs.AtomicInt
    name: AtomicInt
    href: SharpSDL3.Structs.AtomicInt.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.GetAtomicPointer(System.IntPtr@)
  commentId: M:SharpSDL3.Sdl.GetAtomicPointer(System.IntPtr@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAtomicPointer_System_IntPtr__
  name: GetAtomicPointer(ref nint)
  nameWithType: Sdl.GetAtomicPointer(ref nint)
  fullName: SharpSDL3.Sdl.GetAtomicPointer(ref nint)
  nameWithType.vb: Sdl.GetAtomicPointer(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetAtomicPointer(System.IntPtr)
  name.vb: GetAtomicPointer(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetAtomicPointer(System.IntPtr@)
    name: GetAtomicPointer
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAtomicPointer_System_IntPtr__
  - name: (
  - name: ref
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetAtomicPointer(System.IntPtr@)
    name: GetAtomicPointer
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAtomicPointer_System_IntPtr__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.SetAtomicPointer(System.IntPtr@,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.SetAtomicPointer(System.IntPtr@,System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetAtomicPointer_System_IntPtr__System_IntPtr_
  name: SetAtomicPointer(ref nint, nint)
  nameWithType: Sdl.SetAtomicPointer(ref nint, nint)
  fullName: SharpSDL3.Sdl.SetAtomicPointer(ref nint, nint)
  nameWithType.vb: Sdl.SetAtomicPointer(IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.SetAtomicPointer(System.IntPtr, System.IntPtr)
  name.vb: SetAtomicPointer(IntPtr, IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetAtomicPointer(System.IntPtr@,System.IntPtr)
    name: SetAtomicPointer
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetAtomicPointer_System_IntPtr__System_IntPtr_
  - name: (
  - name: ref
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetAtomicPointer(System.IntPtr@,System.IntPtr)
    name: SetAtomicPointer
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetAtomicPointer_System_IntPtr__System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.CompareAndSwapAtomicPointer*
  commentId: Overload:SharpSDL3.Sdl.CompareAndSwapAtomicPointer
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CompareAndSwapAtomicPointer_System_IntPtr__System_IntPtr_System_IntPtr_
  name: CompareAndSwapAtomicPointer
  nameWithType: Sdl.CompareAndSwapAtomicPointer
  fullName: SharpSDL3.Sdl.CompareAndSwapAtomicPointer
- uid: SharpSDL3.Sdl.GetAtomicU32(SharpSDL3.Structs.AtomicU32@)
  commentId: M:SharpSDL3.Sdl.GetAtomicU32(SharpSDL3.Structs.AtomicU32@)
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAtomicU32_SharpSDL3_Structs_AtomicU32__
  name: GetAtomicU32(ref AtomicU32)
  nameWithType: Sdl.GetAtomicU32(ref AtomicU32)
  fullName: SharpSDL3.Sdl.GetAtomicU32(ref SharpSDL3.Structs.AtomicU32)
  nameWithType.vb: Sdl.GetAtomicU32(AtomicU32)
  fullName.vb: SharpSDL3.Sdl.GetAtomicU32(SharpSDL3.Structs.AtomicU32)
  name.vb: GetAtomicU32(AtomicU32)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetAtomicU32(SharpSDL3.Structs.AtomicU32@)
    name: GetAtomicU32
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAtomicU32_SharpSDL3_Structs_AtomicU32__
  - name: (
  - name: ref
  - name: " "
  - uid: SharpSDL3.Structs.AtomicU32
    name: AtomicU32
    href: SharpSDL3.Structs.AtomicU32.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetAtomicU32(SharpSDL3.Structs.AtomicU32@)
    name: GetAtomicU32
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAtomicU32_SharpSDL3_Structs_AtomicU32__
  - name: (
  - uid: SharpSDL3.Structs.AtomicU32
    name: AtomicU32
    href: SharpSDL3.Structs.AtomicU32.html
  - name: )
- uid: SharpSDL3.Sdl.SetAtomicU32(SharpSDL3.Structs.AtomicU32@,System.UInt32)
  commentId: M:SharpSDL3.Sdl.SetAtomicU32(SharpSDL3.Structs.AtomicU32@,System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetAtomicU32_SharpSDL3_Structs_AtomicU32__System_UInt32_
  name: SetAtomicU32(ref AtomicU32, uint)
  nameWithType: Sdl.SetAtomicU32(ref AtomicU32, uint)
  fullName: SharpSDL3.Sdl.SetAtomicU32(ref SharpSDL3.Structs.AtomicU32, uint)
  nameWithType.vb: Sdl.SetAtomicU32(AtomicU32, UInteger)
  fullName.vb: SharpSDL3.Sdl.SetAtomicU32(SharpSDL3.Structs.AtomicU32, UInteger)
  name.vb: SetAtomicU32(AtomicU32, UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetAtomicU32(SharpSDL3.Structs.AtomicU32@,System.UInt32)
    name: SetAtomicU32
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetAtomicU32_SharpSDL3_Structs_AtomicU32__System_UInt32_
  - name: (
  - name: ref
  - name: " "
  - uid: SharpSDL3.Structs.AtomicU32
    name: AtomicU32
    href: SharpSDL3.Structs.AtomicU32.html
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetAtomicU32(SharpSDL3.Structs.AtomicU32@,System.UInt32)
    name: SetAtomicU32
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetAtomicU32_SharpSDL3_Structs_AtomicU32__System_UInt32_
  - name: (
  - uid: SharpSDL3.Structs.AtomicU32
    name: AtomicU32
    href: SharpSDL3.Structs.AtomicU32.html
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.CompareAndSwapAtomicU32*
  commentId: Overload:SharpSDL3.Sdl.CompareAndSwapAtomicU32
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CompareAndSwapAtomicU32_SharpSDL3_Structs_AtomicU32__System_UInt32_System_UInt32_
  name: CompareAndSwapAtomicU32
  nameWithType: Sdl.CompareAndSwapAtomicU32
  fullName: SharpSDL3.Sdl.CompareAndSwapAtomicU32
- uid: SharpSDL3.Structs.AtomicU32
  commentId: T:SharpSDL3.Structs.AtomicU32
  parent: SharpSDL3.Structs
  href: SharpSDL3.Structs.AtomicU32.html
  name: AtomicU32
  nameWithType: AtomicU32
  fullName: SharpSDL3.Structs.AtomicU32
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: SharpSDL3.Sdl.GetAtomicInt*
  commentId: Overload:SharpSDL3.Sdl.GetAtomicInt
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAtomicInt_SharpSDL3_Structs_AtomicInt__
  name: GetAtomicInt
  nameWithType: Sdl.GetAtomicInt
  fullName: SharpSDL3.Sdl.GetAtomicInt
- uid: SharpSDL3.Sdl.CompareAndSwapAtomicPointer(System.IntPtr@,System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.CompareAndSwapAtomicPointer(System.IntPtr@,System.IntPtr,System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CompareAndSwapAtomicPointer_System_IntPtr__System_IntPtr_System_IntPtr_
  name: CompareAndSwapAtomicPointer(ref nint, nint, nint)
  nameWithType: Sdl.CompareAndSwapAtomicPointer(ref nint, nint, nint)
  fullName: SharpSDL3.Sdl.CompareAndSwapAtomicPointer(ref nint, nint, nint)
  nameWithType.vb: Sdl.CompareAndSwapAtomicPointer(IntPtr, IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.CompareAndSwapAtomicPointer(System.IntPtr, System.IntPtr, System.IntPtr)
  name.vb: CompareAndSwapAtomicPointer(IntPtr, IntPtr, IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.CompareAndSwapAtomicPointer(System.IntPtr@,System.IntPtr,System.IntPtr)
    name: CompareAndSwapAtomicPointer
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CompareAndSwapAtomicPointer_System_IntPtr__System_IntPtr_System_IntPtr_
  - name: (
  - name: ref
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.CompareAndSwapAtomicPointer(System.IntPtr@,System.IntPtr,System.IntPtr)
    name: CompareAndSwapAtomicPointer
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CompareAndSwapAtomicPointer_System_IntPtr__System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GetAtomicPointer*
  commentId: Overload:SharpSDL3.Sdl.GetAtomicPointer
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAtomicPointer_System_IntPtr__
  name: GetAtomicPointer
  nameWithType: Sdl.GetAtomicPointer
  fullName: SharpSDL3.Sdl.GetAtomicPointer
- uid: SharpSDL3.Sdl.GetAtomicU32*
  commentId: Overload:SharpSDL3.Sdl.GetAtomicU32
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAtomicU32_SharpSDL3_Structs_AtomicU32__
  name: GetAtomicU32
  nameWithType: Sdl.GetAtomicU32
  fullName: SharpSDL3.Sdl.GetAtomicU32
- uid: SharpSDL3.Sdl.UnlockSpinlock(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.UnlockSpinlock(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UnlockSpinlock_System_IntPtr_
  name: UnlockSpinlock(nint)
  nameWithType: Sdl.UnlockSpinlock(nint)
  fullName: SharpSDL3.Sdl.UnlockSpinlock(nint)
  nameWithType.vb: Sdl.UnlockSpinlock(IntPtr)
  fullName.vb: SharpSDL3.Sdl.UnlockSpinlock(System.IntPtr)
  name.vb: UnlockSpinlock(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.UnlockSpinlock(System.IntPtr)
    name: UnlockSpinlock
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UnlockSpinlock_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.UnlockSpinlock(System.IntPtr)
    name: UnlockSpinlock
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UnlockSpinlock_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.LockSpinlock*
  commentId: Overload:SharpSDL3.Sdl.LockSpinlock
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LockSpinlock_System_IntPtr_
  name: LockSpinlock
  nameWithType: Sdl.LockSpinlock
  fullName: SharpSDL3.Sdl.LockSpinlock
- uid: SharpSDL3.Sdl.MemoryBarrierRelease
  commentId: M:SharpSDL3.Sdl.MemoryBarrierRelease
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_MemoryBarrierRelease
  name: MemoryBarrierRelease()
  nameWithType: Sdl.MemoryBarrierRelease()
  fullName: SharpSDL3.Sdl.MemoryBarrierRelease()
  spec.csharp:
  - uid: SharpSDL3.Sdl.MemoryBarrierRelease
    name: MemoryBarrierRelease
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_MemoryBarrierRelease
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.MemoryBarrierRelease
    name: MemoryBarrierRelease
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_MemoryBarrierRelease
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.MemoryBarrierAcquire*
  commentId: Overload:SharpSDL3.Sdl.MemoryBarrierAcquire
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_MemoryBarrierAcquire
  name: MemoryBarrierAcquire
  nameWithType: Sdl.MemoryBarrierAcquire
  fullName: SharpSDL3.Sdl.MemoryBarrierAcquire
- uid: SharpSDL3.Sdl.MemoryBarrierAcquire
  commentId: M:SharpSDL3.Sdl.MemoryBarrierAcquire
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_MemoryBarrierAcquire
  name: MemoryBarrierAcquire()
  nameWithType: Sdl.MemoryBarrierAcquire()
  fullName: SharpSDL3.Sdl.MemoryBarrierAcquire()
  spec.csharp:
  - uid: SharpSDL3.Sdl.MemoryBarrierAcquire
    name: MemoryBarrierAcquire
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_MemoryBarrierAcquire
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.MemoryBarrierAcquire
    name: MemoryBarrierAcquire
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_MemoryBarrierAcquire
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.MemoryBarrierRelease*
  commentId: Overload:SharpSDL3.Sdl.MemoryBarrierRelease
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_MemoryBarrierRelease
  name: MemoryBarrierRelease
  nameWithType: Sdl.MemoryBarrierRelease
  fullName: SharpSDL3.Sdl.MemoryBarrierRelease
- uid: SharpSDL3.Sdl.SetAtomicInt*
  commentId: Overload:SharpSDL3.Sdl.SetAtomicInt
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetAtomicInt_SharpSDL3_Structs_AtomicInt__System_Int32_
  name: SetAtomicInt
  nameWithType: Sdl.SetAtomicInt
  fullName: SharpSDL3.Sdl.SetAtomicInt
- uid: SharpSDL3.Sdl.SetAtomicPointer*
  commentId: Overload:SharpSDL3.Sdl.SetAtomicPointer
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetAtomicPointer_System_IntPtr__System_IntPtr_
  name: SetAtomicPointer
  nameWithType: Sdl.SetAtomicPointer
  fullName: SharpSDL3.Sdl.SetAtomicPointer
- uid: SharpSDL3.Sdl.SetAtomicU32*
  commentId: Overload:SharpSDL3.Sdl.SetAtomicU32
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetAtomicU32_SharpSDL3_Structs_AtomicU32__System_UInt32_
  name: SetAtomicU32
  nameWithType: Sdl.SetAtomicU32
  fullName: SharpSDL3.Sdl.SetAtomicU32
- uid: SharpSDL3.Sdl.LockSpinlock(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.LockSpinlock(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LockSpinlock_System_IntPtr_
  name: LockSpinlock(nint)
  nameWithType: Sdl.LockSpinlock(nint)
  fullName: SharpSDL3.Sdl.LockSpinlock(nint)
  nameWithType.vb: Sdl.LockSpinlock(IntPtr)
  fullName.vb: SharpSDL3.Sdl.LockSpinlock(System.IntPtr)
  name.vb: LockSpinlock(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.LockSpinlock(System.IntPtr)
    name: LockSpinlock
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LockSpinlock_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.LockSpinlock(System.IntPtr)
    name: LockSpinlock
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LockSpinlock_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.UnlockSpinlock*
  commentId: Overload:SharpSDL3.Sdl.UnlockSpinlock
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UnlockSpinlock_System_IntPtr_
  name: UnlockSpinlock
  nameWithType: Sdl.UnlockSpinlock
  fullName: SharpSDL3.Sdl.UnlockSpinlock
- uid: SharpSDL3.Sdl.PauseAudioDevice(System.UInt32)
  commentId: M:SharpSDL3.Sdl.PauseAudioDevice(System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_PauseAudioDevice_System_UInt32_
  name: PauseAudioDevice(uint)
  nameWithType: Sdl.PauseAudioDevice(uint)
  fullName: SharpSDL3.Sdl.PauseAudioDevice(uint)
  nameWithType.vb: Sdl.PauseAudioDevice(UInteger)
  fullName.vb: SharpSDL3.Sdl.PauseAudioDevice(UInteger)
  name.vb: PauseAudioDevice(UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.PauseAudioDevice(System.UInt32)
    name: PauseAudioDevice
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_PauseAudioDevice_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.PauseAudioDevice(System.UInt32)
    name: PauseAudioDevice
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_PauseAudioDevice_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.ResumeAudioDevice(System.UInt32)
  commentId: M:SharpSDL3.Sdl.ResumeAudioDevice(System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ResumeAudioDevice_System_UInt32_
  name: ResumeAudioDevice(uint)
  nameWithType: Sdl.ResumeAudioDevice(uint)
  fullName: SharpSDL3.Sdl.ResumeAudioDevice(uint)
  nameWithType.vb: Sdl.ResumeAudioDevice(UInteger)
  fullName.vb: SharpSDL3.Sdl.ResumeAudioDevice(UInteger)
  name.vb: ResumeAudioDevice(UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.ResumeAudioDevice(System.UInt32)
    name: ResumeAudioDevice
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ResumeAudioDevice_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.ResumeAudioDevice(System.UInt32)
    name: ResumeAudioDevice
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ResumeAudioDevice_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.AudioDevicePaused*
  commentId: Overload:SharpSDL3.Sdl.AudioDevicePaused
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_AudioDevicePaused_System_UInt32_
  name: AudioDevicePaused
  nameWithType: Sdl.AudioDevicePaused
  fullName: SharpSDL3.Sdl.AudioDevicePaused
- uid: SharpSDL3.Sdl.PauseAudioStreamDevice(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.PauseAudioStreamDevice(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_PauseAudioStreamDevice_System_IntPtr_
  name: PauseAudioStreamDevice(nint)
  nameWithType: Sdl.PauseAudioStreamDevice(nint)
  fullName: SharpSDL3.Sdl.PauseAudioStreamDevice(nint)
  nameWithType.vb: Sdl.PauseAudioStreamDevice(IntPtr)
  fullName.vb: SharpSDL3.Sdl.PauseAudioStreamDevice(System.IntPtr)
  name.vb: PauseAudioStreamDevice(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.PauseAudioStreamDevice(System.IntPtr)
    name: PauseAudioStreamDevice
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_PauseAudioStreamDevice_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.PauseAudioStreamDevice(System.IntPtr)
    name: PauseAudioStreamDevice
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_PauseAudioStreamDevice_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.ResumeAudioStreamDevice(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.ResumeAudioStreamDevice(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ResumeAudioStreamDevice_System_IntPtr_
  name: ResumeAudioStreamDevice(nint)
  nameWithType: Sdl.ResumeAudioStreamDevice(nint)
  fullName: SharpSDL3.Sdl.ResumeAudioStreamDevice(nint)
  nameWithType.vb: Sdl.ResumeAudioStreamDevice(IntPtr)
  fullName.vb: SharpSDL3.Sdl.ResumeAudioStreamDevice(System.IntPtr)
  name.vb: ResumeAudioStreamDevice(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.ResumeAudioStreamDevice(System.IntPtr)
    name: ResumeAudioStreamDevice
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ResumeAudioStreamDevice_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.ResumeAudioStreamDevice(System.IntPtr)
    name: ResumeAudioStreamDevice
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ResumeAudioStreamDevice_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.AudioStreamDevicePaused*
  commentId: Overload:SharpSDL3.Sdl.AudioStreamDevicePaused
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_AudioStreamDevicePaused_System_IntPtr_
  name: AudioStreamDevicePaused
  nameWithType: Sdl.AudioStreamDevicePaused
  fullName: SharpSDL3.Sdl.AudioStreamDevicePaused
- uid: SharpSDL3.Sdl.BindAudioStreams(System.UInt32,System.Span{System.IntPtr})
  commentId: M:SharpSDL3.Sdl.BindAudioStreams(System.UInt32,System.Span{System.IntPtr})
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BindAudioStreams_System_UInt32_System_Span_System_IntPtr__
  name: BindAudioStreams(uint, Span<nint>)
  nameWithType: Sdl.BindAudioStreams(uint, Span<nint>)
  fullName: SharpSDL3.Sdl.BindAudioStreams(uint, System.Span<nint>)
  nameWithType.vb: Sdl.BindAudioStreams(UInteger, Span(Of IntPtr))
  fullName.vb: SharpSDL3.Sdl.BindAudioStreams(UInteger, System.Span(Of System.IntPtr))
  name.vb: BindAudioStreams(UInteger, Span(Of IntPtr))
  spec.csharp:
  - uid: SharpSDL3.Sdl.BindAudioStreams(System.UInt32,System.Span{System.IntPtr})
    name: BindAudioStreams
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BindAudioStreams_System_UInt32_System_Span_System_IntPtr__
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: '>'
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.BindAudioStreams(System.UInt32,System.Span{System.IntPtr})
    name: BindAudioStreams
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BindAudioStreams_System_UInt32_System_Span_System_IntPtr__
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  - name: )
- uid: SharpSDL3.Sdl.UnbindAudioStream(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.UnbindAudioStream(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UnbindAudioStream_System_IntPtr_
  name: UnbindAudioStream(nint)
  nameWithType: Sdl.UnbindAudioStream(nint)
  fullName: SharpSDL3.Sdl.UnbindAudioStream(nint)
  nameWithType.vb: Sdl.UnbindAudioStream(IntPtr)
  fullName.vb: SharpSDL3.Sdl.UnbindAudioStream(System.IntPtr)
  name.vb: UnbindAudioStream(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.UnbindAudioStream(System.IntPtr)
    name: UnbindAudioStream
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UnbindAudioStream_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.UnbindAudioStream(System.IntPtr)
    name: UnbindAudioStream
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UnbindAudioStream_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GetAudioStreamDevice(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetAudioStreamDevice(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAudioStreamDevice_System_IntPtr_
  name: GetAudioStreamDevice(nint)
  nameWithType: Sdl.GetAudioStreamDevice(nint)
  fullName: SharpSDL3.Sdl.GetAudioStreamDevice(nint)
  nameWithType.vb: Sdl.GetAudioStreamDevice(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetAudioStreamDevice(System.IntPtr)
  name.vb: GetAudioStreamDevice(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetAudioStreamDevice(System.IntPtr)
    name: GetAudioStreamDevice
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAudioStreamDevice_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetAudioStreamDevice(System.IntPtr)
    name: GetAudioStreamDevice
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAudioStreamDevice_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.BindAudioStream*
  commentId: Overload:SharpSDL3.Sdl.BindAudioStream
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BindAudioStream_System_UInt32_System_IntPtr_
  name: BindAudioStream
  nameWithType: Sdl.BindAudioStream
  fullName: SharpSDL3.Sdl.BindAudioStream
- uid: SharpSDL3.Sdl.BindAudioStreams*
  commentId: Overload:SharpSDL3.Sdl.BindAudioStreams
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BindAudioStreams_System_UInt32_System_Span_System_IntPtr__
  name: BindAudioStreams
  nameWithType: Sdl.BindAudioStreams
  fullName: SharpSDL3.Sdl.BindAudioStreams
- uid: System.Span{System.IntPtr}
  commentId: T:System.Span{System.IntPtr}
  parent: System
  definition: System.Span`1
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<nint>
  nameWithType: Span<nint>
  fullName: System.Span<nint>
  nameWithType.vb: Span(Of IntPtr)
  fullName.vb: System.Span(Of System.IntPtr)
  name.vb: Span(Of IntPtr)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: System.Span`1
  commentId: T:System.Span`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<T>
  nameWithType: Span<T>
  fullName: System.Span<T>
  nameWithType.vb: Span(Of T)
  fullName.vb: System.Span(Of T)
  name.vb: Span(Of T)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: SharpSDL3.Sdl.GetAudioStreamAvailable(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetAudioStreamAvailable(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAudioStreamAvailable_System_IntPtr_
  name: GetAudioStreamAvailable(nint)
  nameWithType: Sdl.GetAudioStreamAvailable(nint)
  fullName: SharpSDL3.Sdl.GetAudioStreamAvailable(nint)
  nameWithType.vb: Sdl.GetAudioStreamAvailable(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetAudioStreamAvailable(System.IntPtr)
  name.vb: GetAudioStreamAvailable(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetAudioStreamAvailable(System.IntPtr)
    name: GetAudioStreamAvailable
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAudioStreamAvailable_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetAudioStreamAvailable(System.IntPtr)
    name: GetAudioStreamAvailable
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAudioStreamAvailable_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GetAudioStreamData(System.IntPtr,System.IntPtr,System.Int32)
  commentId: M:SharpSDL3.Sdl.GetAudioStreamData(System.IntPtr,System.IntPtr,System.Int32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAudioStreamData_System_IntPtr_System_IntPtr_System_Int32_
  name: GetAudioStreamData(nint, nint, int)
  nameWithType: Sdl.GetAudioStreamData(nint, nint, int)
  fullName: SharpSDL3.Sdl.GetAudioStreamData(nint, nint, int)
  nameWithType.vb: Sdl.GetAudioStreamData(IntPtr, IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.GetAudioStreamData(System.IntPtr, System.IntPtr, Integer)
  name.vb: GetAudioStreamData(IntPtr, IntPtr, Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetAudioStreamData(System.IntPtr,System.IntPtr,System.Int32)
    name: GetAudioStreamData
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAudioStreamData_System_IntPtr_System_IntPtr_System_Int32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetAudioStreamData(System.IntPtr,System.IntPtr,System.Int32)
    name: GetAudioStreamData
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAudioStreamData_System_IntPtr_System_IntPtr_System_Int32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.GetAudioStreamQueued(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetAudioStreamQueued(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAudioStreamQueued_System_IntPtr_
  name: GetAudioStreamQueued(nint)
  nameWithType: Sdl.GetAudioStreamQueued(nint)
  fullName: SharpSDL3.Sdl.GetAudioStreamQueued(nint)
  nameWithType.vb: Sdl.GetAudioStreamQueued(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetAudioStreamQueued(System.IntPtr)
  name.vb: GetAudioStreamQueued(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetAudioStreamQueued(System.IntPtr)
    name: GetAudioStreamQueued
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAudioStreamQueued_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetAudioStreamQueued(System.IntPtr)
    name: GetAudioStreamQueued
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAudioStreamQueued_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.PutAudioStreamData(System.IntPtr,System.IntPtr,System.Int32)
  commentId: M:SharpSDL3.Sdl.PutAudioStreamData(System.IntPtr,System.IntPtr,System.Int32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_PutAudioStreamData_System_IntPtr_System_IntPtr_System_Int32_
  name: PutAudioStreamData(nint, nint, int)
  nameWithType: Sdl.PutAudioStreamData(nint, nint, int)
  fullName: SharpSDL3.Sdl.PutAudioStreamData(nint, nint, int)
  nameWithType.vb: Sdl.PutAudioStreamData(IntPtr, IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.PutAudioStreamData(System.IntPtr, System.IntPtr, Integer)
  name.vb: PutAudioStreamData(IntPtr, IntPtr, Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.PutAudioStreamData(System.IntPtr,System.IntPtr,System.Int32)
    name: PutAudioStreamData
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_PutAudioStreamData_System_IntPtr_System_IntPtr_System_Int32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.PutAudioStreamData(System.IntPtr,System.IntPtr,System.Int32)
    name: PutAudioStreamData
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_PutAudioStreamData_System_IntPtr_System_IntPtr_System_Int32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.ClearAudioStream*
  commentId: Overload:SharpSDL3.Sdl.ClearAudioStream
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ClearAudioStream_System_IntPtr_
  name: ClearAudioStream
  nameWithType: Sdl.ClearAudioStream
  fullName: SharpSDL3.Sdl.ClearAudioStream
- uid: SharpSDL3.Sdl.OpenAudioDevice(System.UInt32,SharpSDL3.Structs.AudioSpec@)
  commentId: M:SharpSDL3.Sdl.OpenAudioDevice(System.UInt32,SharpSDL3.Structs.AudioSpec@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_OpenAudioDevice_System_UInt32_SharpSDL3_Structs_AudioSpec__
  name: OpenAudioDevice(uint, ref AudioSpec)
  nameWithType: Sdl.OpenAudioDevice(uint, ref AudioSpec)
  fullName: SharpSDL3.Sdl.OpenAudioDevice(uint, ref SharpSDL3.Structs.AudioSpec)
  nameWithType.vb: Sdl.OpenAudioDevice(UInteger, AudioSpec)
  fullName.vb: SharpSDL3.Sdl.OpenAudioDevice(UInteger, SharpSDL3.Structs.AudioSpec)
  name.vb: OpenAudioDevice(UInteger, AudioSpec)
  spec.csharp:
  - uid: SharpSDL3.Sdl.OpenAudioDevice(System.UInt32,SharpSDL3.Structs.AudioSpec@)
    name: OpenAudioDevice
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_OpenAudioDevice_System_UInt32_SharpSDL3_Structs_AudioSpec__
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - name: ref
  - name: " "
  - uid: SharpSDL3.Structs.AudioSpec
    name: AudioSpec
    href: SharpSDL3.Structs.AudioSpec.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.OpenAudioDevice(System.UInt32,SharpSDL3.Structs.AudioSpec@)
    name: OpenAudioDevice
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_OpenAudioDevice_System_UInt32_SharpSDL3_Structs_AudioSpec__
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.AudioSpec
    name: AudioSpec
    href: SharpSDL3.Structs.AudioSpec.html
  - name: )
- uid: SharpSDL3.Sdl.CloseAudioDevice*
  commentId: Overload:SharpSDL3.Sdl.CloseAudioDevice
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CloseAudioDevice_System_UInt32_
  name: CloseAudioDevice
  nameWithType: Sdl.CloseAudioDevice
  fullName: SharpSDL3.Sdl.CloseAudioDevice
- uid: SharpSDL3.Sdl.Free(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.Free(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_Free_System_IntPtr_
  name: Free(nint)
  nameWithType: Sdl.Free(nint)
  fullName: SharpSDL3.Sdl.Free(nint)
  nameWithType.vb: Sdl.Free(IntPtr)
  fullName.vb: SharpSDL3.Sdl.Free(System.IntPtr)
  name.vb: Free(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.Free(System.IntPtr)
    name: Free
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_Free_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.Free(System.IntPtr)
    name: Free
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_Free_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.ConvertAudioSamples*
  commentId: Overload:SharpSDL3.Sdl.ConvertAudioSamples
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ConvertAudioSamples_SharpSDL3_Structs_AudioSpec__System_IntPtr_System_Int32_SharpSDL3_Structs_AudioSpec__System_IntPtr_System_Int32__
  name: ConvertAudioSamples
  nameWithType: Sdl.ConvertAudioSamples
  fullName: SharpSDL3.Sdl.ConvertAudioSamples
- uid: SharpSDL3.Structs.AudioSpec
  commentId: T:SharpSDL3.Structs.AudioSpec
  parent: SharpSDL3.Structs
  href: SharpSDL3.Structs.AudioSpec.html
  name: AudioSpec
  nameWithType: AudioSpec
  fullName: SharpSDL3.Structs.AudioSpec
- uid: SharpSDL3.Sdl.FlushAudioStream(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.FlushAudioStream(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_FlushAudioStream_System_IntPtr_
  name: FlushAudioStream(nint)
  nameWithType: Sdl.FlushAudioStream(nint)
  fullName: SharpSDL3.Sdl.FlushAudioStream(nint)
  nameWithType.vb: Sdl.FlushAudioStream(IntPtr)
  fullName.vb: SharpSDL3.Sdl.FlushAudioStream(System.IntPtr)
  name.vb: FlushAudioStream(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.FlushAudioStream(System.IntPtr)
    name: FlushAudioStream
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_FlushAudioStream_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.FlushAudioStream(System.IntPtr)
    name: FlushAudioStream
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_FlushAudioStream_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.ClearAudioStream(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.ClearAudioStream(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ClearAudioStream_System_IntPtr_
  name: ClearAudioStream(nint)
  nameWithType: Sdl.ClearAudioStream(nint)
  fullName: SharpSDL3.Sdl.ClearAudioStream(nint)
  nameWithType.vb: Sdl.ClearAudioStream(IntPtr)
  fullName.vb: SharpSDL3.Sdl.ClearAudioStream(System.IntPtr)
  name.vb: ClearAudioStream(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.ClearAudioStream(System.IntPtr)
    name: ClearAudioStream
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ClearAudioStream_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.ClearAudioStream(System.IntPtr)
    name: ClearAudioStream
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ClearAudioStream_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.SetAudioStreamFormat(System.IntPtr,SharpSDL3.Structs.AudioSpec@,SharpSDL3.Structs.AudioSpec@)
  commentId: M:SharpSDL3.Sdl.SetAudioStreamFormat(System.IntPtr,SharpSDL3.Structs.AudioSpec@,SharpSDL3.Structs.AudioSpec@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetAudioStreamFormat_System_IntPtr_SharpSDL3_Structs_AudioSpec__SharpSDL3_Structs_AudioSpec__
  name: SetAudioStreamFormat(nint, ref AudioSpec, ref AudioSpec)
  nameWithType: Sdl.SetAudioStreamFormat(nint, ref AudioSpec, ref AudioSpec)
  fullName: SharpSDL3.Sdl.SetAudioStreamFormat(nint, ref SharpSDL3.Structs.AudioSpec, ref SharpSDL3.Structs.AudioSpec)
  nameWithType.vb: Sdl.SetAudioStreamFormat(IntPtr, AudioSpec, AudioSpec)
  fullName.vb: SharpSDL3.Sdl.SetAudioStreamFormat(System.IntPtr, SharpSDL3.Structs.AudioSpec, SharpSDL3.Structs.AudioSpec)
  name.vb: SetAudioStreamFormat(IntPtr, AudioSpec, AudioSpec)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetAudioStreamFormat(System.IntPtr,SharpSDL3.Structs.AudioSpec@,SharpSDL3.Structs.AudioSpec@)
    name: SetAudioStreamFormat
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetAudioStreamFormat_System_IntPtr_SharpSDL3_Structs_AudioSpec__SharpSDL3_Structs_AudioSpec__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: ref
  - name: " "
  - uid: SharpSDL3.Structs.AudioSpec
    name: AudioSpec
    href: SharpSDL3.Structs.AudioSpec.html
  - name: ','
  - name: " "
  - name: ref
  - name: " "
  - uid: SharpSDL3.Structs.AudioSpec
    name: AudioSpec
    href: SharpSDL3.Structs.AudioSpec.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetAudioStreamFormat(System.IntPtr,SharpSDL3.Structs.AudioSpec@,SharpSDL3.Structs.AudioSpec@)
    name: SetAudioStreamFormat
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetAudioStreamFormat_System_IntPtr_SharpSDL3_Structs_AudioSpec__SharpSDL3_Structs_AudioSpec__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.AudioSpec
    name: AudioSpec
    href: SharpSDL3.Structs.AudioSpec.html
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.AudioSpec
    name: AudioSpec
    href: SharpSDL3.Structs.AudioSpec.html
  - name: )
- uid: SharpSDL3.Sdl.DestroyAudioStream(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.DestroyAudioStream(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyAudioStream_System_IntPtr_
  name: DestroyAudioStream(nint)
  nameWithType: Sdl.DestroyAudioStream(nint)
  fullName: SharpSDL3.Sdl.DestroyAudioStream(nint)
  nameWithType.vb: Sdl.DestroyAudioStream(IntPtr)
  fullName.vb: SharpSDL3.Sdl.DestroyAudioStream(System.IntPtr)
  name.vb: DestroyAudioStream(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.DestroyAudioStream(System.IntPtr)
    name: DestroyAudioStream
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyAudioStream_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.DestroyAudioStream(System.IntPtr)
    name: DestroyAudioStream
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyAudioStream_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.CreateAudioStream*
  commentId: Overload:SharpSDL3.Sdl.CreateAudioStream
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateAudioStream_SharpSDL3_Structs_AudioSpec__SharpSDL3_Structs_AudioSpec__
  name: CreateAudioStream
  nameWithType: Sdl.CreateAudioStream
  fullName: SharpSDL3.Sdl.CreateAudioStream
- uid: SharpSDL3.Sdl.CreateAudioStream(SharpSDL3.Structs.AudioSpec@,SharpSDL3.Structs.AudioSpec@)
  commentId: M:SharpSDL3.Sdl.CreateAudioStream(SharpSDL3.Structs.AudioSpec@,SharpSDL3.Structs.AudioSpec@)
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateAudioStream_SharpSDL3_Structs_AudioSpec__SharpSDL3_Structs_AudioSpec__
  name: CreateAudioStream(ref AudioSpec, ref AudioSpec)
  nameWithType: Sdl.CreateAudioStream(ref AudioSpec, ref AudioSpec)
  fullName: SharpSDL3.Sdl.CreateAudioStream(ref SharpSDL3.Structs.AudioSpec, ref SharpSDL3.Structs.AudioSpec)
  nameWithType.vb: Sdl.CreateAudioStream(AudioSpec, AudioSpec)
  fullName.vb: SharpSDL3.Sdl.CreateAudioStream(SharpSDL3.Structs.AudioSpec, SharpSDL3.Structs.AudioSpec)
  name.vb: CreateAudioStream(AudioSpec, AudioSpec)
  spec.csharp:
  - uid: SharpSDL3.Sdl.CreateAudioStream(SharpSDL3.Structs.AudioSpec@,SharpSDL3.Structs.AudioSpec@)
    name: CreateAudioStream
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateAudioStream_SharpSDL3_Structs_AudioSpec__SharpSDL3_Structs_AudioSpec__
  - name: (
  - name: ref
  - name: " "
  - uid: SharpSDL3.Structs.AudioSpec
    name: AudioSpec
    href: SharpSDL3.Structs.AudioSpec.html
  - name: ','
  - name: " "
  - name: ref
  - name: " "
  - uid: SharpSDL3.Structs.AudioSpec
    name: AudioSpec
    href: SharpSDL3.Structs.AudioSpec.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.CreateAudioStream(SharpSDL3.Structs.AudioSpec@,SharpSDL3.Structs.AudioSpec@)
    name: CreateAudioStream
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateAudioStream_SharpSDL3_Structs_AudioSpec__SharpSDL3_Structs_AudioSpec__
  - name: (
  - uid: SharpSDL3.Structs.AudioSpec
    name: AudioSpec
    href: SharpSDL3.Structs.AudioSpec.html
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.AudioSpec
    name: AudioSpec
    href: SharpSDL3.Structs.AudioSpec.html
  - name: )
- uid: SharpSDL3.Sdl.DestroyAudioStream*
  commentId: Overload:SharpSDL3.Sdl.DestroyAudioStream
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyAudioStream_System_IntPtr_
  name: DestroyAudioStream
  nameWithType: Sdl.DestroyAudioStream
  fullName: SharpSDL3.Sdl.DestroyAudioStream
- uid: SharpSDL3.Sdl.FlushAudioStream*
  commentId: Overload:SharpSDL3.Sdl.FlushAudioStream
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_FlushAudioStream_System_IntPtr_
  name: FlushAudioStream
  nameWithType: Sdl.FlushAudioStream
  fullName: SharpSDL3.Sdl.FlushAudioStream
- uid: SharpSDL3.Sdl.SetAudioStreamInputChannelMap(System.IntPtr,System.Span{System.Int32},System.Int32)
  commentId: M:SharpSDL3.Sdl.SetAudioStreamInputChannelMap(System.IntPtr,System.Span{System.Int32},System.Int32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetAudioStreamInputChannelMap_System_IntPtr_System_Span_System_Int32__System_Int32_
  name: SetAudioStreamInputChannelMap(nint, Span<int>, int)
  nameWithType: Sdl.SetAudioStreamInputChannelMap(nint, Span<int>, int)
  fullName: SharpSDL3.Sdl.SetAudioStreamInputChannelMap(nint, System.Span<int>, int)
  nameWithType.vb: Sdl.SetAudioStreamInputChannelMap(IntPtr, Span(Of Integer), Integer)
  fullName.vb: SharpSDL3.Sdl.SetAudioStreamInputChannelMap(System.IntPtr, System.Span(Of Integer), Integer)
  name.vb: SetAudioStreamInputChannelMap(IntPtr, Span(Of Integer), Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetAudioStreamInputChannelMap(System.IntPtr,System.Span{System.Int32},System.Int32)
    name: SetAudioStreamInputChannelMap
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetAudioStreamInputChannelMap_System_IntPtr_System_Span_System_Int32__System_Int32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetAudioStreamInputChannelMap(System.IntPtr,System.Span{System.Int32},System.Int32)
    name: SetAudioStreamInputChannelMap
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetAudioStreamInputChannelMap_System_IntPtr_System_Span_System_Int32__System_Int32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.GetAudioDeviceChannelMap*
  commentId: Overload:SharpSDL3.Sdl.GetAudioDeviceChannelMap
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAudioDeviceChannelMap_System_UInt32_
  name: GetAudioDeviceChannelMap
  nameWithType: Sdl.GetAudioDeviceChannelMap
  fullName: SharpSDL3.Sdl.GetAudioDeviceChannelMap
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.GetAudioDeviceFormat*
  commentId: Overload:SharpSDL3.Sdl.GetAudioDeviceFormat
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAudioDeviceFormat_System_UInt32_SharpSDL3_Structs_AudioSpec__System_Int32__
  name: GetAudioDeviceFormat
  nameWithType: Sdl.GetAudioDeviceFormat
  fullName: SharpSDL3.Sdl.GetAudioDeviceFormat
- uid: SharpSDL3.Sdl.SetAudioDeviceGain(System.UInt32,System.Single)
  commentId: M:SharpSDL3.Sdl.SetAudioDeviceGain(System.UInt32,System.Single)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetAudioDeviceGain_System_UInt32_System_Single_
  name: SetAudioDeviceGain(uint, float)
  nameWithType: Sdl.SetAudioDeviceGain(uint, float)
  fullName: SharpSDL3.Sdl.SetAudioDeviceGain(uint, float)
  nameWithType.vb: Sdl.SetAudioDeviceGain(UInteger, Single)
  fullName.vb: SharpSDL3.Sdl.SetAudioDeviceGain(UInteger, Single)
  name.vb: SetAudioDeviceGain(UInteger, Single)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetAudioDeviceGain(System.UInt32,System.Single)
    name: SetAudioDeviceGain
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetAudioDeviceGain_System_UInt32_System_Single_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetAudioDeviceGain(System.UInt32,System.Single)
    name: SetAudioDeviceGain
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetAudioDeviceGain_System_UInt32_System_Single_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: SharpSDL3.Sdl.GetAudioDeviceGain*
  commentId: Overload:SharpSDL3.Sdl.GetAudioDeviceGain
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAudioDeviceGain_System_UInt32_
  name: GetAudioDeviceGain
  nameWithType: Sdl.GetAudioDeviceGain
  fullName: SharpSDL3.Sdl.GetAudioDeviceGain
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: SharpSDL3.Sdl.GetAudioPlaybackDevices(System.Int32@)
  commentId: M:SharpSDL3.Sdl.GetAudioPlaybackDevices(System.Int32@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAudioPlaybackDevices_System_Int32__
  name: GetAudioPlaybackDevices(out int)
  nameWithType: Sdl.GetAudioPlaybackDevices(out int)
  fullName: SharpSDL3.Sdl.GetAudioPlaybackDevices(out int)
  nameWithType.vb: Sdl.GetAudioPlaybackDevices(Integer)
  fullName.vb: SharpSDL3.Sdl.GetAudioPlaybackDevices(Integer)
  name.vb: GetAudioPlaybackDevices(Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetAudioPlaybackDevices(System.Int32@)
    name: GetAudioPlaybackDevices
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAudioPlaybackDevices_System_Int32__
  - name: (
  - name: out
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetAudioPlaybackDevices(System.Int32@)
    name: GetAudioPlaybackDevices
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAudioPlaybackDevices_System_Int32__
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.GetAudioRecordingDevices(System.Int32@)
  commentId: M:SharpSDL3.Sdl.GetAudioRecordingDevices(System.Int32@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAudioRecordingDevices_System_Int32__
  name: GetAudioRecordingDevices(out int)
  nameWithType: Sdl.GetAudioRecordingDevices(out int)
  fullName: SharpSDL3.Sdl.GetAudioRecordingDevices(out int)
  nameWithType.vb: Sdl.GetAudioRecordingDevices(Integer)
  fullName.vb: SharpSDL3.Sdl.GetAudioRecordingDevices(Integer)
  name.vb: GetAudioRecordingDevices(Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetAudioRecordingDevices(System.Int32@)
    name: GetAudioRecordingDevices
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAudioRecordingDevices_System_Int32__
  - name: (
  - name: out
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetAudioRecordingDevices(System.Int32@)
    name: GetAudioRecordingDevices
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAudioRecordingDevices_System_Int32__
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.GetAudioDeviceName*
  commentId: Overload:SharpSDL3.Sdl.GetAudioDeviceName
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAudioDeviceName_System_UInt32_
  name: GetAudioDeviceName
  nameWithType: Sdl.GetAudioDeviceName
  fullName: SharpSDL3.Sdl.GetAudioDeviceName
- uid: SharpSDL3.Sdl.GetNumAudioDrivers
  commentId: M:SharpSDL3.Sdl.GetNumAudioDrivers
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetNumAudioDrivers
  name: GetNumAudioDrivers()
  nameWithType: Sdl.GetNumAudioDrivers()
  fullName: SharpSDL3.Sdl.GetNumAudioDrivers()
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetNumAudioDrivers
    name: GetNumAudioDrivers
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetNumAudioDrivers
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetNumAudioDrivers
    name: GetNumAudioDrivers
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetNumAudioDrivers
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.GetAudioDriver*
  commentId: Overload:SharpSDL3.Sdl.GetAudioDriver
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAudioDriver_System_Int32_
  name: GetAudioDriver
  nameWithType: Sdl.GetAudioDriver
  fullName: SharpSDL3.Sdl.GetAudioDriver
- uid: SharpSDL3.Sdl.GetAudioFormatName*
  commentId: Overload:SharpSDL3.Sdl.GetAudioFormatName
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAudioFormatName_SharpSDL3_Enums_AudioFormat_
  name: GetAudioFormatName
  nameWithType: Sdl.GetAudioFormatName
  fullName: SharpSDL3.Sdl.GetAudioFormatName
- uid: SharpSDL3.Enums.AudioFormat
  commentId: T:SharpSDL3.Enums.AudioFormat
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.AudioFormat.html
  name: AudioFormat
  nameWithType: AudioFormat
  fullName: SharpSDL3.Enums.AudioFormat
- uid: SharpSDL3.Sdl.GetAudioPlaybackDevices*
  commentId: Overload:SharpSDL3.Sdl.GetAudioPlaybackDevices
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAudioPlaybackDevices_System_Int32__
  name: GetAudioPlaybackDevices
  nameWithType: Sdl.GetAudioPlaybackDevices
  fullName: SharpSDL3.Sdl.GetAudioPlaybackDevices
- uid: System.UInt32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint[]
  nameWithType: uint[]
  fullName: uint[]
  nameWithType.vb: UInteger()
  fullName.vb: UInteger()
  name.vb: UInteger()
  spec.csharp:
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.GetAudioRecordingDevices*
  commentId: Overload:SharpSDL3.Sdl.GetAudioRecordingDevices
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAudioRecordingDevices_System_Int32__
  name: GetAudioRecordingDevices
  nameWithType: Sdl.GetAudioRecordingDevices
  fullName: SharpSDL3.Sdl.GetAudioRecordingDevices
- uid: SharpSDL3.Sdl.GetAudioStreamAvailable*
  commentId: Overload:SharpSDL3.Sdl.GetAudioStreamAvailable
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAudioStreamAvailable_System_IntPtr_
  name: GetAudioStreamAvailable
  nameWithType: Sdl.GetAudioStreamAvailable
  fullName: SharpSDL3.Sdl.GetAudioStreamAvailable
- uid: SharpSDL3.Sdl.GetAudioStreamData*
  commentId: Overload:SharpSDL3.Sdl.GetAudioStreamData
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAudioStreamData_System_IntPtr_System_IntPtr_System_Int32_
  name: GetAudioStreamData
  nameWithType: Sdl.GetAudioStreamData
  fullName: SharpSDL3.Sdl.GetAudioStreamData
- uid: SharpSDL3.Sdl.BindAudioStream(System.UInt32,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.BindAudioStream(System.UInt32,System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BindAudioStream_System_UInt32_System_IntPtr_
  name: BindAudioStream(uint, nint)
  nameWithType: Sdl.BindAudioStream(uint, nint)
  fullName: SharpSDL3.Sdl.BindAudioStream(uint, nint)
  nameWithType.vb: Sdl.BindAudioStream(UInteger, IntPtr)
  fullName.vb: SharpSDL3.Sdl.BindAudioStream(UInteger, System.IntPtr)
  name.vb: BindAudioStream(UInteger, IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.BindAudioStream(System.UInt32,System.IntPtr)
    name: BindAudioStream
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BindAudioStream_System_UInt32_System_IntPtr_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.BindAudioStream(System.UInt32,System.IntPtr)
    name: BindAudioStream
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BindAudioStream_System_UInt32_System_IntPtr_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GetAudioStreamDevice*
  commentId: Overload:SharpSDL3.Sdl.GetAudioStreamDevice
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAudioStreamDevice_System_IntPtr_
  name: GetAudioStreamDevice
  nameWithType: Sdl.GetAudioStreamDevice
  fullName: SharpSDL3.Sdl.GetAudioStreamDevice
- uid: SharpSDL3.Sdl.GetAudioStreamFormat*
  commentId: Overload:SharpSDL3.Sdl.GetAudioStreamFormat
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAudioStreamFormat_System_IntPtr_SharpSDL3_Structs_AudioSpec__SharpSDL3_Structs_AudioSpec__
  name: GetAudioStreamFormat
  nameWithType: Sdl.GetAudioStreamFormat
  fullName: SharpSDL3.Sdl.GetAudioStreamFormat
- uid: SharpSDL3.Sdl.SetAudioStreamFrequencyRatio(System.IntPtr,System.Single)
  commentId: M:SharpSDL3.Sdl.SetAudioStreamFrequencyRatio(System.IntPtr,System.Single)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetAudioStreamFrequencyRatio_System_IntPtr_System_Single_
  name: SetAudioStreamFrequencyRatio(nint, float)
  nameWithType: Sdl.SetAudioStreamFrequencyRatio(nint, float)
  fullName: SharpSDL3.Sdl.SetAudioStreamFrequencyRatio(nint, float)
  nameWithType.vb: Sdl.SetAudioStreamFrequencyRatio(IntPtr, Single)
  fullName.vb: SharpSDL3.Sdl.SetAudioStreamFrequencyRatio(System.IntPtr, Single)
  name.vb: SetAudioStreamFrequencyRatio(IntPtr, Single)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetAudioStreamFrequencyRatio(System.IntPtr,System.Single)
    name: SetAudioStreamFrequencyRatio
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetAudioStreamFrequencyRatio_System_IntPtr_System_Single_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetAudioStreamFrequencyRatio(System.IntPtr,System.Single)
    name: SetAudioStreamFrequencyRatio
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetAudioStreamFrequencyRatio_System_IntPtr_System_Single_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: SharpSDL3.Sdl.GetAudioStreamFrequencyRatio*
  commentId: Overload:SharpSDL3.Sdl.GetAudioStreamFrequencyRatio
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAudioStreamFrequencyRatio_System_IntPtr_
  name: GetAudioStreamFrequencyRatio
  nameWithType: Sdl.GetAudioStreamFrequencyRatio
  fullName: SharpSDL3.Sdl.GetAudioStreamFrequencyRatio
- uid: SharpSDL3.Sdl.GetAudioStreamGain*
  commentId: Overload:SharpSDL3.Sdl.GetAudioStreamGain
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAudioStreamGain_System_IntPtr_
  name: GetAudioStreamGain
  nameWithType: Sdl.GetAudioStreamGain
  fullName: SharpSDL3.Sdl.GetAudioStreamGain
- uid: SharpSDL3.Sdl.GetAudioStreamInputChannelMap*
  commentId: Overload:SharpSDL3.Sdl.GetAudioStreamInputChannelMap
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAudioStreamInputChannelMap_System_IntPtr_System_Int32__
  name: GetAudioStreamInputChannelMap
  nameWithType: Sdl.GetAudioStreamInputChannelMap
  fullName: SharpSDL3.Sdl.GetAudioStreamInputChannelMap
- uid: SharpSDL3.Sdl.GetAudioStreamOutputChannelMap*
  commentId: Overload:SharpSDL3.Sdl.GetAudioStreamOutputChannelMap
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAudioStreamOutputChannelMap_System_IntPtr_System_Int32__
  name: GetAudioStreamOutputChannelMap
  nameWithType: Sdl.GetAudioStreamOutputChannelMap
  fullName: SharpSDL3.Sdl.GetAudioStreamOutputChannelMap
- uid: SharpSDL3.Sdl.GetAudioStreamProperties*
  commentId: Overload:SharpSDL3.Sdl.GetAudioStreamProperties
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAudioStreamProperties_System_IntPtr_
  name: GetAudioStreamProperties
  nameWithType: Sdl.GetAudioStreamProperties
  fullName: SharpSDL3.Sdl.GetAudioStreamProperties
- uid: SharpSDL3.Sdl.GetAudioStreamQueued*
  commentId: Overload:SharpSDL3.Sdl.GetAudioStreamQueued
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAudioStreamQueued_System_IntPtr_
  name: GetAudioStreamQueued
  nameWithType: Sdl.GetAudioStreamQueued
  fullName: SharpSDL3.Sdl.GetAudioStreamQueued
- uid: SharpSDL3.Sdl.GetCurrentAudioDriver*
  commentId: Overload:SharpSDL3.Sdl.GetCurrentAudioDriver
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetCurrentAudioDriver
  name: GetCurrentAudioDriver
  nameWithType: Sdl.GetCurrentAudioDriver
  fullName: SharpSDL3.Sdl.GetCurrentAudioDriver
- uid: SharpSDL3.Sdl.GetAudioDriver(System.Int32)
  commentId: M:SharpSDL3.Sdl.GetAudioDriver(System.Int32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAudioDriver_System_Int32_
  name: GetAudioDriver(int)
  nameWithType: Sdl.GetAudioDriver(int)
  fullName: SharpSDL3.Sdl.GetAudioDriver(int)
  nameWithType.vb: Sdl.GetAudioDriver(Integer)
  fullName.vb: SharpSDL3.Sdl.GetAudioDriver(Integer)
  name.vb: GetAudioDriver(Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetAudioDriver(System.Int32)
    name: GetAudioDriver
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAudioDriver_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetAudioDriver(System.Int32)
    name: GetAudioDriver
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAudioDriver_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.GetNumAudioDrivers*
  commentId: Overload:SharpSDL3.Sdl.GetNumAudioDrivers
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetNumAudioDrivers
  name: GetNumAudioDrivers
  nameWithType: Sdl.GetNumAudioDrivers
  fullName: SharpSDL3.Sdl.GetNumAudioDrivers
- uid: SharpSDL3.Sdl.GetSilenceValueForFormat*
  commentId: Overload:SharpSDL3.Sdl.GetSilenceValueForFormat
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetSilenceValueForFormat_SharpSDL3_Enums_AudioFormat_
  name: GetSilenceValueForFormat
  nameWithType: Sdl.GetSilenceValueForFormat
  fullName: SharpSDL3.Sdl.GetSilenceValueForFormat
- uid: SharpSDL3.Sdl.IsAudioDevicePhysical*
  commentId: Overload:SharpSDL3.Sdl.IsAudioDevicePhysical
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_IsAudioDevicePhysical_System_UInt32_
  name: IsAudioDevicePhysical
  nameWithType: Sdl.IsAudioDevicePhysical
  fullName: SharpSDL3.Sdl.IsAudioDevicePhysical
- uid: SharpSDL3.Sdl.IsAudioDevicePlayback*
  commentId: Overload:SharpSDL3.Sdl.IsAudioDevicePlayback
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_IsAudioDevicePlayback_System_UInt32_
  name: IsAudioDevicePlayback
  nameWithType: Sdl.IsAudioDevicePlayback
  fullName: SharpSDL3.Sdl.IsAudioDevicePlayback
- uid: SharpSDL3.Sdl.LoadWav*
  commentId: Overload:SharpSDL3.Sdl.LoadWav
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LoadWav_System_String_SharpSDL3_Structs_AudioSpec__System_IntPtr__System_UInt32__
  name: LoadWav
  nameWithType: Sdl.LoadWav
  fullName: SharpSDL3.Sdl.LoadWav
- uid: SharpSDL3.Sdl.LoadWavIo*
  commentId: Overload:SharpSDL3.Sdl.LoadWavIo
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LoadWavIo_System_IntPtr_SharpSDL3_Structs_SdlBool_SharpSDL3_Structs_AudioSpec__System_IntPtr__System_UInt32__
  name: LoadWavIo
  nameWithType: Sdl.LoadWavIo
  fullName: SharpSDL3.Sdl.LoadWavIo
- uid: SharpSDL3.Sdl.UnlockAudioStream(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.UnlockAudioStream(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UnlockAudioStream_System_IntPtr_
  name: UnlockAudioStream(nint)
  nameWithType: Sdl.UnlockAudioStream(nint)
  fullName: SharpSDL3.Sdl.UnlockAudioStream(nint)
  nameWithType.vb: Sdl.UnlockAudioStream(IntPtr)
  fullName.vb: SharpSDL3.Sdl.UnlockAudioStream(System.IntPtr)
  name.vb: UnlockAudioStream(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.UnlockAudioStream(System.IntPtr)
    name: UnlockAudioStream
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UnlockAudioStream_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.UnlockAudioStream(System.IntPtr)
    name: UnlockAudioStream
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UnlockAudioStream_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.LockAudioStream*
  commentId: Overload:SharpSDL3.Sdl.LockAudioStream
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LockAudioStream_System_IntPtr_
  name: LockAudioStream
  nameWithType: Sdl.LockAudioStream
  fullName: SharpSDL3.Sdl.LockAudioStream
- uid: SharpSDL3.Sdl.MixAudio*
  commentId: Overload:SharpSDL3.Sdl.MixAudio
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_MixAudio_System_IntPtr_System_IntPtr_SharpSDL3_Enums_AudioFormat_System_UInt32_System_Single_
  name: MixAudio
  nameWithType: Sdl.MixAudio
  fullName: SharpSDL3.Sdl.MixAudio
- uid: SharpSDL3.Sdl.CloseAudioDevice(System.UInt32)
  commentId: M:SharpSDL3.Sdl.CloseAudioDevice(System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CloseAudioDevice_System_UInt32_
  name: CloseAudioDevice(uint)
  nameWithType: Sdl.CloseAudioDevice(uint)
  fullName: SharpSDL3.Sdl.CloseAudioDevice(uint)
  nameWithType.vb: Sdl.CloseAudioDevice(UInteger)
  fullName.vb: SharpSDL3.Sdl.CloseAudioDevice(UInteger)
  name.vb: CloseAudioDevice(UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.CloseAudioDevice(System.UInt32)
    name: CloseAudioDevice
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CloseAudioDevice_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.CloseAudioDevice(System.UInt32)
    name: CloseAudioDevice
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CloseAudioDevice_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.GetAudioDeviceFormat(System.UInt32,SharpSDL3.Structs.AudioSpec@,System.Int32@)
  commentId: M:SharpSDL3.Sdl.GetAudioDeviceFormat(System.UInt32,SharpSDL3.Structs.AudioSpec@,System.Int32@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAudioDeviceFormat_System_UInt32_SharpSDL3_Structs_AudioSpec__System_Int32__
  name: GetAudioDeviceFormat(uint, out AudioSpec, out int)
  nameWithType: Sdl.GetAudioDeviceFormat(uint, out AudioSpec, out int)
  fullName: SharpSDL3.Sdl.GetAudioDeviceFormat(uint, out SharpSDL3.Structs.AudioSpec, out int)
  nameWithType.vb: Sdl.GetAudioDeviceFormat(UInteger, AudioSpec, Integer)
  fullName.vb: SharpSDL3.Sdl.GetAudioDeviceFormat(UInteger, SharpSDL3.Structs.AudioSpec, Integer)
  name.vb: GetAudioDeviceFormat(UInteger, AudioSpec, Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetAudioDeviceFormat(System.UInt32,SharpSDL3.Structs.AudioSpec@,System.Int32@)
    name: GetAudioDeviceFormat
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAudioDeviceFormat_System_UInt32_SharpSDL3_Structs_AudioSpec__System_Int32__
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: SharpSDL3.Structs.AudioSpec
    name: AudioSpec
    href: SharpSDL3.Structs.AudioSpec.html
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetAudioDeviceFormat(System.UInt32,SharpSDL3.Structs.AudioSpec@,System.Int32@)
    name: GetAudioDeviceFormat
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAudioDeviceFormat_System_UInt32_SharpSDL3_Structs_AudioSpec__System_Int32__
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.AudioSpec
    name: AudioSpec
    href: SharpSDL3.Structs.AudioSpec.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.OpenAudioDevice*
  commentId: Overload:SharpSDL3.Sdl.OpenAudioDevice
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_OpenAudioDevice_System_UInt32_SharpSDL3_Structs_AudioSpec__
  name: OpenAudioDevice
  nameWithType: Sdl.OpenAudioDevice
  fullName: SharpSDL3.Sdl.OpenAudioDevice
- uid: SharpSDL3.Sdl.OpenAudioDeviceStream*
  commentId: Overload:SharpSDL3.Sdl.OpenAudioDeviceStream
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_OpenAudioDeviceStream_System_UInt32_SharpSDL3_Structs_AudioSpec__SharpSDL3_Delegates_SdlAudioStreamCallback_System_IntPtr_
  name: OpenAudioDeviceStream
  nameWithType: Sdl.OpenAudioDeviceStream
  fullName: SharpSDL3.Sdl.OpenAudioDeviceStream
- uid: SharpSDL3.Delegates.SdlAudioStreamCallback
  commentId: T:SharpSDL3.Delegates.SdlAudioStreamCallback
  parent: SharpSDL3
  href: SharpSDL3.Delegates.html
  name: Delegates.SdlAudioStreamCallback
  nameWithType: Delegates.SdlAudioStreamCallback
  fullName: SharpSDL3.Delegates.SdlAudioStreamCallback
  spec.csharp:
  - uid: SharpSDL3.Delegates
    name: Delegates
    href: SharpSDL3.Delegates.html
  - name: .
  - uid: SharpSDL3.Delegates.SdlAudioStreamCallback
    name: SdlAudioStreamCallback
    href: SharpSDL3.Delegates.SdlAudioStreamCallback.html
  spec.vb:
  - uid: SharpSDL3.Delegates
    name: Delegates
    href: SharpSDL3.Delegates.html
  - name: .
  - uid: SharpSDL3.Delegates.SdlAudioStreamCallback
    name: SdlAudioStreamCallback
    href: SharpSDL3.Delegates.SdlAudioStreamCallback.html
- uid: SharpSDL3.Sdl.AudioDevicePaused(System.UInt32)
  commentId: M:SharpSDL3.Sdl.AudioDevicePaused(System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_AudioDevicePaused_System_UInt32_
  name: AudioDevicePaused(uint)
  nameWithType: Sdl.AudioDevicePaused(uint)
  fullName: SharpSDL3.Sdl.AudioDevicePaused(uint)
  nameWithType.vb: Sdl.AudioDevicePaused(UInteger)
  fullName.vb: SharpSDL3.Sdl.AudioDevicePaused(UInteger)
  name.vb: AudioDevicePaused(UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.AudioDevicePaused(System.UInt32)
    name: AudioDevicePaused
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_AudioDevicePaused_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.AudioDevicePaused(System.UInt32)
    name: AudioDevicePaused
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_AudioDevicePaused_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.PauseAudioDevice*
  commentId: Overload:SharpSDL3.Sdl.PauseAudioDevice
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_PauseAudioDevice_System_UInt32_
  name: PauseAudioDevice
  nameWithType: Sdl.PauseAudioDevice
  fullName: SharpSDL3.Sdl.PauseAudioDevice
- uid: SharpSDL3.Sdl.PauseAudioStreamDevice*
  commentId: Overload:SharpSDL3.Sdl.PauseAudioStreamDevice
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_PauseAudioStreamDevice_System_IntPtr_
  name: PauseAudioStreamDevice
  nameWithType: Sdl.PauseAudioStreamDevice
  fullName: SharpSDL3.Sdl.PauseAudioStreamDevice
- uid: SharpSDL3.Sdl.PutAudioStreamData*
  commentId: Overload:SharpSDL3.Sdl.PutAudioStreamData
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_PutAudioStreamData_System_IntPtr_System_IntPtr_System_Int32_
  name: PutAudioStreamData
  nameWithType: Sdl.PutAudioStreamData
  fullName: SharpSDL3.Sdl.PutAudioStreamData
- uid: SharpSDL3.Sdl.ResumeAudioDevice*
  commentId: Overload:SharpSDL3.Sdl.ResumeAudioDevice
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ResumeAudioDevice_System_UInt32_
  name: ResumeAudioDevice
  nameWithType: Sdl.ResumeAudioDevice
  fullName: SharpSDL3.Sdl.ResumeAudioDevice
- uid: SharpSDL3.Sdl.ResumeAudioStreamDevice*
  commentId: Overload:SharpSDL3.Sdl.ResumeAudioStreamDevice
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ResumeAudioStreamDevice_System_IntPtr_
  name: ResumeAudioStreamDevice
  nameWithType: Sdl.ResumeAudioStreamDevice
  fullName: SharpSDL3.Sdl.ResumeAudioStreamDevice
- uid: SharpSDL3.Sdl.GetAudioDeviceGain(System.UInt32)
  commentId: M:SharpSDL3.Sdl.GetAudioDeviceGain(System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAudioDeviceGain_System_UInt32_
  name: GetAudioDeviceGain(uint)
  nameWithType: Sdl.GetAudioDeviceGain(uint)
  fullName: SharpSDL3.Sdl.GetAudioDeviceGain(uint)
  nameWithType.vb: Sdl.GetAudioDeviceGain(UInteger)
  fullName.vb: SharpSDL3.Sdl.GetAudioDeviceGain(UInteger)
  name.vb: GetAudioDeviceGain(UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetAudioDeviceGain(System.UInt32)
    name: GetAudioDeviceGain
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAudioDeviceGain_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetAudioDeviceGain(System.UInt32)
    name: GetAudioDeviceGain
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAudioDeviceGain_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.SetAudioDeviceGain*
  commentId: Overload:SharpSDL3.Sdl.SetAudioDeviceGain
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetAudioDeviceGain_System_UInt32_System_Single_
  name: SetAudioDeviceGain
  nameWithType: Sdl.SetAudioDeviceGain
  fullName: SharpSDL3.Sdl.SetAudioDeviceGain
- uid: SharpSDL3.Sdl.SetAudioPostmixCallback*
  commentId: Overload:SharpSDL3.Sdl.SetAudioPostmixCallback
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetAudioPostmixCallback_System_UInt32_SharpSDL3_Delegates_SdlAudioPostmixCallback_System_IntPtr_
  name: SetAudioPostmixCallback
  nameWithType: Sdl.SetAudioPostmixCallback
  fullName: SharpSDL3.Sdl.SetAudioPostmixCallback
- uid: SharpSDL3.Delegates.SdlAudioPostmixCallback
  commentId: T:SharpSDL3.Delegates.SdlAudioPostmixCallback
  parent: SharpSDL3
  href: SharpSDL3.Delegates.html
  name: Delegates.SdlAudioPostmixCallback
  nameWithType: Delegates.SdlAudioPostmixCallback
  fullName: SharpSDL3.Delegates.SdlAudioPostmixCallback
  spec.csharp:
  - uid: SharpSDL3.Delegates
    name: Delegates
    href: SharpSDL3.Delegates.html
  - name: .
  - uid: SharpSDL3.Delegates.SdlAudioPostmixCallback
    name: SdlAudioPostmixCallback
    href: SharpSDL3.Delegates.SdlAudioPostmixCallback.html
  spec.vb:
  - uid: SharpSDL3.Delegates
    name: Delegates
    href: SharpSDL3.Delegates.html
  - name: .
  - uid: SharpSDL3.Delegates.SdlAudioPostmixCallback
    name: SdlAudioPostmixCallback
    href: SharpSDL3.Delegates.SdlAudioPostmixCallback.html
- uid: SharpSDL3.Sdl.GetAudioStreamFormat(System.IntPtr,SharpSDL3.Structs.AudioSpec@,SharpSDL3.Structs.AudioSpec@)
  commentId: M:SharpSDL3.Sdl.GetAudioStreamFormat(System.IntPtr,SharpSDL3.Structs.AudioSpec@,SharpSDL3.Structs.AudioSpec@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAudioStreamFormat_System_IntPtr_SharpSDL3_Structs_AudioSpec__SharpSDL3_Structs_AudioSpec__
  name: GetAudioStreamFormat(nint, out AudioSpec, out AudioSpec)
  nameWithType: Sdl.GetAudioStreamFormat(nint, out AudioSpec, out AudioSpec)
  fullName: SharpSDL3.Sdl.GetAudioStreamFormat(nint, out SharpSDL3.Structs.AudioSpec, out SharpSDL3.Structs.AudioSpec)
  nameWithType.vb: Sdl.GetAudioStreamFormat(IntPtr, AudioSpec, AudioSpec)
  fullName.vb: SharpSDL3.Sdl.GetAudioStreamFormat(System.IntPtr, SharpSDL3.Structs.AudioSpec, SharpSDL3.Structs.AudioSpec)
  name.vb: GetAudioStreamFormat(IntPtr, AudioSpec, AudioSpec)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetAudioStreamFormat(System.IntPtr,SharpSDL3.Structs.AudioSpec@,SharpSDL3.Structs.AudioSpec@)
    name: GetAudioStreamFormat
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAudioStreamFormat_System_IntPtr_SharpSDL3_Structs_AudioSpec__SharpSDL3_Structs_AudioSpec__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: SharpSDL3.Structs.AudioSpec
    name: AudioSpec
    href: SharpSDL3.Structs.AudioSpec.html
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: SharpSDL3.Structs.AudioSpec
    name: AudioSpec
    href: SharpSDL3.Structs.AudioSpec.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetAudioStreamFormat(System.IntPtr,SharpSDL3.Structs.AudioSpec@,SharpSDL3.Structs.AudioSpec@)
    name: GetAudioStreamFormat
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAudioStreamFormat_System_IntPtr_SharpSDL3_Structs_AudioSpec__SharpSDL3_Structs_AudioSpec__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.AudioSpec
    name: AudioSpec
    href: SharpSDL3.Structs.AudioSpec.html
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.AudioSpec
    name: AudioSpec
    href: SharpSDL3.Structs.AudioSpec.html
  - name: )
- uid: SharpSDL3.Sdl.SetAudioStreamFormat*
  commentId: Overload:SharpSDL3.Sdl.SetAudioStreamFormat
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetAudioStreamFormat_System_IntPtr_SharpSDL3_Structs_AudioSpec__SharpSDL3_Structs_AudioSpec__
  name: SetAudioStreamFormat
  nameWithType: Sdl.SetAudioStreamFormat
  fullName: SharpSDL3.Sdl.SetAudioStreamFormat
- uid: SharpSDL3.Sdl.GetAudioStreamFrequencyRatio(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetAudioStreamFrequencyRatio(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAudioStreamFrequencyRatio_System_IntPtr_
  name: GetAudioStreamFrequencyRatio(nint)
  nameWithType: Sdl.GetAudioStreamFrequencyRatio(nint)
  fullName: SharpSDL3.Sdl.GetAudioStreamFrequencyRatio(nint)
  nameWithType.vb: Sdl.GetAudioStreamFrequencyRatio(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetAudioStreamFrequencyRatio(System.IntPtr)
  name.vb: GetAudioStreamFrequencyRatio(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetAudioStreamFrequencyRatio(System.IntPtr)
    name: GetAudioStreamFrequencyRatio
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAudioStreamFrequencyRatio_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetAudioStreamFrequencyRatio(System.IntPtr)
    name: GetAudioStreamFrequencyRatio
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAudioStreamFrequencyRatio_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.SetAudioStreamFrequencyRatio*
  commentId: Overload:SharpSDL3.Sdl.SetAudioStreamFrequencyRatio
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetAudioStreamFrequencyRatio_System_IntPtr_System_Single_
  name: SetAudioStreamFrequencyRatio
  nameWithType: Sdl.SetAudioStreamFrequencyRatio
  fullName: SharpSDL3.Sdl.SetAudioStreamFrequencyRatio
- uid: SharpSDL3.Sdl.SetAudioStreamPutCallback(System.IntPtr,SharpSDL3.Delegates.SdlAudioStreamCallback,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.SetAudioStreamPutCallback(System.IntPtr,SharpSDL3.Delegates.SdlAudioStreamCallback,System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetAudioStreamPutCallback_System_IntPtr_SharpSDL3_Delegates_SdlAudioStreamCallback_System_IntPtr_
  name: SetAudioStreamPutCallback(nint, SdlAudioStreamCallback, nint)
  nameWithType: Sdl.SetAudioStreamPutCallback(nint, Delegates.SdlAudioStreamCallback, nint)
  fullName: SharpSDL3.Sdl.SetAudioStreamPutCallback(nint, SharpSDL3.Delegates.SdlAudioStreamCallback, nint)
  nameWithType.vb: Sdl.SetAudioStreamPutCallback(IntPtr, Delegates.SdlAudioStreamCallback, IntPtr)
  fullName.vb: SharpSDL3.Sdl.SetAudioStreamPutCallback(System.IntPtr, SharpSDL3.Delegates.SdlAudioStreamCallback, System.IntPtr)
  name.vb: SetAudioStreamPutCallback(IntPtr, SdlAudioStreamCallback, IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetAudioStreamPutCallback(System.IntPtr,SharpSDL3.Delegates.SdlAudioStreamCallback,System.IntPtr)
    name: SetAudioStreamPutCallback
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetAudioStreamPutCallback_System_IntPtr_SharpSDL3_Delegates_SdlAudioStreamCallback_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Delegates.SdlAudioStreamCallback
    name: SdlAudioStreamCallback
    href: SharpSDL3.Delegates.SdlAudioStreamCallback.html
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetAudioStreamPutCallback(System.IntPtr,SharpSDL3.Delegates.SdlAudioStreamCallback,System.IntPtr)
    name: SetAudioStreamPutCallback
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetAudioStreamPutCallback_System_IntPtr_SharpSDL3_Delegates_SdlAudioStreamCallback_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Delegates.SdlAudioStreamCallback
    name: SdlAudioStreamCallback
    href: SharpSDL3.Delegates.SdlAudioStreamCallback.html
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.SetAudioStreamGetCallback*
  commentId: Overload:SharpSDL3.Sdl.SetAudioStreamGetCallback
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetAudioStreamGetCallback_System_IntPtr_SharpSDL3_Delegates_SdlAudioStreamCallback_System_IntPtr_
  name: SetAudioStreamGetCallback
  nameWithType: Sdl.SetAudioStreamGetCallback
  fullName: SharpSDL3.Sdl.SetAudioStreamGetCallback
- uid: SharpSDL3.Sdl.SetAudioStreamInputChannelMap*
  commentId: Overload:SharpSDL3.Sdl.SetAudioStreamInputChannelMap
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetAudioStreamInputChannelMap_System_IntPtr_System_Span_System_Int32__System_Int32_
  name: SetAudioStreamInputChannelMap
  nameWithType: Sdl.SetAudioStreamInputChannelMap
  fullName: SharpSDL3.Sdl.SetAudioStreamInputChannelMap
- uid: System.Span{System.Int32}
  commentId: T:System.Span{System.Int32}
  parent: System
  definition: System.Span`1
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<int>
  nameWithType: Span<int>
  fullName: System.Span<int>
  nameWithType.vb: Span(Of Integer)
  fullName.vb: System.Span(Of Integer)
  name.vb: Span(Of Integer)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.SetAudioStreamOutputChannelMap*
  commentId: Overload:SharpSDL3.Sdl.SetAudioStreamOutputChannelMap
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetAudioStreamOutputChannelMap_System_IntPtr_System_Span_System_Int32__System_Int32_
  name: SetAudioStreamOutputChannelMap
  nameWithType: Sdl.SetAudioStreamOutputChannelMap
  fullName: SharpSDL3.Sdl.SetAudioStreamOutputChannelMap
- uid: SharpSDL3.Sdl.SetAudioStreamGetCallback(System.IntPtr,SharpSDL3.Delegates.SdlAudioStreamCallback,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.SetAudioStreamGetCallback(System.IntPtr,SharpSDL3.Delegates.SdlAudioStreamCallback,System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetAudioStreamGetCallback_System_IntPtr_SharpSDL3_Delegates_SdlAudioStreamCallback_System_IntPtr_
  name: SetAudioStreamGetCallback(nint, SdlAudioStreamCallback, nint)
  nameWithType: Sdl.SetAudioStreamGetCallback(nint, Delegates.SdlAudioStreamCallback, nint)
  fullName: SharpSDL3.Sdl.SetAudioStreamGetCallback(nint, SharpSDL3.Delegates.SdlAudioStreamCallback, nint)
  nameWithType.vb: Sdl.SetAudioStreamGetCallback(IntPtr, Delegates.SdlAudioStreamCallback, IntPtr)
  fullName.vb: SharpSDL3.Sdl.SetAudioStreamGetCallback(System.IntPtr, SharpSDL3.Delegates.SdlAudioStreamCallback, System.IntPtr)
  name.vb: SetAudioStreamGetCallback(IntPtr, SdlAudioStreamCallback, IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetAudioStreamGetCallback(System.IntPtr,SharpSDL3.Delegates.SdlAudioStreamCallback,System.IntPtr)
    name: SetAudioStreamGetCallback
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetAudioStreamGetCallback_System_IntPtr_SharpSDL3_Delegates_SdlAudioStreamCallback_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Delegates.SdlAudioStreamCallback
    name: SdlAudioStreamCallback
    href: SharpSDL3.Delegates.SdlAudioStreamCallback.html
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetAudioStreamGetCallback(System.IntPtr,SharpSDL3.Delegates.SdlAudioStreamCallback,System.IntPtr)
    name: SetAudioStreamGetCallback
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetAudioStreamGetCallback_System_IntPtr_SharpSDL3_Delegates_SdlAudioStreamCallback_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Delegates.SdlAudioStreamCallback
    name: SdlAudioStreamCallback
    href: SharpSDL3.Delegates.SdlAudioStreamCallback.html
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.SetAudioStreamPutCallback*
  commentId: Overload:SharpSDL3.Sdl.SetAudioStreamPutCallback
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetAudioStreamPutCallback_System_IntPtr_SharpSDL3_Delegates_SdlAudioStreamCallback_System_IntPtr_
  name: SetAudioStreamPutCallback
  nameWithType: Sdl.SetAudioStreamPutCallback
  fullName: SharpSDL3.Sdl.SetAudioStreamPutCallback
- uid: SharpSDL3.Sdl.UnbindAudioStream*
  commentId: Overload:SharpSDL3.Sdl.UnbindAudioStream
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UnbindAudioStream_System_IntPtr_
  name: UnbindAudioStream
  nameWithType: Sdl.UnbindAudioStream
  fullName: SharpSDL3.Sdl.UnbindAudioStream
- uid: SharpSDL3.Sdl.UnbindAudioStreams*
  commentId: Overload:SharpSDL3.Sdl.UnbindAudioStreams
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UnbindAudioStreams_System_Span_System_IntPtr__
  name: UnbindAudioStreams
  nameWithType: Sdl.UnbindAudioStreams
  fullName: SharpSDL3.Sdl.UnbindAudioStreams
- uid: SharpSDL3.Sdl.LockAudioStream(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.LockAudioStream(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LockAudioStream_System_IntPtr_
  name: LockAudioStream(nint)
  nameWithType: Sdl.LockAudioStream(nint)
  fullName: SharpSDL3.Sdl.LockAudioStream(nint)
  nameWithType.vb: Sdl.LockAudioStream(IntPtr)
  fullName.vb: SharpSDL3.Sdl.LockAudioStream(System.IntPtr)
  name.vb: LockAudioStream(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.LockAudioStream(System.IntPtr)
    name: LockAudioStream
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LockAudioStream_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.LockAudioStream(System.IntPtr)
    name: LockAudioStream
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LockAudioStream_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.UnlockAudioStream*
  commentId: Overload:SharpSDL3.Sdl.UnlockAudioStream
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UnlockAudioStream_System_IntPtr_
  name: UnlockAudioStream
  nameWithType: Sdl.UnlockAudioStream
  fullName: SharpSDL3.Sdl.UnlockAudioStream
- uid: SharpSDL3.Sdl.ReleaseCameraFrame(System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.ReleaseCameraFrame(System.IntPtr,System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReleaseCameraFrame_System_IntPtr_System_IntPtr_
  name: ReleaseCameraFrame(nint, nint)
  nameWithType: Sdl.ReleaseCameraFrame(nint, nint)
  fullName: SharpSDL3.Sdl.ReleaseCameraFrame(nint, nint)
  nameWithType.vb: Sdl.ReleaseCameraFrame(IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.ReleaseCameraFrame(System.IntPtr, System.IntPtr)
  name.vb: ReleaseCameraFrame(IntPtr, IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.ReleaseCameraFrame(System.IntPtr,System.IntPtr)
    name: ReleaseCameraFrame
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReleaseCameraFrame_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.ReleaseCameraFrame(System.IntPtr,System.IntPtr)
    name: ReleaseCameraFrame
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReleaseCameraFrame_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.AcquireCameraFrame*
  commentId: Overload:SharpSDL3.Sdl.AcquireCameraFrame
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_AcquireCameraFrame_System_IntPtr_System_UInt64__
  name: AcquireCameraFrame
  nameWithType: Sdl.AcquireCameraFrame
  fullName: SharpSDL3.Sdl.AcquireCameraFrame
- uid: SharpSDL3.Sdl.OpenCamera(System.UInt32,SharpSDL3.Structs.CameraSpec@)
  commentId: M:SharpSDL3.Sdl.OpenCamera(System.UInt32,SharpSDL3.Structs.CameraSpec@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_OpenCamera_System_UInt32_SharpSDL3_Structs_CameraSpec__
  name: OpenCamera(uint, ref CameraSpec)
  nameWithType: Sdl.OpenCamera(uint, ref CameraSpec)
  fullName: SharpSDL3.Sdl.OpenCamera(uint, ref SharpSDL3.Structs.CameraSpec)
  nameWithType.vb: Sdl.OpenCamera(UInteger, CameraSpec)
  fullName.vb: SharpSDL3.Sdl.OpenCamera(UInteger, SharpSDL3.Structs.CameraSpec)
  name.vb: OpenCamera(UInteger, CameraSpec)
  spec.csharp:
  - uid: SharpSDL3.Sdl.OpenCamera(System.UInt32,SharpSDL3.Structs.CameraSpec@)
    name: OpenCamera
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_OpenCamera_System_UInt32_SharpSDL3_Structs_CameraSpec__
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - name: ref
  - name: " "
  - uid: SharpSDL3.Structs.CameraSpec
    name: CameraSpec
    href: SharpSDL3.Structs.CameraSpec.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.OpenCamera(System.UInt32,SharpSDL3.Structs.CameraSpec@)
    name: OpenCamera
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_OpenCamera_System_UInt32_SharpSDL3_Structs_CameraSpec__
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.CameraSpec
    name: CameraSpec
    href: SharpSDL3.Structs.CameraSpec.html
  - name: )
- uid: SharpSDL3.Sdl.CloseCamera*
  commentId: Overload:SharpSDL3.Sdl.CloseCamera
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CloseCamera_System_IntPtr_
  name: CloseCamera
  nameWithType: Sdl.CloseCamera
  fullName: SharpSDL3.Sdl.CloseCamera
- uid: SharpSDL3.Sdl.GetNumCameraDrivers
  commentId: M:SharpSDL3.Sdl.GetNumCameraDrivers
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetNumCameraDrivers
  name: GetNumCameraDrivers()
  nameWithType: Sdl.GetNumCameraDrivers()
  fullName: SharpSDL3.Sdl.GetNumCameraDrivers()
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetNumCameraDrivers
    name: GetNumCameraDrivers
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetNumCameraDrivers
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetNumCameraDrivers
    name: GetNumCameraDrivers
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetNumCameraDrivers
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.GetCameraDriver*
  commentId: Overload:SharpSDL3.Sdl.GetCameraDriver
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetCameraDriver_System_Int32_
  name: GetCameraDriver
  nameWithType: Sdl.GetCameraDriver
  fullName: SharpSDL3.Sdl.GetCameraDriver
- uid: SharpSDL3.Sdl.GetCameraFormat*
  commentId: Overload:SharpSDL3.Sdl.GetCameraFormat
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetCameraFormat_System_IntPtr_SharpSDL3_Structs_CameraSpec__
  name: GetCameraFormat
  nameWithType: Sdl.GetCameraFormat
  fullName: SharpSDL3.Sdl.GetCameraFormat
- uid: SharpSDL3.Structs.CameraSpec
  commentId: T:SharpSDL3.Structs.CameraSpec
  parent: SharpSDL3.Structs
  href: SharpSDL3.Structs.CameraSpec.html
  name: CameraSpec
  nameWithType: CameraSpec
  fullName: SharpSDL3.Structs.CameraSpec
- uid: SharpSDL3.Sdl.GetCameraID*
  commentId: Overload:SharpSDL3.Sdl.GetCameraID
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetCameraID_System_IntPtr_
  name: GetCameraID
  nameWithType: Sdl.GetCameraID
  fullName: SharpSDL3.Sdl.GetCameraID
- uid: SharpSDL3.Sdl.GetCameras(System.Int32@)
  commentId: M:SharpSDL3.Sdl.GetCameras(System.Int32@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetCameras_System_Int32__
  name: GetCameras(out int)
  nameWithType: Sdl.GetCameras(out int)
  fullName: SharpSDL3.Sdl.GetCameras(out int)
  nameWithType.vb: Sdl.GetCameras(Integer)
  fullName.vb: SharpSDL3.Sdl.GetCameras(Integer)
  name.vb: GetCameras(Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetCameras(System.Int32@)
    name: GetCameras
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetCameras_System_Int32__
  - name: (
  - name: out
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetCameras(System.Int32@)
    name: GetCameras
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetCameras_System_Int32__
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.GetCameraName*
  commentId: Overload:SharpSDL3.Sdl.GetCameraName
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetCameraName_System_UInt32_
  name: GetCameraName
  nameWithType: Sdl.GetCameraName
  fullName: SharpSDL3.Sdl.GetCameraName
- uid: SharpSDL3.Sdl.CloseCamera(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.CloseCamera(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CloseCamera_System_IntPtr_
  name: CloseCamera(nint)
  nameWithType: Sdl.CloseCamera(nint)
  fullName: SharpSDL3.Sdl.CloseCamera(nint)
  nameWithType.vb: Sdl.CloseCamera(IntPtr)
  fullName.vb: SharpSDL3.Sdl.CloseCamera(System.IntPtr)
  name.vb: CloseCamera(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.CloseCamera(System.IntPtr)
    name: CloseCamera
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CloseCamera_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.CloseCamera(System.IntPtr)
    name: CloseCamera
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CloseCamera_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GetCameraPermissionState*
  commentId: Overload:SharpSDL3.Sdl.GetCameraPermissionState
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetCameraPermissionState_System_IntPtr_
  name: GetCameraPermissionState
  nameWithType: Sdl.GetCameraPermissionState
  fullName: SharpSDL3.Sdl.GetCameraPermissionState
- uid: SharpSDL3.Sdl.GetCameraPosition*
  commentId: Overload:SharpSDL3.Sdl.GetCameraPosition
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetCameraPosition_System_UInt32_
  name: GetCameraPosition
  nameWithType: Sdl.GetCameraPosition
  fullName: SharpSDL3.Sdl.GetCameraPosition
- uid: SharpSDL3.Enums.CameraPosition
  commentId: T:SharpSDL3.Enums.CameraPosition
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.CameraPosition.html
  name: CameraPosition
  nameWithType: CameraPosition
  fullName: SharpSDL3.Enums.CameraPosition
- uid: SharpSDL3.Sdl.GetCameraProperties*
  commentId: Overload:SharpSDL3.Sdl.GetCameraProperties
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetCameraProperties_System_IntPtr_
  name: GetCameraProperties
  nameWithType: Sdl.GetCameraProperties
  fullName: SharpSDL3.Sdl.GetCameraProperties
- uid: SharpSDL3.Sdl.GetCameras*
  commentId: Overload:SharpSDL3.Sdl.GetCameras
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetCameras_System_Int32__
  name: GetCameras
  nameWithType: Sdl.GetCameras
  fullName: SharpSDL3.Sdl.GetCameras
- uid: SharpSDL3.Sdl.GetCameraSupportedFormats*
  commentId: Overload:SharpSDL3.Sdl.GetCameraSupportedFormats
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetCameraSupportedFormats_System_UInt32_System_Int32__
  name: GetCameraSupportedFormats
  nameWithType: Sdl.GetCameraSupportedFormats
  fullName: SharpSDL3.Sdl.GetCameraSupportedFormats
- uid: SharpSDL3.Sdl.GetCurrentCameraDriver*
  commentId: Overload:SharpSDL3.Sdl.GetCurrentCameraDriver
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetCurrentCameraDriver
  name: GetCurrentCameraDriver
  nameWithType: Sdl.GetCurrentCameraDriver
  fullName: SharpSDL3.Sdl.GetCurrentCameraDriver
- uid: SharpSDL3.Sdl.GetCameraDriver(System.Int32)
  commentId: M:SharpSDL3.Sdl.GetCameraDriver(System.Int32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetCameraDriver_System_Int32_
  name: GetCameraDriver(int)
  nameWithType: Sdl.GetCameraDriver(int)
  fullName: SharpSDL3.Sdl.GetCameraDriver(int)
  nameWithType.vb: Sdl.GetCameraDriver(Integer)
  fullName.vb: SharpSDL3.Sdl.GetCameraDriver(Integer)
  name.vb: GetCameraDriver(Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetCameraDriver(System.Int32)
    name: GetCameraDriver
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetCameraDriver_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetCameraDriver(System.Int32)
    name: GetCameraDriver
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetCameraDriver_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.GetNumCameraDrivers*
  commentId: Overload:SharpSDL3.Sdl.GetNumCameraDrivers
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetNumCameraDrivers
  name: GetNumCameraDrivers
  nameWithType: Sdl.GetNumCameraDrivers
  fullName: SharpSDL3.Sdl.GetNumCameraDrivers
- uid: SharpSDL3.Sdl.GetCameraFormat(System.IntPtr,SharpSDL3.Structs.CameraSpec@)
  commentId: M:SharpSDL3.Sdl.GetCameraFormat(System.IntPtr,SharpSDL3.Structs.CameraSpec@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetCameraFormat_System_IntPtr_SharpSDL3_Structs_CameraSpec__
  name: GetCameraFormat(nint, out CameraSpec)
  nameWithType: Sdl.GetCameraFormat(nint, out CameraSpec)
  fullName: SharpSDL3.Sdl.GetCameraFormat(nint, out SharpSDL3.Structs.CameraSpec)
  nameWithType.vb: Sdl.GetCameraFormat(IntPtr, CameraSpec)
  fullName.vb: SharpSDL3.Sdl.GetCameraFormat(System.IntPtr, SharpSDL3.Structs.CameraSpec)
  name.vb: GetCameraFormat(IntPtr, CameraSpec)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetCameraFormat(System.IntPtr,SharpSDL3.Structs.CameraSpec@)
    name: GetCameraFormat
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetCameraFormat_System_IntPtr_SharpSDL3_Structs_CameraSpec__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: SharpSDL3.Structs.CameraSpec
    name: CameraSpec
    href: SharpSDL3.Structs.CameraSpec.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetCameraFormat(System.IntPtr,SharpSDL3.Structs.CameraSpec@)
    name: GetCameraFormat
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetCameraFormat_System_IntPtr_SharpSDL3_Structs_CameraSpec__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.CameraSpec
    name: CameraSpec
    href: SharpSDL3.Structs.CameraSpec.html
  - name: )
- uid: SharpSDL3.Sdl.OpenCamera*
  commentId: Overload:SharpSDL3.Sdl.OpenCamera
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_OpenCamera_System_UInt32_SharpSDL3_Structs_CameraSpec__
  name: OpenCamera
  nameWithType: Sdl.OpenCamera
  fullName: SharpSDL3.Sdl.OpenCamera
- uid: SharpSDL3.Sdl.AcquireCameraFrame(System.IntPtr,System.UInt64@)
  commentId: M:SharpSDL3.Sdl.AcquireCameraFrame(System.IntPtr,System.UInt64@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_AcquireCameraFrame_System_IntPtr_System_UInt64__
  name: AcquireCameraFrame(nint, out ulong)
  nameWithType: Sdl.AcquireCameraFrame(nint, out ulong)
  fullName: SharpSDL3.Sdl.AcquireCameraFrame(nint, out ulong)
  nameWithType.vb: Sdl.AcquireCameraFrame(IntPtr, ULong)
  fullName.vb: SharpSDL3.Sdl.AcquireCameraFrame(System.IntPtr, ULong)
  name.vb: AcquireCameraFrame(IntPtr, ULong)
  spec.csharp:
  - uid: SharpSDL3.Sdl.AcquireCameraFrame(System.IntPtr,System.UInt64@)
    name: AcquireCameraFrame
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_AcquireCameraFrame_System_IntPtr_System_UInt64__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.AcquireCameraFrame(System.IntPtr,System.UInt64@)
    name: AcquireCameraFrame
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_AcquireCameraFrame_System_IntPtr_System_UInt64__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: SharpSDL3.Sdl.ReleaseCameraFrame*
  commentId: Overload:SharpSDL3.Sdl.ReleaseCameraFrame
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReleaseCameraFrame_System_IntPtr_System_IntPtr_
  name: ReleaseCameraFrame
  nameWithType: Sdl.ReleaseCameraFrame
  fullName: SharpSDL3.Sdl.ReleaseCameraFrame
- uid: SharpSDL3.Sdl.GetCPUCacheLineSize*
  commentId: Overload:SharpSDL3.Sdl.GetCPUCacheLineSize
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetCPUCacheLineSize
  name: GetCPUCacheLineSize
  nameWithType: Sdl.GetCPUCacheLineSize
  fullName: SharpSDL3.Sdl.GetCPUCacheLineSize
- uid: SharpSDL3.Sdl.GetNumLogicalCPUCores*
  commentId: Overload:SharpSDL3.Sdl.GetNumLogicalCPUCores
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetNumLogicalCPUCores
  name: GetNumLogicalCPUCores
  nameWithType: Sdl.GetNumLogicalCPUCores
  fullName: SharpSDL3.Sdl.GetNumLogicalCPUCores
- uid: SharpSDL3.Sdl.GetSIMDAlignment*
  commentId: Overload:SharpSDL3.Sdl.GetSIMDAlignment
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetSIMDAlignment
  name: GetSIMDAlignment
  nameWithType: Sdl.GetSIMDAlignment
  fullName: SharpSDL3.Sdl.GetSIMDAlignment
- uid: System.UIntPtr
  commentId: T:System.UIntPtr
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uintptr
  name: nuint
  nameWithType: nuint
  fullName: nuint
  nameWithType.vb: UIntPtr
  fullName.vb: System.UIntPtr
  name.vb: UIntPtr
- uid: SharpSDL3.Sdl.GetSystemRAM*
  commentId: Overload:SharpSDL3.Sdl.GetSystemRAM
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetSystemRAM
  name: GetSystemRAM
  nameWithType: Sdl.GetSystemRAM
  fullName: SharpSDL3.Sdl.GetSystemRAM
- uid: SharpSDL3.Sdl.HasAltiVec*
  commentId: Overload:SharpSDL3.Sdl.HasAltiVec
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasAltiVec
  name: HasAltiVec
  nameWithType: Sdl.HasAltiVec
  fullName: SharpSDL3.Sdl.HasAltiVec
- uid: SharpSDL3.Sdl.HasNEON
  commentId: M:SharpSDL3.Sdl.HasNEON
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasNEON
  name: HasNEON()
  nameWithType: Sdl.HasNEON()
  fullName: SharpSDL3.Sdl.HasNEON()
  spec.csharp:
  - uid: SharpSDL3.Sdl.HasNEON
    name: HasNEON
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasNEON
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.HasNEON
    name: HasNEON
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasNEON
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.HasARMSIMD*
  commentId: Overload:SharpSDL3.Sdl.HasARMSIMD
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasARMSIMD
  name: HasARMSIMD
  nameWithType: Sdl.HasARMSIMD
  fullName: SharpSDL3.Sdl.HasARMSIMD
- uid: SharpSDL3.Sdl.HasAVX2
  commentId: M:SharpSDL3.Sdl.HasAVX2
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasAVX2
  name: HasAVX2()
  nameWithType: Sdl.HasAVX2()
  fullName: SharpSDL3.Sdl.HasAVX2()
  spec.csharp:
  - uid: SharpSDL3.Sdl.HasAVX2
    name: HasAVX2
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasAVX2
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.HasAVX2
    name: HasAVX2
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasAVX2
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.HasAVX512F
  commentId: M:SharpSDL3.Sdl.HasAVX512F
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasAVX512F
  name: HasAVX512F()
  nameWithType: Sdl.HasAVX512F()
  fullName: SharpSDL3.Sdl.HasAVX512F()
  spec.csharp:
  - uid: SharpSDL3.Sdl.HasAVX512F
    name: HasAVX512F
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasAVX512F
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.HasAVX512F
    name: HasAVX512F
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasAVX512F
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.HasAVX*
  commentId: Overload:SharpSDL3.Sdl.HasAVX
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasAVX
  name: HasAVX
  nameWithType: Sdl.HasAVX
  fullName: SharpSDL3.Sdl.HasAVX
- uid: SharpSDL3.Sdl.HasAVX
  commentId: M:SharpSDL3.Sdl.HasAVX
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasAVX
  name: HasAVX()
  nameWithType: Sdl.HasAVX()
  fullName: SharpSDL3.Sdl.HasAVX()
  spec.csharp:
  - uid: SharpSDL3.Sdl.HasAVX
    name: HasAVX
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasAVX
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.HasAVX
    name: HasAVX
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasAVX
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.HasAVX2*
  commentId: Overload:SharpSDL3.Sdl.HasAVX2
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasAVX2
  name: HasAVX2
  nameWithType: Sdl.HasAVX2
  fullName: SharpSDL3.Sdl.HasAVX2
- uid: SharpSDL3.Sdl.HasAVX512F*
  commentId: Overload:SharpSDL3.Sdl.HasAVX512F
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasAVX512F
  name: HasAVX512F
  nameWithType: Sdl.HasAVX512F
  fullName: SharpSDL3.Sdl.HasAVX512F
- uid: SharpSDL3.Sdl.HasLASX*
  commentId: Overload:SharpSDL3.Sdl.HasLASX
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasLASX
  name: HasLASX
  nameWithType: Sdl.HasLASX
  fullName: SharpSDL3.Sdl.HasLASX
- uid: SharpSDL3.Sdl.HasLSX*
  commentId: Overload:SharpSDL3.Sdl.HasLSX
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasLSX
  name: HasLSX
  nameWithType: Sdl.HasLSX
  fullName: SharpSDL3.Sdl.HasLSX
- uid: SharpSDL3.Sdl.HasMMX*
  commentId: Overload:SharpSDL3.Sdl.HasMMX
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasMMX
  name: HasMMX
  nameWithType: Sdl.HasMMX
  fullName: SharpSDL3.Sdl.HasMMX
- uid: SharpSDL3.Sdl.HasNEON*
  commentId: Overload:SharpSDL3.Sdl.HasNEON
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasNEON
  name: HasNEON
  nameWithType: Sdl.HasNEON
  fullName: SharpSDL3.Sdl.HasNEON
- uid: SharpSDL3.Sdl.HasSSE2
  commentId: M:SharpSDL3.Sdl.HasSSE2
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasSSE2
  name: HasSSE2()
  nameWithType: Sdl.HasSSE2()
  fullName: SharpSDL3.Sdl.HasSSE2()
  spec.csharp:
  - uid: SharpSDL3.Sdl.HasSSE2
    name: HasSSE2
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasSSE2
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.HasSSE2
    name: HasSSE2
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasSSE2
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.HasSSE3
  commentId: M:SharpSDL3.Sdl.HasSSE3
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasSSE3
  name: HasSSE3()
  nameWithType: Sdl.HasSSE3()
  fullName: SharpSDL3.Sdl.HasSSE3()
  spec.csharp:
  - uid: SharpSDL3.Sdl.HasSSE3
    name: HasSSE3
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasSSE3
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.HasSSE3
    name: HasSSE3
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasSSE3
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.HasSSE41
  commentId: M:SharpSDL3.Sdl.HasSSE41
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasSSE41
  name: HasSSE41()
  nameWithType: Sdl.HasSSE41()
  fullName: SharpSDL3.Sdl.HasSSE41()
  spec.csharp:
  - uid: SharpSDL3.Sdl.HasSSE41
    name: HasSSE41
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasSSE41
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.HasSSE41
    name: HasSSE41
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasSSE41
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.HasSSE42
  commentId: M:SharpSDL3.Sdl.HasSSE42
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasSSE42
  name: HasSSE42()
  nameWithType: Sdl.HasSSE42()
  fullName: SharpSDL3.Sdl.HasSSE42()
  spec.csharp:
  - uid: SharpSDL3.Sdl.HasSSE42
    name: HasSSE42
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasSSE42
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.HasSSE42
    name: HasSSE42
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasSSE42
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.HasSSE*
  commentId: Overload:SharpSDL3.Sdl.HasSSE
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasSSE
  name: HasSSE
  nameWithType: Sdl.HasSSE
  fullName: SharpSDL3.Sdl.HasSSE
- uid: SharpSDL3.Sdl.HasSSE
  commentId: M:SharpSDL3.Sdl.HasSSE
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasSSE
  name: HasSSE()
  nameWithType: Sdl.HasSSE()
  fullName: SharpSDL3.Sdl.HasSSE()
  spec.csharp:
  - uid: SharpSDL3.Sdl.HasSSE
    name: HasSSE
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasSSE
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.HasSSE
    name: HasSSE
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasSSE
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.HasSSE2*
  commentId: Overload:SharpSDL3.Sdl.HasSSE2
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasSSE2
  name: HasSSE2
  nameWithType: Sdl.HasSSE2
  fullName: SharpSDL3.Sdl.HasSSE2
- uid: SharpSDL3.Sdl.HasSSE3*
  commentId: Overload:SharpSDL3.Sdl.HasSSE3
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasSSE3
  name: HasSSE3
  nameWithType: Sdl.HasSSE3
  fullName: SharpSDL3.Sdl.HasSSE3
- uid: SharpSDL3.Sdl.HasSSE41*
  commentId: Overload:SharpSDL3.Sdl.HasSSE41
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasSSE41
  name: HasSSE41
  nameWithType: Sdl.HasSSE41
  fullName: SharpSDL3.Sdl.HasSSE41
- uid: SharpSDL3.Sdl.HasSSE42*
  commentId: Overload:SharpSDL3.Sdl.HasSSE42
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasSSE42
  name: HasSSE42
  nameWithType: Sdl.HasSSE42
  fullName: SharpSDL3.Sdl.HasSSE42
- uid: SharpSDL3.Sdl.RemoveEventWatch(SharpSDL3.Delegates.SdlEventFilter,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.RemoveEventWatch(SharpSDL3.Delegates.SdlEventFilter,System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RemoveEventWatch_SharpSDL3_Delegates_SdlEventFilter_System_IntPtr_
  name: RemoveEventWatch(SdlEventFilter, nint)
  nameWithType: Sdl.RemoveEventWatch(Delegates.SdlEventFilter, nint)
  fullName: SharpSDL3.Sdl.RemoveEventWatch(SharpSDL3.Delegates.SdlEventFilter, nint)
  nameWithType.vb: Sdl.RemoveEventWatch(Delegates.SdlEventFilter, IntPtr)
  fullName.vb: SharpSDL3.Sdl.RemoveEventWatch(SharpSDL3.Delegates.SdlEventFilter, System.IntPtr)
  name.vb: RemoveEventWatch(SdlEventFilter, IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.RemoveEventWatch(SharpSDL3.Delegates.SdlEventFilter,System.IntPtr)
    name: RemoveEventWatch
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RemoveEventWatch_SharpSDL3_Delegates_SdlEventFilter_System_IntPtr_
  - name: (
  - uid: SharpSDL3.Delegates.SdlEventFilter
    name: SdlEventFilter
    href: SharpSDL3.Delegates.SdlEventFilter.html
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.RemoveEventWatch(SharpSDL3.Delegates.SdlEventFilter,System.IntPtr)
    name: RemoveEventWatch
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RemoveEventWatch_SharpSDL3_Delegates_SdlEventFilter_System_IntPtr_
  - name: (
  - uid: SharpSDL3.Delegates.SdlEventFilter
    name: SdlEventFilter
    href: SharpSDL3.Delegates.SdlEventFilter.html
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.SetEventFilter(SharpSDL3.Delegates.SdlEventFilter,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.SetEventFilter(SharpSDL3.Delegates.SdlEventFilter,System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetEventFilter_SharpSDL3_Delegates_SdlEventFilter_System_IntPtr_
  name: SetEventFilter(SdlEventFilter, nint)
  nameWithType: Sdl.SetEventFilter(Delegates.SdlEventFilter, nint)
  fullName: SharpSDL3.Sdl.SetEventFilter(SharpSDL3.Delegates.SdlEventFilter, nint)
  nameWithType.vb: Sdl.SetEventFilter(Delegates.SdlEventFilter, IntPtr)
  fullName.vb: SharpSDL3.Sdl.SetEventFilter(SharpSDL3.Delegates.SdlEventFilter, System.IntPtr)
  name.vb: SetEventFilter(SdlEventFilter, IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetEventFilter(SharpSDL3.Delegates.SdlEventFilter,System.IntPtr)
    name: SetEventFilter
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetEventFilter_SharpSDL3_Delegates_SdlEventFilter_System_IntPtr_
  - name: (
  - uid: SharpSDL3.Delegates.SdlEventFilter
    name: SdlEventFilter
    href: SharpSDL3.Delegates.SdlEventFilter.html
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetEventFilter(SharpSDL3.Delegates.SdlEventFilter,System.IntPtr)
    name: SetEventFilter
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetEventFilter_SharpSDL3_Delegates_SdlEventFilter_System_IntPtr_
  - name: (
  - uid: SharpSDL3.Delegates.SdlEventFilter
    name: SdlEventFilter
    href: SharpSDL3.Delegates.SdlEventFilter.html
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.AddEventWatch*
  commentId: Overload:SharpSDL3.Sdl.AddEventWatch
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_AddEventWatch_SharpSDL3_Delegates_SdlEventFilter_System_IntPtr_
  name: AddEventWatch
  nameWithType: Sdl.AddEventWatch
  fullName: SharpSDL3.Sdl.AddEventWatch
- uid: SharpSDL3.Delegates.SdlEventFilter
  commentId: T:SharpSDL3.Delegates.SdlEventFilter
  parent: SharpSDL3
  href: SharpSDL3.Delegates.html
  name: Delegates.SdlEventFilter
  nameWithType: Delegates.SdlEventFilter
  fullName: SharpSDL3.Delegates.SdlEventFilter
  spec.csharp:
  - uid: SharpSDL3.Delegates
    name: Delegates
    href: SharpSDL3.Delegates.html
  - name: .
  - uid: SharpSDL3.Delegates.SdlEventFilter
    name: SdlEventFilter
    href: SharpSDL3.Delegates.SdlEventFilter.html
  spec.vb:
  - uid: SharpSDL3.Delegates
    name: Delegates
    href: SharpSDL3.Delegates.html
  - name: .
  - uid: SharpSDL3.Delegates.SdlEventFilter
    name: SdlEventFilter
    href: SharpSDL3.Delegates.SdlEventFilter.html
- uid: SharpSDL3.Sdl.SetEventEnabled(System.UInt32,System.Boolean)
  commentId: M:SharpSDL3.Sdl.SetEventEnabled(System.UInt32,System.Boolean)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetEventEnabled_System_UInt32_System_Boolean_
  name: SetEventEnabled(uint, bool)
  nameWithType: Sdl.SetEventEnabled(uint, bool)
  fullName: SharpSDL3.Sdl.SetEventEnabled(uint, bool)
  nameWithType.vb: Sdl.SetEventEnabled(UInteger, Boolean)
  fullName.vb: SharpSDL3.Sdl.SetEventEnabled(UInteger, Boolean)
  name.vb: SetEventEnabled(UInteger, Boolean)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetEventEnabled(System.UInt32,System.Boolean)
    name: SetEventEnabled
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetEventEnabled_System_UInt32_System_Boolean_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetEventEnabled(System.UInt32,System.Boolean)
    name: SetEventEnabled
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetEventEnabled_System_UInt32_System_Boolean_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: SharpSDL3.Sdl.EventEnabled*
  commentId: Overload:SharpSDL3.Sdl.EventEnabled
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_EventEnabled_System_UInt32_
  name: EventEnabled
  nameWithType: Sdl.EventEnabled
  fullName: SharpSDL3.Sdl.EventEnabled
- uid: SharpSDL3.Sdl.GetEventFilter(SharpSDL3.Delegates.SdlEventFilter@,System.IntPtr@)
  commentId: M:SharpSDL3.Sdl.GetEventFilter(SharpSDL3.Delegates.SdlEventFilter@,System.IntPtr@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetEventFilter_SharpSDL3_Delegates_SdlEventFilter__System_IntPtr__
  name: GetEventFilter(out SdlEventFilter, out nint)
  nameWithType: Sdl.GetEventFilter(out Delegates.SdlEventFilter, out nint)
  fullName: SharpSDL3.Sdl.GetEventFilter(out SharpSDL3.Delegates.SdlEventFilter, out nint)
  nameWithType.vb: Sdl.GetEventFilter(Delegates.SdlEventFilter, IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetEventFilter(SharpSDL3.Delegates.SdlEventFilter, System.IntPtr)
  name.vb: GetEventFilter(SdlEventFilter, IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetEventFilter(SharpSDL3.Delegates.SdlEventFilter@,System.IntPtr@)
    name: GetEventFilter
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetEventFilter_SharpSDL3_Delegates_SdlEventFilter__System_IntPtr__
  - name: (
  - name: out
  - name: " "
  - uid: SharpSDL3.Delegates.SdlEventFilter
    name: SdlEventFilter
    href: SharpSDL3.Delegates.SdlEventFilter.html
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetEventFilter(SharpSDL3.Delegates.SdlEventFilter@,System.IntPtr@)
    name: GetEventFilter
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetEventFilter_SharpSDL3_Delegates_SdlEventFilter__System_IntPtr__
  - name: (
  - uid: SharpSDL3.Delegates.SdlEventFilter
    name: SdlEventFilter
    href: SharpSDL3.Delegates.SdlEventFilter.html
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.FilterEvents*
  commentId: Overload:SharpSDL3.Sdl.FilterEvents
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_FilterEvents_SharpSDL3_Delegates_SdlEventFilter_System_IntPtr_
  name: FilterEvents
  nameWithType: Sdl.FilterEvents
  fullName: SharpSDL3.Sdl.FilterEvents
- uid: SharpSDL3.Sdl.FlushEvents(System.UInt32,System.UInt32)
  commentId: M:SharpSDL3.Sdl.FlushEvents(System.UInt32,System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_FlushEvents_System_UInt32_System_UInt32_
  name: FlushEvents(uint, uint)
  nameWithType: Sdl.FlushEvents(uint, uint)
  fullName: SharpSDL3.Sdl.FlushEvents(uint, uint)
  nameWithType.vb: Sdl.FlushEvents(UInteger, UInteger)
  fullName.vb: SharpSDL3.Sdl.FlushEvents(UInteger, UInteger)
  name.vb: FlushEvents(UInteger, UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.FlushEvents(System.UInt32,System.UInt32)
    name: FlushEvents
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_FlushEvents_System_UInt32_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.FlushEvents(System.UInt32,System.UInt32)
    name: FlushEvents
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_FlushEvents_System_UInt32_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.FlushEvent*
  commentId: Overload:SharpSDL3.Sdl.FlushEvent
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_FlushEvent_System_UInt32_
  name: FlushEvent
  nameWithType: Sdl.FlushEvent
  fullName: SharpSDL3.Sdl.FlushEvent
- uid: SharpSDL3.Sdl.FlushEvent(System.UInt32)
  commentId: M:SharpSDL3.Sdl.FlushEvent(System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_FlushEvent_System_UInt32_
  name: FlushEvent(uint)
  nameWithType: Sdl.FlushEvent(uint)
  fullName: SharpSDL3.Sdl.FlushEvent(uint)
  nameWithType.vb: Sdl.FlushEvent(UInteger)
  fullName.vb: SharpSDL3.Sdl.FlushEvent(UInteger)
  name.vb: FlushEvent(UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.FlushEvent(System.UInt32)
    name: FlushEvent
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_FlushEvent_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.FlushEvent(System.UInt32)
    name: FlushEvent
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_FlushEvent_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.FlushEvents*
  commentId: Overload:SharpSDL3.Sdl.FlushEvents
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_FlushEvents_System_UInt32_System_UInt32_
  name: FlushEvents
  nameWithType: Sdl.FlushEvents
  fullName: SharpSDL3.Sdl.FlushEvents
- uid: SharpSDL3.Sdl.GetEventFilter*
  commentId: Overload:SharpSDL3.Sdl.GetEventFilter
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetEventFilter_SharpSDL3_Delegates_SdlEventFilter__System_IntPtr__
  name: GetEventFilter
  nameWithType: Sdl.GetEventFilter
  fullName: SharpSDL3.Sdl.GetEventFilter
- uid: SharpSDL3.Sdl.PollEvent(SharpSDL3.Structs.Event@)
  commentId: M:SharpSDL3.Sdl.PollEvent(SharpSDL3.Structs.Event@)
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_PollEvent_SharpSDL3_Structs_Event__
  name: PollEvent(out Event)
  nameWithType: Sdl.PollEvent(out Event)
  fullName: SharpSDL3.Sdl.PollEvent(out SharpSDL3.Structs.Event)
  nameWithType.vb: Sdl.PollEvent(Event)
  fullName.vb: SharpSDL3.Sdl.PollEvent(SharpSDL3.Structs.Event)
  name.vb: PollEvent(Event)
  spec.csharp:
  - uid: SharpSDL3.Sdl.PollEvent(SharpSDL3.Structs.Event@)
    name: PollEvent
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_PollEvent_SharpSDL3_Structs_Event__
  - name: (
  - name: out
  - name: " "
  - uid: SharpSDL3.Structs.Event
    name: Event
    href: SharpSDL3.Structs.Event.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.PollEvent(SharpSDL3.Structs.Event@)
    name: PollEvent
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_PollEvent_SharpSDL3_Structs_Event__
  - name: (
  - uid: SharpSDL3.Structs.Event
    name: Event
    href: SharpSDL3.Structs.Event.html
  - name: )
- uid: SharpSDL3.Sdl.WaitEvent(SharpSDL3.Structs.Event@)
  commentId: M:SharpSDL3.Sdl.WaitEvent(SharpSDL3.Structs.Event@)
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WaitEvent_SharpSDL3_Structs_Event__
  name: WaitEvent(out Event)
  nameWithType: Sdl.WaitEvent(out Event)
  fullName: SharpSDL3.Sdl.WaitEvent(out SharpSDL3.Structs.Event)
  nameWithType.vb: Sdl.WaitEvent(Event)
  fullName.vb: SharpSDL3.Sdl.WaitEvent(SharpSDL3.Structs.Event)
  name.vb: WaitEvent(Event)
  spec.csharp:
  - uid: SharpSDL3.Sdl.WaitEvent(SharpSDL3.Structs.Event@)
    name: WaitEvent
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WaitEvent_SharpSDL3_Structs_Event__
  - name: (
  - name: out
  - name: " "
  - uid: SharpSDL3.Structs.Event
    name: Event
    href: SharpSDL3.Structs.Event.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.WaitEvent(SharpSDL3.Structs.Event@)
    name: WaitEvent
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WaitEvent_SharpSDL3_Structs_Event__
  - name: (
  - uid: SharpSDL3.Structs.Event
    name: Event
    href: SharpSDL3.Structs.Event.html
  - name: )
- uid: SharpSDL3.Sdl.WaitEventTimeout(SharpSDL3.Structs.Event@,System.Int32)
  commentId: M:SharpSDL3.Sdl.WaitEventTimeout(SharpSDL3.Structs.Event@,System.Int32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WaitEventTimeout_SharpSDL3_Structs_Event__System_Int32_
  name: WaitEventTimeout(out Event, int)
  nameWithType: Sdl.WaitEventTimeout(out Event, int)
  fullName: SharpSDL3.Sdl.WaitEventTimeout(out SharpSDL3.Structs.Event, int)
  nameWithType.vb: Sdl.WaitEventTimeout(Event, Integer)
  fullName.vb: SharpSDL3.Sdl.WaitEventTimeout(SharpSDL3.Structs.Event, Integer)
  name.vb: WaitEventTimeout(Event, Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.WaitEventTimeout(SharpSDL3.Structs.Event@,System.Int32)
    name: WaitEventTimeout
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WaitEventTimeout_SharpSDL3_Structs_Event__System_Int32_
  - name: (
  - name: out
  - name: " "
  - uid: SharpSDL3.Structs.Event
    name: Event
    href: SharpSDL3.Structs.Event.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.WaitEventTimeout(SharpSDL3.Structs.Event@,System.Int32)
    name: WaitEventTimeout
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WaitEventTimeout_SharpSDL3_Structs_Event__System_Int32_
  - name: (
  - uid: SharpSDL3.Structs.Event
    name: Event
    href: SharpSDL3.Structs.Event.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.GetWindowFromEvent*
  commentId: Overload:SharpSDL3.Sdl.GetWindowFromEvent
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowFromEvent_SharpSDL3_Structs_Event__
  name: GetWindowFromEvent
  nameWithType: Sdl.GetWindowFromEvent
  fullName: SharpSDL3.Sdl.GetWindowFromEvent
- uid: SharpSDL3.Structs.Event
  commentId: T:SharpSDL3.Structs.Event
  parent: SharpSDL3.Structs
  href: SharpSDL3.Structs.Event.html
  name: Event
  nameWithType: Event
  fullName: SharpSDL3.Structs.Event
- uid: SharpSDL3.Sdl.HasEvents(System.UInt32,System.UInt32)
  commentId: M:SharpSDL3.Sdl.HasEvents(System.UInt32,System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasEvents_System_UInt32_System_UInt32_
  name: HasEvents(uint, uint)
  nameWithType: Sdl.HasEvents(uint, uint)
  fullName: SharpSDL3.Sdl.HasEvents(uint, uint)
  nameWithType.vb: Sdl.HasEvents(UInteger, UInteger)
  fullName.vb: SharpSDL3.Sdl.HasEvents(UInteger, UInteger)
  name.vb: HasEvents(UInteger, UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.HasEvents(System.UInt32,System.UInt32)
    name: HasEvents
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasEvents_System_UInt32_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.HasEvents(System.UInt32,System.UInt32)
    name: HasEvents
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasEvents_System_UInt32_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.HasEvent*
  commentId: Overload:SharpSDL3.Sdl.HasEvent
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasEvent_System_UInt32_
  name: HasEvent
  nameWithType: Sdl.HasEvent
  fullName: SharpSDL3.Sdl.HasEvent
- uid: SharpSDL3.Sdl.HasEvents*
  commentId: Overload:SharpSDL3.Sdl.HasEvents
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasEvents_System_UInt32_System_UInt32_
  name: HasEvents
  nameWithType: Sdl.HasEvents
  fullName: SharpSDL3.Sdl.HasEvents
- uid: SharpSDL3.Sdl.PumpEvents
  commentId: M:SharpSDL3.Sdl.PumpEvents
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_PumpEvents
  name: PumpEvents()
  nameWithType: Sdl.PumpEvents()
  fullName: SharpSDL3.Sdl.PumpEvents()
  spec.csharp:
  - uid: SharpSDL3.Sdl.PumpEvents
    name: PumpEvents
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_PumpEvents
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.PumpEvents
    name: PumpEvents
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_PumpEvents
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.PushEvent(SharpSDL3.Structs.Event@)
  commentId: M:SharpSDL3.Sdl.PushEvent(SharpSDL3.Structs.Event@)
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_PushEvent_SharpSDL3_Structs_Event__
  name: PushEvent(ref Event)
  nameWithType: Sdl.PushEvent(ref Event)
  fullName: SharpSDL3.Sdl.PushEvent(ref SharpSDL3.Structs.Event)
  nameWithType.vb: Sdl.PushEvent(Event)
  fullName.vb: SharpSDL3.Sdl.PushEvent(SharpSDL3.Structs.Event)
  name.vb: PushEvent(Event)
  spec.csharp:
  - uid: SharpSDL3.Sdl.PushEvent(SharpSDL3.Structs.Event@)
    name: PushEvent
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_PushEvent_SharpSDL3_Structs_Event__
  - name: (
  - name: ref
  - name: " "
  - uid: SharpSDL3.Structs.Event
    name: Event
    href: SharpSDL3.Structs.Event.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.PushEvent(SharpSDL3.Structs.Event@)
    name: PushEvent
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_PushEvent_SharpSDL3_Structs_Event__
  - name: (
  - uid: SharpSDL3.Structs.Event
    name: Event
    href: SharpSDL3.Structs.Event.html
  - name: )
- uid: SharpSDL3.Sdl.PeepEvents*
  commentId: Overload:SharpSDL3.Sdl.PeepEvents
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_PeepEvents_SharpSDL3_Structs_Event____System_Int32_SharpSDL3_Enums_EventAction_SharpSDL3_Enums_EventType_SharpSDL3_Enums_EventType_
  name: PeepEvents
  nameWithType: Sdl.PeepEvents
  fullName: SharpSDL3.Sdl.PeepEvents
- uid: SharpSDL3.Structs.Event[]
  isExternal: true
  href: SharpSDL3.Structs.Event.html
  name: Event[]
  nameWithType: Event[]
  fullName: SharpSDL3.Structs.Event[]
  nameWithType.vb: Event()
  fullName.vb: SharpSDL3.Structs.Event()
  name.vb: Event()
  spec.csharp:
  - uid: SharpSDL3.Structs.Event
    name: Event
    href: SharpSDL3.Structs.Event.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SharpSDL3.Structs.Event
    name: Event
    href: SharpSDL3.Structs.Event.html
  - name: (
  - name: )
- uid: SharpSDL3.Enums.EventAction
  commentId: T:SharpSDL3.Enums.EventAction
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.EventAction.html
  name: EventAction
  nameWithType: EventAction
  fullName: SharpSDL3.Enums.EventAction
- uid: SharpSDL3.Enums.EventType
  commentId: T:SharpSDL3.Enums.EventType
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.EventType.html
  name: EventType
  nameWithType: EventType
  fullName: SharpSDL3.Enums.EventType
- uid: SharpSDL3.Sdl.PollEvent*
  commentId: Overload:SharpSDL3.Sdl.PollEvent
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_PollEvent_SharpSDL3_Structs_Event__
  name: PollEvent
  nameWithType: Sdl.PollEvent
  fullName: SharpSDL3.Sdl.PollEvent
- uid: SharpSDL3.Sdl.PumpEvents*
  commentId: Overload:SharpSDL3.Sdl.PumpEvents
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_PumpEvents
  name: PumpEvents
  nameWithType: Sdl.PumpEvents
  fullName: SharpSDL3.Sdl.PumpEvents
- uid: SharpSDL3.Sdl.PeepEvents(SharpSDL3.Structs.Event[]@,System.Int32,SharpSDL3.Enums.EventAction,SharpSDL3.Enums.EventType,SharpSDL3.Enums.EventType)
  commentId: M:SharpSDL3.Sdl.PeepEvents(SharpSDL3.Structs.Event[]@,System.Int32,SharpSDL3.Enums.EventAction,SharpSDL3.Enums.EventType,SharpSDL3.Enums.EventType)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_PeepEvents_SharpSDL3_Structs_Event____System_Int32_SharpSDL3_Enums_EventAction_SharpSDL3_Enums_EventType_SharpSDL3_Enums_EventType_
  name: PeepEvents(ref Event[], int, EventAction, EventType, EventType)
  nameWithType: Sdl.PeepEvents(ref Event[], int, EventAction, EventType, EventType)
  fullName: SharpSDL3.Sdl.PeepEvents(ref SharpSDL3.Structs.Event[], int, SharpSDL3.Enums.EventAction, SharpSDL3.Enums.EventType, SharpSDL3.Enums.EventType)
  nameWithType.vb: Sdl.PeepEvents(Event(), Integer, EventAction, EventType, EventType)
  fullName.vb: SharpSDL3.Sdl.PeepEvents(SharpSDL3.Structs.Event(), Integer, SharpSDL3.Enums.EventAction, SharpSDL3.Enums.EventType, SharpSDL3.Enums.EventType)
  name.vb: PeepEvents(Event(), Integer, EventAction, EventType, EventType)
  spec.csharp:
  - uid: SharpSDL3.Sdl.PeepEvents(SharpSDL3.Structs.Event[]@,System.Int32,SharpSDL3.Enums.EventAction,SharpSDL3.Enums.EventType,SharpSDL3.Enums.EventType)
    name: PeepEvents
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_PeepEvents_SharpSDL3_Structs_Event____System_Int32_SharpSDL3_Enums_EventAction_SharpSDL3_Enums_EventType_SharpSDL3_Enums_EventType_
  - name: (
  - name: ref
  - name: " "
  - uid: SharpSDL3.Structs.Event
    name: Event
    href: SharpSDL3.Structs.Event.html
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.EventAction
    name: EventAction
    href: SharpSDL3.Enums.EventAction.html
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.EventType
    name: EventType
    href: SharpSDL3.Enums.EventType.html
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.EventType
    name: EventType
    href: SharpSDL3.Enums.EventType.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.PeepEvents(SharpSDL3.Structs.Event[]@,System.Int32,SharpSDL3.Enums.EventAction,SharpSDL3.Enums.EventType,SharpSDL3.Enums.EventType)
    name: PeepEvents
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_PeepEvents_SharpSDL3_Structs_Event____System_Int32_SharpSDL3_Enums_EventAction_SharpSDL3_Enums_EventType_SharpSDL3_Enums_EventType_
  - name: (
  - uid: SharpSDL3.Structs.Event
    name: Event
    href: SharpSDL3.Structs.Event.html
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.EventAction
    name: EventAction
    href: SharpSDL3.Enums.EventAction.html
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.EventType
    name: EventType
    href: SharpSDL3.Enums.EventType.html
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.EventType
    name: EventType
    href: SharpSDL3.Enums.EventType.html
  - name: )
- uid: SharpSDL3.Sdl.RegisterEvents(System.Int32)
  commentId: M:SharpSDL3.Sdl.RegisterEvents(System.Int32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RegisterEvents_System_Int32_
  name: RegisterEvents(int)
  nameWithType: Sdl.RegisterEvents(int)
  fullName: SharpSDL3.Sdl.RegisterEvents(int)
  nameWithType.vb: Sdl.RegisterEvents(Integer)
  fullName.vb: SharpSDL3.Sdl.RegisterEvents(Integer)
  name.vb: RegisterEvents(Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.RegisterEvents(System.Int32)
    name: RegisterEvents
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RegisterEvents_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.RegisterEvents(System.Int32)
    name: RegisterEvents
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RegisterEvents_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.PushEvent*
  commentId: Overload:SharpSDL3.Sdl.PushEvent
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_PushEvent_SharpSDL3_Structs_Event__
  name: PushEvent
  nameWithType: Sdl.PushEvent
  fullName: SharpSDL3.Sdl.PushEvent
- uid: SharpSDL3.Sdl.RegisterEvents*
  commentId: Overload:SharpSDL3.Sdl.RegisterEvents
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RegisterEvents_System_Int32_
  name: RegisterEvents
  nameWithType: Sdl.RegisterEvents
  fullName: SharpSDL3.Sdl.RegisterEvents
- uid: SharpSDL3.Sdl.AddEventWatch(SharpSDL3.Delegates.SdlEventFilter,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.AddEventWatch(SharpSDL3.Delegates.SdlEventFilter,System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_AddEventWatch_SharpSDL3_Delegates_SdlEventFilter_System_IntPtr_
  name: AddEventWatch(SdlEventFilter, nint)
  nameWithType: Sdl.AddEventWatch(Delegates.SdlEventFilter, nint)
  fullName: SharpSDL3.Sdl.AddEventWatch(SharpSDL3.Delegates.SdlEventFilter, nint)
  nameWithType.vb: Sdl.AddEventWatch(Delegates.SdlEventFilter, IntPtr)
  fullName.vb: SharpSDL3.Sdl.AddEventWatch(SharpSDL3.Delegates.SdlEventFilter, System.IntPtr)
  name.vb: AddEventWatch(SdlEventFilter, IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.AddEventWatch(SharpSDL3.Delegates.SdlEventFilter,System.IntPtr)
    name: AddEventWatch
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_AddEventWatch_SharpSDL3_Delegates_SdlEventFilter_System_IntPtr_
  - name: (
  - uid: SharpSDL3.Delegates.SdlEventFilter
    name: SdlEventFilter
    href: SharpSDL3.Delegates.SdlEventFilter.html
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.AddEventWatch(SharpSDL3.Delegates.SdlEventFilter,System.IntPtr)
    name: AddEventWatch
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_AddEventWatch_SharpSDL3_Delegates_SdlEventFilter_System_IntPtr_
  - name: (
  - uid: SharpSDL3.Delegates.SdlEventFilter
    name: SdlEventFilter
    href: SharpSDL3.Delegates.SdlEventFilter.html
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.RemoveEventWatch*
  commentId: Overload:SharpSDL3.Sdl.RemoveEventWatch
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RemoveEventWatch_SharpSDL3_Delegates_SdlEventFilter_System_IntPtr_
  name: RemoveEventWatch
  nameWithType: Sdl.RemoveEventWatch
  fullName: SharpSDL3.Sdl.RemoveEventWatch
- uid: SharpSDL3.Sdl.EventEnabled(System.UInt32)
  commentId: M:SharpSDL3.Sdl.EventEnabled(System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_EventEnabled_System_UInt32_
  name: EventEnabled(uint)
  nameWithType: Sdl.EventEnabled(uint)
  fullName: SharpSDL3.Sdl.EventEnabled(uint)
  nameWithType.vb: Sdl.EventEnabled(UInteger)
  fullName.vb: SharpSDL3.Sdl.EventEnabled(UInteger)
  name.vb: EventEnabled(UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.EventEnabled(System.UInt32)
    name: EventEnabled
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_EventEnabled_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.EventEnabled(System.UInt32)
    name: EventEnabled
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_EventEnabled_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.SetEventEnabled*
  commentId: Overload:SharpSDL3.Sdl.SetEventEnabled
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetEventEnabled_System_UInt32_System_Boolean_
  name: SetEventEnabled
  nameWithType: Sdl.SetEventEnabled
  fullName: SharpSDL3.Sdl.SetEventEnabled
- uid: SharpSDL3.Sdl.SetEventFilter*
  commentId: Overload:SharpSDL3.Sdl.SetEventFilter
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetEventFilter_SharpSDL3_Delegates_SdlEventFilter_System_IntPtr_
  name: SetEventFilter
  nameWithType: Sdl.SetEventFilter
  fullName: SharpSDL3.Sdl.SetEventFilter
- uid: SharpSDL3.Sdl.WaitEvent*
  commentId: Overload:SharpSDL3.Sdl.WaitEvent
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WaitEvent_SharpSDL3_Structs_Event__
  name: WaitEvent
  nameWithType: Sdl.WaitEvent
  fullName: SharpSDL3.Sdl.WaitEvent
- uid: SharpSDL3.Sdl.WaitEventTimeout*
  commentId: Overload:SharpSDL3.Sdl.WaitEventTimeout
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WaitEventTimeout_SharpSDL3_Structs_Event__System_Int32_
  name: WaitEventTimeout
  nameWithType: Sdl.WaitEventTimeout
  fullName: SharpSDL3.Sdl.WaitEventTimeout
- uid: SharpSDL3.Sdl.OpenFile*
  commentId: Overload:SharpSDL3.Sdl.OpenFile
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_OpenFile_SharpSDL3_Delegates_SdlDialogFileCallback_System_IntPtr_System_IntPtr_System_Span_SharpSDL3_Structs_DialogFileFilter__System_Int32_System_String_SharpSDL3_Structs_SdlBool_
  name: OpenFile
  nameWithType: Sdl.OpenFile
  fullName: SharpSDL3.Sdl.OpenFile
- uid: SharpSDL3.Delegates.SdlDialogFileCallback
  commentId: T:SharpSDL3.Delegates.SdlDialogFileCallback
  parent: SharpSDL3
  href: SharpSDL3.Delegates.html
  name: Delegates.SdlDialogFileCallback
  nameWithType: Delegates.SdlDialogFileCallback
  fullName: SharpSDL3.Delegates.SdlDialogFileCallback
  spec.csharp:
  - uid: SharpSDL3.Delegates
    name: Delegates
    href: SharpSDL3.Delegates.html
  - name: .
  - uid: SharpSDL3.Delegates.SdlDialogFileCallback
    name: SdlDialogFileCallback
    href: SharpSDL3.Delegates.SdlDialogFileCallback.html
  spec.vb:
  - uid: SharpSDL3.Delegates
    name: Delegates
    href: SharpSDL3.Delegates.html
  - name: .
  - uid: SharpSDL3.Delegates.SdlDialogFileCallback
    name: SdlDialogFileCallback
    href: SharpSDL3.Delegates.SdlDialogFileCallback.html
- uid: System.Span{SharpSDL3.Structs.DialogFileFilter}
  commentId: T:System.Span{SharpSDL3.Structs.DialogFileFilter}
  parent: System
  definition: System.Span`1
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<DialogFileFilter>
  nameWithType: Span<DialogFileFilter>
  fullName: System.Span<SharpSDL3.Structs.DialogFileFilter>
  nameWithType.vb: Span(Of DialogFileFilter)
  fullName.vb: System.Span(Of SharpSDL3.Structs.DialogFileFilter)
  name.vb: Span(Of DialogFileFilter)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: SharpSDL3.Structs.DialogFileFilter
    name: DialogFileFilter
    href: SharpSDL3.Structs.DialogFileFilter.html
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: SharpSDL3.Structs.DialogFileFilter
    name: DialogFileFilter
    href: SharpSDL3.Structs.DialogFileFilter.html
  - name: )
- uid: SharpSDL3.Sdl.OpenFolder*
  commentId: Overload:SharpSDL3.Sdl.OpenFolder
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_OpenFolder_SharpSDL3_Delegates_SdlDialogFileCallback_System_IntPtr_System_IntPtr_System_String_SharpSDL3_Structs_SdlBool_
  name: OpenFolder
  nameWithType: Sdl.OpenFolder
  fullName: SharpSDL3.Sdl.OpenFolder
- uid: SharpSDL3.Sdl.SaveFile*
  commentId: Overload:SharpSDL3.Sdl.SaveFile
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SaveFile_SharpSDL3_Delegates_SdlDialogFileCallback_System_IntPtr_System_IntPtr_System_Span_SharpSDL3_Structs_DialogFileFilter__System_Int32_System_String_
  name: SaveFile
  nameWithType: Sdl.SaveFile
  fullName: SharpSDL3.Sdl.SaveFile
- uid: SharpSDL3.Enums.FileDialogType
  commentId: T:SharpSDL3.Enums.FileDialogType
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.FileDialogType.html
  name: FileDialogType
  nameWithType: FileDialogType
  fullName: SharpSDL3.Enums.FileDialogType
- uid: SharpSDL3.Structs.DialogFileFilter
  commentId: T:SharpSDL3.Structs.DialogFileFilter
  href: SharpSDL3.Structs.DialogFileFilter.html
  name: DialogFileFilter
  nameWithType: DialogFileFilter
  fullName: SharpSDL3.Structs.DialogFileFilter
- uid: SharpSDL3.Sdl.ShowFileDialogWithProperties*
  commentId: Overload:SharpSDL3.Sdl.ShowFileDialogWithProperties
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ShowFileDialogWithProperties_SharpSDL3_Enums_FileDialogType_SharpSDL3_Delegates_SdlDialogFileCallback_System_IntPtr_System_UInt32_
  name: ShowFileDialogWithProperties
  nameWithType: Sdl.ShowFileDialogWithProperties
  fullName: SharpSDL3.Sdl.ShowFileDialogWithProperties
- uid: SharpSDL3.Sdl.CopyFile*
  commentId: Overload:SharpSDL3.Sdl.CopyFile
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CopyFile_System_String_System_String_
  name: CopyFile
  nameWithType: Sdl.CopyFile
  fullName: SharpSDL3.Sdl.CopyFile
- uid: SharpSDL3.Sdl.CreateDirectory*
  commentId: Overload:SharpSDL3.Sdl.CreateDirectory
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateDirectory_System_String_
  name: CreateDirectory
  nameWithType: Sdl.CreateDirectory
  fullName: SharpSDL3.Sdl.CreateDirectory
- uid: SharpSDL3.Sdl.EnumerateDirectory*
  commentId: Overload:SharpSDL3.Sdl.EnumerateDirectory
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_EnumerateDirectory_System_String_SharpSDL3_Delegates_SdlEnumerateDirectoryCallback_System_IntPtr_
  name: EnumerateDirectory
  nameWithType: Sdl.EnumerateDirectory
  fullName: SharpSDL3.Sdl.EnumerateDirectory
- uid: SharpSDL3.Delegates.SdlEnumerateDirectoryCallback
  commentId: T:SharpSDL3.Delegates.SdlEnumerateDirectoryCallback
  parent: SharpSDL3
  href: SharpSDL3.Delegates.html
  name: Delegates.SdlEnumerateDirectoryCallback
  nameWithType: Delegates.SdlEnumerateDirectoryCallback
  fullName: SharpSDL3.Delegates.SdlEnumerateDirectoryCallback
  spec.csharp:
  - uid: SharpSDL3.Delegates
    name: Delegates
    href: SharpSDL3.Delegates.html
  - name: .
  - uid: SharpSDL3.Delegates.SdlEnumerateDirectoryCallback
    name: SdlEnumerateDirectoryCallback
    href: SharpSDL3.Delegates.SdlEnumerateDirectoryCallback.html
  spec.vb:
  - uid: SharpSDL3.Delegates
    name: Delegates
    href: SharpSDL3.Delegates.html
  - name: .
  - uid: SharpSDL3.Delegates.SdlEnumerateDirectoryCallback
    name: SdlEnumerateDirectoryCallback
    href: SharpSDL3.Delegates.SdlEnumerateDirectoryCallback.html
- uid: SharpSDL3.Sdl.GetPrefPath(System.String,System.String)
  commentId: M:SharpSDL3.Sdl.GetPrefPath(System.String,System.String)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetPrefPath_System_String_System_String_
  name: GetPrefPath(string, string)
  nameWithType: Sdl.GetPrefPath(string, string)
  fullName: SharpSDL3.Sdl.GetPrefPath(string, string)
  nameWithType.vb: Sdl.GetPrefPath(String, String)
  fullName.vb: SharpSDL3.Sdl.GetPrefPath(String, String)
  name.vb: GetPrefPath(String, String)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetPrefPath(System.String,System.String)
    name: GetPrefPath
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetPrefPath_System_String_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetPrefPath(System.String,System.String)
    name: GetPrefPath
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetPrefPath_System_String_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SharpSDL3.Sdl.GetBasePath*
  commentId: Overload:SharpSDL3.Sdl.GetBasePath
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetBasePath
  name: GetBasePath
  nameWithType: Sdl.GetBasePath
  fullName: SharpSDL3.Sdl.GetBasePath
- uid: SharpSDL3.Sdl.GetCurrentDirectory*
  commentId: Overload:SharpSDL3.Sdl.GetCurrentDirectory
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetCurrentDirectory
  name: GetCurrentDirectory
  nameWithType: Sdl.GetCurrentDirectory
  fullName: SharpSDL3.Sdl.GetCurrentDirectory
- uid: SharpSDL3.Sdl.GetPathInfo*
  commentId: Overload:SharpSDL3.Sdl.GetPathInfo
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetPathInfo_System_String_SharpSDL3_Structs_PathInfo__
  name: GetPathInfo
  nameWithType: Sdl.GetPathInfo
  fullName: SharpSDL3.Sdl.GetPathInfo
- uid: SharpSDL3.Structs.PathInfo
  commentId: T:SharpSDL3.Structs.PathInfo
  parent: SharpSDL3.Structs
  href: SharpSDL3.Structs.PathInfo.html
  name: PathInfo
  nameWithType: PathInfo
  fullName: SharpSDL3.Structs.PathInfo
- uid: SharpSDL3.Sdl.GetBasePath
  commentId: M:SharpSDL3.Sdl.GetBasePath
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetBasePath
  name: GetBasePath()
  nameWithType: Sdl.GetBasePath()
  fullName: SharpSDL3.Sdl.GetBasePath()
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetBasePath
    name: GetBasePath
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetBasePath
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetBasePath
    name: GetBasePath
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetBasePath
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.GetPrefPath*
  commentId: Overload:SharpSDL3.Sdl.GetPrefPath
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetPrefPath_System_String_System_String_
  name: GetPrefPath
  nameWithType: Sdl.GetPrefPath
  fullName: SharpSDL3.Sdl.GetPrefPath
- uid: SharpSDL3.Sdl.GetUserFolder*
  commentId: Overload:SharpSDL3.Sdl.GetUserFolder
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetUserFolder_SharpSDL3_Enums_Folder_
  name: GetUserFolder
  nameWithType: Sdl.GetUserFolder
  fullName: SharpSDL3.Sdl.GetUserFolder
- uid: SharpSDL3.Enums.Folder
  commentId: T:SharpSDL3.Enums.Folder
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.Folder.html
  name: Folder
  nameWithType: Folder
  fullName: SharpSDL3.Enums.Folder
- uid: SharpSDL3.Sdl.RemovePath*
  commentId: Overload:SharpSDL3.Sdl.RemovePath
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RemovePath_System_String_
  name: RemovePath
  nameWithType: Sdl.RemovePath
  fullName: SharpSDL3.Sdl.RemovePath
- uid: SharpSDL3.Sdl.RenamePath*
  commentId: Overload:SharpSDL3.Sdl.RenamePath
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenamePath_System_String_System_String_
  name: RenamePath
  nameWithType: Sdl.RenamePath
  fullName: SharpSDL3.Sdl.RenamePath
- uid: SharpSDL3.Sdl.AddGamepadMappingsFromFile(System.String)
  commentId: M:SharpSDL3.Sdl.AddGamepadMappingsFromFile(System.String)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_AddGamepadMappingsFromFile_System_String_
  name: AddGamepadMappingsFromFile(string)
  nameWithType: Sdl.AddGamepadMappingsFromFile(string)
  fullName: SharpSDL3.Sdl.AddGamepadMappingsFromFile(string)
  nameWithType.vb: Sdl.AddGamepadMappingsFromFile(String)
  fullName.vb: SharpSDL3.Sdl.AddGamepadMappingsFromFile(String)
  name.vb: AddGamepadMappingsFromFile(String)
  spec.csharp:
  - uid: SharpSDL3.Sdl.AddGamepadMappingsFromFile(System.String)
    name: AddGamepadMappingsFromFile
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_AddGamepadMappingsFromFile_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.AddGamepadMappingsFromFile(System.String)
    name: AddGamepadMappingsFromFile
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_AddGamepadMappingsFromFile_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SharpSDL3.Sdl.AddGamepadMappingsFromIO(System.IntPtr,SharpSDL3.Structs.SdlBool)
  commentId: M:SharpSDL3.Sdl.AddGamepadMappingsFromIO(System.IntPtr,SharpSDL3.Structs.SdlBool)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_AddGamepadMappingsFromIO_System_IntPtr_SharpSDL3_Structs_SdlBool_
  name: AddGamepadMappingsFromIO(nint, SdlBool)
  nameWithType: Sdl.AddGamepadMappingsFromIO(nint, SdlBool)
  fullName: SharpSDL3.Sdl.AddGamepadMappingsFromIO(nint, SharpSDL3.Structs.SdlBool)
  nameWithType.vb: Sdl.AddGamepadMappingsFromIO(IntPtr, SdlBool)
  fullName.vb: SharpSDL3.Sdl.AddGamepadMappingsFromIO(System.IntPtr, SharpSDL3.Structs.SdlBool)
  name.vb: AddGamepadMappingsFromIO(IntPtr, SdlBool)
  spec.csharp:
  - uid: SharpSDL3.Sdl.AddGamepadMappingsFromIO(System.IntPtr,SharpSDL3.Structs.SdlBool)
    name: AddGamepadMappingsFromIO
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_AddGamepadMappingsFromIO_System_IntPtr_SharpSDL3_Structs_SdlBool_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.SdlBool
    name: SdlBool
    href: SharpSDL3.Structs.SdlBool.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.AddGamepadMappingsFromIO(System.IntPtr,SharpSDL3.Structs.SdlBool)
    name: AddGamepadMappingsFromIO
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_AddGamepadMappingsFromIO_System_IntPtr_SharpSDL3_Structs_SdlBool_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.SdlBool
    name: SdlBool
    href: SharpSDL3.Structs.SdlBool.html
  - name: )
- uid: SharpSDL3.Sdl.GetGamepadMapping(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetGamepadMapping(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadMapping_System_IntPtr_
  name: GetGamepadMapping(nint)
  nameWithType: Sdl.GetGamepadMapping(nint)
  fullName: SharpSDL3.Sdl.GetGamepadMapping(nint)
  nameWithType.vb: Sdl.GetGamepadMapping(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetGamepadMapping(System.IntPtr)
  name.vb: GetGamepadMapping(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetGamepadMapping(System.IntPtr)
    name: GetGamepadMapping
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadMapping_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetGamepadMapping(System.IntPtr)
    name: GetGamepadMapping
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadMapping_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GetGamepadMappingForGUID(SharpSDL3.Structs.SdlGuid)
  commentId: M:SharpSDL3.Sdl.GetGamepadMappingForGUID(SharpSDL3.Structs.SdlGuid)
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadMappingForGUID_SharpSDL3_Structs_SdlGuid_
  name: GetGamepadMappingForGUID(SdlGuid)
  nameWithType: Sdl.GetGamepadMappingForGUID(SdlGuid)
  fullName: SharpSDL3.Sdl.GetGamepadMappingForGUID(SharpSDL3.Structs.SdlGuid)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetGamepadMappingForGUID(SharpSDL3.Structs.SdlGuid)
    name: GetGamepadMappingForGUID
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadMappingForGUID_SharpSDL3_Structs_SdlGuid_
  - name: (
  - uid: SharpSDL3.Structs.SdlGuid
    name: SdlGuid
    href: SharpSDL3.Structs.SdlGuid.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetGamepadMappingForGUID(SharpSDL3.Structs.SdlGuid)
    name: GetGamepadMappingForGUID
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadMappingForGUID_SharpSDL3_Structs_SdlGuid_
  - name: (
  - uid: SharpSDL3.Structs.SdlGuid
    name: SdlGuid
    href: SharpSDL3.Structs.SdlGuid.html
  - name: )
- uid: SharpSDL3.Structs.SdlGuid
  commentId: T:SharpSDL3.Structs.SdlGuid
  parent: SharpSDL3.Structs
  href: SharpSDL3.Structs.SdlGuid.html
  name: SdlGuid
  nameWithType: SdlGuid
  fullName: SharpSDL3.Structs.SdlGuid
- uid: SharpSDL3.Sdl.AddGamepadMapping*
  commentId: Overload:SharpSDL3.Sdl.AddGamepadMapping
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_AddGamepadMapping_System_String_
  name: AddGamepadMapping
  nameWithType: Sdl.AddGamepadMapping
  fullName: SharpSDL3.Sdl.AddGamepadMapping
- uid: SharpSDL3.Sdl.AddGamepadMapping(System.String)
  commentId: M:SharpSDL3.Sdl.AddGamepadMapping(System.String)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_AddGamepadMapping_System_String_
  name: AddGamepadMapping(string)
  nameWithType: Sdl.AddGamepadMapping(string)
  fullName: SharpSDL3.Sdl.AddGamepadMapping(string)
  nameWithType.vb: Sdl.AddGamepadMapping(String)
  fullName.vb: SharpSDL3.Sdl.AddGamepadMapping(String)
  name.vb: AddGamepadMapping(String)
  spec.csharp:
  - uid: SharpSDL3.Sdl.AddGamepadMapping(System.String)
    name: AddGamepadMapping
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_AddGamepadMapping_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.AddGamepadMapping(System.String)
    name: AddGamepadMapping
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_AddGamepadMapping_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SharpSDL3.Sdl.AddGamepadMappingsFromFile*
  commentId: Overload:SharpSDL3.Sdl.AddGamepadMappingsFromFile
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_AddGamepadMappingsFromFile_System_String_
  name: AddGamepadMappingsFromFile
  nameWithType: Sdl.AddGamepadMappingsFromFile
  fullName: SharpSDL3.Sdl.AddGamepadMappingsFromFile
- uid: SharpSDL3.Sdl.AddGamepadMappingsFromIO*
  commentId: Overload:SharpSDL3.Sdl.AddGamepadMappingsFromIO
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_AddGamepadMappingsFromIO_System_IntPtr_SharpSDL3_Structs_SdlBool_
  name: AddGamepadMappingsFromIO
  nameWithType: Sdl.AddGamepadMappingsFromIO
  fullName: SharpSDL3.Sdl.AddGamepadMappingsFromIO
- uid: SharpSDL3.Sdl.OpenGamepad(System.UInt32)
  commentId: M:SharpSDL3.Sdl.OpenGamepad(System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_OpenGamepad_System_UInt32_
  name: OpenGamepad(uint)
  nameWithType: Sdl.OpenGamepad(uint)
  fullName: SharpSDL3.Sdl.OpenGamepad(uint)
  nameWithType.vb: Sdl.OpenGamepad(UInteger)
  fullName.vb: SharpSDL3.Sdl.OpenGamepad(UInteger)
  name.vb: OpenGamepad(UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.OpenGamepad(System.UInt32)
    name: OpenGamepad
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_OpenGamepad_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.OpenGamepad(System.UInt32)
    name: OpenGamepad
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_OpenGamepad_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.CloseGamepad*
  commentId: Overload:SharpSDL3.Sdl.CloseGamepad
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CloseGamepad_System_IntPtr_
  name: CloseGamepad
  nameWithType: Sdl.CloseGamepad
  fullName: SharpSDL3.Sdl.CloseGamepad
- uid: SharpSDL3.Sdl.GamepadConnected*
  commentId: Overload:SharpSDL3.Sdl.GamepadConnected
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GamepadConnected_System_IntPtr_
  name: GamepadConnected
  nameWithType: Sdl.GamepadConnected
  fullName: SharpSDL3.Sdl.GamepadConnected
- uid: SharpSDL3.Sdl.GamepadHasButton(System.IntPtr,SharpSDL3.Enums.GamepadButton)
  commentId: M:SharpSDL3.Sdl.GamepadHasButton(System.IntPtr,SharpSDL3.Enums.GamepadButton)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GamepadHasButton_System_IntPtr_SharpSDL3_Enums_GamepadButton_
  name: GamepadHasButton(nint, GamepadButton)
  nameWithType: Sdl.GamepadHasButton(nint, GamepadButton)
  fullName: SharpSDL3.Sdl.GamepadHasButton(nint, SharpSDL3.Enums.GamepadButton)
  nameWithType.vb: Sdl.GamepadHasButton(IntPtr, GamepadButton)
  fullName.vb: SharpSDL3.Sdl.GamepadHasButton(System.IntPtr, SharpSDL3.Enums.GamepadButton)
  name.vb: GamepadHasButton(IntPtr, GamepadButton)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GamepadHasButton(System.IntPtr,SharpSDL3.Enums.GamepadButton)
    name: GamepadHasButton
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GamepadHasButton_System_IntPtr_SharpSDL3_Enums_GamepadButton_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.GamepadButton
    name: GamepadButton
    href: SharpSDL3.Enums.GamepadButton.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GamepadHasButton(System.IntPtr,SharpSDL3.Enums.GamepadButton)
    name: GamepadHasButton
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GamepadHasButton_System_IntPtr_SharpSDL3_Enums_GamepadButton_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.GamepadButton
    name: GamepadButton
    href: SharpSDL3.Enums.GamepadButton.html
  - name: )
- uid: SharpSDL3.Sdl.GetGamepadAxis(System.IntPtr,SharpSDL3.Enums.GamepadAxis)
  commentId: M:SharpSDL3.Sdl.GetGamepadAxis(System.IntPtr,SharpSDL3.Enums.GamepadAxis)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadAxis_System_IntPtr_SharpSDL3_Enums_GamepadAxis_
  name: GetGamepadAxis(nint, GamepadAxis)
  nameWithType: Sdl.GetGamepadAxis(nint, GamepadAxis)
  fullName: SharpSDL3.Sdl.GetGamepadAxis(nint, SharpSDL3.Enums.GamepadAxis)
  nameWithType.vb: Sdl.GetGamepadAxis(IntPtr, GamepadAxis)
  fullName.vb: SharpSDL3.Sdl.GetGamepadAxis(System.IntPtr, SharpSDL3.Enums.GamepadAxis)
  name.vb: GetGamepadAxis(IntPtr, GamepadAxis)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetGamepadAxis(System.IntPtr,SharpSDL3.Enums.GamepadAxis)
    name: GetGamepadAxis
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadAxis_System_IntPtr_SharpSDL3_Enums_GamepadAxis_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.GamepadAxis
    name: GamepadAxis
    href: SharpSDL3.Enums.GamepadAxis.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetGamepadAxis(System.IntPtr,SharpSDL3.Enums.GamepadAxis)
    name: GetGamepadAxis
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadAxis_System_IntPtr_SharpSDL3_Enums_GamepadAxis_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.GamepadAxis
    name: GamepadAxis
    href: SharpSDL3.Enums.GamepadAxis.html
  - name: )
- uid: SharpSDL3.Sdl.GamepadHasAxis*
  commentId: Overload:SharpSDL3.Sdl.GamepadHasAxis
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GamepadHasAxis_System_IntPtr_SharpSDL3_Enums_GamepadAxis_
  name: GamepadHasAxis
  nameWithType: Sdl.GamepadHasAxis
  fullName: SharpSDL3.Sdl.GamepadHasAxis
- uid: SharpSDL3.Enums.GamepadAxis
  commentId: T:SharpSDL3.Enums.GamepadAxis
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.GamepadAxis.html
  name: GamepadAxis
  nameWithType: GamepadAxis
  fullName: SharpSDL3.Enums.GamepadAxis
- uid: SharpSDL3.Sdl.GamepadHasAxis(System.IntPtr,SharpSDL3.Enums.GamepadAxis)
  commentId: M:SharpSDL3.Sdl.GamepadHasAxis(System.IntPtr,SharpSDL3.Enums.GamepadAxis)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GamepadHasAxis_System_IntPtr_SharpSDL3_Enums_GamepadAxis_
  name: GamepadHasAxis(nint, GamepadAxis)
  nameWithType: Sdl.GamepadHasAxis(nint, GamepadAxis)
  fullName: SharpSDL3.Sdl.GamepadHasAxis(nint, SharpSDL3.Enums.GamepadAxis)
  nameWithType.vb: Sdl.GamepadHasAxis(IntPtr, GamepadAxis)
  fullName.vb: SharpSDL3.Sdl.GamepadHasAxis(System.IntPtr, SharpSDL3.Enums.GamepadAxis)
  name.vb: GamepadHasAxis(IntPtr, GamepadAxis)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GamepadHasAxis(System.IntPtr,SharpSDL3.Enums.GamepadAxis)
    name: GamepadHasAxis
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GamepadHasAxis_System_IntPtr_SharpSDL3_Enums_GamepadAxis_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.GamepadAxis
    name: GamepadAxis
    href: SharpSDL3.Enums.GamepadAxis.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GamepadHasAxis(System.IntPtr,SharpSDL3.Enums.GamepadAxis)
    name: GamepadHasAxis
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GamepadHasAxis_System_IntPtr_SharpSDL3_Enums_GamepadAxis_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.GamepadAxis
    name: GamepadAxis
    href: SharpSDL3.Enums.GamepadAxis.html
  - name: )
- uid: SharpSDL3.Sdl.GamepadHasButton*
  commentId: Overload:SharpSDL3.Sdl.GamepadHasButton
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GamepadHasButton_System_IntPtr_SharpSDL3_Enums_GamepadButton_
  name: GamepadHasButton
  nameWithType: Sdl.GamepadHasButton
  fullName: SharpSDL3.Sdl.GamepadHasButton
- uid: SharpSDL3.Enums.GamepadButton
  commentId: T:SharpSDL3.Enums.GamepadButton
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.GamepadButton.html
  name: GamepadButton
  nameWithType: GamepadButton
  fullName: SharpSDL3.Enums.GamepadButton
- uid: SharpSDL3.Sdl.GetGamepadSensorDataRate(System.IntPtr,SharpSDL3.Enums.SensorType)
  commentId: M:SharpSDL3.Sdl.GetGamepadSensorDataRate(System.IntPtr,SharpSDL3.Enums.SensorType)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadSensorDataRate_System_IntPtr_SharpSDL3_Enums_SensorType_
  name: GetGamepadSensorDataRate(nint, SensorType)
  nameWithType: Sdl.GetGamepadSensorDataRate(nint, SensorType)
  fullName: SharpSDL3.Sdl.GetGamepadSensorDataRate(nint, SharpSDL3.Enums.SensorType)
  nameWithType.vb: Sdl.GetGamepadSensorDataRate(IntPtr, SensorType)
  fullName.vb: SharpSDL3.Sdl.GetGamepadSensorDataRate(System.IntPtr, SharpSDL3.Enums.SensorType)
  name.vb: GetGamepadSensorDataRate(IntPtr, SensorType)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetGamepadSensorDataRate(System.IntPtr,SharpSDL3.Enums.SensorType)
    name: GetGamepadSensorDataRate
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadSensorDataRate_System_IntPtr_SharpSDL3_Enums_SensorType_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.SensorType
    name: SensorType
    href: SharpSDL3.Enums.SensorType.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetGamepadSensorDataRate(System.IntPtr,SharpSDL3.Enums.SensorType)
    name: GetGamepadSensorDataRate
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadSensorDataRate_System_IntPtr_SharpSDL3_Enums_SensorType_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.SensorType
    name: SensorType
    href: SharpSDL3.Enums.SensorType.html
  - name: )
- uid: SharpSDL3.Sdl.SetGamepadSensorEnabled(System.IntPtr,SharpSDL3.Enums.SensorType,System.Boolean)
  commentId: M:SharpSDL3.Sdl.SetGamepadSensorEnabled(System.IntPtr,SharpSDL3.Enums.SensorType,System.Boolean)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetGamepadSensorEnabled_System_IntPtr_SharpSDL3_Enums_SensorType_System_Boolean_
  name: SetGamepadSensorEnabled(nint, SensorType, bool)
  nameWithType: Sdl.SetGamepadSensorEnabled(nint, SensorType, bool)
  fullName: SharpSDL3.Sdl.SetGamepadSensorEnabled(nint, SharpSDL3.Enums.SensorType, bool)
  nameWithType.vb: Sdl.SetGamepadSensorEnabled(IntPtr, SensorType, Boolean)
  fullName.vb: SharpSDL3.Sdl.SetGamepadSensorEnabled(System.IntPtr, SharpSDL3.Enums.SensorType, Boolean)
  name.vb: SetGamepadSensorEnabled(IntPtr, SensorType, Boolean)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetGamepadSensorEnabled(System.IntPtr,SharpSDL3.Enums.SensorType,System.Boolean)
    name: SetGamepadSensorEnabled
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetGamepadSensorEnabled_System_IntPtr_SharpSDL3_Enums_SensorType_System_Boolean_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.SensorType
    name: SensorType
    href: SharpSDL3.Enums.SensorType.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetGamepadSensorEnabled(System.IntPtr,SharpSDL3.Enums.SensorType,System.Boolean)
    name: SetGamepadSensorEnabled
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetGamepadSensorEnabled_System_IntPtr_SharpSDL3_Enums_SensorType_System_Boolean_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.SensorType
    name: SensorType
    href: SharpSDL3.Enums.SensorType.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: SharpSDL3.Sdl.GamepadHasSensor*
  commentId: Overload:SharpSDL3.Sdl.GamepadHasSensor
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GamepadHasSensor_System_IntPtr_SharpSDL3_Enums_SensorType_
  name: GamepadHasSensor
  nameWithType: Sdl.GamepadHasSensor
  fullName: SharpSDL3.Sdl.GamepadHasSensor
- uid: SharpSDL3.Enums.SensorType
  commentId: T:SharpSDL3.Enums.SensorType
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.SensorType.html
  name: SensorType
  nameWithType: SensorType
  fullName: SharpSDL3.Enums.SensorType
- uid: SharpSDL3.Sdl.GamepadSensorEnabled*
  commentId: Overload:SharpSDL3.Sdl.GamepadSensorEnabled
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GamepadSensorEnabled_System_IntPtr_SharpSDL3_Enums_SensorType_
  name: GamepadSensorEnabled
  nameWithType: Sdl.GamepadSensorEnabled
  fullName: SharpSDL3.Sdl.GamepadSensorEnabled
- uid: SharpSDL3.Sdl.GetGamepadAppleSFSymbolsNameForButton(System.IntPtr,SharpSDL3.Enums.GamepadButton)
  commentId: M:SharpSDL3.Sdl.GetGamepadAppleSFSymbolsNameForButton(System.IntPtr,SharpSDL3.Enums.GamepadButton)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadAppleSFSymbolsNameForButton_System_IntPtr_SharpSDL3_Enums_GamepadButton_
  name: GetGamepadAppleSFSymbolsNameForButton(nint, GamepadButton)
  nameWithType: Sdl.GetGamepadAppleSFSymbolsNameForButton(nint, GamepadButton)
  fullName: SharpSDL3.Sdl.GetGamepadAppleSFSymbolsNameForButton(nint, SharpSDL3.Enums.GamepadButton)
  nameWithType.vb: Sdl.GetGamepadAppleSFSymbolsNameForButton(IntPtr, GamepadButton)
  fullName.vb: SharpSDL3.Sdl.GetGamepadAppleSFSymbolsNameForButton(System.IntPtr, SharpSDL3.Enums.GamepadButton)
  name.vb: GetGamepadAppleSFSymbolsNameForButton(IntPtr, GamepadButton)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetGamepadAppleSFSymbolsNameForButton(System.IntPtr,SharpSDL3.Enums.GamepadButton)
    name: GetGamepadAppleSFSymbolsNameForButton
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadAppleSFSymbolsNameForButton_System_IntPtr_SharpSDL3_Enums_GamepadButton_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.GamepadButton
    name: GamepadButton
    href: SharpSDL3.Enums.GamepadButton.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetGamepadAppleSFSymbolsNameForButton(System.IntPtr,SharpSDL3.Enums.GamepadButton)
    name: GetGamepadAppleSFSymbolsNameForButton
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadAppleSFSymbolsNameForButton_System_IntPtr_SharpSDL3_Enums_GamepadButton_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.GamepadButton
    name: GamepadButton
    href: SharpSDL3.Enums.GamepadButton.html
  - name: )
- uid: SharpSDL3.Sdl.GetGamepadAppleSFSymbolsNameForAxis*
  commentId: Overload:SharpSDL3.Sdl.GetGamepadAppleSFSymbolsNameForAxis
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadAppleSFSymbolsNameForAxis_System_IntPtr_SharpSDL3_Enums_GamepadAxis_
  name: GetGamepadAppleSFSymbolsNameForAxis
  nameWithType: Sdl.GetGamepadAppleSFSymbolsNameForAxis
  fullName: SharpSDL3.Sdl.GetGamepadAppleSFSymbolsNameForAxis
- uid: SharpSDL3.Sdl.GetGamepadAppleSFSymbolsNameForAxis(System.IntPtr,SharpSDL3.Enums.GamepadAxis)
  commentId: M:SharpSDL3.Sdl.GetGamepadAppleSFSymbolsNameForAxis(System.IntPtr,SharpSDL3.Enums.GamepadAxis)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadAppleSFSymbolsNameForAxis_System_IntPtr_SharpSDL3_Enums_GamepadAxis_
  name: GetGamepadAppleSFSymbolsNameForAxis(nint, GamepadAxis)
  nameWithType: Sdl.GetGamepadAppleSFSymbolsNameForAxis(nint, GamepadAxis)
  fullName: SharpSDL3.Sdl.GetGamepadAppleSFSymbolsNameForAxis(nint, SharpSDL3.Enums.GamepadAxis)
  nameWithType.vb: Sdl.GetGamepadAppleSFSymbolsNameForAxis(IntPtr, GamepadAxis)
  fullName.vb: SharpSDL3.Sdl.GetGamepadAppleSFSymbolsNameForAxis(System.IntPtr, SharpSDL3.Enums.GamepadAxis)
  name.vb: GetGamepadAppleSFSymbolsNameForAxis(IntPtr, GamepadAxis)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetGamepadAppleSFSymbolsNameForAxis(System.IntPtr,SharpSDL3.Enums.GamepadAxis)
    name: GetGamepadAppleSFSymbolsNameForAxis
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadAppleSFSymbolsNameForAxis_System_IntPtr_SharpSDL3_Enums_GamepadAxis_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.GamepadAxis
    name: GamepadAxis
    href: SharpSDL3.Enums.GamepadAxis.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetGamepadAppleSFSymbolsNameForAxis(System.IntPtr,SharpSDL3.Enums.GamepadAxis)
    name: GetGamepadAppleSFSymbolsNameForAxis
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadAppleSFSymbolsNameForAxis_System_IntPtr_SharpSDL3_Enums_GamepadAxis_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.GamepadAxis
    name: GamepadAxis
    href: SharpSDL3.Enums.GamepadAxis.html
  - name: )
- uid: SharpSDL3.Sdl.GetGamepadAppleSFSymbolsNameForButton*
  commentId: Overload:SharpSDL3.Sdl.GetGamepadAppleSFSymbolsNameForButton
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadAppleSFSymbolsNameForButton_System_IntPtr_SharpSDL3_Enums_GamepadButton_
  name: GetGamepadAppleSFSymbolsNameForButton
  nameWithType: Sdl.GetGamepadAppleSFSymbolsNameForButton
  fullName: SharpSDL3.Sdl.GetGamepadAppleSFSymbolsNameForButton
- uid: SharpSDL3.Sdl.GetGamepadButton(System.IntPtr,SharpSDL3.Enums.GamepadButton)
  commentId: M:SharpSDL3.Sdl.GetGamepadButton(System.IntPtr,SharpSDL3.Enums.GamepadButton)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadButton_System_IntPtr_SharpSDL3_Enums_GamepadButton_
  name: GetGamepadButton(nint, GamepadButton)
  nameWithType: Sdl.GetGamepadButton(nint, GamepadButton)
  fullName: SharpSDL3.Sdl.GetGamepadButton(nint, SharpSDL3.Enums.GamepadButton)
  nameWithType.vb: Sdl.GetGamepadButton(IntPtr, GamepadButton)
  fullName.vb: SharpSDL3.Sdl.GetGamepadButton(System.IntPtr, SharpSDL3.Enums.GamepadButton)
  name.vb: GetGamepadButton(IntPtr, GamepadButton)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetGamepadButton(System.IntPtr,SharpSDL3.Enums.GamepadButton)
    name: GetGamepadButton
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadButton_System_IntPtr_SharpSDL3_Enums_GamepadButton_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.GamepadButton
    name: GamepadButton
    href: SharpSDL3.Enums.GamepadButton.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetGamepadButton(System.IntPtr,SharpSDL3.Enums.GamepadButton)
    name: GetGamepadButton
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadButton_System_IntPtr_SharpSDL3_Enums_GamepadButton_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.GamepadButton
    name: GamepadButton
    href: SharpSDL3.Enums.GamepadButton.html
  - name: )
- uid: SharpSDL3.Sdl.GetGamepadAxis*
  commentId: Overload:SharpSDL3.Sdl.GetGamepadAxis
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadAxis_System_IntPtr_SharpSDL3_Enums_GamepadAxis_
  name: GetGamepadAxis
  nameWithType: Sdl.GetGamepadAxis
  fullName: SharpSDL3.Sdl.GetGamepadAxis
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int16
  name: short
  nameWithType: short
  fullName: short
  nameWithType.vb: Short
  fullName.vb: Short
  name.vb: Short
- uid: SharpSDL3.Sdl.GetGamepadStringForAxis(SharpSDL3.Enums.GamepadAxis)
  commentId: M:SharpSDL3.Sdl.GetGamepadStringForAxis(SharpSDL3.Enums.GamepadAxis)
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadStringForAxis_SharpSDL3_Enums_GamepadAxis_
  name: GetGamepadStringForAxis(GamepadAxis)
  nameWithType: Sdl.GetGamepadStringForAxis(GamepadAxis)
  fullName: SharpSDL3.Sdl.GetGamepadStringForAxis(SharpSDL3.Enums.GamepadAxis)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetGamepadStringForAxis(SharpSDL3.Enums.GamepadAxis)
    name: GetGamepadStringForAxis
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadStringForAxis_SharpSDL3_Enums_GamepadAxis_
  - name: (
  - uid: SharpSDL3.Enums.GamepadAxis
    name: GamepadAxis
    href: SharpSDL3.Enums.GamepadAxis.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetGamepadStringForAxis(SharpSDL3.Enums.GamepadAxis)
    name: GetGamepadStringForAxis
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadStringForAxis_SharpSDL3_Enums_GamepadAxis_
  - name: (
  - uid: SharpSDL3.Enums.GamepadAxis
    name: GamepadAxis
    href: SharpSDL3.Enums.GamepadAxis.html
  - name: )
- uid: SharpSDL3.Sdl.GetGamepadAxisFromString*
  commentId: Overload:SharpSDL3.Sdl.GetGamepadAxisFromString
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadAxisFromString_System_String_
  name: GetGamepadAxisFromString
  nameWithType: Sdl.GetGamepadAxisFromString
  fullName: SharpSDL3.Sdl.GetGamepadAxisFromString
- uid: SharpSDL3.Sdl.GetGamepadButton*
  commentId: Overload:SharpSDL3.Sdl.GetGamepadButton
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadButton_System_IntPtr_SharpSDL3_Enums_GamepadButton_
  name: GetGamepadButton
  nameWithType: Sdl.GetGamepadButton
  fullName: SharpSDL3.Sdl.GetGamepadButton
- uid: SharpSDL3.Sdl.GetGamepadStringForButton(SharpSDL3.Enums.GamepadButton)
  commentId: M:SharpSDL3.Sdl.GetGamepadStringForButton(SharpSDL3.Enums.GamepadButton)
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadStringForButton_SharpSDL3_Enums_GamepadButton_
  name: GetGamepadStringForButton(GamepadButton)
  nameWithType: Sdl.GetGamepadStringForButton(GamepadButton)
  fullName: SharpSDL3.Sdl.GetGamepadStringForButton(SharpSDL3.Enums.GamepadButton)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetGamepadStringForButton(SharpSDL3.Enums.GamepadButton)
    name: GetGamepadStringForButton
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadStringForButton_SharpSDL3_Enums_GamepadButton_
  - name: (
  - uid: SharpSDL3.Enums.GamepadButton
    name: GamepadButton
    href: SharpSDL3.Enums.GamepadButton.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetGamepadStringForButton(SharpSDL3.Enums.GamepadButton)
    name: GetGamepadStringForButton
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadStringForButton_SharpSDL3_Enums_GamepadButton_
  - name: (
  - uid: SharpSDL3.Enums.GamepadButton
    name: GamepadButton
    href: SharpSDL3.Enums.GamepadButton.html
  - name: )
- uid: SharpSDL3.Sdl.GetGamepadButtonFromString*
  commentId: Overload:SharpSDL3.Sdl.GetGamepadButtonFromString
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadButtonFromString_System_String_
  name: GetGamepadButtonFromString
  nameWithType: Sdl.GetGamepadButtonFromString
  fullName: SharpSDL3.Sdl.GetGamepadButtonFromString
- uid: SharpSDL3.Sdl.GetGamepadButtonLabelForType(SharpSDL3.Enums.GamepadType,SharpSDL3.Enums.GamepadButton)
  commentId: M:SharpSDL3.Sdl.GetGamepadButtonLabelForType(SharpSDL3.Enums.GamepadType,SharpSDL3.Enums.GamepadButton)
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadButtonLabelForType_SharpSDL3_Enums_GamepadType_SharpSDL3_Enums_GamepadButton_
  name: GetGamepadButtonLabelForType(GamepadType, GamepadButton)
  nameWithType: Sdl.GetGamepadButtonLabelForType(GamepadType, GamepadButton)
  fullName: SharpSDL3.Sdl.GetGamepadButtonLabelForType(SharpSDL3.Enums.GamepadType, SharpSDL3.Enums.GamepadButton)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetGamepadButtonLabelForType(SharpSDL3.Enums.GamepadType,SharpSDL3.Enums.GamepadButton)
    name: GetGamepadButtonLabelForType
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadButtonLabelForType_SharpSDL3_Enums_GamepadType_SharpSDL3_Enums_GamepadButton_
  - name: (
  - uid: SharpSDL3.Enums.GamepadType
    name: GamepadType
    href: SharpSDL3.Enums.GamepadType.html
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.GamepadButton
    name: GamepadButton
    href: SharpSDL3.Enums.GamepadButton.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetGamepadButtonLabelForType(SharpSDL3.Enums.GamepadType,SharpSDL3.Enums.GamepadButton)
    name: GetGamepadButtonLabelForType
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadButtonLabelForType_SharpSDL3_Enums_GamepadType_SharpSDL3_Enums_GamepadButton_
  - name: (
  - uid: SharpSDL3.Enums.GamepadType
    name: GamepadType
    href: SharpSDL3.Enums.GamepadType.html
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.GamepadButton
    name: GamepadButton
    href: SharpSDL3.Enums.GamepadButton.html
  - name: )
- uid: SharpSDL3.Sdl.GetGamepadButtonLabel*
  commentId: Overload:SharpSDL3.Sdl.GetGamepadButtonLabel
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadButtonLabel_System_IntPtr_SharpSDL3_Enums_GamepadButton_
  name: GetGamepadButtonLabel
  nameWithType: Sdl.GetGamepadButtonLabel
  fullName: SharpSDL3.Sdl.GetGamepadButtonLabel
- uid: SharpSDL3.Enums.GamepadButtonLabel
  commentId: T:SharpSDL3.Enums.GamepadButtonLabel
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.GamepadButtonLabel.html
  name: GamepadButtonLabel
  nameWithType: GamepadButtonLabel
  fullName: SharpSDL3.Enums.GamepadButtonLabel
- uid: SharpSDL3.Sdl.GetGamepadButtonLabel(System.IntPtr,SharpSDL3.Enums.GamepadButton)
  commentId: M:SharpSDL3.Sdl.GetGamepadButtonLabel(System.IntPtr,SharpSDL3.Enums.GamepadButton)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadButtonLabel_System_IntPtr_SharpSDL3_Enums_GamepadButton_
  name: GetGamepadButtonLabel(nint, GamepadButton)
  nameWithType: Sdl.GetGamepadButtonLabel(nint, GamepadButton)
  fullName: SharpSDL3.Sdl.GetGamepadButtonLabel(nint, SharpSDL3.Enums.GamepadButton)
  nameWithType.vb: Sdl.GetGamepadButtonLabel(IntPtr, GamepadButton)
  fullName.vb: SharpSDL3.Sdl.GetGamepadButtonLabel(System.IntPtr, SharpSDL3.Enums.GamepadButton)
  name.vb: GetGamepadButtonLabel(IntPtr, GamepadButton)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetGamepadButtonLabel(System.IntPtr,SharpSDL3.Enums.GamepadButton)
    name: GetGamepadButtonLabel
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadButtonLabel_System_IntPtr_SharpSDL3_Enums_GamepadButton_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.GamepadButton
    name: GamepadButton
    href: SharpSDL3.Enums.GamepadButton.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetGamepadButtonLabel(System.IntPtr,SharpSDL3.Enums.GamepadButton)
    name: GetGamepadButtonLabel
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadButtonLabel_System_IntPtr_SharpSDL3_Enums_GamepadButton_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.GamepadButton
    name: GamepadButton
    href: SharpSDL3.Enums.GamepadButton.html
  - name: )
- uid: SharpSDL3.Sdl.GetGamepadButtonLabelForType*
  commentId: Overload:SharpSDL3.Sdl.GetGamepadButtonLabelForType
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadButtonLabelForType_SharpSDL3_Enums_GamepadType_SharpSDL3_Enums_GamepadButton_
  name: GetGamepadButtonLabelForType
  nameWithType: Sdl.GetGamepadButtonLabelForType
  fullName: SharpSDL3.Sdl.GetGamepadButtonLabelForType
- uid: SharpSDL3.Enums.GamepadType
  commentId: T:SharpSDL3.Enums.GamepadType
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.GamepadType.html
  name: GamepadType
  nameWithType: GamepadType
  fullName: SharpSDL3.Enums.GamepadType
- uid: SharpSDL3.Sdl.GetGamepadConnectionState*
  commentId: Overload:SharpSDL3.Sdl.GetGamepadConnectionState
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadConnectionState_System_IntPtr_
  name: GetGamepadConnectionState
  nameWithType: Sdl.GetGamepadConnectionState
  fullName: SharpSDL3.Sdl.GetGamepadConnectionState
- uid: SharpSDL3.Enums.JoystickConnectionState
  commentId: T:SharpSDL3.Enums.JoystickConnectionState
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.JoystickConnectionState.html
  name: JoystickConnectionState
  nameWithType: JoystickConnectionState
  fullName: SharpSDL3.Enums.JoystickConnectionState
- uid: SharpSDL3.Sdl.GetGamepadFirmwareVersion*
  commentId: Overload:SharpSDL3.Sdl.GetGamepadFirmwareVersion
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadFirmwareVersion_System_IntPtr_
  name: GetGamepadFirmwareVersion
  nameWithType: Sdl.GetGamepadFirmwareVersion
  fullName: SharpSDL3.Sdl.GetGamepadFirmwareVersion
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint16
  name: ushort
  nameWithType: ushort
  fullName: ushort
  nameWithType.vb: UShort
  fullName.vb: UShort
  name.vb: UShort
- uid: SharpSDL3.Sdl.GetGamepadFromID*
  commentId: Overload:SharpSDL3.Sdl.GetGamepadFromID
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadFromID_System_UInt32_
  name: GetGamepadFromID
  nameWithType: Sdl.GetGamepadFromID
  fullName: SharpSDL3.Sdl.GetGamepadFromID
- uid: SharpSDL3.Sdl.GetGamepadPlayerIndex(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetGamepadPlayerIndex(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadPlayerIndex_System_IntPtr_
  name: GetGamepadPlayerIndex(nint)
  nameWithType: Sdl.GetGamepadPlayerIndex(nint)
  fullName: SharpSDL3.Sdl.GetGamepadPlayerIndex(nint)
  nameWithType.vb: Sdl.GetGamepadPlayerIndex(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetGamepadPlayerIndex(System.IntPtr)
  name.vb: GetGamepadPlayerIndex(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetGamepadPlayerIndex(System.IntPtr)
    name: GetGamepadPlayerIndex
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadPlayerIndex_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetGamepadPlayerIndex(System.IntPtr)
    name: GetGamepadPlayerIndex
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadPlayerIndex_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.SetGamepadPlayerIndex(System.IntPtr,System.Int32)
  commentId: M:SharpSDL3.Sdl.SetGamepadPlayerIndex(System.IntPtr,System.Int32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetGamepadPlayerIndex_System_IntPtr_System_Int32_
  name: SetGamepadPlayerIndex(nint, int)
  nameWithType: Sdl.SetGamepadPlayerIndex(nint, int)
  fullName: SharpSDL3.Sdl.SetGamepadPlayerIndex(nint, int)
  nameWithType.vb: Sdl.SetGamepadPlayerIndex(IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.SetGamepadPlayerIndex(System.IntPtr, Integer)
  name.vb: SetGamepadPlayerIndex(IntPtr, Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetGamepadPlayerIndex(System.IntPtr,System.Int32)
    name: SetGamepadPlayerIndex
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetGamepadPlayerIndex_System_IntPtr_System_Int32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetGamepadPlayerIndex(System.IntPtr,System.Int32)
    name: SetGamepadPlayerIndex
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetGamepadPlayerIndex_System_IntPtr_System_Int32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.GetGamepadFromPlayerIndex*
  commentId: Overload:SharpSDL3.Sdl.GetGamepadFromPlayerIndex
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadFromPlayerIndex_System_Int32_
  name: GetGamepadFromPlayerIndex
  nameWithType: Sdl.GetGamepadFromPlayerIndex
  fullName: SharpSDL3.Sdl.GetGamepadFromPlayerIndex
- uid: SharpSDL3.Sdl.GetGamepadGUIDForID*
  commentId: Overload:SharpSDL3.Sdl.GetGamepadGUIDForID
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadGUIDForID_System_UInt32_
  name: GetGamepadGUIDForID
  nameWithType: Sdl.GetGamepadGUIDForID
  fullName: SharpSDL3.Sdl.GetGamepadGUIDForID
- uid: SharpSDL3.Sdl.GetGamepadID*
  commentId: Overload:SharpSDL3.Sdl.GetGamepadID
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadID_System_IntPtr_
  name: GetGamepadID
  nameWithType: Sdl.GetGamepadID
  fullName: SharpSDL3.Sdl.GetGamepadID
- uid: SharpSDL3.Sdl.GetGamepadJoystick*
  commentId: Overload:SharpSDL3.Sdl.GetGamepadJoystick
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadJoystick_System_IntPtr_
  name: GetGamepadJoystick
  nameWithType: Sdl.GetGamepadJoystick
  fullName: SharpSDL3.Sdl.GetGamepadJoystick
- uid: SharpSDL3.Sdl.GetGamepadMappingForID(System.UInt32)
  commentId: M:SharpSDL3.Sdl.GetGamepadMappingForID(System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadMappingForID_System_UInt32_
  name: GetGamepadMappingForID(uint)
  nameWithType: Sdl.GetGamepadMappingForID(uint)
  fullName: SharpSDL3.Sdl.GetGamepadMappingForID(uint)
  nameWithType.vb: Sdl.GetGamepadMappingForID(UInteger)
  fullName.vb: SharpSDL3.Sdl.GetGamepadMappingForID(UInteger)
  name.vb: GetGamepadMappingForID(UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetGamepadMappingForID(System.UInt32)
    name: GetGamepadMappingForID
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadMappingForID_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetGamepadMappingForID(System.UInt32)
    name: GetGamepadMappingForID
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadMappingForID_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.SetGamepadMapping(System.UInt32,System.String)
  commentId: M:SharpSDL3.Sdl.SetGamepadMapping(System.UInt32,System.String)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetGamepadMapping_System_UInt32_System_String_
  name: SetGamepadMapping(uint, string)
  nameWithType: Sdl.SetGamepadMapping(uint, string)
  fullName: SharpSDL3.Sdl.SetGamepadMapping(uint, string)
  nameWithType.vb: Sdl.SetGamepadMapping(UInteger, String)
  fullName.vb: SharpSDL3.Sdl.SetGamepadMapping(UInteger, String)
  name.vb: SetGamepadMapping(UInteger, String)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetGamepadMapping(System.UInt32,System.String)
    name: SetGamepadMapping
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetGamepadMapping_System_UInt32_System_String_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetGamepadMapping(System.UInt32,System.String)
    name: SetGamepadMapping
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetGamepadMapping_System_UInt32_System_String_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SharpSDL3.Sdl.GetGamepadMapping*
  commentId: Overload:SharpSDL3.Sdl.GetGamepadMapping
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadMapping_System_IntPtr_
  name: GetGamepadMapping
  nameWithType: Sdl.GetGamepadMapping
  fullName: SharpSDL3.Sdl.GetGamepadMapping
- uid: SharpSDL3.Sdl.GetGamepadMappingForGUID*
  commentId: Overload:SharpSDL3.Sdl.GetGamepadMappingForGUID
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadMappingForGUID_SharpSDL3_Structs_SdlGuid_
  name: GetGamepadMappingForGUID
  nameWithType: Sdl.GetGamepadMappingForGUID
  fullName: SharpSDL3.Sdl.GetGamepadMappingForGUID
- uid: SharpSDL3.Sdl.GetGamepadMappingForID*
  commentId: Overload:SharpSDL3.Sdl.GetGamepadMappingForID
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadMappingForID_System_UInt32_
  name: GetGamepadMappingForID
  nameWithType: Sdl.GetGamepadMappingForID
  fullName: SharpSDL3.Sdl.GetGamepadMappingForID
- uid: SharpSDL3.Sdl.GetGamepadNameForID(System.UInt32)
  commentId: M:SharpSDL3.Sdl.GetGamepadNameForID(System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadNameForID_System_UInt32_
  name: GetGamepadNameForID(uint)
  nameWithType: Sdl.GetGamepadNameForID(uint)
  fullName: SharpSDL3.Sdl.GetGamepadNameForID(uint)
  nameWithType.vb: Sdl.GetGamepadNameForID(UInteger)
  fullName.vb: SharpSDL3.Sdl.GetGamepadNameForID(UInteger)
  name.vb: GetGamepadNameForID(UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetGamepadNameForID(System.UInt32)
    name: GetGamepadNameForID
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadNameForID_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetGamepadNameForID(System.UInt32)
    name: GetGamepadNameForID
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadNameForID_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.GetGamepadName*
  commentId: Overload:SharpSDL3.Sdl.GetGamepadName
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadName_System_IntPtr_
  name: GetGamepadName
  nameWithType: Sdl.GetGamepadName
  fullName: SharpSDL3.Sdl.GetGamepadName
- uid: SharpSDL3.Sdl.GetGamepadName(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetGamepadName(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadName_System_IntPtr_
  name: GetGamepadName(nint)
  nameWithType: Sdl.GetGamepadName(nint)
  fullName: SharpSDL3.Sdl.GetGamepadName(nint)
  nameWithType.vb: Sdl.GetGamepadName(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetGamepadName(System.IntPtr)
  name.vb: GetGamepadName(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetGamepadName(System.IntPtr)
    name: GetGamepadName
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadName_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetGamepadName(System.IntPtr)
    name: GetGamepadName
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadName_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GetGamepadNameForID*
  commentId: Overload:SharpSDL3.Sdl.GetGamepadNameForID
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadNameForID_System_UInt32_
  name: GetGamepadNameForID
  nameWithType: Sdl.GetGamepadNameForID
  fullName: SharpSDL3.Sdl.GetGamepadNameForID
- uid: SharpSDL3.Sdl.GetGamepadPathForID(System.UInt32)
  commentId: M:SharpSDL3.Sdl.GetGamepadPathForID(System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadPathForID_System_UInt32_
  name: GetGamepadPathForID(uint)
  nameWithType: Sdl.GetGamepadPathForID(uint)
  fullName: SharpSDL3.Sdl.GetGamepadPathForID(uint)
  nameWithType.vb: Sdl.GetGamepadPathForID(UInteger)
  fullName.vb: SharpSDL3.Sdl.GetGamepadPathForID(UInteger)
  name.vb: GetGamepadPathForID(UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetGamepadPathForID(System.UInt32)
    name: GetGamepadPathForID
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadPathForID_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetGamepadPathForID(System.UInt32)
    name: GetGamepadPathForID
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadPathForID_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.GetGamepadPath*
  commentId: Overload:SharpSDL3.Sdl.GetGamepadPath
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadPath_System_IntPtr_
  name: GetGamepadPath
  nameWithType: Sdl.GetGamepadPath
  fullName: SharpSDL3.Sdl.GetGamepadPath
- uid: SharpSDL3.Sdl.GetGamepadPath(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetGamepadPath(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadPath_System_IntPtr_
  name: GetGamepadPath(nint)
  nameWithType: Sdl.GetGamepadPath(nint)
  fullName: SharpSDL3.Sdl.GetGamepadPath(nint)
  nameWithType.vb: Sdl.GetGamepadPath(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetGamepadPath(System.IntPtr)
  name.vb: GetGamepadPath(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetGamepadPath(System.IntPtr)
    name: GetGamepadPath
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadPath_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetGamepadPath(System.IntPtr)
    name: GetGamepadPath
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadPath_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GetGamepadPathForID*
  commentId: Overload:SharpSDL3.Sdl.GetGamepadPathForID
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadPathForID_System_UInt32_
  name: GetGamepadPathForID
  nameWithType: Sdl.GetGamepadPathForID
  fullName: SharpSDL3.Sdl.GetGamepadPathForID
- uid: SharpSDL3.Sdl.GetGamepadPlayerIndex*
  commentId: Overload:SharpSDL3.Sdl.GetGamepadPlayerIndex
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadPlayerIndex_System_IntPtr_
  name: GetGamepadPlayerIndex
  nameWithType: Sdl.GetGamepadPlayerIndex
  fullName: SharpSDL3.Sdl.GetGamepadPlayerIndex
- uid: SharpSDL3.Sdl.GetGamepadPlayerIndexForID*
  commentId: Overload:SharpSDL3.Sdl.GetGamepadPlayerIndexForID
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadPlayerIndexForID_System_UInt32_
  name: GetGamepadPlayerIndexForID
  nameWithType: Sdl.GetGamepadPlayerIndexForID
  fullName: SharpSDL3.Sdl.GetGamepadPlayerIndexForID
- uid: SharpSDL3.Sdl.GetGamepadPowerInfo*
  commentId: Overload:SharpSDL3.Sdl.GetGamepadPowerInfo
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadPowerInfo_System_IntPtr_System_Int32__
  name: GetGamepadPowerInfo
  nameWithType: Sdl.GetGamepadPowerInfo
  fullName: SharpSDL3.Sdl.GetGamepadPowerInfo
- uid: SharpSDL3.Enums.PowerState
  commentId: T:SharpSDL3.Enums.PowerState
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.PowerState.html
  name: PowerState
  nameWithType: PowerState
  fullName: SharpSDL3.Enums.PowerState
- uid: SharpSDL3.Sdl.GetGamepadProductForID(System.UInt32)
  commentId: M:SharpSDL3.Sdl.GetGamepadProductForID(System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadProductForID_System_UInt32_
  name: GetGamepadProductForID(uint)
  nameWithType: Sdl.GetGamepadProductForID(uint)
  fullName: SharpSDL3.Sdl.GetGamepadProductForID(uint)
  nameWithType.vb: Sdl.GetGamepadProductForID(UInteger)
  fullName.vb: SharpSDL3.Sdl.GetGamepadProductForID(UInteger)
  name.vb: GetGamepadProductForID(UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetGamepadProductForID(System.UInt32)
    name: GetGamepadProductForID
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadProductForID_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetGamepadProductForID(System.UInt32)
    name: GetGamepadProductForID
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadProductForID_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.GetGamepadProduct*
  commentId: Overload:SharpSDL3.Sdl.GetGamepadProduct
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadProduct_System_IntPtr_
  name: GetGamepadProduct
  nameWithType: Sdl.GetGamepadProduct
  fullName: SharpSDL3.Sdl.GetGamepadProduct
- uid: SharpSDL3.Sdl.GetGamepadProduct(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetGamepadProduct(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadProduct_System_IntPtr_
  name: GetGamepadProduct(nint)
  nameWithType: Sdl.GetGamepadProduct(nint)
  fullName: SharpSDL3.Sdl.GetGamepadProduct(nint)
  nameWithType.vb: Sdl.GetGamepadProduct(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetGamepadProduct(System.IntPtr)
  name.vb: GetGamepadProduct(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetGamepadProduct(System.IntPtr)
    name: GetGamepadProduct
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadProduct_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetGamepadProduct(System.IntPtr)
    name: GetGamepadProduct
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadProduct_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GetGamepadProductForID*
  commentId: Overload:SharpSDL3.Sdl.GetGamepadProductForID
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadProductForID_System_UInt32_
  name: GetGamepadProductForID
  nameWithType: Sdl.GetGamepadProductForID
  fullName: SharpSDL3.Sdl.GetGamepadProductForID
- uid: SharpSDL3.Sdl.GetGamepadProductVersionForID(System.UInt32)
  commentId: M:SharpSDL3.Sdl.GetGamepadProductVersionForID(System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadProductVersionForID_System_UInt32_
  name: GetGamepadProductVersionForID(uint)
  nameWithType: Sdl.GetGamepadProductVersionForID(uint)
  fullName: SharpSDL3.Sdl.GetGamepadProductVersionForID(uint)
  nameWithType.vb: Sdl.GetGamepadProductVersionForID(UInteger)
  fullName.vb: SharpSDL3.Sdl.GetGamepadProductVersionForID(UInteger)
  name.vb: GetGamepadProductVersionForID(UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetGamepadProductVersionForID(System.UInt32)
    name: GetGamepadProductVersionForID
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadProductVersionForID_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetGamepadProductVersionForID(System.UInt32)
    name: GetGamepadProductVersionForID
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadProductVersionForID_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.GetGamepadProductVersion*
  commentId: Overload:SharpSDL3.Sdl.GetGamepadProductVersion
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadProductVersion_System_IntPtr_
  name: GetGamepadProductVersion
  nameWithType: Sdl.GetGamepadProductVersion
  fullName: SharpSDL3.Sdl.GetGamepadProductVersion
- uid: SharpSDL3.Sdl.GetGamepadProductVersion(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetGamepadProductVersion(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadProductVersion_System_IntPtr_
  name: GetGamepadProductVersion(nint)
  nameWithType: Sdl.GetGamepadProductVersion(nint)
  fullName: SharpSDL3.Sdl.GetGamepadProductVersion(nint)
  nameWithType.vb: Sdl.GetGamepadProductVersion(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetGamepadProductVersion(System.IntPtr)
  name.vb: GetGamepadProductVersion(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetGamepadProductVersion(System.IntPtr)
    name: GetGamepadProductVersion
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadProductVersion_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetGamepadProductVersion(System.IntPtr)
    name: GetGamepadProductVersion
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadProductVersion_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GetGamepadProductVersionForID*
  commentId: Overload:SharpSDL3.Sdl.GetGamepadProductVersionForID
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadProductVersionForID_System_UInt32_
  name: GetGamepadProductVersionForID
  nameWithType: Sdl.GetGamepadProductVersionForID
  fullName: SharpSDL3.Sdl.GetGamepadProductVersionForID
- uid: SharpSDL3.Sdl.GetGamepadProperties*
  commentId: Overload:SharpSDL3.Sdl.GetGamepadProperties
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadProperties_System_IntPtr_
  name: GetGamepadProperties
  nameWithType: Sdl.GetGamepadProperties
  fullName: SharpSDL3.Sdl.GetGamepadProperties
- uid: SharpSDL3.Sdl.GetGamepadSensorDataRate*
  commentId: Overload:SharpSDL3.Sdl.GetGamepadSensorDataRate
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadSensorDataRate_System_IntPtr_SharpSDL3_Enums_SensorType_
  name: GetGamepadSensorDataRate
  nameWithType: Sdl.GetGamepadSensorDataRate
  fullName: SharpSDL3.Sdl.GetGamepadSensorDataRate
- uid: SharpSDL3.Sdl.GetGamepadSerial*
  commentId: Overload:SharpSDL3.Sdl.GetGamepadSerial
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadSerial_System_IntPtr_
  name: GetGamepadSerial
  nameWithType: Sdl.GetGamepadSerial
  fullName: SharpSDL3.Sdl.GetGamepadSerial
- uid: SharpSDL3.Sdl.GetGamepadSteamHandle*
  commentId: Overload:SharpSDL3.Sdl.GetGamepadSteamHandle
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadSteamHandle_System_IntPtr_
  name: GetGamepadSteamHandle
  nameWithType: Sdl.GetGamepadSteamHandle
  fullName: SharpSDL3.Sdl.GetGamepadSteamHandle
- uid: SharpSDL3.Sdl.GetGamepadAxisFromString(System.String)
  commentId: M:SharpSDL3.Sdl.GetGamepadAxisFromString(System.String)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadAxisFromString_System_String_
  name: GetGamepadAxisFromString(string)
  nameWithType: Sdl.GetGamepadAxisFromString(string)
  fullName: SharpSDL3.Sdl.GetGamepadAxisFromString(string)
  nameWithType.vb: Sdl.GetGamepadAxisFromString(String)
  fullName.vb: SharpSDL3.Sdl.GetGamepadAxisFromString(String)
  name.vb: GetGamepadAxisFromString(String)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetGamepadAxisFromString(System.String)
    name: GetGamepadAxisFromString
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadAxisFromString_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetGamepadAxisFromString(System.String)
    name: GetGamepadAxisFromString
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadAxisFromString_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SharpSDL3.Sdl.GetGamepadStringForAxis*
  commentId: Overload:SharpSDL3.Sdl.GetGamepadStringForAxis
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadStringForAxis_SharpSDL3_Enums_GamepadAxis_
  name: GetGamepadStringForAxis
  nameWithType: Sdl.GetGamepadStringForAxis
  fullName: SharpSDL3.Sdl.GetGamepadStringForAxis
- uid: SharpSDL3.Sdl.GetGamepadButtonFromString(System.String)
  commentId: M:SharpSDL3.Sdl.GetGamepadButtonFromString(System.String)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadButtonFromString_System_String_
  name: GetGamepadButtonFromString(string)
  nameWithType: Sdl.GetGamepadButtonFromString(string)
  fullName: SharpSDL3.Sdl.GetGamepadButtonFromString(string)
  nameWithType.vb: Sdl.GetGamepadButtonFromString(String)
  fullName.vb: SharpSDL3.Sdl.GetGamepadButtonFromString(String)
  name.vb: GetGamepadButtonFromString(String)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetGamepadButtonFromString(System.String)
    name: GetGamepadButtonFromString
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadButtonFromString_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetGamepadButtonFromString(System.String)
    name: GetGamepadButtonFromString
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadButtonFromString_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SharpSDL3.Sdl.GetGamepadStringForButton*
  commentId: Overload:SharpSDL3.Sdl.GetGamepadStringForButton
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadStringForButton_SharpSDL3_Enums_GamepadButton_
  name: GetGamepadStringForButton
  nameWithType: Sdl.GetGamepadStringForButton
  fullName: SharpSDL3.Sdl.GetGamepadStringForButton
- uid: SharpSDL3.Sdl.GetGamepadTypeFromString(System.String)
  commentId: M:SharpSDL3.Sdl.GetGamepadTypeFromString(System.String)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadTypeFromString_System_String_
  name: GetGamepadTypeFromString(string)
  nameWithType: Sdl.GetGamepadTypeFromString(string)
  fullName: SharpSDL3.Sdl.GetGamepadTypeFromString(string)
  nameWithType.vb: Sdl.GetGamepadTypeFromString(String)
  fullName.vb: SharpSDL3.Sdl.GetGamepadTypeFromString(String)
  name.vb: GetGamepadTypeFromString(String)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetGamepadTypeFromString(System.String)
    name: GetGamepadTypeFromString
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadTypeFromString_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetGamepadTypeFromString(System.String)
    name: GetGamepadTypeFromString
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadTypeFromString_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SharpSDL3.Sdl.GetGamepadStringForType*
  commentId: Overload:SharpSDL3.Sdl.GetGamepadStringForType
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadStringForType_SharpSDL3_Enums_GamepadType_
  name: GetGamepadStringForType
  nameWithType: Sdl.GetGamepadStringForType
  fullName: SharpSDL3.Sdl.GetGamepadStringForType
- uid: SharpSDL3.Sdl.GetNumGamepadTouchpadFingers(System.IntPtr,System.Int32)
  commentId: M:SharpSDL3.Sdl.GetNumGamepadTouchpadFingers(System.IntPtr,System.Int32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetNumGamepadTouchpadFingers_System_IntPtr_System_Int32_
  name: GetNumGamepadTouchpadFingers(nint, int)
  nameWithType: Sdl.GetNumGamepadTouchpadFingers(nint, int)
  fullName: SharpSDL3.Sdl.GetNumGamepadTouchpadFingers(nint, int)
  nameWithType.vb: Sdl.GetNumGamepadTouchpadFingers(IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.GetNumGamepadTouchpadFingers(System.IntPtr, Integer)
  name.vb: GetNumGamepadTouchpadFingers(IntPtr, Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetNumGamepadTouchpadFingers(System.IntPtr,System.Int32)
    name: GetNumGamepadTouchpadFingers
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetNumGamepadTouchpadFingers_System_IntPtr_System_Int32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetNumGamepadTouchpadFingers(System.IntPtr,System.Int32)
    name: GetNumGamepadTouchpadFingers
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetNumGamepadTouchpadFingers_System_IntPtr_System_Int32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.GetGamepadTouchpadFinger*
  commentId: Overload:SharpSDL3.Sdl.GetGamepadTouchpadFinger
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadTouchpadFinger_System_IntPtr_System_Int32_System_Int32_System_Boolean__System_Single__System_Single__System_Single__
  name: GetGamepadTouchpadFinger
  nameWithType: Sdl.GetGamepadTouchpadFinger
  fullName: SharpSDL3.Sdl.GetGamepadTouchpadFinger
- uid: SharpSDL3.Sdl.GetGamepadTypeForID(System.UInt32)
  commentId: M:SharpSDL3.Sdl.GetGamepadTypeForID(System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadTypeForID_System_UInt32_
  name: GetGamepadTypeForID(uint)
  nameWithType: Sdl.GetGamepadTypeForID(uint)
  fullName: SharpSDL3.Sdl.GetGamepadTypeForID(uint)
  nameWithType.vb: Sdl.GetGamepadTypeForID(UInteger)
  fullName.vb: SharpSDL3.Sdl.GetGamepadTypeForID(UInteger)
  name.vb: GetGamepadTypeForID(UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetGamepadTypeForID(System.UInt32)
    name: GetGamepadTypeForID
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadTypeForID_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetGamepadTypeForID(System.UInt32)
    name: GetGamepadTypeForID
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadTypeForID_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.GetGamepadType*
  commentId: Overload:SharpSDL3.Sdl.GetGamepadType
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadType_System_IntPtr_
  name: GetGamepadType
  nameWithType: Sdl.GetGamepadType
  fullName: SharpSDL3.Sdl.GetGamepadType
- uid: SharpSDL3.Sdl.GetGamepadType(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetGamepadType(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadType_System_IntPtr_
  name: GetGamepadType(nint)
  nameWithType: Sdl.GetGamepadType(nint)
  fullName: SharpSDL3.Sdl.GetGamepadType(nint)
  nameWithType.vb: Sdl.GetGamepadType(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetGamepadType(System.IntPtr)
  name.vb: GetGamepadType(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetGamepadType(System.IntPtr)
    name: GetGamepadType
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadType_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetGamepadType(System.IntPtr)
    name: GetGamepadType
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadType_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GetRealGamepadTypeForID(System.UInt32)
  commentId: M:SharpSDL3.Sdl.GetRealGamepadTypeForID(System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRealGamepadTypeForID_System_UInt32_
  name: GetRealGamepadTypeForID(uint)
  nameWithType: Sdl.GetRealGamepadTypeForID(uint)
  fullName: SharpSDL3.Sdl.GetRealGamepadTypeForID(uint)
  nameWithType.vb: Sdl.GetRealGamepadTypeForID(UInteger)
  fullName.vb: SharpSDL3.Sdl.GetRealGamepadTypeForID(UInteger)
  name.vb: GetRealGamepadTypeForID(UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetRealGamepadTypeForID(System.UInt32)
    name: GetRealGamepadTypeForID
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRealGamepadTypeForID_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetRealGamepadTypeForID(System.UInt32)
    name: GetRealGamepadTypeForID
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRealGamepadTypeForID_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.GetGamepadTypeForID*
  commentId: Overload:SharpSDL3.Sdl.GetGamepadTypeForID
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadTypeForID_System_UInt32_
  name: GetGamepadTypeForID
  nameWithType: Sdl.GetGamepadTypeForID
  fullName: SharpSDL3.Sdl.GetGamepadTypeForID
- uid: SharpSDL3.Sdl.GetGamepadStringForType(SharpSDL3.Enums.GamepadType)
  commentId: M:SharpSDL3.Sdl.GetGamepadStringForType(SharpSDL3.Enums.GamepadType)
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadStringForType_SharpSDL3_Enums_GamepadType_
  name: GetGamepadStringForType(GamepadType)
  nameWithType: Sdl.GetGamepadStringForType(GamepadType)
  fullName: SharpSDL3.Sdl.GetGamepadStringForType(SharpSDL3.Enums.GamepadType)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetGamepadStringForType(SharpSDL3.Enums.GamepadType)
    name: GetGamepadStringForType
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadStringForType_SharpSDL3_Enums_GamepadType_
  - name: (
  - uid: SharpSDL3.Enums.GamepadType
    name: GamepadType
    href: SharpSDL3.Enums.GamepadType.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetGamepadStringForType(SharpSDL3.Enums.GamepadType)
    name: GetGamepadStringForType
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadStringForType_SharpSDL3_Enums_GamepadType_
  - name: (
  - uid: SharpSDL3.Enums.GamepadType
    name: GamepadType
    href: SharpSDL3.Enums.GamepadType.html
  - name: )
- uid: SharpSDL3.Sdl.GetGamepadTypeFromString*
  commentId: Overload:SharpSDL3.Sdl.GetGamepadTypeFromString
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadTypeFromString_System_String_
  name: GetGamepadTypeFromString
  nameWithType: Sdl.GetGamepadTypeFromString
  fullName: SharpSDL3.Sdl.GetGamepadTypeFromString
- uid: SharpSDL3.Sdl.GetGamepadVendorForID(System.UInt32)
  commentId: M:SharpSDL3.Sdl.GetGamepadVendorForID(System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadVendorForID_System_UInt32_
  name: GetGamepadVendorForID(uint)
  nameWithType: Sdl.GetGamepadVendorForID(uint)
  fullName: SharpSDL3.Sdl.GetGamepadVendorForID(uint)
  nameWithType.vb: Sdl.GetGamepadVendorForID(UInteger)
  fullName.vb: SharpSDL3.Sdl.GetGamepadVendorForID(UInteger)
  name.vb: GetGamepadVendorForID(UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetGamepadVendorForID(System.UInt32)
    name: GetGamepadVendorForID
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadVendorForID_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetGamepadVendorForID(System.UInt32)
    name: GetGamepadVendorForID
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadVendorForID_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.GetGamepadVendor*
  commentId: Overload:SharpSDL3.Sdl.GetGamepadVendor
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadVendor_System_IntPtr_
  name: GetGamepadVendor
  nameWithType: Sdl.GetGamepadVendor
  fullName: SharpSDL3.Sdl.GetGamepadVendor
- uid: SharpSDL3.Sdl.GetGamepadVendor(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetGamepadVendor(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadVendor_System_IntPtr_
  name: GetGamepadVendor(nint)
  nameWithType: Sdl.GetGamepadVendor(nint)
  fullName: SharpSDL3.Sdl.GetGamepadVendor(nint)
  nameWithType.vb: Sdl.GetGamepadVendor(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetGamepadVendor(System.IntPtr)
  name.vb: GetGamepadVendor(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetGamepadVendor(System.IntPtr)
    name: GetGamepadVendor
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadVendor_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetGamepadVendor(System.IntPtr)
    name: GetGamepadVendor
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadVendor_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GetGamepadVendorForID*
  commentId: Overload:SharpSDL3.Sdl.GetGamepadVendorForID
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadVendorForID_System_UInt32_
  name: GetGamepadVendorForID
  nameWithType: Sdl.GetGamepadVendorForID
  fullName: SharpSDL3.Sdl.GetGamepadVendorForID
- uid: SharpSDL3.Sdl.GetGamepadTouchpadFinger(System.IntPtr,System.Int32,System.Int32,System.Boolean@,System.Single@,System.Single@,System.Single@)
  commentId: M:SharpSDL3.Sdl.GetGamepadTouchpadFinger(System.IntPtr,System.Int32,System.Int32,System.Boolean@,System.Single@,System.Single@,System.Single@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadTouchpadFinger_System_IntPtr_System_Int32_System_Int32_System_Boolean__System_Single__System_Single__System_Single__
  name: GetGamepadTouchpadFinger(nint, int, int, out bool, out float, out float, out float)
  nameWithType: Sdl.GetGamepadTouchpadFinger(nint, int, int, out bool, out float, out float, out float)
  fullName: SharpSDL3.Sdl.GetGamepadTouchpadFinger(nint, int, int, out bool, out float, out float, out float)
  nameWithType.vb: Sdl.GetGamepadTouchpadFinger(IntPtr, Integer, Integer, Boolean, Single, Single, Single)
  fullName.vb: SharpSDL3.Sdl.GetGamepadTouchpadFinger(System.IntPtr, Integer, Integer, Boolean, Single, Single, Single)
  name.vb: GetGamepadTouchpadFinger(IntPtr, Integer, Integer, Boolean, Single, Single, Single)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetGamepadTouchpadFinger(System.IntPtr,System.Int32,System.Int32,System.Boolean@,System.Single@,System.Single@,System.Single@)
    name: GetGamepadTouchpadFinger
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadTouchpadFinger_System_IntPtr_System_Int32_System_Int32_System_Boolean__System_Single__System_Single__System_Single__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetGamepadTouchpadFinger(System.IntPtr,System.Int32,System.Int32,System.Boolean@,System.Single@,System.Single@,System.Single@)
    name: GetGamepadTouchpadFinger
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGamepadTouchpadFinger_System_IntPtr_System_Int32_System_Int32_System_Boolean__System_Single__System_Single__System_Single__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: SharpSDL3.Sdl.GetNumGamepadTouchpads(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetNumGamepadTouchpads(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetNumGamepadTouchpads_System_IntPtr_
  name: GetNumGamepadTouchpads(nint)
  nameWithType: Sdl.GetNumGamepadTouchpads(nint)
  fullName: SharpSDL3.Sdl.GetNumGamepadTouchpads(nint)
  nameWithType.vb: Sdl.GetNumGamepadTouchpads(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetNumGamepadTouchpads(System.IntPtr)
  name.vb: GetNumGamepadTouchpads(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetNumGamepadTouchpads(System.IntPtr)
    name: GetNumGamepadTouchpads
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetNumGamepadTouchpads_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetNumGamepadTouchpads(System.IntPtr)
    name: GetNumGamepadTouchpads
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetNumGamepadTouchpads_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GetNumGamepadTouchpadFingers*
  commentId: Overload:SharpSDL3.Sdl.GetNumGamepadTouchpadFingers
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetNumGamepadTouchpadFingers_System_IntPtr_System_Int32_
  name: GetNumGamepadTouchpadFingers
  nameWithType: Sdl.GetNumGamepadTouchpadFingers
  fullName: SharpSDL3.Sdl.GetNumGamepadTouchpadFingers
- uid: SharpSDL3.Sdl.GetNumGamepadTouchpads*
  commentId: Overload:SharpSDL3.Sdl.GetNumGamepadTouchpads
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetNumGamepadTouchpads_System_IntPtr_
  name: GetNumGamepadTouchpads
  nameWithType: Sdl.GetNumGamepadTouchpads
  fullName: SharpSDL3.Sdl.GetNumGamepadTouchpads
- uid: SharpSDL3.Sdl.GetRealGamepadType*
  commentId: Overload:SharpSDL3.Sdl.GetRealGamepadType
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRealGamepadType_System_IntPtr_
  name: GetRealGamepadType
  nameWithType: Sdl.GetRealGamepadType
  fullName: SharpSDL3.Sdl.GetRealGamepadType
- uid: SharpSDL3.Sdl.GetRealGamepadType(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetRealGamepadType(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRealGamepadType_System_IntPtr_
  name: GetRealGamepadType(nint)
  nameWithType: Sdl.GetRealGamepadType(nint)
  fullName: SharpSDL3.Sdl.GetRealGamepadType(nint)
  nameWithType.vb: Sdl.GetRealGamepadType(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetRealGamepadType(System.IntPtr)
  name.vb: GetRealGamepadType(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetRealGamepadType(System.IntPtr)
    name: GetRealGamepadType
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRealGamepadType_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetRealGamepadType(System.IntPtr)
    name: GetRealGamepadType
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRealGamepadType_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GetRealGamepadTypeForID*
  commentId: Overload:SharpSDL3.Sdl.GetRealGamepadTypeForID
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRealGamepadTypeForID_System_UInt32_
  name: GetRealGamepadTypeForID
  nameWithType: Sdl.GetRealGamepadTypeForID
  fullName: SharpSDL3.Sdl.GetRealGamepadTypeForID
- uid: SharpSDL3.Sdl.GetJoysticks(System.Int32@)
  commentId: M:SharpSDL3.Sdl.GetJoysticks(System.Int32@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoysticks_System_Int32__
  name: GetJoysticks(out int)
  nameWithType: Sdl.GetJoysticks(out int)
  fullName: SharpSDL3.Sdl.GetJoysticks(out int)
  nameWithType.vb: Sdl.GetJoysticks(Integer)
  fullName.vb: SharpSDL3.Sdl.GetJoysticks(Integer)
  name.vb: GetJoysticks(Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetJoysticks(System.Int32@)
    name: GetJoysticks
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoysticks_System_Int32__
  - name: (
  - name: out
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetJoysticks(System.Int32@)
    name: GetJoysticks
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoysticks_System_Int32__
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.IsGamepad*
  commentId: Overload:SharpSDL3.Sdl.IsGamepad
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_IsGamepad_System_UInt32_
  name: IsGamepad
  nameWithType: Sdl.IsGamepad
  fullName: SharpSDL3.Sdl.IsGamepad
- uid: SharpSDL3.Sdl.CloseGamepad(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.CloseGamepad(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CloseGamepad_System_IntPtr_
  name: CloseGamepad(nint)
  nameWithType: Sdl.CloseGamepad(nint)
  fullName: SharpSDL3.Sdl.CloseGamepad(nint)
  nameWithType.vb: Sdl.CloseGamepad(IntPtr)
  fullName.vb: SharpSDL3.Sdl.CloseGamepad(System.IntPtr)
  name.vb: CloseGamepad(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.CloseGamepad(System.IntPtr)
    name: CloseGamepad
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CloseGamepad_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.CloseGamepad(System.IntPtr)
    name: CloseGamepad
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CloseGamepad_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.IsGamepad(System.UInt32)
  commentId: M:SharpSDL3.Sdl.IsGamepad(System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_IsGamepad_System_UInt32_
  name: IsGamepad(uint)
  nameWithType: Sdl.IsGamepad(uint)
  fullName: SharpSDL3.Sdl.IsGamepad(uint)
  nameWithType.vb: Sdl.IsGamepad(UInteger)
  fullName.vb: SharpSDL3.Sdl.IsGamepad(UInteger)
  name.vb: IsGamepad(UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.IsGamepad(System.UInt32)
    name: IsGamepad
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_IsGamepad_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.IsGamepad(System.UInt32)
    name: IsGamepad
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_IsGamepad_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.OpenGamepad*
  commentId: Overload:SharpSDL3.Sdl.OpenGamepad
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_OpenGamepad_System_UInt32_
  name: OpenGamepad
  nameWithType: Sdl.OpenGamepad
  fullName: SharpSDL3.Sdl.OpenGamepad
- uid: SharpSDL3.Sdl.RumbleGamepad*
  commentId: Overload:SharpSDL3.Sdl.RumbleGamepad
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RumbleGamepad_System_IntPtr_System_UInt16_System_UInt16_System_UInt32_
  name: RumbleGamepad
  nameWithType: Sdl.RumbleGamepad
  fullName: SharpSDL3.Sdl.RumbleGamepad
- uid: SharpSDL3.Sdl.RumbleGamepad(System.IntPtr,System.UInt16,System.UInt16,System.UInt32)
  commentId: M:SharpSDL3.Sdl.RumbleGamepad(System.IntPtr,System.UInt16,System.UInt16,System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RumbleGamepad_System_IntPtr_System_UInt16_System_UInt16_System_UInt32_
  name: RumbleGamepad(nint, ushort, ushort, uint)
  nameWithType: Sdl.RumbleGamepad(nint, ushort, ushort, uint)
  fullName: SharpSDL3.Sdl.RumbleGamepad(nint, ushort, ushort, uint)
  nameWithType.vb: Sdl.RumbleGamepad(IntPtr, UShort, UShort, UInteger)
  fullName.vb: SharpSDL3.Sdl.RumbleGamepad(System.IntPtr, UShort, UShort, UInteger)
  name.vb: RumbleGamepad(IntPtr, UShort, UShort, UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.RumbleGamepad(System.IntPtr,System.UInt16,System.UInt16,System.UInt32)
    name: RumbleGamepad
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RumbleGamepad_System_IntPtr_System_UInt16_System_UInt16_System_UInt32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UInt16
    name: ushort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint16
  - name: ','
  - name: " "
  - uid: System.UInt16
    name: ushort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint16
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.RumbleGamepad(System.IntPtr,System.UInt16,System.UInt16,System.UInt32)
    name: RumbleGamepad
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RumbleGamepad_System_IntPtr_System_UInt16_System_UInt16_System_UInt32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UInt16
    name: UShort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint16
  - name: ','
  - name: " "
  - uid: System.UInt16
    name: UShort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint16
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.RumbleGamepadTriggers*
  commentId: Overload:SharpSDL3.Sdl.RumbleGamepadTriggers
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RumbleGamepadTriggers_System_IntPtr_System_UInt16_System_UInt16_System_UInt32_
  name: RumbleGamepadTriggers
  nameWithType: Sdl.RumbleGamepadTriggers
  fullName: SharpSDL3.Sdl.RumbleGamepadTriggers
- uid: SharpSDL3.Sdl.SendGamepadEffect*
  commentId: Overload:SharpSDL3.Sdl.SendGamepadEffect
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SendGamepadEffect_System_IntPtr_System_IntPtr_System_Int32_
  name: SendGamepadEffect
  nameWithType: Sdl.SendGamepadEffect
  fullName: SharpSDL3.Sdl.SendGamepadEffect
- uid: SharpSDL3.Sdl.SetGamepadEventsEnabled*
  commentId: Overload:SharpSDL3.Sdl.SetGamepadEventsEnabled
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetGamepadEventsEnabled_System_Boolean_
  name: SetGamepadEventsEnabled
  nameWithType: Sdl.SetGamepadEventsEnabled
  fullName: SharpSDL3.Sdl.SetGamepadEventsEnabled
- uid: SharpSDL3.Sdl.SetGamepadLED*
  commentId: Overload:SharpSDL3.Sdl.SetGamepadLED
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetGamepadLED_System_IntPtr_System_Byte_System_Byte_System_Byte_
  name: SetGamepadLED
  nameWithType: Sdl.SetGamepadLED
  fullName: SharpSDL3.Sdl.SetGamepadLED
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte
  nameWithType: byte
  fullName: byte
  nameWithType.vb: Byte
  fullName.vb: Byte
  name.vb: Byte
- uid: SharpSDL3.Sdl.SetGamepadMapping*
  commentId: Overload:SharpSDL3.Sdl.SetGamepadMapping
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetGamepadMapping_System_UInt32_System_String_
  name: SetGamepadMapping
  nameWithType: Sdl.SetGamepadMapping
  fullName: SharpSDL3.Sdl.SetGamepadMapping
- uid: SharpSDL3.Sdl.SetGamepadPlayerIndex*
  commentId: Overload:SharpSDL3.Sdl.SetGamepadPlayerIndex
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetGamepadPlayerIndex_System_IntPtr_System_Int32_
  name: SetGamepadPlayerIndex
  nameWithType: Sdl.SetGamepadPlayerIndex
  fullName: SharpSDL3.Sdl.SetGamepadPlayerIndex
- uid: SharpSDL3.Sdl.GamepadHasSensor(System.IntPtr,SharpSDL3.Enums.SensorType)
  commentId: M:SharpSDL3.Sdl.GamepadHasSensor(System.IntPtr,SharpSDL3.Enums.SensorType)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GamepadHasSensor_System_IntPtr_SharpSDL3_Enums_SensorType_
  name: GamepadHasSensor(nint, SensorType)
  nameWithType: Sdl.GamepadHasSensor(nint, SensorType)
  fullName: SharpSDL3.Sdl.GamepadHasSensor(nint, SharpSDL3.Enums.SensorType)
  nameWithType.vb: Sdl.GamepadHasSensor(IntPtr, SensorType)
  fullName.vb: SharpSDL3.Sdl.GamepadHasSensor(System.IntPtr, SharpSDL3.Enums.SensorType)
  name.vb: GamepadHasSensor(IntPtr, SensorType)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GamepadHasSensor(System.IntPtr,SharpSDL3.Enums.SensorType)
    name: GamepadHasSensor
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GamepadHasSensor_System_IntPtr_SharpSDL3_Enums_SensorType_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.SensorType
    name: SensorType
    href: SharpSDL3.Enums.SensorType.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GamepadHasSensor(System.IntPtr,SharpSDL3.Enums.SensorType)
    name: GamepadHasSensor
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GamepadHasSensor_System_IntPtr_SharpSDL3_Enums_SensorType_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.SensorType
    name: SensorType
    href: SharpSDL3.Enums.SensorType.html
  - name: )
- uid: SharpSDL3.Sdl.GamepadSensorEnabled(System.IntPtr,SharpSDL3.Enums.SensorType)
  commentId: M:SharpSDL3.Sdl.GamepadSensorEnabled(System.IntPtr,SharpSDL3.Enums.SensorType)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GamepadSensorEnabled_System_IntPtr_SharpSDL3_Enums_SensorType_
  name: GamepadSensorEnabled(nint, SensorType)
  nameWithType: Sdl.GamepadSensorEnabled(nint, SensorType)
  fullName: SharpSDL3.Sdl.GamepadSensorEnabled(nint, SharpSDL3.Enums.SensorType)
  nameWithType.vb: Sdl.GamepadSensorEnabled(IntPtr, SensorType)
  fullName.vb: SharpSDL3.Sdl.GamepadSensorEnabled(System.IntPtr, SharpSDL3.Enums.SensorType)
  name.vb: GamepadSensorEnabled(IntPtr, SensorType)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GamepadSensorEnabled(System.IntPtr,SharpSDL3.Enums.SensorType)
    name: GamepadSensorEnabled
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GamepadSensorEnabled_System_IntPtr_SharpSDL3_Enums_SensorType_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.SensorType
    name: SensorType
    href: SharpSDL3.Enums.SensorType.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GamepadSensorEnabled(System.IntPtr,SharpSDL3.Enums.SensorType)
    name: GamepadSensorEnabled
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GamepadSensorEnabled_System_IntPtr_SharpSDL3_Enums_SensorType_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.SensorType
    name: SensorType
    href: SharpSDL3.Enums.SensorType.html
  - name: )
- uid: SharpSDL3.Sdl.SetGamepadSensorEnabled*
  commentId: Overload:SharpSDL3.Sdl.SetGamepadSensorEnabled
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetGamepadSensorEnabled_System_IntPtr_SharpSDL3_Enums_SensorType_System_Boolean_
  name: SetGamepadSensorEnabled
  nameWithType: Sdl.SetGamepadSensorEnabled
  fullName: SharpSDL3.Sdl.SetGamepadSensorEnabled
- uid: SharpSDL3.Sdl.SubmitGPUCommandBuffer(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.SubmitGPUCommandBuffer(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SubmitGPUCommandBuffer_System_IntPtr_
  name: SubmitGPUCommandBuffer(nint)
  nameWithType: Sdl.SubmitGPUCommandBuffer(nint)
  fullName: SharpSDL3.Sdl.SubmitGPUCommandBuffer(nint)
  nameWithType.vb: Sdl.SubmitGPUCommandBuffer(IntPtr)
  fullName.vb: SharpSDL3.Sdl.SubmitGPUCommandBuffer(System.IntPtr)
  name.vb: SubmitGPUCommandBuffer(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SubmitGPUCommandBuffer(System.IntPtr)
    name: SubmitGPUCommandBuffer
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SubmitGPUCommandBuffer_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SubmitGPUCommandBuffer(System.IntPtr)
    name: SubmitGPUCommandBuffer
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SubmitGPUCommandBuffer_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.SubmitGPUCommandBufferAndAcquireFence(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.SubmitGPUCommandBufferAndAcquireFence(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SubmitGPUCommandBufferAndAcquireFence_System_IntPtr_
  name: SubmitGPUCommandBufferAndAcquireFence(nint)
  nameWithType: Sdl.SubmitGPUCommandBufferAndAcquireFence(nint)
  fullName: SharpSDL3.Sdl.SubmitGPUCommandBufferAndAcquireFence(nint)
  nameWithType.vb: Sdl.SubmitGPUCommandBufferAndAcquireFence(IntPtr)
  fullName.vb: SharpSDL3.Sdl.SubmitGPUCommandBufferAndAcquireFence(System.IntPtr)
  name.vb: SubmitGPUCommandBufferAndAcquireFence(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SubmitGPUCommandBufferAndAcquireFence(System.IntPtr)
    name: SubmitGPUCommandBufferAndAcquireFence
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SubmitGPUCommandBufferAndAcquireFence_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SubmitGPUCommandBufferAndAcquireFence(System.IntPtr)
    name: SubmitGPUCommandBufferAndAcquireFence
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SubmitGPUCommandBufferAndAcquireFence_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.AcquireGPUCommandBuffer*
  commentId: Overload:SharpSDL3.Sdl.AcquireGPUCommandBuffer
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_AcquireGPUCommandBuffer_System_IntPtr_
  name: AcquireGPUCommandBuffer
  nameWithType: Sdl.AcquireGPUCommandBuffer
  fullName: SharpSDL3.Sdl.AcquireGPUCommandBuffer
- uid: SharpSDL3.Sdl.ClaimWindowForGPUDevice(System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.ClaimWindowForGPUDevice(System.IntPtr,System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ClaimWindowForGPUDevice_System_IntPtr_System_IntPtr_
  name: ClaimWindowForGPUDevice(nint, nint)
  nameWithType: Sdl.ClaimWindowForGPUDevice(nint, nint)
  fullName: SharpSDL3.Sdl.ClaimWindowForGPUDevice(nint, nint)
  nameWithType.vb: Sdl.ClaimWindowForGPUDevice(IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.ClaimWindowForGPUDevice(System.IntPtr, System.IntPtr)
  name.vb: ClaimWindowForGPUDevice(IntPtr, IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.ClaimWindowForGPUDevice(System.IntPtr,System.IntPtr)
    name: ClaimWindowForGPUDevice
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ClaimWindowForGPUDevice_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.ClaimWindowForGPUDevice(System.IntPtr,System.IntPtr)
    name: ClaimWindowForGPUDevice
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ClaimWindowForGPUDevice_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.CancelGPUCommandBuffer(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.CancelGPUCommandBuffer(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CancelGPUCommandBuffer_System_IntPtr_
  name: CancelGPUCommandBuffer(nint)
  nameWithType: Sdl.CancelGPUCommandBuffer(nint)
  fullName: SharpSDL3.Sdl.CancelGPUCommandBuffer(nint)
  nameWithType.vb: Sdl.CancelGPUCommandBuffer(IntPtr)
  fullName.vb: SharpSDL3.Sdl.CancelGPUCommandBuffer(System.IntPtr)
  name.vb: CancelGPUCommandBuffer(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.CancelGPUCommandBuffer(System.IntPtr)
    name: CancelGPUCommandBuffer
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CancelGPUCommandBuffer_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.CancelGPUCommandBuffer(System.IntPtr)
    name: CancelGPUCommandBuffer
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CancelGPUCommandBuffer_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GetWindowSizeInPixels(System.IntPtr,System.Int32@,System.Int32@)
  commentId: M:SharpSDL3.Sdl.GetWindowSizeInPixels(System.IntPtr,System.Int32@,System.Int32@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowSizeInPixels_System_IntPtr_System_Int32__System_Int32__
  name: GetWindowSizeInPixels(nint, out int, out int)
  nameWithType: Sdl.GetWindowSizeInPixels(nint, out int, out int)
  fullName: SharpSDL3.Sdl.GetWindowSizeInPixels(nint, out int, out int)
  nameWithType.vb: Sdl.GetWindowSizeInPixels(IntPtr, Integer, Integer)
  fullName.vb: SharpSDL3.Sdl.GetWindowSizeInPixels(System.IntPtr, Integer, Integer)
  name.vb: GetWindowSizeInPixels(IntPtr, Integer, Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetWindowSizeInPixels(System.IntPtr,System.Int32@,System.Int32@)
    name: GetWindowSizeInPixels
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowSizeInPixels_System_IntPtr_System_Int32__System_Int32__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetWindowSizeInPixels(System.IntPtr,System.Int32@,System.Int32@)
    name: GetWindowSizeInPixels
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowSizeInPixels_System_IntPtr_System_Int32__System_Int32__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.WaitForGPUSwapchain(System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.WaitForGPUSwapchain(System.IntPtr,System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WaitForGPUSwapchain_System_IntPtr_System_IntPtr_
  name: WaitForGPUSwapchain(nint, nint)
  nameWithType: Sdl.WaitForGPUSwapchain(nint, nint)
  fullName: SharpSDL3.Sdl.WaitForGPUSwapchain(nint, nint)
  nameWithType.vb: Sdl.WaitForGPUSwapchain(IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.WaitForGPUSwapchain(System.IntPtr, System.IntPtr)
  name.vb: WaitForGPUSwapchain(IntPtr, IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.WaitForGPUSwapchain(System.IntPtr,System.IntPtr)
    name: WaitForGPUSwapchain
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WaitForGPUSwapchain_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.WaitForGPUSwapchain(System.IntPtr,System.IntPtr)
    name: WaitForGPUSwapchain
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WaitForGPUSwapchain_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.WaitAndAcquireGPUSwapchainTexture(System.IntPtr,System.IntPtr,System.IntPtr@,System.UInt32@,System.UInt32@)
  commentId: M:SharpSDL3.Sdl.WaitAndAcquireGPUSwapchainTexture(System.IntPtr,System.IntPtr,System.IntPtr@,System.UInt32@,System.UInt32@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WaitAndAcquireGPUSwapchainTexture_System_IntPtr_System_IntPtr_System_IntPtr__System_UInt32__System_UInt32__
  name: WaitAndAcquireGPUSwapchainTexture(nint, nint, out nint, out uint, out uint)
  nameWithType: Sdl.WaitAndAcquireGPUSwapchainTexture(nint, nint, out nint, out uint, out uint)
  fullName: SharpSDL3.Sdl.WaitAndAcquireGPUSwapchainTexture(nint, nint, out nint, out uint, out uint)
  nameWithType.vb: Sdl.WaitAndAcquireGPUSwapchainTexture(IntPtr, IntPtr, IntPtr, UInteger, UInteger)
  fullName.vb: SharpSDL3.Sdl.WaitAndAcquireGPUSwapchainTexture(System.IntPtr, System.IntPtr, System.IntPtr, UInteger, UInteger)
  name.vb: WaitAndAcquireGPUSwapchainTexture(IntPtr, IntPtr, IntPtr, UInteger, UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.WaitAndAcquireGPUSwapchainTexture(System.IntPtr,System.IntPtr,System.IntPtr@,System.UInt32@,System.UInt32@)
    name: WaitAndAcquireGPUSwapchainTexture
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WaitAndAcquireGPUSwapchainTexture_System_IntPtr_System_IntPtr_System_IntPtr__System_UInt32__System_UInt32__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.WaitAndAcquireGPUSwapchainTexture(System.IntPtr,System.IntPtr,System.IntPtr@,System.UInt32@,System.UInt32@)
    name: WaitAndAcquireGPUSwapchainTexture
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WaitAndAcquireGPUSwapchainTexture_System_IntPtr_System_IntPtr_System_IntPtr__System_UInt32__System_UInt32__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.SetGPUAllowedFramesInFlight(System.IntPtr,System.UInt32)
  commentId: M:SharpSDL3.Sdl.SetGPUAllowedFramesInFlight(System.IntPtr,System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetGPUAllowedFramesInFlight_System_IntPtr_System_UInt32_
  name: SetGPUAllowedFramesInFlight(nint, uint)
  nameWithType: Sdl.SetGPUAllowedFramesInFlight(nint, uint)
  fullName: SharpSDL3.Sdl.SetGPUAllowedFramesInFlight(nint, uint)
  nameWithType.vb: Sdl.SetGPUAllowedFramesInFlight(IntPtr, UInteger)
  fullName.vb: SharpSDL3.Sdl.SetGPUAllowedFramesInFlight(System.IntPtr, UInteger)
  name.vb: SetGPUAllowedFramesInFlight(IntPtr, UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetGPUAllowedFramesInFlight(System.IntPtr,System.UInt32)
    name: SetGPUAllowedFramesInFlight
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetGPUAllowedFramesInFlight_System_IntPtr_System_UInt32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetGPUAllowedFramesInFlight(System.IntPtr,System.UInt32)
    name: SetGPUAllowedFramesInFlight
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetGPUAllowedFramesInFlight_System_IntPtr_System_UInt32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.AcquireGPUSwapchainTexture*
  commentId: Overload:SharpSDL3.Sdl.AcquireGPUSwapchainTexture
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_AcquireGPUSwapchainTexture_System_IntPtr_System_IntPtr_System_IntPtr__System_UInt32__System_UInt32__
  name: AcquireGPUSwapchainTexture
  nameWithType: Sdl.AcquireGPUSwapchainTexture
  fullName: SharpSDL3.Sdl.AcquireGPUSwapchainTexture
- uid: SharpSDL3.Sdl.EndGPUComputePass(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.EndGPUComputePass(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_EndGPUComputePass_System_IntPtr_
  name: EndGPUComputePass(nint)
  nameWithType: Sdl.EndGPUComputePass(nint)
  fullName: SharpSDL3.Sdl.EndGPUComputePass(nint)
  nameWithType.vb: Sdl.EndGPUComputePass(IntPtr)
  fullName.vb: SharpSDL3.Sdl.EndGPUComputePass(System.IntPtr)
  name.vb: EndGPUComputePass(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.EndGPUComputePass(System.IntPtr)
    name: EndGPUComputePass
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_EndGPUComputePass_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.EndGPUComputePass(System.IntPtr)
    name: EndGPUComputePass
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_EndGPUComputePass_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.BeginGPUComputePass*
  commentId: Overload:SharpSDL3.Sdl.BeginGPUComputePass
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BeginGPUComputePass_System_IntPtr_System_Span_SharpSDL3_Structs_GpuStorageTextureReadWriteBinding__System_UInt32_System_Span_SharpSDL3_Structs_GpuStorageBufferReadWriteBinding__System_UInt32_
  name: BeginGPUComputePass
  nameWithType: Sdl.BeginGPUComputePass
  fullName: SharpSDL3.Sdl.BeginGPUComputePass
- uid: System.Span{SharpSDL3.Structs.GpuStorageTextureReadWriteBinding}
  commentId: T:System.Span{SharpSDL3.Structs.GpuStorageTextureReadWriteBinding}
  parent: System
  definition: System.Span`1
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<GpuStorageTextureReadWriteBinding>
  nameWithType: Span<GpuStorageTextureReadWriteBinding>
  fullName: System.Span<SharpSDL3.Structs.GpuStorageTextureReadWriteBinding>
  nameWithType.vb: Span(Of GpuStorageTextureReadWriteBinding)
  fullName.vb: System.Span(Of SharpSDL3.Structs.GpuStorageTextureReadWriteBinding)
  name.vb: Span(Of GpuStorageTextureReadWriteBinding)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: SharpSDL3.Structs.GpuStorageTextureReadWriteBinding
    name: GpuStorageTextureReadWriteBinding
    href: SharpSDL3.Structs.GpuStorageTextureReadWriteBinding.html
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: SharpSDL3.Structs.GpuStorageTextureReadWriteBinding
    name: GpuStorageTextureReadWriteBinding
    href: SharpSDL3.Structs.GpuStorageTextureReadWriteBinding.html
  - name: )
- uid: System.Span{SharpSDL3.Structs.GpuStorageBufferReadWriteBinding}
  commentId: T:System.Span{SharpSDL3.Structs.GpuStorageBufferReadWriteBinding}
  parent: System
  definition: System.Span`1
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<GpuStorageBufferReadWriteBinding>
  nameWithType: Span<GpuStorageBufferReadWriteBinding>
  fullName: System.Span<SharpSDL3.Structs.GpuStorageBufferReadWriteBinding>
  nameWithType.vb: Span(Of GpuStorageBufferReadWriteBinding)
  fullName.vb: System.Span(Of SharpSDL3.Structs.GpuStorageBufferReadWriteBinding)
  name.vb: Span(Of GpuStorageBufferReadWriteBinding)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: SharpSDL3.Structs.GpuStorageBufferReadWriteBinding
    name: GpuStorageBufferReadWriteBinding
    href: SharpSDL3.Structs.GpuStorageBufferReadWriteBinding.html
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: SharpSDL3.Structs.GpuStorageBufferReadWriteBinding
    name: GpuStorageBufferReadWriteBinding
    href: SharpSDL3.Structs.GpuStorageBufferReadWriteBinding.html
  - name: )
- uid: SharpSDL3.Sdl.BeginGPUCopyPass*
  commentId: Overload:SharpSDL3.Sdl.BeginGPUCopyPass
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BeginGPUCopyPass_System_IntPtr_
  name: BeginGPUCopyPass
  nameWithType: Sdl.BeginGPUCopyPass
  fullName: SharpSDL3.Sdl.BeginGPUCopyPass
- uid: SharpSDL3.Sdl.EndGPURenderPass(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.EndGPURenderPass(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_EndGPURenderPass_System_IntPtr_
  name: EndGPURenderPass(nint)
  nameWithType: Sdl.EndGPURenderPass(nint)
  fullName: SharpSDL3.Sdl.EndGPURenderPass(nint)
  nameWithType.vb: Sdl.EndGPURenderPass(IntPtr)
  fullName.vb: SharpSDL3.Sdl.EndGPURenderPass(System.IntPtr)
  name.vb: EndGPURenderPass(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.EndGPURenderPass(System.IntPtr)
    name: EndGPURenderPass
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_EndGPURenderPass_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.EndGPURenderPass(System.IntPtr)
    name: EndGPURenderPass
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_EndGPURenderPass_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.BeginGPURenderPass*
  commentId: Overload:SharpSDL3.Sdl.BeginGPURenderPass
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BeginGPURenderPass_System_IntPtr_System_Span_SharpSDL3_Structs_GpuColorTargetInfo__System_UInt32_SharpSDL3_Structs_GpuDepthStencilTargetInfo__
  name: BeginGPURenderPass
  nameWithType: Sdl.BeginGPURenderPass
  fullName: SharpSDL3.Sdl.BeginGPURenderPass
- uid: System.Span{SharpSDL3.Structs.GpuColorTargetInfo}
  commentId: T:System.Span{SharpSDL3.Structs.GpuColorTargetInfo}
  parent: System
  definition: System.Span`1
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<GpuColorTargetInfo>
  nameWithType: Span<GpuColorTargetInfo>
  fullName: System.Span<SharpSDL3.Structs.GpuColorTargetInfo>
  nameWithType.vb: Span(Of GpuColorTargetInfo)
  fullName.vb: System.Span(Of SharpSDL3.Structs.GpuColorTargetInfo)
  name.vb: Span(Of GpuColorTargetInfo)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: SharpSDL3.Structs.GpuColorTargetInfo
    name: GpuColorTargetInfo
    href: SharpSDL3.Structs.GpuColorTargetInfo.html
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: SharpSDL3.Structs.GpuColorTargetInfo
    name: GpuColorTargetInfo
    href: SharpSDL3.Structs.GpuColorTargetInfo.html
  - name: )
- uid: SharpSDL3.Structs.GpuDepthStencilTargetInfo
  commentId: T:SharpSDL3.Structs.GpuDepthStencilTargetInfo
  parent: SharpSDL3.Structs
  href: SharpSDL3.Structs.GpuDepthStencilTargetInfo.html
  name: GpuDepthStencilTargetInfo
  nameWithType: GpuDepthStencilTargetInfo
  fullName: SharpSDL3.Structs.GpuDepthStencilTargetInfo
- uid: SharpSDL3.Sdl.BindGPUComputePipeline*
  commentId: Overload:SharpSDL3.Sdl.BindGPUComputePipeline
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BindGPUComputePipeline_System_IntPtr_System_IntPtr_
  name: BindGPUComputePipeline
  nameWithType: Sdl.BindGPUComputePipeline
  fullName: SharpSDL3.Sdl.BindGPUComputePipeline
- uid: SharpSDL3.Sdl.CreateGPUShader(System.IntPtr,SharpSDL3.Structs.GpuShaderCreateInfo@)
  commentId: M:SharpSDL3.Sdl.CreateGPUShader(System.IntPtr,SharpSDL3.Structs.GpuShaderCreateInfo@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateGPUShader_System_IntPtr_SharpSDL3_Structs_GpuShaderCreateInfo__
  name: CreateGPUShader(nint, in GpuShaderCreateInfo)
  nameWithType: Sdl.CreateGPUShader(nint, in GpuShaderCreateInfo)
  fullName: SharpSDL3.Sdl.CreateGPUShader(nint, in SharpSDL3.Structs.GpuShaderCreateInfo)
  nameWithType.vb: Sdl.CreateGPUShader(IntPtr, GpuShaderCreateInfo)
  fullName.vb: SharpSDL3.Sdl.CreateGPUShader(System.IntPtr, SharpSDL3.Structs.GpuShaderCreateInfo)
  name.vb: CreateGPUShader(IntPtr, GpuShaderCreateInfo)
  spec.csharp:
  - uid: SharpSDL3.Sdl.CreateGPUShader(System.IntPtr,SharpSDL3.Structs.GpuShaderCreateInfo@)
    name: CreateGPUShader
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateGPUShader_System_IntPtr_SharpSDL3_Structs_GpuShaderCreateInfo__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: in
  - name: " "
  - uid: SharpSDL3.Structs.GpuShaderCreateInfo
    name: GpuShaderCreateInfo
    href: SharpSDL3.Structs.GpuShaderCreateInfo.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.CreateGPUShader(System.IntPtr,SharpSDL3.Structs.GpuShaderCreateInfo@)
    name: CreateGPUShader
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateGPUShader_System_IntPtr_SharpSDL3_Structs_GpuShaderCreateInfo__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.GpuShaderCreateInfo
    name: GpuShaderCreateInfo
    href: SharpSDL3.Structs.GpuShaderCreateInfo.html
  - name: )
- uid: SharpSDL3.Sdl.BindGPUComputeSamplers*
  commentId: Overload:SharpSDL3.Sdl.BindGPUComputeSamplers
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BindGPUComputeSamplers_System_IntPtr_System_UInt32_System_Span_SharpSDL3_Structs_GpuTextureSamplerBinding__System_UInt32_
  name: BindGPUComputeSamplers
  nameWithType: Sdl.BindGPUComputeSamplers
  fullName: SharpSDL3.Sdl.BindGPUComputeSamplers
- uid: System.Span{SharpSDL3.Structs.GpuTextureSamplerBinding}
  commentId: T:System.Span{SharpSDL3.Structs.GpuTextureSamplerBinding}
  parent: System
  definition: System.Span`1
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<GpuTextureSamplerBinding>
  nameWithType: Span<GpuTextureSamplerBinding>
  fullName: System.Span<SharpSDL3.Structs.GpuTextureSamplerBinding>
  nameWithType.vb: Span(Of GpuTextureSamplerBinding)
  fullName.vb: System.Span(Of SharpSDL3.Structs.GpuTextureSamplerBinding)
  name.vb: Span(Of GpuTextureSamplerBinding)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: SharpSDL3.Structs.GpuTextureSamplerBinding
    name: GpuTextureSamplerBinding
    href: SharpSDL3.Structs.GpuTextureSamplerBinding.html
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: SharpSDL3.Structs.GpuTextureSamplerBinding
    name: GpuTextureSamplerBinding
    href: SharpSDL3.Structs.GpuTextureSamplerBinding.html
  - name: )
- uid: SharpSDL3.Sdl.BindGPUComputeStorageBuffers*
  commentId: Overload:SharpSDL3.Sdl.BindGPUComputeStorageBuffers
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BindGPUComputeStorageBuffers_System_IntPtr_System_UInt32_System_Span_System_IntPtr__System_UInt32_
  name: BindGPUComputeStorageBuffers
  nameWithType: Sdl.BindGPUComputeStorageBuffers
  fullName: SharpSDL3.Sdl.BindGPUComputeStorageBuffers
- uid: SharpSDL3.Sdl.BindGPUComputeStorageTextures*
  commentId: Overload:SharpSDL3.Sdl.BindGPUComputeStorageTextures
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BindGPUComputeStorageTextures_System_IntPtr_System_UInt32_System_Span_System_IntPtr__System_UInt32_
  name: BindGPUComputeStorageTextures
  nameWithType: Sdl.BindGPUComputeStorageTextures
  fullName: SharpSDL3.Sdl.BindGPUComputeStorageTextures
- uid: SharpSDL3.Sdl.BindGPUFragmentSamplers*
  commentId: Overload:SharpSDL3.Sdl.BindGPUFragmentSamplers
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BindGPUFragmentSamplers_System_IntPtr_System_UInt32_System_Span_SharpSDL3_Structs_GpuTextureSamplerBinding__System_UInt32_
  name: BindGPUFragmentSamplers
  nameWithType: Sdl.BindGPUFragmentSamplers
  fullName: SharpSDL3.Sdl.BindGPUFragmentSamplers
- uid: SharpSDL3.Sdl.BindGPUFragmentStorageBuffers*
  commentId: Overload:SharpSDL3.Sdl.BindGPUFragmentStorageBuffers
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BindGPUFragmentStorageBuffers_System_IntPtr_System_UInt32_System_Span_System_IntPtr__System_UInt32_
  name: BindGPUFragmentStorageBuffers
  nameWithType: Sdl.BindGPUFragmentStorageBuffers
  fullName: SharpSDL3.Sdl.BindGPUFragmentStorageBuffers
- uid: SharpSDL3.Sdl.BindGPUFragmentStorageTextures*
  commentId: Overload:SharpSDL3.Sdl.BindGPUFragmentStorageTextures
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BindGPUFragmentStorageTextures_System_IntPtr_System_UInt32_System_Span_System_IntPtr__System_UInt32_
  name: BindGPUFragmentStorageTextures
  nameWithType: Sdl.BindGPUFragmentStorageTextures
  fullName: SharpSDL3.Sdl.BindGPUFragmentStorageTextures
- uid: SharpSDL3.Sdl.BindGPUGraphicsPipeline*
  commentId: Overload:SharpSDL3.Sdl.BindGPUGraphicsPipeline
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BindGPUGraphicsPipeline_System_IntPtr_System_IntPtr_
  name: BindGPUGraphicsPipeline
  nameWithType: Sdl.BindGPUGraphicsPipeline
  fullName: SharpSDL3.Sdl.BindGPUGraphicsPipeline
- uid: SharpSDL3.Sdl.BindGPUIndexBuffer*
  commentId: Overload:SharpSDL3.Sdl.BindGPUIndexBuffer
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BindGPUIndexBuffer_System_IntPtr_SharpSDL3_Structs_GpuBufferBinding__SharpSDL3_Enums_GpuIndexElementSize_
  name: BindGPUIndexBuffer
  nameWithType: Sdl.BindGPUIndexBuffer
  fullName: SharpSDL3.Sdl.BindGPUIndexBuffer
- uid: SharpSDL3.Structs.GpuBufferBinding
  commentId: T:SharpSDL3.Structs.GpuBufferBinding
  parent: SharpSDL3.Structs
  href: SharpSDL3.Structs.GpuBufferBinding.html
  name: GpuBufferBinding
  nameWithType: GpuBufferBinding
  fullName: SharpSDL3.Structs.GpuBufferBinding
- uid: SharpSDL3.Enums.GpuIndexElementSize
  commentId: T:SharpSDL3.Enums.GpuIndexElementSize
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.GpuIndexElementSize.html
  name: GpuIndexElementSize
  nameWithType: GpuIndexElementSize
  fullName: SharpSDL3.Enums.GpuIndexElementSize
- uid: SharpSDL3.Sdl.BindGPUVertexBuffers*
  commentId: Overload:SharpSDL3.Sdl.BindGPUVertexBuffers
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BindGPUVertexBuffers_System_IntPtr_System_UInt32_System_Span_SharpSDL3_Structs_GpuBufferBinding__System_UInt32_
  name: BindGPUVertexBuffers
  nameWithType: Sdl.BindGPUVertexBuffers
  fullName: SharpSDL3.Sdl.BindGPUVertexBuffers
- uid: System.Span{SharpSDL3.Structs.GpuBufferBinding}
  commentId: T:System.Span{SharpSDL3.Structs.GpuBufferBinding}
  parent: System
  definition: System.Span`1
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<GpuBufferBinding>
  nameWithType: Span<GpuBufferBinding>
  fullName: System.Span<SharpSDL3.Structs.GpuBufferBinding>
  nameWithType.vb: Span(Of GpuBufferBinding)
  fullName.vb: System.Span(Of SharpSDL3.Structs.GpuBufferBinding)
  name.vb: Span(Of GpuBufferBinding)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: SharpSDL3.Structs.GpuBufferBinding
    name: GpuBufferBinding
    href: SharpSDL3.Structs.GpuBufferBinding.html
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: SharpSDL3.Structs.GpuBufferBinding
    name: GpuBufferBinding
    href: SharpSDL3.Structs.GpuBufferBinding.html
  - name: )
- uid: SharpSDL3.Sdl.BindGPUVertexSamplers*
  commentId: Overload:SharpSDL3.Sdl.BindGPUVertexSamplers
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BindGPUVertexSamplers_System_IntPtr_System_UInt32_System_Span_SharpSDL3_Structs_GpuTextureSamplerBinding__System_UInt32_
  name: BindGPUVertexSamplers
  nameWithType: Sdl.BindGPUVertexSamplers
  fullName: SharpSDL3.Sdl.BindGPUVertexSamplers
- uid: SharpSDL3.Sdl.BindGPUVertexStorageBuffers*
  commentId: Overload:SharpSDL3.Sdl.BindGPUVertexStorageBuffers
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BindGPUVertexStorageBuffers_System_IntPtr_System_UInt32_System_Span_System_IntPtr__System_UInt32_
  name: BindGPUVertexStorageBuffers
  nameWithType: Sdl.BindGPUVertexStorageBuffers
  fullName: SharpSDL3.Sdl.BindGPUVertexStorageBuffers
- uid: SharpSDL3.Sdl.BindGPUVertexStorageTextures*
  commentId: Overload:SharpSDL3.Sdl.BindGPUVertexStorageTextures
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BindGPUVertexStorageTextures_System_IntPtr_System_UInt32_System_Span_System_IntPtr__System_UInt32_
  name: BindGPUVertexStorageTextures
  nameWithType: Sdl.BindGPUVertexStorageTextures
  fullName: SharpSDL3.Sdl.BindGPUVertexStorageTextures
- uid: SharpSDL3.Sdl.BlitGPUTexture*
  commentId: Overload:SharpSDL3.Sdl.BlitGPUTexture
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BlitGPUTexture_System_IntPtr_SharpSDL3_Structs_GpuBlitInfo__
  name: BlitGPUTexture
  nameWithType: Sdl.BlitGPUTexture
  fullName: SharpSDL3.Sdl.BlitGPUTexture
- uid: SharpSDL3.Structs.GpuBlitInfo
  commentId: T:SharpSDL3.Structs.GpuBlitInfo
  parent: SharpSDL3.Structs
  href: SharpSDL3.Structs.GpuBlitInfo.html
  name: GpuBlitInfo
  nameWithType: GpuBlitInfo
  fullName: SharpSDL3.Structs.GpuBlitInfo
- uid: SharpSDL3.Sdl.CalculateGPUTextureFormatSize*
  commentId: Overload:SharpSDL3.Sdl.CalculateGPUTextureFormatSize
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CalculateGPUTextureFormatSize_SharpSDL3_Enums_GpuTextureFormat_System_UInt32_System_UInt32_System_UInt32_
  name: CalculateGPUTextureFormatSize
  nameWithType: Sdl.CalculateGPUTextureFormatSize
  fullName: SharpSDL3.Sdl.CalculateGPUTextureFormatSize
- uid: SharpSDL3.Enums.GpuTextureFormat
  commentId: T:SharpSDL3.Enums.GpuTextureFormat
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.GpuTextureFormat.html
  name: GpuTextureFormat
  nameWithType: GpuTextureFormat
  fullName: SharpSDL3.Enums.GpuTextureFormat
- uid: SharpSDL3.Sdl.AcquireGPUCommandBuffer(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.AcquireGPUCommandBuffer(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_AcquireGPUCommandBuffer_System_IntPtr_
  name: AcquireGPUCommandBuffer(nint)
  nameWithType: Sdl.AcquireGPUCommandBuffer(nint)
  fullName: SharpSDL3.Sdl.AcquireGPUCommandBuffer(nint)
  nameWithType.vb: Sdl.AcquireGPUCommandBuffer(IntPtr)
  fullName.vb: SharpSDL3.Sdl.AcquireGPUCommandBuffer(System.IntPtr)
  name.vb: AcquireGPUCommandBuffer(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.AcquireGPUCommandBuffer(System.IntPtr)
    name: AcquireGPUCommandBuffer
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_AcquireGPUCommandBuffer_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.AcquireGPUCommandBuffer(System.IntPtr)
    name: AcquireGPUCommandBuffer
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_AcquireGPUCommandBuffer_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.AcquireGPUSwapchainTexture(System.IntPtr,System.IntPtr,System.IntPtr@,System.UInt32@,System.UInt32@)
  commentId: M:SharpSDL3.Sdl.AcquireGPUSwapchainTexture(System.IntPtr,System.IntPtr,System.IntPtr@,System.UInt32@,System.UInt32@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_AcquireGPUSwapchainTexture_System_IntPtr_System_IntPtr_System_IntPtr__System_UInt32__System_UInt32__
  name: AcquireGPUSwapchainTexture(nint, nint, out nint, out uint, out uint)
  nameWithType: Sdl.AcquireGPUSwapchainTexture(nint, nint, out nint, out uint, out uint)
  fullName: SharpSDL3.Sdl.AcquireGPUSwapchainTexture(nint, nint, out nint, out uint, out uint)
  nameWithType.vb: Sdl.AcquireGPUSwapchainTexture(IntPtr, IntPtr, IntPtr, UInteger, UInteger)
  fullName.vb: SharpSDL3.Sdl.AcquireGPUSwapchainTexture(System.IntPtr, System.IntPtr, System.IntPtr, UInteger, UInteger)
  name.vb: AcquireGPUSwapchainTexture(IntPtr, IntPtr, IntPtr, UInteger, UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.AcquireGPUSwapchainTexture(System.IntPtr,System.IntPtr,System.IntPtr@,System.UInt32@,System.UInt32@)
    name: AcquireGPUSwapchainTexture
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_AcquireGPUSwapchainTexture_System_IntPtr_System_IntPtr_System_IntPtr__System_UInt32__System_UInt32__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.AcquireGPUSwapchainTexture(System.IntPtr,System.IntPtr,System.IntPtr@,System.UInt32@,System.UInt32@)
    name: AcquireGPUSwapchainTexture
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_AcquireGPUSwapchainTexture_System_IntPtr_System_IntPtr_System_IntPtr__System_UInt32__System_UInt32__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.CancelGPUCommandBuffer*
  commentId: Overload:SharpSDL3.Sdl.CancelGPUCommandBuffer
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CancelGPUCommandBuffer_System_IntPtr_
  name: CancelGPUCommandBuffer
  nameWithType: Sdl.CancelGPUCommandBuffer
  fullName: SharpSDL3.Sdl.CancelGPUCommandBuffer
- uid: SharpSDL3.Sdl.ReleaseWindowFromGPUDevice(System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.ReleaseWindowFromGPUDevice(System.IntPtr,System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReleaseWindowFromGPUDevice_System_IntPtr_System_IntPtr_
  name: ReleaseWindowFromGPUDevice(nint, nint)
  nameWithType: Sdl.ReleaseWindowFromGPUDevice(nint, nint)
  fullName: SharpSDL3.Sdl.ReleaseWindowFromGPUDevice(nint, nint)
  nameWithType.vb: Sdl.ReleaseWindowFromGPUDevice(IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.ReleaseWindowFromGPUDevice(System.IntPtr, System.IntPtr)
  name.vb: ReleaseWindowFromGPUDevice(IntPtr, IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.ReleaseWindowFromGPUDevice(System.IntPtr,System.IntPtr)
    name: ReleaseWindowFromGPUDevice
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReleaseWindowFromGPUDevice_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.ReleaseWindowFromGPUDevice(System.IntPtr,System.IntPtr)
    name: ReleaseWindowFromGPUDevice
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReleaseWindowFromGPUDevice_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.WindowSupportsGPUPresentMode(System.IntPtr,System.IntPtr,SharpSDL3.Enums.GpuPresentMode)
  commentId: M:SharpSDL3.Sdl.WindowSupportsGPUPresentMode(System.IntPtr,System.IntPtr,SharpSDL3.Enums.GpuPresentMode)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WindowSupportsGPUPresentMode_System_IntPtr_System_IntPtr_SharpSDL3_Enums_GpuPresentMode_
  name: WindowSupportsGPUPresentMode(nint, nint, GpuPresentMode)
  nameWithType: Sdl.WindowSupportsGPUPresentMode(nint, nint, GpuPresentMode)
  fullName: SharpSDL3.Sdl.WindowSupportsGPUPresentMode(nint, nint, SharpSDL3.Enums.GpuPresentMode)
  nameWithType.vb: Sdl.WindowSupportsGPUPresentMode(IntPtr, IntPtr, GpuPresentMode)
  fullName.vb: SharpSDL3.Sdl.WindowSupportsGPUPresentMode(System.IntPtr, System.IntPtr, SharpSDL3.Enums.GpuPresentMode)
  name.vb: WindowSupportsGPUPresentMode(IntPtr, IntPtr, GpuPresentMode)
  spec.csharp:
  - uid: SharpSDL3.Sdl.WindowSupportsGPUPresentMode(System.IntPtr,System.IntPtr,SharpSDL3.Enums.GpuPresentMode)
    name: WindowSupportsGPUPresentMode
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WindowSupportsGPUPresentMode_System_IntPtr_System_IntPtr_SharpSDL3_Enums_GpuPresentMode_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.GpuPresentMode
    name: GpuPresentMode
    href: SharpSDL3.Enums.GpuPresentMode.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.WindowSupportsGPUPresentMode(System.IntPtr,System.IntPtr,SharpSDL3.Enums.GpuPresentMode)
    name: WindowSupportsGPUPresentMode
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WindowSupportsGPUPresentMode_System_IntPtr_System_IntPtr_SharpSDL3_Enums_GpuPresentMode_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.GpuPresentMode
    name: GpuPresentMode
    href: SharpSDL3.Enums.GpuPresentMode.html
  - name: )
- uid: SharpSDL3.Sdl.WindowSupportsGPUSwapchainComposition(System.IntPtr,System.IntPtr,SharpSDL3.Enums.GpuSwapchainComposition)
  commentId: M:SharpSDL3.Sdl.WindowSupportsGPUSwapchainComposition(System.IntPtr,System.IntPtr,SharpSDL3.Enums.GpuSwapchainComposition)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WindowSupportsGPUSwapchainComposition_System_IntPtr_System_IntPtr_SharpSDL3_Enums_GpuSwapchainComposition_
  name: WindowSupportsGPUSwapchainComposition(nint, nint, GpuSwapchainComposition)
  nameWithType: Sdl.WindowSupportsGPUSwapchainComposition(nint, nint, GpuSwapchainComposition)
  fullName: SharpSDL3.Sdl.WindowSupportsGPUSwapchainComposition(nint, nint, SharpSDL3.Enums.GpuSwapchainComposition)
  nameWithType.vb: Sdl.WindowSupportsGPUSwapchainComposition(IntPtr, IntPtr, GpuSwapchainComposition)
  fullName.vb: SharpSDL3.Sdl.WindowSupportsGPUSwapchainComposition(System.IntPtr, System.IntPtr, SharpSDL3.Enums.GpuSwapchainComposition)
  name.vb: WindowSupportsGPUSwapchainComposition(IntPtr, IntPtr, GpuSwapchainComposition)
  spec.csharp:
  - uid: SharpSDL3.Sdl.WindowSupportsGPUSwapchainComposition(System.IntPtr,System.IntPtr,SharpSDL3.Enums.GpuSwapchainComposition)
    name: WindowSupportsGPUSwapchainComposition
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WindowSupportsGPUSwapchainComposition_System_IntPtr_System_IntPtr_SharpSDL3_Enums_GpuSwapchainComposition_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.GpuSwapchainComposition
    name: GpuSwapchainComposition
    href: SharpSDL3.Enums.GpuSwapchainComposition.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.WindowSupportsGPUSwapchainComposition(System.IntPtr,System.IntPtr,SharpSDL3.Enums.GpuSwapchainComposition)
    name: WindowSupportsGPUSwapchainComposition
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WindowSupportsGPUSwapchainComposition_System_IntPtr_System_IntPtr_SharpSDL3_Enums_GpuSwapchainComposition_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.GpuSwapchainComposition
    name: GpuSwapchainComposition
    href: SharpSDL3.Enums.GpuSwapchainComposition.html
  - name: )
- uid: SharpSDL3.Sdl.ClaimWindowForGPUDevice*
  commentId: Overload:SharpSDL3.Sdl.ClaimWindowForGPUDevice
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ClaimWindowForGPUDevice_System_IntPtr_System_IntPtr_
  name: ClaimWindowForGPUDevice
  nameWithType: Sdl.ClaimWindowForGPUDevice
  fullName: SharpSDL3.Sdl.ClaimWindowForGPUDevice
- uid: SharpSDL3.Sdl.CopyGPUBufferToBuffer*
  commentId: Overload:SharpSDL3.Sdl.CopyGPUBufferToBuffer
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CopyGPUBufferToBuffer_System_IntPtr_SharpSDL3_Structs_GpuBufferLocation__SharpSDL3_Structs_GpuBufferLocation__System_UInt32_System_Boolean_
  name: CopyGPUBufferToBuffer
  nameWithType: Sdl.CopyGPUBufferToBuffer
  fullName: SharpSDL3.Sdl.CopyGPUBufferToBuffer
- uid: SharpSDL3.Structs.GpuBufferLocation
  commentId: T:SharpSDL3.Structs.GpuBufferLocation
  parent: SharpSDL3.Structs
  href: SharpSDL3.Structs.GpuBufferLocation.html
  name: GpuBufferLocation
  nameWithType: GpuBufferLocation
  fullName: SharpSDL3.Structs.GpuBufferLocation
- uid: SharpSDL3.Sdl.CopyGPUTextureToTexture*
  commentId: Overload:SharpSDL3.Sdl.CopyGPUTextureToTexture
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CopyGPUTextureToTexture_System_IntPtr_SharpSDL3_Structs_GpuTextureLocation__SharpSDL3_Structs_GpuTextureLocation__System_UInt32_System_UInt32_System_UInt32_System_Boolean_
  name: CopyGPUTextureToTexture
  nameWithType: Sdl.CopyGPUTextureToTexture
  fullName: SharpSDL3.Sdl.CopyGPUTextureToTexture
- uid: SharpSDL3.Structs.GpuTextureLocation
  commentId: T:SharpSDL3.Structs.GpuTextureLocation
  parent: SharpSDL3.Structs
  href: SharpSDL3.Structs.GpuTextureLocation.html
  name: GpuTextureLocation
  nameWithType: GpuTextureLocation
  fullName: SharpSDL3.Structs.GpuTextureLocation
- uid: SharpSDL3.Sdl.UploadToGPUBuffer(System.IntPtr,SharpSDL3.Structs.GpuTransferBufferLocation@,SharpSDL3.Structs.GpuBufferRegion@,System.Boolean)
  commentId: M:SharpSDL3.Sdl.UploadToGPUBuffer(System.IntPtr,SharpSDL3.Structs.GpuTransferBufferLocation@,SharpSDL3.Structs.GpuBufferRegion@,System.Boolean)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UploadToGPUBuffer_System_IntPtr_SharpSDL3_Structs_GpuTransferBufferLocation__SharpSDL3_Structs_GpuBufferRegion__System_Boolean_
  name: UploadToGPUBuffer(nint, in GpuTransferBufferLocation, in GpuBufferRegion, bool)
  nameWithType: Sdl.UploadToGPUBuffer(nint, in GpuTransferBufferLocation, in GpuBufferRegion, bool)
  fullName: SharpSDL3.Sdl.UploadToGPUBuffer(nint, in SharpSDL3.Structs.GpuTransferBufferLocation, in SharpSDL3.Structs.GpuBufferRegion, bool)
  nameWithType.vb: Sdl.UploadToGPUBuffer(IntPtr, GpuTransferBufferLocation, GpuBufferRegion, Boolean)
  fullName.vb: SharpSDL3.Sdl.UploadToGPUBuffer(System.IntPtr, SharpSDL3.Structs.GpuTransferBufferLocation, SharpSDL3.Structs.GpuBufferRegion, Boolean)
  name.vb: UploadToGPUBuffer(IntPtr, GpuTransferBufferLocation, GpuBufferRegion, Boolean)
  spec.csharp:
  - uid: SharpSDL3.Sdl.UploadToGPUBuffer(System.IntPtr,SharpSDL3.Structs.GpuTransferBufferLocation@,SharpSDL3.Structs.GpuBufferRegion@,System.Boolean)
    name: UploadToGPUBuffer
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UploadToGPUBuffer_System_IntPtr_SharpSDL3_Structs_GpuTransferBufferLocation__SharpSDL3_Structs_GpuBufferRegion__System_Boolean_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: in
  - name: " "
  - uid: SharpSDL3.Structs.GpuTransferBufferLocation
    name: GpuTransferBufferLocation
    href: SharpSDL3.Structs.GpuTransferBufferLocation.html
  - name: ','
  - name: " "
  - name: in
  - name: " "
  - uid: SharpSDL3.Structs.GpuBufferRegion
    name: GpuBufferRegion
    href: SharpSDL3.Structs.GpuBufferRegion.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.UploadToGPUBuffer(System.IntPtr,SharpSDL3.Structs.GpuTransferBufferLocation@,SharpSDL3.Structs.GpuBufferRegion@,System.Boolean)
    name: UploadToGPUBuffer
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UploadToGPUBuffer_System_IntPtr_SharpSDL3_Structs_GpuTransferBufferLocation__SharpSDL3_Structs_GpuBufferRegion__System_Boolean_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.GpuTransferBufferLocation
    name: GpuTransferBufferLocation
    href: SharpSDL3.Structs.GpuTransferBufferLocation.html
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.GpuBufferRegion
    name: GpuBufferRegion
    href: SharpSDL3.Structs.GpuBufferRegion.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: SharpSDL3.Sdl.DownloadFromGPUBuffer(System.IntPtr,SharpSDL3.Structs.GpuBufferRegion@,SharpSDL3.Structs.GpuTransferBufferLocation@)
  commentId: M:SharpSDL3.Sdl.DownloadFromGPUBuffer(System.IntPtr,SharpSDL3.Structs.GpuBufferRegion@,SharpSDL3.Structs.GpuTransferBufferLocation@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DownloadFromGPUBuffer_System_IntPtr_SharpSDL3_Structs_GpuBufferRegion__SharpSDL3_Structs_GpuTransferBufferLocation__
  name: DownloadFromGPUBuffer(nint, in GpuBufferRegion, in GpuTransferBufferLocation)
  nameWithType: Sdl.DownloadFromGPUBuffer(nint, in GpuBufferRegion, in GpuTransferBufferLocation)
  fullName: SharpSDL3.Sdl.DownloadFromGPUBuffer(nint, in SharpSDL3.Structs.GpuBufferRegion, in SharpSDL3.Structs.GpuTransferBufferLocation)
  nameWithType.vb: Sdl.DownloadFromGPUBuffer(IntPtr, GpuBufferRegion, GpuTransferBufferLocation)
  fullName.vb: SharpSDL3.Sdl.DownloadFromGPUBuffer(System.IntPtr, SharpSDL3.Structs.GpuBufferRegion, SharpSDL3.Structs.GpuTransferBufferLocation)
  name.vb: DownloadFromGPUBuffer(IntPtr, GpuBufferRegion, GpuTransferBufferLocation)
  spec.csharp:
  - uid: SharpSDL3.Sdl.DownloadFromGPUBuffer(System.IntPtr,SharpSDL3.Structs.GpuBufferRegion@,SharpSDL3.Structs.GpuTransferBufferLocation@)
    name: DownloadFromGPUBuffer
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DownloadFromGPUBuffer_System_IntPtr_SharpSDL3_Structs_GpuBufferRegion__SharpSDL3_Structs_GpuTransferBufferLocation__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: in
  - name: " "
  - uid: SharpSDL3.Structs.GpuBufferRegion
    name: GpuBufferRegion
    href: SharpSDL3.Structs.GpuBufferRegion.html
  - name: ','
  - name: " "
  - name: in
  - name: " "
  - uid: SharpSDL3.Structs.GpuTransferBufferLocation
    name: GpuTransferBufferLocation
    href: SharpSDL3.Structs.GpuTransferBufferLocation.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.DownloadFromGPUBuffer(System.IntPtr,SharpSDL3.Structs.GpuBufferRegion@,SharpSDL3.Structs.GpuTransferBufferLocation@)
    name: DownloadFromGPUBuffer
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DownloadFromGPUBuffer_System_IntPtr_SharpSDL3_Structs_GpuBufferRegion__SharpSDL3_Structs_GpuTransferBufferLocation__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.GpuBufferRegion
    name: GpuBufferRegion
    href: SharpSDL3.Structs.GpuBufferRegion.html
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.GpuTransferBufferLocation
    name: GpuTransferBufferLocation
    href: SharpSDL3.Structs.GpuTransferBufferLocation.html
  - name: )
- uid: SharpSDL3.Sdl.CopyGPUBufferToBuffer(System.IntPtr,SharpSDL3.Structs.GpuBufferLocation@,SharpSDL3.Structs.GpuBufferLocation@,System.UInt32,System.Boolean)
  commentId: M:SharpSDL3.Sdl.CopyGPUBufferToBuffer(System.IntPtr,SharpSDL3.Structs.GpuBufferLocation@,SharpSDL3.Structs.GpuBufferLocation@,System.UInt32,System.Boolean)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CopyGPUBufferToBuffer_System_IntPtr_SharpSDL3_Structs_GpuBufferLocation__SharpSDL3_Structs_GpuBufferLocation__System_UInt32_System_Boolean_
  name: CopyGPUBufferToBuffer(nint, in GpuBufferLocation, in GpuBufferLocation, uint, bool)
  nameWithType: Sdl.CopyGPUBufferToBuffer(nint, in GpuBufferLocation, in GpuBufferLocation, uint, bool)
  fullName: SharpSDL3.Sdl.CopyGPUBufferToBuffer(nint, in SharpSDL3.Structs.GpuBufferLocation, in SharpSDL3.Structs.GpuBufferLocation, uint, bool)
  nameWithType.vb: Sdl.CopyGPUBufferToBuffer(IntPtr, GpuBufferLocation, GpuBufferLocation, UInteger, Boolean)
  fullName.vb: SharpSDL3.Sdl.CopyGPUBufferToBuffer(System.IntPtr, SharpSDL3.Structs.GpuBufferLocation, SharpSDL3.Structs.GpuBufferLocation, UInteger, Boolean)
  name.vb: CopyGPUBufferToBuffer(IntPtr, GpuBufferLocation, GpuBufferLocation, UInteger, Boolean)
  spec.csharp:
  - uid: SharpSDL3.Sdl.CopyGPUBufferToBuffer(System.IntPtr,SharpSDL3.Structs.GpuBufferLocation@,SharpSDL3.Structs.GpuBufferLocation@,System.UInt32,System.Boolean)
    name: CopyGPUBufferToBuffer
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CopyGPUBufferToBuffer_System_IntPtr_SharpSDL3_Structs_GpuBufferLocation__SharpSDL3_Structs_GpuBufferLocation__System_UInt32_System_Boolean_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: in
  - name: " "
  - uid: SharpSDL3.Structs.GpuBufferLocation
    name: GpuBufferLocation
    href: SharpSDL3.Structs.GpuBufferLocation.html
  - name: ','
  - name: " "
  - name: in
  - name: " "
  - uid: SharpSDL3.Structs.GpuBufferLocation
    name: GpuBufferLocation
    href: SharpSDL3.Structs.GpuBufferLocation.html
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.CopyGPUBufferToBuffer(System.IntPtr,SharpSDL3.Structs.GpuBufferLocation@,SharpSDL3.Structs.GpuBufferLocation@,System.UInt32,System.Boolean)
    name: CopyGPUBufferToBuffer
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CopyGPUBufferToBuffer_System_IntPtr_SharpSDL3_Structs_GpuBufferLocation__SharpSDL3_Structs_GpuBufferLocation__System_UInt32_System_Boolean_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.GpuBufferLocation
    name: GpuBufferLocation
    href: SharpSDL3.Structs.GpuBufferLocation.html
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.GpuBufferLocation
    name: GpuBufferLocation
    href: SharpSDL3.Structs.GpuBufferLocation.html
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: SharpSDL3.Sdl.BindGPUVertexBuffers(System.IntPtr,System.UInt32,System.Span{SharpSDL3.Structs.GpuBufferBinding},System.UInt32)
  commentId: M:SharpSDL3.Sdl.BindGPUVertexBuffers(System.IntPtr,System.UInt32,System.Span{SharpSDL3.Structs.GpuBufferBinding},System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BindGPUVertexBuffers_System_IntPtr_System_UInt32_System_Span_SharpSDL3_Structs_GpuBufferBinding__System_UInt32_
  name: BindGPUVertexBuffers(nint, uint, Span<GpuBufferBinding>, uint)
  nameWithType: Sdl.BindGPUVertexBuffers(nint, uint, Span<GpuBufferBinding>, uint)
  fullName: SharpSDL3.Sdl.BindGPUVertexBuffers(nint, uint, System.Span<SharpSDL3.Structs.GpuBufferBinding>, uint)
  nameWithType.vb: Sdl.BindGPUVertexBuffers(IntPtr, UInteger, Span(Of GpuBufferBinding), UInteger)
  fullName.vb: SharpSDL3.Sdl.BindGPUVertexBuffers(System.IntPtr, UInteger, System.Span(Of SharpSDL3.Structs.GpuBufferBinding), UInteger)
  name.vb: BindGPUVertexBuffers(IntPtr, UInteger, Span(Of GpuBufferBinding), UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.BindGPUVertexBuffers(System.IntPtr,System.UInt32,System.Span{SharpSDL3.Structs.GpuBufferBinding},System.UInt32)
    name: BindGPUVertexBuffers
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BindGPUVertexBuffers_System_IntPtr_System_UInt32_System_Span_SharpSDL3_Structs_GpuBufferBinding__System_UInt32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: SharpSDL3.Structs.GpuBufferBinding
    name: GpuBufferBinding
    href: SharpSDL3.Structs.GpuBufferBinding.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.BindGPUVertexBuffers(System.IntPtr,System.UInt32,System.Span{SharpSDL3.Structs.GpuBufferBinding},System.UInt32)
    name: BindGPUVertexBuffers
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BindGPUVertexBuffers_System_IntPtr_System_UInt32_System_Span_SharpSDL3_Structs_GpuBufferBinding__System_UInt32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: SharpSDL3.Structs.GpuBufferBinding
    name: GpuBufferBinding
    href: SharpSDL3.Structs.GpuBufferBinding.html
  - name: )
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.BindGPUIndexBuffer(System.IntPtr,SharpSDL3.Structs.GpuBufferBinding@,SharpSDL3.Enums.GpuIndexElementSize)
  commentId: M:SharpSDL3.Sdl.BindGPUIndexBuffer(System.IntPtr,SharpSDL3.Structs.GpuBufferBinding@,SharpSDL3.Enums.GpuIndexElementSize)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BindGPUIndexBuffer_System_IntPtr_SharpSDL3_Structs_GpuBufferBinding__SharpSDL3_Enums_GpuIndexElementSize_
  name: BindGPUIndexBuffer(nint, in GpuBufferBinding, GpuIndexElementSize)
  nameWithType: Sdl.BindGPUIndexBuffer(nint, in GpuBufferBinding, GpuIndexElementSize)
  fullName: SharpSDL3.Sdl.BindGPUIndexBuffer(nint, in SharpSDL3.Structs.GpuBufferBinding, SharpSDL3.Enums.GpuIndexElementSize)
  nameWithType.vb: Sdl.BindGPUIndexBuffer(IntPtr, GpuBufferBinding, GpuIndexElementSize)
  fullName.vb: SharpSDL3.Sdl.BindGPUIndexBuffer(System.IntPtr, SharpSDL3.Structs.GpuBufferBinding, SharpSDL3.Enums.GpuIndexElementSize)
  name.vb: BindGPUIndexBuffer(IntPtr, GpuBufferBinding, GpuIndexElementSize)
  spec.csharp:
  - uid: SharpSDL3.Sdl.BindGPUIndexBuffer(System.IntPtr,SharpSDL3.Structs.GpuBufferBinding@,SharpSDL3.Enums.GpuIndexElementSize)
    name: BindGPUIndexBuffer
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BindGPUIndexBuffer_System_IntPtr_SharpSDL3_Structs_GpuBufferBinding__SharpSDL3_Enums_GpuIndexElementSize_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: in
  - name: " "
  - uid: SharpSDL3.Structs.GpuBufferBinding
    name: GpuBufferBinding
    href: SharpSDL3.Structs.GpuBufferBinding.html
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.GpuIndexElementSize
    name: GpuIndexElementSize
    href: SharpSDL3.Enums.GpuIndexElementSize.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.BindGPUIndexBuffer(System.IntPtr,SharpSDL3.Structs.GpuBufferBinding@,SharpSDL3.Enums.GpuIndexElementSize)
    name: BindGPUIndexBuffer
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BindGPUIndexBuffer_System_IntPtr_SharpSDL3_Structs_GpuBufferBinding__SharpSDL3_Enums_GpuIndexElementSize_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.GpuBufferBinding
    name: GpuBufferBinding
    href: SharpSDL3.Structs.GpuBufferBinding.html
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.GpuIndexElementSize
    name: GpuIndexElementSize
    href: SharpSDL3.Enums.GpuIndexElementSize.html
  - name: )
- uid: SharpSDL3.Sdl.BindGPUVertexStorageBuffers(System.IntPtr,System.UInt32,System.Span{System.IntPtr},System.UInt32)
  commentId: M:SharpSDL3.Sdl.BindGPUVertexStorageBuffers(System.IntPtr,System.UInt32,System.Span{System.IntPtr},System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BindGPUVertexStorageBuffers_System_IntPtr_System_UInt32_System_Span_System_IntPtr__System_UInt32_
  name: BindGPUVertexStorageBuffers(nint, uint, Span<nint>, uint)
  nameWithType: Sdl.BindGPUVertexStorageBuffers(nint, uint, Span<nint>, uint)
  fullName: SharpSDL3.Sdl.BindGPUVertexStorageBuffers(nint, uint, System.Span<nint>, uint)
  nameWithType.vb: Sdl.BindGPUVertexStorageBuffers(IntPtr, UInteger, Span(Of IntPtr), UInteger)
  fullName.vb: SharpSDL3.Sdl.BindGPUVertexStorageBuffers(System.IntPtr, UInteger, System.Span(Of System.IntPtr), UInteger)
  name.vb: BindGPUVertexStorageBuffers(IntPtr, UInteger, Span(Of IntPtr), UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.BindGPUVertexStorageBuffers(System.IntPtr,System.UInt32,System.Span{System.IntPtr},System.UInt32)
    name: BindGPUVertexStorageBuffers
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BindGPUVertexStorageBuffers_System_IntPtr_System_UInt32_System_Span_System_IntPtr__System_UInt32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.BindGPUVertexStorageBuffers(System.IntPtr,System.UInt32,System.Span{System.IntPtr},System.UInt32)
    name: BindGPUVertexStorageBuffers
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BindGPUVertexStorageBuffers_System_IntPtr_System_UInt32_System_Span_System_IntPtr__System_UInt32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.BindGPUFragmentStorageBuffers(System.IntPtr,System.UInt32,System.Span{System.IntPtr},System.UInt32)
  commentId: M:SharpSDL3.Sdl.BindGPUFragmentStorageBuffers(System.IntPtr,System.UInt32,System.Span{System.IntPtr},System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BindGPUFragmentStorageBuffers_System_IntPtr_System_UInt32_System_Span_System_IntPtr__System_UInt32_
  name: BindGPUFragmentStorageBuffers(nint, uint, Span<nint>, uint)
  nameWithType: Sdl.BindGPUFragmentStorageBuffers(nint, uint, Span<nint>, uint)
  fullName: SharpSDL3.Sdl.BindGPUFragmentStorageBuffers(nint, uint, System.Span<nint>, uint)
  nameWithType.vb: Sdl.BindGPUFragmentStorageBuffers(IntPtr, UInteger, Span(Of IntPtr), UInteger)
  fullName.vb: SharpSDL3.Sdl.BindGPUFragmentStorageBuffers(System.IntPtr, UInteger, System.Span(Of System.IntPtr), UInteger)
  name.vb: BindGPUFragmentStorageBuffers(IntPtr, UInteger, Span(Of IntPtr), UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.BindGPUFragmentStorageBuffers(System.IntPtr,System.UInt32,System.Span{System.IntPtr},System.UInt32)
    name: BindGPUFragmentStorageBuffers
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BindGPUFragmentStorageBuffers_System_IntPtr_System_UInt32_System_Span_System_IntPtr__System_UInt32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.BindGPUFragmentStorageBuffers(System.IntPtr,System.UInt32,System.Span{System.IntPtr},System.UInt32)
    name: BindGPUFragmentStorageBuffers
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BindGPUFragmentStorageBuffers_System_IntPtr_System_UInt32_System_Span_System_IntPtr__System_UInt32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.DrawGPUPrimitivesIndirect(System.IntPtr,System.IntPtr,System.UInt32,System.UInt32)
  commentId: M:SharpSDL3.Sdl.DrawGPUPrimitivesIndirect(System.IntPtr,System.IntPtr,System.UInt32,System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DrawGPUPrimitivesIndirect_System_IntPtr_System_IntPtr_System_UInt32_System_UInt32_
  name: DrawGPUPrimitivesIndirect(nint, nint, uint, uint)
  nameWithType: Sdl.DrawGPUPrimitivesIndirect(nint, nint, uint, uint)
  fullName: SharpSDL3.Sdl.DrawGPUPrimitivesIndirect(nint, nint, uint, uint)
  nameWithType.vb: Sdl.DrawGPUPrimitivesIndirect(IntPtr, IntPtr, UInteger, UInteger)
  fullName.vb: SharpSDL3.Sdl.DrawGPUPrimitivesIndirect(System.IntPtr, System.IntPtr, UInteger, UInteger)
  name.vb: DrawGPUPrimitivesIndirect(IntPtr, IntPtr, UInteger, UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.DrawGPUPrimitivesIndirect(System.IntPtr,System.IntPtr,System.UInt32,System.UInt32)
    name: DrawGPUPrimitivesIndirect
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DrawGPUPrimitivesIndirect_System_IntPtr_System_IntPtr_System_UInt32_System_UInt32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.DrawGPUPrimitivesIndirect(System.IntPtr,System.IntPtr,System.UInt32,System.UInt32)
    name: DrawGPUPrimitivesIndirect
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DrawGPUPrimitivesIndirect_System_IntPtr_System_IntPtr_System_UInt32_System_UInt32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.DrawGPUIndexedPrimitivesIndirect(System.IntPtr,System.IntPtr,System.UInt32,System.UInt32)
  commentId: M:SharpSDL3.Sdl.DrawGPUIndexedPrimitivesIndirect(System.IntPtr,System.IntPtr,System.UInt32,System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DrawGPUIndexedPrimitivesIndirect_System_IntPtr_System_IntPtr_System_UInt32_System_UInt32_
  name: DrawGPUIndexedPrimitivesIndirect(nint, nint, uint, uint)
  nameWithType: Sdl.DrawGPUIndexedPrimitivesIndirect(nint, nint, uint, uint)
  fullName: SharpSDL3.Sdl.DrawGPUIndexedPrimitivesIndirect(nint, nint, uint, uint)
  nameWithType.vb: Sdl.DrawGPUIndexedPrimitivesIndirect(IntPtr, IntPtr, UInteger, UInteger)
  fullName.vb: SharpSDL3.Sdl.DrawGPUIndexedPrimitivesIndirect(System.IntPtr, System.IntPtr, UInteger, UInteger)
  name.vb: DrawGPUIndexedPrimitivesIndirect(IntPtr, IntPtr, UInteger, UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.DrawGPUIndexedPrimitivesIndirect(System.IntPtr,System.IntPtr,System.UInt32,System.UInt32)
    name: DrawGPUIndexedPrimitivesIndirect
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DrawGPUIndexedPrimitivesIndirect_System_IntPtr_System_IntPtr_System_UInt32_System_UInt32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.DrawGPUIndexedPrimitivesIndirect(System.IntPtr,System.IntPtr,System.UInt32,System.UInt32)
    name: DrawGPUIndexedPrimitivesIndirect
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DrawGPUIndexedPrimitivesIndirect_System_IntPtr_System_IntPtr_System_UInt32_System_UInt32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.BindGPUComputeStorageBuffers(System.IntPtr,System.UInt32,System.Span{System.IntPtr},System.UInt32)
  commentId: M:SharpSDL3.Sdl.BindGPUComputeStorageBuffers(System.IntPtr,System.UInt32,System.Span{System.IntPtr},System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BindGPUComputeStorageBuffers_System_IntPtr_System_UInt32_System_Span_System_IntPtr__System_UInt32_
  name: BindGPUComputeStorageBuffers(nint, uint, Span<nint>, uint)
  nameWithType: Sdl.BindGPUComputeStorageBuffers(nint, uint, Span<nint>, uint)
  fullName: SharpSDL3.Sdl.BindGPUComputeStorageBuffers(nint, uint, System.Span<nint>, uint)
  nameWithType.vb: Sdl.BindGPUComputeStorageBuffers(IntPtr, UInteger, Span(Of IntPtr), UInteger)
  fullName.vb: SharpSDL3.Sdl.BindGPUComputeStorageBuffers(System.IntPtr, UInteger, System.Span(Of System.IntPtr), UInteger)
  name.vb: BindGPUComputeStorageBuffers(IntPtr, UInteger, Span(Of IntPtr), UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.BindGPUComputeStorageBuffers(System.IntPtr,System.UInt32,System.Span{System.IntPtr},System.UInt32)
    name: BindGPUComputeStorageBuffers
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BindGPUComputeStorageBuffers_System_IntPtr_System_UInt32_System_Span_System_IntPtr__System_UInt32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.BindGPUComputeStorageBuffers(System.IntPtr,System.UInt32,System.Span{System.IntPtr},System.UInt32)
    name: BindGPUComputeStorageBuffers
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BindGPUComputeStorageBuffers_System_IntPtr_System_UInt32_System_Span_System_IntPtr__System_UInt32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.DispatchGPUComputeIndirect(System.IntPtr,System.IntPtr,System.UInt32)
  commentId: M:SharpSDL3.Sdl.DispatchGPUComputeIndirect(System.IntPtr,System.IntPtr,System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DispatchGPUComputeIndirect_System_IntPtr_System_IntPtr_System_UInt32_
  name: DispatchGPUComputeIndirect(nint, nint, uint)
  nameWithType: Sdl.DispatchGPUComputeIndirect(nint, nint, uint)
  fullName: SharpSDL3.Sdl.DispatchGPUComputeIndirect(nint, nint, uint)
  nameWithType.vb: Sdl.DispatchGPUComputeIndirect(IntPtr, IntPtr, UInteger)
  fullName.vb: SharpSDL3.Sdl.DispatchGPUComputeIndirect(System.IntPtr, System.IntPtr, UInteger)
  name.vb: DispatchGPUComputeIndirect(IntPtr, IntPtr, UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.DispatchGPUComputeIndirect(System.IntPtr,System.IntPtr,System.UInt32)
    name: DispatchGPUComputeIndirect
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DispatchGPUComputeIndirect_System_IntPtr_System_IntPtr_System_UInt32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.DispatchGPUComputeIndirect(System.IntPtr,System.IntPtr,System.UInt32)
    name: DispatchGPUComputeIndirect
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DispatchGPUComputeIndirect_System_IntPtr_System_IntPtr_System_UInt32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.ReleaseGPUBuffer(System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.ReleaseGPUBuffer(System.IntPtr,System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReleaseGPUBuffer_System_IntPtr_System_IntPtr_
  name: ReleaseGPUBuffer(nint, nint)
  nameWithType: Sdl.ReleaseGPUBuffer(nint, nint)
  fullName: SharpSDL3.Sdl.ReleaseGPUBuffer(nint, nint)
  nameWithType.vb: Sdl.ReleaseGPUBuffer(IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.ReleaseGPUBuffer(System.IntPtr, System.IntPtr)
  name.vb: ReleaseGPUBuffer(IntPtr, IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.ReleaseGPUBuffer(System.IntPtr,System.IntPtr)
    name: ReleaseGPUBuffer
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReleaseGPUBuffer_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.ReleaseGPUBuffer(System.IntPtr,System.IntPtr)
    name: ReleaseGPUBuffer
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReleaseGPUBuffer_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.CreateGPUBuffer*
  commentId: Overload:SharpSDL3.Sdl.CreateGPUBuffer
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateGPUBuffer_System_IntPtr_SharpSDL3_Structs_GpuBufferCreateInfo__
  name: CreateGPUBuffer
  nameWithType: Sdl.CreateGPUBuffer
  fullName: SharpSDL3.Sdl.CreateGPUBuffer
- uid: SharpSDL3.Structs.GpuBufferCreateInfo
  commentId: T:SharpSDL3.Structs.GpuBufferCreateInfo
  parent: SharpSDL3.Structs
  href: SharpSDL3.Structs.GpuBufferCreateInfo.html
  name: GpuBufferCreateInfo
  nameWithType: GpuBufferCreateInfo
  fullName: SharpSDL3.Structs.GpuBufferCreateInfo
- uid: SharpSDL3.Sdl.BindGPUComputePipeline(System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.BindGPUComputePipeline(System.IntPtr,System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BindGPUComputePipeline_System_IntPtr_System_IntPtr_
  name: BindGPUComputePipeline(nint, nint)
  nameWithType: Sdl.BindGPUComputePipeline(nint, nint)
  fullName: SharpSDL3.Sdl.BindGPUComputePipeline(nint, nint)
  nameWithType.vb: Sdl.BindGPUComputePipeline(IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.BindGPUComputePipeline(System.IntPtr, System.IntPtr)
  name.vb: BindGPUComputePipeline(IntPtr, IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.BindGPUComputePipeline(System.IntPtr,System.IntPtr)
    name: BindGPUComputePipeline
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BindGPUComputePipeline_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.BindGPUComputePipeline(System.IntPtr,System.IntPtr)
    name: BindGPUComputePipeline
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BindGPUComputePipeline_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.ReleaseGPUComputePipeline(System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.ReleaseGPUComputePipeline(System.IntPtr,System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReleaseGPUComputePipeline_System_IntPtr_System_IntPtr_
  name: ReleaseGPUComputePipeline(nint, nint)
  nameWithType: Sdl.ReleaseGPUComputePipeline(nint, nint)
  fullName: SharpSDL3.Sdl.ReleaseGPUComputePipeline(nint, nint)
  nameWithType.vb: Sdl.ReleaseGPUComputePipeline(IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.ReleaseGPUComputePipeline(System.IntPtr, System.IntPtr)
  name.vb: ReleaseGPUComputePipeline(IntPtr, IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.ReleaseGPUComputePipeline(System.IntPtr,System.IntPtr)
    name: ReleaseGPUComputePipeline
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReleaseGPUComputePipeline_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.ReleaseGPUComputePipeline(System.IntPtr,System.IntPtr)
    name: ReleaseGPUComputePipeline
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReleaseGPUComputePipeline_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.CreateGPUComputePipeline*
  commentId: Overload:SharpSDL3.Sdl.CreateGPUComputePipeline
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateGPUComputePipeline_System_IntPtr_SharpSDL3_Structs_GpuComputePipelineCreateInfo__
  name: CreateGPUComputePipeline
  nameWithType: Sdl.CreateGPUComputePipeline
  fullName: SharpSDL3.Sdl.CreateGPUComputePipeline
- uid: SharpSDL3.Structs.GpuComputePipelineCreateInfo
  commentId: T:SharpSDL3.Structs.GpuComputePipelineCreateInfo
  parent: SharpSDL3.Structs
  href: SharpSDL3.Structs.GpuComputePipelineCreateInfo.html
  name: GpuComputePipelineCreateInfo
  nameWithType: GpuComputePipelineCreateInfo
  fullName: SharpSDL3.Structs.GpuComputePipelineCreateInfo
- uid: SharpSDL3.Sdl.CreateGPUDeviceWithProperties(System.UInt32)
  commentId: M:SharpSDL3.Sdl.CreateGPUDeviceWithProperties(System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateGPUDeviceWithProperties_System_UInt32_
  name: CreateGPUDeviceWithProperties(uint)
  nameWithType: Sdl.CreateGPUDeviceWithProperties(uint)
  fullName: SharpSDL3.Sdl.CreateGPUDeviceWithProperties(uint)
  nameWithType.vb: Sdl.CreateGPUDeviceWithProperties(UInteger)
  fullName.vb: SharpSDL3.Sdl.CreateGPUDeviceWithProperties(UInteger)
  name.vb: CreateGPUDeviceWithProperties(UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.CreateGPUDeviceWithProperties(System.UInt32)
    name: CreateGPUDeviceWithProperties
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateGPUDeviceWithProperties_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.CreateGPUDeviceWithProperties(System.UInt32)
    name: CreateGPUDeviceWithProperties
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateGPUDeviceWithProperties_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.GetGPUShaderFormats(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetGPUShaderFormats(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGPUShaderFormats_System_IntPtr_
  name: GetGPUShaderFormats(nint)
  nameWithType: Sdl.GetGPUShaderFormats(nint)
  fullName: SharpSDL3.Sdl.GetGPUShaderFormats(nint)
  nameWithType.vb: Sdl.GetGPUShaderFormats(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetGPUShaderFormats(System.IntPtr)
  name.vb: GetGPUShaderFormats(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetGPUShaderFormats(System.IntPtr)
    name: GetGPUShaderFormats
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGPUShaderFormats_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetGPUShaderFormats(System.IntPtr)
    name: GetGPUShaderFormats
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGPUShaderFormats_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GetGPUDeviceDriver(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetGPUDeviceDriver(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGPUDeviceDriver_System_IntPtr_
  name: GetGPUDeviceDriver(nint)
  nameWithType: Sdl.GetGPUDeviceDriver(nint)
  fullName: SharpSDL3.Sdl.GetGPUDeviceDriver(nint)
  nameWithType.vb: Sdl.GetGPUDeviceDriver(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetGPUDeviceDriver(System.IntPtr)
  name.vb: GetGPUDeviceDriver(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetGPUDeviceDriver(System.IntPtr)
    name: GetGPUDeviceDriver
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGPUDeviceDriver_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetGPUDeviceDriver(System.IntPtr)
    name: GetGPUDeviceDriver
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGPUDeviceDriver_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.DestroyGPUDevice(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.DestroyGPUDevice(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyGPUDevice_System_IntPtr_
  name: DestroyGPUDevice(nint)
  nameWithType: Sdl.DestroyGPUDevice(nint)
  fullName: SharpSDL3.Sdl.DestroyGPUDevice(nint)
  nameWithType.vb: Sdl.DestroyGPUDevice(IntPtr)
  fullName.vb: SharpSDL3.Sdl.DestroyGPUDevice(System.IntPtr)
  name.vb: DestroyGPUDevice(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.DestroyGPUDevice(System.IntPtr)
    name: DestroyGPUDevice
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyGPUDevice_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.DestroyGPUDevice(System.IntPtr)
    name: DestroyGPUDevice
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyGPUDevice_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GPUSupportsShaderFormats(SharpSDL3.Enums.GpuShaderFormat,System.String)
  commentId: M:SharpSDL3.Sdl.GPUSupportsShaderFormats(SharpSDL3.Enums.GpuShaderFormat,System.String)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GPUSupportsShaderFormats_SharpSDL3_Enums_GpuShaderFormat_System_String_
  name: GPUSupportsShaderFormats(GpuShaderFormat, string)
  nameWithType: Sdl.GPUSupportsShaderFormats(GpuShaderFormat, string)
  fullName: SharpSDL3.Sdl.GPUSupportsShaderFormats(SharpSDL3.Enums.GpuShaderFormat, string)
  nameWithType.vb: Sdl.GPUSupportsShaderFormats(GpuShaderFormat, String)
  fullName.vb: SharpSDL3.Sdl.GPUSupportsShaderFormats(SharpSDL3.Enums.GpuShaderFormat, String)
  name.vb: GPUSupportsShaderFormats(GpuShaderFormat, String)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GPUSupportsShaderFormats(SharpSDL3.Enums.GpuShaderFormat,System.String)
    name: GPUSupportsShaderFormats
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GPUSupportsShaderFormats_SharpSDL3_Enums_GpuShaderFormat_System_String_
  - name: (
  - uid: SharpSDL3.Enums.GpuShaderFormat
    name: GpuShaderFormat
    href: SharpSDL3.Enums.GpuShaderFormat.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GPUSupportsShaderFormats(SharpSDL3.Enums.GpuShaderFormat,System.String)
    name: GPUSupportsShaderFormats
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GPUSupportsShaderFormats_SharpSDL3_Enums_GpuShaderFormat_System_String_
  - name: (
  - uid: SharpSDL3.Enums.GpuShaderFormat
    name: GpuShaderFormat
    href: SharpSDL3.Enums.GpuShaderFormat.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SharpSDL3.Sdl.CreateGPUDevice*
  commentId: Overload:SharpSDL3.Sdl.CreateGPUDevice
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateGPUDevice_SharpSDL3_Enums_GpuShaderFormat_System_Boolean_System_String_
  name: CreateGPUDevice
  nameWithType: Sdl.CreateGPUDevice
  fullName: SharpSDL3.Sdl.CreateGPUDevice
- uid: SharpSDL3.Enums.GpuShaderFormat
  commentId: T:SharpSDL3.Enums.GpuShaderFormat
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.GpuShaderFormat.html
  name: GpuShaderFormat
  nameWithType: GpuShaderFormat
  fullName: SharpSDL3.Enums.GpuShaderFormat
- uid: SharpSDL3.Sdl.GPUSupportsProperties(System.UInt32)
  commentId: M:SharpSDL3.Sdl.GPUSupportsProperties(System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GPUSupportsProperties_System_UInt32_
  name: GPUSupportsProperties(uint)
  nameWithType: Sdl.GPUSupportsProperties(uint)
  fullName: SharpSDL3.Sdl.GPUSupportsProperties(uint)
  nameWithType.vb: Sdl.GPUSupportsProperties(UInteger)
  fullName.vb: SharpSDL3.Sdl.GPUSupportsProperties(UInteger)
  name.vb: GPUSupportsProperties(UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GPUSupportsProperties(System.UInt32)
    name: GPUSupportsProperties
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GPUSupportsProperties_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GPUSupportsProperties(System.UInt32)
    name: GPUSupportsProperties
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GPUSupportsProperties_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.CreateGPUDeviceWithProperties*
  commentId: Overload:SharpSDL3.Sdl.CreateGPUDeviceWithProperties
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateGPUDeviceWithProperties_System_UInt32_
  name: CreateGPUDeviceWithProperties
  nameWithType: Sdl.CreateGPUDeviceWithProperties
  fullName: SharpSDL3.Sdl.CreateGPUDeviceWithProperties
- uid: SharpSDL3.Sdl.BindGPUGraphicsPipeline(System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.BindGPUGraphicsPipeline(System.IntPtr,System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BindGPUGraphicsPipeline_System_IntPtr_System_IntPtr_
  name: BindGPUGraphicsPipeline(nint, nint)
  nameWithType: Sdl.BindGPUGraphicsPipeline(nint, nint)
  fullName: SharpSDL3.Sdl.BindGPUGraphicsPipeline(nint, nint)
  nameWithType.vb: Sdl.BindGPUGraphicsPipeline(IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.BindGPUGraphicsPipeline(System.IntPtr, System.IntPtr)
  name.vb: BindGPUGraphicsPipeline(IntPtr, IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.BindGPUGraphicsPipeline(System.IntPtr,System.IntPtr)
    name: BindGPUGraphicsPipeline
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BindGPUGraphicsPipeline_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.BindGPUGraphicsPipeline(System.IntPtr,System.IntPtr)
    name: BindGPUGraphicsPipeline
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BindGPUGraphicsPipeline_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.ReleaseGPUGraphicsPipeline(System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.ReleaseGPUGraphicsPipeline(System.IntPtr,System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReleaseGPUGraphicsPipeline_System_IntPtr_System_IntPtr_
  name: ReleaseGPUGraphicsPipeline(nint, nint)
  nameWithType: Sdl.ReleaseGPUGraphicsPipeline(nint, nint)
  fullName: SharpSDL3.Sdl.ReleaseGPUGraphicsPipeline(nint, nint)
  nameWithType.vb: Sdl.ReleaseGPUGraphicsPipeline(IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.ReleaseGPUGraphicsPipeline(System.IntPtr, System.IntPtr)
  name.vb: ReleaseGPUGraphicsPipeline(IntPtr, IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.ReleaseGPUGraphicsPipeline(System.IntPtr,System.IntPtr)
    name: ReleaseGPUGraphicsPipeline
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReleaseGPUGraphicsPipeline_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.ReleaseGPUGraphicsPipeline(System.IntPtr,System.IntPtr)
    name: ReleaseGPUGraphicsPipeline
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReleaseGPUGraphicsPipeline_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.CreateGPUGraphicsPipeline*
  commentId: Overload:SharpSDL3.Sdl.CreateGPUGraphicsPipeline
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateGPUGraphicsPipeline_System_IntPtr_SharpSDL3_Structs_GpuGraphicsPipelineCreateInfo__
  name: CreateGPUGraphicsPipeline
  nameWithType: Sdl.CreateGPUGraphicsPipeline
  fullName: SharpSDL3.Sdl.CreateGPUGraphicsPipeline
- uid: SharpSDL3.Structs.GpuGraphicsPipelineCreateInfo
  commentId: T:SharpSDL3.Structs.GpuGraphicsPipelineCreateInfo
  parent: SharpSDL3.Structs
  href: SharpSDL3.Structs.GpuGraphicsPipelineCreateInfo.html
  name: GpuGraphicsPipelineCreateInfo
  nameWithType: GpuGraphicsPipelineCreateInfo
  fullName: SharpSDL3.Structs.GpuGraphicsPipelineCreateInfo
- uid: SharpSDL3.Sdl.BindGPUVertexSamplers(System.IntPtr,System.UInt32,System.Span{SharpSDL3.Structs.GpuTextureSamplerBinding},System.UInt32)
  commentId: M:SharpSDL3.Sdl.BindGPUVertexSamplers(System.IntPtr,System.UInt32,System.Span{SharpSDL3.Structs.GpuTextureSamplerBinding},System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BindGPUVertexSamplers_System_IntPtr_System_UInt32_System_Span_SharpSDL3_Structs_GpuTextureSamplerBinding__System_UInt32_
  name: BindGPUVertexSamplers(nint, uint, Span<GpuTextureSamplerBinding>, uint)
  nameWithType: Sdl.BindGPUVertexSamplers(nint, uint, Span<GpuTextureSamplerBinding>, uint)
  fullName: SharpSDL3.Sdl.BindGPUVertexSamplers(nint, uint, System.Span<SharpSDL3.Structs.GpuTextureSamplerBinding>, uint)
  nameWithType.vb: Sdl.BindGPUVertexSamplers(IntPtr, UInteger, Span(Of GpuTextureSamplerBinding), UInteger)
  fullName.vb: SharpSDL3.Sdl.BindGPUVertexSamplers(System.IntPtr, UInteger, System.Span(Of SharpSDL3.Structs.GpuTextureSamplerBinding), UInteger)
  name.vb: BindGPUVertexSamplers(IntPtr, UInteger, Span(Of GpuTextureSamplerBinding), UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.BindGPUVertexSamplers(System.IntPtr,System.UInt32,System.Span{SharpSDL3.Structs.GpuTextureSamplerBinding},System.UInt32)
    name: BindGPUVertexSamplers
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BindGPUVertexSamplers_System_IntPtr_System_UInt32_System_Span_SharpSDL3_Structs_GpuTextureSamplerBinding__System_UInt32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: SharpSDL3.Structs.GpuTextureSamplerBinding
    name: GpuTextureSamplerBinding
    href: SharpSDL3.Structs.GpuTextureSamplerBinding.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.BindGPUVertexSamplers(System.IntPtr,System.UInt32,System.Span{SharpSDL3.Structs.GpuTextureSamplerBinding},System.UInt32)
    name: BindGPUVertexSamplers
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BindGPUVertexSamplers_System_IntPtr_System_UInt32_System_Span_SharpSDL3_Structs_GpuTextureSamplerBinding__System_UInt32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: SharpSDL3.Structs.GpuTextureSamplerBinding
    name: GpuTextureSamplerBinding
    href: SharpSDL3.Structs.GpuTextureSamplerBinding.html
  - name: )
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.BindGPUFragmentSamplers(System.IntPtr,System.UInt32,System.Span{SharpSDL3.Structs.GpuTextureSamplerBinding},System.UInt32)
  commentId: M:SharpSDL3.Sdl.BindGPUFragmentSamplers(System.IntPtr,System.UInt32,System.Span{SharpSDL3.Structs.GpuTextureSamplerBinding},System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BindGPUFragmentSamplers_System_IntPtr_System_UInt32_System_Span_SharpSDL3_Structs_GpuTextureSamplerBinding__System_UInt32_
  name: BindGPUFragmentSamplers(nint, uint, Span<GpuTextureSamplerBinding>, uint)
  nameWithType: Sdl.BindGPUFragmentSamplers(nint, uint, Span<GpuTextureSamplerBinding>, uint)
  fullName: SharpSDL3.Sdl.BindGPUFragmentSamplers(nint, uint, System.Span<SharpSDL3.Structs.GpuTextureSamplerBinding>, uint)
  nameWithType.vb: Sdl.BindGPUFragmentSamplers(IntPtr, UInteger, Span(Of GpuTextureSamplerBinding), UInteger)
  fullName.vb: SharpSDL3.Sdl.BindGPUFragmentSamplers(System.IntPtr, UInteger, System.Span(Of SharpSDL3.Structs.GpuTextureSamplerBinding), UInteger)
  name.vb: BindGPUFragmentSamplers(IntPtr, UInteger, Span(Of GpuTextureSamplerBinding), UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.BindGPUFragmentSamplers(System.IntPtr,System.UInt32,System.Span{SharpSDL3.Structs.GpuTextureSamplerBinding},System.UInt32)
    name: BindGPUFragmentSamplers
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BindGPUFragmentSamplers_System_IntPtr_System_UInt32_System_Span_SharpSDL3_Structs_GpuTextureSamplerBinding__System_UInt32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: SharpSDL3.Structs.GpuTextureSamplerBinding
    name: GpuTextureSamplerBinding
    href: SharpSDL3.Structs.GpuTextureSamplerBinding.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.BindGPUFragmentSamplers(System.IntPtr,System.UInt32,System.Span{SharpSDL3.Structs.GpuTextureSamplerBinding},System.UInt32)
    name: BindGPUFragmentSamplers
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BindGPUFragmentSamplers_System_IntPtr_System_UInt32_System_Span_SharpSDL3_Structs_GpuTextureSamplerBinding__System_UInt32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: SharpSDL3.Structs.GpuTextureSamplerBinding
    name: GpuTextureSamplerBinding
    href: SharpSDL3.Structs.GpuTextureSamplerBinding.html
  - name: )
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.ReleaseGPUSampler(System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.ReleaseGPUSampler(System.IntPtr,System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReleaseGPUSampler_System_IntPtr_System_IntPtr_
  name: ReleaseGPUSampler(nint, nint)
  nameWithType: Sdl.ReleaseGPUSampler(nint, nint)
  fullName: SharpSDL3.Sdl.ReleaseGPUSampler(nint, nint)
  nameWithType.vb: Sdl.ReleaseGPUSampler(IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.ReleaseGPUSampler(System.IntPtr, System.IntPtr)
  name.vb: ReleaseGPUSampler(IntPtr, IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.ReleaseGPUSampler(System.IntPtr,System.IntPtr)
    name: ReleaseGPUSampler
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReleaseGPUSampler_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.ReleaseGPUSampler(System.IntPtr,System.IntPtr)
    name: ReleaseGPUSampler
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReleaseGPUSampler_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.CreateGPUSampler*
  commentId: Overload:SharpSDL3.Sdl.CreateGPUSampler
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateGPUSampler_System_IntPtr_SharpSDL3_Structs_GpuSamplerCreateInfo__
  name: CreateGPUSampler
  nameWithType: Sdl.CreateGPUSampler
  fullName: SharpSDL3.Sdl.CreateGPUSampler
- uid: SharpSDL3.Structs.GpuSamplerCreateInfo
  commentId: T:SharpSDL3.Structs.GpuSamplerCreateInfo
  parent: SharpSDL3.Structs
  href: SharpSDL3.Structs.GpuSamplerCreateInfo.html
  name: GpuSamplerCreateInfo
  nameWithType: GpuSamplerCreateInfo
  fullName: SharpSDL3.Structs.GpuSamplerCreateInfo
- uid: SharpSDL3.Sdl.CreateGPUGraphicsPipeline(System.IntPtr,SharpSDL3.Structs.GpuGraphicsPipelineCreateInfo@)
  commentId: M:SharpSDL3.Sdl.CreateGPUGraphicsPipeline(System.IntPtr,SharpSDL3.Structs.GpuGraphicsPipelineCreateInfo@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateGPUGraphicsPipeline_System_IntPtr_SharpSDL3_Structs_GpuGraphicsPipelineCreateInfo__
  name: CreateGPUGraphicsPipeline(nint, in GpuGraphicsPipelineCreateInfo)
  nameWithType: Sdl.CreateGPUGraphicsPipeline(nint, in GpuGraphicsPipelineCreateInfo)
  fullName: SharpSDL3.Sdl.CreateGPUGraphicsPipeline(nint, in SharpSDL3.Structs.GpuGraphicsPipelineCreateInfo)
  nameWithType.vb: Sdl.CreateGPUGraphicsPipeline(IntPtr, GpuGraphicsPipelineCreateInfo)
  fullName.vb: SharpSDL3.Sdl.CreateGPUGraphicsPipeline(System.IntPtr, SharpSDL3.Structs.GpuGraphicsPipelineCreateInfo)
  name.vb: CreateGPUGraphicsPipeline(IntPtr, GpuGraphicsPipelineCreateInfo)
  spec.csharp:
  - uid: SharpSDL3.Sdl.CreateGPUGraphicsPipeline(System.IntPtr,SharpSDL3.Structs.GpuGraphicsPipelineCreateInfo@)
    name: CreateGPUGraphicsPipeline
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateGPUGraphicsPipeline_System_IntPtr_SharpSDL3_Structs_GpuGraphicsPipelineCreateInfo__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: in
  - name: " "
  - uid: SharpSDL3.Structs.GpuGraphicsPipelineCreateInfo
    name: GpuGraphicsPipelineCreateInfo
    href: SharpSDL3.Structs.GpuGraphicsPipelineCreateInfo.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.CreateGPUGraphicsPipeline(System.IntPtr,SharpSDL3.Structs.GpuGraphicsPipelineCreateInfo@)
    name: CreateGPUGraphicsPipeline
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateGPUGraphicsPipeline_System_IntPtr_SharpSDL3_Structs_GpuGraphicsPipelineCreateInfo__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.GpuGraphicsPipelineCreateInfo
    name: GpuGraphicsPipelineCreateInfo
    href: SharpSDL3.Structs.GpuGraphicsPipelineCreateInfo.html
  - name: )
- uid: SharpSDL3.Sdl.ReleaseGPUShader(System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.ReleaseGPUShader(System.IntPtr,System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReleaseGPUShader_System_IntPtr_System_IntPtr_
  name: ReleaseGPUShader(nint, nint)
  nameWithType: Sdl.ReleaseGPUShader(nint, nint)
  fullName: SharpSDL3.Sdl.ReleaseGPUShader(nint, nint)
  nameWithType.vb: Sdl.ReleaseGPUShader(IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.ReleaseGPUShader(System.IntPtr, System.IntPtr)
  name.vb: ReleaseGPUShader(IntPtr, IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.ReleaseGPUShader(System.IntPtr,System.IntPtr)
    name: ReleaseGPUShader
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReleaseGPUShader_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.ReleaseGPUShader(System.IntPtr,System.IntPtr)
    name: ReleaseGPUShader
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReleaseGPUShader_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.CreateGPUShader*
  commentId: Overload:SharpSDL3.Sdl.CreateGPUShader
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateGPUShader_System_IntPtr_SharpSDL3_Structs_GpuShaderCreateInfo__
  name: CreateGPUShader
  nameWithType: Sdl.CreateGPUShader
  fullName: SharpSDL3.Sdl.CreateGPUShader
- uid: SharpSDL3.Structs.GpuShaderCreateInfo
  commentId: T:SharpSDL3.Structs.GpuShaderCreateInfo
  parent: SharpSDL3.Structs
  href: SharpSDL3.Structs.GpuShaderCreateInfo.html
  name: GpuShaderCreateInfo
  nameWithType: GpuShaderCreateInfo
  fullName: SharpSDL3.Structs.GpuShaderCreateInfo
- uid: SharpSDL3.Sdl.UploadToGPUTexture(System.IntPtr,SharpSDL3.Structs.GpuTextureTransferInfo@,SharpSDL3.Structs.GpuTextureRegion@,System.Boolean)
  commentId: M:SharpSDL3.Sdl.UploadToGPUTexture(System.IntPtr,SharpSDL3.Structs.GpuTextureTransferInfo@,SharpSDL3.Structs.GpuTextureRegion@,System.Boolean)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UploadToGPUTexture_System_IntPtr_SharpSDL3_Structs_GpuTextureTransferInfo__SharpSDL3_Structs_GpuTextureRegion__System_Boolean_
  name: UploadToGPUTexture(nint, in GpuTextureTransferInfo, in GpuTextureRegion, bool)
  nameWithType: Sdl.UploadToGPUTexture(nint, in GpuTextureTransferInfo, in GpuTextureRegion, bool)
  fullName: SharpSDL3.Sdl.UploadToGPUTexture(nint, in SharpSDL3.Structs.GpuTextureTransferInfo, in SharpSDL3.Structs.GpuTextureRegion, bool)
  nameWithType.vb: Sdl.UploadToGPUTexture(IntPtr, GpuTextureTransferInfo, GpuTextureRegion, Boolean)
  fullName.vb: SharpSDL3.Sdl.UploadToGPUTexture(System.IntPtr, SharpSDL3.Structs.GpuTextureTransferInfo, SharpSDL3.Structs.GpuTextureRegion, Boolean)
  name.vb: UploadToGPUTexture(IntPtr, GpuTextureTransferInfo, GpuTextureRegion, Boolean)
  spec.csharp:
  - uid: SharpSDL3.Sdl.UploadToGPUTexture(System.IntPtr,SharpSDL3.Structs.GpuTextureTransferInfo@,SharpSDL3.Structs.GpuTextureRegion@,System.Boolean)
    name: UploadToGPUTexture
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UploadToGPUTexture_System_IntPtr_SharpSDL3_Structs_GpuTextureTransferInfo__SharpSDL3_Structs_GpuTextureRegion__System_Boolean_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: in
  - name: " "
  - uid: SharpSDL3.Structs.GpuTextureTransferInfo
    name: GpuTextureTransferInfo
    href: SharpSDL3.Structs.GpuTextureTransferInfo.html
  - name: ','
  - name: " "
  - name: in
  - name: " "
  - uid: SharpSDL3.Structs.GpuTextureRegion
    name: GpuTextureRegion
    href: SharpSDL3.Structs.GpuTextureRegion.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.UploadToGPUTexture(System.IntPtr,SharpSDL3.Structs.GpuTextureTransferInfo@,SharpSDL3.Structs.GpuTextureRegion@,System.Boolean)
    name: UploadToGPUTexture
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UploadToGPUTexture_System_IntPtr_SharpSDL3_Structs_GpuTextureTransferInfo__SharpSDL3_Structs_GpuTextureRegion__System_Boolean_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.GpuTextureTransferInfo
    name: GpuTextureTransferInfo
    href: SharpSDL3.Structs.GpuTextureTransferInfo.html
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.GpuTextureRegion
    name: GpuTextureRegion
    href: SharpSDL3.Structs.GpuTextureRegion.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: SharpSDL3.Sdl.DownloadFromGPUTexture(System.IntPtr,SharpSDL3.Structs.GpuTextureRegion@,SharpSDL3.Structs.GpuTextureTransferInfo@)
  commentId: M:SharpSDL3.Sdl.DownloadFromGPUTexture(System.IntPtr,SharpSDL3.Structs.GpuTextureRegion@,SharpSDL3.Structs.GpuTextureTransferInfo@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DownloadFromGPUTexture_System_IntPtr_SharpSDL3_Structs_GpuTextureRegion__SharpSDL3_Structs_GpuTextureTransferInfo__
  name: DownloadFromGPUTexture(nint, in GpuTextureRegion, in GpuTextureTransferInfo)
  nameWithType: Sdl.DownloadFromGPUTexture(nint, in GpuTextureRegion, in GpuTextureTransferInfo)
  fullName: SharpSDL3.Sdl.DownloadFromGPUTexture(nint, in SharpSDL3.Structs.GpuTextureRegion, in SharpSDL3.Structs.GpuTextureTransferInfo)
  nameWithType.vb: Sdl.DownloadFromGPUTexture(IntPtr, GpuTextureRegion, GpuTextureTransferInfo)
  fullName.vb: SharpSDL3.Sdl.DownloadFromGPUTexture(System.IntPtr, SharpSDL3.Structs.GpuTextureRegion, SharpSDL3.Structs.GpuTextureTransferInfo)
  name.vb: DownloadFromGPUTexture(IntPtr, GpuTextureRegion, GpuTextureTransferInfo)
  spec.csharp:
  - uid: SharpSDL3.Sdl.DownloadFromGPUTexture(System.IntPtr,SharpSDL3.Structs.GpuTextureRegion@,SharpSDL3.Structs.GpuTextureTransferInfo@)
    name: DownloadFromGPUTexture
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DownloadFromGPUTexture_System_IntPtr_SharpSDL3_Structs_GpuTextureRegion__SharpSDL3_Structs_GpuTextureTransferInfo__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: in
  - name: " "
  - uid: SharpSDL3.Structs.GpuTextureRegion
    name: GpuTextureRegion
    href: SharpSDL3.Structs.GpuTextureRegion.html
  - name: ','
  - name: " "
  - name: in
  - name: " "
  - uid: SharpSDL3.Structs.GpuTextureTransferInfo
    name: GpuTextureTransferInfo
    href: SharpSDL3.Structs.GpuTextureTransferInfo.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.DownloadFromGPUTexture(System.IntPtr,SharpSDL3.Structs.GpuTextureRegion@,SharpSDL3.Structs.GpuTextureTransferInfo@)
    name: DownloadFromGPUTexture
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DownloadFromGPUTexture_System_IntPtr_SharpSDL3_Structs_GpuTextureRegion__SharpSDL3_Structs_GpuTextureTransferInfo__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.GpuTextureRegion
    name: GpuTextureRegion
    href: SharpSDL3.Structs.GpuTextureRegion.html
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.GpuTextureTransferInfo
    name: GpuTextureTransferInfo
    href: SharpSDL3.Structs.GpuTextureTransferInfo.html
  - name: )
- uid: SharpSDL3.Sdl.BindGPUVertexStorageTextures(System.IntPtr,System.UInt32,System.Span{System.IntPtr},System.UInt32)
  commentId: M:SharpSDL3.Sdl.BindGPUVertexStorageTextures(System.IntPtr,System.UInt32,System.Span{System.IntPtr},System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BindGPUVertexStorageTextures_System_IntPtr_System_UInt32_System_Span_System_IntPtr__System_UInt32_
  name: BindGPUVertexStorageTextures(nint, uint, Span<nint>, uint)
  nameWithType: Sdl.BindGPUVertexStorageTextures(nint, uint, Span<nint>, uint)
  fullName: SharpSDL3.Sdl.BindGPUVertexStorageTextures(nint, uint, System.Span<nint>, uint)
  nameWithType.vb: Sdl.BindGPUVertexStorageTextures(IntPtr, UInteger, Span(Of IntPtr), UInteger)
  fullName.vb: SharpSDL3.Sdl.BindGPUVertexStorageTextures(System.IntPtr, UInteger, System.Span(Of System.IntPtr), UInteger)
  name.vb: BindGPUVertexStorageTextures(IntPtr, UInteger, Span(Of IntPtr), UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.BindGPUVertexStorageTextures(System.IntPtr,System.UInt32,System.Span{System.IntPtr},System.UInt32)
    name: BindGPUVertexStorageTextures
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BindGPUVertexStorageTextures_System_IntPtr_System_UInt32_System_Span_System_IntPtr__System_UInt32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.BindGPUVertexStorageTextures(System.IntPtr,System.UInt32,System.Span{System.IntPtr},System.UInt32)
    name: BindGPUVertexStorageTextures
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BindGPUVertexStorageTextures_System_IntPtr_System_UInt32_System_Span_System_IntPtr__System_UInt32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.BindGPUFragmentStorageTextures(System.IntPtr,System.UInt32,System.Span{System.IntPtr},System.UInt32)
  commentId: M:SharpSDL3.Sdl.BindGPUFragmentStorageTextures(System.IntPtr,System.UInt32,System.Span{System.IntPtr},System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BindGPUFragmentStorageTextures_System_IntPtr_System_UInt32_System_Span_System_IntPtr__System_UInt32_
  name: BindGPUFragmentStorageTextures(nint, uint, Span<nint>, uint)
  nameWithType: Sdl.BindGPUFragmentStorageTextures(nint, uint, Span<nint>, uint)
  fullName: SharpSDL3.Sdl.BindGPUFragmentStorageTextures(nint, uint, System.Span<nint>, uint)
  nameWithType.vb: Sdl.BindGPUFragmentStorageTextures(IntPtr, UInteger, Span(Of IntPtr), UInteger)
  fullName.vb: SharpSDL3.Sdl.BindGPUFragmentStorageTextures(System.IntPtr, UInteger, System.Span(Of System.IntPtr), UInteger)
  name.vb: BindGPUFragmentStorageTextures(IntPtr, UInteger, Span(Of IntPtr), UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.BindGPUFragmentStorageTextures(System.IntPtr,System.UInt32,System.Span{System.IntPtr},System.UInt32)
    name: BindGPUFragmentStorageTextures
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BindGPUFragmentStorageTextures_System_IntPtr_System_UInt32_System_Span_System_IntPtr__System_UInt32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.BindGPUFragmentStorageTextures(System.IntPtr,System.UInt32,System.Span{System.IntPtr},System.UInt32)
    name: BindGPUFragmentStorageTextures
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BindGPUFragmentStorageTextures_System_IntPtr_System_UInt32_System_Span_System_IntPtr__System_UInt32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.BindGPUComputeStorageTextures(System.IntPtr,System.UInt32,System.Span{System.IntPtr},System.UInt32)
  commentId: M:SharpSDL3.Sdl.BindGPUComputeStorageTextures(System.IntPtr,System.UInt32,System.Span{System.IntPtr},System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BindGPUComputeStorageTextures_System_IntPtr_System_UInt32_System_Span_System_IntPtr__System_UInt32_
  name: BindGPUComputeStorageTextures(nint, uint, Span<nint>, uint)
  nameWithType: Sdl.BindGPUComputeStorageTextures(nint, uint, Span<nint>, uint)
  fullName: SharpSDL3.Sdl.BindGPUComputeStorageTextures(nint, uint, System.Span<nint>, uint)
  nameWithType.vb: Sdl.BindGPUComputeStorageTextures(IntPtr, UInteger, Span(Of IntPtr), UInteger)
  fullName.vb: SharpSDL3.Sdl.BindGPUComputeStorageTextures(System.IntPtr, UInteger, System.Span(Of System.IntPtr), UInteger)
  name.vb: BindGPUComputeStorageTextures(IntPtr, UInteger, Span(Of IntPtr), UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.BindGPUComputeStorageTextures(System.IntPtr,System.UInt32,System.Span{System.IntPtr},System.UInt32)
    name: BindGPUComputeStorageTextures
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BindGPUComputeStorageTextures_System_IntPtr_System_UInt32_System_Span_System_IntPtr__System_UInt32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.BindGPUComputeStorageTextures(System.IntPtr,System.UInt32,System.Span{System.IntPtr},System.UInt32)
    name: BindGPUComputeStorageTextures
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BindGPUComputeStorageTextures_System_IntPtr_System_UInt32_System_Span_System_IntPtr__System_UInt32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.BlitGPUTexture(System.IntPtr,SharpSDL3.Structs.GpuBlitInfo@)
  commentId: M:SharpSDL3.Sdl.BlitGPUTexture(System.IntPtr,SharpSDL3.Structs.GpuBlitInfo@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BlitGPUTexture_System_IntPtr_SharpSDL3_Structs_GpuBlitInfo__
  name: BlitGPUTexture(nint, in GpuBlitInfo)
  nameWithType: Sdl.BlitGPUTexture(nint, in GpuBlitInfo)
  fullName: SharpSDL3.Sdl.BlitGPUTexture(nint, in SharpSDL3.Structs.GpuBlitInfo)
  nameWithType.vb: Sdl.BlitGPUTexture(IntPtr, GpuBlitInfo)
  fullName.vb: SharpSDL3.Sdl.BlitGPUTexture(System.IntPtr, SharpSDL3.Structs.GpuBlitInfo)
  name.vb: BlitGPUTexture(IntPtr, GpuBlitInfo)
  spec.csharp:
  - uid: SharpSDL3.Sdl.BlitGPUTexture(System.IntPtr,SharpSDL3.Structs.GpuBlitInfo@)
    name: BlitGPUTexture
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BlitGPUTexture_System_IntPtr_SharpSDL3_Structs_GpuBlitInfo__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: in
  - name: " "
  - uid: SharpSDL3.Structs.GpuBlitInfo
    name: GpuBlitInfo
    href: SharpSDL3.Structs.GpuBlitInfo.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.BlitGPUTexture(System.IntPtr,SharpSDL3.Structs.GpuBlitInfo@)
    name: BlitGPUTexture
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BlitGPUTexture_System_IntPtr_SharpSDL3_Structs_GpuBlitInfo__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.GpuBlitInfo
    name: GpuBlitInfo
    href: SharpSDL3.Structs.GpuBlitInfo.html
  - name: )
- uid: SharpSDL3.Sdl.ReleaseGPUTexture(System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.ReleaseGPUTexture(System.IntPtr,System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReleaseGPUTexture_System_IntPtr_System_IntPtr_
  name: ReleaseGPUTexture(nint, nint)
  nameWithType: Sdl.ReleaseGPUTexture(nint, nint)
  fullName: SharpSDL3.Sdl.ReleaseGPUTexture(nint, nint)
  nameWithType.vb: Sdl.ReleaseGPUTexture(IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.ReleaseGPUTexture(System.IntPtr, System.IntPtr)
  name.vb: ReleaseGPUTexture(IntPtr, IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.ReleaseGPUTexture(System.IntPtr,System.IntPtr)
    name: ReleaseGPUTexture
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReleaseGPUTexture_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.ReleaseGPUTexture(System.IntPtr,System.IntPtr)
    name: ReleaseGPUTexture
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReleaseGPUTexture_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GPUTextureSupportsFormat(System.IntPtr,SharpSDL3.Enums.GpuTextureFormat,SharpSDL3.Enums.GpuTextureType,SharpSDL3.Enums.GpuTextureUsageFlags)
  commentId: M:SharpSDL3.Sdl.GPUTextureSupportsFormat(System.IntPtr,SharpSDL3.Enums.GpuTextureFormat,SharpSDL3.Enums.GpuTextureType,SharpSDL3.Enums.GpuTextureUsageFlags)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GPUTextureSupportsFormat_System_IntPtr_SharpSDL3_Enums_GpuTextureFormat_SharpSDL3_Enums_GpuTextureType_SharpSDL3_Enums_GpuTextureUsageFlags_
  name: GPUTextureSupportsFormat(nint, GpuTextureFormat, GpuTextureType, GpuTextureUsageFlags)
  nameWithType: Sdl.GPUTextureSupportsFormat(nint, GpuTextureFormat, GpuTextureType, GpuTextureUsageFlags)
  fullName: SharpSDL3.Sdl.GPUTextureSupportsFormat(nint, SharpSDL3.Enums.GpuTextureFormat, SharpSDL3.Enums.GpuTextureType, SharpSDL3.Enums.GpuTextureUsageFlags)
  nameWithType.vb: Sdl.GPUTextureSupportsFormat(IntPtr, GpuTextureFormat, GpuTextureType, GpuTextureUsageFlags)
  fullName.vb: SharpSDL3.Sdl.GPUTextureSupportsFormat(System.IntPtr, SharpSDL3.Enums.GpuTextureFormat, SharpSDL3.Enums.GpuTextureType, SharpSDL3.Enums.GpuTextureUsageFlags)
  name.vb: GPUTextureSupportsFormat(IntPtr, GpuTextureFormat, GpuTextureType, GpuTextureUsageFlags)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GPUTextureSupportsFormat(System.IntPtr,SharpSDL3.Enums.GpuTextureFormat,SharpSDL3.Enums.GpuTextureType,SharpSDL3.Enums.GpuTextureUsageFlags)
    name: GPUTextureSupportsFormat
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GPUTextureSupportsFormat_System_IntPtr_SharpSDL3_Enums_GpuTextureFormat_SharpSDL3_Enums_GpuTextureType_SharpSDL3_Enums_GpuTextureUsageFlags_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.GpuTextureFormat
    name: GpuTextureFormat
    href: SharpSDL3.Enums.GpuTextureFormat.html
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.GpuTextureType
    name: GpuTextureType
    href: SharpSDL3.Enums.GpuTextureType.html
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.GpuTextureUsageFlags
    name: GpuTextureUsageFlags
    href: SharpSDL3.Enums.GpuTextureUsageFlags.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GPUTextureSupportsFormat(System.IntPtr,SharpSDL3.Enums.GpuTextureFormat,SharpSDL3.Enums.GpuTextureType,SharpSDL3.Enums.GpuTextureUsageFlags)
    name: GPUTextureSupportsFormat
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GPUTextureSupportsFormat_System_IntPtr_SharpSDL3_Enums_GpuTextureFormat_SharpSDL3_Enums_GpuTextureType_SharpSDL3_Enums_GpuTextureUsageFlags_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.GpuTextureFormat
    name: GpuTextureFormat
    href: SharpSDL3.Enums.GpuTextureFormat.html
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.GpuTextureType
    name: GpuTextureType
    href: SharpSDL3.Enums.GpuTextureType.html
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.GpuTextureUsageFlags
    name: GpuTextureUsageFlags
    href: SharpSDL3.Enums.GpuTextureUsageFlags.html
  - name: )
- uid: SharpSDL3.Sdl.CreateGPUTexture*
  commentId: Overload:SharpSDL3.Sdl.CreateGPUTexture
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateGPUTexture_System_IntPtr_SharpSDL3_Structs_GpuTextureCreateInfo__
  name: CreateGPUTexture
  nameWithType: Sdl.CreateGPUTexture
  fullName: SharpSDL3.Sdl.CreateGPUTexture
- uid: SharpSDL3.Structs.GpuTextureCreateInfo
  commentId: T:SharpSDL3.Structs.GpuTextureCreateInfo
  parent: SharpSDL3.Structs
  href: SharpSDL3.Structs.GpuTextureCreateInfo.html
  name: GpuTextureCreateInfo
  nameWithType: GpuTextureCreateInfo
  fullName: SharpSDL3.Structs.GpuTextureCreateInfo
- uid: SharpSDL3.Sdl.ReleaseGPUTransferBuffer(System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.ReleaseGPUTransferBuffer(System.IntPtr,System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReleaseGPUTransferBuffer_System_IntPtr_System_IntPtr_
  name: ReleaseGPUTransferBuffer(nint, nint)
  nameWithType: Sdl.ReleaseGPUTransferBuffer(nint, nint)
  fullName: SharpSDL3.Sdl.ReleaseGPUTransferBuffer(nint, nint)
  nameWithType.vb: Sdl.ReleaseGPUTransferBuffer(IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.ReleaseGPUTransferBuffer(System.IntPtr, System.IntPtr)
  name.vb: ReleaseGPUTransferBuffer(IntPtr, IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.ReleaseGPUTransferBuffer(System.IntPtr,System.IntPtr)
    name: ReleaseGPUTransferBuffer
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReleaseGPUTransferBuffer_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.ReleaseGPUTransferBuffer(System.IntPtr,System.IntPtr)
    name: ReleaseGPUTransferBuffer
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReleaseGPUTransferBuffer_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.CreateGPUTransferBuffer*
  commentId: Overload:SharpSDL3.Sdl.CreateGPUTransferBuffer
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateGPUTransferBuffer_System_IntPtr_SharpSDL3_Structs_GpuTransferBufferCreateInfo__
  name: CreateGPUTransferBuffer
  nameWithType: Sdl.CreateGPUTransferBuffer
  fullName: SharpSDL3.Sdl.CreateGPUTransferBuffer
- uid: SharpSDL3.Structs.GpuTransferBufferCreateInfo
  commentId: T:SharpSDL3.Structs.GpuTransferBufferCreateInfo
  parent: SharpSDL3.Structs
  href: SharpSDL3.Structs.GpuTransferBufferCreateInfo.html
  name: GpuTransferBufferCreateInfo
  nameWithType: GpuTransferBufferCreateInfo
  fullName: SharpSDL3.Structs.GpuTransferBufferCreateInfo
- uid: SharpSDL3.Sdl.CreateGPUDevice(SharpSDL3.Enums.GpuShaderFormat,System.Boolean,System.String)
  commentId: M:SharpSDL3.Sdl.CreateGPUDevice(SharpSDL3.Enums.GpuShaderFormat,System.Boolean,System.String)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateGPUDevice_SharpSDL3_Enums_GpuShaderFormat_System_Boolean_System_String_
  name: CreateGPUDevice(GpuShaderFormat, bool, string)
  nameWithType: Sdl.CreateGPUDevice(GpuShaderFormat, bool, string)
  fullName: SharpSDL3.Sdl.CreateGPUDevice(SharpSDL3.Enums.GpuShaderFormat, bool, string)
  nameWithType.vb: Sdl.CreateGPUDevice(GpuShaderFormat, Boolean, String)
  fullName.vb: SharpSDL3.Sdl.CreateGPUDevice(SharpSDL3.Enums.GpuShaderFormat, Boolean, String)
  name.vb: CreateGPUDevice(GpuShaderFormat, Boolean, String)
  spec.csharp:
  - uid: SharpSDL3.Sdl.CreateGPUDevice(SharpSDL3.Enums.GpuShaderFormat,System.Boolean,System.String)
    name: CreateGPUDevice
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateGPUDevice_SharpSDL3_Enums_GpuShaderFormat_System_Boolean_System_String_
  - name: (
  - uid: SharpSDL3.Enums.GpuShaderFormat
    name: GpuShaderFormat
    href: SharpSDL3.Enums.GpuShaderFormat.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.CreateGPUDevice(SharpSDL3.Enums.GpuShaderFormat,System.Boolean,System.String)
    name: CreateGPUDevice
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateGPUDevice_SharpSDL3_Enums_GpuShaderFormat_System_Boolean_System_String_
  - name: (
  - uid: SharpSDL3.Enums.GpuShaderFormat
    name: GpuShaderFormat
    href: SharpSDL3.Enums.GpuShaderFormat.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SharpSDL3.Sdl.DestroyGPUDevice*
  commentId: Overload:SharpSDL3.Sdl.DestroyGPUDevice
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyGPUDevice_System_IntPtr_
  name: DestroyGPUDevice
  nameWithType: Sdl.DestroyGPUDevice
  fullName: SharpSDL3.Sdl.DestroyGPUDevice
- uid: SharpSDL3.Sdl.DispatchGPUCompute*
  commentId: Overload:SharpSDL3.Sdl.DispatchGPUCompute
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DispatchGPUCompute_System_IntPtr_System_UInt32_System_UInt32_System_UInt32_
  name: DispatchGPUCompute
  nameWithType: Sdl.DispatchGPUCompute
  fullName: SharpSDL3.Sdl.DispatchGPUCompute
- uid: SharpSDL3.Sdl.DispatchGPUComputeIndirect*
  commentId: Overload:SharpSDL3.Sdl.DispatchGPUComputeIndirect
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DispatchGPUComputeIndirect_System_IntPtr_System_IntPtr_System_UInt32_
  name: DispatchGPUComputeIndirect
  nameWithType: Sdl.DispatchGPUComputeIndirect
  fullName: SharpSDL3.Sdl.DispatchGPUComputeIndirect
- uid: SharpSDL3.Sdl.DownloadFromGPUBuffer*
  commentId: Overload:SharpSDL3.Sdl.DownloadFromGPUBuffer
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DownloadFromGPUBuffer_System_IntPtr_SharpSDL3_Structs_GpuBufferRegion__SharpSDL3_Structs_GpuTransferBufferLocation__
  name: DownloadFromGPUBuffer
  nameWithType: Sdl.DownloadFromGPUBuffer
  fullName: SharpSDL3.Sdl.DownloadFromGPUBuffer
- uid: SharpSDL3.Structs.GpuBufferRegion
  commentId: T:SharpSDL3.Structs.GpuBufferRegion
  parent: SharpSDL3.Structs
  href: SharpSDL3.Structs.GpuBufferRegion.html
  name: GpuBufferRegion
  nameWithType: GpuBufferRegion
  fullName: SharpSDL3.Structs.GpuBufferRegion
- uid: SharpSDL3.Structs.GpuTransferBufferLocation
  commentId: T:SharpSDL3.Structs.GpuTransferBufferLocation
  parent: SharpSDL3.Structs
  href: SharpSDL3.Structs.GpuTransferBufferLocation.html
  name: GpuTransferBufferLocation
  nameWithType: GpuTransferBufferLocation
  fullName: SharpSDL3.Structs.GpuTransferBufferLocation
- uid: SharpSDL3.Sdl.DownloadFromGPUTexture*
  commentId: Overload:SharpSDL3.Sdl.DownloadFromGPUTexture
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DownloadFromGPUTexture_System_IntPtr_SharpSDL3_Structs_GpuTextureRegion__SharpSDL3_Structs_GpuTextureTransferInfo__
  name: DownloadFromGPUTexture
  nameWithType: Sdl.DownloadFromGPUTexture
  fullName: SharpSDL3.Sdl.DownloadFromGPUTexture
- uid: SharpSDL3.Structs.GpuTextureRegion
  commentId: T:SharpSDL3.Structs.GpuTextureRegion
  parent: SharpSDL3.Structs
  href: SharpSDL3.Structs.GpuTextureRegion.html
  name: GpuTextureRegion
  nameWithType: GpuTextureRegion
  fullName: SharpSDL3.Structs.GpuTextureRegion
- uid: SharpSDL3.Structs.GpuTextureTransferInfo
  commentId: T:SharpSDL3.Structs.GpuTextureTransferInfo
  parent: SharpSDL3.Structs
  href: SharpSDL3.Structs.GpuTextureTransferInfo.html
  name: GpuTextureTransferInfo
  nameWithType: GpuTextureTransferInfo
  fullName: SharpSDL3.Structs.GpuTextureTransferInfo
- uid: SharpSDL3.Sdl.DrawGPUIndexedPrimitives*
  commentId: Overload:SharpSDL3.Sdl.DrawGPUIndexedPrimitives
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DrawGPUIndexedPrimitives_System_IntPtr_System_UInt32_System_UInt32_System_UInt32_System_Int32_System_UInt32_
  name: DrawGPUIndexedPrimitives
  nameWithType: Sdl.DrawGPUIndexedPrimitives
  fullName: SharpSDL3.Sdl.DrawGPUIndexedPrimitives
- uid: SharpSDL3.Sdl.DrawGPUIndexedPrimitivesIndirect*
  commentId: Overload:SharpSDL3.Sdl.DrawGPUIndexedPrimitivesIndirect
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DrawGPUIndexedPrimitivesIndirect_System_IntPtr_System_IntPtr_System_UInt32_System_UInt32_
  name: DrawGPUIndexedPrimitivesIndirect
  nameWithType: Sdl.DrawGPUIndexedPrimitivesIndirect
  fullName: SharpSDL3.Sdl.DrawGPUIndexedPrimitivesIndirect
- uid: SharpSDL3.Sdl.DrawGPUPrimitives*
  commentId: Overload:SharpSDL3.Sdl.DrawGPUPrimitives
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DrawGPUPrimitives_System_IntPtr_System_UInt32_System_UInt32_System_UInt32_System_UInt32_
  name: DrawGPUPrimitives
  nameWithType: Sdl.DrawGPUPrimitives
  fullName: SharpSDL3.Sdl.DrawGPUPrimitives
- uid: SharpSDL3.Sdl.DrawGPUPrimitivesIndirect*
  commentId: Overload:SharpSDL3.Sdl.DrawGPUPrimitivesIndirect
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DrawGPUPrimitivesIndirect_System_IntPtr_System_IntPtr_System_UInt32_System_UInt32_
  name: DrawGPUPrimitivesIndirect
  nameWithType: Sdl.DrawGPUPrimitivesIndirect
  fullName: SharpSDL3.Sdl.DrawGPUPrimitivesIndirect
- uid: SharpSDL3.Sdl.EndGPUComputePass*
  commentId: Overload:SharpSDL3.Sdl.EndGPUComputePass
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_EndGPUComputePass_System_IntPtr_
  name: EndGPUComputePass
  nameWithType: Sdl.EndGPUComputePass
  fullName: SharpSDL3.Sdl.EndGPUComputePass
- uid: SharpSDL3.Sdl.EndGPUCopyPass*
  commentId: Overload:SharpSDL3.Sdl.EndGPUCopyPass
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_EndGPUCopyPass_System_IntPtr_
  name: EndGPUCopyPass
  nameWithType: Sdl.EndGPUCopyPass
  fullName: SharpSDL3.Sdl.EndGPUCopyPass
- uid: SharpSDL3.Sdl.EndGPURenderPass*
  commentId: Overload:SharpSDL3.Sdl.EndGPURenderPass
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_EndGPURenderPass_System_IntPtr_
  name: EndGPURenderPass
  nameWithType: Sdl.EndGPURenderPass
  fullName: SharpSDL3.Sdl.EndGPURenderPass
- uid: SharpSDL3.Sdl.GenerateMipmapsForGPUTexture*
  commentId: Overload:SharpSDL3.Sdl.GenerateMipmapsForGPUTexture
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GenerateMipmapsForGPUTexture_System_IntPtr_System_IntPtr_
  name: GenerateMipmapsForGPUTexture
  nameWithType: Sdl.GenerateMipmapsForGPUTexture
  fullName: SharpSDL3.Sdl.GenerateMipmapsForGPUTexture
- uid: SharpSDL3.Sdl.GetGPUDeviceDriver*
  commentId: Overload:SharpSDL3.Sdl.GetGPUDeviceDriver
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGPUDeviceDriver_System_IntPtr_
  name: GetGPUDeviceDriver
  nameWithType: Sdl.GetGPUDeviceDriver
  fullName: SharpSDL3.Sdl.GetGPUDeviceDriver
- uid: SharpSDL3.Sdl.GetNumGPUDrivers
  commentId: M:SharpSDL3.Sdl.GetNumGPUDrivers
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetNumGPUDrivers
  name: GetNumGPUDrivers()
  nameWithType: Sdl.GetNumGPUDrivers()
  fullName: SharpSDL3.Sdl.GetNumGPUDrivers()
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetNumGPUDrivers
    name: GetNumGPUDrivers
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetNumGPUDrivers
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetNumGPUDrivers
    name: GetNumGPUDrivers
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetNumGPUDrivers
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.GetGPUDriver*
  commentId: Overload:SharpSDL3.Sdl.GetGPUDriver
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGPUDriver_System_Int32_
  name: GetGPUDriver
  nameWithType: Sdl.GetGPUDriver
  fullName: SharpSDL3.Sdl.GetGPUDriver
- uid: SharpSDL3.Sdl.GetGPUShaderFormats*
  commentId: Overload:SharpSDL3.Sdl.GetGPUShaderFormats
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGPUShaderFormats_System_IntPtr_
  name: GetGPUShaderFormats
  nameWithType: Sdl.GetGPUShaderFormats
  fullName: SharpSDL3.Sdl.GetGPUShaderFormats
- uid: SharpSDL3.Sdl.GetGPUSwapchainTextureFormat*
  commentId: Overload:SharpSDL3.Sdl.GetGPUSwapchainTextureFormat
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGPUSwapchainTextureFormat_System_IntPtr_System_IntPtr_
  name: GetGPUSwapchainTextureFormat
  nameWithType: Sdl.GetGPUSwapchainTextureFormat
  fullName: SharpSDL3.Sdl.GetGPUSwapchainTextureFormat
- uid: SharpSDL3.Sdl.GetGPUDriver(System.Int32)
  commentId: M:SharpSDL3.Sdl.GetGPUDriver(System.Int32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGPUDriver_System_Int32_
  name: GetGPUDriver(int)
  nameWithType: Sdl.GetGPUDriver(int)
  fullName: SharpSDL3.Sdl.GetGPUDriver(int)
  nameWithType.vb: Sdl.GetGPUDriver(Integer)
  fullName.vb: SharpSDL3.Sdl.GetGPUDriver(Integer)
  name.vb: GetGPUDriver(Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetGPUDriver(System.Int32)
    name: GetGPUDriver
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGPUDriver_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetGPUDriver(System.Int32)
    name: GetGPUDriver
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGPUDriver_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.GetNumGPUDrivers*
  commentId: Overload:SharpSDL3.Sdl.GetNumGPUDrivers
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetNumGPUDrivers
  name: GetNumGPUDrivers
  nameWithType: Sdl.GetNumGPUDrivers
  fullName: SharpSDL3.Sdl.GetNumGPUDrivers
- uid: SharpSDL3.Sdl.GPUSupportsProperties*
  commentId: Overload:SharpSDL3.Sdl.GPUSupportsProperties
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GPUSupportsProperties_System_UInt32_
  name: GPUSupportsProperties
  nameWithType: Sdl.GPUSupportsProperties
  fullName: SharpSDL3.Sdl.GPUSupportsProperties
- uid: SharpSDL3.Sdl.GPUSupportsShaderFormats*
  commentId: Overload:SharpSDL3.Sdl.GPUSupportsShaderFormats
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GPUSupportsShaderFormats_SharpSDL3_Enums_GpuShaderFormat_System_String_
  name: GPUSupportsShaderFormats
  nameWithType: Sdl.GPUSupportsShaderFormats
  fullName: SharpSDL3.Sdl.GPUSupportsShaderFormats
- uid: SharpSDL3.Sdl.GPUTextureFormatTexelBlockSize*
  commentId: Overload:SharpSDL3.Sdl.GPUTextureFormatTexelBlockSize
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GPUTextureFormatTexelBlockSize_SharpSDL3_Enums_GpuTextureFormat_
  name: GPUTextureFormatTexelBlockSize
  nameWithType: Sdl.GPUTextureFormatTexelBlockSize
  fullName: SharpSDL3.Sdl.GPUTextureFormatTexelBlockSize
- uid: SharpSDL3.Sdl.GPUTextureSupportsFormat*
  commentId: Overload:SharpSDL3.Sdl.GPUTextureSupportsFormat
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GPUTextureSupportsFormat_System_IntPtr_SharpSDL3_Enums_GpuTextureFormat_SharpSDL3_Enums_GpuTextureType_SharpSDL3_Enums_GpuTextureUsageFlags_
  name: GPUTextureSupportsFormat
  nameWithType: Sdl.GPUTextureSupportsFormat
  fullName: SharpSDL3.Sdl.GPUTextureSupportsFormat
- uid: SharpSDL3.Enums.GpuTextureType
  commentId: T:SharpSDL3.Enums.GpuTextureType
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.GpuTextureType.html
  name: GpuTextureType
  nameWithType: GpuTextureType
  fullName: SharpSDL3.Enums.GpuTextureType
- uid: SharpSDL3.Enums.GpuTextureUsageFlags
  commentId: T:SharpSDL3.Enums.GpuTextureUsageFlags
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.GpuTextureUsageFlags.html
  name: GpuTextureUsageFlags
  nameWithType: GpuTextureUsageFlags
  fullName: SharpSDL3.Enums.GpuTextureUsageFlags
- uid: SharpSDL3.Sdl.GPUTextureSupportsSampleCount*
  commentId: Overload:SharpSDL3.Sdl.GPUTextureSupportsSampleCount
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GPUTextureSupportsSampleCount_System_IntPtr_SharpSDL3_Enums_GpuTextureFormat_SharpSDL3_Enums_GpuSampleCount_
  name: GPUTextureSupportsSampleCount
  nameWithType: Sdl.GPUTextureSupportsSampleCount
  fullName: SharpSDL3.Sdl.GPUTextureSupportsSampleCount
- uid: SharpSDL3.Enums.GpuSampleCount
  commentId: T:SharpSDL3.Enums.GpuSampleCount
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.GpuSampleCount.html
  name: GpuSampleCount
  nameWithType: GpuSampleCount
  fullName: SharpSDL3.Enums.GpuSampleCount
- uid: SharpSDL3.Sdl.InsertGPUDebugLabel*
  commentId: Overload:SharpSDL3.Sdl.InsertGPUDebugLabel
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_InsertGPUDebugLabel_System_IntPtr_System_String_
  name: InsertGPUDebugLabel
  nameWithType: Sdl.InsertGPUDebugLabel
  fullName: SharpSDL3.Sdl.InsertGPUDebugLabel
- uid: SharpSDL3.Sdl.MapGPUTransferBuffer*
  commentId: Overload:SharpSDL3.Sdl.MapGPUTransferBuffer
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_MapGPUTransferBuffer_System_IntPtr_System_IntPtr_System_Boolean_
  name: MapGPUTransferBuffer
  nameWithType: Sdl.MapGPUTransferBuffer
  fullName: SharpSDL3.Sdl.MapGPUTransferBuffer
- uid: SharpSDL3.Sdl.PushGPUDebugGroup(System.IntPtr,System.String)
  commentId: M:SharpSDL3.Sdl.PushGPUDebugGroup(System.IntPtr,System.String)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_PushGPUDebugGroup_System_IntPtr_System_String_
  name: PushGPUDebugGroup(nint, string)
  nameWithType: Sdl.PushGPUDebugGroup(nint, string)
  fullName: SharpSDL3.Sdl.PushGPUDebugGroup(nint, string)
  nameWithType.vb: Sdl.PushGPUDebugGroup(IntPtr, String)
  fullName.vb: SharpSDL3.Sdl.PushGPUDebugGroup(System.IntPtr, String)
  name.vb: PushGPUDebugGroup(IntPtr, String)
  spec.csharp:
  - uid: SharpSDL3.Sdl.PushGPUDebugGroup(System.IntPtr,System.String)
    name: PushGPUDebugGroup
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_PushGPUDebugGroup_System_IntPtr_System_String_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.PushGPUDebugGroup(System.IntPtr,System.String)
    name: PushGPUDebugGroup
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_PushGPUDebugGroup_System_IntPtr_System_String_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SharpSDL3.Sdl.PopGPUDebugGroup*
  commentId: Overload:SharpSDL3.Sdl.PopGPUDebugGroup
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_PopGPUDebugGroup_System_IntPtr_
  name: PopGPUDebugGroup
  nameWithType: Sdl.PopGPUDebugGroup
  fullName: SharpSDL3.Sdl.PopGPUDebugGroup
- uid: SharpSDL3.Sdl.PushGPUComputeUniformData*
  commentId: Overload:SharpSDL3.Sdl.PushGPUComputeUniformData
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_PushGPUComputeUniformData_System_IntPtr_System_UInt32_System_IntPtr_System_UInt32_
  name: PushGPUComputeUniformData
  nameWithType: Sdl.PushGPUComputeUniformData
  fullName: SharpSDL3.Sdl.PushGPUComputeUniformData
- uid: SharpSDL3.Sdl.PopGPUDebugGroup(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.PopGPUDebugGroup(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_PopGPUDebugGroup_System_IntPtr_
  name: PopGPUDebugGroup(nint)
  nameWithType: Sdl.PopGPUDebugGroup(nint)
  fullName: SharpSDL3.Sdl.PopGPUDebugGroup(nint)
  nameWithType.vb: Sdl.PopGPUDebugGroup(IntPtr)
  fullName.vb: SharpSDL3.Sdl.PopGPUDebugGroup(System.IntPtr)
  name.vb: PopGPUDebugGroup(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.PopGPUDebugGroup(System.IntPtr)
    name: PopGPUDebugGroup
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_PopGPUDebugGroup_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.PopGPUDebugGroup(System.IntPtr)
    name: PopGPUDebugGroup
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_PopGPUDebugGroup_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.PushGPUDebugGroup*
  commentId: Overload:SharpSDL3.Sdl.PushGPUDebugGroup
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_PushGPUDebugGroup_System_IntPtr_System_String_
  name: PushGPUDebugGroup
  nameWithType: Sdl.PushGPUDebugGroup
  fullName: SharpSDL3.Sdl.PushGPUDebugGroup
- uid: SharpSDL3.Sdl.PushGPUFragmentUniformData*
  commentId: Overload:SharpSDL3.Sdl.PushGPUFragmentUniformData
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_PushGPUFragmentUniformData_System_IntPtr_System_UInt32_System_IntPtr_System_UInt32_
  name: PushGPUFragmentUniformData
  nameWithType: Sdl.PushGPUFragmentUniformData
  fullName: SharpSDL3.Sdl.PushGPUFragmentUniformData
- uid: SharpSDL3.Sdl.PushGPUVertexUniformData*
  commentId: Overload:SharpSDL3.Sdl.PushGPUVertexUniformData
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_PushGPUVertexUniformData_System_IntPtr_System_UInt32_System_IntPtr_System_UInt32_
  name: PushGPUVertexUniformData
  nameWithType: Sdl.PushGPUVertexUniformData
  fullName: SharpSDL3.Sdl.PushGPUVertexUniformData
- uid: SharpSDL3.Sdl.QueryGPUFence*
  commentId: Overload:SharpSDL3.Sdl.QueryGPUFence
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_QueryGPUFence_System_IntPtr_System_IntPtr_
  name: QueryGPUFence
  nameWithType: Sdl.QueryGPUFence
  fullName: SharpSDL3.Sdl.QueryGPUFence
- uid: SharpSDL3.Sdl.ReleaseGPUBuffer*
  commentId: Overload:SharpSDL3.Sdl.ReleaseGPUBuffer
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReleaseGPUBuffer_System_IntPtr_System_IntPtr_
  name: ReleaseGPUBuffer
  nameWithType: Sdl.ReleaseGPUBuffer
  fullName: SharpSDL3.Sdl.ReleaseGPUBuffer
- uid: SharpSDL3.Sdl.ReleaseGPUComputePipeline*
  commentId: Overload:SharpSDL3.Sdl.ReleaseGPUComputePipeline
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReleaseGPUComputePipeline_System_IntPtr_System_IntPtr_
  name: ReleaseGPUComputePipeline
  nameWithType: Sdl.ReleaseGPUComputePipeline
  fullName: SharpSDL3.Sdl.ReleaseGPUComputePipeline
- uid: SharpSDL3.Sdl.ReleaseGPUFence*
  commentId: Overload:SharpSDL3.Sdl.ReleaseGPUFence
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReleaseGPUFence_System_IntPtr_System_IntPtr_
  name: ReleaseGPUFence
  nameWithType: Sdl.ReleaseGPUFence
  fullName: SharpSDL3.Sdl.ReleaseGPUFence
- uid: SharpSDL3.Sdl.ReleaseGPUGraphicsPipeline*
  commentId: Overload:SharpSDL3.Sdl.ReleaseGPUGraphicsPipeline
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReleaseGPUGraphicsPipeline_System_IntPtr_System_IntPtr_
  name: ReleaseGPUGraphicsPipeline
  nameWithType: Sdl.ReleaseGPUGraphicsPipeline
  fullName: SharpSDL3.Sdl.ReleaseGPUGraphicsPipeline
- uid: SharpSDL3.Sdl.ReleaseGPUSampler*
  commentId: Overload:SharpSDL3.Sdl.ReleaseGPUSampler
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReleaseGPUSampler_System_IntPtr_System_IntPtr_
  name: ReleaseGPUSampler
  nameWithType: Sdl.ReleaseGPUSampler
  fullName: SharpSDL3.Sdl.ReleaseGPUSampler
- uid: SharpSDL3.Sdl.ReleaseGPUShader*
  commentId: Overload:SharpSDL3.Sdl.ReleaseGPUShader
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReleaseGPUShader_System_IntPtr_System_IntPtr_
  name: ReleaseGPUShader
  nameWithType: Sdl.ReleaseGPUShader
  fullName: SharpSDL3.Sdl.ReleaseGPUShader
- uid: SharpSDL3.Sdl.ReleaseGPUTexture*
  commentId: Overload:SharpSDL3.Sdl.ReleaseGPUTexture
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReleaseGPUTexture_System_IntPtr_System_IntPtr_
  name: ReleaseGPUTexture
  nameWithType: Sdl.ReleaseGPUTexture
  fullName: SharpSDL3.Sdl.ReleaseGPUTexture
- uid: SharpSDL3.Sdl.ReleaseGPUTransferBuffer*
  commentId: Overload:SharpSDL3.Sdl.ReleaseGPUTransferBuffer
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReleaseGPUTransferBuffer_System_IntPtr_System_IntPtr_
  name: ReleaseGPUTransferBuffer
  nameWithType: Sdl.ReleaseGPUTransferBuffer
  fullName: SharpSDL3.Sdl.ReleaseGPUTransferBuffer
- uid: SharpSDL3.Sdl.ReleaseWindowFromGPUDevice*
  commentId: Overload:SharpSDL3.Sdl.ReleaseWindowFromGPUDevice
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReleaseWindowFromGPUDevice_System_IntPtr_System_IntPtr_
  name: ReleaseWindowFromGPUDevice
  nameWithType: Sdl.ReleaseWindowFromGPUDevice
  fullName: SharpSDL3.Sdl.ReleaseWindowFromGPUDevice
- uid: SharpSDL3.Sdl.SetGPUAllowedFramesInFlight*
  commentId: Overload:SharpSDL3.Sdl.SetGPUAllowedFramesInFlight
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetGPUAllowedFramesInFlight_System_IntPtr_System_UInt32_
  name: SetGPUAllowedFramesInFlight
  nameWithType: Sdl.SetGPUAllowedFramesInFlight
  fullName: SharpSDL3.Sdl.SetGPUAllowedFramesInFlight
- uid: SharpSDL3.Sdl.SetGPUBlendConstants*
  commentId: Overload:SharpSDL3.Sdl.SetGPUBlendConstants
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetGPUBlendConstants_System_IntPtr_SharpSDL3_Structs_FColor_
  name: SetGPUBlendConstants
  nameWithType: Sdl.SetGPUBlendConstants
  fullName: SharpSDL3.Sdl.SetGPUBlendConstants
- uid: SharpSDL3.Structs.FColor
  commentId: T:SharpSDL3.Structs.FColor
  parent: SharpSDL3.Structs
  href: SharpSDL3.Structs.FColor.html
  name: FColor
  nameWithType: FColor
  fullName: SharpSDL3.Structs.FColor
- uid: SharpSDL3.Sdl.CreateGPUBuffer(System.IntPtr,SharpSDL3.Structs.GpuBufferCreateInfo@)
  commentId: M:SharpSDL3.Sdl.CreateGPUBuffer(System.IntPtr,SharpSDL3.Structs.GpuBufferCreateInfo@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateGPUBuffer_System_IntPtr_SharpSDL3_Structs_GpuBufferCreateInfo__
  name: CreateGPUBuffer(nint, in GpuBufferCreateInfo)
  nameWithType: Sdl.CreateGPUBuffer(nint, in GpuBufferCreateInfo)
  fullName: SharpSDL3.Sdl.CreateGPUBuffer(nint, in SharpSDL3.Structs.GpuBufferCreateInfo)
  nameWithType.vb: Sdl.CreateGPUBuffer(IntPtr, GpuBufferCreateInfo)
  fullName.vb: SharpSDL3.Sdl.CreateGPUBuffer(System.IntPtr, SharpSDL3.Structs.GpuBufferCreateInfo)
  name.vb: CreateGPUBuffer(IntPtr, GpuBufferCreateInfo)
  spec.csharp:
  - uid: SharpSDL3.Sdl.CreateGPUBuffer(System.IntPtr,SharpSDL3.Structs.GpuBufferCreateInfo@)
    name: CreateGPUBuffer
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateGPUBuffer_System_IntPtr_SharpSDL3_Structs_GpuBufferCreateInfo__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: in
  - name: " "
  - uid: SharpSDL3.Structs.GpuBufferCreateInfo
    name: GpuBufferCreateInfo
    href: SharpSDL3.Structs.GpuBufferCreateInfo.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.CreateGPUBuffer(System.IntPtr,SharpSDL3.Structs.GpuBufferCreateInfo@)
    name: CreateGPUBuffer
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateGPUBuffer_System_IntPtr_SharpSDL3_Structs_GpuBufferCreateInfo__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.GpuBufferCreateInfo
    name: GpuBufferCreateInfo
    href: SharpSDL3.Structs.GpuBufferCreateInfo.html
  - name: )
- uid: SharpSDL3.Sdl.SetGPUBufferName*
  commentId: Overload:SharpSDL3.Sdl.SetGPUBufferName
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetGPUBufferName_System_IntPtr_System_IntPtr_System_String_
  name: SetGPUBufferName
  nameWithType: Sdl.SetGPUBufferName
  fullName: SharpSDL3.Sdl.SetGPUBufferName
- uid: SharpSDL3.Sdl.SetGPUScissor*
  commentId: Overload:SharpSDL3.Sdl.SetGPUScissor
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetGPUScissor_System_IntPtr_SharpSDL3_Structs_Rect__
  name: SetGPUScissor
  nameWithType: Sdl.SetGPUScissor
  fullName: SharpSDL3.Sdl.SetGPUScissor
- uid: SharpSDL3.Structs.Rect
  commentId: T:SharpSDL3.Structs.Rect
  parent: SharpSDL3.Structs
  href: SharpSDL3.Structs.Rect.html
  name: Rect
  nameWithType: Rect
  fullName: SharpSDL3.Structs.Rect
- uid: SharpSDL3.Sdl.SetGPUStencilReference*
  commentId: Overload:SharpSDL3.Sdl.SetGPUStencilReference
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetGPUStencilReference_System_IntPtr_System_Byte_
  name: SetGPUStencilReference
  nameWithType: Sdl.SetGPUStencilReference
  fullName: SharpSDL3.Sdl.SetGPUStencilReference
- uid: SharpSDL3.Sdl.SetGPUSwapchainParameters*
  commentId: Overload:SharpSDL3.Sdl.SetGPUSwapchainParameters
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetGPUSwapchainParameters_System_IntPtr_System_IntPtr_SharpSDL3_Enums_GpuSwapchainComposition_SharpSDL3_Enums_GpuPresentMode_
  name: SetGPUSwapchainParameters
  nameWithType: Sdl.SetGPUSwapchainParameters
  fullName: SharpSDL3.Sdl.SetGPUSwapchainParameters
- uid: SharpSDL3.Enums.GpuSwapchainComposition
  commentId: T:SharpSDL3.Enums.GpuSwapchainComposition
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.GpuSwapchainComposition.html
  name: GpuSwapchainComposition
  nameWithType: GpuSwapchainComposition
  fullName: SharpSDL3.Enums.GpuSwapchainComposition
- uid: SharpSDL3.Enums.GpuPresentMode
  commentId: T:SharpSDL3.Enums.GpuPresentMode
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.GpuPresentMode.html
  name: GpuPresentMode
  nameWithType: GpuPresentMode
  fullName: SharpSDL3.Enums.GpuPresentMode
- uid: SharpSDL3.Sdl.CreateGPUTexture(System.IntPtr,SharpSDL3.Structs.GpuTextureCreateInfo@)
  commentId: M:SharpSDL3.Sdl.CreateGPUTexture(System.IntPtr,SharpSDL3.Structs.GpuTextureCreateInfo@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateGPUTexture_System_IntPtr_SharpSDL3_Structs_GpuTextureCreateInfo__
  name: CreateGPUTexture(nint, in GpuTextureCreateInfo)
  nameWithType: Sdl.CreateGPUTexture(nint, in GpuTextureCreateInfo)
  fullName: SharpSDL3.Sdl.CreateGPUTexture(nint, in SharpSDL3.Structs.GpuTextureCreateInfo)
  nameWithType.vb: Sdl.CreateGPUTexture(IntPtr, GpuTextureCreateInfo)
  fullName.vb: SharpSDL3.Sdl.CreateGPUTexture(System.IntPtr, SharpSDL3.Structs.GpuTextureCreateInfo)
  name.vb: CreateGPUTexture(IntPtr, GpuTextureCreateInfo)
  spec.csharp:
  - uid: SharpSDL3.Sdl.CreateGPUTexture(System.IntPtr,SharpSDL3.Structs.GpuTextureCreateInfo@)
    name: CreateGPUTexture
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateGPUTexture_System_IntPtr_SharpSDL3_Structs_GpuTextureCreateInfo__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: in
  - name: " "
  - uid: SharpSDL3.Structs.GpuTextureCreateInfo
    name: GpuTextureCreateInfo
    href: SharpSDL3.Structs.GpuTextureCreateInfo.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.CreateGPUTexture(System.IntPtr,SharpSDL3.Structs.GpuTextureCreateInfo@)
    name: CreateGPUTexture
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateGPUTexture_System_IntPtr_SharpSDL3_Structs_GpuTextureCreateInfo__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.GpuTextureCreateInfo
    name: GpuTextureCreateInfo
    href: SharpSDL3.Structs.GpuTextureCreateInfo.html
  - name: )
- uid: SharpSDL3.Sdl.SetGPUTextureName*
  commentId: Overload:SharpSDL3.Sdl.SetGPUTextureName
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetGPUTextureName_System_IntPtr_System_IntPtr_System_String_
  name: SetGPUTextureName
  nameWithType: Sdl.SetGPUTextureName
  fullName: SharpSDL3.Sdl.SetGPUTextureName
- uid: SharpSDL3.Sdl.SetGPUViewport*
  commentId: Overload:SharpSDL3.Sdl.SetGPUViewport
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetGPUViewport_System_IntPtr_SharpSDL3_Structs_GpuViewport__
  name: SetGPUViewport
  nameWithType: Sdl.SetGPUViewport
  fullName: SharpSDL3.Sdl.SetGPUViewport
- uid: SharpSDL3.Structs.GpuViewport
  commentId: T:SharpSDL3.Structs.GpuViewport
  parent: SharpSDL3.Structs
  href: SharpSDL3.Structs.GpuViewport.html
  name: GpuViewport
  nameWithType: GpuViewport
  fullName: SharpSDL3.Structs.GpuViewport
- uid: SharpSDL3.Sdl.SubmitGPUCommandBuffer*
  commentId: Overload:SharpSDL3.Sdl.SubmitGPUCommandBuffer
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SubmitGPUCommandBuffer_System_IntPtr_
  name: SubmitGPUCommandBuffer
  nameWithType: Sdl.SubmitGPUCommandBuffer
  fullName: SharpSDL3.Sdl.SubmitGPUCommandBuffer
- uid: SharpSDL3.Sdl.ReleaseGPUFence(System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.ReleaseGPUFence(System.IntPtr,System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReleaseGPUFence_System_IntPtr_System_IntPtr_
  name: ReleaseGPUFence(nint, nint)
  nameWithType: Sdl.ReleaseGPUFence(nint, nint)
  fullName: SharpSDL3.Sdl.ReleaseGPUFence(nint, nint)
  nameWithType.vb: Sdl.ReleaseGPUFence(IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.ReleaseGPUFence(System.IntPtr, System.IntPtr)
  name.vb: ReleaseGPUFence(IntPtr, IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.ReleaseGPUFence(System.IntPtr,System.IntPtr)
    name: ReleaseGPUFence
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReleaseGPUFence_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.ReleaseGPUFence(System.IntPtr,System.IntPtr)
    name: ReleaseGPUFence
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReleaseGPUFence_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.SubmitGPUCommandBufferAndAcquireFence*
  commentId: Overload:SharpSDL3.Sdl.SubmitGPUCommandBufferAndAcquireFence
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SubmitGPUCommandBufferAndAcquireFence_System_IntPtr_
  name: SubmitGPUCommandBufferAndAcquireFence
  nameWithType: Sdl.SubmitGPUCommandBufferAndAcquireFence
  fullName: SharpSDL3.Sdl.SubmitGPUCommandBufferAndAcquireFence
- uid: SharpSDL3.Sdl.UnmapGPUTransferBuffer*
  commentId: Overload:SharpSDL3.Sdl.UnmapGPUTransferBuffer
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UnmapGPUTransferBuffer_System_IntPtr_System_IntPtr_
  name: UnmapGPUTransferBuffer
  nameWithType: Sdl.UnmapGPUTransferBuffer
  fullName: SharpSDL3.Sdl.UnmapGPUTransferBuffer
- uid: SharpSDL3.Sdl.UploadToGPUBuffer*
  commentId: Overload:SharpSDL3.Sdl.UploadToGPUBuffer
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UploadToGPUBuffer_System_IntPtr_SharpSDL3_Structs_GpuTransferBufferLocation__SharpSDL3_Structs_GpuBufferRegion__System_Boolean_
  name: UploadToGPUBuffer
  nameWithType: Sdl.UploadToGPUBuffer
  fullName: SharpSDL3.Sdl.UploadToGPUBuffer
- uid: SharpSDL3.Sdl.UploadToGPUTexture*
  commentId: Overload:SharpSDL3.Sdl.UploadToGPUTexture
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UploadToGPUTexture_System_IntPtr_SharpSDL3_Structs_GpuTextureTransferInfo__SharpSDL3_Structs_GpuTextureRegion__System_Boolean_
  name: UploadToGPUTexture
  nameWithType: Sdl.UploadToGPUTexture
  fullName: SharpSDL3.Sdl.UploadToGPUTexture
- uid: SharpSDL3.Sdl.WaitAndAcquireGPUSwapchainTexture*
  commentId: Overload:SharpSDL3.Sdl.WaitAndAcquireGPUSwapchainTexture
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WaitAndAcquireGPUSwapchainTexture_System_IntPtr_System_IntPtr_System_IntPtr__System_UInt32__System_UInt32__
  name: WaitAndAcquireGPUSwapchainTexture
  nameWithType: Sdl.WaitAndAcquireGPUSwapchainTexture
  fullName: SharpSDL3.Sdl.WaitAndAcquireGPUSwapchainTexture
- uid: SharpSDL3.Sdl.WaitForGPUIdle(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.WaitForGPUIdle(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WaitForGPUIdle_System_IntPtr_
  name: WaitForGPUIdle(nint)
  nameWithType: Sdl.WaitForGPUIdle(nint)
  fullName: SharpSDL3.Sdl.WaitForGPUIdle(nint)
  nameWithType.vb: Sdl.WaitForGPUIdle(IntPtr)
  fullName.vb: SharpSDL3.Sdl.WaitForGPUIdle(System.IntPtr)
  name.vb: WaitForGPUIdle(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.WaitForGPUIdle(System.IntPtr)
    name: WaitForGPUIdle
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WaitForGPUIdle_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.WaitForGPUIdle(System.IntPtr)
    name: WaitForGPUIdle
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WaitForGPUIdle_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.WaitForGPUFences*
  commentId: Overload:SharpSDL3.Sdl.WaitForGPUFences
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WaitForGPUFences_System_IntPtr_System_Boolean_System_Span_System_IntPtr__System_UInt32_
  name: WaitForGPUFences
  nameWithType: Sdl.WaitForGPUFences
  fullName: SharpSDL3.Sdl.WaitForGPUFences
- uid: SharpSDL3.Sdl.WaitForGPUFences(System.IntPtr,System.Boolean,System.Span{System.IntPtr},System.UInt32)
  commentId: M:SharpSDL3.Sdl.WaitForGPUFences(System.IntPtr,System.Boolean,System.Span{System.IntPtr},System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WaitForGPUFences_System_IntPtr_System_Boolean_System_Span_System_IntPtr__System_UInt32_
  name: WaitForGPUFences(nint, bool, Span<nint>, uint)
  nameWithType: Sdl.WaitForGPUFences(nint, bool, Span<nint>, uint)
  fullName: SharpSDL3.Sdl.WaitForGPUFences(nint, bool, System.Span<nint>, uint)
  nameWithType.vb: Sdl.WaitForGPUFences(IntPtr, Boolean, Span(Of IntPtr), UInteger)
  fullName.vb: SharpSDL3.Sdl.WaitForGPUFences(System.IntPtr, Boolean, System.Span(Of System.IntPtr), UInteger)
  name.vb: WaitForGPUFences(IntPtr, Boolean, Span(Of IntPtr), UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.WaitForGPUFences(System.IntPtr,System.Boolean,System.Span{System.IntPtr},System.UInt32)
    name: WaitForGPUFences
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WaitForGPUFences_System_IntPtr_System_Boolean_System_Span_System_IntPtr__System_UInt32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.WaitForGPUFences(System.IntPtr,System.Boolean,System.Span{System.IntPtr},System.UInt32)
    name: WaitForGPUFences
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WaitForGPUFences_System_IntPtr_System_Boolean_System_Span_System_IntPtr__System_UInt32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.WaitForGPUIdle*
  commentId: Overload:SharpSDL3.Sdl.WaitForGPUIdle
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WaitForGPUIdle_System_IntPtr_
  name: WaitForGPUIdle
  nameWithType: Sdl.WaitForGPUIdle
  fullName: SharpSDL3.Sdl.WaitForGPUIdle
- uid: SharpSDL3.Sdl.WaitForGPUSwapchain*
  commentId: Overload:SharpSDL3.Sdl.WaitForGPUSwapchain
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WaitForGPUSwapchain_System_IntPtr_System_IntPtr_
  name: WaitForGPUSwapchain
  nameWithType: Sdl.WaitForGPUSwapchain
  fullName: SharpSDL3.Sdl.WaitForGPUSwapchain
- uid: SharpSDL3.Sdl.WindowSupportsGPUPresentMode*
  commentId: Overload:SharpSDL3.Sdl.WindowSupportsGPUPresentMode
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WindowSupportsGPUPresentMode_System_IntPtr_System_IntPtr_SharpSDL3_Enums_GpuPresentMode_
  name: WindowSupportsGPUPresentMode
  nameWithType: Sdl.WindowSupportsGPUPresentMode
  fullName: SharpSDL3.Sdl.WindowSupportsGPUPresentMode
- uid: SharpSDL3.Sdl.WindowSupportsGPUSwapchainComposition*
  commentId: Overload:SharpSDL3.Sdl.WindowSupportsGPUSwapchainComposition
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WindowSupportsGPUSwapchainComposition_System_IntPtr_System_IntPtr_SharpSDL3_Enums_GpuSwapchainComposition_
  name: WindowSupportsGPUSwapchainComposition
  nameWithType: Sdl.WindowSupportsGPUSwapchainComposition
  fullName: SharpSDL3.Sdl.WindowSupportsGPUSwapchainComposition
- uid: SharpSDL3.Sdl.OpenHaptic(System.UInt32)
  commentId: M:SharpSDL3.Sdl.OpenHaptic(System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_OpenHaptic_System_UInt32_
  name: OpenHaptic(uint)
  nameWithType: Sdl.OpenHaptic(uint)
  fullName: SharpSDL3.Sdl.OpenHaptic(uint)
  nameWithType.vb: Sdl.OpenHaptic(UInteger)
  fullName.vb: SharpSDL3.Sdl.OpenHaptic(UInteger)
  name.vb: OpenHaptic(UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.OpenHaptic(System.UInt32)
    name: OpenHaptic
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_OpenHaptic_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.OpenHaptic(System.UInt32)
    name: OpenHaptic
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_OpenHaptic_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.CloseHaptic*
  commentId: Overload:SharpSDL3.Sdl.CloseHaptic
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CloseHaptic_System_IntPtr_
  name: CloseHaptic
  nameWithType: Sdl.CloseHaptic
  fullName: SharpSDL3.Sdl.CloseHaptic
- uid: SharpSDL3.Sdl.DestroyHapticEffect(System.IntPtr,System.Int32)
  commentId: M:SharpSDL3.Sdl.DestroyHapticEffect(System.IntPtr,System.Int32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyHapticEffect_System_IntPtr_System_Int32_
  name: DestroyHapticEffect(nint, int)
  nameWithType: Sdl.DestroyHapticEffect(nint, int)
  fullName: SharpSDL3.Sdl.DestroyHapticEffect(nint, int)
  nameWithType.vb: Sdl.DestroyHapticEffect(IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.DestroyHapticEffect(System.IntPtr, Integer)
  name.vb: DestroyHapticEffect(IntPtr, Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.DestroyHapticEffect(System.IntPtr,System.Int32)
    name: DestroyHapticEffect
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyHapticEffect_System_IntPtr_System_Int32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.DestroyHapticEffect(System.IntPtr,System.Int32)
    name: DestroyHapticEffect
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyHapticEffect_System_IntPtr_System_Int32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.RunHapticEffect(System.IntPtr,System.Int32,System.UInt32)
  commentId: M:SharpSDL3.Sdl.RunHapticEffect(System.IntPtr,System.Int32,System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RunHapticEffect_System_IntPtr_System_Int32_System_UInt32_
  name: RunHapticEffect(nint, int, uint)
  nameWithType: Sdl.RunHapticEffect(nint, int, uint)
  fullName: SharpSDL3.Sdl.RunHapticEffect(nint, int, uint)
  nameWithType.vb: Sdl.RunHapticEffect(IntPtr, Integer, UInteger)
  fullName.vb: SharpSDL3.Sdl.RunHapticEffect(System.IntPtr, Integer, UInteger)
  name.vb: RunHapticEffect(IntPtr, Integer, UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.RunHapticEffect(System.IntPtr,System.Int32,System.UInt32)
    name: RunHapticEffect
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RunHapticEffect_System_IntPtr_System_Int32_System_UInt32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.RunHapticEffect(System.IntPtr,System.Int32,System.UInt32)
    name: RunHapticEffect
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RunHapticEffect_System_IntPtr_System_Int32_System_UInt32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.UpdateHapticEffect(System.IntPtr,System.Int32,SharpSDL3.Structs.HapticEffect@)
  commentId: M:SharpSDL3.Sdl.UpdateHapticEffect(System.IntPtr,System.Int32,SharpSDL3.Structs.HapticEffect@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UpdateHapticEffect_System_IntPtr_System_Int32_SharpSDL3_Structs_HapticEffect__
  name: UpdateHapticEffect(nint, int, ref HapticEffect)
  nameWithType: Sdl.UpdateHapticEffect(nint, int, ref HapticEffect)
  fullName: SharpSDL3.Sdl.UpdateHapticEffect(nint, int, ref SharpSDL3.Structs.HapticEffect)
  nameWithType.vb: Sdl.UpdateHapticEffect(IntPtr, Integer, HapticEffect)
  fullName.vb: SharpSDL3.Sdl.UpdateHapticEffect(System.IntPtr, Integer, SharpSDL3.Structs.HapticEffect)
  name.vb: UpdateHapticEffect(IntPtr, Integer, HapticEffect)
  spec.csharp:
  - uid: SharpSDL3.Sdl.UpdateHapticEffect(System.IntPtr,System.Int32,SharpSDL3.Structs.HapticEffect@)
    name: UpdateHapticEffect
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UpdateHapticEffect_System_IntPtr_System_Int32_SharpSDL3_Structs_HapticEffect__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: ref
  - name: " "
  - uid: SharpSDL3.Structs.HapticEffect
    name: HapticEffect
    href: SharpSDL3.Structs.HapticEffect.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.UpdateHapticEffect(System.IntPtr,System.Int32,SharpSDL3.Structs.HapticEffect@)
    name: UpdateHapticEffect
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UpdateHapticEffect_System_IntPtr_System_Int32_SharpSDL3_Structs_HapticEffect__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.HapticEffect
    name: HapticEffect
    href: SharpSDL3.Structs.HapticEffect.html
  - name: )
- uid: SharpSDL3.Sdl.CreateHapticEffect*
  commentId: Overload:SharpSDL3.Sdl.CreateHapticEffect
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateHapticEffect_System_IntPtr_SharpSDL3_Structs_HapticEffect__
  name: CreateHapticEffect
  nameWithType: Sdl.CreateHapticEffect
  fullName: SharpSDL3.Sdl.CreateHapticEffect
- uid: SharpSDL3.Structs.HapticEffect
  commentId: T:SharpSDL3.Structs.HapticEffect
  parent: SharpSDL3.Structs
  href: SharpSDL3.Structs.HapticEffect.html
  name: HapticEffect
  nameWithType: HapticEffect
  fullName: SharpSDL3.Structs.HapticEffect
- uid: SharpSDL3.Sdl.CreateHapticEffect(System.IntPtr,SharpSDL3.Structs.HapticEffect@)
  commentId: M:SharpSDL3.Sdl.CreateHapticEffect(System.IntPtr,SharpSDL3.Structs.HapticEffect@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateHapticEffect_System_IntPtr_SharpSDL3_Structs_HapticEffect__
  name: CreateHapticEffect(nint, ref HapticEffect)
  nameWithType: Sdl.CreateHapticEffect(nint, ref HapticEffect)
  fullName: SharpSDL3.Sdl.CreateHapticEffect(nint, ref SharpSDL3.Structs.HapticEffect)
  nameWithType.vb: Sdl.CreateHapticEffect(IntPtr, HapticEffect)
  fullName.vb: SharpSDL3.Sdl.CreateHapticEffect(System.IntPtr, SharpSDL3.Structs.HapticEffect)
  name.vb: CreateHapticEffect(IntPtr, HapticEffect)
  spec.csharp:
  - uid: SharpSDL3.Sdl.CreateHapticEffect(System.IntPtr,SharpSDL3.Structs.HapticEffect@)
    name: CreateHapticEffect
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateHapticEffect_System_IntPtr_SharpSDL3_Structs_HapticEffect__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: ref
  - name: " "
  - uid: SharpSDL3.Structs.HapticEffect
    name: HapticEffect
    href: SharpSDL3.Structs.HapticEffect.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.CreateHapticEffect(System.IntPtr,SharpSDL3.Structs.HapticEffect@)
    name: CreateHapticEffect
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateHapticEffect_System_IntPtr_SharpSDL3_Structs_HapticEffect__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.HapticEffect
    name: HapticEffect
    href: SharpSDL3.Structs.HapticEffect.html
  - name: )
- uid: SharpSDL3.Sdl.DestroyHapticEffect*
  commentId: Overload:SharpSDL3.Sdl.DestroyHapticEffect
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyHapticEffect_System_IntPtr_System_Int32_
  name: DestroyHapticEffect
  nameWithType: Sdl.DestroyHapticEffect
  fullName: SharpSDL3.Sdl.DestroyHapticEffect
- uid: SharpSDL3.Sdl.GetHapticFeatures(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetHapticFeatures(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetHapticFeatures_System_IntPtr_
  name: GetHapticFeatures(nint)
  nameWithType: Sdl.GetHapticFeatures(nint)
  fullName: SharpSDL3.Sdl.GetHapticFeatures(nint)
  nameWithType.vb: Sdl.GetHapticFeatures(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetHapticFeatures(System.IntPtr)
  name.vb: GetHapticFeatures(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetHapticFeatures(System.IntPtr)
    name: GetHapticFeatures
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetHapticFeatures_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetHapticFeatures(System.IntPtr)
    name: GetHapticFeatures
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetHapticFeatures_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GetHapticEffectStatus*
  commentId: Overload:SharpSDL3.Sdl.GetHapticEffectStatus
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetHapticEffectStatus_System_IntPtr_System_Int32_
  name: GetHapticEffectStatus
  nameWithType: Sdl.GetHapticEffectStatus
  fullName: SharpSDL3.Sdl.GetHapticEffectStatus
- uid: SharpSDL3.Sdl.GetMaxHapticEffects(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetMaxHapticEffects(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetMaxHapticEffects_System_IntPtr_
  name: GetMaxHapticEffects(nint)
  nameWithType: Sdl.GetMaxHapticEffects(nint)
  fullName: SharpSDL3.Sdl.GetMaxHapticEffects(nint)
  nameWithType.vb: Sdl.GetMaxHapticEffects(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetMaxHapticEffects(System.IntPtr)
  name.vb: GetMaxHapticEffects(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetMaxHapticEffects(System.IntPtr)
    name: GetMaxHapticEffects
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetMaxHapticEffects_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetMaxHapticEffects(System.IntPtr)
    name: GetMaxHapticEffects
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetMaxHapticEffects_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GetHapticFeatures*
  commentId: Overload:SharpSDL3.Sdl.GetHapticFeatures
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetHapticFeatures_System_IntPtr_
  name: GetHapticFeatures
  nameWithType: Sdl.GetHapticFeatures
  fullName: SharpSDL3.Sdl.GetHapticFeatures
- uid: SharpSDL3.Sdl.GetHapticFromId*
  commentId: Overload:SharpSDL3.Sdl.GetHapticFromId
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetHapticFromId_System_UInt32_
  name: GetHapticFromId
  nameWithType: Sdl.GetHapticFromId
  fullName: SharpSDL3.Sdl.GetHapticFromId
- uid: SharpSDL3.Sdl.GetHapticId*
  commentId: Overload:SharpSDL3.Sdl.GetHapticId
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetHapticId_System_IntPtr_
  name: GetHapticId
  nameWithType: Sdl.GetHapticId
  fullName: SharpSDL3.Sdl.GetHapticId
- uid: SharpSDL3.Sdl.GetHapticName*
  commentId: Overload:SharpSDL3.Sdl.GetHapticName
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetHapticName_System_IntPtr_
  name: GetHapticName
  nameWithType: Sdl.GetHapticName
  fullName: SharpSDL3.Sdl.GetHapticName
- uid: SharpSDL3.Sdl.GetHapticName(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetHapticName(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetHapticName_System_IntPtr_
  name: GetHapticName(nint)
  nameWithType: Sdl.GetHapticName(nint)
  fullName: SharpSDL3.Sdl.GetHapticName(nint)
  nameWithType.vb: Sdl.GetHapticName(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetHapticName(System.IntPtr)
  name.vb: GetHapticName(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetHapticName(System.IntPtr)
    name: GetHapticName
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetHapticName_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetHapticName(System.IntPtr)
    name: GetHapticName
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetHapticName_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GetHapticNameforId*
  commentId: Overload:SharpSDL3.Sdl.GetHapticNameforId
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetHapticNameforId_System_UInt32_
  name: GetHapticNameforId
  nameWithType: Sdl.GetHapticNameforId
  fullName: SharpSDL3.Sdl.GetHapticNameforId
- uid: SharpSDL3.Sdl.GetHaptics*
  commentId: Overload:SharpSDL3.Sdl.GetHaptics
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetHaptics
  name: GetHaptics
  nameWithType: Sdl.GetHaptics
  fullName: SharpSDL3.Sdl.GetHaptics
- uid: SharpSDL3.Sdl.GetMaxHapticEffectsPlaying(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetMaxHapticEffectsPlaying(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetMaxHapticEffectsPlaying_System_IntPtr_
  name: GetMaxHapticEffectsPlaying(nint)
  nameWithType: Sdl.GetMaxHapticEffectsPlaying(nint)
  fullName: SharpSDL3.Sdl.GetMaxHapticEffectsPlaying(nint)
  nameWithType.vb: Sdl.GetMaxHapticEffectsPlaying(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetMaxHapticEffectsPlaying(System.IntPtr)
  name.vb: GetMaxHapticEffectsPlaying(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetMaxHapticEffectsPlaying(System.IntPtr)
    name: GetMaxHapticEffectsPlaying
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetMaxHapticEffectsPlaying_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetMaxHapticEffectsPlaying(System.IntPtr)
    name: GetMaxHapticEffectsPlaying
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetMaxHapticEffectsPlaying_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GetMaxHapticEffects*
  commentId: Overload:SharpSDL3.Sdl.GetMaxHapticEffects
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetMaxHapticEffects_System_IntPtr_
  name: GetMaxHapticEffects
  nameWithType: Sdl.GetMaxHapticEffects
  fullName: SharpSDL3.Sdl.GetMaxHapticEffects
- uid: SharpSDL3.Sdl.GetMaxHapticEffectsPlaying*
  commentId: Overload:SharpSDL3.Sdl.GetMaxHapticEffectsPlaying
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetMaxHapticEffectsPlaying_System_IntPtr_
  name: GetMaxHapticEffectsPlaying
  nameWithType: Sdl.GetMaxHapticEffectsPlaying
  fullName: SharpSDL3.Sdl.GetMaxHapticEffectsPlaying
- uid: SharpSDL3.Sdl.GetNumHapticAxes*
  commentId: Overload:SharpSDL3.Sdl.GetNumHapticAxes
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetNumHapticAxes_System_IntPtr_
  name: GetNumHapticAxes
  nameWithType: Sdl.GetNumHapticAxes
  fullName: SharpSDL3.Sdl.GetNumHapticAxes
- uid: SharpSDL3.Sdl.PlayHapticRumble(System.IntPtr,System.Single,System.UInt32)
  commentId: M:SharpSDL3.Sdl.PlayHapticRumble(System.IntPtr,System.Single,System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_PlayHapticRumble_System_IntPtr_System_Single_System_UInt32_
  name: PlayHapticRumble(nint, float, uint)
  nameWithType: Sdl.PlayHapticRumble(nint, float, uint)
  fullName: SharpSDL3.Sdl.PlayHapticRumble(nint, float, uint)
  nameWithType.vb: Sdl.PlayHapticRumble(IntPtr, Single, UInteger)
  fullName.vb: SharpSDL3.Sdl.PlayHapticRumble(System.IntPtr, Single, UInteger)
  name.vb: PlayHapticRumble(IntPtr, Single, UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.PlayHapticRumble(System.IntPtr,System.Single,System.UInt32)
    name: PlayHapticRumble
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_PlayHapticRumble_System_IntPtr_System_Single_System_UInt32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.PlayHapticRumble(System.IntPtr,System.Single,System.UInt32)
    name: PlayHapticRumble
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_PlayHapticRumble_System_IntPtr_System_Single_System_UInt32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.StopHapticRumble(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.StopHapticRumble(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_StopHapticRumble_System_IntPtr_
  name: StopHapticRumble(nint)
  nameWithType: Sdl.StopHapticRumble(nint)
  fullName: SharpSDL3.Sdl.StopHapticRumble(nint)
  nameWithType.vb: Sdl.StopHapticRumble(IntPtr)
  fullName.vb: SharpSDL3.Sdl.StopHapticRumble(System.IntPtr)
  name.vb: StopHapticRumble(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.StopHapticRumble(System.IntPtr)
    name: StopHapticRumble
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_StopHapticRumble_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.StopHapticRumble(System.IntPtr)
    name: StopHapticRumble
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_StopHapticRumble_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.InitHapticRumble*
  commentId: Overload:SharpSDL3.Sdl.InitHapticRumble
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_InitHapticRumble_System_IntPtr_
  name: InitHapticRumble
  nameWithType: Sdl.InitHapticRumble
  fullName: SharpSDL3.Sdl.InitHapticRumble
- uid: SharpSDL3.Sdl.IsHapticEffectSupported*
  commentId: Overload:SharpSDL3.Sdl.IsHapticEffectSupported
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_IsHapticEffectSupported_System_IntPtr_SharpSDL3_Structs_HapticEffect__
  name: IsHapticEffectSupported
  nameWithType: Sdl.IsHapticEffectSupported
  fullName: SharpSDL3.Sdl.IsHapticEffectSupported
- uid: SharpSDL3.Sdl.IsHapticRumbleSupported*
  commentId: Overload:SharpSDL3.Sdl.IsHapticRumbleSupported
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_IsHapticRumbleSupported_System_IntPtr_
  name: IsHapticRumbleSupported
  nameWithType: Sdl.IsHapticRumbleSupported
  fullName: SharpSDL3.Sdl.IsHapticRumbleSupported
- uid: SharpSDL3.Sdl.OpenHapticFromJoystick(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.OpenHapticFromJoystick(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_OpenHapticFromJoystick_System_IntPtr_
  name: OpenHapticFromJoystick(nint)
  nameWithType: Sdl.OpenHapticFromJoystick(nint)
  fullName: SharpSDL3.Sdl.OpenHapticFromJoystick(nint)
  nameWithType.vb: Sdl.OpenHapticFromJoystick(IntPtr)
  fullName.vb: SharpSDL3.Sdl.OpenHapticFromJoystick(System.IntPtr)
  name.vb: OpenHapticFromJoystick(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.OpenHapticFromJoystick(System.IntPtr)
    name: OpenHapticFromJoystick
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_OpenHapticFromJoystick_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.OpenHapticFromJoystick(System.IntPtr)
    name: OpenHapticFromJoystick
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_OpenHapticFromJoystick_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.IsJoystickHaptic*
  commentId: Overload:SharpSDL3.Sdl.IsJoystickHaptic
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_IsJoystickHaptic_System_IntPtr_
  name: IsJoystickHaptic
  nameWithType: Sdl.IsJoystickHaptic
  fullName: SharpSDL3.Sdl.IsJoystickHaptic
- uid: SharpSDL3.Sdl.OpenHapticFromMouse
  commentId: M:SharpSDL3.Sdl.OpenHapticFromMouse
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_OpenHapticFromMouse
  name: OpenHapticFromMouse()
  nameWithType: Sdl.OpenHapticFromMouse()
  fullName: SharpSDL3.Sdl.OpenHapticFromMouse()
  spec.csharp:
  - uid: SharpSDL3.Sdl.OpenHapticFromMouse
    name: OpenHapticFromMouse
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_OpenHapticFromMouse
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.OpenHapticFromMouse
    name: OpenHapticFromMouse
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_OpenHapticFromMouse
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.IsMouseHaptic*
  commentId: Overload:SharpSDL3.Sdl.IsMouseHaptic
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_IsMouseHaptic
  name: IsMouseHaptic
  nameWithType: Sdl.IsMouseHaptic
  fullName: SharpSDL3.Sdl.IsMouseHaptic
- uid: SharpSDL3.Sdl.CloseHaptic(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.CloseHaptic(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CloseHaptic_System_IntPtr_
  name: CloseHaptic(nint)
  nameWithType: Sdl.CloseHaptic(nint)
  fullName: SharpSDL3.Sdl.CloseHaptic(nint)
  nameWithType.vb: Sdl.CloseHaptic(IntPtr)
  fullName.vb: SharpSDL3.Sdl.CloseHaptic(System.IntPtr)
  name.vb: CloseHaptic(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.CloseHaptic(System.IntPtr)
    name: CloseHaptic
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CloseHaptic_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.CloseHaptic(System.IntPtr)
    name: CloseHaptic
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CloseHaptic_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GetHaptics
  commentId: M:SharpSDL3.Sdl.GetHaptics
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetHaptics
  name: GetHaptics()
  nameWithType: Sdl.GetHaptics()
  fullName: SharpSDL3.Sdl.GetHaptics()
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetHaptics
    name: GetHaptics
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetHaptics
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetHaptics
    name: GetHaptics
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetHaptics
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.SetHapticAutocenter(System.IntPtr,System.Int32)
  commentId: M:SharpSDL3.Sdl.SetHapticAutocenter(System.IntPtr,System.Int32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetHapticAutocenter_System_IntPtr_System_Int32_
  name: SetHapticAutocenter(nint, int)
  nameWithType: Sdl.SetHapticAutocenter(nint, int)
  fullName: SharpSDL3.Sdl.SetHapticAutocenter(nint, int)
  nameWithType.vb: Sdl.SetHapticAutocenter(IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.SetHapticAutocenter(System.IntPtr, Integer)
  name.vb: SetHapticAutocenter(IntPtr, Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetHapticAutocenter(System.IntPtr,System.Int32)
    name: SetHapticAutocenter
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetHapticAutocenter_System_IntPtr_System_Int32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetHapticAutocenter(System.IntPtr,System.Int32)
    name: SetHapticAutocenter
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetHapticAutocenter_System_IntPtr_System_Int32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.SetHapticGain(System.IntPtr,System.Int32)
  commentId: M:SharpSDL3.Sdl.SetHapticGain(System.IntPtr,System.Int32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetHapticGain_System_IntPtr_System_Int32_
  name: SetHapticGain(nint, int)
  nameWithType: Sdl.SetHapticGain(nint, int)
  fullName: SharpSDL3.Sdl.SetHapticGain(nint, int)
  nameWithType.vb: Sdl.SetHapticGain(IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.SetHapticGain(System.IntPtr, Integer)
  name.vb: SetHapticGain(IntPtr, Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetHapticGain(System.IntPtr,System.Int32)
    name: SetHapticGain
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetHapticGain_System_IntPtr_System_Int32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetHapticGain(System.IntPtr,System.Int32)
    name: SetHapticGain
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetHapticGain_System_IntPtr_System_Int32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.OpenHaptic*
  commentId: Overload:SharpSDL3.Sdl.OpenHaptic
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_OpenHaptic_System_UInt32_
  name: OpenHaptic
  nameWithType: Sdl.OpenHaptic
  fullName: SharpSDL3.Sdl.OpenHaptic
- uid: SharpSDL3.Sdl.IsJoystickHaptic(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.IsJoystickHaptic(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_IsJoystickHaptic_System_IntPtr_
  name: IsJoystickHaptic(nint)
  nameWithType: Sdl.IsJoystickHaptic(nint)
  fullName: SharpSDL3.Sdl.IsJoystickHaptic(nint)
  nameWithType.vb: Sdl.IsJoystickHaptic(IntPtr)
  fullName.vb: SharpSDL3.Sdl.IsJoystickHaptic(System.IntPtr)
  name.vb: IsJoystickHaptic(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.IsJoystickHaptic(System.IntPtr)
    name: IsJoystickHaptic
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_IsJoystickHaptic_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.IsJoystickHaptic(System.IntPtr)
    name: IsJoystickHaptic
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_IsJoystickHaptic_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.OpenHapticFromJoystick*
  commentId: Overload:SharpSDL3.Sdl.OpenHapticFromJoystick
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_OpenHapticFromJoystick_System_IntPtr_
  name: OpenHapticFromJoystick
  nameWithType: Sdl.OpenHapticFromJoystick
  fullName: SharpSDL3.Sdl.OpenHapticFromJoystick
- uid: SharpSDL3.Sdl.IsMouseHaptic
  commentId: M:SharpSDL3.Sdl.IsMouseHaptic
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_IsMouseHaptic
  name: IsMouseHaptic()
  nameWithType: Sdl.IsMouseHaptic()
  fullName: SharpSDL3.Sdl.IsMouseHaptic()
  spec.csharp:
  - uid: SharpSDL3.Sdl.IsMouseHaptic
    name: IsMouseHaptic
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_IsMouseHaptic
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.IsMouseHaptic
    name: IsMouseHaptic
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_IsMouseHaptic
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.OpenHapticFromMouse*
  commentId: Overload:SharpSDL3.Sdl.OpenHapticFromMouse
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_OpenHapticFromMouse
  name: OpenHapticFromMouse
  nameWithType: Sdl.OpenHapticFromMouse
  fullName: SharpSDL3.Sdl.OpenHapticFromMouse
- uid: SharpSDL3.Sdl.ResumeHaptic(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.ResumeHaptic(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ResumeHaptic_System_IntPtr_
  name: ResumeHaptic(nint)
  nameWithType: Sdl.ResumeHaptic(nint)
  fullName: SharpSDL3.Sdl.ResumeHaptic(nint)
  nameWithType.vb: Sdl.ResumeHaptic(IntPtr)
  fullName.vb: SharpSDL3.Sdl.ResumeHaptic(System.IntPtr)
  name.vb: ResumeHaptic(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.ResumeHaptic(System.IntPtr)
    name: ResumeHaptic
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ResumeHaptic_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.ResumeHaptic(System.IntPtr)
    name: ResumeHaptic
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ResumeHaptic_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.PauseHaptic*
  commentId: Overload:SharpSDL3.Sdl.PauseHaptic
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_PauseHaptic_System_IntPtr_
  name: PauseHaptic
  nameWithType: Sdl.PauseHaptic
  fullName: SharpSDL3.Sdl.PauseHaptic
- uid: SharpSDL3.Sdl.InitHapticRumble(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.InitHapticRumble(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_InitHapticRumble_System_IntPtr_
  name: InitHapticRumble(nint)
  nameWithType: Sdl.InitHapticRumble(nint)
  fullName: SharpSDL3.Sdl.InitHapticRumble(nint)
  nameWithType.vb: Sdl.InitHapticRumble(IntPtr)
  fullName.vb: SharpSDL3.Sdl.InitHapticRumble(System.IntPtr)
  name.vb: InitHapticRumble(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.InitHapticRumble(System.IntPtr)
    name: InitHapticRumble
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_InitHapticRumble_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.InitHapticRumble(System.IntPtr)
    name: InitHapticRumble
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_InitHapticRumble_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.PlayHapticRumble*
  commentId: Overload:SharpSDL3.Sdl.PlayHapticRumble
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_PlayHapticRumble_System_IntPtr_System_Single_System_UInt32_
  name: PlayHapticRumble
  nameWithType: Sdl.PlayHapticRumble
  fullName: SharpSDL3.Sdl.PlayHapticRumble
- uid: SharpSDL3.Sdl.PauseHaptic(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.PauseHaptic(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_PauseHaptic_System_IntPtr_
  name: PauseHaptic(nint)
  nameWithType: Sdl.PauseHaptic(nint)
  fullName: SharpSDL3.Sdl.PauseHaptic(nint)
  nameWithType.vb: Sdl.PauseHaptic(IntPtr)
  fullName.vb: SharpSDL3.Sdl.PauseHaptic(System.IntPtr)
  name.vb: PauseHaptic(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.PauseHaptic(System.IntPtr)
    name: PauseHaptic
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_PauseHaptic_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.PauseHaptic(System.IntPtr)
    name: PauseHaptic
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_PauseHaptic_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.ResumeHaptic*
  commentId: Overload:SharpSDL3.Sdl.ResumeHaptic
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ResumeHaptic_System_IntPtr_
  name: ResumeHaptic
  nameWithType: Sdl.ResumeHaptic
  fullName: SharpSDL3.Sdl.ResumeHaptic
- uid: SharpSDL3.Sdl.GetHapticEffectStatus(System.IntPtr,System.Int32)
  commentId: M:SharpSDL3.Sdl.GetHapticEffectStatus(System.IntPtr,System.Int32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetHapticEffectStatus_System_IntPtr_System_Int32_
  name: GetHapticEffectStatus(nint, int)
  nameWithType: Sdl.GetHapticEffectStatus(nint, int)
  fullName: SharpSDL3.Sdl.GetHapticEffectStatus(nint, int)
  nameWithType.vb: Sdl.GetHapticEffectStatus(IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.GetHapticEffectStatus(System.IntPtr, Integer)
  name.vb: GetHapticEffectStatus(IntPtr, Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetHapticEffectStatus(System.IntPtr,System.Int32)
    name: GetHapticEffectStatus
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetHapticEffectStatus_System_IntPtr_System_Int32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetHapticEffectStatus(System.IntPtr,System.Int32)
    name: GetHapticEffectStatus
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetHapticEffectStatus_System_IntPtr_System_Int32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.StopHapticEffect(System.IntPtr,System.Int32)
  commentId: M:SharpSDL3.Sdl.StopHapticEffect(System.IntPtr,System.Int32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_StopHapticEffect_System_IntPtr_System_Int32_
  name: StopHapticEffect(nint, int)
  nameWithType: Sdl.StopHapticEffect(nint, int)
  fullName: SharpSDL3.Sdl.StopHapticEffect(nint, int)
  nameWithType.vb: Sdl.StopHapticEffect(IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.StopHapticEffect(System.IntPtr, Integer)
  name.vb: StopHapticEffect(IntPtr, Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.StopHapticEffect(System.IntPtr,System.Int32)
    name: StopHapticEffect
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_StopHapticEffect_System_IntPtr_System_Int32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.StopHapticEffect(System.IntPtr,System.Int32)
    name: StopHapticEffect
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_StopHapticEffect_System_IntPtr_System_Int32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.StopHapticEffects(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.StopHapticEffects(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_StopHapticEffects_System_IntPtr_
  name: StopHapticEffects(nint)
  nameWithType: Sdl.StopHapticEffects(nint)
  fullName: SharpSDL3.Sdl.StopHapticEffects(nint)
  nameWithType.vb: Sdl.StopHapticEffects(IntPtr)
  fullName.vb: SharpSDL3.Sdl.StopHapticEffects(System.IntPtr)
  name.vb: StopHapticEffects(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.StopHapticEffects(System.IntPtr)
    name: StopHapticEffects
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_StopHapticEffects_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.StopHapticEffects(System.IntPtr)
    name: StopHapticEffects
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_StopHapticEffects_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.RunHapticEffect*
  commentId: Overload:SharpSDL3.Sdl.RunHapticEffect
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RunHapticEffect_System_IntPtr_System_Int32_System_UInt32_
  name: RunHapticEffect
  nameWithType: Sdl.RunHapticEffect
  fullName: SharpSDL3.Sdl.RunHapticEffect
- uid: SharpSDL3.Sdl.SetHapticAutocenter*
  commentId: Overload:SharpSDL3.Sdl.SetHapticAutocenter
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetHapticAutocenter_System_IntPtr_System_Int32_
  name: SetHapticAutocenter
  nameWithType: Sdl.SetHapticAutocenter
  fullName: SharpSDL3.Sdl.SetHapticAutocenter
- uid: SharpSDL3.Sdl.SetHapticGain*
  commentId: Overload:SharpSDL3.Sdl.SetHapticGain
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetHapticGain_System_IntPtr_System_Int32_
  name: SetHapticGain
  nameWithType: Sdl.SetHapticGain
  fullName: SharpSDL3.Sdl.SetHapticGain
- uid: SharpSDL3.Sdl.StopHapticEffect*
  commentId: Overload:SharpSDL3.Sdl.StopHapticEffect
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_StopHapticEffect_System_IntPtr_System_Int32_
  name: StopHapticEffect
  nameWithType: Sdl.StopHapticEffect
  fullName: SharpSDL3.Sdl.StopHapticEffect
- uid: SharpSDL3.Sdl.StopHapticEffects*
  commentId: Overload:SharpSDL3.Sdl.StopHapticEffects
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_StopHapticEffects_System_IntPtr_
  name: StopHapticEffects
  nameWithType: Sdl.StopHapticEffects
  fullName: SharpSDL3.Sdl.StopHapticEffects
- uid: SharpSDL3.Sdl.StopHapticRumble*
  commentId: Overload:SharpSDL3.Sdl.StopHapticRumble
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_StopHapticRumble_System_IntPtr_
  name: StopHapticRumble
  nameWithType: Sdl.StopHapticRumble
  fullName: SharpSDL3.Sdl.StopHapticRumble
- uid: SharpSDL3.Sdl.UpdateHapticEffect*
  commentId: Overload:SharpSDL3.Sdl.UpdateHapticEffect
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UpdateHapticEffect_System_IntPtr_System_Int32_SharpSDL3_Structs_HapticEffect__
  name: UpdateHapticEffect
  nameWithType: Sdl.UpdateHapticEffect
  fullName: SharpSDL3.Sdl.UpdateHapticEffect
- uid: SharpSDL3.Sdl.BleScan*
  commentId: Overload:SharpSDL3.Sdl.BleScan
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BleScan_SharpSDL3_Structs_SdlBool_
  name: BleScan
  nameWithType: Sdl.BleScan
  fullName: SharpSDL3.Sdl.BleScan
- uid: SharpSDL3.Sdl.Close*
  commentId: Overload:SharpSDL3.Sdl.Close
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_Close_System_IntPtr_
  name: Close
  nameWithType: Sdl.Close
  fullName: SharpSDL3.Sdl.Close
- uid: SharpSDL3.Sdl.DeviceChangeCount*
  commentId: Overload:SharpSDL3.Sdl.DeviceChangeCount
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DeviceChangeCount
  name: DeviceChangeCount
  nameWithType: Sdl.DeviceChangeCount
  fullName: SharpSDL3.Sdl.DeviceChangeCount
- uid: SharpSDL3.Sdl.Enumerate*
  commentId: Overload:SharpSDL3.Sdl.Enumerate
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_Enumerate_System_UInt16_System_UInt16_
  name: Enumerate
  nameWithType: Sdl.Enumerate
  fullName: SharpSDL3.Sdl.Enumerate
- uid: System.Span{SharpSDL3.Structs.HidDeviceInfo}
  commentId: T:System.Span{SharpSDL3.Structs.HidDeviceInfo}
  parent: System
  definition: System.Span`1
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<HidDeviceInfo>
  nameWithType: Span<HidDeviceInfo>
  fullName: System.Span<SharpSDL3.Structs.HidDeviceInfo>
  nameWithType.vb: Span(Of HidDeviceInfo)
  fullName.vb: System.Span(Of SharpSDL3.Structs.HidDeviceInfo)
  name.vb: Span(Of HidDeviceInfo)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: SharpSDL3.Structs.HidDeviceInfo
    name: HidDeviceInfo
    href: SharpSDL3.Structs.HidDeviceInfo.html
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: SharpSDL3.Structs.HidDeviceInfo
    name: HidDeviceInfo
    href: SharpSDL3.Structs.HidDeviceInfo.html
  - name: )
- uid: SharpSDL3.Sdl.Exit*
  commentId: Overload:SharpSDL3.Sdl.Exit
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_Exit
  name: Exit
  nameWithType: Sdl.Exit
  fullName: SharpSDL3.Sdl.Exit
- uid: SharpSDL3.Sdl.FreeEnumeration*
  commentId: Overload:SharpSDL3.Sdl.FreeEnumeration
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_FreeEnumeration_System_IntPtr_
  name: FreeEnumeration
  nameWithType: Sdl.FreeEnumeration
  fullName: SharpSDL3.Sdl.FreeEnumeration
- uid: SharpSDL3.Sdl.GetDeviceInfo*
  commentId: Overload:SharpSDL3.Sdl.GetDeviceInfo
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetDeviceInfo_System_IntPtr_
  name: GetDeviceInfo
  nameWithType: Sdl.GetDeviceInfo
  fullName: SharpSDL3.Sdl.GetDeviceInfo
- uid: SharpSDL3.Sdl.GetFeatureReport*
  commentId: Overload:SharpSDL3.Sdl.GetFeatureReport
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetFeatureReport_System_IntPtr_System_IntPtr_System_UIntPtr_
  name: GetFeatureReport
  nameWithType: Sdl.GetFeatureReport
  fullName: SharpSDL3.Sdl.GetFeatureReport
- uid: SharpSDL3.Sdl.GetIndexedString*
  commentId: Overload:SharpSDL3.Sdl.GetIndexedString
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetIndexedString_System_IntPtr_System_Int32_System_String_System_UIntPtr_
  name: GetIndexedString
  nameWithType: Sdl.GetIndexedString
  fullName: SharpSDL3.Sdl.GetIndexedString
- uid: SharpSDL3.Sdl.GetInputReport*
  commentId: Overload:SharpSDL3.Sdl.GetInputReport
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetInputReport_System_IntPtr_System_IntPtr_System_UIntPtr_
  name: GetInputReport
  nameWithType: Sdl.GetInputReport
  fullName: SharpSDL3.Sdl.GetInputReport
- uid: SharpSDL3.Sdl.GetManufacturerString*
  commentId: Overload:SharpSDL3.Sdl.GetManufacturerString
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetManufacturerString_System_IntPtr_System_String_System_UIntPtr_
  name: GetManufacturerString
  nameWithType: Sdl.GetManufacturerString
  fullName: SharpSDL3.Sdl.GetManufacturerString
- uid: SharpSDL3.Sdl.GetProductString*
  commentId: Overload:SharpSDL3.Sdl.GetProductString
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetProductString_System_IntPtr_System_String_System_UIntPtr_
  name: GetProductString
  nameWithType: Sdl.GetProductString
  fullName: SharpSDL3.Sdl.GetProductString
- uid: SharpSDL3.Sdl.GetReportDescriptor*
  commentId: Overload:SharpSDL3.Sdl.GetReportDescriptor
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetReportDescriptor_System_IntPtr_System_IntPtr_System_UIntPtr_
  name: GetReportDescriptor
  nameWithType: Sdl.GetReportDescriptor
  fullName: SharpSDL3.Sdl.GetReportDescriptor
- uid: SharpSDL3.Sdl.GetSerialNumberString*
  commentId: Overload:SharpSDL3.Sdl.GetSerialNumberString
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetSerialNumberString_System_IntPtr_System_String_System_UIntPtr_
  name: GetSerialNumberString
  nameWithType: Sdl.GetSerialNumberString
  fullName: SharpSDL3.Sdl.GetSerialNumberString
- uid: SharpSDL3.Sdl.Init*
  commentId: Overload:SharpSDL3.Sdl.Init
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_Init
  name: Init
  nameWithType: Sdl.Init
  fullName: SharpSDL3.Sdl.Init
- uid: SharpSDL3.Sdl.Open*
  commentId: Overload:SharpSDL3.Sdl.Open
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_Open_System_UInt16_System_UInt16_System_String_
  name: Open
  nameWithType: Sdl.Open
  fullName: SharpSDL3.Sdl.Open
- uid: SharpSDL3.Sdl.OpenPath*
  commentId: Overload:SharpSDL3.Sdl.OpenPath
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_OpenPath_System_String_
  name: OpenPath
  nameWithType: Sdl.OpenPath
  fullName: SharpSDL3.Sdl.OpenPath
- uid: SharpSDL3.Sdl.Read*
  commentId: Overload:SharpSDL3.Sdl.Read
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_Read_System_IntPtr_System_IntPtr_System_UIntPtr_
  name: Read
  nameWithType: Sdl.Read
  fullName: SharpSDL3.Sdl.Read
- uid: SharpSDL3.Sdl.ReadTimeout*
  commentId: Overload:SharpSDL3.Sdl.ReadTimeout
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReadTimeout_System_IntPtr_System_IntPtr_System_UIntPtr_System_Int32_
  name: ReadTimeout
  nameWithType: Sdl.ReadTimeout
  fullName: SharpSDL3.Sdl.ReadTimeout
- uid: SharpSDL3.Sdl.SendFeatureReport*
  commentId: Overload:SharpSDL3.Sdl.SendFeatureReport
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SendFeatureReport_System_IntPtr_System_IntPtr_System_UIntPtr_
  name: SendFeatureReport
  nameWithType: Sdl.SendFeatureReport
  fullName: SharpSDL3.Sdl.SendFeatureReport
- uid: SharpSDL3.Sdl.SetNonblocking*
  commentId: Overload:SharpSDL3.Sdl.SetNonblocking
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetNonblocking_System_IntPtr_System_Int32_
  name: SetNonblocking
  nameWithType: Sdl.SetNonblocking
  fullName: SharpSDL3.Sdl.SetNonblocking
- uid: SharpSDL3.Sdl.Write*
  commentId: Overload:SharpSDL3.Sdl.Write
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_Write_System_IntPtr_System_IntPtr_System_UIntPtr_
  name: Write
  nameWithType: Sdl.Write
  fullName: SharpSDL3.Sdl.Write
- uid: SharpSDL3.Sdl.ImageVersion*
  commentId: Overload:SharpSDL3.Sdl.ImageVersion
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ImageVersion
  name: ImageVersion
  nameWithType: Sdl.ImageVersion
  fullName: SharpSDL3.Sdl.ImageVersion
- uid: SharpSDL3.Sdl.ImageVersionAtLeast*
  commentId: Overload:SharpSDL3.Sdl.ImageVersionAtLeast
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ImageVersionAtLeast_System_Int32_System_Int32_System_Int32_
  name: ImageVersionAtLeast
  nameWithType: Sdl.ImageVersionAtLeast
  fullName: SharpSDL3.Sdl.ImageVersionAtLeast
- uid: SharpSDL3.Sdl.GetImageVersion*
  commentId: Overload:SharpSDL3.Sdl.GetImageVersion
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetImageVersion
  name: GetImageVersion
  nameWithType: Sdl.GetImageVersion
  fullName: SharpSDL3.Sdl.GetImageVersion
- uid: SharpSDL3.Sdl.LoadTypedImage*
  commentId: Overload:SharpSDL3.Sdl.LoadTypedImage
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LoadTypedImage_System_IntPtr_System_Boolean_System_String_
  name: LoadTypedImage
  nameWithType: Sdl.LoadTypedImage
  fullName: SharpSDL3.Sdl.LoadTypedImage
- uid: SharpSDL3.Sdl.LoadImage*
  commentId: Overload:SharpSDL3.Sdl.LoadImage
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LoadImage_System_String_
  name: LoadImage
  nameWithType: Sdl.LoadImage
  fullName: SharpSDL3.Sdl.LoadImage
- uid: SharpSDL3.Sdl.LoadImageIo*
  commentId: Overload:SharpSDL3.Sdl.LoadImageIo
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LoadImageIo_System_IntPtr_System_Boolean_
  name: LoadImageIo
  nameWithType: Sdl.LoadImageIo
  fullName: SharpSDL3.Sdl.LoadImageIo
- uid: SharpSDL3.Sdl.LoadTexture*
  commentId: Overload:SharpSDL3.Sdl.LoadTexture
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LoadTexture_System_IntPtr_System_String_
  name: LoadTexture
  nameWithType: Sdl.LoadTexture
  fullName: SharpSDL3.Sdl.LoadTexture
- uid: SharpSDL3.Sdl.LoadTextureIo*
  commentId: Overload:SharpSDL3.Sdl.LoadTextureIo
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LoadTextureIo_System_IntPtr_System_IntPtr_System_Boolean_
  name: LoadTextureIo
  nameWithType: Sdl.LoadTextureIo
  fullName: SharpSDL3.Sdl.LoadTextureIo
- uid: SharpSDL3.Sdl.LoadTextureTypedIo*
  commentId: Overload:SharpSDL3.Sdl.LoadTextureTypedIo
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LoadTextureTypedIo_System_IntPtr_System_IntPtr_System_Boolean_System_String_
  name: LoadTextureTypedIo
  nameWithType: Sdl.LoadTextureTypedIo
  fullName: SharpSDL3.Sdl.LoadTextureTypedIo
- uid: SharpSDL3.Sdl.IsAVIF*
  commentId: Overload:SharpSDL3.Sdl.IsAVIF
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_IsAVIF_System_IntPtr_
  name: IsAVIF
  nameWithType: Sdl.IsAVIF
  fullName: SharpSDL3.Sdl.IsAVIF
- uid: SharpSDL3.Sdl.IsICO*
  commentId: Overload:SharpSDL3.Sdl.IsICO
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_IsICO_System_IntPtr_
  name: IsICO
  nameWithType: Sdl.IsICO
  fullName: SharpSDL3.Sdl.IsICO
- uid: SharpSDL3.Sdl.IsCUR*
  commentId: Overload:SharpSDL3.Sdl.IsCUR
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_IsCUR_System_IntPtr_
  name: IsCUR
  nameWithType: Sdl.IsCUR
  fullName: SharpSDL3.Sdl.IsCUR
- uid: SharpSDL3.Sdl.IsBMP*
  commentId: Overload:SharpSDL3.Sdl.IsBMP
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_IsBMP_System_IntPtr_
  name: IsBMP
  nameWithType: Sdl.IsBMP
  fullName: SharpSDL3.Sdl.IsBMP
- uid: SharpSDL3.Sdl.IsGIF*
  commentId: Overload:SharpSDL3.Sdl.IsGIF
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_IsGIF_System_IntPtr_
  name: IsGIF
  nameWithType: Sdl.IsGIF
  fullName: SharpSDL3.Sdl.IsGIF
- uid: SharpSDL3.Sdl.IsJPG*
  commentId: Overload:SharpSDL3.Sdl.IsJPG
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_IsJPG_System_IntPtr_
  name: IsJPG
  nameWithType: Sdl.IsJPG
  fullName: SharpSDL3.Sdl.IsJPG
- uid: SharpSDL3.Sdl.IsJXL*
  commentId: Overload:SharpSDL3.Sdl.IsJXL
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_IsJXL_System_IntPtr_
  name: IsJXL
  nameWithType: Sdl.IsJXL
  fullName: SharpSDL3.Sdl.IsJXL
- uid: SharpSDL3.Sdl.IsLBM*
  commentId: Overload:SharpSDL3.Sdl.IsLBM
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_IsLBM_System_IntPtr_
  name: IsLBM
  nameWithType: Sdl.IsLBM
  fullName: SharpSDL3.Sdl.IsLBM
- uid: SharpSDL3.Sdl.IsPCX*
  commentId: Overload:SharpSDL3.Sdl.IsPCX
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_IsPCX_System_IntPtr_
  name: IsPCX
  nameWithType: Sdl.IsPCX
  fullName: SharpSDL3.Sdl.IsPCX
- uid: SharpSDL3.Sdl.IsPNG*
  commentId: Overload:SharpSDL3.Sdl.IsPNG
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_IsPNG_System_IntPtr_
  name: IsPNG
  nameWithType: Sdl.IsPNG
  fullName: SharpSDL3.Sdl.IsPNG
- uid: SharpSDL3.Sdl.IsPNM*
  commentId: Overload:SharpSDL3.Sdl.IsPNM
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_IsPNM_System_IntPtr_
  name: IsPNM
  nameWithType: Sdl.IsPNM
  fullName: SharpSDL3.Sdl.IsPNM
- uid: SharpSDL3.Sdl.IsSVG*
  commentId: Overload:SharpSDL3.Sdl.IsSVG
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_IsSVG_System_IntPtr_
  name: IsSVG
  nameWithType: Sdl.IsSVG
  fullName: SharpSDL3.Sdl.IsSVG
- uid: SharpSDL3.Sdl.IsQOI*
  commentId: Overload:SharpSDL3.Sdl.IsQOI
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_IsQOI_System_IntPtr_
  name: IsQOI
  nameWithType: Sdl.IsQOI
  fullName: SharpSDL3.Sdl.IsQOI
- uid: SharpSDL3.Sdl.IsTIF*
  commentId: Overload:SharpSDL3.Sdl.IsTIF
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_IsTIF_System_IntPtr_
  name: IsTIF
  nameWithType: Sdl.IsTIF
  fullName: SharpSDL3.Sdl.IsTIF
- uid: SharpSDL3.Sdl.IsXCF*
  commentId: Overload:SharpSDL3.Sdl.IsXCF
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_IsXCF_System_IntPtr_
  name: IsXCF
  nameWithType: Sdl.IsXCF
  fullName: SharpSDL3.Sdl.IsXCF
- uid: SharpSDL3.Sdl.IsXPM*
  commentId: Overload:SharpSDL3.Sdl.IsXPM
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_IsXPM_System_IntPtr_
  name: IsXPM
  nameWithType: Sdl.IsXPM
  fullName: SharpSDL3.Sdl.IsXPM
- uid: SharpSDL3.Sdl.IsXV*
  commentId: Overload:SharpSDL3.Sdl.IsXV
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_IsXV_System_IntPtr_
  name: IsXV
  nameWithType: Sdl.IsXV
  fullName: SharpSDL3.Sdl.IsXV
- uid: SharpSDL3.Sdl.IsWEBP*
  commentId: Overload:SharpSDL3.Sdl.IsWEBP
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_IsWEBP_System_IntPtr_
  name: IsWEBP
  nameWithType: Sdl.IsWEBP
  fullName: SharpSDL3.Sdl.IsWEBP
- uid: SharpSDL3.Sdl.LoadAvifIo*
  commentId: Overload:SharpSDL3.Sdl.LoadAvifIo
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LoadAvifIo_System_IntPtr_
  name: LoadAvifIo
  nameWithType: Sdl.LoadAvifIo
  fullName: SharpSDL3.Sdl.LoadAvifIo
- uid: SharpSDL3.Sdl.LoadIcoIo*
  commentId: Overload:SharpSDL3.Sdl.LoadIcoIo
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LoadIcoIo_System_IntPtr_
  name: LoadIcoIo
  nameWithType: Sdl.LoadIcoIo
  fullName: SharpSDL3.Sdl.LoadIcoIo
- uid: SharpSDL3.Sdl.LoadCurIo*
  commentId: Overload:SharpSDL3.Sdl.LoadCurIo
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LoadCurIo_System_IntPtr_
  name: LoadCurIo
  nameWithType: Sdl.LoadCurIo
  fullName: SharpSDL3.Sdl.LoadCurIo
- uid: SharpSDL3.Sdl.LoadBmpIo*
  commentId: Overload:SharpSDL3.Sdl.LoadBmpIo
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LoadBmpIo_System_IntPtr_
  name: LoadBmpIo
  nameWithType: Sdl.LoadBmpIo
  fullName: SharpSDL3.Sdl.LoadBmpIo
- uid: SharpSDL3.Sdl.LoadGifIo*
  commentId: Overload:SharpSDL3.Sdl.LoadGifIo
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LoadGifIo_System_IntPtr_
  name: LoadGifIo
  nameWithType: Sdl.LoadGifIo
  fullName: SharpSDL3.Sdl.LoadGifIo
- uid: SharpSDL3.Sdl.LoadJpgIo*
  commentId: Overload:SharpSDL3.Sdl.LoadJpgIo
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LoadJpgIo_System_IntPtr_
  name: LoadJpgIo
  nameWithType: Sdl.LoadJpgIo
  fullName: SharpSDL3.Sdl.LoadJpgIo
- uid: SharpSDL3.Sdl.LoadJxlIo*
  commentId: Overload:SharpSDL3.Sdl.LoadJxlIo
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LoadJxlIo_System_IntPtr_
  name: LoadJxlIo
  nameWithType: Sdl.LoadJxlIo
  fullName: SharpSDL3.Sdl.LoadJxlIo
- uid: SharpSDL3.Sdl.LoadLbmIo*
  commentId: Overload:SharpSDL3.Sdl.LoadLbmIo
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LoadLbmIo_System_IntPtr_
  name: LoadLbmIo
  nameWithType: Sdl.LoadLbmIo
  fullName: SharpSDL3.Sdl.LoadLbmIo
- uid: SharpSDL3.Sdl.LoadPcxIo*
  commentId: Overload:SharpSDL3.Sdl.LoadPcxIo
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LoadPcxIo_System_IntPtr_
  name: LoadPcxIo
  nameWithType: Sdl.LoadPcxIo
  fullName: SharpSDL3.Sdl.LoadPcxIo
- uid: SharpSDL3.Sdl.LoadPngIo*
  commentId: Overload:SharpSDL3.Sdl.LoadPngIo
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LoadPngIo_System_IntPtr_
  name: LoadPngIo
  nameWithType: Sdl.LoadPngIo
  fullName: SharpSDL3.Sdl.LoadPngIo
- uid: SharpSDL3.Sdl.LoadPnmIo*
  commentId: Overload:SharpSDL3.Sdl.LoadPnmIo
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LoadPnmIo_System_IntPtr_
  name: LoadPnmIo
  nameWithType: Sdl.LoadPnmIo
  fullName: SharpSDL3.Sdl.LoadPnmIo
- uid: SharpSDL3.Sdl.LoadSvgIo*
  commentId: Overload:SharpSDL3.Sdl.LoadSvgIo
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LoadSvgIo_System_IntPtr_
  name: LoadSvgIo
  nameWithType: Sdl.LoadSvgIo
  fullName: SharpSDL3.Sdl.LoadSvgIo
- uid: SharpSDL3.Sdl.LoadQoiIo*
  commentId: Overload:SharpSDL3.Sdl.LoadQoiIo
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LoadQoiIo_System_IntPtr_
  name: LoadQoiIo
  nameWithType: Sdl.LoadQoiIo
  fullName: SharpSDL3.Sdl.LoadQoiIo
- uid: SharpSDL3.Sdl.LoadTgaIo*
  commentId: Overload:SharpSDL3.Sdl.LoadTgaIo
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LoadTgaIo_System_IntPtr_
  name: LoadTgaIo
  nameWithType: Sdl.LoadTgaIo
  fullName: SharpSDL3.Sdl.LoadTgaIo
- uid: SharpSDL3.Sdl.LoadTifIo*
  commentId: Overload:SharpSDL3.Sdl.LoadTifIo
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LoadTifIo_System_IntPtr_
  name: LoadTifIo
  nameWithType: Sdl.LoadTifIo
  fullName: SharpSDL3.Sdl.LoadTifIo
- uid: SharpSDL3.Sdl.LoadXcfIo*
  commentId: Overload:SharpSDL3.Sdl.LoadXcfIo
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LoadXcfIo_System_IntPtr_
  name: LoadXcfIo
  nameWithType: Sdl.LoadXcfIo
  fullName: SharpSDL3.Sdl.LoadXcfIo
- uid: SharpSDL3.Sdl.LoadXpmIo*
  commentId: Overload:SharpSDL3.Sdl.LoadXpmIo
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LoadXpmIo_System_IntPtr_
  name: LoadXpmIo
  nameWithType: Sdl.LoadXpmIo
  fullName: SharpSDL3.Sdl.LoadXpmIo
- uid: SharpSDL3.Sdl.LoadXvIo*
  commentId: Overload:SharpSDL3.Sdl.LoadXvIo
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LoadXvIo_System_IntPtr_
  name: LoadXvIo
  nameWithType: Sdl.LoadXvIo
  fullName: SharpSDL3.Sdl.LoadXvIo
- uid: SharpSDL3.Sdl.LoadWebpIo*
  commentId: Overload:SharpSDL3.Sdl.LoadWebpIo
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LoadWebpIo_System_IntPtr_
  name: LoadWebpIo
  nameWithType: Sdl.LoadWebpIo
  fullName: SharpSDL3.Sdl.LoadWebpIo
- uid: SharpSDL3.Sdl.LoadSizedSvgIo*
  commentId: Overload:SharpSDL3.Sdl.LoadSizedSvgIo
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LoadSizedSvgIo_System_IntPtr_System_Int32_System_Int32_
  name: LoadSizedSvgIo
  nameWithType: Sdl.LoadSizedSvgIo
  fullName: SharpSDL3.Sdl.LoadSizedSvgIo
- uid: SharpSDL3.Sdl.ReadXpmFromArray*
  commentId: Overload:SharpSDL3.Sdl.ReadXpmFromArray
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReadXpmFromArray_System_String___
  name: ReadXpmFromArray
  nameWithType: Sdl.ReadXpmFromArray
  fullName: SharpSDL3.Sdl.ReadXpmFromArray
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.ReadXpmFromArrayToRgb888*
  commentId: Overload:SharpSDL3.Sdl.ReadXpmFromArrayToRgb888
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReadXpmFromArrayToRgb888_System_String___
  name: ReadXpmFromArrayToRgb888
  nameWithType: Sdl.ReadXpmFromArrayToRgb888
  fullName: SharpSDL3.Sdl.ReadXpmFromArrayToRgb888
- uid: SharpSDL3.Sdl.SaveAvif*
  commentId: Overload:SharpSDL3.Sdl.SaveAvif
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SaveAvif_System_IntPtr_System_String_System_Int32_
  name: SaveAvif
  nameWithType: Sdl.SaveAvif
  fullName: SharpSDL3.Sdl.SaveAvif
- uid: SharpSDL3.Sdl.SaveAvifIo*
  commentId: Overload:SharpSDL3.Sdl.SaveAvifIo
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SaveAvifIo_System_IntPtr_System_IntPtr_System_Boolean_System_Int32_
  name: SaveAvifIo
  nameWithType: Sdl.SaveAvifIo
  fullName: SharpSDL3.Sdl.SaveAvifIo
- uid: SharpSDL3.Sdl.SavePng*
  commentId: Overload:SharpSDL3.Sdl.SavePng
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SavePng_System_IntPtr_System_String_
  name: SavePng
  nameWithType: Sdl.SavePng
  fullName: SharpSDL3.Sdl.SavePng
- uid: SharpSDL3.Sdl.SavePngIo*
  commentId: Overload:SharpSDL3.Sdl.SavePngIo
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SavePngIo_System_IntPtr_System_IntPtr_System_Boolean_
  name: SavePngIo
  nameWithType: Sdl.SavePngIo
  fullName: SharpSDL3.Sdl.SavePngIo
- uid: SharpSDL3.Sdl.SaveJpg*
  commentId: Overload:SharpSDL3.Sdl.SaveJpg
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SaveJpg_System_IntPtr_System_String_System_Int32_
  name: SaveJpg
  nameWithType: Sdl.SaveJpg
  fullName: SharpSDL3.Sdl.SaveJpg
- uid: SharpSDL3.Sdl.SaveJpgIo*
  commentId: Overload:SharpSDL3.Sdl.SaveJpgIo
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SaveJpgIo_System_IntPtr_System_IntPtr_System_Boolean_System_Int32_
  name: SaveJpgIo
  nameWithType: Sdl.SaveJpgIo
  fullName: SharpSDL3.Sdl.SaveJpgIo
- uid: SharpSDL3.Sdl.FreeAnimation(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.FreeAnimation(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_FreeAnimation_System_IntPtr_
  name: FreeAnimation(nint)
  nameWithType: Sdl.FreeAnimation(nint)
  fullName: SharpSDL3.Sdl.FreeAnimation(nint)
  nameWithType.vb: Sdl.FreeAnimation(IntPtr)
  fullName.vb: SharpSDL3.Sdl.FreeAnimation(System.IntPtr)
  name.vb: FreeAnimation(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.FreeAnimation(System.IntPtr)
    name: FreeAnimation
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_FreeAnimation_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.FreeAnimation(System.IntPtr)
    name: FreeAnimation
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_FreeAnimation_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.LoadAnimation*
  commentId: Overload:SharpSDL3.Sdl.LoadAnimation
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LoadAnimation_System_String_
  name: LoadAnimation
  nameWithType: Sdl.LoadAnimation
  fullName: SharpSDL3.Sdl.LoadAnimation
- uid: SharpSDL3.Sdl.LoadAnimationIo*
  commentId: Overload:SharpSDL3.Sdl.LoadAnimationIo
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LoadAnimationIo_System_IntPtr_System_Boolean_
  name: LoadAnimationIo
  nameWithType: Sdl.LoadAnimationIo
  fullName: SharpSDL3.Sdl.LoadAnimationIo
- uid: SharpSDL3.Sdl.LoadAnimationTypedIo*
  commentId: Overload:SharpSDL3.Sdl.LoadAnimationTypedIo
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LoadAnimationTypedIo_System_IntPtr_System_Boolean_System_String_
  name: LoadAnimationTypedIo
  nameWithType: Sdl.LoadAnimationTypedIo
  fullName: SharpSDL3.Sdl.LoadAnimationTypedIo
- uid: SharpSDL3.Sdl.LoadAnimation(System.String)
  commentId: M:SharpSDL3.Sdl.LoadAnimation(System.String)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LoadAnimation_System_String_
  name: LoadAnimation(string)
  nameWithType: Sdl.LoadAnimation(string)
  fullName: SharpSDL3.Sdl.LoadAnimation(string)
  nameWithType.vb: Sdl.LoadAnimation(String)
  fullName.vb: SharpSDL3.Sdl.LoadAnimation(String)
  name.vb: LoadAnimation(String)
  spec.csharp:
  - uid: SharpSDL3.Sdl.LoadAnimation(System.String)
    name: LoadAnimation
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LoadAnimation_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.LoadAnimation(System.String)
    name: LoadAnimation
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LoadAnimation_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SharpSDL3.Sdl.FreeAnimation*
  commentId: Overload:SharpSDL3.Sdl.FreeAnimation
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_FreeAnimation_System_IntPtr_
  name: FreeAnimation
  nameWithType: Sdl.FreeAnimation
  fullName: SharpSDL3.Sdl.FreeAnimation
- uid: SharpSDL3.Sdl.LoadGifAnimationIo*
  commentId: Overload:SharpSDL3.Sdl.LoadGifAnimationIo
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LoadGifAnimationIo_System_IntPtr_
  name: LoadGifAnimationIo
  nameWithType: Sdl.LoadGifAnimationIo
  fullName: SharpSDL3.Sdl.LoadGifAnimationIo
- uid: SharpSDL3.Sdl.LoadWebpAnimationIo*
  commentId: Overload:SharpSDL3.Sdl.LoadWebpAnimationIo
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LoadWebpAnimationIo_System_IntPtr_
  name: LoadWebpAnimationIo
  nameWithType: Sdl.LoadWebpAnimationIo
  fullName: SharpSDL3.Sdl.LoadWebpAnimationIo
- uid: SharpSDL3.Sdl.CloseIO*
  commentId: Overload:SharpSDL3.Sdl.CloseIO
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CloseIO_SharpSDL3_Structs_IOStream_
  name: CloseIO
  nameWithType: Sdl.CloseIO
  fullName: SharpSDL3.Sdl.CloseIO
- uid: SharpSDL3.Structs.IOStream
  commentId: T:SharpSDL3.Structs.IOStream
  parent: SharpSDL3.Structs
  href: SharpSDL3.Structs.IOStream.html
  name: IOStream
  nameWithType: IOStream
  fullName: SharpSDL3.Structs.IOStream
- uid: SharpSDL3.Sdl.FlushIO*
  commentId: Overload:SharpSDL3.Sdl.FlushIO
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_FlushIO_SharpSDL3_Structs_IOStream_
  name: FlushIO
  nameWithType: Sdl.FlushIO
  fullName: SharpSDL3.Sdl.FlushIO
- uid: SharpSDL3.Sdl.GetIOProperties*
  commentId: Overload:SharpSDL3.Sdl.GetIOProperties
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetIOProperties_SharpSDL3_Structs_IOStream_
  name: GetIOProperties
  nameWithType: Sdl.GetIOProperties
  fullName: SharpSDL3.Sdl.GetIOProperties
- uid: SharpSDL3.Sdl.GetIOSize*
  commentId: Overload:SharpSDL3.Sdl.GetIOSize
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetIOSize_SharpSDL3_Structs_IOStream_
  name: GetIOSize
  nameWithType: Sdl.GetIOSize
  fullName: SharpSDL3.Sdl.GetIOSize
- uid: SharpSDL3.Sdl.GetIOStatus*
  commentId: Overload:SharpSDL3.Sdl.GetIOStatus
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetIOStatus_SharpSDL3_Structs_IOStream_
  name: GetIOStatus
  nameWithType: Sdl.GetIOStatus
  fullName: SharpSDL3.Sdl.GetIOStatus
- uid: SharpSDL3.Enums.IoStatus
  commentId: T:SharpSDL3.Enums.IoStatus
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.IoStatus.html
  name: IoStatus
  nameWithType: IoStatus
  fullName: SharpSDL3.Enums.IoStatus
- uid: SharpSDL3.Sdl.IOFromMem(System.IntPtr,System.UIntPtr)
  commentId: M:SharpSDL3.Sdl.IOFromMem(System.IntPtr,System.UIntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_IOFromMem_System_IntPtr_System_UIntPtr_
  name: IOFromMem(nint, nuint)
  nameWithType: Sdl.IOFromMem(nint, nuint)
  fullName: SharpSDL3.Sdl.IOFromMem(nint, nuint)
  nameWithType.vb: Sdl.IOFromMem(IntPtr, UIntPtr)
  fullName.vb: SharpSDL3.Sdl.IOFromMem(System.IntPtr, System.UIntPtr)
  name.vb: IOFromMem(IntPtr, UIntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.IOFromMem(System.IntPtr,System.UIntPtr)
    name: IOFromMem
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_IOFromMem_System_IntPtr_System_UIntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UIntPtr
    name: nuint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uintptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.IOFromMem(System.IntPtr,System.UIntPtr)
    name: IOFromMem
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_IOFromMem_System_IntPtr_System_UIntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UIntPtr
    name: UIntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uintptr
  - name: )
- uid: SharpSDL3.Sdl.CloseIO(SharpSDL3.Structs.IOStream)
  commentId: M:SharpSDL3.Sdl.CloseIO(SharpSDL3.Structs.IOStream)
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CloseIO_SharpSDL3_Structs_IOStream_
  name: CloseIO(IOStream)
  nameWithType: Sdl.CloseIO(IOStream)
  fullName: SharpSDL3.Sdl.CloseIO(SharpSDL3.Structs.IOStream)
  spec.csharp:
  - uid: SharpSDL3.Sdl.CloseIO(SharpSDL3.Structs.IOStream)
    name: CloseIO
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CloseIO_SharpSDL3_Structs_IOStream_
  - name: (
  - uid: SharpSDL3.Structs.IOStream
    name: IOStream
    href: SharpSDL3.Structs.IOStream.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.CloseIO(SharpSDL3.Structs.IOStream)
    name: CloseIO
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CloseIO_SharpSDL3_Structs_IOStream_
  - name: (
  - uid: SharpSDL3.Structs.IOStream
    name: IOStream
    href: SharpSDL3.Structs.IOStream.html
  - name: )
- uid: SharpSDL3.Sdl.ReadIO(SharpSDL3.Structs.IOStream,System.IntPtr,System.UIntPtr)
  commentId: M:SharpSDL3.Sdl.ReadIO(SharpSDL3.Structs.IOStream,System.IntPtr,System.UIntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReadIO_SharpSDL3_Structs_IOStream_System_IntPtr_System_UIntPtr_
  name: ReadIO(IOStream, nint, nuint)
  nameWithType: Sdl.ReadIO(IOStream, nint, nuint)
  fullName: SharpSDL3.Sdl.ReadIO(SharpSDL3.Structs.IOStream, nint, nuint)
  nameWithType.vb: Sdl.ReadIO(IOStream, IntPtr, UIntPtr)
  fullName.vb: SharpSDL3.Sdl.ReadIO(SharpSDL3.Structs.IOStream, System.IntPtr, System.UIntPtr)
  name.vb: ReadIO(IOStream, IntPtr, UIntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.ReadIO(SharpSDL3.Structs.IOStream,System.IntPtr,System.UIntPtr)
    name: ReadIO
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReadIO_SharpSDL3_Structs_IOStream_System_IntPtr_System_UIntPtr_
  - name: (
  - uid: SharpSDL3.Structs.IOStream
    name: IOStream
    href: SharpSDL3.Structs.IOStream.html
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UIntPtr
    name: nuint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uintptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.ReadIO(SharpSDL3.Structs.IOStream,System.IntPtr,System.UIntPtr)
    name: ReadIO
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReadIO_SharpSDL3_Structs_IOStream_System_IntPtr_System_UIntPtr_
  - name: (
  - uid: SharpSDL3.Structs.IOStream
    name: IOStream
    href: SharpSDL3.Structs.IOStream.html
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UIntPtr
    name: UIntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uintptr
  - name: )
- uid: SharpSDL3.Sdl.SeekIO(SharpSDL3.Structs.IOStream,System.Int64,SharpSDL3.Enums.IoWhence)
  commentId: M:SharpSDL3.Sdl.SeekIO(SharpSDL3.Structs.IOStream,System.Int64,SharpSDL3.Enums.IoWhence)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SeekIO_SharpSDL3_Structs_IOStream_System_Int64_SharpSDL3_Enums_IoWhence_
  name: SeekIO(IOStream, long, IoWhence)
  nameWithType: Sdl.SeekIO(IOStream, long, IoWhence)
  fullName: SharpSDL3.Sdl.SeekIO(SharpSDL3.Structs.IOStream, long, SharpSDL3.Enums.IoWhence)
  nameWithType.vb: Sdl.SeekIO(IOStream, Long, IoWhence)
  fullName.vb: SharpSDL3.Sdl.SeekIO(SharpSDL3.Structs.IOStream, Long, SharpSDL3.Enums.IoWhence)
  name.vb: SeekIO(IOStream, Long, IoWhence)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SeekIO(SharpSDL3.Structs.IOStream,System.Int64,SharpSDL3.Enums.IoWhence)
    name: SeekIO
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SeekIO_SharpSDL3_Structs_IOStream_System_Int64_SharpSDL3_Enums_IoWhence_
  - name: (
  - uid: SharpSDL3.Structs.IOStream
    name: IOStream
    href: SharpSDL3.Structs.IOStream.html
  - name: ','
  - name: " "
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.IoWhence
    name: IoWhence
    href: SharpSDL3.Enums.IoWhence.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SeekIO(SharpSDL3.Structs.IOStream,System.Int64,SharpSDL3.Enums.IoWhence)
    name: SeekIO
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SeekIO_SharpSDL3_Structs_IOStream_System_Int64_SharpSDL3_Enums_IoWhence_
  - name: (
  - uid: SharpSDL3.Structs.IOStream
    name: IOStream
    href: SharpSDL3.Structs.IOStream.html
  - name: ','
  - name: " "
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.IoWhence
    name: IoWhence
    href: SharpSDL3.Enums.IoWhence.html
  - name: )
- uid: SharpSDL3.Sdl.TellIO(SharpSDL3.Structs.IOStream)
  commentId: M:SharpSDL3.Sdl.TellIO(SharpSDL3.Structs.IOStream)
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_TellIO_SharpSDL3_Structs_IOStream_
  name: TellIO(IOStream)
  nameWithType: Sdl.TellIO(IOStream)
  fullName: SharpSDL3.Sdl.TellIO(SharpSDL3.Structs.IOStream)
  spec.csharp:
  - uid: SharpSDL3.Sdl.TellIO(SharpSDL3.Structs.IOStream)
    name: TellIO
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_TellIO_SharpSDL3_Structs_IOStream_
  - name: (
  - uid: SharpSDL3.Structs.IOStream
    name: IOStream
    href: SharpSDL3.Structs.IOStream.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.TellIO(SharpSDL3.Structs.IOStream)
    name: TellIO
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_TellIO_SharpSDL3_Structs_IOStream_
  - name: (
  - uid: SharpSDL3.Structs.IOStream
    name: IOStream
    href: SharpSDL3.Structs.IOStream.html
  - name: )
- uid: SharpSDL3.Sdl.IOFromConstMem*
  commentId: Overload:SharpSDL3.Sdl.IOFromConstMem
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_IOFromConstMem_System_IntPtr_System_UIntPtr_
  name: IOFromConstMem
  nameWithType: Sdl.IOFromConstMem
  fullName: SharpSDL3.Sdl.IOFromConstMem
- uid: SharpSDL3.Sdl.WriteIO(SharpSDL3.Structs.IOStream,System.IntPtr,System.UIntPtr)
  commentId: M:SharpSDL3.Sdl.WriteIO(SharpSDL3.Structs.IOStream,System.IntPtr,System.UIntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WriteIO_SharpSDL3_Structs_IOStream_System_IntPtr_System_UIntPtr_
  name: WriteIO(IOStream, nint, nuint)
  nameWithType: Sdl.WriteIO(IOStream, nint, nuint)
  fullName: SharpSDL3.Sdl.WriteIO(SharpSDL3.Structs.IOStream, nint, nuint)
  nameWithType.vb: Sdl.WriteIO(IOStream, IntPtr, UIntPtr)
  fullName.vb: SharpSDL3.Sdl.WriteIO(SharpSDL3.Structs.IOStream, System.IntPtr, System.UIntPtr)
  name.vb: WriteIO(IOStream, IntPtr, UIntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.WriteIO(SharpSDL3.Structs.IOStream,System.IntPtr,System.UIntPtr)
    name: WriteIO
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WriteIO_SharpSDL3_Structs_IOStream_System_IntPtr_System_UIntPtr_
  - name: (
  - uid: SharpSDL3.Structs.IOStream
    name: IOStream
    href: SharpSDL3.Structs.IOStream.html
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UIntPtr
    name: nuint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uintptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.WriteIO(SharpSDL3.Structs.IOStream,System.IntPtr,System.UIntPtr)
    name: WriteIO
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WriteIO_SharpSDL3_Structs_IOStream_System_IntPtr_System_UIntPtr_
  - name: (
  - uid: SharpSDL3.Structs.IOStream
    name: IOStream
    href: SharpSDL3.Structs.IOStream.html
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UIntPtr
    name: UIntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uintptr
  - name: )
- uid: SharpSDL3.Sdl.IOFromDynamicMem*
  commentId: Overload:SharpSDL3.Sdl.IOFromDynamicMem
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_IOFromDynamicMem
  name: IOFromDynamicMem
  nameWithType: Sdl.IOFromDynamicMem
  fullName: SharpSDL3.Sdl.IOFromDynamicMem
- uid: SharpSDL3.Sdl.IOFromFile*
  commentId: Overload:SharpSDL3.Sdl.IOFromFile
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_IOFromFile_System_String_System_String_
  name: IOFromFile
  nameWithType: Sdl.IOFromFile
  fullName: SharpSDL3.Sdl.IOFromFile
- uid: SharpSDL3.Sdl.IOFromConstMem(System.IntPtr,System.UIntPtr)
  commentId: M:SharpSDL3.Sdl.IOFromConstMem(System.IntPtr,System.UIntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_IOFromConstMem_System_IntPtr_System_UIntPtr_
  name: IOFromConstMem(nint, nuint)
  nameWithType: Sdl.IOFromConstMem(nint, nuint)
  fullName: SharpSDL3.Sdl.IOFromConstMem(nint, nuint)
  nameWithType.vb: Sdl.IOFromConstMem(IntPtr, UIntPtr)
  fullName.vb: SharpSDL3.Sdl.IOFromConstMem(System.IntPtr, System.UIntPtr)
  name.vb: IOFromConstMem(IntPtr, UIntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.IOFromConstMem(System.IntPtr,System.UIntPtr)
    name: IOFromConstMem
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_IOFromConstMem_System_IntPtr_System_UIntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UIntPtr
    name: nuint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uintptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.IOFromConstMem(System.IntPtr,System.UIntPtr)
    name: IOFromConstMem
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_IOFromConstMem_System_IntPtr_System_UIntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UIntPtr
    name: UIntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uintptr
  - name: )
- uid: SharpSDL3.Sdl.FlushIO(SharpSDL3.Structs.IOStream)
  commentId: M:SharpSDL3.Sdl.FlushIO(SharpSDL3.Structs.IOStream)
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_FlushIO_SharpSDL3_Structs_IOStream_
  name: FlushIO(IOStream)
  nameWithType: Sdl.FlushIO(IOStream)
  fullName: SharpSDL3.Sdl.FlushIO(SharpSDL3.Structs.IOStream)
  spec.csharp:
  - uid: SharpSDL3.Sdl.FlushIO(SharpSDL3.Structs.IOStream)
    name: FlushIO
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_FlushIO_SharpSDL3_Structs_IOStream_
  - name: (
  - uid: SharpSDL3.Structs.IOStream
    name: IOStream
    href: SharpSDL3.Structs.IOStream.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.FlushIO(SharpSDL3.Structs.IOStream)
    name: FlushIO
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_FlushIO_SharpSDL3_Structs_IOStream_
  - name: (
  - uid: SharpSDL3.Structs.IOStream
    name: IOStream
    href: SharpSDL3.Structs.IOStream.html
  - name: )
- uid: SharpSDL3.Sdl.IOFromMem*
  commentId: Overload:SharpSDL3.Sdl.IOFromMem
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_IOFromMem_System_IntPtr_System_UIntPtr_
  name: IOFromMem
  nameWithType: Sdl.IOFromMem
  fullName: SharpSDL3.Sdl.IOFromMem
- uid: SharpSDL3.Sdl.IOprintf*
  commentId: Overload:SharpSDL3.Sdl.IOprintf
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_IOprintf_SharpSDL3_Structs_IOStream_System_String_
  name: IOprintf
  nameWithType: Sdl.IOprintf
  fullName: SharpSDL3.Sdl.IOprintf
- uid: SharpSDL3.Sdl.SaveFile(SharpSDL3.Delegates.SdlDialogFileCallback,System.IntPtr,System.IntPtr,System.Span{SharpSDL3.Structs.DialogFileFilter},System.Int32,System.String)
  commentId: M:SharpSDL3.Sdl.SaveFile(SharpSDL3.Delegates.SdlDialogFileCallback,System.IntPtr,System.IntPtr,System.Span{SharpSDL3.Structs.DialogFileFilter},System.Int32,System.String)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SaveFile_SharpSDL3_Delegates_SdlDialogFileCallback_System_IntPtr_System_IntPtr_System_Span_SharpSDL3_Structs_DialogFileFilter__System_Int32_System_String_
  name: SaveFile(SdlDialogFileCallback, nint, nint, Span<DialogFileFilter>, int, string)
  nameWithType: Sdl.SaveFile(Delegates.SdlDialogFileCallback, nint, nint, Span<DialogFileFilter>, int, string)
  fullName: SharpSDL3.Sdl.SaveFile(SharpSDL3.Delegates.SdlDialogFileCallback, nint, nint, System.Span<SharpSDL3.Structs.DialogFileFilter>, int, string)
  nameWithType.vb: Sdl.SaveFile(Delegates.SdlDialogFileCallback, IntPtr, IntPtr, Span(Of DialogFileFilter), Integer, String)
  fullName.vb: SharpSDL3.Sdl.SaveFile(SharpSDL3.Delegates.SdlDialogFileCallback, System.IntPtr, System.IntPtr, System.Span(Of SharpSDL3.Structs.DialogFileFilter), Integer, String)
  name.vb: SaveFile(SdlDialogFileCallback, IntPtr, IntPtr, Span(Of DialogFileFilter), Integer, String)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SaveFile(SharpSDL3.Delegates.SdlDialogFileCallback,System.IntPtr,System.IntPtr,System.Span{SharpSDL3.Structs.DialogFileFilter},System.Int32,System.String)
    name: SaveFile
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SaveFile_SharpSDL3_Delegates_SdlDialogFileCallback_System_IntPtr_System_IntPtr_System_Span_SharpSDL3_Structs_DialogFileFilter__System_Int32_System_String_
  - name: (
  - uid: SharpSDL3.Delegates.SdlDialogFileCallback
    name: SdlDialogFileCallback
    href: SharpSDL3.Delegates.SdlDialogFileCallback.html
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: SharpSDL3.Structs.DialogFileFilter
    name: DialogFileFilter
    href: SharpSDL3.Structs.DialogFileFilter.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SaveFile(SharpSDL3.Delegates.SdlDialogFileCallback,System.IntPtr,System.IntPtr,System.Span{SharpSDL3.Structs.DialogFileFilter},System.Int32,System.String)
    name: SaveFile
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SaveFile_SharpSDL3_Delegates_SdlDialogFileCallback_System_IntPtr_System_IntPtr_System_Span_SharpSDL3_Structs_DialogFileFilter__System_Int32_System_String_
  - name: (
  - uid: SharpSDL3.Delegates.SdlDialogFileCallback
    name: SdlDialogFileCallback
    href: SharpSDL3.Delegates.SdlDialogFileCallback.html
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: SharpSDL3.Structs.DialogFileFilter
    name: DialogFileFilter
    href: SharpSDL3.Structs.DialogFileFilter.html
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SharpSDL3.Sdl.LoadFile*
  commentId: Overload:SharpSDL3.Sdl.LoadFile
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LoadFile_System_String_System_UIntPtr__
  name: LoadFile
  nameWithType: Sdl.LoadFile
  fullName: SharpSDL3.Sdl.LoadFile
- uid: SharpSDL3.Sdl.LoadFileIO*
  commentId: Overload:SharpSDL3.Sdl.LoadFileIO
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LoadFileIO_SharpSDL3_Structs_IOStream_System_UIntPtr__System_Boolean_
  name: LoadFileIO
  nameWithType: Sdl.LoadFileIO
  fullName: SharpSDL3.Sdl.LoadFileIO
- uid: SharpSDL3.Sdl.OpenIO*
  commentId: Overload:SharpSDL3.Sdl.OpenIO
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_OpenIO_SharpSDL3_Structs_IOStreamInterface__System_IntPtr_
  name: OpenIO
  nameWithType: Sdl.OpenIO
  fullName: SharpSDL3.Sdl.OpenIO
- uid: SharpSDL3.Structs.IOStreamInterface
  commentId: T:SharpSDL3.Structs.IOStreamInterface
  parent: SharpSDL3.Structs
  href: SharpSDL3.Structs.IOStreamInterface.html
  name: IOStreamInterface
  nameWithType: IOStreamInterface
  fullName: SharpSDL3.Structs.IOStreamInterface
- uid: SharpSDL3.Sdl.ReadIO*
  commentId: Overload:SharpSDL3.Sdl.ReadIO
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReadIO_SharpSDL3_Structs_IOStream_System_IntPtr_System_UIntPtr_
  name: ReadIO
  nameWithType: Sdl.ReadIO
  fullName: SharpSDL3.Sdl.ReadIO
- uid: SharpSDL3.Sdl.ReadS16BE*
  commentId: Overload:SharpSDL3.Sdl.ReadS16BE
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReadS16BE_SharpSDL3_Structs_IOStream_System_Int16__
  name: ReadS16BE
  nameWithType: Sdl.ReadS16BE
  fullName: SharpSDL3.Sdl.ReadS16BE
- uid: SharpSDL3.Sdl.ReadS16LE*
  commentId: Overload:SharpSDL3.Sdl.ReadS16LE
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReadS16LE_SharpSDL3_Structs_IOStream_System_Int16__
  name: ReadS16LE
  nameWithType: Sdl.ReadS16LE
  fullName: SharpSDL3.Sdl.ReadS16LE
- uid: SharpSDL3.Sdl.ReadS32BE*
  commentId: Overload:SharpSDL3.Sdl.ReadS32BE
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReadS32BE_SharpSDL3_Structs_IOStream_System_Int32__
  name: ReadS32BE
  nameWithType: Sdl.ReadS32BE
  fullName: SharpSDL3.Sdl.ReadS32BE
- uid: SharpSDL3.Sdl.ReadS32LE*
  commentId: Overload:SharpSDL3.Sdl.ReadS32LE
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReadS32LE_SharpSDL3_Structs_IOStream_System_Int32__
  name: ReadS32LE
  nameWithType: Sdl.ReadS32LE
  fullName: SharpSDL3.Sdl.ReadS32LE
- uid: SharpSDL3.Sdl.ReadS64BE*
  commentId: Overload:SharpSDL3.Sdl.ReadS64BE
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReadS64BE_SharpSDL3_Structs_IOStream_System_Int64__
  name: ReadS64BE
  nameWithType: Sdl.ReadS64BE
  fullName: SharpSDL3.Sdl.ReadS64BE
- uid: SharpSDL3.Sdl.ReadS64LE*
  commentId: Overload:SharpSDL3.Sdl.ReadS64LE
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReadS64LE_SharpSDL3_Structs_IOStream_System_Int64__
  name: ReadS64LE
  nameWithType: Sdl.ReadS64LE
  fullName: SharpSDL3.Sdl.ReadS64LE
- uid: SharpSDL3.Sdl.ReadS8*
  commentId: Overload:SharpSDL3.Sdl.ReadS8
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReadS8_SharpSDL3_Structs_IOStream_System_SByte__
  name: ReadS8
  nameWithType: Sdl.ReadS8
  fullName: SharpSDL3.Sdl.ReadS8
- uid: System.SByte
  commentId: T:System.SByte
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.sbyte
  name: sbyte
  nameWithType: sbyte
  fullName: sbyte
  nameWithType.vb: SByte
  fullName.vb: SByte
  name.vb: SByte
- uid: SharpSDL3.Sdl.ReadU16BE*
  commentId: Overload:SharpSDL3.Sdl.ReadU16BE
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReadU16BE_SharpSDL3_Structs_IOStream_System_UInt16__
  name: ReadU16BE
  nameWithType: Sdl.ReadU16BE
  fullName: SharpSDL3.Sdl.ReadU16BE
- uid: SharpSDL3.Sdl.ReadU16LE*
  commentId: Overload:SharpSDL3.Sdl.ReadU16LE
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReadU16LE_SharpSDL3_Structs_IOStream_System_UInt16__
  name: ReadU16LE
  nameWithType: Sdl.ReadU16LE
  fullName: SharpSDL3.Sdl.ReadU16LE
- uid: SharpSDL3.Sdl.ReadU32BE*
  commentId: Overload:SharpSDL3.Sdl.ReadU32BE
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReadU32BE_SharpSDL3_Structs_IOStream_System_UInt32__
  name: ReadU32BE
  nameWithType: Sdl.ReadU32BE
  fullName: SharpSDL3.Sdl.ReadU32BE
- uid: SharpSDL3.Sdl.ReadU32LE*
  commentId: Overload:SharpSDL3.Sdl.ReadU32LE
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReadU32LE_SharpSDL3_Structs_IOStream_System_UInt32__
  name: ReadU32LE
  nameWithType: Sdl.ReadU32LE
  fullName: SharpSDL3.Sdl.ReadU32LE
- uid: SharpSDL3.Sdl.ReadU64BE*
  commentId: Overload:SharpSDL3.Sdl.ReadU64BE
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReadU64BE_SharpSDL3_Structs_IOStream_System_UInt64__
  name: ReadU64BE
  nameWithType: Sdl.ReadU64BE
  fullName: SharpSDL3.Sdl.ReadU64BE
- uid: SharpSDL3.Sdl.ReadU64LE*
  commentId: Overload:SharpSDL3.Sdl.ReadU64LE
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReadU64LE_SharpSDL3_Structs_IOStream_System_UInt64__
  name: ReadU64LE
  nameWithType: Sdl.ReadU64LE
  fullName: SharpSDL3.Sdl.ReadU64LE
- uid: SharpSDL3.Sdl.ReadU8*
  commentId: Overload:SharpSDL3.Sdl.ReadU8
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReadU8_SharpSDL3_Structs_IOStream_System_Byte__
  name: ReadU8
  nameWithType: Sdl.ReadU8
  fullName: SharpSDL3.Sdl.ReadU8
- uid: SharpSDL3.Sdl.SaveFileIO*
  commentId: Overload:SharpSDL3.Sdl.SaveFileIO
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SaveFileIO_System_IntPtr_System_IntPtr_System_UIntPtr_System_Boolean_
  name: SaveFileIO
  nameWithType: Sdl.SaveFileIO
  fullName: SharpSDL3.Sdl.SaveFileIO
- uid: SharpSDL3.Sdl.SeekIO*
  commentId: Overload:SharpSDL3.Sdl.SeekIO
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SeekIO_SharpSDL3_Structs_IOStream_System_Int64_SharpSDL3_Enums_IoWhence_
  name: SeekIO
  nameWithType: Sdl.SeekIO
  fullName: SharpSDL3.Sdl.SeekIO
- uid: SharpSDL3.Enums.IoWhence
  commentId: T:SharpSDL3.Enums.IoWhence
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.IoWhence.html
  name: IoWhence
  nameWithType: IoWhence
  fullName: SharpSDL3.Enums.IoWhence
- uid: SharpSDL3.Sdl.TellIO*
  commentId: Overload:SharpSDL3.Sdl.TellIO
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_TellIO_SharpSDL3_Structs_IOStream_
  name: TellIO
  nameWithType: Sdl.TellIO
  fullName: SharpSDL3.Sdl.TellIO
- uid: SharpSDL3.Sdl.WriteIO*
  commentId: Overload:SharpSDL3.Sdl.WriteIO
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WriteIO_SharpSDL3_Structs_IOStream_System_IntPtr_System_UIntPtr_
  name: WriteIO
  nameWithType: Sdl.WriteIO
  fullName: SharpSDL3.Sdl.WriteIO
- uid: SharpSDL3.Sdl.WriteS16BE*
  commentId: Overload:SharpSDL3.Sdl.WriteS16BE
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WriteS16BE_SharpSDL3_Structs_IOStream_System_Int16_
  name: WriteS16BE
  nameWithType: Sdl.WriteS16BE
  fullName: SharpSDL3.Sdl.WriteS16BE
- uid: SharpSDL3.Sdl.WriteS16LE*
  commentId: Overload:SharpSDL3.Sdl.WriteS16LE
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WriteS16LE_SharpSDL3_Structs_IOStream_System_Int16_
  name: WriteS16LE
  nameWithType: Sdl.WriteS16LE
  fullName: SharpSDL3.Sdl.WriteS16LE
- uid: SharpSDL3.Sdl.WriteS32BE*
  commentId: Overload:SharpSDL3.Sdl.WriteS32BE
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WriteS32BE_SharpSDL3_Structs_IOStream_System_Int32_
  name: WriteS32BE
  nameWithType: Sdl.WriteS32BE
  fullName: SharpSDL3.Sdl.WriteS32BE
- uid: SharpSDL3.Sdl.WriteS32LE*
  commentId: Overload:SharpSDL3.Sdl.WriteS32LE
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WriteS32LE_SharpSDL3_Structs_IOStream_System_Int32_
  name: WriteS32LE
  nameWithType: Sdl.WriteS32LE
  fullName: SharpSDL3.Sdl.WriteS32LE
- uid: SharpSDL3.Sdl.WriteS64BE*
  commentId: Overload:SharpSDL3.Sdl.WriteS64BE
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WriteS64BE_SharpSDL3_Structs_IOStream_System_Int64_
  name: WriteS64BE
  nameWithType: Sdl.WriteS64BE
  fullName: SharpSDL3.Sdl.WriteS64BE
- uid: SharpSDL3.Sdl.WriteS64LE*
  commentId: Overload:SharpSDL3.Sdl.WriteS64LE
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WriteS64LE_SharpSDL3_Structs_IOStream_System_Int64_
  name: WriteS64LE
  nameWithType: Sdl.WriteS64LE
  fullName: SharpSDL3.Sdl.WriteS64LE
- uid: SharpSDL3.Sdl.WriteS8*
  commentId: Overload:SharpSDL3.Sdl.WriteS8
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WriteS8_SharpSDL3_Structs_IOStream_System_SByte_
  name: WriteS8
  nameWithType: Sdl.WriteS8
  fullName: SharpSDL3.Sdl.WriteS8
- uid: SharpSDL3.Sdl.WriteU16BE*
  commentId: Overload:SharpSDL3.Sdl.WriteU16BE
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WriteU16BE_SharpSDL3_Structs_IOStream_System_UInt16_
  name: WriteU16BE
  nameWithType: Sdl.WriteU16BE
  fullName: SharpSDL3.Sdl.WriteU16BE
- uid: SharpSDL3.Sdl.WriteU16LE*
  commentId: Overload:SharpSDL3.Sdl.WriteU16LE
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WriteU16LE_SharpSDL3_Structs_IOStream_System_UInt16_
  name: WriteU16LE
  nameWithType: Sdl.WriteU16LE
  fullName: SharpSDL3.Sdl.WriteU16LE
- uid: SharpSDL3.Sdl.WriteU32BE*
  commentId: Overload:SharpSDL3.Sdl.WriteU32BE
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WriteU32BE_SharpSDL3_Structs_IOStream_System_UInt32_
  name: WriteU32BE
  nameWithType: Sdl.WriteU32BE
  fullName: SharpSDL3.Sdl.WriteU32BE
- uid: SharpSDL3.Sdl.WriteU32LE*
  commentId: Overload:SharpSDL3.Sdl.WriteU32LE
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WriteU32LE_SharpSDL3_Structs_IOStream_System_UInt32_
  name: WriteU32LE
  nameWithType: Sdl.WriteU32LE
  fullName: SharpSDL3.Sdl.WriteU32LE
- uid: SharpSDL3.Sdl.WriteU64BE*
  commentId: Overload:SharpSDL3.Sdl.WriteU64BE
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WriteU64BE_SharpSDL3_Structs_IOStream_System_UInt64_
  name: WriteU64BE
  nameWithType: Sdl.WriteU64BE
  fullName: SharpSDL3.Sdl.WriteU64BE
- uid: SharpSDL3.Sdl.WriteU64LE*
  commentId: Overload:SharpSDL3.Sdl.WriteU64LE
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WriteU64LE_SharpSDL3_Structs_IOStream_System_UInt64_
  name: WriteU64LE
  nameWithType: Sdl.WriteU64LE
  fullName: SharpSDL3.Sdl.WriteU64LE
- uid: SharpSDL3.Sdl.WriteU8*
  commentId: Overload:SharpSDL3.Sdl.WriteU8
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WriteU8_SharpSDL3_Structs_IOStream_System_Byte_
  name: WriteU8
  nameWithType: Sdl.WriteU8
  fullName: SharpSDL3.Sdl.WriteU8
- uid: SharpSDL3.Sdl.DetachVirtualJoystick(System.UInt32)
  commentId: M:SharpSDL3.Sdl.DetachVirtualJoystick(System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DetachVirtualJoystick_System_UInt32_
  name: DetachVirtualJoystick(uint)
  nameWithType: Sdl.DetachVirtualJoystick(uint)
  fullName: SharpSDL3.Sdl.DetachVirtualJoystick(uint)
  nameWithType.vb: Sdl.DetachVirtualJoystick(UInteger)
  fullName.vb: SharpSDL3.Sdl.DetachVirtualJoystick(UInteger)
  name.vb: DetachVirtualJoystick(UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.DetachVirtualJoystick(System.UInt32)
    name: DetachVirtualJoystick
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DetachVirtualJoystick_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.DetachVirtualJoystick(System.UInt32)
    name: DetachVirtualJoystick
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DetachVirtualJoystick_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.AttachVirtualJoystick*
  commentId: Overload:SharpSDL3.Sdl.AttachVirtualJoystick
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_AttachVirtualJoystick_SharpSDL3_Structs_VirtualJoystickDesc__
  name: AttachVirtualJoystick
  nameWithType: Sdl.AttachVirtualJoystick
  fullName: SharpSDL3.Sdl.AttachVirtualJoystick
- uid: SharpSDL3.Structs.VirtualJoystickDesc
  commentId: T:SharpSDL3.Structs.VirtualJoystickDesc
  parent: SharpSDL3.Structs
  href: SharpSDL3.Structs.VirtualJoystickDesc.html
  name: VirtualJoystickDesc
  nameWithType: VirtualJoystickDesc
  fullName: SharpSDL3.Structs.VirtualJoystickDesc
- uid: SharpSDL3.Sdl.OpenJoystick(System.UInt32)
  commentId: M:SharpSDL3.Sdl.OpenJoystick(System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_OpenJoystick_System_UInt32_
  name: OpenJoystick(uint)
  nameWithType: Sdl.OpenJoystick(uint)
  fullName: SharpSDL3.Sdl.OpenJoystick(uint)
  nameWithType.vb: Sdl.OpenJoystick(UInteger)
  fullName.vb: SharpSDL3.Sdl.OpenJoystick(UInteger)
  name.vb: OpenJoystick(UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.OpenJoystick(System.UInt32)
    name: OpenJoystick
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_OpenJoystick_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.OpenJoystick(System.UInt32)
    name: OpenJoystick
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_OpenJoystick_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.CloseJoystick*
  commentId: Overload:SharpSDL3.Sdl.CloseJoystick
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CloseJoystick_System_IntPtr_
  name: CloseJoystick
  nameWithType: Sdl.CloseJoystick
  fullName: SharpSDL3.Sdl.CloseJoystick
- uid: SharpSDL3.Sdl.AttachVirtualJoystick(SharpSDL3.Structs.VirtualJoystickDesc@)
  commentId: M:SharpSDL3.Sdl.AttachVirtualJoystick(SharpSDL3.Structs.VirtualJoystickDesc@)
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_AttachVirtualJoystick_SharpSDL3_Structs_VirtualJoystickDesc__
  name: AttachVirtualJoystick(ref VirtualJoystickDesc)
  nameWithType: Sdl.AttachVirtualJoystick(ref VirtualJoystickDesc)
  fullName: SharpSDL3.Sdl.AttachVirtualJoystick(ref SharpSDL3.Structs.VirtualJoystickDesc)
  nameWithType.vb: Sdl.AttachVirtualJoystick(VirtualJoystickDesc)
  fullName.vb: SharpSDL3.Sdl.AttachVirtualJoystick(SharpSDL3.Structs.VirtualJoystickDesc)
  name.vb: AttachVirtualJoystick(VirtualJoystickDesc)
  spec.csharp:
  - uid: SharpSDL3.Sdl.AttachVirtualJoystick(SharpSDL3.Structs.VirtualJoystickDesc@)
    name: AttachVirtualJoystick
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_AttachVirtualJoystick_SharpSDL3_Structs_VirtualJoystickDesc__
  - name: (
  - name: ref
  - name: " "
  - uid: SharpSDL3.Structs.VirtualJoystickDesc
    name: VirtualJoystickDesc
    href: SharpSDL3.Structs.VirtualJoystickDesc.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.AttachVirtualJoystick(SharpSDL3.Structs.VirtualJoystickDesc@)
    name: AttachVirtualJoystick
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_AttachVirtualJoystick_SharpSDL3_Structs_VirtualJoystickDesc__
  - name: (
  - uid: SharpSDL3.Structs.VirtualJoystickDesc
    name: VirtualJoystickDesc
    href: SharpSDL3.Structs.VirtualJoystickDesc.html
  - name: )
- uid: SharpSDL3.Sdl.DetachVirtualJoystick*
  commentId: Overload:SharpSDL3.Sdl.DetachVirtualJoystick
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DetachVirtualJoystick_System_UInt32_
  name: DetachVirtualJoystick
  nameWithType: Sdl.DetachVirtualJoystick
  fullName: SharpSDL3.Sdl.DetachVirtualJoystick
- uid: SharpSDL3.Sdl.GetNumJoystickAxes(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetNumJoystickAxes(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetNumJoystickAxes_System_IntPtr_
  name: GetNumJoystickAxes(nint)
  nameWithType: Sdl.GetNumJoystickAxes(nint)
  fullName: SharpSDL3.Sdl.GetNumJoystickAxes(nint)
  nameWithType.vb: Sdl.GetNumJoystickAxes(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetNumJoystickAxes(System.IntPtr)
  name.vb: GetNumJoystickAxes(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetNumJoystickAxes(System.IntPtr)
    name: GetNumJoystickAxes
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetNumJoystickAxes_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetNumJoystickAxes(System.IntPtr)
    name: GetNumJoystickAxes
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetNumJoystickAxes_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GetJoystickAxis*
  commentId: Overload:SharpSDL3.Sdl.GetJoystickAxis
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickAxis_System_IntPtr_System_Int32_
  name: GetJoystickAxis
  nameWithType: Sdl.GetJoystickAxis
  fullName: SharpSDL3.Sdl.GetJoystickAxis
- uid: SharpSDL3.Sdl.GetJoystickAxisInitialState*
  commentId: Overload:SharpSDL3.Sdl.GetJoystickAxisInitialState
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickAxisInitialState_System_IntPtr_System_Int32_System_Int16__
  name: GetJoystickAxisInitialState
  nameWithType: Sdl.GetJoystickAxisInitialState
  fullName: SharpSDL3.Sdl.GetJoystickAxisInitialState
- uid: SharpSDL3.Sdl.GetNumJoystickBalls(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetNumJoystickBalls(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetNumJoystickBalls_System_IntPtr_
  name: GetNumJoystickBalls(nint)
  nameWithType: Sdl.GetNumJoystickBalls(nint)
  fullName: SharpSDL3.Sdl.GetNumJoystickBalls(nint)
  nameWithType.vb: Sdl.GetNumJoystickBalls(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetNumJoystickBalls(System.IntPtr)
  name.vb: GetNumJoystickBalls(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetNumJoystickBalls(System.IntPtr)
    name: GetNumJoystickBalls
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetNumJoystickBalls_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetNumJoystickBalls(System.IntPtr)
    name: GetNumJoystickBalls
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetNumJoystickBalls_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GetJoystickBall*
  commentId: Overload:SharpSDL3.Sdl.GetJoystickBall
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickBall_System_IntPtr_System_Int32_System_Int32__System_Int32__
  name: GetJoystickBall
  nameWithType: Sdl.GetJoystickBall
  fullName: SharpSDL3.Sdl.GetJoystickBall
- uid: SharpSDL3.Sdl.GetNumJoystickButtons(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetNumJoystickButtons(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetNumJoystickButtons_System_IntPtr_
  name: GetNumJoystickButtons(nint)
  nameWithType: Sdl.GetNumJoystickButtons(nint)
  fullName: SharpSDL3.Sdl.GetNumJoystickButtons(nint)
  nameWithType.vb: Sdl.GetNumJoystickButtons(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetNumJoystickButtons(System.IntPtr)
  name.vb: GetNumJoystickButtons(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetNumJoystickButtons(System.IntPtr)
    name: GetNumJoystickButtons
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetNumJoystickButtons_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetNumJoystickButtons(System.IntPtr)
    name: GetNumJoystickButtons
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetNumJoystickButtons_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GetJoystickButton*
  commentId: Overload:SharpSDL3.Sdl.GetJoystickButton
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickButton_System_IntPtr_System_Int32_
  name: GetJoystickButton
  nameWithType: Sdl.GetJoystickButton
  fullName: SharpSDL3.Sdl.GetJoystickButton
- uid: SharpSDL3.Sdl.GetJoystickConnectionState*
  commentId: Overload:SharpSDL3.Sdl.GetJoystickConnectionState
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickConnectionState_System_IntPtr_
  name: GetJoystickConnectionState
  nameWithType: Sdl.GetJoystickConnectionState
  fullName: SharpSDL3.Sdl.GetJoystickConnectionState
- uid: SharpSDL3.Sdl.GetJoystickFirmwareVersion*
  commentId: Overload:SharpSDL3.Sdl.GetJoystickFirmwareVersion
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickFirmwareVersion_System_IntPtr_
  name: GetJoystickFirmwareVersion
  nameWithType: Sdl.GetJoystickFirmwareVersion
  fullName: SharpSDL3.Sdl.GetJoystickFirmwareVersion
- uid: SharpSDL3.Sdl.GetJoystickFromId*
  commentId: Overload:SharpSDL3.Sdl.GetJoystickFromId
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickFromId_System_UInt32_
  name: GetJoystickFromId
  nameWithType: Sdl.GetJoystickFromId
  fullName: SharpSDL3.Sdl.GetJoystickFromId
- uid: SharpSDL3.Sdl.GetJoystickPlayerIndex(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetJoystickPlayerIndex(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickPlayerIndex_System_IntPtr_
  name: GetJoystickPlayerIndex(nint)
  nameWithType: Sdl.GetJoystickPlayerIndex(nint)
  fullName: SharpSDL3.Sdl.GetJoystickPlayerIndex(nint)
  nameWithType.vb: Sdl.GetJoystickPlayerIndex(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetJoystickPlayerIndex(System.IntPtr)
  name.vb: GetJoystickPlayerIndex(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetJoystickPlayerIndex(System.IntPtr)
    name: GetJoystickPlayerIndex
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickPlayerIndex_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetJoystickPlayerIndex(System.IntPtr)
    name: GetJoystickPlayerIndex
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickPlayerIndex_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.SetJoystickPlayerIndex(System.IntPtr,System.Int32)
  commentId: M:SharpSDL3.Sdl.SetJoystickPlayerIndex(System.IntPtr,System.Int32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetJoystickPlayerIndex_System_IntPtr_System_Int32_
  name: SetJoystickPlayerIndex(nint, int)
  nameWithType: Sdl.SetJoystickPlayerIndex(nint, int)
  fullName: SharpSDL3.Sdl.SetJoystickPlayerIndex(nint, int)
  nameWithType.vb: Sdl.SetJoystickPlayerIndex(IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.SetJoystickPlayerIndex(System.IntPtr, Integer)
  name.vb: SetJoystickPlayerIndex(IntPtr, Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetJoystickPlayerIndex(System.IntPtr,System.Int32)
    name: SetJoystickPlayerIndex
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetJoystickPlayerIndex_System_IntPtr_System_Int32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetJoystickPlayerIndex(System.IntPtr,System.Int32)
    name: SetJoystickPlayerIndex
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetJoystickPlayerIndex_System_IntPtr_System_Int32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.GetJoystickFromPlayerIndex*
  commentId: Overload:SharpSDL3.Sdl.GetJoystickFromPlayerIndex
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickFromPlayerIndex_System_Int32_
  name: GetJoystickFromPlayerIndex
  nameWithType: Sdl.GetJoystickFromPlayerIndex
  fullName: SharpSDL3.Sdl.GetJoystickFromPlayerIndex
- uid: SharpSDL3.Sdl.GetJoystickGuid*
  commentId: Overload:SharpSDL3.Sdl.GetJoystickGuid
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickGuid_System_IntPtr_
  name: GetJoystickGuid
  nameWithType: Sdl.GetJoystickGuid
  fullName: SharpSDL3.Sdl.GetJoystickGuid
- uid: SharpSDL3.Sdl.GetJoystickGuidForId*
  commentId: Overload:SharpSDL3.Sdl.GetJoystickGuidForId
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickGuidForId_System_UInt32_
  name: GetJoystickGuidForId
  nameWithType: Sdl.GetJoystickGuidForId
  fullName: SharpSDL3.Sdl.GetJoystickGuidForId
- uid: SharpSDL3.Sdl.GetJoystickGUIDInfo*
  commentId: Overload:SharpSDL3.Sdl.GetJoystickGUIDInfo
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickGUIDInfo_SharpSDL3_Structs_SdlGuid_System_UInt16__System_UInt16__System_UInt16__System_UInt16__
  name: GetJoystickGUIDInfo
  nameWithType: Sdl.GetJoystickGUIDInfo
  fullName: SharpSDL3.Sdl.GetJoystickGUIDInfo
- uid: SharpSDL3.Sdl.GetNumJoystickHats(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetNumJoystickHats(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetNumJoystickHats_System_IntPtr_
  name: GetNumJoystickHats(nint)
  nameWithType: Sdl.GetNumJoystickHats(nint)
  fullName: SharpSDL3.Sdl.GetNumJoystickHats(nint)
  nameWithType.vb: Sdl.GetNumJoystickHats(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetNumJoystickHats(System.IntPtr)
  name.vb: GetNumJoystickHats(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetNumJoystickHats(System.IntPtr)
    name: GetNumJoystickHats
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetNumJoystickHats_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetNumJoystickHats(System.IntPtr)
    name: GetNumJoystickHats
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetNumJoystickHats_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GetJoystickHat*
  commentId: Overload:SharpSDL3.Sdl.GetJoystickHat
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickHat_System_IntPtr_System_Int32_
  name: GetJoystickHat
  nameWithType: Sdl.GetJoystickHat
  fullName: SharpSDL3.Sdl.GetJoystickHat
- uid: SharpSDL3.Sdl.GetJoystickID*
  commentId: Overload:SharpSDL3.Sdl.GetJoystickID
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickID_System_IntPtr_
  name: GetJoystickID
  nameWithType: Sdl.GetJoystickID
  fullName: SharpSDL3.Sdl.GetJoystickID
- uid: SharpSDL3.Sdl.GetJoystickName*
  commentId: Overload:SharpSDL3.Sdl.GetJoystickName
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickName_System_IntPtr_
  name: GetJoystickName
  nameWithType: Sdl.GetJoystickName
  fullName: SharpSDL3.Sdl.GetJoystickName
- uid: SharpSDL3.Sdl.GetJoystickName(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetJoystickName(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickName_System_IntPtr_
  name: GetJoystickName(nint)
  nameWithType: Sdl.GetJoystickName(nint)
  fullName: SharpSDL3.Sdl.GetJoystickName(nint)
  nameWithType.vb: Sdl.GetJoystickName(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetJoystickName(System.IntPtr)
  name.vb: GetJoystickName(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetJoystickName(System.IntPtr)
    name: GetJoystickName
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickName_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetJoystickName(System.IntPtr)
    name: GetJoystickName
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickName_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GetJoystickNameForId*
  commentId: Overload:SharpSDL3.Sdl.GetJoystickNameForId
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickNameForId_System_UInt32_
  name: GetJoystickNameForId
  nameWithType: Sdl.GetJoystickNameForId
  fullName: SharpSDL3.Sdl.GetJoystickNameForId
- uid: SharpSDL3.Sdl.GetJoystickPath*
  commentId: Overload:SharpSDL3.Sdl.GetJoystickPath
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickPath_System_IntPtr_
  name: GetJoystickPath
  nameWithType: Sdl.GetJoystickPath
  fullName: SharpSDL3.Sdl.GetJoystickPath
- uid: SharpSDL3.Sdl.GetJoystickPath(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetJoystickPath(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickPath_System_IntPtr_
  name: GetJoystickPath(nint)
  nameWithType: Sdl.GetJoystickPath(nint)
  fullName: SharpSDL3.Sdl.GetJoystickPath(nint)
  nameWithType.vb: Sdl.GetJoystickPath(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetJoystickPath(System.IntPtr)
  name.vb: GetJoystickPath(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetJoystickPath(System.IntPtr)
    name: GetJoystickPath
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickPath_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetJoystickPath(System.IntPtr)
    name: GetJoystickPath
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickPath_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GetJoystickPathForId*
  commentId: Overload:SharpSDL3.Sdl.GetJoystickPathForId
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickPathForId_System_UInt32_
  name: GetJoystickPathForId
  nameWithType: Sdl.GetJoystickPathForId
  fullName: SharpSDL3.Sdl.GetJoystickPathForId
- uid: SharpSDL3.Sdl.GetJoystickPlayerIndex*
  commentId: Overload:SharpSDL3.Sdl.GetJoystickPlayerIndex
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickPlayerIndex_System_IntPtr_
  name: GetJoystickPlayerIndex
  nameWithType: Sdl.GetJoystickPlayerIndex
  fullName: SharpSDL3.Sdl.GetJoystickPlayerIndex
- uid: SharpSDL3.Sdl.GetJoystickPlayerIndexForId*
  commentId: Overload:SharpSDL3.Sdl.GetJoystickPlayerIndexForId
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickPlayerIndexForId_System_UInt32_
  name: GetJoystickPlayerIndexForId
  nameWithType: Sdl.GetJoystickPlayerIndexForId
  fullName: SharpSDL3.Sdl.GetJoystickPlayerIndexForId
- uid: SharpSDL3.Sdl.GetJoystickPowerInfo*
  commentId: Overload:SharpSDL3.Sdl.GetJoystickPowerInfo
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickPowerInfo_System_IntPtr_System_Int32__
  name: GetJoystickPowerInfo
  nameWithType: Sdl.GetJoystickPowerInfo
  fullName: SharpSDL3.Sdl.GetJoystickPowerInfo
- uid: SharpSDL3.Sdl.GetJoystickProduct*
  commentId: Overload:SharpSDL3.Sdl.GetJoystickProduct
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickProduct_System_IntPtr_
  name: GetJoystickProduct
  nameWithType: Sdl.GetJoystickProduct
  fullName: SharpSDL3.Sdl.GetJoystickProduct
- uid: SharpSDL3.Sdl.GetJoystickProduct(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetJoystickProduct(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickProduct_System_IntPtr_
  name: GetJoystickProduct(nint)
  nameWithType: Sdl.GetJoystickProduct(nint)
  fullName: SharpSDL3.Sdl.GetJoystickProduct(nint)
  nameWithType.vb: Sdl.GetJoystickProduct(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetJoystickProduct(System.IntPtr)
  name.vb: GetJoystickProduct(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetJoystickProduct(System.IntPtr)
    name: GetJoystickProduct
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickProduct_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetJoystickProduct(System.IntPtr)
    name: GetJoystickProduct
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickProduct_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GetJoystickProductForId*
  commentId: Overload:SharpSDL3.Sdl.GetJoystickProductForId
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickProductForId_System_UInt32_
  name: GetJoystickProductForId
  nameWithType: Sdl.GetJoystickProductForId
  fullName: SharpSDL3.Sdl.GetJoystickProductForId
- uid: SharpSDL3.Sdl.GetJoystickProductVersion*
  commentId: Overload:SharpSDL3.Sdl.GetJoystickProductVersion
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickProductVersion_System_IntPtr_
  name: GetJoystickProductVersion
  nameWithType: Sdl.GetJoystickProductVersion
  fullName: SharpSDL3.Sdl.GetJoystickProductVersion
- uid: SharpSDL3.Sdl.GetJoystickProductVersion(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetJoystickProductVersion(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickProductVersion_System_IntPtr_
  name: GetJoystickProductVersion(nint)
  nameWithType: Sdl.GetJoystickProductVersion(nint)
  fullName: SharpSDL3.Sdl.GetJoystickProductVersion(nint)
  nameWithType.vb: Sdl.GetJoystickProductVersion(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetJoystickProductVersion(System.IntPtr)
  name.vb: GetJoystickProductVersion(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetJoystickProductVersion(System.IntPtr)
    name: GetJoystickProductVersion
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickProductVersion_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetJoystickProductVersion(System.IntPtr)
    name: GetJoystickProductVersion
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickProductVersion_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GetJoystickProductVersionForId*
  commentId: Overload:SharpSDL3.Sdl.GetJoystickProductVersionForId
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickProductVersionForId_System_UInt32_
  name: GetJoystickProductVersionForId
  nameWithType: Sdl.GetJoystickProductVersionForId
  fullName: SharpSDL3.Sdl.GetJoystickProductVersionForId
- uid: SharpSDL3.Sdl.GetJoystickProperties*
  commentId: Overload:SharpSDL3.Sdl.GetJoystickProperties
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickProperties_System_IntPtr_
  name: GetJoystickProperties
  nameWithType: Sdl.GetJoystickProperties
  fullName: SharpSDL3.Sdl.GetJoystickProperties
- uid: SharpSDL3.Sdl.HasJoystick
  commentId: M:SharpSDL3.Sdl.HasJoystick
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasJoystick
  name: HasJoystick()
  nameWithType: Sdl.HasJoystick()
  fullName: SharpSDL3.Sdl.HasJoystick()
  spec.csharp:
  - uid: SharpSDL3.Sdl.HasJoystick
    name: HasJoystick
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasJoystick
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.HasJoystick
    name: HasJoystick
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasJoystick
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.GetJoysticks*
  commentId: Overload:SharpSDL3.Sdl.GetJoysticks
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoysticks_System_Int32__
  name: GetJoysticks
  nameWithType: Sdl.GetJoysticks
  fullName: SharpSDL3.Sdl.GetJoysticks
- uid: System.Collections.Generic.List{System.IntPtr}
  commentId: T:System.Collections.Generic.List{System.IntPtr}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<nint>
  nameWithType: List<nint>
  fullName: System.Collections.Generic.List<nint>
  nameWithType.vb: List(Of IntPtr)
  fullName.vb: System.Collections.Generic.List(Of System.IntPtr)
  name.vb: List(Of IntPtr)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: SharpSDL3.Sdl.GetJoystickSerial*
  commentId: Overload:SharpSDL3.Sdl.GetJoystickSerial
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickSerial_System_IntPtr_
  name: GetJoystickSerial
  nameWithType: Sdl.GetJoystickSerial
  fullName: SharpSDL3.Sdl.GetJoystickSerial
- uid: SharpSDL3.Sdl.GetJoystickType*
  commentId: Overload:SharpSDL3.Sdl.GetJoystickType
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickType_System_IntPtr_
  name: GetJoystickType
  nameWithType: Sdl.GetJoystickType
  fullName: SharpSDL3.Sdl.GetJoystickType
- uid: SharpSDL3.Enums.JoystickType
  commentId: T:SharpSDL3.Enums.JoystickType
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.JoystickType.html
  name: JoystickType
  nameWithType: JoystickType
  fullName: SharpSDL3.Enums.JoystickType
- uid: SharpSDL3.Sdl.GetJoystickType(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetJoystickType(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickType_System_IntPtr_
  name: GetJoystickType(nint)
  nameWithType: Sdl.GetJoystickType(nint)
  fullName: SharpSDL3.Sdl.GetJoystickType(nint)
  nameWithType.vb: Sdl.GetJoystickType(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetJoystickType(System.IntPtr)
  name.vb: GetJoystickType(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetJoystickType(System.IntPtr)
    name: GetJoystickType
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickType_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetJoystickType(System.IntPtr)
    name: GetJoystickType
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickType_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GetJoystickTypeForId*
  commentId: Overload:SharpSDL3.Sdl.GetJoystickTypeForId
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickTypeForId_System_UInt32_
  name: GetJoystickTypeForId
  nameWithType: Sdl.GetJoystickTypeForId
  fullName: SharpSDL3.Sdl.GetJoystickTypeForId
- uid: SharpSDL3.Sdl.GetJoystickVendor*
  commentId: Overload:SharpSDL3.Sdl.GetJoystickVendor
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickVendor_System_IntPtr_
  name: GetJoystickVendor
  nameWithType: Sdl.GetJoystickVendor
  fullName: SharpSDL3.Sdl.GetJoystickVendor
- uid: SharpSDL3.Sdl.GetJoystickVendor(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetJoystickVendor(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickVendor_System_IntPtr_
  name: GetJoystickVendor(nint)
  nameWithType: Sdl.GetJoystickVendor(nint)
  fullName: SharpSDL3.Sdl.GetJoystickVendor(nint)
  nameWithType.vb: Sdl.GetJoystickVendor(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetJoystickVendor(System.IntPtr)
  name.vb: GetJoystickVendor(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetJoystickVendor(System.IntPtr)
    name: GetJoystickVendor
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickVendor_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetJoystickVendor(System.IntPtr)
    name: GetJoystickVendor
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickVendor_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GetJoystickVendorForId*
  commentId: Overload:SharpSDL3.Sdl.GetJoystickVendorForId
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickVendorForId_System_UInt32_
  name: GetJoystickVendorForId
  nameWithType: Sdl.GetJoystickVendorForId
  fullName: SharpSDL3.Sdl.GetJoystickVendorForId
- uid: SharpSDL3.Sdl.GetJoystickAxis(System.IntPtr,System.Int32)
  commentId: M:SharpSDL3.Sdl.GetJoystickAxis(System.IntPtr,System.Int32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickAxis_System_IntPtr_System_Int32_
  name: GetJoystickAxis(nint, int)
  nameWithType: Sdl.GetJoystickAxis(nint, int)
  fullName: SharpSDL3.Sdl.GetJoystickAxis(nint, int)
  nameWithType.vb: Sdl.GetJoystickAxis(IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.GetJoystickAxis(System.IntPtr, Integer)
  name.vb: GetJoystickAxis(IntPtr, Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetJoystickAxis(System.IntPtr,System.Int32)
    name: GetJoystickAxis
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickAxis_System_IntPtr_System_Int32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetJoystickAxis(System.IntPtr,System.Int32)
    name: GetJoystickAxis
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickAxis_System_IntPtr_System_Int32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.GetNumJoystickAxes*
  commentId: Overload:SharpSDL3.Sdl.GetNumJoystickAxes
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetNumJoystickAxes_System_IntPtr_
  name: GetNumJoystickAxes
  nameWithType: Sdl.GetNumJoystickAxes
  fullName: SharpSDL3.Sdl.GetNumJoystickAxes
- uid: SharpSDL3.Sdl.GetJoystickBall(System.IntPtr,System.Int32,System.Int32@,System.Int32@)
  commentId: M:SharpSDL3.Sdl.GetJoystickBall(System.IntPtr,System.Int32,System.Int32@,System.Int32@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickBall_System_IntPtr_System_Int32_System_Int32__System_Int32__
  name: GetJoystickBall(nint, int, out int, out int)
  nameWithType: Sdl.GetJoystickBall(nint, int, out int, out int)
  fullName: SharpSDL3.Sdl.GetJoystickBall(nint, int, out int, out int)
  nameWithType.vb: Sdl.GetJoystickBall(IntPtr, Integer, Integer, Integer)
  fullName.vb: SharpSDL3.Sdl.GetJoystickBall(System.IntPtr, Integer, Integer, Integer)
  name.vb: GetJoystickBall(IntPtr, Integer, Integer, Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetJoystickBall(System.IntPtr,System.Int32,System.Int32@,System.Int32@)
    name: GetJoystickBall
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickBall_System_IntPtr_System_Int32_System_Int32__System_Int32__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetJoystickBall(System.IntPtr,System.Int32,System.Int32@,System.Int32@)
    name: GetJoystickBall
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickBall_System_IntPtr_System_Int32_System_Int32__System_Int32__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.GetNumJoystickBalls*
  commentId: Overload:SharpSDL3.Sdl.GetNumJoystickBalls
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetNumJoystickBalls_System_IntPtr_
  name: GetNumJoystickBalls
  nameWithType: Sdl.GetNumJoystickBalls
  fullName: SharpSDL3.Sdl.GetNumJoystickBalls
- uid: SharpSDL3.Sdl.GetJoystickButton(System.IntPtr,System.Int32)
  commentId: M:SharpSDL3.Sdl.GetJoystickButton(System.IntPtr,System.Int32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickButton_System_IntPtr_System_Int32_
  name: GetJoystickButton(nint, int)
  nameWithType: Sdl.GetJoystickButton(nint, int)
  fullName: SharpSDL3.Sdl.GetJoystickButton(nint, int)
  nameWithType.vb: Sdl.GetJoystickButton(IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.GetJoystickButton(System.IntPtr, Integer)
  name.vb: GetJoystickButton(IntPtr, Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetJoystickButton(System.IntPtr,System.Int32)
    name: GetJoystickButton
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickButton_System_IntPtr_System_Int32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetJoystickButton(System.IntPtr,System.Int32)
    name: GetJoystickButton
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickButton_System_IntPtr_System_Int32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.GetNumJoystickButtons*
  commentId: Overload:SharpSDL3.Sdl.GetNumJoystickButtons
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetNumJoystickButtons_System_IntPtr_
  name: GetNumJoystickButtons
  nameWithType: Sdl.GetNumJoystickButtons
  fullName: SharpSDL3.Sdl.GetNumJoystickButtons
- uid: SharpSDL3.Sdl.GetJoystickHat(System.IntPtr,System.Int32)
  commentId: M:SharpSDL3.Sdl.GetJoystickHat(System.IntPtr,System.Int32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickHat_System_IntPtr_System_Int32_
  name: GetJoystickHat(nint, int)
  nameWithType: Sdl.GetJoystickHat(nint, int)
  fullName: SharpSDL3.Sdl.GetJoystickHat(nint, int)
  nameWithType.vb: Sdl.GetJoystickHat(IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.GetJoystickHat(System.IntPtr, Integer)
  name.vb: GetJoystickHat(IntPtr, Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetJoystickHat(System.IntPtr,System.Int32)
    name: GetJoystickHat
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickHat_System_IntPtr_System_Int32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetJoystickHat(System.IntPtr,System.Int32)
    name: GetJoystickHat
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetJoystickHat_System_IntPtr_System_Int32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.GetNumJoystickHats*
  commentId: Overload:SharpSDL3.Sdl.GetNumJoystickHats
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetNumJoystickHats_System_IntPtr_
  name: GetNumJoystickHats
  nameWithType: Sdl.GetNumJoystickHats
  fullName: SharpSDL3.Sdl.GetNumJoystickHats
- uid: SharpSDL3.Sdl.HasJoystick*
  commentId: Overload:SharpSDL3.Sdl.HasJoystick
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasJoystick
  name: HasJoystick
  nameWithType: Sdl.HasJoystick
  fullName: SharpSDL3.Sdl.HasJoystick
- uid: SharpSDL3.Sdl.IsJoystickVirtual*
  commentId: Overload:SharpSDL3.Sdl.IsJoystickVirtual
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_IsJoystickVirtual_System_UInt32_
  name: IsJoystickVirtual
  nameWithType: Sdl.IsJoystickVirtual
  fullName: SharpSDL3.Sdl.IsJoystickVirtual
- uid: SharpSDL3.Sdl.JoystickConnected*
  commentId: Overload:SharpSDL3.Sdl.JoystickConnected
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_JoystickConnected_System_IntPtr_
  name: JoystickConnected
  nameWithType: Sdl.JoystickConnected
  fullName: SharpSDL3.Sdl.JoystickConnected
- uid: SharpSDL3.Sdl.SetJoystickEventsEnabled(System.Boolean)
  commentId: M:SharpSDL3.Sdl.SetJoystickEventsEnabled(System.Boolean)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetJoystickEventsEnabled_System_Boolean_
  name: SetJoystickEventsEnabled(bool)
  nameWithType: Sdl.SetJoystickEventsEnabled(bool)
  fullName: SharpSDL3.Sdl.SetJoystickEventsEnabled(bool)
  nameWithType.vb: Sdl.SetJoystickEventsEnabled(Boolean)
  fullName.vb: SharpSDL3.Sdl.SetJoystickEventsEnabled(Boolean)
  name.vb: SetJoystickEventsEnabled(Boolean)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetJoystickEventsEnabled(System.Boolean)
    name: SetJoystickEventsEnabled
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetJoystickEventsEnabled_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetJoystickEventsEnabled(System.Boolean)
    name: SetJoystickEventsEnabled
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetJoystickEventsEnabled_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: SharpSDL3.Sdl.JoystickEventsEnabled*
  commentId: Overload:SharpSDL3.Sdl.JoystickEventsEnabled
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_JoystickEventsEnabled
  name: JoystickEventsEnabled
  nameWithType: Sdl.JoystickEventsEnabled
  fullName: SharpSDL3.Sdl.JoystickEventsEnabled
- uid: SharpSDL3.Sdl.LockJoysticks*
  commentId: Overload:SharpSDL3.Sdl.LockJoysticks
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LockJoysticks
  name: LockJoysticks
  nameWithType: Sdl.LockJoysticks
  fullName: SharpSDL3.Sdl.LockJoysticks
- uid: SharpSDL3.Sdl.CloseJoystick(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.CloseJoystick(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CloseJoystick_System_IntPtr_
  name: CloseJoystick(nint)
  nameWithType: Sdl.CloseJoystick(nint)
  fullName: SharpSDL3.Sdl.CloseJoystick(nint)
  nameWithType.vb: Sdl.CloseJoystick(IntPtr)
  fullName.vb: SharpSDL3.Sdl.CloseJoystick(System.IntPtr)
  name.vb: CloseJoystick(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.CloseJoystick(System.IntPtr)
    name: CloseJoystick
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CloseJoystick_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.CloseJoystick(System.IntPtr)
    name: CloseJoystick
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CloseJoystick_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.OpenJoystick*
  commentId: Overload:SharpSDL3.Sdl.OpenJoystick
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_OpenJoystick_System_UInt32_
  name: OpenJoystick
  nameWithType: Sdl.OpenJoystick
  fullName: SharpSDL3.Sdl.OpenJoystick
- uid: SharpSDL3.Sdl.RumbleJoystick*
  commentId: Overload:SharpSDL3.Sdl.RumbleJoystick
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RumbleJoystick_System_IntPtr_System_UInt16_System_UInt16_System_UInt32_
  name: RumbleJoystick
  nameWithType: Sdl.RumbleJoystick
  fullName: SharpSDL3.Sdl.RumbleJoystick
- uid: SharpSDL3.Sdl.RumbleJoystick(System.IntPtr,System.UInt16,System.UInt16,System.UInt32)
  commentId: M:SharpSDL3.Sdl.RumbleJoystick(System.IntPtr,System.UInt16,System.UInt16,System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RumbleJoystick_System_IntPtr_System_UInt16_System_UInt16_System_UInt32_
  name: RumbleJoystick(nint, ushort, ushort, uint)
  nameWithType: Sdl.RumbleJoystick(nint, ushort, ushort, uint)
  fullName: SharpSDL3.Sdl.RumbleJoystick(nint, ushort, ushort, uint)
  nameWithType.vb: Sdl.RumbleJoystick(IntPtr, UShort, UShort, UInteger)
  fullName.vb: SharpSDL3.Sdl.RumbleJoystick(System.IntPtr, UShort, UShort, UInteger)
  name.vb: RumbleJoystick(IntPtr, UShort, UShort, UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.RumbleJoystick(System.IntPtr,System.UInt16,System.UInt16,System.UInt32)
    name: RumbleJoystick
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RumbleJoystick_System_IntPtr_System_UInt16_System_UInt16_System_UInt32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UInt16
    name: ushort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint16
  - name: ','
  - name: " "
  - uid: System.UInt16
    name: ushort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint16
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.RumbleJoystick(System.IntPtr,System.UInt16,System.UInt16,System.UInt32)
    name: RumbleJoystick
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RumbleJoystick_System_IntPtr_System_UInt16_System_UInt16_System_UInt32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UInt16
    name: UShort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint16
  - name: ','
  - name: " "
  - uid: System.UInt16
    name: UShort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint16
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.RumbleJoystickTriggers*
  commentId: Overload:SharpSDL3.Sdl.RumbleJoystickTriggers
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RumbleJoystickTriggers_System_IntPtr_System_UInt16_System_UInt16_System_UInt32_
  name: RumbleJoystickTriggers
  nameWithType: Sdl.RumbleJoystickTriggers
  fullName: SharpSDL3.Sdl.RumbleJoystickTriggers
- uid: SharpSDL3.Sdl.SendJoystickEffect*
  commentId: Overload:SharpSDL3.Sdl.SendJoystickEffect
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SendJoystickEffect_System_IntPtr_System_IntPtr_System_Int32_
  name: SendJoystickEffect
  nameWithType: Sdl.SendJoystickEffect
  fullName: SharpSDL3.Sdl.SendJoystickEffect
- uid: SharpSDL3.Sdl.SendJoystickVirtualSensorData*
  commentId: Overload:SharpSDL3.Sdl.SendJoystickVirtualSensorData
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SendJoystickVirtualSensorData_System_IntPtr_SharpSDL3_Enums_SensorType_System_UInt64_System_IntPtr_System_Int32_
  name: SendJoystickVirtualSensorData
  nameWithType: Sdl.SendJoystickVirtualSensorData
  fullName: SharpSDL3.Sdl.SendJoystickVirtualSensorData
- uid: System.Single[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float[]
  nameWithType: float[]
  fullName: float[]
  nameWithType.vb: Single()
  fullName.vb: Single()
  name.vb: Single()
  spec.csharp:
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.JoystickEventsEnabled
  commentId: M:SharpSDL3.Sdl.JoystickEventsEnabled
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_JoystickEventsEnabled
  name: JoystickEventsEnabled()
  nameWithType: Sdl.JoystickEventsEnabled()
  fullName: SharpSDL3.Sdl.JoystickEventsEnabled()
  spec.csharp:
  - uid: SharpSDL3.Sdl.JoystickEventsEnabled
    name: JoystickEventsEnabled
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_JoystickEventsEnabled
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.JoystickEventsEnabled
    name: JoystickEventsEnabled
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_JoystickEventsEnabled
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.UpdateJoysticks
  commentId: M:SharpSDL3.Sdl.UpdateJoysticks
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UpdateJoysticks
  name: UpdateJoysticks()
  nameWithType: Sdl.UpdateJoysticks()
  fullName: SharpSDL3.Sdl.UpdateJoysticks()
  spec.csharp:
  - uid: SharpSDL3.Sdl.UpdateJoysticks
    name: UpdateJoysticks
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UpdateJoysticks
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.UpdateJoysticks
    name: UpdateJoysticks
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UpdateJoysticks
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.SetJoystickEventsEnabled*
  commentId: Overload:SharpSDL3.Sdl.SetJoystickEventsEnabled
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetJoystickEventsEnabled_System_Boolean_
  name: SetJoystickEventsEnabled
  nameWithType: Sdl.SetJoystickEventsEnabled
  fullName: SharpSDL3.Sdl.SetJoystickEventsEnabled
- uid: SharpSDL3.Sdl.SetJoystickLED*
  commentId: Overload:SharpSDL3.Sdl.SetJoystickLED
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetJoystickLED_System_IntPtr_System_Byte_System_Byte_System_Byte_
  name: SetJoystickLED
  nameWithType: Sdl.SetJoystickLED
  fullName: SharpSDL3.Sdl.SetJoystickLED
- uid: SharpSDL3.Sdl.SetJoystickPlayerIndex*
  commentId: Overload:SharpSDL3.Sdl.SetJoystickPlayerIndex
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetJoystickPlayerIndex_System_IntPtr_System_Int32_
  name: SetJoystickPlayerIndex
  nameWithType: Sdl.SetJoystickPlayerIndex
  fullName: SharpSDL3.Sdl.SetJoystickPlayerIndex
- uid: SharpSDL3.Sdl.SetJoystickVirtualAxis*
  commentId: Overload:SharpSDL3.Sdl.SetJoystickVirtualAxis
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetJoystickVirtualAxis_System_IntPtr_System_Int32_System_Int16_
  name: SetJoystickVirtualAxis
  nameWithType: Sdl.SetJoystickVirtualAxis
  fullName: SharpSDL3.Sdl.SetJoystickVirtualAxis
- uid: SharpSDL3.Sdl.SetJoystickVirtualBall*
  commentId: Overload:SharpSDL3.Sdl.SetJoystickVirtualBall
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetJoystickVirtualBall_System_IntPtr_System_Int32_System_Int16_System_Int16_
  name: SetJoystickVirtualBall
  nameWithType: Sdl.SetJoystickVirtualBall
  fullName: SharpSDL3.Sdl.SetJoystickVirtualBall
- uid: SharpSDL3.Sdl.SetJoystickVirtualButton*
  commentId: Overload:SharpSDL3.Sdl.SetJoystickVirtualButton
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetJoystickVirtualButton_System_IntPtr_System_Int32_SharpSDL3_Structs_SdlBool_
  name: SetJoystickVirtualButton
  nameWithType: Sdl.SetJoystickVirtualButton
  fullName: SharpSDL3.Sdl.SetJoystickVirtualButton
- uid: SharpSDL3.Sdl.SetJoystickVirtualHat*
  commentId: Overload:SharpSDL3.Sdl.SetJoystickVirtualHat
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetJoystickVirtualHat_System_IntPtr_System_Int32_System_Byte_
  name: SetJoystickVirtualHat
  nameWithType: Sdl.SetJoystickVirtualHat
  fullName: SharpSDL3.Sdl.SetJoystickVirtualHat
- uid: SharpSDL3.Sdl.SetJoystickVirtualTouchpad*
  commentId: Overload:SharpSDL3.Sdl.SetJoystickVirtualTouchpad
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetJoystickVirtualTouchpad_System_IntPtr_System_Int32_System_Int32_SharpSDL3_Structs_SdlBool_System_Single_System_Single_System_Single_
  name: SetJoystickVirtualTouchpad
  nameWithType: Sdl.SetJoystickVirtualTouchpad
  fullName: SharpSDL3.Sdl.SetJoystickVirtualTouchpad
- uid: SharpSDL3.Sdl.UnlockJoysticks*
  commentId: Overload:SharpSDL3.Sdl.UnlockJoysticks
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UnlockJoysticks
  name: UnlockJoysticks
  nameWithType: Sdl.UnlockJoysticks
  fullName: SharpSDL3.Sdl.UnlockJoysticks
- uid: SharpSDL3.Sdl.UpdateJoysticks*
  commentId: Overload:SharpSDL3.Sdl.UpdateJoysticks
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UpdateJoysticks
  name: UpdateJoysticks
  nameWithType: Sdl.UpdateJoysticks
  fullName: SharpSDL3.Sdl.UpdateJoysticks
- uid: SharpSDL3.Sdl.SetLogOutputFunction(SharpSDL3.Delegates.SdlLogOutputFunction,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.SetLogOutputFunction(SharpSDL3.Delegates.SdlLogOutputFunction,System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetLogOutputFunction_SharpSDL3_Delegates_SdlLogOutputFunction_System_IntPtr_
  name: SetLogOutputFunction(SdlLogOutputFunction, nint)
  nameWithType: Sdl.SetLogOutputFunction(Delegates.SdlLogOutputFunction, nint)
  fullName: SharpSDL3.Sdl.SetLogOutputFunction(SharpSDL3.Delegates.SdlLogOutputFunction, nint)
  nameWithType.vb: Sdl.SetLogOutputFunction(Delegates.SdlLogOutputFunction, IntPtr)
  fullName.vb: SharpSDL3.Sdl.SetLogOutputFunction(SharpSDL3.Delegates.SdlLogOutputFunction, System.IntPtr)
  name.vb: SetLogOutputFunction(SdlLogOutputFunction, IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetLogOutputFunction(SharpSDL3.Delegates.SdlLogOutputFunction,System.IntPtr)
    name: SetLogOutputFunction
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetLogOutputFunction_SharpSDL3_Delegates_SdlLogOutputFunction_System_IntPtr_
  - name: (
  - uid: SharpSDL3.Delegates.SdlLogOutputFunction
    name: SdlLogOutputFunction
    href: SharpSDL3.Delegates.SdlLogOutputFunction.html
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetLogOutputFunction(SharpSDL3.Delegates.SdlLogOutputFunction,System.IntPtr)
    name: SetLogOutputFunction
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetLogOutputFunction_SharpSDL3_Delegates_SdlLogOutputFunction_System_IntPtr_
  - name: (
  - uid: SharpSDL3.Delegates.SdlLogOutputFunction
    name: SdlLogOutputFunction
    href: SharpSDL3.Delegates.SdlLogOutputFunction.html
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GetLogOutputFunction(SharpSDL3.Delegates.SdlLogOutputFunction@,System.IntPtr@)
  commentId: M:SharpSDL3.Sdl.GetLogOutputFunction(SharpSDL3.Delegates.SdlLogOutputFunction@,System.IntPtr@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetLogOutputFunction_SharpSDL3_Delegates_SdlLogOutputFunction__System_IntPtr__
  name: GetLogOutputFunction(out SdlLogOutputFunction, out nint)
  nameWithType: Sdl.GetLogOutputFunction(out Delegates.SdlLogOutputFunction, out nint)
  fullName: SharpSDL3.Sdl.GetLogOutputFunction(out SharpSDL3.Delegates.SdlLogOutputFunction, out nint)
  nameWithType.vb: Sdl.GetLogOutputFunction(Delegates.SdlLogOutputFunction, IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetLogOutputFunction(SharpSDL3.Delegates.SdlLogOutputFunction, System.IntPtr)
  name.vb: GetLogOutputFunction(SdlLogOutputFunction, IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetLogOutputFunction(SharpSDL3.Delegates.SdlLogOutputFunction@,System.IntPtr@)
    name: GetLogOutputFunction
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetLogOutputFunction_SharpSDL3_Delegates_SdlLogOutputFunction__System_IntPtr__
  - name: (
  - name: out
  - name: " "
  - uid: SharpSDL3.Delegates.SdlLogOutputFunction
    name: SdlLogOutputFunction
    href: SharpSDL3.Delegates.SdlLogOutputFunction.html
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetLogOutputFunction(SharpSDL3.Delegates.SdlLogOutputFunction@,System.IntPtr@)
    name: GetLogOutputFunction
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetLogOutputFunction_SharpSDL3_Delegates_SdlLogOutputFunction__System_IntPtr__
  - name: (
  - uid: SharpSDL3.Delegates.SdlLogOutputFunction
    name: SdlLogOutputFunction
    href: SharpSDL3.Delegates.SdlLogOutputFunction.html
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GetDefaultLogOutputFunction*
  commentId: Overload:SharpSDL3.Sdl.GetDefaultLogOutputFunction
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetDefaultLogOutputFunction
  name: GetDefaultLogOutputFunction
  nameWithType: Sdl.GetDefaultLogOutputFunction
  fullName: SharpSDL3.Sdl.GetDefaultLogOutputFunction
- uid: SharpSDL3.Delegates.SdlLogOutputFunction
  commentId: T:SharpSDL3.Delegates.SdlLogOutputFunction
  parent: SharpSDL3
  href: SharpSDL3.Delegates.html
  name: Delegates.SdlLogOutputFunction
  nameWithType: Delegates.SdlLogOutputFunction
  fullName: SharpSDL3.Delegates.SdlLogOutputFunction
  spec.csharp:
  - uid: SharpSDL3.Delegates
    name: Delegates
    href: SharpSDL3.Delegates.html
  - name: .
  - uid: SharpSDL3.Delegates.SdlLogOutputFunction
    name: SdlLogOutputFunction
    href: SharpSDL3.Delegates.SdlLogOutputFunction.html
  spec.vb:
  - uid: SharpSDL3.Delegates
    name: Delegates
    href: SharpSDL3.Delegates.html
  - name: .
  - uid: SharpSDL3.Delegates.SdlLogOutputFunction
    name: SdlLogOutputFunction
    href: SharpSDL3.Delegates.SdlLogOutputFunction.html
- uid: SharpSDL3.Sdl.GetDefaultLogOutputFunction
  commentId: M:SharpSDL3.Sdl.GetDefaultLogOutputFunction
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetDefaultLogOutputFunction
  name: GetDefaultLogOutputFunction()
  nameWithType: Sdl.GetDefaultLogOutputFunction()
  fullName: SharpSDL3.Sdl.GetDefaultLogOutputFunction()
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetDefaultLogOutputFunction
    name: GetDefaultLogOutputFunction
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetDefaultLogOutputFunction
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetDefaultLogOutputFunction
    name: GetDefaultLogOutputFunction
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetDefaultLogOutputFunction
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.GetLogOutputFunction*
  commentId: Overload:SharpSDL3.Sdl.GetLogOutputFunction
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetLogOutputFunction_SharpSDL3_Delegates_SdlLogOutputFunction__System_IntPtr__
  name: GetLogOutputFunction
  nameWithType: Sdl.GetLogOutputFunction
  fullName: SharpSDL3.Sdl.GetLogOutputFunction
- uid: SharpSDL3.Sdl.SetLogPriority(SharpSDL3.Enums.LogCategory,SharpSDL3.Enums.LogPriority)
  commentId: M:SharpSDL3.Sdl.SetLogPriority(SharpSDL3.Enums.LogCategory,SharpSDL3.Enums.LogPriority)
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetLogPriority_SharpSDL3_Enums_LogCategory_SharpSDL3_Enums_LogPriority_
  name: SetLogPriority(LogCategory, LogPriority)
  nameWithType: Sdl.SetLogPriority(LogCategory, LogPriority)
  fullName: SharpSDL3.Sdl.SetLogPriority(SharpSDL3.Enums.LogCategory, SharpSDL3.Enums.LogPriority)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetLogPriority(SharpSDL3.Enums.LogCategory,SharpSDL3.Enums.LogPriority)
    name: SetLogPriority
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetLogPriority_SharpSDL3_Enums_LogCategory_SharpSDL3_Enums_LogPriority_
  - name: (
  - uid: SharpSDL3.Enums.LogCategory
    name: LogCategory
    href: SharpSDL3.Enums.LogCategory.html
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.LogPriority
    name: LogPriority
    href: SharpSDL3.Enums.LogPriority.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetLogPriority(SharpSDL3.Enums.LogCategory,SharpSDL3.Enums.LogPriority)
    name: SetLogPriority
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetLogPriority_SharpSDL3_Enums_LogCategory_SharpSDL3_Enums_LogPriority_
  - name: (
  - uid: SharpSDL3.Enums.LogCategory
    name: LogCategory
    href: SharpSDL3.Enums.LogCategory.html
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.LogPriority
    name: LogPriority
    href: SharpSDL3.Enums.LogPriority.html
  - name: )
- uid: SharpSDL3.Sdl.GetLogPriority*
  commentId: Overload:SharpSDL3.Sdl.GetLogPriority
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetLogPriority_SharpSDL3_Enums_LogCategory_
  name: GetLogPriority
  nameWithType: Sdl.GetLogPriority
  fullName: SharpSDL3.Sdl.GetLogPriority
- uid: SharpSDL3.Enums.LogCategory
  commentId: T:SharpSDL3.Enums.LogCategory
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.LogCategory.html
  name: LogCategory
  nameWithType: LogCategory
  fullName: SharpSDL3.Enums.LogCategory
- uid: SharpSDL3.Enums.LogPriority
  commentId: T:SharpSDL3.Enums.LogPriority
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.LogPriority.html
  name: LogPriority
  nameWithType: LogPriority
  fullName: SharpSDL3.Enums.LogPriority
- uid: SharpSDL3.Sdl.Log*
  commentId: Overload:SharpSDL3.Sdl.Log
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_Log_System_String_
  name: Log
  nameWithType: Sdl.Log
  fullName: SharpSDL3.Sdl.Log
- uid: SharpSDL3.Sdl.Log(System.String)
  commentId: M:SharpSDL3.Sdl.Log(System.String)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_Log_System_String_
  name: Log(string)
  nameWithType: Sdl.Log(string)
  fullName: SharpSDL3.Sdl.Log(string)
  nameWithType.vb: Sdl.Log(String)
  fullName.vb: SharpSDL3.Sdl.Log(String)
  name.vb: Log(String)
  spec.csharp:
  - uid: SharpSDL3.Sdl.Log(System.String)
    name: Log
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_Log_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.Log(System.String)
    name: Log
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_Log_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SharpSDL3.Sdl.LogDebug(SharpSDL3.Enums.LogCategory,System.String)
  commentId: M:SharpSDL3.Sdl.LogDebug(SharpSDL3.Enums.LogCategory,System.String)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LogDebug_SharpSDL3_Enums_LogCategory_System_String_
  name: LogDebug(LogCategory, string)
  nameWithType: Sdl.LogDebug(LogCategory, string)
  fullName: SharpSDL3.Sdl.LogDebug(SharpSDL3.Enums.LogCategory, string)
  nameWithType.vb: Sdl.LogDebug(LogCategory, String)
  fullName.vb: SharpSDL3.Sdl.LogDebug(SharpSDL3.Enums.LogCategory, String)
  name.vb: LogDebug(LogCategory, String)
  spec.csharp:
  - uid: SharpSDL3.Sdl.LogDebug(SharpSDL3.Enums.LogCategory,System.String)
    name: LogDebug
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LogDebug_SharpSDL3_Enums_LogCategory_System_String_
  - name: (
  - uid: SharpSDL3.Enums.LogCategory
    name: LogCategory
    href: SharpSDL3.Enums.LogCategory.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.LogDebug(SharpSDL3.Enums.LogCategory,System.String)
    name: LogDebug
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LogDebug_SharpSDL3_Enums_LogCategory_System_String_
  - name: (
  - uid: SharpSDL3.Enums.LogCategory
    name: LogCategory
    href: SharpSDL3.Enums.LogCategory.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SharpSDL3.Sdl.LogError(SharpSDL3.Enums.LogCategory,System.String)
  commentId: M:SharpSDL3.Sdl.LogError(SharpSDL3.Enums.LogCategory,System.String)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LogError_SharpSDL3_Enums_LogCategory_System_String_
  name: LogError(LogCategory, string)
  nameWithType: Sdl.LogError(LogCategory, string)
  fullName: SharpSDL3.Sdl.LogError(SharpSDL3.Enums.LogCategory, string)
  nameWithType.vb: Sdl.LogError(LogCategory, String)
  fullName.vb: SharpSDL3.Sdl.LogError(SharpSDL3.Enums.LogCategory, String)
  name.vb: LogError(LogCategory, String)
  spec.csharp:
  - uid: SharpSDL3.Sdl.LogError(SharpSDL3.Enums.LogCategory,System.String)
    name: LogError
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LogError_SharpSDL3_Enums_LogCategory_System_String_
  - name: (
  - uid: SharpSDL3.Enums.LogCategory
    name: LogCategory
    href: SharpSDL3.Enums.LogCategory.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.LogError(SharpSDL3.Enums.LogCategory,System.String)
    name: LogError
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LogError_SharpSDL3_Enums_LogCategory_System_String_
  - name: (
  - uid: SharpSDL3.Enums.LogCategory
    name: LogCategory
    href: SharpSDL3.Enums.LogCategory.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SharpSDL3.Sdl.LogInfo(SharpSDL3.Enums.LogCategory,System.String)
  commentId: M:SharpSDL3.Sdl.LogInfo(SharpSDL3.Enums.LogCategory,System.String)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LogInfo_SharpSDL3_Enums_LogCategory_System_String_
  name: LogInfo(LogCategory, string)
  nameWithType: Sdl.LogInfo(LogCategory, string)
  fullName: SharpSDL3.Sdl.LogInfo(SharpSDL3.Enums.LogCategory, string)
  nameWithType.vb: Sdl.LogInfo(LogCategory, String)
  fullName.vb: SharpSDL3.Sdl.LogInfo(SharpSDL3.Enums.LogCategory, String)
  name.vb: LogInfo(LogCategory, String)
  spec.csharp:
  - uid: SharpSDL3.Sdl.LogInfo(SharpSDL3.Enums.LogCategory,System.String)
    name: LogInfo
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LogInfo_SharpSDL3_Enums_LogCategory_System_String_
  - name: (
  - uid: SharpSDL3.Enums.LogCategory
    name: LogCategory
    href: SharpSDL3.Enums.LogCategory.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.LogInfo(SharpSDL3.Enums.LogCategory,System.String)
    name: LogInfo
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LogInfo_SharpSDL3_Enums_LogCategory_System_String_
  - name: (
  - uid: SharpSDL3.Enums.LogCategory
    name: LogCategory
    href: SharpSDL3.Enums.LogCategory.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SharpSDL3.Sdl.LogMessage(SharpSDL3.Enums.LogCategory,SharpSDL3.Enums.LogPriority,System.String)
  commentId: M:SharpSDL3.Sdl.LogMessage(SharpSDL3.Enums.LogCategory,SharpSDL3.Enums.LogPriority,System.String)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LogMessage_SharpSDL3_Enums_LogCategory_SharpSDL3_Enums_LogPriority_System_String_
  name: LogMessage(LogCategory, LogPriority, string)
  nameWithType: Sdl.LogMessage(LogCategory, LogPriority, string)
  fullName: SharpSDL3.Sdl.LogMessage(SharpSDL3.Enums.LogCategory, SharpSDL3.Enums.LogPriority, string)
  nameWithType.vb: Sdl.LogMessage(LogCategory, LogPriority, String)
  fullName.vb: SharpSDL3.Sdl.LogMessage(SharpSDL3.Enums.LogCategory, SharpSDL3.Enums.LogPriority, String)
  name.vb: LogMessage(LogCategory, LogPriority, String)
  spec.csharp:
  - uid: SharpSDL3.Sdl.LogMessage(SharpSDL3.Enums.LogCategory,SharpSDL3.Enums.LogPriority,System.String)
    name: LogMessage
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LogMessage_SharpSDL3_Enums_LogCategory_SharpSDL3_Enums_LogPriority_System_String_
  - name: (
  - uid: SharpSDL3.Enums.LogCategory
    name: LogCategory
    href: SharpSDL3.Enums.LogCategory.html
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.LogPriority
    name: LogPriority
    href: SharpSDL3.Enums.LogPriority.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.LogMessage(SharpSDL3.Enums.LogCategory,SharpSDL3.Enums.LogPriority,System.String)
    name: LogMessage
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LogMessage_SharpSDL3_Enums_LogCategory_SharpSDL3_Enums_LogPriority_System_String_
  - name: (
  - uid: SharpSDL3.Enums.LogCategory
    name: LogCategory
    href: SharpSDL3.Enums.LogCategory.html
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.LogPriority
    name: LogPriority
    href: SharpSDL3.Enums.LogPriority.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SharpSDL3.Sdl.LogTrace(SharpSDL3.Enums.LogCategory,System.String)
  commentId: M:SharpSDL3.Sdl.LogTrace(SharpSDL3.Enums.LogCategory,System.String)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LogTrace_SharpSDL3_Enums_LogCategory_System_String_
  name: LogTrace(LogCategory, string)
  nameWithType: Sdl.LogTrace(LogCategory, string)
  fullName: SharpSDL3.Sdl.LogTrace(SharpSDL3.Enums.LogCategory, string)
  nameWithType.vb: Sdl.LogTrace(LogCategory, String)
  fullName.vb: SharpSDL3.Sdl.LogTrace(SharpSDL3.Enums.LogCategory, String)
  name.vb: LogTrace(LogCategory, String)
  spec.csharp:
  - uid: SharpSDL3.Sdl.LogTrace(SharpSDL3.Enums.LogCategory,System.String)
    name: LogTrace
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LogTrace_SharpSDL3_Enums_LogCategory_System_String_
  - name: (
  - uid: SharpSDL3.Enums.LogCategory
    name: LogCategory
    href: SharpSDL3.Enums.LogCategory.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.LogTrace(SharpSDL3.Enums.LogCategory,System.String)
    name: LogTrace
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LogTrace_SharpSDL3_Enums_LogCategory_System_String_
  - name: (
  - uid: SharpSDL3.Enums.LogCategory
    name: LogCategory
    href: SharpSDL3.Enums.LogCategory.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SharpSDL3.Sdl.LogVerbose(SharpSDL3.Enums.LogCategory,System.String)
  commentId: M:SharpSDL3.Sdl.LogVerbose(SharpSDL3.Enums.LogCategory,System.String)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LogVerbose_SharpSDL3_Enums_LogCategory_System_String_
  name: LogVerbose(LogCategory, string)
  nameWithType: Sdl.LogVerbose(LogCategory, string)
  fullName: SharpSDL3.Sdl.LogVerbose(SharpSDL3.Enums.LogCategory, string)
  nameWithType.vb: Sdl.LogVerbose(LogCategory, String)
  fullName.vb: SharpSDL3.Sdl.LogVerbose(SharpSDL3.Enums.LogCategory, String)
  name.vb: LogVerbose(LogCategory, String)
  spec.csharp:
  - uid: SharpSDL3.Sdl.LogVerbose(SharpSDL3.Enums.LogCategory,System.String)
    name: LogVerbose
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LogVerbose_SharpSDL3_Enums_LogCategory_System_String_
  - name: (
  - uid: SharpSDL3.Enums.LogCategory
    name: LogCategory
    href: SharpSDL3.Enums.LogCategory.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.LogVerbose(SharpSDL3.Enums.LogCategory,System.String)
    name: LogVerbose
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LogVerbose_SharpSDL3_Enums_LogCategory_System_String_
  - name: (
  - uid: SharpSDL3.Enums.LogCategory
    name: LogCategory
    href: SharpSDL3.Enums.LogCategory.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SharpSDL3.Sdl.LogWarn(SharpSDL3.Enums.LogCategory,System.String)
  commentId: M:SharpSDL3.Sdl.LogWarn(SharpSDL3.Enums.LogCategory,System.String)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LogWarn_SharpSDL3_Enums_LogCategory_System_String_
  name: LogWarn(LogCategory, string)
  nameWithType: Sdl.LogWarn(LogCategory, string)
  fullName: SharpSDL3.Sdl.LogWarn(SharpSDL3.Enums.LogCategory, string)
  nameWithType.vb: Sdl.LogWarn(LogCategory, String)
  fullName.vb: SharpSDL3.Sdl.LogWarn(SharpSDL3.Enums.LogCategory, String)
  name.vb: LogWarn(LogCategory, String)
  spec.csharp:
  - uid: SharpSDL3.Sdl.LogWarn(SharpSDL3.Enums.LogCategory,System.String)
    name: LogWarn
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LogWarn_SharpSDL3_Enums_LogCategory_System_String_
  - name: (
  - uid: SharpSDL3.Enums.LogCategory
    name: LogCategory
    href: SharpSDL3.Enums.LogCategory.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.LogWarn(SharpSDL3.Enums.LogCategory,System.String)
    name: LogWarn
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LogWarn_SharpSDL3_Enums_LogCategory_System_String_
  - name: (
  - uid: SharpSDL3.Enums.LogCategory
    name: LogCategory
    href: SharpSDL3.Enums.LogCategory.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SharpSDL3.Sdl.LogCritical*
  commentId: Overload:SharpSDL3.Sdl.LogCritical
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LogCritical_SharpSDL3_Enums_LogCategory_System_String_
  name: LogCritical
  nameWithType: Sdl.LogCritical
  fullName: SharpSDL3.Sdl.LogCritical
- uid: SharpSDL3.Sdl.LogCritical(SharpSDL3.Enums.LogCategory,System.String)
  commentId: M:SharpSDL3.Sdl.LogCritical(SharpSDL3.Enums.LogCategory,System.String)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LogCritical_SharpSDL3_Enums_LogCategory_System_String_
  name: LogCritical(LogCategory, string)
  nameWithType: Sdl.LogCritical(LogCategory, string)
  fullName: SharpSDL3.Sdl.LogCritical(SharpSDL3.Enums.LogCategory, string)
  nameWithType.vb: Sdl.LogCritical(LogCategory, String)
  fullName.vb: SharpSDL3.Sdl.LogCritical(SharpSDL3.Enums.LogCategory, String)
  name.vb: LogCritical(LogCategory, String)
  spec.csharp:
  - uid: SharpSDL3.Sdl.LogCritical(SharpSDL3.Enums.LogCategory,System.String)
    name: LogCritical
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LogCritical_SharpSDL3_Enums_LogCategory_System_String_
  - name: (
  - uid: SharpSDL3.Enums.LogCategory
    name: LogCategory
    href: SharpSDL3.Enums.LogCategory.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.LogCritical(SharpSDL3.Enums.LogCategory,System.String)
    name: LogCritical
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LogCritical_SharpSDL3_Enums_LogCategory_System_String_
  - name: (
  - uid: SharpSDL3.Enums.LogCategory
    name: LogCategory
    href: SharpSDL3.Enums.LogCategory.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SharpSDL3.Sdl.LogDebug*
  commentId: Overload:SharpSDL3.Sdl.LogDebug
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LogDebug_SharpSDL3_Enums_LogCategory_System_String_
  name: LogDebug
  nameWithType: Sdl.LogDebug
  fullName: SharpSDL3.Sdl.LogDebug
- uid: SharpSDL3.Sdl.LogError*
  commentId: Overload:SharpSDL3.Sdl.LogError
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LogError_SharpSDL3_Enums_LogCategory_System_String_
  name: LogError
  nameWithType: Sdl.LogError
  fullName: SharpSDL3.Sdl.LogError
- uid: SharpSDL3.Sdl.LogInfo*
  commentId: Overload:SharpSDL3.Sdl.LogInfo
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LogInfo_SharpSDL3_Enums_LogCategory_System_String_
  name: LogInfo
  nameWithType: Sdl.LogInfo
  fullName: SharpSDL3.Sdl.LogInfo
- uid: SharpSDL3.Sdl.LogMessage*
  commentId: Overload:SharpSDL3.Sdl.LogMessage
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LogMessage_SharpSDL3_Enums_LogCategory_SharpSDL3_Enums_LogPriority_System_String_
  name: LogMessage
  nameWithType: Sdl.LogMessage
  fullName: SharpSDL3.Sdl.LogMessage
- uid: SharpSDL3.Sdl.LogTrace*
  commentId: Overload:SharpSDL3.Sdl.LogTrace
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LogTrace_SharpSDL3_Enums_LogCategory_System_String_
  name: LogTrace
  nameWithType: Sdl.LogTrace
  fullName: SharpSDL3.Sdl.LogTrace
- uid: SharpSDL3.Sdl.LogVerbose*
  commentId: Overload:SharpSDL3.Sdl.LogVerbose
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LogVerbose_SharpSDL3_Enums_LogCategory_System_String_
  name: LogVerbose
  nameWithType: Sdl.LogVerbose
  fullName: SharpSDL3.Sdl.LogVerbose
- uid: SharpSDL3.Sdl.LogWarn*
  commentId: Overload:SharpSDL3.Sdl.LogWarn
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LogWarn_SharpSDL3_Enums_LogCategory_System_String_
  name: LogWarn
  nameWithType: Sdl.LogWarn
  fullName: SharpSDL3.Sdl.LogWarn
- uid: SharpSDL3.Sdl.SetLogPriorities(SharpSDL3.Enums.LogPriority)
  commentId: M:SharpSDL3.Sdl.SetLogPriorities(SharpSDL3.Enums.LogPriority)
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetLogPriorities_SharpSDL3_Enums_LogPriority_
  name: SetLogPriorities(LogPriority)
  nameWithType: Sdl.SetLogPriorities(LogPriority)
  fullName: SharpSDL3.Sdl.SetLogPriorities(SharpSDL3.Enums.LogPriority)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetLogPriorities(SharpSDL3.Enums.LogPriority)
    name: SetLogPriorities
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetLogPriorities_SharpSDL3_Enums_LogPriority_
  - name: (
  - uid: SharpSDL3.Enums.LogPriority
    name: LogPriority
    href: SharpSDL3.Enums.LogPriority.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetLogPriorities(SharpSDL3.Enums.LogPriority)
    name: SetLogPriorities
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetLogPriorities_SharpSDL3_Enums_LogPriority_
  - name: (
  - uid: SharpSDL3.Enums.LogPriority
    name: LogPriority
    href: SharpSDL3.Enums.LogPriority.html
  - name: )
- uid: SharpSDL3.Sdl.ResetLogPriorities*
  commentId: Overload:SharpSDL3.Sdl.ResetLogPriorities
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ResetLogPriorities
  name: ResetLogPriorities
  nameWithType: Sdl.ResetLogPriorities
  fullName: SharpSDL3.Sdl.ResetLogPriorities
- uid: SharpSDL3.Sdl.SetLogOutputFunction*
  commentId: Overload:SharpSDL3.Sdl.SetLogOutputFunction
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetLogOutputFunction_SharpSDL3_Delegates_SdlLogOutputFunction_System_IntPtr_
  name: SetLogOutputFunction
  nameWithType: Sdl.SetLogOutputFunction
  fullName: SharpSDL3.Sdl.SetLogOutputFunction
- uid: SharpSDL3.Sdl.SetLogPriorities*
  commentId: Overload:SharpSDL3.Sdl.SetLogPriorities
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetLogPriorities_SharpSDL3_Enums_LogPriority_
  name: SetLogPriorities
  nameWithType: Sdl.SetLogPriorities
  fullName: SharpSDL3.Sdl.SetLogPriorities
- uid: SharpSDL3.Sdl.GetLogPriority(SharpSDL3.Enums.LogCategory)
  commentId: M:SharpSDL3.Sdl.GetLogPriority(SharpSDL3.Enums.LogCategory)
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetLogPriority_SharpSDL3_Enums_LogCategory_
  name: GetLogPriority(LogCategory)
  nameWithType: Sdl.GetLogPriority(LogCategory)
  fullName: SharpSDL3.Sdl.GetLogPriority(SharpSDL3.Enums.LogCategory)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetLogPriority(SharpSDL3.Enums.LogCategory)
    name: GetLogPriority
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetLogPriority_SharpSDL3_Enums_LogCategory_
  - name: (
  - uid: SharpSDL3.Enums.LogCategory
    name: LogCategory
    href: SharpSDL3.Enums.LogCategory.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetLogPriority(SharpSDL3.Enums.LogCategory)
    name: GetLogPriority
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetLogPriority_SharpSDL3_Enums_LogCategory_
  - name: (
  - uid: SharpSDL3.Enums.LogCategory
    name: LogCategory
    href: SharpSDL3.Enums.LogCategory.html
  - name: )
- uid: SharpSDL3.Sdl.ResetLogPriorities
  commentId: M:SharpSDL3.Sdl.ResetLogPriorities
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ResetLogPriorities
  name: ResetLogPriorities()
  nameWithType: Sdl.ResetLogPriorities()
  fullName: SharpSDL3.Sdl.ResetLogPriorities()
  spec.csharp:
  - uid: SharpSDL3.Sdl.ResetLogPriorities
    name: ResetLogPriorities
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ResetLogPriorities
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.ResetLogPriorities
    name: ResetLogPriorities
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ResetLogPriorities
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.SetLogPriority*
  commentId: Overload:SharpSDL3.Sdl.SetLogPriority
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetLogPriority_SharpSDL3_Enums_LogCategory_SharpSDL3_Enums_LogPriority_
  name: SetLogPriority
  nameWithType: Sdl.SetLogPriority
  fullName: SharpSDL3.Sdl.SetLogPriority
- uid: SharpSDL3.Sdl.SetLogPriorityPrefix*
  commentId: Overload:SharpSDL3.Sdl.SetLogPriorityPrefix
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetLogPriorityPrefix_SharpSDL3_Enums_LogPriority_
  name: SetLogPriorityPrefix
  nameWithType: Sdl.SetLogPriorityPrefix
  fullName: SharpSDL3.Sdl.SetLogPriorityPrefix
- uid: SharpSDL3.Sdl.ShowMessageBox*
  commentId: Overload:SharpSDL3.Sdl.ShowMessageBox
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ShowMessageBox_SharpSDL3_Structs_MessageBoxData__System_Int32__
  name: ShowMessageBox
  nameWithType: Sdl.ShowMessageBox
  fullName: SharpSDL3.Sdl.ShowMessageBox
- uid: SharpSDL3.Structs.MessageBoxData
  commentId: T:SharpSDL3.Structs.MessageBoxData
  parent: SharpSDL3.Structs
  href: SharpSDL3.Structs.MessageBoxData.html
  name: MessageBoxData
  nameWithType: MessageBoxData
  fullName: SharpSDL3.Structs.MessageBoxData
- uid: SharpSDL3.Enums.MessageBoxResult
  commentId: T:SharpSDL3.Enums.MessageBoxResult
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.MessageBoxResult.html
  name: MessageBoxResult
  nameWithType: MessageBoxResult
  fullName: SharpSDL3.Enums.MessageBoxResult
- uid: SharpSDL3.Sdl.ShowSimpleMessageBox(SharpSDL3.Enums.MessageBoxFlags,System.String,System.String,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.ShowSimpleMessageBox(SharpSDL3.Enums.MessageBoxFlags,System.String,System.String,System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ShowSimpleMessageBox_SharpSDL3_Enums_MessageBoxFlags_System_String_System_String_System_IntPtr_
  name: ShowSimpleMessageBox(MessageBoxFlags, string, string, nint)
  nameWithType: Sdl.ShowSimpleMessageBox(MessageBoxFlags, string, string, nint)
  fullName: SharpSDL3.Sdl.ShowSimpleMessageBox(SharpSDL3.Enums.MessageBoxFlags, string, string, nint)
  nameWithType.vb: Sdl.ShowSimpleMessageBox(MessageBoxFlags, String, String, IntPtr)
  fullName.vb: SharpSDL3.Sdl.ShowSimpleMessageBox(SharpSDL3.Enums.MessageBoxFlags, String, String, System.IntPtr)
  name.vb: ShowSimpleMessageBox(MessageBoxFlags, String, String, IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.ShowSimpleMessageBox(SharpSDL3.Enums.MessageBoxFlags,System.String,System.String,System.IntPtr)
    name: ShowSimpleMessageBox
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ShowSimpleMessageBox_SharpSDL3_Enums_MessageBoxFlags_System_String_System_String_System_IntPtr_
  - name: (
  - uid: SharpSDL3.Enums.MessageBoxFlags
    name: MessageBoxFlags
    href: SharpSDL3.Enums.MessageBoxFlags.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.ShowSimpleMessageBox(SharpSDL3.Enums.MessageBoxFlags,System.String,System.String,System.IntPtr)
    name: ShowSimpleMessageBox
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ShowSimpleMessageBox_SharpSDL3_Enums_MessageBoxFlags_System_String_System_String_System_IntPtr_
  - name: (
  - uid: SharpSDL3.Enums.MessageBoxFlags
    name: MessageBoxFlags
    href: SharpSDL3.Enums.MessageBoxFlags.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Enums.MessageBoxFlags
  commentId: T:SharpSDL3.Enums.MessageBoxFlags
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.MessageBoxFlags.html
  name: MessageBoxFlags
  nameWithType: MessageBoxFlags
  fullName: SharpSDL3.Enums.MessageBoxFlags
- uid: SharpSDL3.Enums.MessageBoxButtons
  commentId: T:SharpSDL3.Enums.MessageBoxButtons
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.MessageBoxButtons.html
  name: MessageBoxButtons
  nameWithType: MessageBoxButtons
  fullName: SharpSDL3.Enums.MessageBoxButtons
- uid: SharpSDL3.Enums.MessageBoxDefaultButton
  commentId: T:SharpSDL3.Enums.MessageBoxDefaultButton
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.MessageBoxDefaultButton.html
  name: MessageBoxDefaultButton
  nameWithType: MessageBoxDefaultButton
  fullName: SharpSDL3.Enums.MessageBoxDefaultButton
- uid: SharpSDL3.Structs.MessageBoxColorScheme
  commentId: T:SharpSDL3.Structs.MessageBoxColorScheme
  parent: SharpSDL3.Structs
  href: SharpSDL3.Structs.MessageBoxColorScheme.html
  name: MessageBoxColorScheme
  nameWithType: MessageBoxColorScheme
  fullName: SharpSDL3.Structs.MessageBoxColorScheme
- uid: SharpSDL3.Sdl.ShowMessageBox(SharpSDL3.Structs.MessageBoxData@,System.Int32@)
  commentId: M:SharpSDL3.Sdl.ShowMessageBox(SharpSDL3.Structs.MessageBoxData@,System.Int32@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ShowMessageBox_SharpSDL3_Structs_MessageBoxData__System_Int32__
  name: ShowMessageBox(ref MessageBoxData, out int)
  nameWithType: Sdl.ShowMessageBox(ref MessageBoxData, out int)
  fullName: SharpSDL3.Sdl.ShowMessageBox(ref SharpSDL3.Structs.MessageBoxData, out int)
  nameWithType.vb: Sdl.ShowMessageBox(MessageBoxData, Integer)
  fullName.vb: SharpSDL3.Sdl.ShowMessageBox(SharpSDL3.Structs.MessageBoxData, Integer)
  name.vb: ShowMessageBox(MessageBoxData, Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.ShowMessageBox(SharpSDL3.Structs.MessageBoxData@,System.Int32@)
    name: ShowMessageBox
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ShowMessageBox_SharpSDL3_Structs_MessageBoxData__System_Int32__
  - name: (
  - name: ref
  - name: " "
  - uid: SharpSDL3.Structs.MessageBoxData
    name: MessageBoxData
    href: SharpSDL3.Structs.MessageBoxData.html
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.ShowMessageBox(SharpSDL3.Structs.MessageBoxData@,System.Int32@)
    name: ShowMessageBox
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ShowMessageBox_SharpSDL3_Structs_MessageBoxData__System_Int32__
  - name: (
  - uid: SharpSDL3.Structs.MessageBoxData
    name: MessageBoxData
    href: SharpSDL3.Structs.MessageBoxData.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.ShowSimpleMessageBox*
  commentId: Overload:SharpSDL3.Sdl.ShowSimpleMessageBox
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ShowSimpleMessageBox_SharpSDL3_Enums_MessageBoxFlags_System_String_System_String_System_IntPtr_
  name: ShowSimpleMessageBox
  nameWithType: Sdl.ShowSimpleMessageBox
  fullName: SharpSDL3.Sdl.ShowSimpleMessageBox
- uid: SharpSDL3.Sdl.CreateView*
  commentId: Overload:SharpSDL3.Sdl.CreateView
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateView_System_IntPtr_
  name: CreateView
  nameWithType: Sdl.CreateView
  fullName: SharpSDL3.Sdl.CreateView
- uid: SharpSDL3.Sdl.DestroyView*
  commentId: Overload:SharpSDL3.Sdl.DestroyView
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyView_System_IntPtr_
  name: DestroyView
  nameWithType: Sdl.DestroyView
  fullName: SharpSDL3.Sdl.DestroyView
- uid: SharpSDL3.Sdl.GetLayer*
  commentId: Overload:SharpSDL3.Sdl.GetLayer
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetLayer_System_IntPtr_
  name: GetLayer
  nameWithType: Sdl.GetLayer
  fullName: SharpSDL3.Sdl.GetLayer
- uid: SharpSDL3.Sdl.OpenURL*
  commentId: Overload:SharpSDL3.Sdl.OpenURL
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_OpenURL_System_String_
  name: OpenURL
  nameWithType: Sdl.OpenURL
  fullName: SharpSDL3.Sdl.OpenURL
- uid: SharpSDL3.Sdl.GetMice(System.Int32@)
  commentId: M:SharpSDL3.Sdl.GetMice(System.Int32@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetMice_System_Int32__
  name: GetMice(out int)
  nameWithType: Sdl.GetMice(out int)
  fullName: SharpSDL3.Sdl.GetMice(out int)
  nameWithType.vb: Sdl.GetMice(Integer)
  fullName.vb: SharpSDL3.Sdl.GetMice(Integer)
  name.vb: GetMice(Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetMice(System.Int32@)
    name: GetMice
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetMice_System_Int32__
  - name: (
  - name: out
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetMice(System.Int32@)
    name: GetMice
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetMice_System_Int32__
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.HasMouse*
  commentId: Overload:SharpSDL3.Sdl.HasMouse
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasMouse
  name: HasMouse
  nameWithType: Sdl.HasMouse
  fullName: SharpSDL3.Sdl.HasMouse
- uid: SharpSDL3.Sdl.GetMouseNameForID(System.UInt32)
  commentId: M:SharpSDL3.Sdl.GetMouseNameForID(System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetMouseNameForID_System_UInt32_
  name: GetMouseNameForID(uint)
  nameWithType: Sdl.GetMouseNameForID(uint)
  fullName: SharpSDL3.Sdl.GetMouseNameForID(uint)
  nameWithType.vb: Sdl.GetMouseNameForID(UInteger)
  fullName.vb: SharpSDL3.Sdl.GetMouseNameForID(UInteger)
  name.vb: GetMouseNameForID(UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetMouseNameForID(System.UInt32)
    name: GetMouseNameForID
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetMouseNameForID_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetMouseNameForID(System.UInt32)
    name: GetMouseNameForID
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetMouseNameForID_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.HasMouse
  commentId: M:SharpSDL3.Sdl.HasMouse
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasMouse
  name: HasMouse()
  nameWithType: Sdl.HasMouse()
  fullName: SharpSDL3.Sdl.HasMouse()
  spec.csharp:
  - uid: SharpSDL3.Sdl.HasMouse
    name: HasMouse
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasMouse
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.HasMouse
    name: HasMouse
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasMouse
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.GetMice*
  commentId: Overload:SharpSDL3.Sdl.GetMice
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetMice_System_Int32__
  name: GetMice
  nameWithType: Sdl.GetMice
  fullName: SharpSDL3.Sdl.GetMice
- uid: SharpSDL3.Sdl.GetMouseNameForID*
  commentId: Overload:SharpSDL3.Sdl.GetMouseNameForID
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetMouseNameForID_System_UInt32_
  name: GetMouseNameForID
  nameWithType: Sdl.GetMouseNameForID
  fullName: SharpSDL3.Sdl.GetMouseNameForID
- uid: SharpSDL3.Sdl.GetMouseFocus*
  commentId: Overload:SharpSDL3.Sdl.GetMouseFocus
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetMouseFocus
  name: GetMouseFocus
  nameWithType: Sdl.GetMouseFocus
  fullName: SharpSDL3.Sdl.GetMouseFocus
- uid: SharpSDL3.Sdl.GetGlobalMouseState(System.Single@,System.Single@)
  commentId: M:SharpSDL3.Sdl.GetGlobalMouseState(System.Single@,System.Single@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGlobalMouseState_System_Single__System_Single__
  name: GetGlobalMouseState(out float, out float)
  nameWithType: Sdl.GetGlobalMouseState(out float, out float)
  fullName: SharpSDL3.Sdl.GetGlobalMouseState(out float, out float)
  nameWithType.vb: Sdl.GetGlobalMouseState(Single, Single)
  fullName.vb: SharpSDL3.Sdl.GetGlobalMouseState(Single, Single)
  name.vb: GetGlobalMouseState(Single, Single)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetGlobalMouseState(System.Single@,System.Single@)
    name: GetGlobalMouseState
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGlobalMouseState_System_Single__System_Single__
  - name: (
  - name: out
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetGlobalMouseState(System.Single@,System.Single@)
    name: GetGlobalMouseState
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGlobalMouseState_System_Single__System_Single__
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: SharpSDL3.Sdl.GetRelativeMouseState(System.Single@,System.Single@)
  commentId: M:SharpSDL3.Sdl.GetRelativeMouseState(System.Single@,System.Single@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRelativeMouseState_System_Single__System_Single__
  name: GetRelativeMouseState(out float, out float)
  nameWithType: Sdl.GetRelativeMouseState(out float, out float)
  fullName: SharpSDL3.Sdl.GetRelativeMouseState(out float, out float)
  nameWithType.vb: Sdl.GetRelativeMouseState(Single, Single)
  fullName.vb: SharpSDL3.Sdl.GetRelativeMouseState(Single, Single)
  name.vb: GetRelativeMouseState(Single, Single)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetRelativeMouseState(System.Single@,System.Single@)
    name: GetRelativeMouseState
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRelativeMouseState_System_Single__System_Single__
  - name: (
  - name: out
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetRelativeMouseState(System.Single@,System.Single@)
    name: GetRelativeMouseState
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRelativeMouseState_System_Single__System_Single__
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: SharpSDL3.Sdl.GetMouseState*
  commentId: Overload:SharpSDL3.Sdl.GetMouseState
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetMouseState_System_Single__System_Single__
  name: GetMouseState
  nameWithType: Sdl.GetMouseState
  fullName: SharpSDL3.Sdl.GetMouseState
- uid: SharpSDL3.Enums.MouseButtonFlags
  commentId: T:SharpSDL3.Enums.MouseButtonFlags
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.MouseButtonFlags.html
  name: MouseButtonFlags
  nameWithType: MouseButtonFlags
  fullName: SharpSDL3.Enums.MouseButtonFlags
- uid: SharpSDL3.Sdl.CaptureMouse(System.Boolean)
  commentId: M:SharpSDL3.Sdl.CaptureMouse(System.Boolean)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CaptureMouse_System_Boolean_
  name: CaptureMouse(bool)
  nameWithType: Sdl.CaptureMouse(bool)
  fullName: SharpSDL3.Sdl.CaptureMouse(bool)
  nameWithType.vb: Sdl.CaptureMouse(Boolean)
  fullName.vb: SharpSDL3.Sdl.CaptureMouse(Boolean)
  name.vb: CaptureMouse(Boolean)
  spec.csharp:
  - uid: SharpSDL3.Sdl.CaptureMouse(System.Boolean)
    name: CaptureMouse
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CaptureMouse_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.CaptureMouse(System.Boolean)
    name: CaptureMouse
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CaptureMouse_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: SharpSDL3.Sdl.GetMouseState(System.Single@,System.Single@)
  commentId: M:SharpSDL3.Sdl.GetMouseState(System.Single@,System.Single@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetMouseState_System_Single__System_Single__
  name: GetMouseState(out float, out float)
  nameWithType: Sdl.GetMouseState(out float, out float)
  fullName: SharpSDL3.Sdl.GetMouseState(out float, out float)
  nameWithType.vb: Sdl.GetMouseState(Single, Single)
  fullName.vb: SharpSDL3.Sdl.GetMouseState(Single, Single)
  name.vb: GetMouseState(Single, Single)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetMouseState(System.Single@,System.Single@)
    name: GetMouseState
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetMouseState_System_Single__System_Single__
  - name: (
  - name: out
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetMouseState(System.Single@,System.Single@)
    name: GetMouseState
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetMouseState_System_Single__System_Single__
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: SharpSDL3.Sdl.GetGlobalMouseState*
  commentId: Overload:SharpSDL3.Sdl.GetGlobalMouseState
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGlobalMouseState_System_Single__System_Single__
  name: GetGlobalMouseState
  nameWithType: Sdl.GetGlobalMouseState
  fullName: SharpSDL3.Sdl.GetGlobalMouseState
- uid: SharpSDL3.Sdl.GetRelativeMouseState*
  commentId: Overload:SharpSDL3.Sdl.GetRelativeMouseState
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRelativeMouseState_System_Single__System_Single__
  name: GetRelativeMouseState
  nameWithType: Sdl.GetRelativeMouseState
  fullName: SharpSDL3.Sdl.GetRelativeMouseState
- uid: SharpSDL3.Sdl.WarpMouseGlobal(System.Single,System.Single)
  commentId: M:SharpSDL3.Sdl.WarpMouseGlobal(System.Single,System.Single)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WarpMouseGlobal_System_Single_System_Single_
  name: WarpMouseGlobal(float, float)
  nameWithType: Sdl.WarpMouseGlobal(float, float)
  fullName: SharpSDL3.Sdl.WarpMouseGlobal(float, float)
  nameWithType.vb: Sdl.WarpMouseGlobal(Single, Single)
  fullName.vb: SharpSDL3.Sdl.WarpMouseGlobal(Single, Single)
  name.vb: WarpMouseGlobal(Single, Single)
  spec.csharp:
  - uid: SharpSDL3.Sdl.WarpMouseGlobal(System.Single,System.Single)
    name: WarpMouseGlobal
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WarpMouseGlobal_System_Single_System_Single_
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.WarpMouseGlobal(System.Single,System.Single)
    name: WarpMouseGlobal
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WarpMouseGlobal_System_Single_System_Single_
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: SharpSDL3.Sdl.WarpMouseInWindow*
  commentId: Overload:SharpSDL3.Sdl.WarpMouseInWindow
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WarpMouseInWindow_System_IntPtr_System_Single_System_Single_
  name: WarpMouseInWindow
  nameWithType: Sdl.WarpMouseInWindow
  fullName: SharpSDL3.Sdl.WarpMouseInWindow
- uid: SharpSDL3.Sdl.WarpMouseInWindow(System.IntPtr,System.Single,System.Single)
  commentId: M:SharpSDL3.Sdl.WarpMouseInWindow(System.IntPtr,System.Single,System.Single)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WarpMouseInWindow_System_IntPtr_System_Single_System_Single_
  name: WarpMouseInWindow(nint, float, float)
  nameWithType: Sdl.WarpMouseInWindow(nint, float, float)
  fullName: SharpSDL3.Sdl.WarpMouseInWindow(nint, float, float)
  nameWithType.vb: Sdl.WarpMouseInWindow(IntPtr, Single, Single)
  fullName.vb: SharpSDL3.Sdl.WarpMouseInWindow(System.IntPtr, Single, Single)
  name.vb: WarpMouseInWindow(IntPtr, Single, Single)
  spec.csharp:
  - uid: SharpSDL3.Sdl.WarpMouseInWindow(System.IntPtr,System.Single,System.Single)
    name: WarpMouseInWindow
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WarpMouseInWindow_System_IntPtr_System_Single_System_Single_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.WarpMouseInWindow(System.IntPtr,System.Single,System.Single)
    name: WarpMouseInWindow
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WarpMouseInWindow_System_IntPtr_System_Single_System_Single_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: SharpSDL3.Sdl.WarpMouseGlobal*
  commentId: Overload:SharpSDL3.Sdl.WarpMouseGlobal
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WarpMouseGlobal_System_Single_System_Single_
  name: WarpMouseGlobal
  nameWithType: Sdl.WarpMouseGlobal
  fullName: SharpSDL3.Sdl.WarpMouseGlobal
- uid: SharpSDL3.Sdl.GetWindowRelativeMouseMode(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetWindowRelativeMouseMode(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowRelativeMouseMode_System_IntPtr_
  name: GetWindowRelativeMouseMode(nint)
  nameWithType: Sdl.GetWindowRelativeMouseMode(nint)
  fullName: SharpSDL3.Sdl.GetWindowRelativeMouseMode(nint)
  nameWithType.vb: Sdl.GetWindowRelativeMouseMode(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetWindowRelativeMouseMode(System.IntPtr)
  name.vb: GetWindowRelativeMouseMode(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetWindowRelativeMouseMode(System.IntPtr)
    name: GetWindowRelativeMouseMode
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowRelativeMouseMode_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetWindowRelativeMouseMode(System.IntPtr)
    name: GetWindowRelativeMouseMode
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowRelativeMouseMode_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.SetWindowRelativeMouseMode*
  commentId: Overload:SharpSDL3.Sdl.SetWindowRelativeMouseMode
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowRelativeMouseMode_System_IntPtr_System_Boolean_
  name: SetWindowRelativeMouseMode
  nameWithType: Sdl.SetWindowRelativeMouseMode
  fullName: SharpSDL3.Sdl.SetWindowRelativeMouseMode
- uid: SharpSDL3.Sdl.SetWindowRelativeMouseMode(System.IntPtr,System.Boolean)
  commentId: M:SharpSDL3.Sdl.SetWindowRelativeMouseMode(System.IntPtr,System.Boolean)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowRelativeMouseMode_System_IntPtr_System_Boolean_
  name: SetWindowRelativeMouseMode(nint, bool)
  nameWithType: Sdl.SetWindowRelativeMouseMode(nint, bool)
  fullName: SharpSDL3.Sdl.SetWindowRelativeMouseMode(nint, bool)
  nameWithType.vb: Sdl.SetWindowRelativeMouseMode(IntPtr, Boolean)
  fullName.vb: SharpSDL3.Sdl.SetWindowRelativeMouseMode(System.IntPtr, Boolean)
  name.vb: SetWindowRelativeMouseMode(IntPtr, Boolean)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetWindowRelativeMouseMode(System.IntPtr,System.Boolean)
    name: SetWindowRelativeMouseMode
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowRelativeMouseMode_System_IntPtr_System_Boolean_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetWindowRelativeMouseMode(System.IntPtr,System.Boolean)
    name: SetWindowRelativeMouseMode
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowRelativeMouseMode_System_IntPtr_System_Boolean_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: SharpSDL3.Sdl.GetWindowRelativeMouseMode*
  commentId: Overload:SharpSDL3.Sdl.GetWindowRelativeMouseMode
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowRelativeMouseMode_System_IntPtr_
  name: GetWindowRelativeMouseMode
  nameWithType: Sdl.GetWindowRelativeMouseMode
  fullName: SharpSDL3.Sdl.GetWindowRelativeMouseMode
- uid: SharpSDL3.Sdl.CaptureMouse*
  commentId: Overload:SharpSDL3.Sdl.CaptureMouse
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CaptureMouse_System_Boolean_
  name: CaptureMouse
  nameWithType: Sdl.CaptureMouse
  fullName: SharpSDL3.Sdl.CaptureMouse
- uid: SharpSDL3.Sdl.CreateColorCursor(System.IntPtr,System.Int32,System.Int32)
  commentId: M:SharpSDL3.Sdl.CreateColorCursor(System.IntPtr,System.Int32,System.Int32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateColorCursor_System_IntPtr_System_Int32_System_Int32_
  name: CreateColorCursor(nint, int, int)
  nameWithType: Sdl.CreateColorCursor(nint, int, int)
  fullName: SharpSDL3.Sdl.CreateColorCursor(nint, int, int)
  nameWithType.vb: Sdl.CreateColorCursor(IntPtr, Integer, Integer)
  fullName.vb: SharpSDL3.Sdl.CreateColorCursor(System.IntPtr, Integer, Integer)
  name.vb: CreateColorCursor(IntPtr, Integer, Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.CreateColorCursor(System.IntPtr,System.Int32,System.Int32)
    name: CreateColorCursor
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateColorCursor_System_IntPtr_System_Int32_System_Int32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.CreateColorCursor(System.IntPtr,System.Int32,System.Int32)
    name: CreateColorCursor
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateColorCursor_System_IntPtr_System_Int32_System_Int32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.CreateSystemCursor(SharpSDL3.Enums.SystemCursor)
  commentId: M:SharpSDL3.Sdl.CreateSystemCursor(SharpSDL3.Enums.SystemCursor)
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateSystemCursor_SharpSDL3_Enums_SystemCursor_
  name: CreateSystemCursor(SystemCursor)
  nameWithType: Sdl.CreateSystemCursor(SystemCursor)
  fullName: SharpSDL3.Sdl.CreateSystemCursor(SharpSDL3.Enums.SystemCursor)
  spec.csharp:
  - uid: SharpSDL3.Sdl.CreateSystemCursor(SharpSDL3.Enums.SystemCursor)
    name: CreateSystemCursor
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateSystemCursor_SharpSDL3_Enums_SystemCursor_
  - name: (
  - uid: SharpSDL3.Enums.SystemCursor
    name: SystemCursor
    href: SharpSDL3.Enums.SystemCursor.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.CreateSystemCursor(SharpSDL3.Enums.SystemCursor)
    name: CreateSystemCursor
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateSystemCursor_SharpSDL3_Enums_SystemCursor_
  - name: (
  - uid: SharpSDL3.Enums.SystemCursor
    name: SystemCursor
    href: SharpSDL3.Enums.SystemCursor.html
  - name: )
- uid: SharpSDL3.Sdl.DestroyCursor(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.DestroyCursor(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyCursor_System_IntPtr_
  name: DestroyCursor(nint)
  nameWithType: Sdl.DestroyCursor(nint)
  fullName: SharpSDL3.Sdl.DestroyCursor(nint)
  nameWithType.vb: Sdl.DestroyCursor(IntPtr)
  fullName.vb: SharpSDL3.Sdl.DestroyCursor(System.IntPtr)
  name.vb: DestroyCursor(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.DestroyCursor(System.IntPtr)
    name: DestroyCursor
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyCursor_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.DestroyCursor(System.IntPtr)
    name: DestroyCursor
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyCursor_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.SetCursor(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.SetCursor(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetCursor_System_IntPtr_
  name: SetCursor(nint)
  nameWithType: Sdl.SetCursor(nint)
  fullName: SharpSDL3.Sdl.SetCursor(nint)
  nameWithType.vb: Sdl.SetCursor(IntPtr)
  fullName.vb: SharpSDL3.Sdl.SetCursor(System.IntPtr)
  name.vb: SetCursor(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetCursor(System.IntPtr)
    name: SetCursor
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetCursor_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetCursor(System.IntPtr)
    name: SetCursor
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetCursor_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.CreateCursor*
  commentId: Overload:SharpSDL3.Sdl.CreateCursor
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateCursor_System_IntPtr_System_IntPtr_System_Int32_System_Int32_System_Int32_System_Int32_
  name: CreateCursor
  nameWithType: Sdl.CreateCursor
  fullName: SharpSDL3.Sdl.CreateCursor
- uid: SharpSDL3.Sdl.CreateCursor(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:SharpSDL3.Sdl.CreateCursor(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateCursor_System_IntPtr_System_IntPtr_System_Int32_System_Int32_System_Int32_System_Int32_
  name: CreateCursor(nint, nint, int, int, int, int)
  nameWithType: Sdl.CreateCursor(nint, nint, int, int, int, int)
  fullName: SharpSDL3.Sdl.CreateCursor(nint, nint, int, int, int, int)
  nameWithType.vb: Sdl.CreateCursor(IntPtr, IntPtr, Integer, Integer, Integer, Integer)
  fullName.vb: SharpSDL3.Sdl.CreateCursor(System.IntPtr, System.IntPtr, Integer, Integer, Integer, Integer)
  name.vb: CreateCursor(IntPtr, IntPtr, Integer, Integer, Integer, Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.CreateCursor(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)
    name: CreateCursor
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateCursor_System_IntPtr_System_IntPtr_System_Int32_System_Int32_System_Int32_System_Int32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.CreateCursor(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)
    name: CreateCursor
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateCursor_System_IntPtr_System_IntPtr_System_Int32_System_Int32_System_Int32_System_Int32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.CreateColorCursor*
  commentId: Overload:SharpSDL3.Sdl.CreateColorCursor
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateColorCursor_System_IntPtr_System_Int32_System_Int32_
  name: CreateColorCursor
  nameWithType: Sdl.CreateColorCursor
  fullName: SharpSDL3.Sdl.CreateColorCursor
- uid: SharpSDL3.Sdl.CreateSystemCursor*
  commentId: Overload:SharpSDL3.Sdl.CreateSystemCursor
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateSystemCursor_SharpSDL3_Enums_SystemCursor_
  name: CreateSystemCursor
  nameWithType: Sdl.CreateSystemCursor
  fullName: SharpSDL3.Sdl.CreateSystemCursor
- uid: SharpSDL3.Enums.SystemCursor
  commentId: T:SharpSDL3.Enums.SystemCursor
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.SystemCursor.html
  name: SystemCursor
  nameWithType: SystemCursor
  fullName: SharpSDL3.Enums.SystemCursor
- uid: SharpSDL3.Sdl.GetCursor
  commentId: M:SharpSDL3.Sdl.GetCursor
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetCursor
  name: GetCursor()
  nameWithType: Sdl.GetCursor()
  fullName: SharpSDL3.Sdl.GetCursor()
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetCursor
    name: GetCursor
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetCursor
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetCursor
    name: GetCursor
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetCursor
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.SetCursor*
  commentId: Overload:SharpSDL3.Sdl.SetCursor
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetCursor_System_IntPtr_
  name: SetCursor
  nameWithType: Sdl.SetCursor
  fullName: SharpSDL3.Sdl.SetCursor
- uid: SharpSDL3.Sdl.GetCursor*
  commentId: Overload:SharpSDL3.Sdl.GetCursor
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetCursor
  name: GetCursor
  nameWithType: Sdl.GetCursor
  fullName: SharpSDL3.Sdl.GetCursor
- uid: SharpSDL3.Sdl.GetDefaultCursor*
  commentId: Overload:SharpSDL3.Sdl.GetDefaultCursor
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetDefaultCursor
  name: GetDefaultCursor
  nameWithType: Sdl.GetDefaultCursor
  fullName: SharpSDL3.Sdl.GetDefaultCursor
- uid: SharpSDL3.Sdl.DestroyCursor*
  commentId: Overload:SharpSDL3.Sdl.DestroyCursor
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyCursor_System_IntPtr_
  name: DestroyCursor
  nameWithType: Sdl.DestroyCursor
  fullName: SharpSDL3.Sdl.DestroyCursor
- uid: SharpSDL3.Sdl.CursorVisible
  commentId: M:SharpSDL3.Sdl.CursorVisible
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CursorVisible
  name: CursorVisible()
  nameWithType: Sdl.CursorVisible()
  fullName: SharpSDL3.Sdl.CursorVisible()
  spec.csharp:
  - uid: SharpSDL3.Sdl.CursorVisible
    name: CursorVisible
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CursorVisible
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.CursorVisible
    name: CursorVisible
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CursorVisible
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.HideCursor
  commentId: M:SharpSDL3.Sdl.HideCursor
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HideCursor
  name: HideCursor()
  nameWithType: Sdl.HideCursor()
  fullName: SharpSDL3.Sdl.HideCursor()
  spec.csharp:
  - uid: SharpSDL3.Sdl.HideCursor
    name: HideCursor
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HideCursor
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.HideCursor
    name: HideCursor
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HideCursor
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.ShowCursor*
  commentId: Overload:SharpSDL3.Sdl.ShowCursor
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ShowCursor
  name: ShowCursor
  nameWithType: Sdl.ShowCursor
  fullName: SharpSDL3.Sdl.ShowCursor
- uid: SharpSDL3.Sdl.ShowCursor
  commentId: M:SharpSDL3.Sdl.ShowCursor
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ShowCursor
  name: ShowCursor()
  nameWithType: Sdl.ShowCursor()
  fullName: SharpSDL3.Sdl.ShowCursor()
  spec.csharp:
  - uid: SharpSDL3.Sdl.ShowCursor
    name: ShowCursor
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ShowCursor
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.ShowCursor
    name: ShowCursor
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ShowCursor
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.HideCursor*
  commentId: Overload:SharpSDL3.Sdl.HideCursor
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HideCursor
  name: HideCursor
  nameWithType: Sdl.HideCursor
  fullName: SharpSDL3.Sdl.HideCursor
- uid: SharpSDL3.Sdl.CursorVisible*
  commentId: Overload:SharpSDL3.Sdl.CursorVisible
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CursorVisible
  name: CursorVisible
  nameWithType: Sdl.CursorVisible
  fullName: SharpSDL3.Sdl.CursorVisible
- uid: SharpSDL3.Sdl.SignalCondition(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.SignalCondition(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SignalCondition_System_IntPtr_
  name: SignalCondition(nint)
  nameWithType: Sdl.SignalCondition(nint)
  fullName: SharpSDL3.Sdl.SignalCondition(nint)
  nameWithType.vb: Sdl.SignalCondition(IntPtr)
  fullName.vb: SharpSDL3.Sdl.SignalCondition(System.IntPtr)
  name.vb: SignalCondition(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SignalCondition(System.IntPtr)
    name: SignalCondition
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SignalCondition_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SignalCondition(System.IntPtr)
    name: SignalCondition
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SignalCondition_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.WaitCondition(System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.WaitCondition(System.IntPtr,System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WaitCondition_System_IntPtr_System_IntPtr_
  name: WaitCondition(nint, nint)
  nameWithType: Sdl.WaitCondition(nint, nint)
  fullName: SharpSDL3.Sdl.WaitCondition(nint, nint)
  nameWithType.vb: Sdl.WaitCondition(IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.WaitCondition(System.IntPtr, System.IntPtr)
  name.vb: WaitCondition(IntPtr, IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.WaitCondition(System.IntPtr,System.IntPtr)
    name: WaitCondition
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WaitCondition_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.WaitCondition(System.IntPtr,System.IntPtr)
    name: WaitCondition
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WaitCondition_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.WaitConditionTimeout(System.IntPtr,System.IntPtr,System.Int32)
  commentId: M:SharpSDL3.Sdl.WaitConditionTimeout(System.IntPtr,System.IntPtr,System.Int32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WaitConditionTimeout_System_IntPtr_System_IntPtr_System_Int32_
  name: WaitConditionTimeout(nint, nint, int)
  nameWithType: Sdl.WaitConditionTimeout(nint, nint, int)
  fullName: SharpSDL3.Sdl.WaitConditionTimeout(nint, nint, int)
  nameWithType.vb: Sdl.WaitConditionTimeout(IntPtr, IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.WaitConditionTimeout(System.IntPtr, System.IntPtr, Integer)
  name.vb: WaitConditionTimeout(IntPtr, IntPtr, Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.WaitConditionTimeout(System.IntPtr,System.IntPtr,System.Int32)
    name: WaitConditionTimeout
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WaitConditionTimeout_System_IntPtr_System_IntPtr_System_Int32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.WaitConditionTimeout(System.IntPtr,System.IntPtr,System.Int32)
    name: WaitConditionTimeout
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WaitConditionTimeout_System_IntPtr_System_IntPtr_System_Int32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.BroadcastCondition*
  commentId: Overload:SharpSDL3.Sdl.BroadcastCondition
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BroadcastCondition_System_IntPtr_
  name: BroadcastCondition
  nameWithType: Sdl.BroadcastCondition
  fullName: SharpSDL3.Sdl.BroadcastCondition
- uid: SharpSDL3.Sdl.BroadcastCondition(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.BroadcastCondition(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BroadcastCondition_System_IntPtr_
  name: BroadcastCondition(nint)
  nameWithType: Sdl.BroadcastCondition(nint)
  fullName: SharpSDL3.Sdl.BroadcastCondition(nint)
  nameWithType.vb: Sdl.BroadcastCondition(IntPtr)
  fullName.vb: SharpSDL3.Sdl.BroadcastCondition(System.IntPtr)
  name.vb: BroadcastCondition(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.BroadcastCondition(System.IntPtr)
    name: BroadcastCondition
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BroadcastCondition_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.BroadcastCondition(System.IntPtr)
    name: BroadcastCondition
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BroadcastCondition_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.DestroyCondition(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.DestroyCondition(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyCondition_System_IntPtr_
  name: DestroyCondition(nint)
  nameWithType: Sdl.DestroyCondition(nint)
  fullName: SharpSDL3.Sdl.DestroyCondition(nint)
  nameWithType.vb: Sdl.DestroyCondition(IntPtr)
  fullName.vb: SharpSDL3.Sdl.DestroyCondition(System.IntPtr)
  name.vb: DestroyCondition(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.DestroyCondition(System.IntPtr)
    name: DestroyCondition
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyCondition_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.DestroyCondition(System.IntPtr)
    name: DestroyCondition
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyCondition_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.CreateCondition*
  commentId: Overload:SharpSDL3.Sdl.CreateCondition
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateCondition
  name: CreateCondition
  nameWithType: Sdl.CreateCondition
  fullName: SharpSDL3.Sdl.CreateCondition
- uid: SharpSDL3.Sdl.DestroyMutex(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.DestroyMutex(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyMutex_System_IntPtr_
  name: DestroyMutex(nint)
  nameWithType: Sdl.DestroyMutex(nint)
  fullName: SharpSDL3.Sdl.DestroyMutex(nint)
  nameWithType.vb: Sdl.DestroyMutex(IntPtr)
  fullName.vb: SharpSDL3.Sdl.DestroyMutex(System.IntPtr)
  name.vb: DestroyMutex(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.DestroyMutex(System.IntPtr)
    name: DestroyMutex
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyMutex_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.DestroyMutex(System.IntPtr)
    name: DestroyMutex
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyMutex_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.LockMutex(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.LockMutex(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LockMutex_System_IntPtr_
  name: LockMutex(nint)
  nameWithType: Sdl.LockMutex(nint)
  fullName: SharpSDL3.Sdl.LockMutex(nint)
  nameWithType.vb: Sdl.LockMutex(IntPtr)
  fullName.vb: SharpSDL3.Sdl.LockMutex(System.IntPtr)
  name.vb: LockMutex(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.LockMutex(System.IntPtr)
    name: LockMutex
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LockMutex_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.LockMutex(System.IntPtr)
    name: LockMutex
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LockMutex_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.TryLockMutex(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.TryLockMutex(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_TryLockMutex_System_IntPtr_
  name: TryLockMutex(nint)
  nameWithType: Sdl.TryLockMutex(nint)
  fullName: SharpSDL3.Sdl.TryLockMutex(nint)
  nameWithType.vb: Sdl.TryLockMutex(IntPtr)
  fullName.vb: SharpSDL3.Sdl.TryLockMutex(System.IntPtr)
  name.vb: TryLockMutex(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.TryLockMutex(System.IntPtr)
    name: TryLockMutex
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_TryLockMutex_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.TryLockMutex(System.IntPtr)
    name: TryLockMutex
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_TryLockMutex_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.UnlockMutex(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.UnlockMutex(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UnlockMutex_System_IntPtr_
  name: UnlockMutex(nint)
  nameWithType: Sdl.UnlockMutex(nint)
  fullName: SharpSDL3.Sdl.UnlockMutex(nint)
  nameWithType.vb: Sdl.UnlockMutex(IntPtr)
  fullName.vb: SharpSDL3.Sdl.UnlockMutex(System.IntPtr)
  name.vb: UnlockMutex(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.UnlockMutex(System.IntPtr)
    name: UnlockMutex
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UnlockMutex_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.UnlockMutex(System.IntPtr)
    name: UnlockMutex
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UnlockMutex_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.CreateMutex*
  commentId: Overload:SharpSDL3.Sdl.CreateMutex
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateMutex
  name: CreateMutex
  nameWithType: Sdl.CreateMutex
  fullName: SharpSDL3.Sdl.CreateMutex
- uid: SharpSDL3.Sdl.DestroyRWLock(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.DestroyRWLock(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyRWLock_System_IntPtr_
  name: DestroyRWLock(nint)
  nameWithType: Sdl.DestroyRWLock(nint)
  fullName: SharpSDL3.Sdl.DestroyRWLock(nint)
  nameWithType.vb: Sdl.DestroyRWLock(IntPtr)
  fullName.vb: SharpSDL3.Sdl.DestroyRWLock(System.IntPtr)
  name.vb: DestroyRWLock(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.DestroyRWLock(System.IntPtr)
    name: DestroyRWLock
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyRWLock_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.DestroyRWLock(System.IntPtr)
    name: DestroyRWLock
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyRWLock_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.LockRWLockForReading(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.LockRWLockForReading(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LockRWLockForReading_System_IntPtr_
  name: LockRWLockForReading(nint)
  nameWithType: Sdl.LockRWLockForReading(nint)
  fullName: SharpSDL3.Sdl.LockRWLockForReading(nint)
  nameWithType.vb: Sdl.LockRWLockForReading(IntPtr)
  fullName.vb: SharpSDL3.Sdl.LockRWLockForReading(System.IntPtr)
  name.vb: LockRWLockForReading(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.LockRWLockForReading(System.IntPtr)
    name: LockRWLockForReading
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LockRWLockForReading_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.LockRWLockForReading(System.IntPtr)
    name: LockRWLockForReading
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LockRWLockForReading_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.LockRWLockForWriting(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.LockRWLockForWriting(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LockRWLockForWriting_System_IntPtr_
  name: LockRWLockForWriting(nint)
  nameWithType: Sdl.LockRWLockForWriting(nint)
  fullName: SharpSDL3.Sdl.LockRWLockForWriting(nint)
  nameWithType.vb: Sdl.LockRWLockForWriting(IntPtr)
  fullName.vb: SharpSDL3.Sdl.LockRWLockForWriting(System.IntPtr)
  name.vb: LockRWLockForWriting(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.LockRWLockForWriting(System.IntPtr)
    name: LockRWLockForWriting
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LockRWLockForWriting_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.LockRWLockForWriting(System.IntPtr)
    name: LockRWLockForWriting
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LockRWLockForWriting_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.TryLockRWLockForReading(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.TryLockRWLockForReading(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_TryLockRWLockForReading_System_IntPtr_
  name: TryLockRWLockForReading(nint)
  nameWithType: Sdl.TryLockRWLockForReading(nint)
  fullName: SharpSDL3.Sdl.TryLockRWLockForReading(nint)
  nameWithType.vb: Sdl.TryLockRWLockForReading(IntPtr)
  fullName.vb: SharpSDL3.Sdl.TryLockRWLockForReading(System.IntPtr)
  name.vb: TryLockRWLockForReading(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.TryLockRWLockForReading(System.IntPtr)
    name: TryLockRWLockForReading
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_TryLockRWLockForReading_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.TryLockRWLockForReading(System.IntPtr)
    name: TryLockRWLockForReading
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_TryLockRWLockForReading_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.TryLockRWLockForWriting(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.TryLockRWLockForWriting(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_TryLockRWLockForWriting_System_IntPtr_
  name: TryLockRWLockForWriting(nint)
  nameWithType: Sdl.TryLockRWLockForWriting(nint)
  fullName: SharpSDL3.Sdl.TryLockRWLockForWriting(nint)
  nameWithType.vb: Sdl.TryLockRWLockForWriting(IntPtr)
  fullName.vb: SharpSDL3.Sdl.TryLockRWLockForWriting(System.IntPtr)
  name.vb: TryLockRWLockForWriting(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.TryLockRWLockForWriting(System.IntPtr)
    name: TryLockRWLockForWriting
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_TryLockRWLockForWriting_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.TryLockRWLockForWriting(System.IntPtr)
    name: TryLockRWLockForWriting
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_TryLockRWLockForWriting_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.UnlockRWLock(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.UnlockRWLock(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UnlockRWLock_System_IntPtr_
  name: UnlockRWLock(nint)
  nameWithType: Sdl.UnlockRWLock(nint)
  fullName: SharpSDL3.Sdl.UnlockRWLock(nint)
  nameWithType.vb: Sdl.UnlockRWLock(IntPtr)
  fullName.vb: SharpSDL3.Sdl.UnlockRWLock(System.IntPtr)
  name.vb: UnlockRWLock(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.UnlockRWLock(System.IntPtr)
    name: UnlockRWLock
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UnlockRWLock_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.UnlockRWLock(System.IntPtr)
    name: UnlockRWLock
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UnlockRWLock_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.CreateRWLock*
  commentId: Overload:SharpSDL3.Sdl.CreateRWLock
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateRWLock
  name: CreateRWLock
  nameWithType: Sdl.CreateRWLock
  fullName: SharpSDL3.Sdl.CreateRWLock
- uid: SharpSDL3.Sdl.CreateCondition
  commentId: M:SharpSDL3.Sdl.CreateCondition
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateCondition
  name: CreateCondition()
  nameWithType: Sdl.CreateCondition()
  fullName: SharpSDL3.Sdl.CreateCondition()
  spec.csharp:
  - uid: SharpSDL3.Sdl.CreateCondition
    name: CreateCondition
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateCondition
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.CreateCondition
    name: CreateCondition
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateCondition
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.DestroyCondition*
  commentId: Overload:SharpSDL3.Sdl.DestroyCondition
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyCondition_System_IntPtr_
  name: DestroyCondition
  nameWithType: Sdl.DestroyCondition
  fullName: SharpSDL3.Sdl.DestroyCondition
- uid: SharpSDL3.Sdl.CreateMutex
  commentId: M:SharpSDL3.Sdl.CreateMutex
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateMutex
  name: CreateMutex()
  nameWithType: Sdl.CreateMutex()
  fullName: SharpSDL3.Sdl.CreateMutex()
  spec.csharp:
  - uid: SharpSDL3.Sdl.CreateMutex
    name: CreateMutex
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateMutex
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.CreateMutex
    name: CreateMutex
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateMutex
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.DestroyMutex*
  commentId: Overload:SharpSDL3.Sdl.DestroyMutex
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyMutex_System_IntPtr_
  name: DestroyMutex
  nameWithType: Sdl.DestroyMutex
  fullName: SharpSDL3.Sdl.DestroyMutex
- uid: SharpSDL3.Sdl.CreateRWLock
  commentId: M:SharpSDL3.Sdl.CreateRWLock
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateRWLock
  name: CreateRWLock()
  nameWithType: Sdl.CreateRWLock()
  fullName: SharpSDL3.Sdl.CreateRWLock()
  spec.csharp:
  - uid: SharpSDL3.Sdl.CreateRWLock
    name: CreateRWLock
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateRWLock
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.CreateRWLock
    name: CreateRWLock
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateRWLock
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.DestroyRWLock*
  commentId: Overload:SharpSDL3.Sdl.DestroyRWLock
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyRWLock_System_IntPtr_
  name: DestroyRWLock
  nameWithType: Sdl.DestroyRWLock
  fullName: SharpSDL3.Sdl.DestroyRWLock
- uid: SharpSDL3.Sdl.LockMutex*
  commentId: Overload:SharpSDL3.Sdl.LockMutex
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LockMutex_System_IntPtr_
  name: LockMutex
  nameWithType: Sdl.LockMutex
  fullName: SharpSDL3.Sdl.LockMutex
- uid: SharpSDL3.Sdl.LockRWLockForReading*
  commentId: Overload:SharpSDL3.Sdl.LockRWLockForReading
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LockRWLockForReading_System_IntPtr_
  name: LockRWLockForReading
  nameWithType: Sdl.LockRWLockForReading
  fullName: SharpSDL3.Sdl.LockRWLockForReading
- uid: SharpSDL3.Sdl.LockRWLockForWriting*
  commentId: Overload:SharpSDL3.Sdl.LockRWLockForWriting
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LockRWLockForWriting_System_IntPtr_
  name: LockRWLockForWriting
  nameWithType: Sdl.LockRWLockForWriting
  fullName: SharpSDL3.Sdl.LockRWLockForWriting
- uid: SharpSDL3.Sdl.ShouldInit(SharpSDL3.Structs.InitState@)
  commentId: M:SharpSDL3.Sdl.ShouldInit(SharpSDL3.Structs.InitState@)
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ShouldInit_SharpSDL3_Structs_InitState__
  name: ShouldInit(ref InitState)
  nameWithType: Sdl.ShouldInit(ref InitState)
  fullName: SharpSDL3.Sdl.ShouldInit(ref SharpSDL3.Structs.InitState)
  nameWithType.vb: Sdl.ShouldInit(InitState)
  fullName.vb: SharpSDL3.Sdl.ShouldInit(SharpSDL3.Structs.InitState)
  name.vb: ShouldInit(InitState)
  spec.csharp:
  - uid: SharpSDL3.Sdl.ShouldInit(SharpSDL3.Structs.InitState@)
    name: ShouldInit
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ShouldInit_SharpSDL3_Structs_InitState__
  - name: (
  - name: ref
  - name: " "
  - uid: SharpSDL3.Structs.InitState
    name: InitState
    href: SharpSDL3.Structs.InitState.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.ShouldInit(SharpSDL3.Structs.InitState@)
    name: ShouldInit
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ShouldInit_SharpSDL3_Structs_InitState__
  - name: (
  - uid: SharpSDL3.Structs.InitState
    name: InitState
    href: SharpSDL3.Structs.InitState.html
  - name: )
- uid: SharpSDL3.Sdl.ShouldQuit(SharpSDL3.Structs.InitState@)
  commentId: M:SharpSDL3.Sdl.ShouldQuit(SharpSDL3.Structs.InitState@)
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ShouldQuit_SharpSDL3_Structs_InitState__
  name: ShouldQuit(ref InitState)
  nameWithType: Sdl.ShouldQuit(ref InitState)
  fullName: SharpSDL3.Sdl.ShouldQuit(ref SharpSDL3.Structs.InitState)
  nameWithType.vb: Sdl.ShouldQuit(InitState)
  fullName.vb: SharpSDL3.Sdl.ShouldQuit(SharpSDL3.Structs.InitState)
  name.vb: ShouldQuit(InitState)
  spec.csharp:
  - uid: SharpSDL3.Sdl.ShouldQuit(SharpSDL3.Structs.InitState@)
    name: ShouldQuit
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ShouldQuit_SharpSDL3_Structs_InitState__
  - name: (
  - name: ref
  - name: " "
  - uid: SharpSDL3.Structs.InitState
    name: InitState
    href: SharpSDL3.Structs.InitState.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.ShouldQuit(SharpSDL3.Structs.InitState@)
    name: ShouldQuit
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ShouldQuit_SharpSDL3_Structs_InitState__
  - name: (
  - uid: SharpSDL3.Structs.InitState
    name: InitState
    href: SharpSDL3.Structs.InitState.html
  - name: )
- uid: SharpSDL3.Sdl.SetInitialized*
  commentId: Overload:SharpSDL3.Sdl.SetInitialized
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetInitialized_SharpSDL3_Structs_InitState__SharpSDL3_Structs_SdlBool_
  name: SetInitialized
  nameWithType: Sdl.SetInitialized
  fullName: SharpSDL3.Sdl.SetInitialized
- uid: SharpSDL3.Structs.InitState
  commentId: T:SharpSDL3.Structs.InitState
  parent: SharpSDL3.Structs
  href: SharpSDL3.Structs.InitState.html
  name: InitState
  nameWithType: InitState
  fullName: SharpSDL3.Structs.InitState
- uid: SharpSDL3.Sdl.SetInitialized(SharpSDL3.Structs.InitState@,SharpSDL3.Structs.SdlBool)
  commentId: M:SharpSDL3.Sdl.SetInitialized(SharpSDL3.Structs.InitState@,SharpSDL3.Structs.SdlBool)
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetInitialized_SharpSDL3_Structs_InitState__SharpSDL3_Structs_SdlBool_
  name: SetInitialized(ref InitState, SdlBool)
  nameWithType: Sdl.SetInitialized(ref InitState, SdlBool)
  fullName: SharpSDL3.Sdl.SetInitialized(ref SharpSDL3.Structs.InitState, SharpSDL3.Structs.SdlBool)
  nameWithType.vb: Sdl.SetInitialized(InitState, SdlBool)
  fullName.vb: SharpSDL3.Sdl.SetInitialized(SharpSDL3.Structs.InitState, SharpSDL3.Structs.SdlBool)
  name.vb: SetInitialized(InitState, SdlBool)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetInitialized(SharpSDL3.Structs.InitState@,SharpSDL3.Structs.SdlBool)
    name: SetInitialized
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetInitialized_SharpSDL3_Structs_InitState__SharpSDL3_Structs_SdlBool_
  - name: (
  - name: ref
  - name: " "
  - uid: SharpSDL3.Structs.InitState
    name: InitState
    href: SharpSDL3.Structs.InitState.html
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.SdlBool
    name: SdlBool
    href: SharpSDL3.Structs.SdlBool.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetInitialized(SharpSDL3.Structs.InitState@,SharpSDL3.Structs.SdlBool)
    name: SetInitialized
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetInitialized_SharpSDL3_Structs_InitState__SharpSDL3_Structs_SdlBool_
  - name: (
  - uid: SharpSDL3.Structs.InitState
    name: InitState
    href: SharpSDL3.Structs.InitState.html
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.SdlBool
    name: SdlBool
    href: SharpSDL3.Structs.SdlBool.html
  - name: )
- uid: SharpSDL3.Sdl.ShouldInit*
  commentId: Overload:SharpSDL3.Sdl.ShouldInit
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ShouldInit_SharpSDL3_Structs_InitState__
  name: ShouldInit
  nameWithType: Sdl.ShouldInit
  fullName: SharpSDL3.Sdl.ShouldInit
- uid: SharpSDL3.Sdl.ShouldQuit*
  commentId: Overload:SharpSDL3.Sdl.ShouldQuit
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ShouldQuit_SharpSDL3_Structs_InitState__
  name: ShouldQuit
  nameWithType: Sdl.ShouldQuit
  fullName: SharpSDL3.Sdl.ShouldQuit
- uid: SharpSDL3.Sdl.SignalCondition*
  commentId: Overload:SharpSDL3.Sdl.SignalCondition
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SignalCondition_System_IntPtr_
  name: SignalCondition
  nameWithType: Sdl.SignalCondition
  fullName: SharpSDL3.Sdl.SignalCondition
- uid: SharpSDL3.Sdl.TryLockMutex*
  commentId: Overload:SharpSDL3.Sdl.TryLockMutex
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_TryLockMutex_System_IntPtr_
  name: TryLockMutex
  nameWithType: Sdl.TryLockMutex
  fullName: SharpSDL3.Sdl.TryLockMutex
- uid: SharpSDL3.Sdl.TryLockRWLockForReading*
  commentId: Overload:SharpSDL3.Sdl.TryLockRWLockForReading
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_TryLockRWLockForReading_System_IntPtr_
  name: TryLockRWLockForReading
  nameWithType: Sdl.TryLockRWLockForReading
  fullName: SharpSDL3.Sdl.TryLockRWLockForReading
- uid: SharpSDL3.Sdl.TryLockRWLockForWriting*
  commentId: Overload:SharpSDL3.Sdl.TryLockRWLockForWriting
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_TryLockRWLockForWriting_System_IntPtr_
  name: TryLockRWLockForWriting
  nameWithType: Sdl.TryLockRWLockForWriting
  fullName: SharpSDL3.Sdl.TryLockRWLockForWriting
- uid: SharpSDL3.Sdl.UnlockMutex*
  commentId: Overload:SharpSDL3.Sdl.UnlockMutex
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UnlockMutex_System_IntPtr_
  name: UnlockMutex
  nameWithType: Sdl.UnlockMutex
  fullName: SharpSDL3.Sdl.UnlockMutex
- uid: SharpSDL3.Sdl.UnlockRWLock*
  commentId: Overload:SharpSDL3.Sdl.UnlockRWLock
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UnlockRWLock_System_IntPtr_
  name: UnlockRWLock
  nameWithType: Sdl.UnlockRWLock
  fullName: SharpSDL3.Sdl.UnlockRWLock
- uid: SharpSDL3.Sdl.WaitCondition*
  commentId: Overload:SharpSDL3.Sdl.WaitCondition
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WaitCondition_System_IntPtr_System_IntPtr_
  name: WaitCondition
  nameWithType: Sdl.WaitCondition
  fullName: SharpSDL3.Sdl.WaitCondition
- uid: SharpSDL3.Sdl.WaitConditionTimeout*
  commentId: Overload:SharpSDL3.Sdl.WaitConditionTimeout
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WaitConditionTimeout_System_IntPtr_System_IntPtr_System_Int32_
  name: WaitConditionTimeout
  nameWithType: Sdl.WaitConditionTimeout
  fullName: SharpSDL3.Sdl.WaitConditionTimeout
- uid: SharpSDL3.Sdl.EglGetCurrentConfig*
  commentId: Overload:SharpSDL3.Sdl.EglGetCurrentConfig
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_EglGetCurrentConfig
  name: EglGetCurrentConfig
  nameWithType: Sdl.EglGetCurrentConfig
  fullName: SharpSDL3.Sdl.EglGetCurrentConfig
- uid: SharpSDL3.Sdl.EglGetCurrentDisplay*
  commentId: Overload:SharpSDL3.Sdl.EglGetCurrentDisplay
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_EglGetCurrentDisplay
  name: EglGetCurrentDisplay
  nameWithType: Sdl.EglGetCurrentDisplay
  fullName: SharpSDL3.Sdl.EglGetCurrentDisplay
- uid: SharpSDL3.Sdl.EglGetProcAddress*
  commentId: Overload:SharpSDL3.Sdl.EglGetProcAddress
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_EglGetProcAddress_System_String_
  name: EglGetProcAddress
  nameWithType: Sdl.EglGetProcAddress
  fullName: SharpSDL3.Sdl.EglGetProcAddress
- uid: SharpSDL3.Sdl.EglGetWindowSurface*
  commentId: Overload:SharpSDL3.Sdl.EglGetWindowSurface
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_EglGetWindowSurface_System_IntPtr_
  name: EglGetWindowSurface
  nameWithType: Sdl.EglGetWindowSurface
  fullName: SharpSDL3.Sdl.EglGetWindowSurface
- uid: SharpSDL3.Sdl.EglSetAttributeCallbacks*
  commentId: Overload:SharpSDL3.Sdl.EglSetAttributeCallbacks
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_EglSetAttributeCallbacks_SharpSDL3_Delegates_SdlEglAttribArrayCallback_SharpSDL3_Delegates_SdlEglIntArrayCallback_SharpSDL3_Delegates_SdlEglIntArrayCallback_System_IntPtr_
  name: EglSetAttributeCallbacks
  nameWithType: Sdl.EglSetAttributeCallbacks
  fullName: SharpSDL3.Sdl.EglSetAttributeCallbacks
- uid: SharpSDL3.Delegates.SdlEglAttribArrayCallback
  commentId: T:SharpSDL3.Delegates.SdlEglAttribArrayCallback
  parent: SharpSDL3
  href: SharpSDL3.Delegates.html
  name: Delegates.SdlEglAttribArrayCallback
  nameWithType: Delegates.SdlEglAttribArrayCallback
  fullName: SharpSDL3.Delegates.SdlEglAttribArrayCallback
  spec.csharp:
  - uid: SharpSDL3.Delegates
    name: Delegates
    href: SharpSDL3.Delegates.html
  - name: .
  - uid: SharpSDL3.Delegates.SdlEglAttribArrayCallback
    name: SdlEglAttribArrayCallback
    href: SharpSDL3.Delegates.SdlEglAttribArrayCallback.html
  spec.vb:
  - uid: SharpSDL3.Delegates
    name: Delegates
    href: SharpSDL3.Delegates.html
  - name: .
  - uid: SharpSDL3.Delegates.SdlEglAttribArrayCallback
    name: SdlEglAttribArrayCallback
    href: SharpSDL3.Delegates.SdlEglAttribArrayCallback.html
- uid: SharpSDL3.Delegates.SdlEglIntArrayCallback
  commentId: T:SharpSDL3.Delegates.SdlEglIntArrayCallback
  parent: SharpSDL3
  href: SharpSDL3.Delegates.html
  name: Delegates.SdlEglIntArrayCallback
  nameWithType: Delegates.SdlEglIntArrayCallback
  fullName: SharpSDL3.Delegates.SdlEglIntArrayCallback
  spec.csharp:
  - uid: SharpSDL3.Delegates
    name: Delegates
    href: SharpSDL3.Delegates.html
  - name: .
  - uid: SharpSDL3.Delegates.SdlEglIntArrayCallback
    name: SdlEglIntArrayCallback
    href: SharpSDL3.Delegates.SdlEglIntArrayCallback.html
  spec.vb:
  - uid: SharpSDL3.Delegates
    name: Delegates
    href: SharpSDL3.Delegates.html
  - name: .
  - uid: SharpSDL3.Delegates.SdlEglIntArrayCallback
    name: SdlEglIntArrayCallback
    href: SharpSDL3.Delegates.SdlEglIntArrayCallback.html
- uid: SharpSDL3.Sdl.GlCreateContext*
  commentId: Overload:SharpSDL3.Sdl.GlCreateContext
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GlCreateContext_System_IntPtr_
  name: GlCreateContext
  nameWithType: Sdl.GlCreateContext
  fullName: SharpSDL3.Sdl.GlCreateContext
- uid: SharpSDL3.Sdl.GlDestroyContext*
  commentId: Overload:SharpSDL3.Sdl.GlDestroyContext
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GlDestroyContext_System_IntPtr_
  name: GlDestroyContext
  nameWithType: Sdl.GlDestroyContext
  fullName: SharpSDL3.Sdl.GlDestroyContext
- uid: SharpSDL3.Sdl.GlExtensionSupported*
  commentId: Overload:SharpSDL3.Sdl.GlExtensionSupported
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GlExtensionSupported_System_String_
  name: GlExtensionSupported
  nameWithType: Sdl.GlExtensionSupported
  fullName: SharpSDL3.Sdl.GlExtensionSupported
- uid: SharpSDL3.Sdl.GlGetAttribute*
  commentId: Overload:SharpSDL3.Sdl.GlGetAttribute
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GlGetAttribute_SharpSDL3_Enums_GlAttr_System_Int32__
  name: GlGetAttribute
  nameWithType: Sdl.GlGetAttribute
  fullName: SharpSDL3.Sdl.GlGetAttribute
- uid: SharpSDL3.Enums.GlAttr
  commentId: T:SharpSDL3.Enums.GlAttr
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.GlAttr.html
  name: GlAttr
  nameWithType: GlAttr
  fullName: SharpSDL3.Enums.GlAttr
- uid: SharpSDL3.Sdl.GlGetCurrentContext*
  commentId: Overload:SharpSDL3.Sdl.GlGetCurrentContext
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GlGetCurrentContext
  name: GlGetCurrentContext
  nameWithType: Sdl.GlGetCurrentContext
  fullName: SharpSDL3.Sdl.GlGetCurrentContext
- uid: SharpSDL3.Sdl.GlGetCurrentWindow*
  commentId: Overload:SharpSDL3.Sdl.GlGetCurrentWindow
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GlGetCurrentWindow
  name: GlGetCurrentWindow
  nameWithType: Sdl.GlGetCurrentWindow
  fullName: SharpSDL3.Sdl.GlGetCurrentWindow
- uid: SharpSDL3.Sdl.GlGetProcAddress*
  commentId: Overload:SharpSDL3.Sdl.GlGetProcAddress
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GlGetProcAddress_System_String_
  name: GlGetProcAddress
  nameWithType: Sdl.GlGetProcAddress
  fullName: SharpSDL3.Sdl.GlGetProcAddress
- uid: SharpSDL3.Sdl.GlGetSwapInterval*
  commentId: Overload:SharpSDL3.Sdl.GlGetSwapInterval
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GlGetSwapInterval_System_Int32__
  name: GlGetSwapInterval
  nameWithType: Sdl.GlGetSwapInterval
  fullName: SharpSDL3.Sdl.GlGetSwapInterval
- uid: SharpSDL3.Sdl.GlLoadLibrary*
  commentId: Overload:SharpSDL3.Sdl.GlLoadLibrary
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GlLoadLibrary_System_String_
  name: GlLoadLibrary
  nameWithType: Sdl.GlLoadLibrary
  fullName: SharpSDL3.Sdl.GlLoadLibrary
- uid: SharpSDL3.Sdl.GlMakeCurrent*
  commentId: Overload:SharpSDL3.Sdl.GlMakeCurrent
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GlMakeCurrent_System_IntPtr_System_IntPtr_
  name: GlMakeCurrent
  nameWithType: Sdl.GlMakeCurrent
  fullName: SharpSDL3.Sdl.GlMakeCurrent
- uid: SharpSDL3.Sdl.GlResetAttributes*
  commentId: Overload:SharpSDL3.Sdl.GlResetAttributes
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GlResetAttributes
  name: GlResetAttributes
  nameWithType: Sdl.GlResetAttributes
  fullName: SharpSDL3.Sdl.GlResetAttributes
- uid: SharpSDL3.Sdl.GlSetAttribute*
  commentId: Overload:SharpSDL3.Sdl.GlSetAttribute
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GlSetAttribute_SharpSDL3_Enums_GlAttr_System_Int32_
  name: GlSetAttribute
  nameWithType: Sdl.GlSetAttribute
  fullName: SharpSDL3.Sdl.GlSetAttribute
- uid: SharpSDL3.Sdl.GlSetSwapInterval*
  commentId: Overload:SharpSDL3.Sdl.GlSetSwapInterval
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GlSetSwapInterval_System_Int32_
  name: GlSetSwapInterval
  nameWithType: Sdl.GlSetSwapInterval
  fullName: SharpSDL3.Sdl.GlSetSwapInterval
- uid: SharpSDL3.Sdl.GlSwapWindow*
  commentId: Overload:SharpSDL3.Sdl.GlSwapWindow
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GlSwapWindow_System_IntPtr_
  name: GlSwapWindow
  nameWithType: Sdl.GlSwapWindow
  fullName: SharpSDL3.Sdl.GlSwapWindow
- uid: SharpSDL3.Sdl.GlUnloadLibrary*
  commentId: Overload:SharpSDL3.Sdl.GlUnloadLibrary
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GlUnloadLibrary
  name: GlUnloadLibrary
  nameWithType: Sdl.GlUnloadLibrary
  fullName: SharpSDL3.Sdl.GlUnloadLibrary
- uid: SharpSDL3.Sdl.GetPlatform*
  commentId: Overload:SharpSDL3.Sdl.GetPlatform
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetPlatform
  name: GetPlatform
  nameWithType: Sdl.GetPlatform
  fullName: SharpSDL3.Sdl.GetPlatform
- uid: SharpSDL3.Sdl.CreateProcessWithProperties(System.UInt32)
  commentId: M:SharpSDL3.Sdl.CreateProcessWithProperties(System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateProcessWithProperties_System_UInt32_
  name: CreateProcessWithProperties(uint)
  nameWithType: Sdl.CreateProcessWithProperties(uint)
  fullName: SharpSDL3.Sdl.CreateProcessWithProperties(uint)
  nameWithType.vb: Sdl.CreateProcessWithProperties(UInteger)
  fullName.vb: SharpSDL3.Sdl.CreateProcessWithProperties(UInteger)
  name.vb: CreateProcessWithProperties(UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.CreateProcessWithProperties(System.UInt32)
    name: CreateProcessWithProperties
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateProcessWithProperties_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.CreateProcessWithProperties(System.UInt32)
    name: CreateProcessWithProperties
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateProcessWithProperties_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.GetProcessProperties(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetProcessProperties(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetProcessProperties_System_IntPtr_
  name: GetProcessProperties(nint)
  nameWithType: Sdl.GetProcessProperties(nint)
  fullName: SharpSDL3.Sdl.GetProcessProperties(nint)
  nameWithType.vb: Sdl.GetProcessProperties(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetProcessProperties(System.IntPtr)
  name.vb: GetProcessProperties(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetProcessProperties(System.IntPtr)
    name: GetProcessProperties
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetProcessProperties_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetProcessProperties(System.IntPtr)
    name: GetProcessProperties
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetProcessProperties_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.ReadProcess(System.IntPtr,System.UIntPtr@,System.Int32@)
  commentId: M:SharpSDL3.Sdl.ReadProcess(System.IntPtr,System.UIntPtr@,System.Int32@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReadProcess_System_IntPtr_System_UIntPtr__System_Int32__
  name: ReadProcess(nint, out nuint, out int)
  nameWithType: Sdl.ReadProcess(nint, out nuint, out int)
  fullName: SharpSDL3.Sdl.ReadProcess(nint, out nuint, out int)
  nameWithType.vb: Sdl.ReadProcess(IntPtr, UIntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.ReadProcess(System.IntPtr, System.UIntPtr, Integer)
  name.vb: ReadProcess(IntPtr, UIntPtr, Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.ReadProcess(System.IntPtr,System.UIntPtr@,System.Int32@)
    name: ReadProcess
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReadProcess_System_IntPtr_System_UIntPtr__System_Int32__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.UIntPtr
    name: nuint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uintptr
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.ReadProcess(System.IntPtr,System.UIntPtr@,System.Int32@)
    name: ReadProcess
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReadProcess_System_IntPtr_System_UIntPtr__System_Int32__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UIntPtr
    name: UIntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uintptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.GetProcessInput(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetProcessInput(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetProcessInput_System_IntPtr_
  name: GetProcessInput(nint)
  nameWithType: Sdl.GetProcessInput(nint)
  fullName: SharpSDL3.Sdl.GetProcessInput(nint)
  nameWithType.vb: Sdl.GetProcessInput(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetProcessInput(System.IntPtr)
  name.vb: GetProcessInput(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetProcessInput(System.IntPtr)
    name: GetProcessInput
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetProcessInput_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetProcessInput(System.IntPtr)
    name: GetProcessInput
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetProcessInput_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GetProcessOutput(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetProcessOutput(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetProcessOutput_System_IntPtr_
  name: GetProcessOutput(nint)
  nameWithType: Sdl.GetProcessOutput(nint)
  fullName: SharpSDL3.Sdl.GetProcessOutput(nint)
  nameWithType.vb: Sdl.GetProcessOutput(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetProcessOutput(System.IntPtr)
  name.vb: GetProcessOutput(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetProcessOutput(System.IntPtr)
    name: GetProcessOutput
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetProcessOutput_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetProcessOutput(System.IntPtr)
    name: GetProcessOutput
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetProcessOutput_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.KillProcess(System.IntPtr,SharpSDL3.Structs.SdlBool)
  commentId: M:SharpSDL3.Sdl.KillProcess(System.IntPtr,SharpSDL3.Structs.SdlBool)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_KillProcess_System_IntPtr_SharpSDL3_Structs_SdlBool_
  name: KillProcess(nint, SdlBool)
  nameWithType: Sdl.KillProcess(nint, SdlBool)
  fullName: SharpSDL3.Sdl.KillProcess(nint, SharpSDL3.Structs.SdlBool)
  nameWithType.vb: Sdl.KillProcess(IntPtr, SdlBool)
  fullName.vb: SharpSDL3.Sdl.KillProcess(System.IntPtr, SharpSDL3.Structs.SdlBool)
  name.vb: KillProcess(IntPtr, SdlBool)
  spec.csharp:
  - uid: SharpSDL3.Sdl.KillProcess(System.IntPtr,SharpSDL3.Structs.SdlBool)
    name: KillProcess
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_KillProcess_System_IntPtr_SharpSDL3_Structs_SdlBool_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.SdlBool
    name: SdlBool
    href: SharpSDL3.Structs.SdlBool.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.KillProcess(System.IntPtr,SharpSDL3.Structs.SdlBool)
    name: KillProcess
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_KillProcess_System_IntPtr_SharpSDL3_Structs_SdlBool_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.SdlBool
    name: SdlBool
    href: SharpSDL3.Structs.SdlBool.html
  - name: )
- uid: SharpSDL3.Sdl.WaitProcess(System.IntPtr,SharpSDL3.Structs.SdlBool,System.Int32@)
  commentId: M:SharpSDL3.Sdl.WaitProcess(System.IntPtr,SharpSDL3.Structs.SdlBool,System.Int32@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WaitProcess_System_IntPtr_SharpSDL3_Structs_SdlBool_System_Int32__
  name: WaitProcess(nint, SdlBool, out int)
  nameWithType: Sdl.WaitProcess(nint, SdlBool, out int)
  fullName: SharpSDL3.Sdl.WaitProcess(nint, SharpSDL3.Structs.SdlBool, out int)
  nameWithType.vb: Sdl.WaitProcess(IntPtr, SdlBool, Integer)
  fullName.vb: SharpSDL3.Sdl.WaitProcess(System.IntPtr, SharpSDL3.Structs.SdlBool, Integer)
  name.vb: WaitProcess(IntPtr, SdlBool, Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.WaitProcess(System.IntPtr,SharpSDL3.Structs.SdlBool,System.Int32@)
    name: WaitProcess
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WaitProcess_System_IntPtr_SharpSDL3_Structs_SdlBool_System_Int32__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.SdlBool
    name: SdlBool
    href: SharpSDL3.Structs.SdlBool.html
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.WaitProcess(System.IntPtr,SharpSDL3.Structs.SdlBool,System.Int32@)
    name: WaitProcess
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WaitProcess_System_IntPtr_SharpSDL3_Structs_SdlBool_System_Int32__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.SdlBool
    name: SdlBool
    href: SharpSDL3.Structs.SdlBool.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.DestroyProcess(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.DestroyProcess(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyProcess_System_IntPtr_
  name: DestroyProcess(nint)
  nameWithType: Sdl.DestroyProcess(nint)
  fullName: SharpSDL3.Sdl.DestroyProcess(nint)
  nameWithType.vb: Sdl.DestroyProcess(IntPtr)
  fullName.vb: SharpSDL3.Sdl.DestroyProcess(System.IntPtr)
  name.vb: DestroyProcess(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.DestroyProcess(System.IntPtr)
    name: DestroyProcess
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyProcess_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.DestroyProcess(System.IntPtr)
    name: DestroyProcess
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyProcess_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.CreateProcess*
  commentId: Overload:SharpSDL3.Sdl.CreateProcess
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateProcess_System_IntPtr_SharpSDL3_Structs_SdlBool_
  name: CreateProcess
  nameWithType: Sdl.CreateProcess
  fullName: SharpSDL3.Sdl.CreateProcess
- uid: SharpSDL3.Sdl.CreateProcess(System.IntPtr,SharpSDL3.Structs.SdlBool)
  commentId: M:SharpSDL3.Sdl.CreateProcess(System.IntPtr,SharpSDL3.Structs.SdlBool)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateProcess_System_IntPtr_SharpSDL3_Structs_SdlBool_
  name: CreateProcess(nint, SdlBool)
  nameWithType: Sdl.CreateProcess(nint, SdlBool)
  fullName: SharpSDL3.Sdl.CreateProcess(nint, SharpSDL3.Structs.SdlBool)
  nameWithType.vb: Sdl.CreateProcess(IntPtr, SdlBool)
  fullName.vb: SharpSDL3.Sdl.CreateProcess(System.IntPtr, SharpSDL3.Structs.SdlBool)
  name.vb: CreateProcess(IntPtr, SdlBool)
  spec.csharp:
  - uid: SharpSDL3.Sdl.CreateProcess(System.IntPtr,SharpSDL3.Structs.SdlBool)
    name: CreateProcess
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateProcess_System_IntPtr_SharpSDL3_Structs_SdlBool_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.SdlBool
    name: SdlBool
    href: SharpSDL3.Structs.SdlBool.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.CreateProcess(System.IntPtr,SharpSDL3.Structs.SdlBool)
    name: CreateProcess
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateProcess_System_IntPtr_SharpSDL3_Structs_SdlBool_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.SdlBool
    name: SdlBool
    href: SharpSDL3.Structs.SdlBool.html
  - name: )
- uid: SharpSDL3.Sdl.CreateProcessWithProperties*
  commentId: Overload:SharpSDL3.Sdl.CreateProcessWithProperties
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateProcessWithProperties_System_UInt32_
  name: CreateProcessWithProperties
  nameWithType: Sdl.CreateProcessWithProperties
  fullName: SharpSDL3.Sdl.CreateProcessWithProperties
- uid: SharpSDL3.Sdl.GetProcessProperties*
  commentId: Overload:SharpSDL3.Sdl.GetProcessProperties
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetProcessProperties_System_IntPtr_
  name: GetProcessProperties
  nameWithType: Sdl.GetProcessProperties
  fullName: SharpSDL3.Sdl.GetProcessProperties
- uid: SharpSDL3.Sdl.ReadProcess*
  commentId: Overload:SharpSDL3.Sdl.ReadProcess
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReadProcess_System_IntPtr_System_UIntPtr__System_Int32__
  name: ReadProcess
  nameWithType: Sdl.ReadProcess
  fullName: SharpSDL3.Sdl.ReadProcess
- uid: SharpSDL3.Sdl.GetProcessInput*
  commentId: Overload:SharpSDL3.Sdl.GetProcessInput
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetProcessInput_System_IntPtr_
  name: GetProcessInput
  nameWithType: Sdl.GetProcessInput
  fullName: SharpSDL3.Sdl.GetProcessInput
- uid: SharpSDL3.Sdl.GetProcessOutput*
  commentId: Overload:SharpSDL3.Sdl.GetProcessOutput
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetProcessOutput_System_IntPtr_
  name: GetProcessOutput
  nameWithType: Sdl.GetProcessOutput
  fullName: SharpSDL3.Sdl.GetProcessOutput
- uid: SharpSDL3.Sdl.KillProcess*
  commentId: Overload:SharpSDL3.Sdl.KillProcess
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_KillProcess_System_IntPtr_SharpSDL3_Structs_SdlBool_
  name: KillProcess
  nameWithType: Sdl.KillProcess
  fullName: SharpSDL3.Sdl.KillProcess
- uid: SharpSDL3.Sdl.WaitProcess*
  commentId: Overload:SharpSDL3.Sdl.WaitProcess
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WaitProcess_System_IntPtr_SharpSDL3_Structs_SdlBool_System_Int32__
  name: WaitProcess
  nameWithType: Sdl.WaitProcess
  fullName: SharpSDL3.Sdl.WaitProcess
- uid: SharpSDL3.Sdl.DestroyProcess*
  commentId: Overload:SharpSDL3.Sdl.DestroyProcess
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyProcess_System_IntPtr_
  name: DestroyProcess
  nameWithType: Sdl.DestroyProcess
  fullName: SharpSDL3.Sdl.DestroyProcess
- uid: SharpSDL3.Sdl.AddVulkanRenderSemaphores*
  commentId: Overload:SharpSDL3.Sdl.AddVulkanRenderSemaphores
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_AddVulkanRenderSemaphores_System_IntPtr_System_UInt32_System_Int64_System_Int64_
  name: AddVulkanRenderSemaphores
  nameWithType: Sdl.AddVulkanRenderSemaphores
  fullName: SharpSDL3.Sdl.AddVulkanRenderSemaphores
- uid: SharpSDL3.Sdl.RenderCoordinatesFromWindow(System.IntPtr,System.Single,System.Single,System.Single@,System.Single@)
  commentId: M:SharpSDL3.Sdl.RenderCoordinatesFromWindow(System.IntPtr,System.Single,System.Single,System.Single@,System.Single@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderCoordinatesFromWindow_System_IntPtr_System_Single_System_Single_System_Single__System_Single__
  name: RenderCoordinatesFromWindow(nint, float, float, out float, out float)
  nameWithType: Sdl.RenderCoordinatesFromWindow(nint, float, float, out float, out float)
  fullName: SharpSDL3.Sdl.RenderCoordinatesFromWindow(nint, float, float, out float, out float)
  nameWithType.vb: Sdl.RenderCoordinatesFromWindow(IntPtr, Single, Single, Single, Single)
  fullName.vb: SharpSDL3.Sdl.RenderCoordinatesFromWindow(System.IntPtr, Single, Single, Single, Single)
  name.vb: RenderCoordinatesFromWindow(IntPtr, Single, Single, Single, Single)
  spec.csharp:
  - uid: SharpSDL3.Sdl.RenderCoordinatesFromWindow(System.IntPtr,System.Single,System.Single,System.Single@,System.Single@)
    name: RenderCoordinatesFromWindow
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderCoordinatesFromWindow_System_IntPtr_System_Single_System_Single_System_Single__System_Single__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.RenderCoordinatesFromWindow(System.IntPtr,System.Single,System.Single,System.Single@,System.Single@)
    name: RenderCoordinatesFromWindow
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderCoordinatesFromWindow_System_IntPtr_System_Single_System_Single_System_Single__System_Single__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: SharpSDL3.Sdl.ConvertEventToRenderCoordinates*
  commentId: Overload:SharpSDL3.Sdl.ConvertEventToRenderCoordinates
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ConvertEventToRenderCoordinates_System_IntPtr_SharpSDL3_Structs_Event__
  name: ConvertEventToRenderCoordinates
  nameWithType: Sdl.ConvertEventToRenderCoordinates
  fullName: SharpSDL3.Sdl.ConvertEventToRenderCoordinates
- uid: SharpSDL3.Sdl.CreateRendererWithProperties(System.UInt32)
  commentId: M:SharpSDL3.Sdl.CreateRendererWithProperties(System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateRendererWithProperties_System_UInt32_
  name: CreateRendererWithProperties(uint)
  nameWithType: Sdl.CreateRendererWithProperties(uint)
  fullName: SharpSDL3.Sdl.CreateRendererWithProperties(uint)
  nameWithType.vb: Sdl.CreateRendererWithProperties(UInteger)
  fullName.vb: SharpSDL3.Sdl.CreateRendererWithProperties(UInteger)
  name.vb: CreateRendererWithProperties(UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.CreateRendererWithProperties(System.UInt32)
    name: CreateRendererWithProperties
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateRendererWithProperties_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.CreateRendererWithProperties(System.UInt32)
    name: CreateRendererWithProperties
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateRendererWithProperties_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.CreateSoftwareRenderer(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.CreateSoftwareRenderer(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateSoftwareRenderer_System_IntPtr_
  name: CreateSoftwareRenderer(nint)
  nameWithType: Sdl.CreateSoftwareRenderer(nint)
  fullName: SharpSDL3.Sdl.CreateSoftwareRenderer(nint)
  nameWithType.vb: Sdl.CreateSoftwareRenderer(IntPtr)
  fullName.vb: SharpSDL3.Sdl.CreateSoftwareRenderer(System.IntPtr)
  name.vb: CreateSoftwareRenderer(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.CreateSoftwareRenderer(System.IntPtr)
    name: CreateSoftwareRenderer
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateSoftwareRenderer_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.CreateSoftwareRenderer(System.IntPtr)
    name: CreateSoftwareRenderer
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateSoftwareRenderer_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.DestroyRenderer(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.DestroyRenderer(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyRenderer_System_IntPtr_
  name: DestroyRenderer(nint)
  nameWithType: Sdl.DestroyRenderer(nint)
  fullName: SharpSDL3.Sdl.DestroyRenderer(nint)
  nameWithType.vb: Sdl.DestroyRenderer(IntPtr)
  fullName.vb: SharpSDL3.Sdl.DestroyRenderer(System.IntPtr)
  name.vb: DestroyRenderer(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.DestroyRenderer(System.IntPtr)
    name: DestroyRenderer
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyRenderer_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.DestroyRenderer(System.IntPtr)
    name: DestroyRenderer
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyRenderer_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GetNumRenderDrivers
  commentId: M:SharpSDL3.Sdl.GetNumRenderDrivers
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetNumRenderDrivers
  name: GetNumRenderDrivers()
  nameWithType: Sdl.GetNumRenderDrivers()
  fullName: SharpSDL3.Sdl.GetNumRenderDrivers()
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetNumRenderDrivers
    name: GetNumRenderDrivers
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetNumRenderDrivers
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetNumRenderDrivers
    name: GetNumRenderDrivers
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetNumRenderDrivers
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.GetRenderDriver(System.Int32)
  commentId: M:SharpSDL3.Sdl.GetRenderDriver(System.Int32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderDriver_System_Int32_
  name: GetRenderDriver(int)
  nameWithType: Sdl.GetRenderDriver(int)
  fullName: SharpSDL3.Sdl.GetRenderDriver(int)
  nameWithType.vb: Sdl.GetRenderDriver(Integer)
  fullName.vb: SharpSDL3.Sdl.GetRenderDriver(Integer)
  name.vb: GetRenderDriver(Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetRenderDriver(System.Int32)
    name: GetRenderDriver
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderDriver_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetRenderDriver(System.Int32)
    name: GetRenderDriver
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderDriver_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.GetRendererName(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetRendererName(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRendererName_System_IntPtr_
  name: GetRendererName(nint)
  nameWithType: Sdl.GetRendererName(nint)
  fullName: SharpSDL3.Sdl.GetRendererName(nint)
  nameWithType.vb: Sdl.GetRendererName(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetRendererName(System.IntPtr)
  name.vb: GetRendererName(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetRendererName(System.IntPtr)
    name: GetRendererName
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRendererName_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetRendererName(System.IntPtr)
    name: GetRendererName
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRendererName_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.CreateRenderer*
  commentId: Overload:SharpSDL3.Sdl.CreateRenderer
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateRenderer_System_IntPtr_System_String_
  name: CreateRenderer
  nameWithType: Sdl.CreateRenderer
  fullName: SharpSDL3.Sdl.CreateRenderer
- uid: SharpSDL3.Sdl.CreateProperties
  commentId: M:SharpSDL3.Sdl.CreateProperties
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateProperties
  name: CreateProperties()
  nameWithType: Sdl.CreateProperties()
  fullName: SharpSDL3.Sdl.CreateProperties()
  spec.csharp:
  - uid: SharpSDL3.Sdl.CreateProperties
    name: CreateProperties
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateProperties
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.CreateProperties
    name: CreateProperties
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateProperties
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.CreateRenderer(System.IntPtr,System.String)
  commentId: M:SharpSDL3.Sdl.CreateRenderer(System.IntPtr,System.String)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateRenderer_System_IntPtr_System_String_
  name: CreateRenderer(nint, string)
  nameWithType: Sdl.CreateRenderer(nint, string)
  fullName: SharpSDL3.Sdl.CreateRenderer(nint, string)
  nameWithType.vb: Sdl.CreateRenderer(IntPtr, String)
  fullName.vb: SharpSDL3.Sdl.CreateRenderer(System.IntPtr, String)
  name.vb: CreateRenderer(IntPtr, String)
  spec.csharp:
  - uid: SharpSDL3.Sdl.CreateRenderer(System.IntPtr,System.String)
    name: CreateRenderer
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateRenderer_System_IntPtr_System_String_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.CreateRenderer(System.IntPtr,System.String)
    name: CreateRenderer
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateRenderer_System_IntPtr_System_String_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SharpSDL3.Sdl.CreateRendererWithProperties*
  commentId: Overload:SharpSDL3.Sdl.CreateRendererWithProperties
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateRendererWithProperties_System_UInt32_
  name: CreateRendererWithProperties
  nameWithType: Sdl.CreateRendererWithProperties
  fullName: SharpSDL3.Sdl.CreateRendererWithProperties
- uid: SharpSDL3.Structs.Surface
  commentId: T:SharpSDL3.Structs.Surface
  parent: SharpSDL3.Structs
  href: SharpSDL3.Structs.Surface.html
  name: Surface
  nameWithType: Surface
  fullName: SharpSDL3.Structs.Surface
- uid: SharpSDL3.Sdl.CreateSoftwareRenderer*
  commentId: Overload:SharpSDL3.Sdl.CreateSoftwareRenderer
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateSoftwareRenderer_System_IntPtr_
  name: CreateSoftwareRenderer
  nameWithType: Sdl.CreateSoftwareRenderer
  fullName: SharpSDL3.Sdl.CreateSoftwareRenderer
- uid: SharpSDL3.Sdl.CreateWindowAndRenderer*
  commentId: Overload:SharpSDL3.Sdl.CreateWindowAndRenderer
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateWindowAndRenderer_System_String_System_Int32_System_Int32_SharpSDL3_Enums_WindowFlags_System_IntPtr__System_IntPtr__
  name: CreateWindowAndRenderer
  nameWithType: Sdl.CreateWindowAndRenderer
  fullName: SharpSDL3.Sdl.CreateWindowAndRenderer
- uid: SharpSDL3.Enums.WindowFlags
  commentId: T:SharpSDL3.Enums.WindowFlags
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.WindowFlags.html
  name: WindowFlags
  nameWithType: WindowFlags
  fullName: SharpSDL3.Enums.WindowFlags
- uid: SharpSDL3.Sdl.CreateWindow(System.String,System.Int32,System.Int32,SharpSDL3.Enums.WindowFlags)
  commentId: M:SharpSDL3.Sdl.CreateWindow(System.String,System.Int32,System.Int32,SharpSDL3.Enums.WindowFlags)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateWindow_System_String_System_Int32_System_Int32_SharpSDL3_Enums_WindowFlags_
  name: CreateWindow(string, int, int, WindowFlags)
  nameWithType: Sdl.CreateWindow(string, int, int, WindowFlags)
  fullName: SharpSDL3.Sdl.CreateWindow(string, int, int, SharpSDL3.Enums.WindowFlags)
  nameWithType.vb: Sdl.CreateWindow(String, Integer, Integer, WindowFlags)
  fullName.vb: SharpSDL3.Sdl.CreateWindow(String, Integer, Integer, SharpSDL3.Enums.WindowFlags)
  name.vb: CreateWindow(String, Integer, Integer, WindowFlags)
  spec.csharp:
  - uid: SharpSDL3.Sdl.CreateWindow(System.String,System.Int32,System.Int32,SharpSDL3.Enums.WindowFlags)
    name: CreateWindow
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateWindow_System_String_System_Int32_System_Int32_SharpSDL3_Enums_WindowFlags_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.WindowFlags
    name: WindowFlags
    href: SharpSDL3.Enums.WindowFlags.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.CreateWindow(System.String,System.Int32,System.Int32,SharpSDL3.Enums.WindowFlags)
    name: CreateWindow
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateWindow_System_String_System_Int32_System_Int32_SharpSDL3_Enums_WindowFlags_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.WindowFlags
    name: WindowFlags
    href: SharpSDL3.Enums.WindowFlags.html
  - name: )
- uid: SharpSDL3.Sdl.DestroyRenderer*
  commentId: Overload:SharpSDL3.Sdl.DestroyRenderer
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyRenderer_System_IntPtr_
  name: DestroyRenderer
  nameWithType: Sdl.DestroyRenderer
  fullName: SharpSDL3.Sdl.DestroyRenderer
- uid: SharpSDL3.Sdl.CreateTexture(System.IntPtr,SharpSDL3.Enums.PixelFormat,SharpSDL3.Enums.TextureAccess,System.Int32,System.Int32)
  commentId: M:SharpSDL3.Sdl.CreateTexture(System.IntPtr,SharpSDL3.Enums.PixelFormat,SharpSDL3.Enums.TextureAccess,System.Int32,System.Int32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateTexture_System_IntPtr_SharpSDL3_Enums_PixelFormat_SharpSDL3_Enums_TextureAccess_System_Int32_System_Int32_
  name: CreateTexture(nint, PixelFormat, TextureAccess, int, int)
  nameWithType: Sdl.CreateTexture(nint, PixelFormat, TextureAccess, int, int)
  fullName: SharpSDL3.Sdl.CreateTexture(nint, SharpSDL3.Enums.PixelFormat, SharpSDL3.Enums.TextureAccess, int, int)
  nameWithType.vb: Sdl.CreateTexture(IntPtr, PixelFormat, TextureAccess, Integer, Integer)
  fullName.vb: SharpSDL3.Sdl.CreateTexture(System.IntPtr, SharpSDL3.Enums.PixelFormat, SharpSDL3.Enums.TextureAccess, Integer, Integer)
  name.vb: CreateTexture(IntPtr, PixelFormat, TextureAccess, Integer, Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.CreateTexture(System.IntPtr,SharpSDL3.Enums.PixelFormat,SharpSDL3.Enums.TextureAccess,System.Int32,System.Int32)
    name: CreateTexture
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateTexture_System_IntPtr_SharpSDL3_Enums_PixelFormat_SharpSDL3_Enums_TextureAccess_System_Int32_System_Int32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.PixelFormat
    name: PixelFormat
    href: SharpSDL3.Enums.PixelFormat.html
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.TextureAccess
    name: TextureAccess
    href: SharpSDL3.Enums.TextureAccess.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.CreateTexture(System.IntPtr,SharpSDL3.Enums.PixelFormat,SharpSDL3.Enums.TextureAccess,System.Int32,System.Int32)
    name: CreateTexture
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateTexture_System_IntPtr_SharpSDL3_Enums_PixelFormat_SharpSDL3_Enums_TextureAccess_System_Int32_System_Int32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.PixelFormat
    name: PixelFormat
    href: SharpSDL3.Enums.PixelFormat.html
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.TextureAccess
    name: TextureAccess
    href: SharpSDL3.Enums.TextureAccess.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.CreateTextureFromSurface(System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.CreateTextureFromSurface(System.IntPtr,System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateTextureFromSurface_System_IntPtr_System_IntPtr_
  name: CreateTextureFromSurface(nint, nint)
  nameWithType: Sdl.CreateTextureFromSurface(nint, nint)
  fullName: SharpSDL3.Sdl.CreateTextureFromSurface(nint, nint)
  nameWithType.vb: Sdl.CreateTextureFromSurface(IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.CreateTextureFromSurface(System.IntPtr, System.IntPtr)
  name.vb: CreateTextureFromSurface(IntPtr, IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.CreateTextureFromSurface(System.IntPtr,System.IntPtr)
    name: CreateTextureFromSurface
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateTextureFromSurface_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.CreateTextureFromSurface(System.IntPtr,System.IntPtr)
    name: CreateTextureFromSurface
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateTextureFromSurface_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.DestroyTexture*
  commentId: Overload:SharpSDL3.Sdl.DestroyTexture
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyTexture_System_IntPtr_
  name: DestroyTexture
  nameWithType: Sdl.DestroyTexture
  fullName: SharpSDL3.Sdl.DestroyTexture
- uid: SharpSDL3.Sdl.FlushRenderer*
  commentId: Overload:SharpSDL3.Sdl.FlushRenderer
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_FlushRenderer_System_IntPtr_
  name: FlushRenderer
  nameWithType: Sdl.FlushRenderer
  fullName: SharpSDL3.Sdl.FlushRenderer
- uid: SharpSDL3.Sdl.GetCurrentRenderOutputSize*
  commentId: Overload:SharpSDL3.Sdl.GetCurrentRenderOutputSize
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetCurrentRenderOutputSize_System_IntPtr_System_Int32__System_Int32__
  name: GetCurrentRenderOutputSize
  nameWithType: Sdl.GetCurrentRenderOutputSize
  fullName: SharpSDL3.Sdl.GetCurrentRenderOutputSize
- uid: SharpSDL3.Sdl.GetRenderOutputSize(System.IntPtr,System.Int32@,System.Int32@)
  commentId: M:SharpSDL3.Sdl.GetRenderOutputSize(System.IntPtr,System.Int32@,System.Int32@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderOutputSize_System_IntPtr_System_Int32__System_Int32__
  name: GetRenderOutputSize(nint, out int, out int)
  nameWithType: Sdl.GetRenderOutputSize(nint, out int, out int)
  fullName: SharpSDL3.Sdl.GetRenderOutputSize(nint, out int, out int)
  nameWithType.vb: Sdl.GetRenderOutputSize(IntPtr, Integer, Integer)
  fullName.vb: SharpSDL3.Sdl.GetRenderOutputSize(System.IntPtr, Integer, Integer)
  name.vb: GetRenderOutputSize(IntPtr, Integer, Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetRenderOutputSize(System.IntPtr,System.Int32@,System.Int32@)
    name: GetRenderOutputSize
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderOutputSize_System_IntPtr_System_Int32__System_Int32__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetRenderOutputSize(System.IntPtr,System.Int32@,System.Int32@)
    name: GetRenderOutputSize
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderOutputSize_System_IntPtr_System_Int32__System_Int32__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.GetNumRenderDrivers*
  commentId: Overload:SharpSDL3.Sdl.GetNumRenderDrivers
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetNumRenderDrivers
  name: GetNumRenderDrivers
  nameWithType: Sdl.GetNumRenderDrivers
  fullName: SharpSDL3.Sdl.GetNumRenderDrivers
- uid: SharpSDL3.Sdl.GetRenderClipRect*
  commentId: Overload:SharpSDL3.Sdl.GetRenderClipRect
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderClipRect_System_IntPtr_SharpSDL3_Structs_Rect__
  name: GetRenderClipRect
  nameWithType: Sdl.GetRenderClipRect
  fullName: SharpSDL3.Sdl.GetRenderClipRect
- uid: SharpSDL3.Sdl.RenderClipEnabled(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.RenderClipEnabled(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderClipEnabled_System_IntPtr_
  name: RenderClipEnabled(nint)
  nameWithType: Sdl.RenderClipEnabled(nint)
  fullName: SharpSDL3.Sdl.RenderClipEnabled(nint)
  nameWithType.vb: Sdl.RenderClipEnabled(IntPtr)
  fullName.vb: SharpSDL3.Sdl.RenderClipEnabled(System.IntPtr)
  name.vb: RenderClipEnabled(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.RenderClipEnabled(System.IntPtr)
    name: RenderClipEnabled
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderClipEnabled_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.RenderClipEnabled(System.IntPtr)
    name: RenderClipEnabled
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderClipEnabled_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.SetRenderClipRect(System.IntPtr,SharpSDL3.Structs.Rect@)
  commentId: M:SharpSDL3.Sdl.SetRenderClipRect(System.IntPtr,SharpSDL3.Structs.Rect@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetRenderClipRect_System_IntPtr_SharpSDL3_Structs_Rect__
  name: SetRenderClipRect(nint, ref Rect)
  nameWithType: Sdl.SetRenderClipRect(nint, ref Rect)
  fullName: SharpSDL3.Sdl.SetRenderClipRect(nint, ref SharpSDL3.Structs.Rect)
  nameWithType.vb: Sdl.SetRenderClipRect(IntPtr, Rect)
  fullName.vb: SharpSDL3.Sdl.SetRenderClipRect(System.IntPtr, SharpSDL3.Structs.Rect)
  name.vb: SetRenderClipRect(IntPtr, Rect)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetRenderClipRect(System.IntPtr,SharpSDL3.Structs.Rect@)
    name: SetRenderClipRect
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetRenderClipRect_System_IntPtr_SharpSDL3_Structs_Rect__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: ref
  - name: " "
  - uid: SharpSDL3.Structs.Rect
    name: Rect
    href: SharpSDL3.Structs.Rect.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetRenderClipRect(System.IntPtr,SharpSDL3.Structs.Rect@)
    name: SetRenderClipRect
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetRenderClipRect_System_IntPtr_SharpSDL3_Structs_Rect__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.Rect
    name: Rect
    href: SharpSDL3.Structs.Rect.html
  - name: )
- uid: SharpSDL3.Sdl.GetRenderColorScale*
  commentId: Overload:SharpSDL3.Sdl.GetRenderColorScale
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderColorScale_System_IntPtr_System_Single__
  name: GetRenderColorScale
  nameWithType: Sdl.GetRenderColorScale
  fullName: SharpSDL3.Sdl.GetRenderColorScale
- uid: SharpSDL3.Sdl.SetRenderColorScale(System.IntPtr,System.Single)
  commentId: M:SharpSDL3.Sdl.SetRenderColorScale(System.IntPtr,System.Single)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetRenderColorScale_System_IntPtr_System_Single_
  name: SetRenderColorScale(nint, float)
  nameWithType: Sdl.SetRenderColorScale(nint, float)
  fullName: SharpSDL3.Sdl.SetRenderColorScale(nint, float)
  nameWithType.vb: Sdl.SetRenderColorScale(IntPtr, Single)
  fullName.vb: SharpSDL3.Sdl.SetRenderColorScale(System.IntPtr, Single)
  name.vb: SetRenderColorScale(IntPtr, Single)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetRenderColorScale(System.IntPtr,System.Single)
    name: SetRenderColorScale
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetRenderColorScale_System_IntPtr_System_Single_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetRenderColorScale(System.IntPtr,System.Single)
    name: SetRenderColorScale
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetRenderColorScale_System_IntPtr_System_Single_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: SharpSDL3.Sdl.SetRenderDrawBlendMode(System.IntPtr,System.UInt32)
  commentId: M:SharpSDL3.Sdl.SetRenderDrawBlendMode(System.IntPtr,System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetRenderDrawBlendMode_System_IntPtr_System_UInt32_
  name: SetRenderDrawBlendMode(nint, uint)
  nameWithType: Sdl.SetRenderDrawBlendMode(nint, uint)
  fullName: SharpSDL3.Sdl.SetRenderDrawBlendMode(nint, uint)
  nameWithType.vb: Sdl.SetRenderDrawBlendMode(IntPtr, UInteger)
  fullName.vb: SharpSDL3.Sdl.SetRenderDrawBlendMode(System.IntPtr, UInteger)
  name.vb: SetRenderDrawBlendMode(IntPtr, UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetRenderDrawBlendMode(System.IntPtr,System.UInt32)
    name: SetRenderDrawBlendMode
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetRenderDrawBlendMode_System_IntPtr_System_UInt32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetRenderDrawBlendMode(System.IntPtr,System.UInt32)
    name: SetRenderDrawBlendMode
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetRenderDrawBlendMode_System_IntPtr_System_UInt32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Enums.BlendMode
  commentId: T:SharpSDL3.Enums.BlendMode
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.BlendMode.html
  name: BlendMode
  nameWithType: BlendMode
  fullName: SharpSDL3.Enums.BlendMode
- uid: SharpSDL3.Sdl.GetRenderDrawBlendMode*
  commentId: Overload:SharpSDL3.Sdl.GetRenderDrawBlendMode
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderDrawBlendMode_System_IntPtr_System_IntPtr_
  name: GetRenderDrawBlendMode
  nameWithType: Sdl.GetRenderDrawBlendMode
  fullName: SharpSDL3.Sdl.GetRenderDrawBlendMode
- uid: SharpSDL3.Sdl.GetRenderDrawColorFloat(System.IntPtr,System.Single@,System.Single@,System.Single@,System.Single@)
  commentId: M:SharpSDL3.Sdl.GetRenderDrawColorFloat(System.IntPtr,System.Single@,System.Single@,System.Single@,System.Single@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderDrawColorFloat_System_IntPtr_System_Single__System_Single__System_Single__System_Single__
  name: GetRenderDrawColorFloat(nint, out float, out float, out float, out float)
  nameWithType: Sdl.GetRenderDrawColorFloat(nint, out float, out float, out float, out float)
  fullName: SharpSDL3.Sdl.GetRenderDrawColorFloat(nint, out float, out float, out float, out float)
  nameWithType.vb: Sdl.GetRenderDrawColorFloat(IntPtr, Single, Single, Single, Single)
  fullName.vb: SharpSDL3.Sdl.GetRenderDrawColorFloat(System.IntPtr, Single, Single, Single, Single)
  name.vb: GetRenderDrawColorFloat(IntPtr, Single, Single, Single, Single)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetRenderDrawColorFloat(System.IntPtr,System.Single@,System.Single@,System.Single@,System.Single@)
    name: GetRenderDrawColorFloat
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderDrawColorFloat_System_IntPtr_System_Single__System_Single__System_Single__System_Single__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetRenderDrawColorFloat(System.IntPtr,System.Single@,System.Single@,System.Single@,System.Single@)
    name: GetRenderDrawColorFloat
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderDrawColorFloat_System_IntPtr_System_Single__System_Single__System_Single__System_Single__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: SharpSDL3.Sdl.SetRenderDrawColor(System.IntPtr,System.Byte,System.Byte,System.Byte,System.Byte)
  commentId: M:SharpSDL3.Sdl.SetRenderDrawColor(System.IntPtr,System.Byte,System.Byte,System.Byte,System.Byte)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetRenderDrawColor_System_IntPtr_System_Byte_System_Byte_System_Byte_System_Byte_
  name: SetRenderDrawColor(nint, byte, byte, byte, byte)
  nameWithType: Sdl.SetRenderDrawColor(nint, byte, byte, byte, byte)
  fullName: SharpSDL3.Sdl.SetRenderDrawColor(nint, byte, byte, byte, byte)
  nameWithType.vb: Sdl.SetRenderDrawColor(IntPtr, Byte, Byte, Byte, Byte)
  fullName.vb: SharpSDL3.Sdl.SetRenderDrawColor(System.IntPtr, Byte, Byte, Byte, Byte)
  name.vb: SetRenderDrawColor(IntPtr, Byte, Byte, Byte, Byte)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetRenderDrawColor(System.IntPtr,System.Byte,System.Byte,System.Byte,System.Byte)
    name: SetRenderDrawColor
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetRenderDrawColor_System_IntPtr_System_Byte_System_Byte_System_Byte_System_Byte_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: ','
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: ','
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: ','
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetRenderDrawColor(System.IntPtr,System.Byte,System.Byte,System.Byte,System.Byte)
    name: SetRenderDrawColor
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetRenderDrawColor_System_IntPtr_System_Byte_System_Byte_System_Byte_System_Byte_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: SharpSDL3.Sdl.GetRenderDrawColor*
  commentId: Overload:SharpSDL3.Sdl.GetRenderDrawColor
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderDrawColor_System_IntPtr_System_Byte__System_Byte__System_Byte__System_Byte__
  name: GetRenderDrawColor
  nameWithType: Sdl.GetRenderDrawColor
  fullName: SharpSDL3.Sdl.GetRenderDrawColor
- uid: SharpSDL3.Structs.Color
  commentId: T:SharpSDL3.Structs.Color
  parent: SharpSDL3.Structs
  href: SharpSDL3.Structs.Color.html
  name: Color
  nameWithType: Color
  fullName: SharpSDL3.Structs.Color
- uid: SharpSDL3.Sdl.GetRenderDrawColorFloat*
  commentId: Overload:SharpSDL3.Sdl.GetRenderDrawColorFloat
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderDrawColorFloat_System_IntPtr_System_Single__System_Single__System_Single__System_Single__
  name: GetRenderDrawColorFloat
  nameWithType: Sdl.GetRenderDrawColorFloat
  fullName: SharpSDL3.Sdl.GetRenderDrawColorFloat
- uid: SharpSDL3.Sdl.SetRenderDrawColorFloat(System.IntPtr,System.Single,System.Single,System.Single,System.Single)
  commentId: M:SharpSDL3.Sdl.SetRenderDrawColorFloat(System.IntPtr,System.Single,System.Single,System.Single,System.Single)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetRenderDrawColorFloat_System_IntPtr_System_Single_System_Single_System_Single_System_Single_
  name: SetRenderDrawColorFloat(nint, float, float, float, float)
  nameWithType: Sdl.SetRenderDrawColorFloat(nint, float, float, float, float)
  fullName: SharpSDL3.Sdl.SetRenderDrawColorFloat(nint, float, float, float, float)
  nameWithType.vb: Sdl.SetRenderDrawColorFloat(IntPtr, Single, Single, Single, Single)
  fullName.vb: SharpSDL3.Sdl.SetRenderDrawColorFloat(System.IntPtr, Single, Single, Single, Single)
  name.vb: SetRenderDrawColorFloat(IntPtr, Single, Single, Single, Single)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetRenderDrawColorFloat(System.IntPtr,System.Single,System.Single,System.Single,System.Single)
    name: SetRenderDrawColorFloat
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetRenderDrawColorFloat_System_IntPtr_System_Single_System_Single_System_Single_System_Single_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetRenderDrawColorFloat(System.IntPtr,System.Single,System.Single,System.Single,System.Single)
    name: SetRenderDrawColorFloat
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetRenderDrawColorFloat_System_IntPtr_System_Single_System_Single_System_Single_System_Single_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: SharpSDL3.Sdl.GetRenderDrawColor(System.IntPtr,System.Byte@,System.Byte@,System.Byte@,System.Byte@)
  commentId: M:SharpSDL3.Sdl.GetRenderDrawColor(System.IntPtr,System.Byte@,System.Byte@,System.Byte@,System.Byte@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderDrawColor_System_IntPtr_System_Byte__System_Byte__System_Byte__System_Byte__
  name: GetRenderDrawColor(nint, out byte, out byte, out byte, out byte)
  nameWithType: Sdl.GetRenderDrawColor(nint, out byte, out byte, out byte, out byte)
  fullName: SharpSDL3.Sdl.GetRenderDrawColor(nint, out byte, out byte, out byte, out byte)
  nameWithType.vb: Sdl.GetRenderDrawColor(IntPtr, Byte, Byte, Byte, Byte)
  fullName.vb: SharpSDL3.Sdl.GetRenderDrawColor(System.IntPtr, Byte, Byte, Byte, Byte)
  name.vb: GetRenderDrawColor(IntPtr, Byte, Byte, Byte, Byte)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetRenderDrawColor(System.IntPtr,System.Byte@,System.Byte@,System.Byte@,System.Byte@)
    name: GetRenderDrawColor
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderDrawColor_System_IntPtr_System_Byte__System_Byte__System_Byte__System_Byte__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetRenderDrawColor(System.IntPtr,System.Byte@,System.Byte@,System.Byte@,System.Byte@)
    name: GetRenderDrawColor
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderDrawColor_System_IntPtr_System_Byte__System_Byte__System_Byte__System_Byte__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: SharpSDL3.Sdl.GetRenderDriver*
  commentId: Overload:SharpSDL3.Sdl.GetRenderDriver
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderDriver_System_Int32_
  name: GetRenderDriver
  nameWithType: Sdl.GetRenderDriver
  fullName: SharpSDL3.Sdl.GetRenderDriver
- uid: SharpSDL3.Sdl.GetRenderer*
  commentId: Overload:SharpSDL3.Sdl.GetRenderer
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderer_System_IntPtr_
  name: GetRenderer
  nameWithType: Sdl.GetRenderer
  fullName: SharpSDL3.Sdl.GetRenderer
- uid: SharpSDL3.Sdl.GetRendererFromTexture*
  commentId: Overload:SharpSDL3.Sdl.GetRendererFromTexture
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRendererFromTexture_System_IntPtr_
  name: GetRendererFromTexture
  nameWithType: Sdl.GetRendererFromTexture
  fullName: SharpSDL3.Sdl.GetRendererFromTexture
- uid: SharpSDL3.Sdl.GetRendererName*
  commentId: Overload:SharpSDL3.Sdl.GetRendererName
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRendererName_System_IntPtr_
  name: GetRendererName
  nameWithType: Sdl.GetRendererName
  fullName: SharpSDL3.Sdl.GetRendererName
- uid: SharpSDL3.Sdl.GetRendererProperties*
  commentId: Overload:SharpSDL3.Sdl.GetRendererProperties
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRendererProperties_System_IntPtr_
  name: GetRendererProperties
  nameWithType: Sdl.GetRendererProperties
  fullName: SharpSDL3.Sdl.GetRendererProperties
- uid: SharpSDL3.Sdl.GetRenderLogicalPresentation*
  commentId: Overload:SharpSDL3.Sdl.GetRenderLogicalPresentation
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderLogicalPresentation_System_IntPtr_System_Int32__System_Int32__SharpSDL3_Enums_RendererLogicalPresentation__
  name: GetRenderLogicalPresentation
  nameWithType: Sdl.GetRenderLogicalPresentation
  fullName: SharpSDL3.Sdl.GetRenderLogicalPresentation
- uid: SharpSDL3.Enums.RendererLogicalPresentation
  commentId: T:SharpSDL3.Enums.RendererLogicalPresentation
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.RendererLogicalPresentation.html
  name: RendererLogicalPresentation
  nameWithType: RendererLogicalPresentation
  fullName: SharpSDL3.Enums.RendererLogicalPresentation
- uid: SharpSDL3.Sdl.SetRenderLogicalPresentation(System.IntPtr,System.Int32,System.Int32,SharpSDL3.Enums.RendererLogicalPresentation)
  commentId: M:SharpSDL3.Sdl.SetRenderLogicalPresentation(System.IntPtr,System.Int32,System.Int32,SharpSDL3.Enums.RendererLogicalPresentation)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetRenderLogicalPresentation_System_IntPtr_System_Int32_System_Int32_SharpSDL3_Enums_RendererLogicalPresentation_
  name: SetRenderLogicalPresentation(nint, int, int, RendererLogicalPresentation)
  nameWithType: Sdl.SetRenderLogicalPresentation(nint, int, int, RendererLogicalPresentation)
  fullName: SharpSDL3.Sdl.SetRenderLogicalPresentation(nint, int, int, SharpSDL3.Enums.RendererLogicalPresentation)
  nameWithType.vb: Sdl.SetRenderLogicalPresentation(IntPtr, Integer, Integer, RendererLogicalPresentation)
  fullName.vb: SharpSDL3.Sdl.SetRenderLogicalPresentation(System.IntPtr, Integer, Integer, SharpSDL3.Enums.RendererLogicalPresentation)
  name.vb: SetRenderLogicalPresentation(IntPtr, Integer, Integer, RendererLogicalPresentation)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetRenderLogicalPresentation(System.IntPtr,System.Int32,System.Int32,SharpSDL3.Enums.RendererLogicalPresentation)
    name: SetRenderLogicalPresentation
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetRenderLogicalPresentation_System_IntPtr_System_Int32_System_Int32_SharpSDL3_Enums_RendererLogicalPresentation_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.RendererLogicalPresentation
    name: RendererLogicalPresentation
    href: SharpSDL3.Enums.RendererLogicalPresentation.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetRenderLogicalPresentation(System.IntPtr,System.Int32,System.Int32,SharpSDL3.Enums.RendererLogicalPresentation)
    name: SetRenderLogicalPresentation
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetRenderLogicalPresentation_System_IntPtr_System_Int32_System_Int32_SharpSDL3_Enums_RendererLogicalPresentation_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.RendererLogicalPresentation
    name: RendererLogicalPresentation
    href: SharpSDL3.Enums.RendererLogicalPresentation.html
  - name: )
- uid: SharpSDL3.Sdl.GetRenderLogicalPresentationRect*
  commentId: Overload:SharpSDL3.Sdl.GetRenderLogicalPresentationRect
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderLogicalPresentationRect_System_IntPtr_SharpSDL3_Structs_FRect__
  name: GetRenderLogicalPresentationRect
  nameWithType: Sdl.GetRenderLogicalPresentationRect
  fullName: SharpSDL3.Sdl.GetRenderLogicalPresentationRect
- uid: SharpSDL3.Structs.FRect
  commentId: T:SharpSDL3.Structs.FRect
  parent: SharpSDL3.Structs
  href: SharpSDL3.Structs.FRect.html
  name: FRect
  nameWithType: FRect
  fullName: SharpSDL3.Structs.FRect
- uid: SharpSDL3.Sdl.GetRenderMetalLayer(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetRenderMetalLayer(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderMetalLayer_System_IntPtr_
  name: GetRenderMetalLayer(nint)
  nameWithType: Sdl.GetRenderMetalLayer(nint)
  fullName: SharpSDL3.Sdl.GetRenderMetalLayer(nint)
  nameWithType.vb: Sdl.GetRenderMetalLayer(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetRenderMetalLayer(System.IntPtr)
  name.vb: GetRenderMetalLayer(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetRenderMetalLayer(System.IntPtr)
    name: GetRenderMetalLayer
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderMetalLayer_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetRenderMetalLayer(System.IntPtr)
    name: GetRenderMetalLayer
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderMetalLayer_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GetRenderMetalCommandEncoder*
  commentId: Overload:SharpSDL3.Sdl.GetRenderMetalCommandEncoder
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderMetalCommandEncoder_System_IntPtr_
  name: GetRenderMetalCommandEncoder
  nameWithType: Sdl.GetRenderMetalCommandEncoder
  fullName: SharpSDL3.Sdl.GetRenderMetalCommandEncoder
- uid: SharpSDL3.Sdl.GetRenderMetalCommandEncoder(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetRenderMetalCommandEncoder(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderMetalCommandEncoder_System_IntPtr_
  name: GetRenderMetalCommandEncoder(nint)
  nameWithType: Sdl.GetRenderMetalCommandEncoder(nint)
  fullName: SharpSDL3.Sdl.GetRenderMetalCommandEncoder(nint)
  nameWithType.vb: Sdl.GetRenderMetalCommandEncoder(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetRenderMetalCommandEncoder(System.IntPtr)
  name.vb: GetRenderMetalCommandEncoder(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetRenderMetalCommandEncoder(System.IntPtr)
    name: GetRenderMetalCommandEncoder
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderMetalCommandEncoder_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetRenderMetalCommandEncoder(System.IntPtr)
    name: GetRenderMetalCommandEncoder
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderMetalCommandEncoder_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GetRenderMetalLayer*
  commentId: Overload:SharpSDL3.Sdl.GetRenderMetalLayer
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderMetalLayer_System_IntPtr_
  name: GetRenderMetalLayer
  nameWithType: Sdl.GetRenderMetalLayer
  fullName: SharpSDL3.Sdl.GetRenderMetalLayer
- uid: SharpSDL3.Sdl.GetRenderOutputSize*
  commentId: Overload:SharpSDL3.Sdl.GetRenderOutputSize
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderOutputSize_System_IntPtr_System_Int32__System_Int32__
  name: GetRenderOutputSize
  nameWithType: Sdl.GetRenderOutputSize
  fullName: SharpSDL3.Sdl.GetRenderOutputSize
- uid: SharpSDL3.Sdl.GetCurrentRenderOutputSize(System.IntPtr,System.Int32@,System.Int32@)
  commentId: M:SharpSDL3.Sdl.GetCurrentRenderOutputSize(System.IntPtr,System.Int32@,System.Int32@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetCurrentRenderOutputSize_System_IntPtr_System_Int32__System_Int32__
  name: GetCurrentRenderOutputSize(nint, out int, out int)
  nameWithType: Sdl.GetCurrentRenderOutputSize(nint, out int, out int)
  fullName: SharpSDL3.Sdl.GetCurrentRenderOutputSize(nint, out int, out int)
  nameWithType.vb: Sdl.GetCurrentRenderOutputSize(IntPtr, Integer, Integer)
  fullName.vb: SharpSDL3.Sdl.GetCurrentRenderOutputSize(System.IntPtr, Integer, Integer)
  name.vb: GetCurrentRenderOutputSize(IntPtr, Integer, Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetCurrentRenderOutputSize(System.IntPtr,System.Int32@,System.Int32@)
    name: GetCurrentRenderOutputSize
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetCurrentRenderOutputSize_System_IntPtr_System_Int32__System_Int32__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetCurrentRenderOutputSize(System.IntPtr,System.Int32@,System.Int32@)
    name: GetCurrentRenderOutputSize
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetCurrentRenderOutputSize_System_IntPtr_System_Int32__System_Int32__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.GetRenderSafeArea*
  commentId: Overload:SharpSDL3.Sdl.GetRenderSafeArea
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderSafeArea_System_IntPtr_SharpSDL3_Structs_Rect__
  name: GetRenderSafeArea
  nameWithType: Sdl.GetRenderSafeArea
  fullName: SharpSDL3.Sdl.GetRenderSafeArea
- uid: SharpSDL3.Sdl.GetRenderScale*
  commentId: Overload:SharpSDL3.Sdl.GetRenderScale
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderScale_System_IntPtr_System_Single__System_Single__
  name: GetRenderScale
  nameWithType: Sdl.GetRenderScale
  fullName: SharpSDL3.Sdl.GetRenderScale
- uid: SharpSDL3.Sdl.SetRenderScale(System.IntPtr,System.Single,System.Single)
  commentId: M:SharpSDL3.Sdl.SetRenderScale(System.IntPtr,System.Single,System.Single)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetRenderScale_System_IntPtr_System_Single_System_Single_
  name: SetRenderScale(nint, float, float)
  nameWithType: Sdl.SetRenderScale(nint, float, float)
  fullName: SharpSDL3.Sdl.SetRenderScale(nint, float, float)
  nameWithType.vb: Sdl.SetRenderScale(IntPtr, Single, Single)
  fullName.vb: SharpSDL3.Sdl.SetRenderScale(System.IntPtr, Single, Single)
  name.vb: SetRenderScale(IntPtr, Single, Single)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetRenderScale(System.IntPtr,System.Single,System.Single)
    name: SetRenderScale
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetRenderScale_System_IntPtr_System_Single_System_Single_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetRenderScale(System.IntPtr,System.Single,System.Single)
    name: SetRenderScale
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetRenderScale_System_IntPtr_System_Single_System_Single_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: SharpSDL3.Structs.FPoint
  commentId: T:SharpSDL3.Structs.FPoint
  parent: SharpSDL3.Structs
  href: SharpSDL3.Structs.FPoint.html
  name: FPoint
  nameWithType: FPoint
  fullName: SharpSDL3.Structs.FPoint
- uid: SharpSDL3.Sdl.SetRenderTarget(System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.SetRenderTarget(System.IntPtr,System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetRenderTarget_System_IntPtr_System_IntPtr_
  name: SetRenderTarget(nint, nint)
  nameWithType: Sdl.SetRenderTarget(nint, nint)
  fullName: SharpSDL3.Sdl.SetRenderTarget(nint, nint)
  nameWithType.vb: Sdl.SetRenderTarget(IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.SetRenderTarget(System.IntPtr, System.IntPtr)
  name.vb: SetRenderTarget(IntPtr, IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetRenderTarget(System.IntPtr,System.IntPtr)
    name: SetRenderTarget
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetRenderTarget_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetRenderTarget(System.IntPtr,System.IntPtr)
    name: SetRenderTarget
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetRenderTarget_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GetRenderTarget*
  commentId: Overload:SharpSDL3.Sdl.GetRenderTarget
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderTarget_System_IntPtr_
  name: GetRenderTarget
  nameWithType: Sdl.GetRenderTarget
  fullName: SharpSDL3.Sdl.GetRenderTarget
- uid: SharpSDL3.Sdl.RenderViewportSet(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.RenderViewportSet(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderViewportSet_System_IntPtr_
  name: RenderViewportSet(nint)
  nameWithType: Sdl.RenderViewportSet(nint)
  fullName: SharpSDL3.Sdl.RenderViewportSet(nint)
  nameWithType.vb: Sdl.RenderViewportSet(IntPtr)
  fullName.vb: SharpSDL3.Sdl.RenderViewportSet(System.IntPtr)
  name.vb: RenderViewportSet(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.RenderViewportSet(System.IntPtr)
    name: RenderViewportSet
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderViewportSet_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.RenderViewportSet(System.IntPtr)
    name: RenderViewportSet
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderViewportSet_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.SetRenderViewport(System.IntPtr,SharpSDL3.Structs.Rect@)
  commentId: M:SharpSDL3.Sdl.SetRenderViewport(System.IntPtr,SharpSDL3.Structs.Rect@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetRenderViewport_System_IntPtr_SharpSDL3_Structs_Rect__
  name: SetRenderViewport(nint, ref Rect)
  nameWithType: Sdl.SetRenderViewport(nint, ref Rect)
  fullName: SharpSDL3.Sdl.SetRenderViewport(nint, ref SharpSDL3.Structs.Rect)
  nameWithType.vb: Sdl.SetRenderViewport(IntPtr, Rect)
  fullName.vb: SharpSDL3.Sdl.SetRenderViewport(System.IntPtr, SharpSDL3.Structs.Rect)
  name.vb: SetRenderViewport(IntPtr, Rect)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetRenderViewport(System.IntPtr,SharpSDL3.Structs.Rect@)
    name: SetRenderViewport
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetRenderViewport_System_IntPtr_SharpSDL3_Structs_Rect__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: ref
  - name: " "
  - uid: SharpSDL3.Structs.Rect
    name: Rect
    href: SharpSDL3.Structs.Rect.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetRenderViewport(System.IntPtr,SharpSDL3.Structs.Rect@)
    name: SetRenderViewport
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetRenderViewport_System_IntPtr_SharpSDL3_Structs_Rect__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.Rect
    name: Rect
    href: SharpSDL3.Structs.Rect.html
  - name: )
- uid: SharpSDL3.Sdl.GetRenderViewport*
  commentId: Overload:SharpSDL3.Sdl.GetRenderViewport
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderViewport_System_IntPtr_SharpSDL3_Structs_Rect__
  name: GetRenderViewport
  nameWithType: Sdl.GetRenderViewport
  fullName: SharpSDL3.Sdl.GetRenderViewport
- uid: SharpSDL3.Sdl.SetRenderVSync(System.IntPtr,System.Int32)
  commentId: M:SharpSDL3.Sdl.SetRenderVSync(System.IntPtr,System.Int32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetRenderVSync_System_IntPtr_System_Int32_
  name: SetRenderVSync(nint, int)
  nameWithType: Sdl.SetRenderVSync(nint, int)
  fullName: SharpSDL3.Sdl.SetRenderVSync(nint, int)
  nameWithType.vb: Sdl.SetRenderVSync(IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.SetRenderVSync(System.IntPtr, Integer)
  name.vb: SetRenderVSync(IntPtr, Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetRenderVSync(System.IntPtr,System.Int32)
    name: SetRenderVSync
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetRenderVSync_System_IntPtr_System_Int32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetRenderVSync(System.IntPtr,System.Int32)
    name: SetRenderVSync
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetRenderVSync_System_IntPtr_System_Int32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.GetRenderVsync*
  commentId: Overload:SharpSDL3.Sdl.GetRenderVsync
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderVsync_System_IntPtr_
  name: GetRenderVsync
  nameWithType: Sdl.GetRenderVsync
  fullName: SharpSDL3.Sdl.GetRenderVsync
- uid: SharpSDL3.Sdl.GetRenderVSync*
  commentId: Overload:SharpSDL3.Sdl.GetRenderVSync
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderVSync_System_IntPtr_System_Int32__
  name: GetRenderVSync
  nameWithType: Sdl.GetRenderVSync
  fullName: SharpSDL3.Sdl.GetRenderVSync
- uid: SharpSDL3.Sdl.GetRenderWindow*
  commentId: Overload:SharpSDL3.Sdl.GetRenderWindow
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderWindow_System_IntPtr_
  name: GetRenderWindow
  nameWithType: Sdl.GetRenderWindow
  fullName: SharpSDL3.Sdl.GetRenderWindow
- uid: SharpSDL3.Sdl.RenderClear*
  commentId: Overload:SharpSDL3.Sdl.RenderClear
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderClear_System_IntPtr_
  name: RenderClear
  nameWithType: Sdl.RenderClear
  fullName: SharpSDL3.Sdl.RenderClear
- uid: SharpSDL3.Sdl.GetRenderClipRect(System.IntPtr,SharpSDL3.Structs.Rect@)
  commentId: M:SharpSDL3.Sdl.GetRenderClipRect(System.IntPtr,SharpSDL3.Structs.Rect@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderClipRect_System_IntPtr_SharpSDL3_Structs_Rect__
  name: GetRenderClipRect(nint, out Rect)
  nameWithType: Sdl.GetRenderClipRect(nint, out Rect)
  fullName: SharpSDL3.Sdl.GetRenderClipRect(nint, out SharpSDL3.Structs.Rect)
  nameWithType.vb: Sdl.GetRenderClipRect(IntPtr, Rect)
  fullName.vb: SharpSDL3.Sdl.GetRenderClipRect(System.IntPtr, SharpSDL3.Structs.Rect)
  name.vb: GetRenderClipRect(IntPtr, Rect)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetRenderClipRect(System.IntPtr,SharpSDL3.Structs.Rect@)
    name: GetRenderClipRect
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderClipRect_System_IntPtr_SharpSDL3_Structs_Rect__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: SharpSDL3.Structs.Rect
    name: Rect
    href: SharpSDL3.Structs.Rect.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetRenderClipRect(System.IntPtr,SharpSDL3.Structs.Rect@)
    name: GetRenderClipRect
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderClipRect_System_IntPtr_SharpSDL3_Structs_Rect__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.Rect
    name: Rect
    href: SharpSDL3.Structs.Rect.html
  - name: )
- uid: SharpSDL3.Sdl.RenderClipEnabled*
  commentId: Overload:SharpSDL3.Sdl.RenderClipEnabled
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderClipEnabled_System_IntPtr_
  name: RenderClipEnabled
  nameWithType: Sdl.RenderClipEnabled
  fullName: SharpSDL3.Sdl.RenderClipEnabled
- uid: SharpSDL3.Sdl.RenderCoordinatesFromWindow*
  commentId: Overload:SharpSDL3.Sdl.RenderCoordinatesFromWindow
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderCoordinatesFromWindow_System_IntPtr_System_Single_System_Single_System_Single__System_Single__
  name: RenderCoordinatesFromWindow
  nameWithType: Sdl.RenderCoordinatesFromWindow
  fullName: SharpSDL3.Sdl.RenderCoordinatesFromWindow
- uid: SharpSDL3.Sdl.RenderCoordinatesToWindow*
  commentId: Overload:SharpSDL3.Sdl.RenderCoordinatesToWindow
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderCoordinatesToWindow_System_IntPtr_System_Single_System_Single_System_Single__System_Single__
  name: RenderCoordinatesToWindow
  nameWithType: Sdl.RenderCoordinatesToWindow
  fullName: SharpSDL3.Sdl.RenderCoordinatesToWindow
- uid: SharpSDL3.Sdl.RenderDebugTextFormat(System.IntPtr,System.Single,System.Single,System.String)
  commentId: M:SharpSDL3.Sdl.RenderDebugTextFormat(System.IntPtr,System.Single,System.Single,System.String)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderDebugTextFormat_System_IntPtr_System_Single_System_Single_System_String_
  name: RenderDebugTextFormat(nint, float, float, string)
  nameWithType: Sdl.RenderDebugTextFormat(nint, float, float, string)
  fullName: SharpSDL3.Sdl.RenderDebugTextFormat(nint, float, float, string)
  nameWithType.vb: Sdl.RenderDebugTextFormat(IntPtr, Single, Single, String)
  fullName.vb: SharpSDL3.Sdl.RenderDebugTextFormat(System.IntPtr, Single, Single, String)
  name.vb: RenderDebugTextFormat(IntPtr, Single, Single, String)
  spec.csharp:
  - uid: SharpSDL3.Sdl.RenderDebugTextFormat(System.IntPtr,System.Single,System.Single,System.String)
    name: RenderDebugTextFormat
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderDebugTextFormat_System_IntPtr_System_Single_System_Single_System_String_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.RenderDebugTextFormat(System.IntPtr,System.Single,System.Single,System.String)
    name: RenderDebugTextFormat
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderDebugTextFormat_System_IntPtr_System_Single_System_Single_System_String_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SharpSDL3.Sdl.RenderDebugText*
  commentId: Overload:SharpSDL3.Sdl.RenderDebugText
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderDebugText_System_IntPtr_System_Single_System_Single_System_String_
  name: RenderDebugText
  nameWithType: Sdl.RenderDebugText
  fullName: SharpSDL3.Sdl.RenderDebugText
- uid: SharpSDL3.Sdl.RenderDebugText(System.IntPtr,System.Single,System.Single,System.String)
  commentId: M:SharpSDL3.Sdl.RenderDebugText(System.IntPtr,System.Single,System.Single,System.String)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderDebugText_System_IntPtr_System_Single_System_Single_System_String_
  name: RenderDebugText(nint, float, float, string)
  nameWithType: Sdl.RenderDebugText(nint, float, float, string)
  fullName: SharpSDL3.Sdl.RenderDebugText(nint, float, float, string)
  nameWithType.vb: Sdl.RenderDebugText(IntPtr, Single, Single, String)
  fullName.vb: SharpSDL3.Sdl.RenderDebugText(System.IntPtr, Single, Single, String)
  name.vb: RenderDebugText(IntPtr, Single, Single, String)
  spec.csharp:
  - uid: SharpSDL3.Sdl.RenderDebugText(System.IntPtr,System.Single,System.Single,System.String)
    name: RenderDebugText
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderDebugText_System_IntPtr_System_Single_System_Single_System_String_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.RenderDebugText(System.IntPtr,System.Single,System.Single,System.String)
    name: RenderDebugText
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderDebugText_System_IntPtr_System_Single_System_Single_System_String_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SharpSDL3.Sdl.RenderDebugTextFormat*
  commentId: Overload:SharpSDL3.Sdl.RenderDebugTextFormat
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderDebugTextFormat_System_IntPtr_System_Single_System_Single_System_String_
  name: RenderDebugTextFormat
  nameWithType: Sdl.RenderDebugTextFormat
  fullName: SharpSDL3.Sdl.RenderDebugTextFormat
- uid: SharpSDL3.Sdl.RenderFillRects(System.IntPtr,System.Span{SharpSDL3.Structs.FRect})
  commentId: M:SharpSDL3.Sdl.RenderFillRects(System.IntPtr,System.Span{SharpSDL3.Structs.FRect})
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderFillRects_System_IntPtr_System_Span_SharpSDL3_Structs_FRect__
  name: RenderFillRects(nint, Span<FRect>)
  nameWithType: Sdl.RenderFillRects(nint, Span<FRect>)
  fullName: SharpSDL3.Sdl.RenderFillRects(nint, System.Span<SharpSDL3.Structs.FRect>)
  nameWithType.vb: Sdl.RenderFillRects(IntPtr, Span(Of FRect))
  fullName.vb: SharpSDL3.Sdl.RenderFillRects(System.IntPtr, System.Span(Of SharpSDL3.Structs.FRect))
  name.vb: RenderFillRects(IntPtr, Span(Of FRect))
  spec.csharp:
  - uid: SharpSDL3.Sdl.RenderFillRects(System.IntPtr,System.Span{SharpSDL3.Structs.FRect})
    name: RenderFillRects
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderFillRects_System_IntPtr_System_Span_SharpSDL3_Structs_FRect__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: SharpSDL3.Structs.FRect
    name: FRect
    href: SharpSDL3.Structs.FRect.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.RenderFillRects(System.IntPtr,System.Span{SharpSDL3.Structs.FRect})
    name: RenderFillRects
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderFillRects_System_IntPtr_System_Span_SharpSDL3_Structs_FRect__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: SharpSDL3.Structs.FRect
    name: FRect
    href: SharpSDL3.Structs.FRect.html
  - name: )
  - name: )
- uid: SharpSDL3.Sdl.RenderFillRect*
  commentId: Overload:SharpSDL3.Sdl.RenderFillRect
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderFillRect_System_IntPtr_SharpSDL3_Structs_FRect__
  name: RenderFillRect
  nameWithType: Sdl.RenderFillRect
  fullName: SharpSDL3.Sdl.RenderFillRect
- uid: SharpSDL3.Sdl.RenderFillRect(System.IntPtr,SharpSDL3.Structs.FRect@)
  commentId: M:SharpSDL3.Sdl.RenderFillRect(System.IntPtr,SharpSDL3.Structs.FRect@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderFillRect_System_IntPtr_SharpSDL3_Structs_FRect__
  name: RenderFillRect(nint, ref FRect)
  nameWithType: Sdl.RenderFillRect(nint, ref FRect)
  fullName: SharpSDL3.Sdl.RenderFillRect(nint, ref SharpSDL3.Structs.FRect)
  nameWithType.vb: Sdl.RenderFillRect(IntPtr, FRect)
  fullName.vb: SharpSDL3.Sdl.RenderFillRect(System.IntPtr, SharpSDL3.Structs.FRect)
  name.vb: RenderFillRect(IntPtr, FRect)
  spec.csharp:
  - uid: SharpSDL3.Sdl.RenderFillRect(System.IntPtr,SharpSDL3.Structs.FRect@)
    name: RenderFillRect
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderFillRect_System_IntPtr_SharpSDL3_Structs_FRect__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: ref
  - name: " "
  - uid: SharpSDL3.Structs.FRect
    name: FRect
    href: SharpSDL3.Structs.FRect.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.RenderFillRect(System.IntPtr,SharpSDL3.Structs.FRect@)
    name: RenderFillRect
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderFillRect_System_IntPtr_SharpSDL3_Structs_FRect__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.FRect
    name: FRect
    href: SharpSDL3.Structs.FRect.html
  - name: )
- uid: SharpSDL3.Sdl.RenderFillRects*
  commentId: Overload:SharpSDL3.Sdl.RenderFillRects
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderFillRects_System_IntPtr_System_Span_SharpSDL3_Structs_FRect__
  name: RenderFillRects
  nameWithType: Sdl.RenderFillRects
  fullName: SharpSDL3.Sdl.RenderFillRects
- uid: System.Span{SharpSDL3.Structs.FRect}
  commentId: T:System.Span{SharpSDL3.Structs.FRect}
  parent: System
  definition: System.Span`1
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<FRect>
  nameWithType: Span<FRect>
  fullName: System.Span<SharpSDL3.Structs.FRect>
  nameWithType.vb: Span(Of FRect)
  fullName.vb: System.Span(Of SharpSDL3.Structs.FRect)
  name.vb: Span(Of FRect)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: SharpSDL3.Structs.FRect
    name: FRect
    href: SharpSDL3.Structs.FRect.html
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: SharpSDL3.Structs.FRect
    name: FRect
    href: SharpSDL3.Structs.FRect.html
  - name: )
- uid: SharpSDL3.Structs.FRect[]
  isExternal: true
  href: SharpSDL3.Structs.FRect.html
  name: FRect[]
  nameWithType: FRect[]
  fullName: SharpSDL3.Structs.FRect[]
  nameWithType.vb: FRect()
  fullName.vb: SharpSDL3.Structs.FRect()
  name.vb: FRect()
  spec.csharp:
  - uid: SharpSDL3.Structs.FRect
    name: FRect
    href: SharpSDL3.Structs.FRect.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SharpSDL3.Structs.FRect
    name: FRect
    href: SharpSDL3.Structs.FRect.html
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.RenderGeometryRaw(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.Int32,System.IntPtr,System.Int32,System.Int32)
  commentId: M:SharpSDL3.Sdl.RenderGeometryRaw(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.Int32,System.IntPtr,System.Int32,System.Int32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderGeometryRaw_System_IntPtr_System_IntPtr_System_IntPtr_System_Int32_System_IntPtr_System_Int32_System_IntPtr_System_Int32_System_Int32_System_IntPtr_System_Int32_System_Int32_
  name: RenderGeometryRaw(nint, nint, nint, int, nint, int, nint, int, int, nint, int, int)
  nameWithType: Sdl.RenderGeometryRaw(nint, nint, nint, int, nint, int, nint, int, int, nint, int, int)
  fullName: SharpSDL3.Sdl.RenderGeometryRaw(nint, nint, nint, int, nint, int, nint, int, int, nint, int, int)
  nameWithType.vb: Sdl.RenderGeometryRaw(IntPtr, IntPtr, IntPtr, Integer, IntPtr, Integer, IntPtr, Integer, Integer, IntPtr, Integer, Integer)
  fullName.vb: SharpSDL3.Sdl.RenderGeometryRaw(System.IntPtr, System.IntPtr, System.IntPtr, Integer, System.IntPtr, Integer, System.IntPtr, Integer, Integer, System.IntPtr, Integer, Integer)
  name.vb: RenderGeometryRaw(IntPtr, IntPtr, IntPtr, Integer, IntPtr, Integer, IntPtr, Integer, Integer, IntPtr, Integer, Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.RenderGeometryRaw(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.Int32,System.IntPtr,System.Int32,System.Int32)
    name: RenderGeometryRaw
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderGeometryRaw_System_IntPtr_System_IntPtr_System_IntPtr_System_Int32_System_IntPtr_System_Int32_System_IntPtr_System_Int32_System_Int32_System_IntPtr_System_Int32_System_Int32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.RenderGeometryRaw(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.Int32,System.IntPtr,System.Int32,System.Int32)
    name: RenderGeometryRaw
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderGeometryRaw_System_IntPtr_System_IntPtr_System_IntPtr_System_Int32_System_IntPtr_System_Int32_System_IntPtr_System_Int32_System_Int32_System_IntPtr_System_Int32_System_Int32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.RenderGeometry*
  commentId: Overload:SharpSDL3.Sdl.RenderGeometry
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderGeometry_System_IntPtr_System_IntPtr_System_Span_SharpSDL3_Structs_Vertex__System_Span_System_Int32__
  name: RenderGeometry
  nameWithType: Sdl.RenderGeometry
  fullName: SharpSDL3.Sdl.RenderGeometry
- uid: System.Span{SharpSDL3.Structs.Vertex}
  commentId: T:System.Span{SharpSDL3.Structs.Vertex}
  parent: System
  definition: System.Span`1
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<Vertex>
  nameWithType: Span<Vertex>
  fullName: System.Span<SharpSDL3.Structs.Vertex>
  nameWithType.vb: Span(Of Vertex)
  fullName.vb: System.Span(Of SharpSDL3.Structs.Vertex)
  name.vb: Span(Of Vertex)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: SharpSDL3.Structs.Vertex
    name: Vertex
    href: SharpSDL3.Structs.Vertex.html
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: SharpSDL3.Structs.Vertex
    name: Vertex
    href: SharpSDL3.Structs.Vertex.html
  - name: )
- uid: SharpSDL3.Structs.Vertex[]
  isExternal: true
  href: SharpSDL3.Structs.Vertex.html
  name: Vertex[]
  nameWithType: Vertex[]
  fullName: SharpSDL3.Structs.Vertex[]
  nameWithType.vb: Vertex()
  fullName.vb: SharpSDL3.Structs.Vertex()
  name.vb: Vertex()
  spec.csharp:
  - uid: SharpSDL3.Structs.Vertex
    name: Vertex
    href: SharpSDL3.Structs.Vertex.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SharpSDL3.Structs.Vertex
    name: Vertex
    href: SharpSDL3.Structs.Vertex.html
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.RenderGeometry(System.IntPtr,System.IntPtr,System.Span{SharpSDL3.Structs.Vertex},System.Span{System.Int32})
  commentId: M:SharpSDL3.Sdl.RenderGeometry(System.IntPtr,System.IntPtr,System.Span{SharpSDL3.Structs.Vertex},System.Span{System.Int32})
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderGeometry_System_IntPtr_System_IntPtr_System_Span_SharpSDL3_Structs_Vertex__System_Span_System_Int32__
  name: RenderGeometry(nint, nint, Span<Vertex>, Span<int>)
  nameWithType: Sdl.RenderGeometry(nint, nint, Span<Vertex>, Span<int>)
  fullName: SharpSDL3.Sdl.RenderGeometry(nint, nint, System.Span<SharpSDL3.Structs.Vertex>, System.Span<int>)
  nameWithType.vb: Sdl.RenderGeometry(IntPtr, IntPtr, Span(Of Vertex), Span(Of Integer))
  fullName.vb: SharpSDL3.Sdl.RenderGeometry(System.IntPtr, System.IntPtr, System.Span(Of SharpSDL3.Structs.Vertex), System.Span(Of Integer))
  name.vb: RenderGeometry(IntPtr, IntPtr, Span(Of Vertex), Span(Of Integer))
  spec.csharp:
  - uid: SharpSDL3.Sdl.RenderGeometry(System.IntPtr,System.IntPtr,System.Span{SharpSDL3.Structs.Vertex},System.Span{System.Int32})
    name: RenderGeometry
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderGeometry_System_IntPtr_System_IntPtr_System_Span_SharpSDL3_Structs_Vertex__System_Span_System_Int32__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: SharpSDL3.Structs.Vertex
    name: Vertex
    href: SharpSDL3.Structs.Vertex.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.RenderGeometry(System.IntPtr,System.IntPtr,System.Span{SharpSDL3.Structs.Vertex},System.Span{System.Int32})
    name: RenderGeometry
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderGeometry_System_IntPtr_System_IntPtr_System_Span_SharpSDL3_Structs_Vertex__System_Span_System_Int32__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: SharpSDL3.Structs.Vertex
    name: Vertex
    href: SharpSDL3.Structs.Vertex.html
  - name: )
  - name: ','
  - name: " "
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: )
- uid: SharpSDL3.Sdl.RenderGeometryRaw*
  commentId: Overload:SharpSDL3.Sdl.RenderGeometryRaw
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderGeometryRaw_System_IntPtr_System_IntPtr_System_IntPtr_System_Int32_System_IntPtr_System_Int32_System_IntPtr_System_Int32_System_Int32_System_IntPtr_System_Int32_System_Int32_
  name: RenderGeometryRaw
  nameWithType: Sdl.RenderGeometryRaw
  fullName: SharpSDL3.Sdl.RenderGeometryRaw
- uid: SharpSDL3.Sdl.RenderLines(System.IntPtr,System.Span{SharpSDL3.Structs.FPoint})
  commentId: M:SharpSDL3.Sdl.RenderLines(System.IntPtr,System.Span{SharpSDL3.Structs.FPoint})
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderLines_System_IntPtr_System_Span_SharpSDL3_Structs_FPoint__
  name: RenderLines(nint, Span<FPoint>)
  nameWithType: Sdl.RenderLines(nint, Span<FPoint>)
  fullName: SharpSDL3.Sdl.RenderLines(nint, System.Span<SharpSDL3.Structs.FPoint>)
  nameWithType.vb: Sdl.RenderLines(IntPtr, Span(Of FPoint))
  fullName.vb: SharpSDL3.Sdl.RenderLines(System.IntPtr, System.Span(Of SharpSDL3.Structs.FPoint))
  name.vb: RenderLines(IntPtr, Span(Of FPoint))
  spec.csharp:
  - uid: SharpSDL3.Sdl.RenderLines(System.IntPtr,System.Span{SharpSDL3.Structs.FPoint})
    name: RenderLines
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderLines_System_IntPtr_System_Span_SharpSDL3_Structs_FPoint__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: SharpSDL3.Structs.FPoint
    name: FPoint
    href: SharpSDL3.Structs.FPoint.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.RenderLines(System.IntPtr,System.Span{SharpSDL3.Structs.FPoint})
    name: RenderLines
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderLines_System_IntPtr_System_Span_SharpSDL3_Structs_FPoint__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: SharpSDL3.Structs.FPoint
    name: FPoint
    href: SharpSDL3.Structs.FPoint.html
  - name: )
  - name: )
- uid: SharpSDL3.Sdl.RenderLine*
  commentId: Overload:SharpSDL3.Sdl.RenderLine
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderLine_System_IntPtr_System_Single_System_Single_System_Single_System_Single_
  name: RenderLine
  nameWithType: Sdl.RenderLine
  fullName: SharpSDL3.Sdl.RenderLine
- uid: SharpSDL3.Sdl.RenderLine(System.IntPtr,System.Single,System.Single,System.Single,System.Single)
  commentId: M:SharpSDL3.Sdl.RenderLine(System.IntPtr,System.Single,System.Single,System.Single,System.Single)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderLine_System_IntPtr_System_Single_System_Single_System_Single_System_Single_
  name: RenderLine(nint, float, float, float, float)
  nameWithType: Sdl.RenderLine(nint, float, float, float, float)
  fullName: SharpSDL3.Sdl.RenderLine(nint, float, float, float, float)
  nameWithType.vb: Sdl.RenderLine(IntPtr, Single, Single, Single, Single)
  fullName.vb: SharpSDL3.Sdl.RenderLine(System.IntPtr, Single, Single, Single, Single)
  name.vb: RenderLine(IntPtr, Single, Single, Single, Single)
  spec.csharp:
  - uid: SharpSDL3.Sdl.RenderLine(System.IntPtr,System.Single,System.Single,System.Single,System.Single)
    name: RenderLine
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderLine_System_IntPtr_System_Single_System_Single_System_Single_System_Single_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.RenderLine(System.IntPtr,System.Single,System.Single,System.Single,System.Single)
    name: RenderLine
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderLine_System_IntPtr_System_Single_System_Single_System_Single_System_Single_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: SharpSDL3.Sdl.RenderLines*
  commentId: Overload:SharpSDL3.Sdl.RenderLines
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderLines_System_IntPtr_System_Span_SharpSDL3_Structs_FPoint__
  name: RenderLines
  nameWithType: Sdl.RenderLines
  fullName: SharpSDL3.Sdl.RenderLines
- uid: System.Span{SharpSDL3.Structs.FPoint}
  commentId: T:System.Span{SharpSDL3.Structs.FPoint}
  parent: System
  definition: System.Span`1
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<FPoint>
  nameWithType: Span<FPoint>
  fullName: System.Span<SharpSDL3.Structs.FPoint>
  nameWithType.vb: Span(Of FPoint)
  fullName.vb: System.Span(Of SharpSDL3.Structs.FPoint)
  name.vb: Span(Of FPoint)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: SharpSDL3.Structs.FPoint
    name: FPoint
    href: SharpSDL3.Structs.FPoint.html
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: SharpSDL3.Structs.FPoint
    name: FPoint
    href: SharpSDL3.Structs.FPoint.html
  - name: )
- uid: SharpSDL3.Structs.FPoint[]
  isExternal: true
  href: SharpSDL3.Structs.FPoint.html
  name: FPoint[]
  nameWithType: FPoint[]
  fullName: SharpSDL3.Structs.FPoint[]
  nameWithType.vb: FPoint()
  fullName.vb: SharpSDL3.Structs.FPoint()
  name.vb: FPoint()
  spec.csharp:
  - uid: SharpSDL3.Structs.FPoint
    name: FPoint
    href: SharpSDL3.Structs.FPoint.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SharpSDL3.Structs.FPoint
    name: FPoint
    href: SharpSDL3.Structs.FPoint.html
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.RenderPoints(System.IntPtr,System.Span{SharpSDL3.Structs.FPoint})
  commentId: M:SharpSDL3.Sdl.RenderPoints(System.IntPtr,System.Span{SharpSDL3.Structs.FPoint})
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderPoints_System_IntPtr_System_Span_SharpSDL3_Structs_FPoint__
  name: RenderPoints(nint, Span<FPoint>)
  nameWithType: Sdl.RenderPoints(nint, Span<FPoint>)
  fullName: SharpSDL3.Sdl.RenderPoints(nint, System.Span<SharpSDL3.Structs.FPoint>)
  nameWithType.vb: Sdl.RenderPoints(IntPtr, Span(Of FPoint))
  fullName.vb: SharpSDL3.Sdl.RenderPoints(System.IntPtr, System.Span(Of SharpSDL3.Structs.FPoint))
  name.vb: RenderPoints(IntPtr, Span(Of FPoint))
  spec.csharp:
  - uid: SharpSDL3.Sdl.RenderPoints(System.IntPtr,System.Span{SharpSDL3.Structs.FPoint})
    name: RenderPoints
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderPoints_System_IntPtr_System_Span_SharpSDL3_Structs_FPoint__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: SharpSDL3.Structs.FPoint
    name: FPoint
    href: SharpSDL3.Structs.FPoint.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.RenderPoints(System.IntPtr,System.Span{SharpSDL3.Structs.FPoint})
    name: RenderPoints
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderPoints_System_IntPtr_System_Span_SharpSDL3_Structs_FPoint__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: SharpSDL3.Structs.FPoint
    name: FPoint
    href: SharpSDL3.Structs.FPoint.html
  - name: )
  - name: )
- uid: SharpSDL3.Sdl.RenderPoint*
  commentId: Overload:SharpSDL3.Sdl.RenderPoint
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderPoint_System_IntPtr_System_Single_System_Single_
  name: RenderPoint
  nameWithType: Sdl.RenderPoint
  fullName: SharpSDL3.Sdl.RenderPoint
- uid: SharpSDL3.Sdl.RenderPoint(System.IntPtr,System.Single,System.Single)
  commentId: M:SharpSDL3.Sdl.RenderPoint(System.IntPtr,System.Single,System.Single)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderPoint_System_IntPtr_System_Single_System_Single_
  name: RenderPoint(nint, float, float)
  nameWithType: Sdl.RenderPoint(nint, float, float)
  fullName: SharpSDL3.Sdl.RenderPoint(nint, float, float)
  nameWithType.vb: Sdl.RenderPoint(IntPtr, Single, Single)
  fullName.vb: SharpSDL3.Sdl.RenderPoint(System.IntPtr, Single, Single)
  name.vb: RenderPoint(IntPtr, Single, Single)
  spec.csharp:
  - uid: SharpSDL3.Sdl.RenderPoint(System.IntPtr,System.Single,System.Single)
    name: RenderPoint
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderPoint_System_IntPtr_System_Single_System_Single_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.RenderPoint(System.IntPtr,System.Single,System.Single)
    name: RenderPoint
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderPoint_System_IntPtr_System_Single_System_Single_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: SharpSDL3.Sdl.RenderPoints*
  commentId: Overload:SharpSDL3.Sdl.RenderPoints
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderPoints_System_IntPtr_System_Span_SharpSDL3_Structs_FPoint__
  name: RenderPoints
  nameWithType: Sdl.RenderPoints
  fullName: SharpSDL3.Sdl.RenderPoints
- uid: SharpSDL3.Sdl.RenderClear(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.RenderClear(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderClear_System_IntPtr_
  name: RenderClear(nint)
  nameWithType: Sdl.RenderClear(nint)
  fullName: SharpSDL3.Sdl.RenderClear(nint)
  nameWithType.vb: Sdl.RenderClear(IntPtr)
  fullName.vb: SharpSDL3.Sdl.RenderClear(System.IntPtr)
  name.vb: RenderClear(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.RenderClear(System.IntPtr)
    name: RenderClear
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderClear_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.RenderClear(System.IntPtr)
    name: RenderClear
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderClear_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.RenderRect(System.IntPtr,SharpSDL3.Structs.FRect@)
  commentId: M:SharpSDL3.Sdl.RenderRect(System.IntPtr,SharpSDL3.Structs.FRect@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderRect_System_IntPtr_SharpSDL3_Structs_FRect__
  name: RenderRect(nint, ref FRect)
  nameWithType: Sdl.RenderRect(nint, ref FRect)
  fullName: SharpSDL3.Sdl.RenderRect(nint, ref SharpSDL3.Structs.FRect)
  nameWithType.vb: Sdl.RenderRect(IntPtr, FRect)
  fullName.vb: SharpSDL3.Sdl.RenderRect(System.IntPtr, SharpSDL3.Structs.FRect)
  name.vb: RenderRect(IntPtr, FRect)
  spec.csharp:
  - uid: SharpSDL3.Sdl.RenderRect(System.IntPtr,SharpSDL3.Structs.FRect@)
    name: RenderRect
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderRect_System_IntPtr_SharpSDL3_Structs_FRect__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: ref
  - name: " "
  - uid: SharpSDL3.Structs.FRect
    name: FRect
    href: SharpSDL3.Structs.FRect.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.RenderRect(System.IntPtr,SharpSDL3.Structs.FRect@)
    name: RenderRect
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderRect_System_IntPtr_SharpSDL3_Structs_FRect__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.FRect
    name: FRect
    href: SharpSDL3.Structs.FRect.html
  - name: )
- uid: SharpSDL3.Sdl.RenderRects(System.IntPtr,System.Span{SharpSDL3.Structs.FRect})
  commentId: M:SharpSDL3.Sdl.RenderRects(System.IntPtr,System.Span{SharpSDL3.Structs.FRect})
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderRects_System_IntPtr_System_Span_SharpSDL3_Structs_FRect__
  name: RenderRects(nint, Span<FRect>)
  nameWithType: Sdl.RenderRects(nint, Span<FRect>)
  fullName: SharpSDL3.Sdl.RenderRects(nint, System.Span<SharpSDL3.Structs.FRect>)
  nameWithType.vb: Sdl.RenderRects(IntPtr, Span(Of FRect))
  fullName.vb: SharpSDL3.Sdl.RenderRects(System.IntPtr, System.Span(Of SharpSDL3.Structs.FRect))
  name.vb: RenderRects(IntPtr, Span(Of FRect))
  spec.csharp:
  - uid: SharpSDL3.Sdl.RenderRects(System.IntPtr,System.Span{SharpSDL3.Structs.FRect})
    name: RenderRects
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderRects_System_IntPtr_System_Span_SharpSDL3_Structs_FRect__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: SharpSDL3.Structs.FRect
    name: FRect
    href: SharpSDL3.Structs.FRect.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.RenderRects(System.IntPtr,System.Span{SharpSDL3.Structs.FRect})
    name: RenderRects
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderRects_System_IntPtr_System_Span_SharpSDL3_Structs_FRect__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: SharpSDL3.Structs.FRect
    name: FRect
    href: SharpSDL3.Structs.FRect.html
  - name: )
  - name: )
- uid: SharpSDL3.Sdl.RenderPresent*
  commentId: Overload:SharpSDL3.Sdl.RenderPresent
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderPresent_System_IntPtr_
  name: RenderPresent
  nameWithType: Sdl.RenderPresent
  fullName: SharpSDL3.Sdl.RenderPresent
- uid: SharpSDL3.Sdl.RenderReadPixels*
  commentId: Overload:SharpSDL3.Sdl.RenderReadPixels
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderReadPixels_System_IntPtr_SharpSDL3_Structs_Rect__
  name: RenderReadPixels
  nameWithType: Sdl.RenderReadPixels
  fullName: SharpSDL3.Sdl.RenderReadPixels
- uid: SharpSDL3.Sdl.RenderRect*
  commentId: Overload:SharpSDL3.Sdl.RenderRect
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderRect_System_IntPtr_SharpSDL3_Structs_FRect__
  name: RenderRect
  nameWithType: Sdl.RenderRect
  fullName: SharpSDL3.Sdl.RenderRect
- uid: SharpSDL3.Sdl.RenderRects*
  commentId: Overload:SharpSDL3.Sdl.RenderRects
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderRects_System_IntPtr_System_Span_SharpSDL3_Structs_FRect__
  name: RenderRects
  nameWithType: Sdl.RenderRects
  fullName: SharpSDL3.Sdl.RenderRects
- uid: SharpSDL3.Sdl.RenderTextureRotated(System.IntPtr,System.IntPtr,SharpSDL3.Structs.FRect@,SharpSDL3.Structs.FRect@,System.Double,SharpSDL3.Structs.FPoint@,SharpSDL3.Enums.FlipMode)
  commentId: M:SharpSDL3.Sdl.RenderTextureRotated(System.IntPtr,System.IntPtr,SharpSDL3.Structs.FRect@,SharpSDL3.Structs.FRect@,System.Double,SharpSDL3.Structs.FPoint@,SharpSDL3.Enums.FlipMode)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderTextureRotated_System_IntPtr_System_IntPtr_SharpSDL3_Structs_FRect__SharpSDL3_Structs_FRect__System_Double_SharpSDL3_Structs_FPoint__SharpSDL3_Enums_FlipMode_
  name: RenderTextureRotated(nint, nint, ref FRect, ref FRect, double, ref FPoint, FlipMode)
  nameWithType: Sdl.RenderTextureRotated(nint, nint, ref FRect, ref FRect, double, ref FPoint, FlipMode)
  fullName: SharpSDL3.Sdl.RenderTextureRotated(nint, nint, ref SharpSDL3.Structs.FRect, ref SharpSDL3.Structs.FRect, double, ref SharpSDL3.Structs.FPoint, SharpSDL3.Enums.FlipMode)
  nameWithType.vb: Sdl.RenderTextureRotated(IntPtr, IntPtr, FRect, FRect, Double, FPoint, FlipMode)
  fullName.vb: SharpSDL3.Sdl.RenderTextureRotated(System.IntPtr, System.IntPtr, SharpSDL3.Structs.FRect, SharpSDL3.Structs.FRect, Double, SharpSDL3.Structs.FPoint, SharpSDL3.Enums.FlipMode)
  name.vb: RenderTextureRotated(IntPtr, IntPtr, FRect, FRect, Double, FPoint, FlipMode)
  spec.csharp:
  - uid: SharpSDL3.Sdl.RenderTextureRotated(System.IntPtr,System.IntPtr,SharpSDL3.Structs.FRect@,SharpSDL3.Structs.FRect@,System.Double,SharpSDL3.Structs.FPoint@,SharpSDL3.Enums.FlipMode)
    name: RenderTextureRotated
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderTextureRotated_System_IntPtr_System_IntPtr_SharpSDL3_Structs_FRect__SharpSDL3_Structs_FRect__System_Double_SharpSDL3_Structs_FPoint__SharpSDL3_Enums_FlipMode_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: ref
  - name: " "
  - uid: SharpSDL3.Structs.FRect
    name: FRect
    href: SharpSDL3.Structs.FRect.html
  - name: ','
  - name: " "
  - name: ref
  - name: " "
  - uid: SharpSDL3.Structs.FRect
    name: FRect
    href: SharpSDL3.Structs.FRect.html
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - name: ref
  - name: " "
  - uid: SharpSDL3.Structs.FPoint
    name: FPoint
    href: SharpSDL3.Structs.FPoint.html
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.FlipMode
    name: FlipMode
    href: SharpSDL3.Enums.FlipMode.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.RenderTextureRotated(System.IntPtr,System.IntPtr,SharpSDL3.Structs.FRect@,SharpSDL3.Structs.FRect@,System.Double,SharpSDL3.Structs.FPoint@,SharpSDL3.Enums.FlipMode)
    name: RenderTextureRotated
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderTextureRotated_System_IntPtr_System_IntPtr_SharpSDL3_Structs_FRect__SharpSDL3_Structs_FRect__System_Double_SharpSDL3_Structs_FPoint__SharpSDL3_Enums_FlipMode_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.FRect
    name: FRect
    href: SharpSDL3.Structs.FRect.html
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.FRect
    name: FRect
    href: SharpSDL3.Structs.FRect.html
  - name: ','
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.FPoint
    name: FPoint
    href: SharpSDL3.Structs.FPoint.html
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.FlipMode
    name: FlipMode
    href: SharpSDL3.Enums.FlipMode.html
  - name: )
- uid: SharpSDL3.Sdl.RenderTextureTiled(System.IntPtr,System.IntPtr,SharpSDL3.Structs.FRect@,System.Single,SharpSDL3.Structs.FRect@)
  commentId: M:SharpSDL3.Sdl.RenderTextureTiled(System.IntPtr,System.IntPtr,SharpSDL3.Structs.FRect@,System.Single,SharpSDL3.Structs.FRect@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderTextureTiled_System_IntPtr_System_IntPtr_SharpSDL3_Structs_FRect__System_Single_SharpSDL3_Structs_FRect__
  name: RenderTextureTiled(nint, nint, ref FRect, float, ref FRect)
  nameWithType: Sdl.RenderTextureTiled(nint, nint, ref FRect, float, ref FRect)
  fullName: SharpSDL3.Sdl.RenderTextureTiled(nint, nint, ref SharpSDL3.Structs.FRect, float, ref SharpSDL3.Structs.FRect)
  nameWithType.vb: Sdl.RenderTextureTiled(IntPtr, IntPtr, FRect, Single, FRect)
  fullName.vb: SharpSDL3.Sdl.RenderTextureTiled(System.IntPtr, System.IntPtr, SharpSDL3.Structs.FRect, Single, SharpSDL3.Structs.FRect)
  name.vb: RenderTextureTiled(IntPtr, IntPtr, FRect, Single, FRect)
  spec.csharp:
  - uid: SharpSDL3.Sdl.RenderTextureTiled(System.IntPtr,System.IntPtr,SharpSDL3.Structs.FRect@,System.Single,SharpSDL3.Structs.FRect@)
    name: RenderTextureTiled
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderTextureTiled_System_IntPtr_System_IntPtr_SharpSDL3_Structs_FRect__System_Single_SharpSDL3_Structs_FRect__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: ref
  - name: " "
  - uid: SharpSDL3.Structs.FRect
    name: FRect
    href: SharpSDL3.Structs.FRect.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - name: ref
  - name: " "
  - uid: SharpSDL3.Structs.FRect
    name: FRect
    href: SharpSDL3.Structs.FRect.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.RenderTextureTiled(System.IntPtr,System.IntPtr,SharpSDL3.Structs.FRect@,System.Single,SharpSDL3.Structs.FRect@)
    name: RenderTextureTiled
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderTextureTiled_System_IntPtr_System_IntPtr_SharpSDL3_Structs_FRect__System_Single_SharpSDL3_Structs_FRect__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.FRect
    name: FRect
    href: SharpSDL3.Structs.FRect.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.FRect
    name: FRect
    href: SharpSDL3.Structs.FRect.html
  - name: )
- uid: SharpSDL3.Sdl.RenderTexture*
  commentId: Overload:SharpSDL3.Sdl.RenderTexture
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderTexture_System_IntPtr_System_IntPtr_SharpSDL3_Structs_FRect__SharpSDL3_Structs_FRect__
  name: RenderTexture
  nameWithType: Sdl.RenderTexture
  fullName: SharpSDL3.Sdl.RenderTexture
- uid: SharpSDL3.Sdl.RenderTexture(System.IntPtr,System.IntPtr,SharpSDL3.Structs.FRect@,SharpSDL3.Structs.FRect@)
  commentId: M:SharpSDL3.Sdl.RenderTexture(System.IntPtr,System.IntPtr,SharpSDL3.Structs.FRect@,SharpSDL3.Structs.FRect@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderTexture_System_IntPtr_System_IntPtr_SharpSDL3_Structs_FRect__SharpSDL3_Structs_FRect__
  name: RenderTexture(nint, nint, ref FRect, ref FRect)
  nameWithType: Sdl.RenderTexture(nint, nint, ref FRect, ref FRect)
  fullName: SharpSDL3.Sdl.RenderTexture(nint, nint, ref SharpSDL3.Structs.FRect, ref SharpSDL3.Structs.FRect)
  nameWithType.vb: Sdl.RenderTexture(IntPtr, IntPtr, FRect, FRect)
  fullName.vb: SharpSDL3.Sdl.RenderTexture(System.IntPtr, System.IntPtr, SharpSDL3.Structs.FRect, SharpSDL3.Structs.FRect)
  name.vb: RenderTexture(IntPtr, IntPtr, FRect, FRect)
  spec.csharp:
  - uid: SharpSDL3.Sdl.RenderTexture(System.IntPtr,System.IntPtr,SharpSDL3.Structs.FRect@,SharpSDL3.Structs.FRect@)
    name: RenderTexture
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderTexture_System_IntPtr_System_IntPtr_SharpSDL3_Structs_FRect__SharpSDL3_Structs_FRect__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: ref
  - name: " "
  - uid: SharpSDL3.Structs.FRect
    name: FRect
    href: SharpSDL3.Structs.FRect.html
  - name: ','
  - name: " "
  - name: ref
  - name: " "
  - uid: SharpSDL3.Structs.FRect
    name: FRect
    href: SharpSDL3.Structs.FRect.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.RenderTexture(System.IntPtr,System.IntPtr,SharpSDL3.Structs.FRect@,SharpSDL3.Structs.FRect@)
    name: RenderTexture
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderTexture_System_IntPtr_System_IntPtr_SharpSDL3_Structs_FRect__SharpSDL3_Structs_FRect__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.FRect
    name: FRect
    href: SharpSDL3.Structs.FRect.html
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.FRect
    name: FRect
    href: SharpSDL3.Structs.FRect.html
  - name: )
- uid: SharpSDL3.Sdl.RenderTexture9Grid*
  commentId: Overload:SharpSDL3.Sdl.RenderTexture9Grid
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderTexture9Grid_System_IntPtr_System_IntPtr_SharpSDL3_Structs_FRect__System_Single_System_Single_System_Single_System_Single_System_Single_SharpSDL3_Structs_FRect__
  name: RenderTexture9Grid
  nameWithType: Sdl.RenderTexture9Grid
  fullName: SharpSDL3.Sdl.RenderTexture9Grid
- uid: SharpSDL3.Sdl.RenderTextureAffine*
  commentId: Overload:SharpSDL3.Sdl.RenderTextureAffine
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderTextureAffine_System_IntPtr_System_IntPtr_SharpSDL3_Structs_FRect__SharpSDL3_Structs_FPoint__SharpSDL3_Structs_FPoint__SharpSDL3_Structs_FPoint__
  name: RenderTextureAffine
  nameWithType: Sdl.RenderTextureAffine
  fullName: SharpSDL3.Sdl.RenderTextureAffine
- uid: SharpSDL3.Sdl.RenderTextureRotated*
  commentId: Overload:SharpSDL3.Sdl.RenderTextureRotated
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderTextureRotated_System_IntPtr_System_IntPtr_SharpSDL3_Structs_FRect__SharpSDL3_Structs_FRect__System_Double_SharpSDL3_Structs_FPoint__SharpSDL3_Enums_FlipMode_
  name: RenderTextureRotated
  nameWithType: Sdl.RenderTextureRotated
  fullName: SharpSDL3.Sdl.RenderTextureRotated
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: SharpSDL3.Enums.FlipMode
  commentId: T:SharpSDL3.Enums.FlipMode
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.FlipMode.html
  name: FlipMode
  nameWithType: FlipMode
  fullName: SharpSDL3.Enums.FlipMode
- uid: SharpSDL3.Sdl.RenderTextureTiled*
  commentId: Overload:SharpSDL3.Sdl.RenderTextureTiled
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderTextureTiled_System_IntPtr_System_IntPtr_SharpSDL3_Structs_FRect__System_Single_SharpSDL3_Structs_FRect__
  name: RenderTextureTiled
  nameWithType: Sdl.RenderTextureTiled
  fullName: SharpSDL3.Sdl.RenderTextureTiled
- uid: SharpSDL3.Sdl.GetRenderViewport(System.IntPtr,SharpSDL3.Structs.Rect@)
  commentId: M:SharpSDL3.Sdl.GetRenderViewport(System.IntPtr,SharpSDL3.Structs.Rect@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderViewport_System_IntPtr_SharpSDL3_Structs_Rect__
  name: GetRenderViewport(nint, out Rect)
  nameWithType: Sdl.GetRenderViewport(nint, out Rect)
  fullName: SharpSDL3.Sdl.GetRenderViewport(nint, out SharpSDL3.Structs.Rect)
  nameWithType.vb: Sdl.GetRenderViewport(IntPtr, Rect)
  fullName.vb: SharpSDL3.Sdl.GetRenderViewport(System.IntPtr, SharpSDL3.Structs.Rect)
  name.vb: GetRenderViewport(IntPtr, Rect)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetRenderViewport(System.IntPtr,SharpSDL3.Structs.Rect@)
    name: GetRenderViewport
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderViewport_System_IntPtr_SharpSDL3_Structs_Rect__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: SharpSDL3.Structs.Rect
    name: Rect
    href: SharpSDL3.Structs.Rect.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetRenderViewport(System.IntPtr,SharpSDL3.Structs.Rect@)
    name: GetRenderViewport
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderViewport_System_IntPtr_SharpSDL3_Structs_Rect__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.Rect
    name: Rect
    href: SharpSDL3.Structs.Rect.html
  - name: )
- uid: SharpSDL3.Sdl.RenderViewportSet*
  commentId: Overload:SharpSDL3.Sdl.RenderViewportSet
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenderViewportSet_System_IntPtr_
  name: RenderViewportSet
  nameWithType: Sdl.RenderViewportSet
  fullName: SharpSDL3.Sdl.RenderViewportSet
- uid: SharpSDL3.Sdl.SetRenderClipRect*
  commentId: Overload:SharpSDL3.Sdl.SetRenderClipRect
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetRenderClipRect_System_IntPtr_SharpSDL3_Structs_Rect__
  name: SetRenderClipRect
  nameWithType: Sdl.SetRenderClipRect
  fullName: SharpSDL3.Sdl.SetRenderClipRect
- uid: SharpSDL3.Sdl.GetRenderColorScale(System.IntPtr,System.Single@)
  commentId: M:SharpSDL3.Sdl.GetRenderColorScale(System.IntPtr,System.Single@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderColorScale_System_IntPtr_System_Single__
  name: GetRenderColorScale(nint, out float)
  nameWithType: Sdl.GetRenderColorScale(nint, out float)
  fullName: SharpSDL3.Sdl.GetRenderColorScale(nint, out float)
  nameWithType.vb: Sdl.GetRenderColorScale(IntPtr, Single)
  fullName.vb: SharpSDL3.Sdl.GetRenderColorScale(System.IntPtr, Single)
  name.vb: GetRenderColorScale(IntPtr, Single)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetRenderColorScale(System.IntPtr,System.Single@)
    name: GetRenderColorScale
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderColorScale_System_IntPtr_System_Single__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetRenderColorScale(System.IntPtr,System.Single@)
    name: GetRenderColorScale
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderColorScale_System_IntPtr_System_Single__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: SharpSDL3.Sdl.SetRenderColorScale*
  commentId: Overload:SharpSDL3.Sdl.SetRenderColorScale
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetRenderColorScale_System_IntPtr_System_Single_
  name: SetRenderColorScale
  nameWithType: Sdl.SetRenderColorScale
  fullName: SharpSDL3.Sdl.SetRenderColorScale
- uid: SharpSDL3.Sdl.GetRenderDrawBlendMode(System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetRenderDrawBlendMode(System.IntPtr,System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderDrawBlendMode_System_IntPtr_System_IntPtr_
  name: GetRenderDrawBlendMode(nint, nint)
  nameWithType: Sdl.GetRenderDrawBlendMode(nint, nint)
  fullName: SharpSDL3.Sdl.GetRenderDrawBlendMode(nint, nint)
  nameWithType.vb: Sdl.GetRenderDrawBlendMode(IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetRenderDrawBlendMode(System.IntPtr, System.IntPtr)
  name.vb: GetRenderDrawBlendMode(IntPtr, IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetRenderDrawBlendMode(System.IntPtr,System.IntPtr)
    name: GetRenderDrawBlendMode
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderDrawBlendMode_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetRenderDrawBlendMode(System.IntPtr,System.IntPtr)
    name: GetRenderDrawBlendMode
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderDrawBlendMode_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.SetRenderDrawBlendMode*
  commentId: Overload:SharpSDL3.Sdl.SetRenderDrawBlendMode
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetRenderDrawBlendMode_System_IntPtr_System_UInt32_
  name: SetRenderDrawBlendMode
  nameWithType: Sdl.SetRenderDrawBlendMode
  fullName: SharpSDL3.Sdl.SetRenderDrawBlendMode
- uid: SharpSDL3.Sdl.SetRenderDrawColor*
  commentId: Overload:SharpSDL3.Sdl.SetRenderDrawColor
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetRenderDrawColor_System_IntPtr_System_Byte_System_Byte_System_Byte_System_Byte_
  name: SetRenderDrawColor
  nameWithType: Sdl.SetRenderDrawColor
  fullName: SharpSDL3.Sdl.SetRenderDrawColor
- uid: SharpSDL3.Sdl.SetRenderDrawColorFloat*
  commentId: Overload:SharpSDL3.Sdl.SetRenderDrawColorFloat
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetRenderDrawColorFloat_System_IntPtr_System_Single_System_Single_System_Single_System_Single_
  name: SetRenderDrawColorFloat
  nameWithType: Sdl.SetRenderDrawColorFloat
  fullName: SharpSDL3.Sdl.SetRenderDrawColorFloat
- uid: SharpSDL3.Sdl.ConvertEventToRenderCoordinates(System.IntPtr,SharpSDL3.Structs.Event@)
  commentId: M:SharpSDL3.Sdl.ConvertEventToRenderCoordinates(System.IntPtr,SharpSDL3.Structs.Event@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ConvertEventToRenderCoordinates_System_IntPtr_SharpSDL3_Structs_Event__
  name: ConvertEventToRenderCoordinates(nint, ref Event)
  nameWithType: Sdl.ConvertEventToRenderCoordinates(nint, ref Event)
  fullName: SharpSDL3.Sdl.ConvertEventToRenderCoordinates(nint, ref SharpSDL3.Structs.Event)
  nameWithType.vb: Sdl.ConvertEventToRenderCoordinates(IntPtr, Event)
  fullName.vb: SharpSDL3.Sdl.ConvertEventToRenderCoordinates(System.IntPtr, SharpSDL3.Structs.Event)
  name.vb: ConvertEventToRenderCoordinates(IntPtr, Event)
  spec.csharp:
  - uid: SharpSDL3.Sdl.ConvertEventToRenderCoordinates(System.IntPtr,SharpSDL3.Structs.Event@)
    name: ConvertEventToRenderCoordinates
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ConvertEventToRenderCoordinates_System_IntPtr_SharpSDL3_Structs_Event__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: ref
  - name: " "
  - uid: SharpSDL3.Structs.Event
    name: Event
    href: SharpSDL3.Structs.Event.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.ConvertEventToRenderCoordinates(System.IntPtr,SharpSDL3.Structs.Event@)
    name: ConvertEventToRenderCoordinates
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ConvertEventToRenderCoordinates_System_IntPtr_SharpSDL3_Structs_Event__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.Event
    name: Event
    href: SharpSDL3.Structs.Event.html
  - name: )
- uid: SharpSDL3.Sdl.GetRenderLogicalPresentation(System.IntPtr,System.Int32@,System.Int32@,SharpSDL3.Enums.RendererLogicalPresentation@)
  commentId: M:SharpSDL3.Sdl.GetRenderLogicalPresentation(System.IntPtr,System.Int32@,System.Int32@,SharpSDL3.Enums.RendererLogicalPresentation@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderLogicalPresentation_System_IntPtr_System_Int32__System_Int32__SharpSDL3_Enums_RendererLogicalPresentation__
  name: GetRenderLogicalPresentation(nint, out int, out int, out RendererLogicalPresentation)
  nameWithType: Sdl.GetRenderLogicalPresentation(nint, out int, out int, out RendererLogicalPresentation)
  fullName: SharpSDL3.Sdl.GetRenderLogicalPresentation(nint, out int, out int, out SharpSDL3.Enums.RendererLogicalPresentation)
  nameWithType.vb: Sdl.GetRenderLogicalPresentation(IntPtr, Integer, Integer, RendererLogicalPresentation)
  fullName.vb: SharpSDL3.Sdl.GetRenderLogicalPresentation(System.IntPtr, Integer, Integer, SharpSDL3.Enums.RendererLogicalPresentation)
  name.vb: GetRenderLogicalPresentation(IntPtr, Integer, Integer, RendererLogicalPresentation)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetRenderLogicalPresentation(System.IntPtr,System.Int32@,System.Int32@,SharpSDL3.Enums.RendererLogicalPresentation@)
    name: GetRenderLogicalPresentation
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderLogicalPresentation_System_IntPtr_System_Int32__System_Int32__SharpSDL3_Enums_RendererLogicalPresentation__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: SharpSDL3.Enums.RendererLogicalPresentation
    name: RendererLogicalPresentation
    href: SharpSDL3.Enums.RendererLogicalPresentation.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetRenderLogicalPresentation(System.IntPtr,System.Int32@,System.Int32@,SharpSDL3.Enums.RendererLogicalPresentation@)
    name: GetRenderLogicalPresentation
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderLogicalPresentation_System_IntPtr_System_Int32__System_Int32__SharpSDL3_Enums_RendererLogicalPresentation__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.RendererLogicalPresentation
    name: RendererLogicalPresentation
    href: SharpSDL3.Enums.RendererLogicalPresentation.html
  - name: )
- uid: SharpSDL3.Sdl.GetRenderLogicalPresentationRect(System.IntPtr,SharpSDL3.Structs.FRect@)
  commentId: M:SharpSDL3.Sdl.GetRenderLogicalPresentationRect(System.IntPtr,SharpSDL3.Structs.FRect@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderLogicalPresentationRect_System_IntPtr_SharpSDL3_Structs_FRect__
  name: GetRenderLogicalPresentationRect(nint, out FRect)
  nameWithType: Sdl.GetRenderLogicalPresentationRect(nint, out FRect)
  fullName: SharpSDL3.Sdl.GetRenderLogicalPresentationRect(nint, out SharpSDL3.Structs.FRect)
  nameWithType.vb: Sdl.GetRenderLogicalPresentationRect(IntPtr, FRect)
  fullName.vb: SharpSDL3.Sdl.GetRenderLogicalPresentationRect(System.IntPtr, SharpSDL3.Structs.FRect)
  name.vb: GetRenderLogicalPresentationRect(IntPtr, FRect)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetRenderLogicalPresentationRect(System.IntPtr,SharpSDL3.Structs.FRect@)
    name: GetRenderLogicalPresentationRect
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderLogicalPresentationRect_System_IntPtr_SharpSDL3_Structs_FRect__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: SharpSDL3.Structs.FRect
    name: FRect
    href: SharpSDL3.Structs.FRect.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetRenderLogicalPresentationRect(System.IntPtr,SharpSDL3.Structs.FRect@)
    name: GetRenderLogicalPresentationRect
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderLogicalPresentationRect_System_IntPtr_SharpSDL3_Structs_FRect__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.FRect
    name: FRect
    href: SharpSDL3.Structs.FRect.html
  - name: )
- uid: SharpSDL3.Sdl.SetRenderLogicalPresentation*
  commentId: Overload:SharpSDL3.Sdl.SetRenderLogicalPresentation
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetRenderLogicalPresentation_System_IntPtr_System_Int32_System_Int32_SharpSDL3_Enums_RendererLogicalPresentation_
  name: SetRenderLogicalPresentation
  nameWithType: Sdl.SetRenderLogicalPresentation
  fullName: SharpSDL3.Sdl.SetRenderLogicalPresentation
- uid: SharpSDL3.Sdl.GetRenderScale(System.IntPtr,System.Single@,System.Single@)
  commentId: M:SharpSDL3.Sdl.GetRenderScale(System.IntPtr,System.Single@,System.Single@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderScale_System_IntPtr_System_Single__System_Single__
  name: GetRenderScale(nint, out float, out float)
  nameWithType: Sdl.GetRenderScale(nint, out float, out float)
  fullName: SharpSDL3.Sdl.GetRenderScale(nint, out float, out float)
  nameWithType.vb: Sdl.GetRenderScale(IntPtr, Single, Single)
  fullName.vb: SharpSDL3.Sdl.GetRenderScale(System.IntPtr, Single, Single)
  name.vb: GetRenderScale(IntPtr, Single, Single)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetRenderScale(System.IntPtr,System.Single@,System.Single@)
    name: GetRenderScale
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderScale_System_IntPtr_System_Single__System_Single__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetRenderScale(System.IntPtr,System.Single@,System.Single@)
    name: GetRenderScale
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderScale_System_IntPtr_System_Single__System_Single__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: SharpSDL3.Sdl.SetRenderScale*
  commentId: Overload:SharpSDL3.Sdl.SetRenderScale
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetRenderScale_System_IntPtr_System_Single_System_Single_
  name: SetRenderScale
  nameWithType: Sdl.SetRenderScale
  fullName: SharpSDL3.Sdl.SetRenderScale
- uid: SharpSDL3.Sdl.GetRenderTarget(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetRenderTarget(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderTarget_System_IntPtr_
  name: GetRenderTarget(nint)
  nameWithType: Sdl.GetRenderTarget(nint)
  fullName: SharpSDL3.Sdl.GetRenderTarget(nint)
  nameWithType.vb: Sdl.GetRenderTarget(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetRenderTarget(System.IntPtr)
  name.vb: GetRenderTarget(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetRenderTarget(System.IntPtr)
    name: GetRenderTarget
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderTarget_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetRenderTarget(System.IntPtr)
    name: GetRenderTarget
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderTarget_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.SetRenderTarget*
  commentId: Overload:SharpSDL3.Sdl.SetRenderTarget
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetRenderTarget_System_IntPtr_System_IntPtr_
  name: SetRenderTarget
  nameWithType: Sdl.SetRenderTarget
  fullName: SharpSDL3.Sdl.SetRenderTarget
- uid: SharpSDL3.Sdl.SetRenderViewport*
  commentId: Overload:SharpSDL3.Sdl.SetRenderViewport
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetRenderViewport_System_IntPtr_SharpSDL3_Structs_Rect__
  name: SetRenderViewport
  nameWithType: Sdl.SetRenderViewport
  fullName: SharpSDL3.Sdl.SetRenderViewport
- uid: SharpSDL3.Sdl.GetRenderVSync(System.IntPtr,System.Int32@)
  commentId: M:SharpSDL3.Sdl.GetRenderVSync(System.IntPtr,System.Int32@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderVSync_System_IntPtr_System_Int32__
  name: GetRenderVSync(nint, out int)
  nameWithType: Sdl.GetRenderVSync(nint, out int)
  fullName: SharpSDL3.Sdl.GetRenderVSync(nint, out int)
  nameWithType.vb: Sdl.GetRenderVSync(IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.GetRenderVSync(System.IntPtr, Integer)
  name.vb: GetRenderVSync(IntPtr, Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetRenderVSync(System.IntPtr,System.Int32@)
    name: GetRenderVSync
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderVSync_System_IntPtr_System_Int32__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetRenderVSync(System.IntPtr,System.Int32@)
    name: GetRenderVSync
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRenderVSync_System_IntPtr_System_Int32__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.SetRenderVSync*
  commentId: Overload:SharpSDL3.Sdl.SetRenderVSync
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetRenderVSync_System_IntPtr_System_Int32_
  name: SetRenderVSync
  nameWithType: Sdl.SetRenderVSync
  fullName: SharpSDL3.Sdl.SetRenderVSync
- uid: System.IntPtr.Zero
  commentId: F:System.IntPtr.Zero
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.intptr.zero
  name: Zero
  nameWithType: nint.Zero
  fullName: nint.Zero
  nameWithType.vb: IntPtr.Zero
  fullName.vb: System.IntPtr.Zero
- uid: SharpSDL3.Sdl.StructureToPointer*
  commentId: Overload:SharpSDL3.Sdl.StructureToPointer
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_StructureToPointer__1___0__
  name: StructureToPointer
  nameWithType: Sdl.StructureToPointer
  fullName: SharpSDL3.Sdl.StructureToPointer
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: SharpSDL3.Sdl.PointerToStructure*
  commentId: Overload:SharpSDL3.Sdl.PointerToStructure
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_PointerToStructure__1_System_IntPtr_
  name: PointerToStructure
  nameWithType: Sdl.PointerToStructure
  fullName: SharpSDL3.Sdl.PointerToStructure
- uid: SharpSDL3.Sdl.VersionNum*
  commentId: Overload:SharpSDL3.Sdl.VersionNum
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_VersionNum_System_Int32_System_Int32_System_Int32_
  name: VersionNum
  nameWithType: Sdl.VersionNum
  fullName: SharpSDL3.Sdl.VersionNum
- uid: SharpSDL3.Sdl.RemoveHintCallback(System.String,SharpSDL3.Delegates.SdlHintCallback,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.RemoveHintCallback(System.String,SharpSDL3.Delegates.SdlHintCallback,System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RemoveHintCallback_System_String_SharpSDL3_Delegates_SdlHintCallback_System_IntPtr_
  name: RemoveHintCallback(string, SdlHintCallback, nint)
  nameWithType: Sdl.RemoveHintCallback(string, Delegates.SdlHintCallback, nint)
  fullName: SharpSDL3.Sdl.RemoveHintCallback(string, SharpSDL3.Delegates.SdlHintCallback, nint)
  nameWithType.vb: Sdl.RemoveHintCallback(String, Delegates.SdlHintCallback, IntPtr)
  fullName.vb: SharpSDL3.Sdl.RemoveHintCallback(String, SharpSDL3.Delegates.SdlHintCallback, System.IntPtr)
  name.vb: RemoveHintCallback(String, SdlHintCallback, IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.RemoveHintCallback(System.String,SharpSDL3.Delegates.SdlHintCallback,System.IntPtr)
    name: RemoveHintCallback
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RemoveHintCallback_System_String_SharpSDL3_Delegates_SdlHintCallback_System_IntPtr_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: SharpSDL3.Delegates.SdlHintCallback
    name: SdlHintCallback
    href: SharpSDL3.Delegates.SdlHintCallback.html
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.RemoveHintCallback(System.String,SharpSDL3.Delegates.SdlHintCallback,System.IntPtr)
    name: RemoveHintCallback
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RemoveHintCallback_System_String_SharpSDL3_Delegates_SdlHintCallback_System_IntPtr_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: SharpSDL3.Delegates.SdlHintCallback
    name: SdlHintCallback
    href: SharpSDL3.Delegates.SdlHintCallback.html
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Delegates.SdlHintCallback
  commentId: T:SharpSDL3.Delegates.SdlHintCallback
  parent: SharpSDL3
  href: SharpSDL3.Delegates.html
  name: Delegates.SdlHintCallback
  nameWithType: Delegates.SdlHintCallback
  fullName: SharpSDL3.Delegates.SdlHintCallback
  spec.csharp:
  - uid: SharpSDL3.Delegates
    name: Delegates
    href: SharpSDL3.Delegates.html
  - name: .
  - uid: SharpSDL3.Delegates.SdlHintCallback
    name: SdlHintCallback
    href: SharpSDL3.Delegates.SdlHintCallback.html
  spec.vb:
  - uid: SharpSDL3.Delegates
    name: Delegates
    href: SharpSDL3.Delegates.html
  - name: .
  - uid: SharpSDL3.Delegates.SdlHintCallback
    name: SdlHintCallback
    href: SharpSDL3.Delegates.SdlHintCallback.html
- uid: SharpSDL3.Sdl.AddHintCallback*
  commentId: Overload:SharpSDL3.Sdl.AddHintCallback
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_AddHintCallback_System_String_SharpSDL3_Delegates_SdlHintCallback_System_IntPtr_
  name: AddHintCallback
  nameWithType: Sdl.AddHintCallback
  fullName: SharpSDL3.Sdl.AddHintCallback
- uid: SharpSDL3.Sdl.RemoveSurfaceAlternateImages(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.RemoveSurfaceAlternateImages(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RemoveSurfaceAlternateImages_System_IntPtr_
  name: RemoveSurfaceAlternateImages(nint)
  nameWithType: Sdl.RemoveSurfaceAlternateImages(nint)
  fullName: SharpSDL3.Sdl.RemoveSurfaceAlternateImages(nint)
  nameWithType.vb: Sdl.RemoveSurfaceAlternateImages(IntPtr)
  fullName.vb: SharpSDL3.Sdl.RemoveSurfaceAlternateImages(System.IntPtr)
  name.vb: RemoveSurfaceAlternateImages(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.RemoveSurfaceAlternateImages(System.IntPtr)
    name: RemoveSurfaceAlternateImages
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RemoveSurfaceAlternateImages_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.RemoveSurfaceAlternateImages(System.IntPtr)
    name: RemoveSurfaceAlternateImages
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RemoveSurfaceAlternateImages_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GetSurfaceImages(System.IntPtr,System.Int32@)
  commentId: M:SharpSDL3.Sdl.GetSurfaceImages(System.IntPtr,System.Int32@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetSurfaceImages_System_IntPtr_System_Int32__
  name: GetSurfaceImages(nint, out int)
  nameWithType: Sdl.GetSurfaceImages(nint, out int)
  fullName: SharpSDL3.Sdl.GetSurfaceImages(nint, out int)
  nameWithType.vb: Sdl.GetSurfaceImages(IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.GetSurfaceImages(System.IntPtr, Integer)
  name.vb: GetSurfaceImages(IntPtr, Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetSurfaceImages(System.IntPtr,System.Int32@)
    name: GetSurfaceImages
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetSurfaceImages_System_IntPtr_System_Int32__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetSurfaceImages(System.IntPtr,System.Int32@)
    name: GetSurfaceImages
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetSurfaceImages_System_IntPtr_System_Int32__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.SurfaceHasAlternateImages(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.SurfaceHasAlternateImages(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SurfaceHasAlternateImages_System_IntPtr_
  name: SurfaceHasAlternateImages(nint)
  nameWithType: Sdl.SurfaceHasAlternateImages(nint)
  fullName: SharpSDL3.Sdl.SurfaceHasAlternateImages(nint)
  nameWithType.vb: Sdl.SurfaceHasAlternateImages(IntPtr)
  fullName.vb: SharpSDL3.Sdl.SurfaceHasAlternateImages(System.IntPtr)
  name.vb: SurfaceHasAlternateImages(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SurfaceHasAlternateImages(System.IntPtr)
    name: SurfaceHasAlternateImages
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SurfaceHasAlternateImages_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SurfaceHasAlternateImages(System.IntPtr)
    name: SurfaceHasAlternateImages
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SurfaceHasAlternateImages_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.AddSurfaceAlternateImage*
  commentId: Overload:SharpSDL3.Sdl.AddSurfaceAlternateImage
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_AddSurfaceAlternateImage_System_IntPtr_System_IntPtr_
  name: AddSurfaceAlternateImage
  nameWithType: Sdl.AddSurfaceAlternateImage
  fullName: SharpSDL3.Sdl.AddSurfaceAlternateImage
- uid: SharpSDL3.Sdl.BlitSurfaceScaled(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,SharpSDL3.Enums.ScaleMode)
  commentId: M:SharpSDL3.Sdl.BlitSurfaceScaled(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,SharpSDL3.Enums.ScaleMode)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BlitSurfaceScaled_System_IntPtr_System_IntPtr_System_IntPtr_System_IntPtr_SharpSDL3_Enums_ScaleMode_
  name: BlitSurfaceScaled(nint, nint, nint, nint, ScaleMode)
  nameWithType: Sdl.BlitSurfaceScaled(nint, nint, nint, nint, ScaleMode)
  fullName: SharpSDL3.Sdl.BlitSurfaceScaled(nint, nint, nint, nint, SharpSDL3.Enums.ScaleMode)
  nameWithType.vb: Sdl.BlitSurfaceScaled(IntPtr, IntPtr, IntPtr, IntPtr, ScaleMode)
  fullName.vb: SharpSDL3.Sdl.BlitSurfaceScaled(System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr, SharpSDL3.Enums.ScaleMode)
  name.vb: BlitSurfaceScaled(IntPtr, IntPtr, IntPtr, IntPtr, ScaleMode)
  spec.csharp:
  - uid: SharpSDL3.Sdl.BlitSurfaceScaled(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,SharpSDL3.Enums.ScaleMode)
    name: BlitSurfaceScaled
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BlitSurfaceScaled_System_IntPtr_System_IntPtr_System_IntPtr_System_IntPtr_SharpSDL3_Enums_ScaleMode_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.ScaleMode
    name: ScaleMode
    href: SharpSDL3.Enums.ScaleMode.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.BlitSurfaceScaled(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,SharpSDL3.Enums.ScaleMode)
    name: BlitSurfaceScaled
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BlitSurfaceScaled_System_IntPtr_System_IntPtr_System_IntPtr_System_IntPtr_SharpSDL3_Enums_ScaleMode_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.ScaleMode
    name: ScaleMode
    href: SharpSDL3.Enums.ScaleMode.html
  - name: )
- uid: SharpSDL3.Sdl.BlitSurface*
  commentId: Overload:SharpSDL3.Sdl.BlitSurface
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BlitSurface_System_IntPtr_System_IntPtr_System_IntPtr_System_IntPtr_
  name: BlitSurface
  nameWithType: Sdl.BlitSurface
  fullName: SharpSDL3.Sdl.BlitSurface
- uid: SharpSDL3.Sdl.BlitSurface(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.BlitSurface(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BlitSurface_System_IntPtr_System_IntPtr_System_IntPtr_System_IntPtr_
  name: BlitSurface(nint, nint, nint, nint)
  nameWithType: Sdl.BlitSurface(nint, nint, nint, nint)
  fullName: SharpSDL3.Sdl.BlitSurface(nint, nint, nint, nint)
  nameWithType.vb: Sdl.BlitSurface(IntPtr, IntPtr, IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.BlitSurface(System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr)
  name.vb: BlitSurface(IntPtr, IntPtr, IntPtr, IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.BlitSurface(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
    name: BlitSurface
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BlitSurface_System_IntPtr_System_IntPtr_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.BlitSurface(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
    name: BlitSurface
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BlitSurface_System_IntPtr_System_IntPtr_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.BlitSurface9Grid*
  commentId: Overload:SharpSDL3.Sdl.BlitSurface9Grid
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BlitSurface9Grid_System_IntPtr_System_IntPtr_System_Int32_System_Int32_System_Int32_System_Int32_System_Single_SharpSDL3_Enums_ScaleMode_System_IntPtr_System_IntPtr_
  name: BlitSurface9Grid
  nameWithType: Sdl.BlitSurface9Grid
  fullName: SharpSDL3.Sdl.BlitSurface9Grid
- uid: SharpSDL3.Enums.ScaleMode
  commentId: T:SharpSDL3.Enums.ScaleMode
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.ScaleMode.html
  name: ScaleMode
  nameWithType: ScaleMode
  fullName: SharpSDL3.Enums.ScaleMode
- uid: SharpSDL3.Sdl.BlitSurfaceScaled*
  commentId: Overload:SharpSDL3.Sdl.BlitSurfaceScaled
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BlitSurfaceScaled_System_IntPtr_System_IntPtr_System_IntPtr_System_IntPtr_SharpSDL3_Enums_ScaleMode_
  name: BlitSurfaceScaled
  nameWithType: Sdl.BlitSurfaceScaled
  fullName: SharpSDL3.Sdl.BlitSurfaceScaled
- uid: SharpSDL3.Sdl.BlitSurfaceTiled*
  commentId: Overload:SharpSDL3.Sdl.BlitSurfaceTiled
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BlitSurfaceTiled_System_IntPtr_System_IntPtr_System_IntPtr_System_IntPtr_
  name: BlitSurfaceTiled
  nameWithType: Sdl.BlitSurfaceTiled
  fullName: SharpSDL3.Sdl.BlitSurfaceTiled
- uid: SharpSDL3.Sdl.BlitSurfaceTiledWithScale*
  commentId: Overload:SharpSDL3.Sdl.BlitSurfaceTiledWithScale
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BlitSurfaceTiledWithScale_System_IntPtr_System_IntPtr_System_Single_SharpSDL3_Enums_ScaleMode_System_IntPtr_System_IntPtr_
  name: BlitSurfaceTiledWithScale
  nameWithType: Sdl.BlitSurfaceTiledWithScale
  fullName: SharpSDL3.Sdl.BlitSurfaceTiledWithScale
- uid: SharpSDL3.Sdl.BlitSurfaceUnchecked*
  commentId: Overload:SharpSDL3.Sdl.BlitSurfaceUnchecked
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BlitSurfaceUnchecked_System_IntPtr_System_IntPtr_System_IntPtr_System_IntPtr_
  name: BlitSurfaceUnchecked
  nameWithType: Sdl.BlitSurfaceUnchecked
  fullName: SharpSDL3.Sdl.BlitSurfaceUnchecked
- uid: SharpSDL3.Sdl.BlitSurfaceUncheckedScaled*
  commentId: Overload:SharpSDL3.Sdl.BlitSurfaceUncheckedScaled
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_BlitSurfaceUncheckedScaled_System_IntPtr_System_IntPtr_System_IntPtr_System_IntPtr_SharpSDL3_Enums_ScaleMode_
  name: BlitSurfaceUncheckedScaled
  nameWithType: Sdl.BlitSurfaceUncheckedScaled
  fullName: SharpSDL3.Sdl.BlitSurfaceUncheckedScaled
- uid: SharpSDL3.Sdl.CleanupTls*
  commentId: Overload:SharpSDL3.Sdl.CleanupTls
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CleanupTls
  name: CleanupTls
  nameWithType: Sdl.CleanupTls
  fullName: SharpSDL3.Sdl.CleanupTls
- uid: SharpSDL3.Sdl.SetClipboardData(SharpSDL3.Delegates.SdlClipboardDataCallback,SharpSDL3.Delegates.SdlClipboardCleanupCallback,System.IntPtr,System.IntPtr,System.UIntPtr)
  commentId: M:SharpSDL3.Sdl.SetClipboardData(SharpSDL3.Delegates.SdlClipboardDataCallback,SharpSDL3.Delegates.SdlClipboardCleanupCallback,System.IntPtr,System.IntPtr,System.UIntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetClipboardData_SharpSDL3_Delegates_SdlClipboardDataCallback_SharpSDL3_Delegates_SdlClipboardCleanupCallback_System_IntPtr_System_IntPtr_System_UIntPtr_
  name: SetClipboardData(SdlClipboardDataCallback, SdlClipboardCleanupCallback, nint, nint, nuint)
  nameWithType: Sdl.SetClipboardData(Delegates.SdlClipboardDataCallback, Delegates.SdlClipboardCleanupCallback, nint, nint, nuint)
  fullName: SharpSDL3.Sdl.SetClipboardData(SharpSDL3.Delegates.SdlClipboardDataCallback, SharpSDL3.Delegates.SdlClipboardCleanupCallback, nint, nint, nuint)
  nameWithType.vb: Sdl.SetClipboardData(Delegates.SdlClipboardDataCallback, Delegates.SdlClipboardCleanupCallback, IntPtr, IntPtr, UIntPtr)
  fullName.vb: SharpSDL3.Sdl.SetClipboardData(SharpSDL3.Delegates.SdlClipboardDataCallback, SharpSDL3.Delegates.SdlClipboardCleanupCallback, System.IntPtr, System.IntPtr, System.UIntPtr)
  name.vb: SetClipboardData(SdlClipboardDataCallback, SdlClipboardCleanupCallback, IntPtr, IntPtr, UIntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetClipboardData(SharpSDL3.Delegates.SdlClipboardDataCallback,SharpSDL3.Delegates.SdlClipboardCleanupCallback,System.IntPtr,System.IntPtr,System.UIntPtr)
    name: SetClipboardData
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetClipboardData_SharpSDL3_Delegates_SdlClipboardDataCallback_SharpSDL3_Delegates_SdlClipboardCleanupCallback_System_IntPtr_System_IntPtr_System_UIntPtr_
  - name: (
  - uid: SharpSDL3.Delegates.SdlClipboardDataCallback
    name: SdlClipboardDataCallback
    href: SharpSDL3.Delegates.SdlClipboardDataCallback.html
  - name: ','
  - name: " "
  - uid: SharpSDL3.Delegates.SdlClipboardCleanupCallback
    name: SdlClipboardCleanupCallback
    href: SharpSDL3.Delegates.SdlClipboardCleanupCallback.html
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UIntPtr
    name: nuint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uintptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetClipboardData(SharpSDL3.Delegates.SdlClipboardDataCallback,SharpSDL3.Delegates.SdlClipboardCleanupCallback,System.IntPtr,System.IntPtr,System.UIntPtr)
    name: SetClipboardData
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetClipboardData_SharpSDL3_Delegates_SdlClipboardDataCallback_SharpSDL3_Delegates_SdlClipboardCleanupCallback_System_IntPtr_System_IntPtr_System_UIntPtr_
  - name: (
  - uid: SharpSDL3.Delegates.SdlClipboardDataCallback
    name: SdlClipboardDataCallback
    href: SharpSDL3.Delegates.SdlClipboardDataCallback.html
  - name: ','
  - name: " "
  - uid: SharpSDL3.Delegates.SdlClipboardCleanupCallback
    name: SdlClipboardCleanupCallback
    href: SharpSDL3.Delegates.SdlClipboardCleanupCallback.html
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UIntPtr
    name: UIntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uintptr
  - name: )
- uid: SharpSDL3.Sdl.ClearClipboardData*
  commentId: Overload:SharpSDL3.Sdl.ClearClipboardData
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ClearClipboardData
  name: ClearClipboardData
  nameWithType: Sdl.ClearClipboardData
  fullName: SharpSDL3.Sdl.ClearClipboardData
- uid: SharpSDL3.Sdl.StartTextInput(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.StartTextInput(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_StartTextInput_System_IntPtr_
  name: StartTextInput(nint)
  nameWithType: Sdl.StartTextInput(nint)
  fullName: SharpSDL3.Sdl.StartTextInput(nint)
  nameWithType.vb: Sdl.StartTextInput(IntPtr)
  fullName.vb: SharpSDL3.Sdl.StartTextInput(System.IntPtr)
  name.vb: StartTextInput(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.StartTextInput(System.IntPtr)
    name: StartTextInput
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_StartTextInput_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.StartTextInput(System.IntPtr)
    name: StartTextInput
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_StartTextInput_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.StopTextInput(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.StopTextInput(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_StopTextInput_System_IntPtr_
  name: StopTextInput(nint)
  nameWithType: Sdl.StopTextInput(nint)
  fullName: SharpSDL3.Sdl.StopTextInput(nint)
  nameWithType.vb: Sdl.StopTextInput(IntPtr)
  fullName.vb: SharpSDL3.Sdl.StopTextInput(System.IntPtr)
  name.vb: StopTextInput(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.StopTextInput(System.IntPtr)
    name: StopTextInput
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_StopTextInput_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.StopTextInput(System.IntPtr)
    name: StopTextInput
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_StopTextInput_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.ClearComposition*
  commentId: Overload:SharpSDL3.Sdl.ClearComposition
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ClearComposition_System_IntPtr_
  name: ClearComposition
  nameWithType: Sdl.ClearComposition
  fullName: SharpSDL3.Sdl.ClearComposition
- uid: SharpSDL3.Sdl.SetError(System.String,System.Object[])
  commentId: M:SharpSDL3.Sdl.SetError(System.String,System.Object[])
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetError_System_String_System_Object___
  name: SetError(string, params object[])
  nameWithType: Sdl.SetError(string, params object[])
  fullName: SharpSDL3.Sdl.SetError(string, params object[])
  nameWithType.vb: Sdl.SetError(String, ParamArray Object())
  fullName.vb: SharpSDL3.Sdl.SetError(String, ParamArray Object())
  name.vb: SetError(String, ParamArray Object())
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetError(System.String,System.Object[])
    name: SetError
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetError_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetError(System.String,System.Object[])
    name: SetError
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetError_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: SharpSDL3.Sdl.ClearError*
  commentId: Overload:SharpSDL3.Sdl.ClearError
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ClearError
  name: ClearError
  nameWithType: Sdl.ClearError
  fullName: SharpSDL3.Sdl.ClearError
- uid: SharpSDL3.Sdl.ClearProperty*
  commentId: Overload:SharpSDL3.Sdl.ClearProperty
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ClearProperty_System_UInt32_System_String_
  name: ClearProperty
  nameWithType: Sdl.ClearProperty
  fullName: SharpSDL3.Sdl.ClearProperty
- uid: SharpSDL3.Sdl.ClearSurface*
  commentId: Overload:SharpSDL3.Sdl.ClearSurface
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ClearSurface_System_IntPtr_System_Single_System_Single_System_Single_System_Single_
  name: ClearSurface
  nameWithType: Sdl.ClearSurface
  fullName: SharpSDL3.Sdl.ClearSurface
- uid: SharpSDL3.Sdl.SetTextureBlendMode(System.IntPtr,System.UInt32)
  commentId: M:SharpSDL3.Sdl.SetTextureBlendMode(System.IntPtr,System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetTextureBlendMode_System_IntPtr_System_UInt32_
  name: SetTextureBlendMode(nint, uint)
  nameWithType: Sdl.SetTextureBlendMode(nint, uint)
  fullName: SharpSDL3.Sdl.SetTextureBlendMode(nint, uint)
  nameWithType.vb: Sdl.SetTextureBlendMode(IntPtr, UInteger)
  fullName.vb: SharpSDL3.Sdl.SetTextureBlendMode(System.IntPtr, UInteger)
  name.vb: SetTextureBlendMode(IntPtr, UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetTextureBlendMode(System.IntPtr,System.UInt32)
    name: SetTextureBlendMode
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetTextureBlendMode_System_IntPtr_System_UInt32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetTextureBlendMode(System.IntPtr,System.UInt32)
    name: SetTextureBlendMode
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetTextureBlendMode_System_IntPtr_System_UInt32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.GetTextureBlendMode(System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetTextureBlendMode(System.IntPtr,System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTextureBlendMode_System_IntPtr_System_IntPtr_
  name: GetTextureBlendMode(nint, nint)
  nameWithType: Sdl.GetTextureBlendMode(nint, nint)
  fullName: SharpSDL3.Sdl.GetTextureBlendMode(nint, nint)
  nameWithType.vb: Sdl.GetTextureBlendMode(IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetTextureBlendMode(System.IntPtr, System.IntPtr)
  name.vb: GetTextureBlendMode(IntPtr, IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetTextureBlendMode(System.IntPtr,System.IntPtr)
    name: GetTextureBlendMode
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTextureBlendMode_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetTextureBlendMode(System.IntPtr,System.IntPtr)
    name: GetTextureBlendMode
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTextureBlendMode_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Enums.BlendFactor
  commentId: T:SharpSDL3.Enums.BlendFactor
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.BlendFactor.html
  name: BlendFactor
  nameWithType: BlendFactor
  fullName: SharpSDL3.Enums.BlendFactor
- uid: SharpSDL3.Enums.BlendOperation
  commentId: T:SharpSDL3.Enums.BlendOperation
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.BlendOperation.html
  name: BlendOperation
  nameWithType: BlendOperation
  fullName: SharpSDL3.Enums.BlendOperation
- uid: SharpSDL3.Sdl.ComposeCustomBlendMode*
  commentId: Overload:SharpSDL3.Sdl.ComposeCustomBlendMode
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ComposeCustomBlendMode_SharpSDL3_Enums_BlendFactor_SharpSDL3_Enums_BlendFactor_SharpSDL3_Enums_BlendOperation_SharpSDL3_Enums_BlendFactor_SharpSDL3_Enums_BlendFactor_SharpSDL3_Enums_BlendOperation_
  name: ComposeCustomBlendMode
  nameWithType: Sdl.ComposeCustomBlendMode
  fullName: SharpSDL3.Sdl.ComposeCustomBlendMode
- uid: SharpSDL3.Sdl.ConvertPixelsAndColorspace(System.Int32,System.Int32,SharpSDL3.Enums.PixelFormat,SharpSDL3.Enums.Colorspace,System.UInt32,System.IntPtr,System.Int32,SharpSDL3.Enums.PixelFormat,SharpSDL3.Enums.Colorspace,System.UInt32,System.IntPtr,System.Int32)
  commentId: M:SharpSDL3.Sdl.ConvertPixelsAndColorspace(System.Int32,System.Int32,SharpSDL3.Enums.PixelFormat,SharpSDL3.Enums.Colorspace,System.UInt32,System.IntPtr,System.Int32,SharpSDL3.Enums.PixelFormat,SharpSDL3.Enums.Colorspace,System.UInt32,System.IntPtr,System.Int32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ConvertPixelsAndColorspace_System_Int32_System_Int32_SharpSDL3_Enums_PixelFormat_SharpSDL3_Enums_Colorspace_System_UInt32_System_IntPtr_System_Int32_SharpSDL3_Enums_PixelFormat_SharpSDL3_Enums_Colorspace_System_UInt32_System_IntPtr_System_Int32_
  name: ConvertPixelsAndColorspace(int, int, PixelFormat, Colorspace, uint, nint, int, PixelFormat, Colorspace, uint, nint, int)
  nameWithType: Sdl.ConvertPixelsAndColorspace(int, int, PixelFormat, Colorspace, uint, nint, int, PixelFormat, Colorspace, uint, nint, int)
  fullName: SharpSDL3.Sdl.ConvertPixelsAndColorspace(int, int, SharpSDL3.Enums.PixelFormat, SharpSDL3.Enums.Colorspace, uint, nint, int, SharpSDL3.Enums.PixelFormat, SharpSDL3.Enums.Colorspace, uint, nint, int)
  nameWithType.vb: Sdl.ConvertPixelsAndColorspace(Integer, Integer, PixelFormat, Colorspace, UInteger, IntPtr, Integer, PixelFormat, Colorspace, UInteger, IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.ConvertPixelsAndColorspace(Integer, Integer, SharpSDL3.Enums.PixelFormat, SharpSDL3.Enums.Colorspace, UInteger, System.IntPtr, Integer, SharpSDL3.Enums.PixelFormat, SharpSDL3.Enums.Colorspace, UInteger, System.IntPtr, Integer)
  name.vb: ConvertPixelsAndColorspace(Integer, Integer, PixelFormat, Colorspace, UInteger, IntPtr, Integer, PixelFormat, Colorspace, UInteger, IntPtr, Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.ConvertPixelsAndColorspace(System.Int32,System.Int32,SharpSDL3.Enums.PixelFormat,SharpSDL3.Enums.Colorspace,System.UInt32,System.IntPtr,System.Int32,SharpSDL3.Enums.PixelFormat,SharpSDL3.Enums.Colorspace,System.UInt32,System.IntPtr,System.Int32)
    name: ConvertPixelsAndColorspace
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ConvertPixelsAndColorspace_System_Int32_System_Int32_SharpSDL3_Enums_PixelFormat_SharpSDL3_Enums_Colorspace_System_UInt32_System_IntPtr_System_Int32_SharpSDL3_Enums_PixelFormat_SharpSDL3_Enums_Colorspace_System_UInt32_System_IntPtr_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.PixelFormat
    name: PixelFormat
    href: SharpSDL3.Enums.PixelFormat.html
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.Colorspace
    name: Colorspace
    href: SharpSDL3.Enums.Colorspace.html
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.PixelFormat
    name: PixelFormat
    href: SharpSDL3.Enums.PixelFormat.html
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.Colorspace
    name: Colorspace
    href: SharpSDL3.Enums.Colorspace.html
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.ConvertPixelsAndColorspace(System.Int32,System.Int32,SharpSDL3.Enums.PixelFormat,SharpSDL3.Enums.Colorspace,System.UInt32,System.IntPtr,System.Int32,SharpSDL3.Enums.PixelFormat,SharpSDL3.Enums.Colorspace,System.UInt32,System.IntPtr,System.Int32)
    name: ConvertPixelsAndColorspace
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ConvertPixelsAndColorspace_System_Int32_System_Int32_SharpSDL3_Enums_PixelFormat_SharpSDL3_Enums_Colorspace_System_UInt32_System_IntPtr_System_Int32_SharpSDL3_Enums_PixelFormat_SharpSDL3_Enums_Colorspace_System_UInt32_System_IntPtr_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.PixelFormat
    name: PixelFormat
    href: SharpSDL3.Enums.PixelFormat.html
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.Colorspace
    name: Colorspace
    href: SharpSDL3.Enums.Colorspace.html
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.PixelFormat
    name: PixelFormat
    href: SharpSDL3.Enums.PixelFormat.html
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.Colorspace
    name: Colorspace
    href: SharpSDL3.Enums.Colorspace.html
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Enums.PixelFormat
  commentId: T:SharpSDL3.Enums.PixelFormat
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.PixelFormat.html
  name: PixelFormat
  nameWithType: PixelFormat
  fullName: SharpSDL3.Enums.PixelFormat
- uid: SharpSDL3.Sdl.ConvertPixels*
  commentId: Overload:SharpSDL3.Sdl.ConvertPixels
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ConvertPixels_System_Int32_System_Int32_SharpSDL3_Enums_PixelFormat_System_IntPtr_System_Int32_SharpSDL3_Enums_PixelFormat_System_IntPtr_System_Int32_
  name: ConvertPixels
  nameWithType: Sdl.ConvertPixels
  fullName: SharpSDL3.Sdl.ConvertPixels
- uid: SharpSDL3.Sdl.ConvertPixels(System.Int32,System.Int32,SharpSDL3.Enums.PixelFormat,System.IntPtr,System.Int32,SharpSDL3.Enums.PixelFormat,System.IntPtr,System.Int32)
  commentId: M:SharpSDL3.Sdl.ConvertPixels(System.Int32,System.Int32,SharpSDL3.Enums.PixelFormat,System.IntPtr,System.Int32,SharpSDL3.Enums.PixelFormat,System.IntPtr,System.Int32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ConvertPixels_System_Int32_System_Int32_SharpSDL3_Enums_PixelFormat_System_IntPtr_System_Int32_SharpSDL3_Enums_PixelFormat_System_IntPtr_System_Int32_
  name: ConvertPixels(int, int, PixelFormat, nint, int, PixelFormat, nint, int)
  nameWithType: Sdl.ConvertPixels(int, int, PixelFormat, nint, int, PixelFormat, nint, int)
  fullName: SharpSDL3.Sdl.ConvertPixels(int, int, SharpSDL3.Enums.PixelFormat, nint, int, SharpSDL3.Enums.PixelFormat, nint, int)
  nameWithType.vb: Sdl.ConvertPixels(Integer, Integer, PixelFormat, IntPtr, Integer, PixelFormat, IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.ConvertPixels(Integer, Integer, SharpSDL3.Enums.PixelFormat, System.IntPtr, Integer, SharpSDL3.Enums.PixelFormat, System.IntPtr, Integer)
  name.vb: ConvertPixels(Integer, Integer, PixelFormat, IntPtr, Integer, PixelFormat, IntPtr, Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.ConvertPixels(System.Int32,System.Int32,SharpSDL3.Enums.PixelFormat,System.IntPtr,System.Int32,SharpSDL3.Enums.PixelFormat,System.IntPtr,System.Int32)
    name: ConvertPixels
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ConvertPixels_System_Int32_System_Int32_SharpSDL3_Enums_PixelFormat_System_IntPtr_System_Int32_SharpSDL3_Enums_PixelFormat_System_IntPtr_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.PixelFormat
    name: PixelFormat
    href: SharpSDL3.Enums.PixelFormat.html
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.PixelFormat
    name: PixelFormat
    href: SharpSDL3.Enums.PixelFormat.html
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.ConvertPixels(System.Int32,System.Int32,SharpSDL3.Enums.PixelFormat,System.IntPtr,System.Int32,SharpSDL3.Enums.PixelFormat,System.IntPtr,System.Int32)
    name: ConvertPixels
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ConvertPixels_System_Int32_System_Int32_SharpSDL3_Enums_PixelFormat_System_IntPtr_System_Int32_SharpSDL3_Enums_PixelFormat_System_IntPtr_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.PixelFormat
    name: PixelFormat
    href: SharpSDL3.Enums.PixelFormat.html
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.PixelFormat
    name: PixelFormat
    href: SharpSDL3.Enums.PixelFormat.html
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Enums.Colorspace
  commentId: T:SharpSDL3.Enums.Colorspace
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.Colorspace.html
  name: Colorspace
  nameWithType: Colorspace
  fullName: SharpSDL3.Enums.Colorspace
- uid: SharpSDL3.Sdl.ConvertPixelsAndColorspace*
  commentId: Overload:SharpSDL3.Sdl.ConvertPixelsAndColorspace
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ConvertPixelsAndColorspace_System_Int32_System_Int32_SharpSDL3_Enums_PixelFormat_SharpSDL3_Enums_Colorspace_System_UInt32_System_IntPtr_System_Int32_SharpSDL3_Enums_PixelFormat_SharpSDL3_Enums_Colorspace_System_UInt32_System_IntPtr_System_Int32_
  name: ConvertPixelsAndColorspace
  nameWithType: Sdl.ConvertPixelsAndColorspace
  fullName: SharpSDL3.Sdl.ConvertPixelsAndColorspace
- uid: SharpSDL3.Sdl.ConvertSurfaceAndColorspace(System.IntPtr,SharpSDL3.Enums.PixelFormat,System.IntPtr,SharpSDL3.Enums.Colorspace,System.UInt32)
  commentId: M:SharpSDL3.Sdl.ConvertSurfaceAndColorspace(System.IntPtr,SharpSDL3.Enums.PixelFormat,System.IntPtr,SharpSDL3.Enums.Colorspace,System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ConvertSurfaceAndColorspace_System_IntPtr_SharpSDL3_Enums_PixelFormat_System_IntPtr_SharpSDL3_Enums_Colorspace_System_UInt32_
  name: ConvertSurfaceAndColorspace(nint, PixelFormat, nint, Colorspace, uint)
  nameWithType: Sdl.ConvertSurfaceAndColorspace(nint, PixelFormat, nint, Colorspace, uint)
  fullName: SharpSDL3.Sdl.ConvertSurfaceAndColorspace(nint, SharpSDL3.Enums.PixelFormat, nint, SharpSDL3.Enums.Colorspace, uint)
  nameWithType.vb: Sdl.ConvertSurfaceAndColorspace(IntPtr, PixelFormat, IntPtr, Colorspace, UInteger)
  fullName.vb: SharpSDL3.Sdl.ConvertSurfaceAndColorspace(System.IntPtr, SharpSDL3.Enums.PixelFormat, System.IntPtr, SharpSDL3.Enums.Colorspace, UInteger)
  name.vb: ConvertSurfaceAndColorspace(IntPtr, PixelFormat, IntPtr, Colorspace, UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.ConvertSurfaceAndColorspace(System.IntPtr,SharpSDL3.Enums.PixelFormat,System.IntPtr,SharpSDL3.Enums.Colorspace,System.UInt32)
    name: ConvertSurfaceAndColorspace
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ConvertSurfaceAndColorspace_System_IntPtr_SharpSDL3_Enums_PixelFormat_System_IntPtr_SharpSDL3_Enums_Colorspace_System_UInt32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.PixelFormat
    name: PixelFormat
    href: SharpSDL3.Enums.PixelFormat.html
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.Colorspace
    name: Colorspace
    href: SharpSDL3.Enums.Colorspace.html
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.ConvertSurfaceAndColorspace(System.IntPtr,SharpSDL3.Enums.PixelFormat,System.IntPtr,SharpSDL3.Enums.Colorspace,System.UInt32)
    name: ConvertSurfaceAndColorspace
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ConvertSurfaceAndColorspace_System_IntPtr_SharpSDL3_Enums_PixelFormat_System_IntPtr_SharpSDL3_Enums_Colorspace_System_UInt32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.PixelFormat
    name: PixelFormat
    href: SharpSDL3.Enums.PixelFormat.html
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.Colorspace
    name: Colorspace
    href: SharpSDL3.Enums.Colorspace.html
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.DestroySurface(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.DestroySurface(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroySurface_System_IntPtr_
  name: DestroySurface(nint)
  nameWithType: Sdl.DestroySurface(nint)
  fullName: SharpSDL3.Sdl.DestroySurface(nint)
  nameWithType.vb: Sdl.DestroySurface(IntPtr)
  fullName.vb: SharpSDL3.Sdl.DestroySurface(System.IntPtr)
  name.vb: DestroySurface(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.DestroySurface(System.IntPtr)
    name: DestroySurface
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroySurface_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.DestroySurface(System.IntPtr)
    name: DestroySurface
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroySurface_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.ConvertSurface*
  commentId: Overload:SharpSDL3.Sdl.ConvertSurface
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ConvertSurface_System_IntPtr_SharpSDL3_Enums_PixelFormat_
  name: ConvertSurface
  nameWithType: Sdl.ConvertSurface
  fullName: SharpSDL3.Sdl.ConvertSurface
- uid: SharpSDL3.Sdl.ConvertSurface(System.IntPtr,SharpSDL3.Enums.PixelFormat)
  commentId: M:SharpSDL3.Sdl.ConvertSurface(System.IntPtr,SharpSDL3.Enums.PixelFormat)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ConvertSurface_System_IntPtr_SharpSDL3_Enums_PixelFormat_
  name: ConvertSurface(nint, PixelFormat)
  nameWithType: Sdl.ConvertSurface(nint, PixelFormat)
  fullName: SharpSDL3.Sdl.ConvertSurface(nint, SharpSDL3.Enums.PixelFormat)
  nameWithType.vb: Sdl.ConvertSurface(IntPtr, PixelFormat)
  fullName.vb: SharpSDL3.Sdl.ConvertSurface(System.IntPtr, SharpSDL3.Enums.PixelFormat)
  name.vb: ConvertSurface(IntPtr, PixelFormat)
  spec.csharp:
  - uid: SharpSDL3.Sdl.ConvertSurface(System.IntPtr,SharpSDL3.Enums.PixelFormat)
    name: ConvertSurface
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ConvertSurface_System_IntPtr_SharpSDL3_Enums_PixelFormat_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.PixelFormat
    name: PixelFormat
    href: SharpSDL3.Enums.PixelFormat.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.ConvertSurface(System.IntPtr,SharpSDL3.Enums.PixelFormat)
    name: ConvertSurface
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ConvertSurface_System_IntPtr_SharpSDL3_Enums_PixelFormat_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.PixelFormat
    name: PixelFormat
    href: SharpSDL3.Enums.PixelFormat.html
  - name: )
- uid: SharpSDL3.Sdl.ConvertSurfaceAndColorspace*
  commentId: Overload:SharpSDL3.Sdl.ConvertSurfaceAndColorspace
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ConvertSurfaceAndColorspace_System_IntPtr_SharpSDL3_Enums_PixelFormat_System_IntPtr_SharpSDL3_Enums_Colorspace_System_UInt32_
  name: ConvertSurfaceAndColorspace
  nameWithType: Sdl.ConvertSurfaceAndColorspace
  fullName: SharpSDL3.Sdl.ConvertSurfaceAndColorspace
- uid: SharpSDL3.Sdl.SetPointerPropertyWithCleanup(System.UInt32,System.String,System.IntPtr,SharpSDL3.Delegates.SdlCleanupPropertyCallback,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.SetPointerPropertyWithCleanup(System.UInt32,System.String,System.IntPtr,SharpSDL3.Delegates.SdlCleanupPropertyCallback,System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetPointerPropertyWithCleanup_System_UInt32_System_String_System_IntPtr_SharpSDL3_Delegates_SdlCleanupPropertyCallback_System_IntPtr_
  name: SetPointerPropertyWithCleanup(uint, string, nint, SdlCleanupPropertyCallback, nint)
  nameWithType: Sdl.SetPointerPropertyWithCleanup(uint, string, nint, Delegates.SdlCleanupPropertyCallback, nint)
  fullName: SharpSDL3.Sdl.SetPointerPropertyWithCleanup(uint, string, nint, SharpSDL3.Delegates.SdlCleanupPropertyCallback, nint)
  nameWithType.vb: Sdl.SetPointerPropertyWithCleanup(UInteger, String, IntPtr, Delegates.SdlCleanupPropertyCallback, IntPtr)
  fullName.vb: SharpSDL3.Sdl.SetPointerPropertyWithCleanup(UInteger, String, System.IntPtr, SharpSDL3.Delegates.SdlCleanupPropertyCallback, System.IntPtr)
  name.vb: SetPointerPropertyWithCleanup(UInteger, String, IntPtr, SdlCleanupPropertyCallback, IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetPointerPropertyWithCleanup(System.UInt32,System.String,System.IntPtr,SharpSDL3.Delegates.SdlCleanupPropertyCallback,System.IntPtr)
    name: SetPointerPropertyWithCleanup
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetPointerPropertyWithCleanup_System_UInt32_System_String_System_IntPtr_SharpSDL3_Delegates_SdlCleanupPropertyCallback_System_IntPtr_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Delegates.SdlCleanupPropertyCallback
    name: SdlCleanupPropertyCallback
    href: SharpSDL3.Delegates.SdlCleanupPropertyCallback.html
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetPointerPropertyWithCleanup(System.UInt32,System.String,System.IntPtr,SharpSDL3.Delegates.SdlCleanupPropertyCallback,System.IntPtr)
    name: SetPointerPropertyWithCleanup
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetPointerPropertyWithCleanup_System_UInt32_System_String_System_IntPtr_SharpSDL3_Delegates_SdlCleanupPropertyCallback_System_IntPtr_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Delegates.SdlCleanupPropertyCallback
    name: SdlCleanupPropertyCallback
    href: SharpSDL3.Delegates.SdlCleanupPropertyCallback.html
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.CopyProperties*
  commentId: Overload:SharpSDL3.Sdl.CopyProperties
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CopyProperties_System_UInt32_System_UInt32_
  name: CopyProperties
  nameWithType: Sdl.CopyProperties
  fullName: SharpSDL3.Sdl.CopyProperties
- uid: SharpSDL3.Sdl.DestroyPalette(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.DestroyPalette(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyPalette_System_IntPtr_
  name: DestroyPalette(nint)
  nameWithType: Sdl.DestroyPalette(nint)
  fullName: SharpSDL3.Sdl.DestroyPalette(nint)
  nameWithType.vb: Sdl.DestroyPalette(IntPtr)
  fullName.vb: SharpSDL3.Sdl.DestroyPalette(System.IntPtr)
  name.vb: DestroyPalette(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.DestroyPalette(System.IntPtr)
    name: DestroyPalette
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyPalette_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.DestroyPalette(System.IntPtr)
    name: DestroyPalette
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyPalette_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.SetPaletteColors(System.IntPtr,System.Span{SharpSDL3.Structs.Color},System.Int32,System.Int32)
  commentId: M:SharpSDL3.Sdl.SetPaletteColors(System.IntPtr,System.Span{SharpSDL3.Structs.Color},System.Int32,System.Int32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetPaletteColors_System_IntPtr_System_Span_SharpSDL3_Structs_Color__System_Int32_System_Int32_
  name: SetPaletteColors(nint, Span<Color>, int, int)
  nameWithType: Sdl.SetPaletteColors(nint, Span<Color>, int, int)
  fullName: SharpSDL3.Sdl.SetPaletteColors(nint, System.Span<SharpSDL3.Structs.Color>, int, int)
  nameWithType.vb: Sdl.SetPaletteColors(IntPtr, Span(Of Color), Integer, Integer)
  fullName.vb: SharpSDL3.Sdl.SetPaletteColors(System.IntPtr, System.Span(Of SharpSDL3.Structs.Color), Integer, Integer)
  name.vb: SetPaletteColors(IntPtr, Span(Of Color), Integer, Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetPaletteColors(System.IntPtr,System.Span{SharpSDL3.Structs.Color},System.Int32,System.Int32)
    name: SetPaletteColors
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetPaletteColors_System_IntPtr_System_Span_SharpSDL3_Structs_Color__System_Int32_System_Int32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: SharpSDL3.Structs.Color
    name: Color
    href: SharpSDL3.Structs.Color.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetPaletteColors(System.IntPtr,System.Span{SharpSDL3.Structs.Color},System.Int32,System.Int32)
    name: SetPaletteColors
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetPaletteColors_System_IntPtr_System_Span_SharpSDL3_Structs_Color__System_Int32_System_Int32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: SharpSDL3.Structs.Color
    name: Color
    href: SharpSDL3.Structs.Color.html
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.SetSurfacePalette(System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.SetSurfacePalette(System.IntPtr,System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetSurfacePalette_System_IntPtr_System_IntPtr_
  name: SetSurfacePalette(nint, nint)
  nameWithType: Sdl.SetSurfacePalette(nint, nint)
  fullName: SharpSDL3.Sdl.SetSurfacePalette(nint, nint)
  nameWithType.vb: Sdl.SetSurfacePalette(IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.SetSurfacePalette(System.IntPtr, System.IntPtr)
  name.vb: SetSurfacePalette(IntPtr, IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetSurfacePalette(System.IntPtr,System.IntPtr)
    name: SetSurfacePalette
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetSurfacePalette_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetSurfacePalette(System.IntPtr,System.IntPtr)
    name: SetSurfacePalette
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetSurfacePalette_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.CreatePalette*
  commentId: Overload:SharpSDL3.Sdl.CreatePalette
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreatePalette_System_Int32_
  name: CreatePalette
  nameWithType: Sdl.CreatePalette
  fullName: SharpSDL3.Sdl.CreatePalette
- uid: SharpSDL3.Sdl.CreateWindowWithProperties(System.UInt32)
  commentId: M:SharpSDL3.Sdl.CreateWindowWithProperties(System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateWindowWithProperties_System_UInt32_
  name: CreateWindowWithProperties(uint)
  nameWithType: Sdl.CreateWindowWithProperties(uint)
  fullName: SharpSDL3.Sdl.CreateWindowWithProperties(uint)
  nameWithType.vb: Sdl.CreateWindowWithProperties(UInteger)
  fullName.vb: SharpSDL3.Sdl.CreateWindowWithProperties(UInteger)
  name.vb: CreateWindowWithProperties(UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.CreateWindowWithProperties(System.UInt32)
    name: CreateWindowWithProperties
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateWindowWithProperties_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.CreateWindowWithProperties(System.UInt32)
    name: CreateWindowWithProperties
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateWindowWithProperties_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.DestroyWindow(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.DestroyWindow(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyWindow_System_IntPtr_
  name: DestroyWindow(nint)
  nameWithType: Sdl.DestroyWindow(nint)
  fullName: SharpSDL3.Sdl.DestroyWindow(nint)
  nameWithType.vb: Sdl.DestroyWindow(IntPtr)
  fullName.vb: SharpSDL3.Sdl.DestroyWindow(System.IntPtr)
  name.vb: DestroyWindow(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.DestroyWindow(System.IntPtr)
    name: DestroyWindow
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyWindow_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.DestroyWindow(System.IntPtr)
    name: DestroyWindow
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyWindow_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GetWindowParent(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetWindowParent(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowParent_System_IntPtr_
  name: GetWindowParent(nint)
  nameWithType: Sdl.GetWindowParent(nint)
  fullName: SharpSDL3.Sdl.GetWindowParent(nint)
  nameWithType.vb: Sdl.GetWindowParent(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetWindowParent(System.IntPtr)
  name.vb: GetWindowParent(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetWindowParent(System.IntPtr)
    name: GetWindowParent
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowParent_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetWindowParent(System.IntPtr)
    name: GetWindowParent
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowParent_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Enums.WindowFlags.Tooltip
  commentId: F:SharpSDL3.Enums.WindowFlags.Tooltip
  href: SharpSDL3.Enums.WindowFlags.html#SharpSDL3_Enums_WindowFlags_Tooltip
  name: Tooltip
  nameWithType: WindowFlags.Tooltip
  fullName: SharpSDL3.Enums.WindowFlags.Tooltip
- uid: SharpSDL3.Enums.WindowFlags.PopupMenu
  commentId: F:SharpSDL3.Enums.WindowFlags.PopupMenu
  href: SharpSDL3.Enums.WindowFlags.html#SharpSDL3_Enums_WindowFlags_PopupMenu
  name: PopupMenu
  nameWithType: WindowFlags.PopupMenu
  fullName: SharpSDL3.Enums.WindowFlags.PopupMenu
- uid: SharpSDL3.Sdl.CreatePopupWindow*
  commentId: Overload:SharpSDL3.Sdl.CreatePopupWindow
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreatePopupWindow_System_IntPtr_System_Int32_System_Int32_System_Int32_System_Int32_SharpSDL3_Enums_WindowFlags_
  name: CreatePopupWindow
  nameWithType: Sdl.CreatePopupWindow
  fullName: SharpSDL3.Sdl.CreatePopupWindow
- uid: SharpSDL3.Sdl.DestroyProperties(System.UInt32)
  commentId: M:SharpSDL3.Sdl.DestroyProperties(System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyProperties_System_UInt32_
  name: DestroyProperties(uint)
  nameWithType: Sdl.DestroyProperties(uint)
  fullName: SharpSDL3.Sdl.DestroyProperties(uint)
  nameWithType.vb: Sdl.DestroyProperties(UInteger)
  fullName.vb: SharpSDL3.Sdl.DestroyProperties(UInteger)
  name.vb: DestroyProperties(UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.DestroyProperties(System.UInt32)
    name: DestroyProperties
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyProperties_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.DestroyProperties(System.UInt32)
    name: DestroyProperties
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyProperties_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.CreateProperties*
  commentId: Overload:SharpSDL3.Sdl.CreateProperties
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateProperties
  name: CreateProperties
  nameWithType: Sdl.CreateProperties
  fullName: SharpSDL3.Sdl.CreateProperties
- uid: SharpSDL3.Sdl.CreateSurfaceFrom(System.Int32,System.Int32,SharpSDL3.Enums.PixelFormat,System.IntPtr,System.Int32)
  commentId: M:SharpSDL3.Sdl.CreateSurfaceFrom(System.Int32,System.Int32,SharpSDL3.Enums.PixelFormat,System.IntPtr,System.Int32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateSurfaceFrom_System_Int32_System_Int32_SharpSDL3_Enums_PixelFormat_System_IntPtr_System_Int32_
  name: CreateSurfaceFrom(int, int, PixelFormat, nint, int)
  nameWithType: Sdl.CreateSurfaceFrom(int, int, PixelFormat, nint, int)
  fullName: SharpSDL3.Sdl.CreateSurfaceFrom(int, int, SharpSDL3.Enums.PixelFormat, nint, int)
  nameWithType.vb: Sdl.CreateSurfaceFrom(Integer, Integer, PixelFormat, IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.CreateSurfaceFrom(Integer, Integer, SharpSDL3.Enums.PixelFormat, System.IntPtr, Integer)
  name.vb: CreateSurfaceFrom(Integer, Integer, PixelFormat, IntPtr, Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.CreateSurfaceFrom(System.Int32,System.Int32,SharpSDL3.Enums.PixelFormat,System.IntPtr,System.Int32)
    name: CreateSurfaceFrom
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateSurfaceFrom_System_Int32_System_Int32_SharpSDL3_Enums_PixelFormat_System_IntPtr_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.PixelFormat
    name: PixelFormat
    href: SharpSDL3.Enums.PixelFormat.html
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.CreateSurfaceFrom(System.Int32,System.Int32,SharpSDL3.Enums.PixelFormat,System.IntPtr,System.Int32)
    name: CreateSurfaceFrom
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateSurfaceFrom_System_Int32_System_Int32_SharpSDL3_Enums_PixelFormat_System_IntPtr_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.PixelFormat
    name: PixelFormat
    href: SharpSDL3.Enums.PixelFormat.html
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.CreateSurface*
  commentId: Overload:SharpSDL3.Sdl.CreateSurface
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateSurface_System_Int32_System_Int32_SharpSDL3_Enums_PixelFormat_
  name: CreateSurface
  nameWithType: Sdl.CreateSurface
  fullName: SharpSDL3.Sdl.CreateSurface
- uid: SharpSDL3.Sdl.CreateSurface(System.Int32,System.Int32,SharpSDL3.Enums.PixelFormat)
  commentId: M:SharpSDL3.Sdl.CreateSurface(System.Int32,System.Int32,SharpSDL3.Enums.PixelFormat)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateSurface_System_Int32_System_Int32_SharpSDL3_Enums_PixelFormat_
  name: CreateSurface(int, int, PixelFormat)
  nameWithType: Sdl.CreateSurface(int, int, PixelFormat)
  fullName: SharpSDL3.Sdl.CreateSurface(int, int, SharpSDL3.Enums.PixelFormat)
  nameWithType.vb: Sdl.CreateSurface(Integer, Integer, PixelFormat)
  fullName.vb: SharpSDL3.Sdl.CreateSurface(Integer, Integer, SharpSDL3.Enums.PixelFormat)
  name.vb: CreateSurface(Integer, Integer, PixelFormat)
  spec.csharp:
  - uid: SharpSDL3.Sdl.CreateSurface(System.Int32,System.Int32,SharpSDL3.Enums.PixelFormat)
    name: CreateSurface
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateSurface_System_Int32_System_Int32_SharpSDL3_Enums_PixelFormat_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.PixelFormat
    name: PixelFormat
    href: SharpSDL3.Enums.PixelFormat.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.CreateSurface(System.Int32,System.Int32,SharpSDL3.Enums.PixelFormat)
    name: CreateSurface
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateSurface_System_Int32_System_Int32_SharpSDL3_Enums_PixelFormat_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.PixelFormat
    name: PixelFormat
    href: SharpSDL3.Enums.PixelFormat.html
  - name: )
- uid: SharpSDL3.Sdl.CreateSurfaceFrom*
  commentId: Overload:SharpSDL3.Sdl.CreateSurfaceFrom
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateSurfaceFrom_System_Int32_System_Int32_SharpSDL3_Enums_PixelFormat_System_IntPtr_System_Int32_
  name: CreateSurfaceFrom
  nameWithType: Sdl.CreateSurfaceFrom
  fullName: SharpSDL3.Sdl.CreateSurfaceFrom
- uid: SharpSDL3.Sdl.CreateSurfacePalette*
  commentId: Overload:SharpSDL3.Sdl.CreateSurfacePalette
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateSurfacePalette_System_IntPtr_
  name: CreateSurfacePalette
  nameWithType: Sdl.CreateSurfacePalette
  fullName: SharpSDL3.Sdl.CreateSurfacePalette
- uid: SharpSDL3.Sdl.CreateThreadRuntime*
  commentId: Overload:SharpSDL3.Sdl.CreateThreadRuntime
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateThreadRuntime_SharpSDL3_Delegates_SdlThreadFunction_System_String_System_IntPtr_System_IntPtr_System_IntPtr_
  name: CreateThreadRuntime
  nameWithType: Sdl.CreateThreadRuntime
  fullName: SharpSDL3.Sdl.CreateThreadRuntime
- uid: SharpSDL3.Delegates.SdlThreadFunction
  commentId: T:SharpSDL3.Delegates.SdlThreadFunction
  parent: SharpSDL3
  href: SharpSDL3.Delegates.html
  name: Delegates.SdlThreadFunction
  nameWithType: Delegates.SdlThreadFunction
  fullName: SharpSDL3.Delegates.SdlThreadFunction
  spec.csharp:
  - uid: SharpSDL3.Delegates
    name: Delegates
    href: SharpSDL3.Delegates.html
  - name: .
  - uid: SharpSDL3.Delegates.SdlThreadFunction
    name: SdlThreadFunction
    href: SharpSDL3.Delegates.SdlThreadFunction.html
  spec.vb:
  - uid: SharpSDL3.Delegates
    name: Delegates
    href: SharpSDL3.Delegates.html
  - name: .
  - uid: SharpSDL3.Delegates.SdlThreadFunction
    name: SdlThreadFunction
    href: SharpSDL3.Delegates.SdlThreadFunction.html
- uid: SharpSDL3.Sdl.CreateThreadWithPropertiesRuntime*
  commentId: Overload:SharpSDL3.Sdl.CreateThreadWithPropertiesRuntime
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateThreadWithPropertiesRuntime_System_UInt32_System_IntPtr_System_IntPtr_
  name: CreateThreadWithPropertiesRuntime
  nameWithType: Sdl.CreateThreadWithPropertiesRuntime
  fullName: SharpSDL3.Sdl.CreateThreadWithPropertiesRuntime
- uid: SharpSDL3.Sdl.CreateWindowAndRenderer(System.String,System.Int32,System.Int32,SharpSDL3.Enums.WindowFlags,System.IntPtr@,System.IntPtr@)
  commentId: M:SharpSDL3.Sdl.CreateWindowAndRenderer(System.String,System.Int32,System.Int32,SharpSDL3.Enums.WindowFlags,System.IntPtr@,System.IntPtr@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateWindowAndRenderer_System_String_System_Int32_System_Int32_SharpSDL3_Enums_WindowFlags_System_IntPtr__System_IntPtr__
  name: CreateWindowAndRenderer(string, int, int, WindowFlags, out nint, out nint)
  nameWithType: Sdl.CreateWindowAndRenderer(string, int, int, WindowFlags, out nint, out nint)
  fullName: SharpSDL3.Sdl.CreateWindowAndRenderer(string, int, int, SharpSDL3.Enums.WindowFlags, out nint, out nint)
  nameWithType.vb: Sdl.CreateWindowAndRenderer(String, Integer, Integer, WindowFlags, IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.CreateWindowAndRenderer(String, Integer, Integer, SharpSDL3.Enums.WindowFlags, System.IntPtr, System.IntPtr)
  name.vb: CreateWindowAndRenderer(String, Integer, Integer, WindowFlags, IntPtr, IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.CreateWindowAndRenderer(System.String,System.Int32,System.Int32,SharpSDL3.Enums.WindowFlags,System.IntPtr@,System.IntPtr@)
    name: CreateWindowAndRenderer
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateWindowAndRenderer_System_String_System_Int32_System_Int32_SharpSDL3_Enums_WindowFlags_System_IntPtr__System_IntPtr__
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.WindowFlags
    name: WindowFlags
    href: SharpSDL3.Enums.WindowFlags.html
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.CreateWindowAndRenderer(System.String,System.Int32,System.Int32,SharpSDL3.Enums.WindowFlags,System.IntPtr@,System.IntPtr@)
    name: CreateWindowAndRenderer
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateWindowAndRenderer_System_String_System_Int32_System_Int32_SharpSDL3_Enums_WindowFlags_System_IntPtr__System_IntPtr__
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.WindowFlags
    name: WindowFlags
    href: SharpSDL3.Enums.WindowFlags.html
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.CreatePopupWindow(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,SharpSDL3.Enums.WindowFlags)
  commentId: M:SharpSDL3.Sdl.CreatePopupWindow(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,SharpSDL3.Enums.WindowFlags)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreatePopupWindow_System_IntPtr_System_Int32_System_Int32_System_Int32_System_Int32_SharpSDL3_Enums_WindowFlags_
  name: CreatePopupWindow(nint, int, int, int, int, WindowFlags)
  nameWithType: Sdl.CreatePopupWindow(nint, int, int, int, int, WindowFlags)
  fullName: SharpSDL3.Sdl.CreatePopupWindow(nint, int, int, int, int, SharpSDL3.Enums.WindowFlags)
  nameWithType.vb: Sdl.CreatePopupWindow(IntPtr, Integer, Integer, Integer, Integer, WindowFlags)
  fullName.vb: SharpSDL3.Sdl.CreatePopupWindow(System.IntPtr, Integer, Integer, Integer, Integer, SharpSDL3.Enums.WindowFlags)
  name.vb: CreatePopupWindow(IntPtr, Integer, Integer, Integer, Integer, WindowFlags)
  spec.csharp:
  - uid: SharpSDL3.Sdl.CreatePopupWindow(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,SharpSDL3.Enums.WindowFlags)
    name: CreatePopupWindow
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreatePopupWindow_System_IntPtr_System_Int32_System_Int32_System_Int32_System_Int32_SharpSDL3_Enums_WindowFlags_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.WindowFlags
    name: WindowFlags
    href: SharpSDL3.Enums.WindowFlags.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.CreatePopupWindow(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,SharpSDL3.Enums.WindowFlags)
    name: CreatePopupWindow
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreatePopupWindow_System_IntPtr_System_Int32_System_Int32_System_Int32_System_Int32_SharpSDL3_Enums_WindowFlags_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.WindowFlags
    name: WindowFlags
    href: SharpSDL3.Enums.WindowFlags.html
  - name: )
- uid: SharpSDL3.Sdl.CreateWindow*
  commentId: Overload:SharpSDL3.Sdl.CreateWindow
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateWindow_System_String_System_Int32_System_Int32_SharpSDL3_Enums_WindowFlags_
  name: CreateWindow
  nameWithType: Sdl.CreateWindow
  fullName: SharpSDL3.Sdl.CreateWindow
- uid: SharpSDL3.Sdl.CreateWindowWithProperties*
  commentId: Overload:SharpSDL3.Sdl.CreateWindowWithProperties
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateWindowWithProperties_System_UInt32_
  name: CreateWindowWithProperties
  nameWithType: Sdl.CreateWindowWithProperties
  fullName: SharpSDL3.Sdl.CreateWindowWithProperties
- uid: SharpSDL3.Sdl.CreatePalette(System.Int32)
  commentId: M:SharpSDL3.Sdl.CreatePalette(System.Int32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreatePalette_System_Int32_
  name: CreatePalette(int)
  nameWithType: Sdl.CreatePalette(int)
  fullName: SharpSDL3.Sdl.CreatePalette(int)
  nameWithType.vb: Sdl.CreatePalette(Integer)
  fullName.vb: SharpSDL3.Sdl.CreatePalette(Integer)
  name.vb: CreatePalette(Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.CreatePalette(System.Int32)
    name: CreatePalette
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreatePalette_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.CreatePalette(System.Int32)
    name: CreatePalette
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreatePalette_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.DestroyPalette*
  commentId: Overload:SharpSDL3.Sdl.DestroyPalette
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyPalette_System_IntPtr_
  name: DestroyPalette
  nameWithType: Sdl.DestroyPalette
  fullName: SharpSDL3.Sdl.DestroyPalette
- uid: SharpSDL3.Sdl.DestroyProperties*
  commentId: Overload:SharpSDL3.Sdl.DestroyProperties
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyProperties_System_UInt32_
  name: DestroyProperties
  nameWithType: Sdl.DestroyProperties
  fullName: SharpSDL3.Sdl.DestroyProperties
- uid: SharpSDL3.Sdl.DestroySurface*
  commentId: Overload:SharpSDL3.Sdl.DestroySurface
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroySurface_System_IntPtr_
  name: DestroySurface
  nameWithType: Sdl.DestroySurface
  fullName: SharpSDL3.Sdl.DestroySurface
- uid: SharpSDL3.Sdl.DestroyWindow*
  commentId: Overload:SharpSDL3.Sdl.DestroyWindow
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyWindow_System_IntPtr_
  name: DestroyWindow
  nameWithType: Sdl.DestroyWindow
  fullName: SharpSDL3.Sdl.DestroyWindow
- uid: SharpSDL3.Sdl.GetWindowSurface(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetWindowSurface(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowSurface_System_IntPtr_
  name: GetWindowSurface(nint)
  nameWithType: Sdl.GetWindowSurface(nint)
  fullName: SharpSDL3.Sdl.GetWindowSurface(nint)
  nameWithType.vb: Sdl.GetWindowSurface(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetWindowSurface(System.IntPtr)
  name.vb: GetWindowSurface(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetWindowSurface(System.IntPtr)
    name: GetWindowSurface
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowSurface_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetWindowSurface(System.IntPtr)
    name: GetWindowSurface
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowSurface_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.WindowHasSurface(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.WindowHasSurface(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WindowHasSurface_System_IntPtr_
  name: WindowHasSurface(nint)
  nameWithType: Sdl.WindowHasSurface(nint)
  fullName: SharpSDL3.Sdl.WindowHasSurface(nint)
  nameWithType.vb: Sdl.WindowHasSurface(IntPtr)
  fullName.vb: SharpSDL3.Sdl.WindowHasSurface(System.IntPtr)
  name.vb: WindowHasSurface(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.WindowHasSurface(System.IntPtr)
    name: WindowHasSurface
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WindowHasSurface_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.WindowHasSurface(System.IntPtr)
    name: WindowHasSurface
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WindowHasSurface_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.DestroyWindowSurface*
  commentId: Overload:SharpSDL3.Sdl.DestroyWindowSurface
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyWindowSurface_System_IntPtr_
  name: DestroyWindowSurface
  nameWithType: Sdl.DestroyWindowSurface
  fullName: SharpSDL3.Sdl.DestroyWindowSurface
- uid: SharpSDL3.Sdl.WaitThread(System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.WaitThread(System.IntPtr,System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WaitThread_System_IntPtr_System_IntPtr_
  name: WaitThread(nint, nint)
  nameWithType: Sdl.WaitThread(nint, nint)
  fullName: SharpSDL3.Sdl.WaitThread(nint, nint)
  nameWithType.vb: Sdl.WaitThread(IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.WaitThread(System.IntPtr, System.IntPtr)
  name.vb: WaitThread(IntPtr, IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.WaitThread(System.IntPtr,System.IntPtr)
    name: WaitThread
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WaitThread_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.WaitThread(System.IntPtr,System.IntPtr)
    name: WaitThread
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WaitThread_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.DetachThread*
  commentId: Overload:SharpSDL3.Sdl.DetachThread
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DetachThread_System_IntPtr_
  name: DetachThread
  nameWithType: Sdl.DetachThread
  fullName: SharpSDL3.Sdl.DetachThread
- uid: SharpSDL3.Sdl.EnableScreenSaver
  commentId: M:SharpSDL3.Sdl.EnableScreenSaver
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_EnableScreenSaver
  name: EnableScreenSaver()
  nameWithType: Sdl.EnableScreenSaver()
  fullName: SharpSDL3.Sdl.EnableScreenSaver()
  spec.csharp:
  - uid: SharpSDL3.Sdl.EnableScreenSaver
    name: EnableScreenSaver
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_EnableScreenSaver
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.EnableScreenSaver
    name: EnableScreenSaver
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_EnableScreenSaver
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.ScreenSaverEnabled
  commentId: M:SharpSDL3.Sdl.ScreenSaverEnabled
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ScreenSaverEnabled
  name: ScreenSaverEnabled()
  nameWithType: Sdl.ScreenSaverEnabled()
  fullName: SharpSDL3.Sdl.ScreenSaverEnabled()
  spec.csharp:
  - uid: SharpSDL3.Sdl.ScreenSaverEnabled
    name: ScreenSaverEnabled
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ScreenSaverEnabled
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.ScreenSaverEnabled
    name: ScreenSaverEnabled
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ScreenSaverEnabled
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.DisableScreenSaver*
  commentId: Overload:SharpSDL3.Sdl.DisableScreenSaver
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DisableScreenSaver
  name: DisableScreenSaver
  nameWithType: Sdl.DisableScreenSaver
  fullName: SharpSDL3.Sdl.DisableScreenSaver
- uid: SharpSDL3.Sdl.DuplicateSurface*
  commentId: Overload:SharpSDL3.Sdl.DuplicateSurface
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DuplicateSurface_System_IntPtr_
  name: DuplicateSurface
  nameWithType: Sdl.DuplicateSurface
  fullName: SharpSDL3.Sdl.DuplicateSurface
- uid: SharpSDL3.Sdl.DisableScreenSaver
  commentId: M:SharpSDL3.Sdl.DisableScreenSaver
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DisableScreenSaver
  name: DisableScreenSaver()
  nameWithType: Sdl.DisableScreenSaver()
  fullName: SharpSDL3.Sdl.DisableScreenSaver()
  spec.csharp:
  - uid: SharpSDL3.Sdl.DisableScreenSaver
    name: DisableScreenSaver
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DisableScreenSaver
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.DisableScreenSaver
    name: DisableScreenSaver
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DisableScreenSaver
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.EnableScreenSaver*
  commentId: Overload:SharpSDL3.Sdl.EnableScreenSaver
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_EnableScreenSaver
  name: EnableScreenSaver
  nameWithType: Sdl.EnableScreenSaver
  fullName: SharpSDL3.Sdl.EnableScreenSaver
- uid: SharpSDL3.Sdl.EnterAppMainCallbacks*
  commentId: Overload:SharpSDL3.Sdl.EnterAppMainCallbacks
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_EnterAppMainCallbacks_System_Int32_System_IntPtr_SharpSDL3_Delegates_SdlAppInitFunc_SharpSDL3_Delegates_SdlAppIterateFunc_SharpSDL3_Delegates_SdlAppEventFunc_SharpSDL3_Delegates_SdlAppQuitFunc_
  name: EnterAppMainCallbacks
  nameWithType: Sdl.EnterAppMainCallbacks
  fullName: SharpSDL3.Sdl.EnterAppMainCallbacks
- uid: SharpSDL3.Delegates.SdlAppInitFunc
  commentId: T:SharpSDL3.Delegates.SdlAppInitFunc
  parent: SharpSDL3
  href: SharpSDL3.Delegates.html
  name: Delegates.SdlAppInitFunc
  nameWithType: Delegates.SdlAppInitFunc
  fullName: SharpSDL3.Delegates.SdlAppInitFunc
  spec.csharp:
  - uid: SharpSDL3.Delegates
    name: Delegates
    href: SharpSDL3.Delegates.html
  - name: .
  - uid: SharpSDL3.Delegates.SdlAppInitFunc
    name: SdlAppInitFunc
    href: SharpSDL3.Delegates.SdlAppInitFunc.html
  spec.vb:
  - uid: SharpSDL3.Delegates
    name: Delegates
    href: SharpSDL3.Delegates.html
  - name: .
  - uid: SharpSDL3.Delegates.SdlAppInitFunc
    name: SdlAppInitFunc
    href: SharpSDL3.Delegates.SdlAppInitFunc.html
- uid: SharpSDL3.Delegates.SdlAppIterateFunc
  commentId: T:SharpSDL3.Delegates.SdlAppIterateFunc
  parent: SharpSDL3
  href: SharpSDL3.Delegates.html
  name: Delegates.SdlAppIterateFunc
  nameWithType: Delegates.SdlAppIterateFunc
  fullName: SharpSDL3.Delegates.SdlAppIterateFunc
  spec.csharp:
  - uid: SharpSDL3.Delegates
    name: Delegates
    href: SharpSDL3.Delegates.html
  - name: .
  - uid: SharpSDL3.Delegates.SdlAppIterateFunc
    name: SdlAppIterateFunc
    href: SharpSDL3.Delegates.SdlAppIterateFunc.html
  spec.vb:
  - uid: SharpSDL3.Delegates
    name: Delegates
    href: SharpSDL3.Delegates.html
  - name: .
  - uid: SharpSDL3.Delegates.SdlAppIterateFunc
    name: SdlAppIterateFunc
    href: SharpSDL3.Delegates.SdlAppIterateFunc.html
- uid: SharpSDL3.Delegates.SdlAppEventFunc
  commentId: T:SharpSDL3.Delegates.SdlAppEventFunc
  parent: SharpSDL3
  href: SharpSDL3.Delegates.html
  name: Delegates.SdlAppEventFunc
  nameWithType: Delegates.SdlAppEventFunc
  fullName: SharpSDL3.Delegates.SdlAppEventFunc
  spec.csharp:
  - uid: SharpSDL3.Delegates
    name: Delegates
    href: SharpSDL3.Delegates.html
  - name: .
  - uid: SharpSDL3.Delegates.SdlAppEventFunc
    name: SdlAppEventFunc
    href: SharpSDL3.Delegates.SdlAppEventFunc.html
  spec.vb:
  - uid: SharpSDL3.Delegates
    name: Delegates
    href: SharpSDL3.Delegates.html
  - name: .
  - uid: SharpSDL3.Delegates.SdlAppEventFunc
    name: SdlAppEventFunc
    href: SharpSDL3.Delegates.SdlAppEventFunc.html
- uid: SharpSDL3.Delegates.SdlAppQuitFunc
  commentId: T:SharpSDL3.Delegates.SdlAppQuitFunc
  parent: SharpSDL3
  href: SharpSDL3.Delegates.html
  name: Delegates.SdlAppQuitFunc
  nameWithType: Delegates.SdlAppQuitFunc
  fullName: SharpSDL3.Delegates.SdlAppQuitFunc
  spec.csharp:
  - uid: SharpSDL3.Delegates
    name: Delegates
    href: SharpSDL3.Delegates.html
  - name: .
  - uid: SharpSDL3.Delegates.SdlAppQuitFunc
    name: SdlAppQuitFunc
    href: SharpSDL3.Delegates.SdlAppQuitFunc.html
  spec.vb:
  - uid: SharpSDL3.Delegates
    name: Delegates
    href: SharpSDL3.Delegates.html
  - name: .
  - uid: SharpSDL3.Delegates.SdlAppQuitFunc
    name: SdlAppQuitFunc
    href: SharpSDL3.Delegates.SdlAppQuitFunc.html
- uid: SharpSDL3.Sdl.EnumerateProperties*
  commentId: Overload:SharpSDL3.Sdl.EnumerateProperties
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_EnumerateProperties_System_UInt32_SharpSDL3_Delegates_SdlEnumeratePropertiesCallback_System_IntPtr_
  name: EnumerateProperties
  nameWithType: Sdl.EnumerateProperties
  fullName: SharpSDL3.Sdl.EnumerateProperties
- uid: SharpSDL3.Delegates.SdlEnumeratePropertiesCallback
  commentId: T:SharpSDL3.Delegates.SdlEnumeratePropertiesCallback
  parent: SharpSDL3
  href: SharpSDL3.Delegates.html
  name: Delegates.SdlEnumeratePropertiesCallback
  nameWithType: Delegates.SdlEnumeratePropertiesCallback
  fullName: SharpSDL3.Delegates.SdlEnumeratePropertiesCallback
  spec.csharp:
  - uid: SharpSDL3.Delegates
    name: Delegates
    href: SharpSDL3.Delegates.html
  - name: .
  - uid: SharpSDL3.Delegates.SdlEnumeratePropertiesCallback
    name: SdlEnumeratePropertiesCallback
    href: SharpSDL3.Delegates.SdlEnumeratePropertiesCallback.html
  spec.vb:
  - uid: SharpSDL3.Delegates
    name: Delegates
    href: SharpSDL3.Delegates.html
  - name: .
  - uid: SharpSDL3.Delegates.SdlEnumeratePropertiesCallback
    name: SdlEnumeratePropertiesCallback
    href: SharpSDL3.Delegates.SdlEnumeratePropertiesCallback.html
- uid: SharpSDL3.Sdl.FillSurfaceRects(System.IntPtr,System.Span{SharpSDL3.Structs.Rect},System.UInt32)
  commentId: M:SharpSDL3.Sdl.FillSurfaceRects(System.IntPtr,System.Span{SharpSDL3.Structs.Rect},System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_FillSurfaceRects_System_IntPtr_System_Span_SharpSDL3_Structs_Rect__System_UInt32_
  name: FillSurfaceRects(nint, Span<Rect>, uint)
  nameWithType: Sdl.FillSurfaceRects(nint, Span<Rect>, uint)
  fullName: SharpSDL3.Sdl.FillSurfaceRects(nint, System.Span<SharpSDL3.Structs.Rect>, uint)
  nameWithType.vb: Sdl.FillSurfaceRects(IntPtr, Span(Of Rect), UInteger)
  fullName.vb: SharpSDL3.Sdl.FillSurfaceRects(System.IntPtr, System.Span(Of SharpSDL3.Structs.Rect), UInteger)
  name.vb: FillSurfaceRects(IntPtr, Span(Of Rect), UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.FillSurfaceRects(System.IntPtr,System.Span{SharpSDL3.Structs.Rect},System.UInt32)
    name: FillSurfaceRects
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_FillSurfaceRects_System_IntPtr_System_Span_SharpSDL3_Structs_Rect__System_UInt32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: SharpSDL3.Structs.Rect
    name: Rect
    href: SharpSDL3.Structs.Rect.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.FillSurfaceRects(System.IntPtr,System.Span{SharpSDL3.Structs.Rect},System.UInt32)
    name: FillSurfaceRects
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_FillSurfaceRects_System_IntPtr_System_Span_SharpSDL3_Structs_Rect__System_UInt32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: SharpSDL3.Structs.Rect
    name: Rect
    href: SharpSDL3.Structs.Rect.html
  - name: )
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.MapRgb(System.IntPtr,System.IntPtr,System.Byte,System.Byte,System.Byte)
  commentId: M:SharpSDL3.Sdl.MapRgb(System.IntPtr,System.IntPtr,System.Byte,System.Byte,System.Byte)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_MapRgb_System_IntPtr_System_IntPtr_System_Byte_System_Byte_System_Byte_
  name: MapRgb(nint, nint, byte, byte, byte)
  nameWithType: Sdl.MapRgb(nint, nint, byte, byte, byte)
  fullName: SharpSDL3.Sdl.MapRgb(nint, nint, byte, byte, byte)
  nameWithType.vb: Sdl.MapRgb(IntPtr, IntPtr, Byte, Byte, Byte)
  fullName.vb: SharpSDL3.Sdl.MapRgb(System.IntPtr, System.IntPtr, Byte, Byte, Byte)
  name.vb: MapRgb(IntPtr, IntPtr, Byte, Byte, Byte)
  spec.csharp:
  - uid: SharpSDL3.Sdl.MapRgb(System.IntPtr,System.IntPtr,System.Byte,System.Byte,System.Byte)
    name: MapRgb
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_MapRgb_System_IntPtr_System_IntPtr_System_Byte_System_Byte_System_Byte_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: ','
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: ','
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.MapRgb(System.IntPtr,System.IntPtr,System.Byte,System.Byte,System.Byte)
    name: MapRgb
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_MapRgb_System_IntPtr_System_IntPtr_System_Byte_System_Byte_System_Byte_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: SharpSDL3.Sdl.MapRgba(System.IntPtr,System.IntPtr,System.Byte,System.Byte,System.Byte,System.Byte)
  commentId: M:SharpSDL3.Sdl.MapRgba(System.IntPtr,System.IntPtr,System.Byte,System.Byte,System.Byte,System.Byte)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_MapRgba_System_IntPtr_System_IntPtr_System_Byte_System_Byte_System_Byte_System_Byte_
  name: MapRgba(nint, nint, byte, byte, byte, byte)
  nameWithType: Sdl.MapRgba(nint, nint, byte, byte, byte, byte)
  fullName: SharpSDL3.Sdl.MapRgba(nint, nint, byte, byte, byte, byte)
  nameWithType.vb: Sdl.MapRgba(IntPtr, IntPtr, Byte, Byte, Byte, Byte)
  fullName.vb: SharpSDL3.Sdl.MapRgba(System.IntPtr, System.IntPtr, Byte, Byte, Byte, Byte)
  name.vb: MapRgba(IntPtr, IntPtr, Byte, Byte, Byte, Byte)
  spec.csharp:
  - uid: SharpSDL3.Sdl.MapRgba(System.IntPtr,System.IntPtr,System.Byte,System.Byte,System.Byte,System.Byte)
    name: MapRgba
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_MapRgba_System_IntPtr_System_IntPtr_System_Byte_System_Byte_System_Byte_System_Byte_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: ','
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: ','
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: ','
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.MapRgba(System.IntPtr,System.IntPtr,System.Byte,System.Byte,System.Byte,System.Byte)
    name: MapRgba
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_MapRgba_System_IntPtr_System_IntPtr_System_Byte_System_Byte_System_Byte_System_Byte_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: SharpSDL3.Sdl.FillSurfaceRect*
  commentId: Overload:SharpSDL3.Sdl.FillSurfaceRect
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_FillSurfaceRect_System_IntPtr_SharpSDL3_Structs_Rect_System_UInt32_
  name: FillSurfaceRect
  nameWithType: Sdl.FillSurfaceRect
  fullName: SharpSDL3.Sdl.FillSurfaceRect
- uid: SharpSDL3.Sdl.FillSurfaceRect(System.IntPtr,SharpSDL3.Structs.Rect,System.UInt32)
  commentId: M:SharpSDL3.Sdl.FillSurfaceRect(System.IntPtr,SharpSDL3.Structs.Rect,System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_FillSurfaceRect_System_IntPtr_SharpSDL3_Structs_Rect_System_UInt32_
  name: FillSurfaceRect(nint, Rect, uint)
  nameWithType: Sdl.FillSurfaceRect(nint, Rect, uint)
  fullName: SharpSDL3.Sdl.FillSurfaceRect(nint, SharpSDL3.Structs.Rect, uint)
  nameWithType.vb: Sdl.FillSurfaceRect(IntPtr, Rect, UInteger)
  fullName.vb: SharpSDL3.Sdl.FillSurfaceRect(System.IntPtr, SharpSDL3.Structs.Rect, UInteger)
  name.vb: FillSurfaceRect(IntPtr, Rect, UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.FillSurfaceRect(System.IntPtr,SharpSDL3.Structs.Rect,System.UInt32)
    name: FillSurfaceRect
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_FillSurfaceRect_System_IntPtr_SharpSDL3_Structs_Rect_System_UInt32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.Rect
    name: Rect
    href: SharpSDL3.Structs.Rect.html
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.FillSurfaceRect(System.IntPtr,SharpSDL3.Structs.Rect,System.UInt32)
    name: FillSurfaceRect
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_FillSurfaceRect_System_IntPtr_SharpSDL3_Structs_Rect_System_UInt32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.Rect
    name: Rect
    href: SharpSDL3.Structs.Rect.html
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.FillSurfaceRects*
  commentId: Overload:SharpSDL3.Sdl.FillSurfaceRects
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_FillSurfaceRects_System_IntPtr_System_Span_SharpSDL3_Structs_Rect__System_UInt32_
  name: FillSurfaceRects
  nameWithType: Sdl.FillSurfaceRects
  fullName: SharpSDL3.Sdl.FillSurfaceRects
- uid: System.Span{SharpSDL3.Structs.Rect}
  commentId: T:System.Span{SharpSDL3.Structs.Rect}
  parent: System
  definition: System.Span`1
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<Rect>
  nameWithType: Span<Rect>
  fullName: System.Span<SharpSDL3.Structs.Rect>
  nameWithType.vb: Span(Of Rect)
  fullName.vb: System.Span(Of SharpSDL3.Structs.Rect)
  name.vb: Span(Of Rect)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: SharpSDL3.Structs.Rect
    name: Rect
    href: SharpSDL3.Structs.Rect.html
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: SharpSDL3.Structs.Rect
    name: Rect
    href: SharpSDL3.Structs.Rect.html
  - name: )
- uid: SharpSDL3.Sdl.FlashWindow*
  commentId: Overload:SharpSDL3.Sdl.FlashWindow
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_FlashWindow_System_IntPtr_SharpSDL3_Enums_FlashOperation_
  name: FlashWindow
  nameWithType: Sdl.FlashWindow
  fullName: SharpSDL3.Sdl.FlashWindow
- uid: SharpSDL3.Enums.FlashOperation
  commentId: T:SharpSDL3.Enums.FlashOperation
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.FlashOperation.html
  name: FlashOperation
  nameWithType: FlashOperation
  fullName: SharpSDL3.Enums.FlashOperation
- uid: SharpSDL3.Sdl.FlipSurface*
  commentId: Overload:SharpSDL3.Sdl.FlipSurface
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_FlipSurface_System_IntPtr_SharpSDL3_Enums_FlipMode_
  name: FlipSurface
  nameWithType: Sdl.FlipSurface
  fullName: SharpSDL3.Sdl.FlipSurface
- uid: SharpSDL3.Sdl.Free*
  commentId: Overload:SharpSDL3.Sdl.Free
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_Free_System_IntPtr_
  name: Free
  nameWithType: Sdl.Free
  fullName: SharpSDL3.Sdl.Free
- uid: SharpSDL3.Sdl.GDKSuspendComplete*
  commentId: Overload:SharpSDL3.Sdl.GDKSuspendComplete
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GDKSuspendComplete
  name: GDKSuspendComplete
  nameWithType: Sdl.GDKSuspendComplete
  fullName: SharpSDL3.Sdl.GDKSuspendComplete
- uid: SharpSDL3.Sdl.SetAppMetadata(System.String,System.String,System.String)
  commentId: M:SharpSDL3.Sdl.SetAppMetadata(System.String,System.String,System.String)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetAppMetadata_System_String_System_String_System_String_
  name: SetAppMetadata(string, string, string)
  nameWithType: Sdl.SetAppMetadata(string, string, string)
  fullName: SharpSDL3.Sdl.SetAppMetadata(string, string, string)
  nameWithType.vb: Sdl.SetAppMetadata(String, String, String)
  fullName.vb: SharpSDL3.Sdl.SetAppMetadata(String, String, String)
  name.vb: SetAppMetadata(String, String, String)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetAppMetadata(System.String,System.String,System.String)
    name: SetAppMetadata
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetAppMetadata_System_String_System_String_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetAppMetadata(System.String,System.String,System.String)
    name: SetAppMetadata
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetAppMetadata_System_String_System_String_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SharpSDL3.Sdl.SetAppMetadataProperty(System.String,System.String)
  commentId: M:SharpSDL3.Sdl.SetAppMetadataProperty(System.String,System.String)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetAppMetadataProperty_System_String_System_String_
  name: SetAppMetadataProperty(string, string)
  nameWithType: Sdl.SetAppMetadataProperty(string, string)
  fullName: SharpSDL3.Sdl.SetAppMetadataProperty(string, string)
  nameWithType.vb: Sdl.SetAppMetadataProperty(String, String)
  fullName.vb: SharpSDL3.Sdl.SetAppMetadataProperty(String, String)
  name.vb: SetAppMetadataProperty(String, String)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetAppMetadataProperty(System.String,System.String)
    name: SetAppMetadataProperty
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetAppMetadataProperty_System_String_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetAppMetadataProperty(System.String,System.String)
    name: SetAppMetadataProperty
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetAppMetadataProperty_System_String_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SharpSDL3.Sdl.GetAppMetadataProperty*
  commentId: Overload:SharpSDL3.Sdl.GetAppMetadataProperty
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAppMetadataProperty_System_String_
  name: GetAppMetadataProperty
  nameWithType: Sdl.GetAppMetadataProperty
  fullName: SharpSDL3.Sdl.GetAppMetadataProperty
- uid: SharpSDL3.Sdl.GetPropertyType(System.UInt32,System.String)
  commentId: M:SharpSDL3.Sdl.GetPropertyType(System.UInt32,System.String)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetPropertyType_System_UInt32_System_String_
  name: GetPropertyType(uint, string)
  nameWithType: Sdl.GetPropertyType(uint, string)
  fullName: SharpSDL3.Sdl.GetPropertyType(uint, string)
  nameWithType.vb: Sdl.GetPropertyType(UInteger, String)
  fullName.vb: SharpSDL3.Sdl.GetPropertyType(UInteger, String)
  name.vb: GetPropertyType(UInteger, String)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetPropertyType(System.UInt32,System.String)
    name: GetPropertyType
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetPropertyType_System_UInt32_System_String_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetPropertyType(System.UInt32,System.String)
    name: GetPropertyType
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetPropertyType_System_UInt32_System_String_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SharpSDL3.Sdl.HasProperty(System.UInt32,System.String)
  commentId: M:SharpSDL3.Sdl.HasProperty(System.UInt32,System.String)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasProperty_System_UInt32_System_String_
  name: HasProperty(uint, string)
  nameWithType: Sdl.HasProperty(uint, string)
  fullName: SharpSDL3.Sdl.HasProperty(uint, string)
  nameWithType.vb: Sdl.HasProperty(UInteger, String)
  fullName.vb: SharpSDL3.Sdl.HasProperty(UInteger, String)
  name.vb: HasProperty(UInteger, String)
  spec.csharp:
  - uid: SharpSDL3.Sdl.HasProperty(System.UInt32,System.String)
    name: HasProperty
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasProperty_System_UInt32_System_String_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.HasProperty(System.UInt32,System.String)
    name: HasProperty
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasProperty_System_UInt32_System_String_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SharpSDL3.Sdl.SetBooleanProperty(System.UInt32,System.String,System.Boolean)
  commentId: M:SharpSDL3.Sdl.SetBooleanProperty(System.UInt32,System.String,System.Boolean)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetBooleanProperty_System_UInt32_System_String_System_Boolean_
  name: SetBooleanProperty(uint, string, bool)
  nameWithType: Sdl.SetBooleanProperty(uint, string, bool)
  fullName: SharpSDL3.Sdl.SetBooleanProperty(uint, string, bool)
  nameWithType.vb: Sdl.SetBooleanProperty(UInteger, String, Boolean)
  fullName.vb: SharpSDL3.Sdl.SetBooleanProperty(UInteger, String, Boolean)
  name.vb: SetBooleanProperty(UInteger, String, Boolean)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetBooleanProperty(System.UInt32,System.String,System.Boolean)
    name: SetBooleanProperty
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetBooleanProperty_System_UInt32_System_String_System_Boolean_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetBooleanProperty(System.UInt32,System.String,System.Boolean)
    name: SetBooleanProperty
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetBooleanProperty_System_UInt32_System_String_System_Boolean_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: SharpSDL3.Sdl.GetBooleanProperty*
  commentId: Overload:SharpSDL3.Sdl.GetBooleanProperty
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetBooleanProperty_System_UInt32_System_String_System_Boolean_
  name: GetBooleanProperty
  nameWithType: Sdl.GetBooleanProperty
  fullName: SharpSDL3.Sdl.GetBooleanProperty
- uid: SharpSDL3.Sdl.HasClipboardData(System.String)
  commentId: M:SharpSDL3.Sdl.HasClipboardData(System.String)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasClipboardData_System_String_
  name: HasClipboardData(string)
  nameWithType: Sdl.HasClipboardData(string)
  fullName: SharpSDL3.Sdl.HasClipboardData(string)
  nameWithType.vb: Sdl.HasClipboardData(String)
  fullName.vb: SharpSDL3.Sdl.HasClipboardData(String)
  name.vb: HasClipboardData(String)
  spec.csharp:
  - uid: SharpSDL3.Sdl.HasClipboardData(System.String)
    name: HasClipboardData
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasClipboardData_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.HasClipboardData(System.String)
    name: HasClipboardData
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasClipboardData_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SharpSDL3.Sdl.GetClipboardData*
  commentId: Overload:SharpSDL3.Sdl.GetClipboardData
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetClipboardData_System_String_
  name: GetClipboardData
  nameWithType: Sdl.GetClipboardData
  fullName: SharpSDL3.Sdl.GetClipboardData
- uid: SharpSDL3.Sdl.GetClipboardMimeTypes*
  commentId: Overload:SharpSDL3.Sdl.GetClipboardMimeTypes
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetClipboardMimeTypes
  name: GetClipboardMimeTypes
  nameWithType: Sdl.GetClipboardMimeTypes
  fullName: SharpSDL3.Sdl.GetClipboardMimeTypes
- uid: SharpSDL3.Sdl.HasClipboardText
  commentId: M:SharpSDL3.Sdl.HasClipboardText
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasClipboardText
  name: HasClipboardText()
  nameWithType: Sdl.HasClipboardText()
  fullName: SharpSDL3.Sdl.HasClipboardText()
  spec.csharp:
  - uid: SharpSDL3.Sdl.HasClipboardText
    name: HasClipboardText
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasClipboardText
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.HasClipboardText
    name: HasClipboardText
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasClipboardText
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.SetClipboardText(System.String)
  commentId: M:SharpSDL3.Sdl.SetClipboardText(System.String)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetClipboardText_System_String_
  name: SetClipboardText(string)
  nameWithType: Sdl.SetClipboardText(string)
  fullName: SharpSDL3.Sdl.SetClipboardText(string)
  nameWithType.vb: Sdl.SetClipboardText(String)
  fullName.vb: SharpSDL3.Sdl.SetClipboardText(String)
  name.vb: SetClipboardText(String)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetClipboardText(System.String)
    name: SetClipboardText
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetClipboardText_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetClipboardText(System.String)
    name: SetClipboardText
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetClipboardText_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SharpSDL3.Sdl.GetClipboardText*
  commentId: Overload:SharpSDL3.Sdl.GetClipboardText
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetClipboardText
  name: GetClipboardText
  nameWithType: Sdl.GetClipboardText
  fullName: SharpSDL3.Sdl.GetClipboardText
- uid: SharpSDL3.Sdl.GetDisplays
  commentId: M:SharpSDL3.Sdl.GetDisplays
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetDisplays
  name: GetDisplays()
  nameWithType: Sdl.GetDisplays()
  fullName: SharpSDL3.Sdl.GetDisplays()
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetDisplays
    name: GetDisplays
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetDisplays
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetDisplays
    name: GetDisplays
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetDisplays
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.GetFullscreenDisplayModes(System.UInt32)
  commentId: M:SharpSDL3.Sdl.GetFullscreenDisplayModes(System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetFullscreenDisplayModes_System_UInt32_
  name: GetFullscreenDisplayModes(uint)
  nameWithType: Sdl.GetFullscreenDisplayModes(uint)
  fullName: SharpSDL3.Sdl.GetFullscreenDisplayModes(uint)
  nameWithType.vb: Sdl.GetFullscreenDisplayModes(UInteger)
  fullName.vb: SharpSDL3.Sdl.GetFullscreenDisplayModes(UInteger)
  name.vb: GetFullscreenDisplayModes(UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetFullscreenDisplayModes(System.UInt32)
    name: GetFullscreenDisplayModes
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetFullscreenDisplayModes_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetFullscreenDisplayModes(System.UInt32)
    name: GetFullscreenDisplayModes
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetFullscreenDisplayModes_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.GetClosestFullscreenDisplayMode*
  commentId: Overload:SharpSDL3.Sdl.GetClosestFullscreenDisplayMode
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetClosestFullscreenDisplayMode_System_UInt32_System_Int32_System_Int32_System_Single_System_Boolean_SharpSDL3_Structs_DisplayMode__
  name: GetClosestFullscreenDisplayMode
  nameWithType: Sdl.GetClosestFullscreenDisplayMode
  fullName: SharpSDL3.Sdl.GetClosestFullscreenDisplayMode
- uid: SharpSDL3.Structs.DisplayMode
  commentId: T:SharpSDL3.Structs.DisplayMode
  parent: SharpSDL3.Structs
  href: SharpSDL3.Structs.DisplayMode.html
  name: DisplayMode
  nameWithType: DisplayMode
  fullName: SharpSDL3.Structs.DisplayMode
- uid: SharpSDL3.Sdl.GetDesktopDisplayMode(System.UInt32)
  commentId: M:SharpSDL3.Sdl.GetDesktopDisplayMode(System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetDesktopDisplayMode_System_UInt32_
  name: GetDesktopDisplayMode(uint)
  nameWithType: Sdl.GetDesktopDisplayMode(uint)
  fullName: SharpSDL3.Sdl.GetDesktopDisplayMode(uint)
  nameWithType.vb: Sdl.GetDesktopDisplayMode(UInteger)
  fullName.vb: SharpSDL3.Sdl.GetDesktopDisplayMode(UInteger)
  name.vb: GetDesktopDisplayMode(UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetDesktopDisplayMode(System.UInt32)
    name: GetDesktopDisplayMode
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetDesktopDisplayMode_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetDesktopDisplayMode(System.UInt32)
    name: GetDesktopDisplayMode
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetDesktopDisplayMode_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.GetCurrentDisplayMode*
  commentId: Overload:SharpSDL3.Sdl.GetCurrentDisplayMode
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetCurrentDisplayMode_System_UInt32_
  name: GetCurrentDisplayMode
  nameWithType: Sdl.GetCurrentDisplayMode
  fullName: SharpSDL3.Sdl.GetCurrentDisplayMode
- uid: SharpSDL3.Sdl.GetCurrentDisplayOrientation*
  commentId: Overload:SharpSDL3.Sdl.GetCurrentDisplayOrientation
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetCurrentDisplayOrientation_System_UInt32_
  name: GetCurrentDisplayOrientation
  nameWithType: Sdl.GetCurrentDisplayOrientation
  fullName: SharpSDL3.Sdl.GetCurrentDisplayOrientation
- uid: SharpSDL3.Enums.DisplayOrientation
  commentId: T:SharpSDL3.Enums.DisplayOrientation
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.DisplayOrientation.html
  name: DisplayOrientation
  nameWithType: DisplayOrientation
  fullName: SharpSDL3.Enums.DisplayOrientation
- uid: SharpSDL3.Sdl.GetThreadId(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetThreadId(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetThreadId_System_IntPtr_
  name: GetThreadId(nint)
  nameWithType: Sdl.GetThreadId(nint)
  fullName: SharpSDL3.Sdl.GetThreadId(nint)
  nameWithType.vb: Sdl.GetThreadId(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetThreadId(System.IntPtr)
  name.vb: GetThreadId(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetThreadId(System.IntPtr)
    name: GetThreadId
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetThreadId_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetThreadId(System.IntPtr)
    name: GetThreadId
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetThreadId_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GetCurrentThreadID*
  commentId: Overload:SharpSDL3.Sdl.GetCurrentThreadID
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetCurrentThreadID
  name: GetCurrentThreadID
  nameWithType: Sdl.GetCurrentThreadID
  fullName: SharpSDL3.Sdl.GetCurrentThreadID
- uid: SharpSDL3.Sdl.GetNumVideoDrivers
  commentId: M:SharpSDL3.Sdl.GetNumVideoDrivers
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetNumVideoDrivers
  name: GetNumVideoDrivers()
  nameWithType: Sdl.GetNumVideoDrivers()
  fullName: SharpSDL3.Sdl.GetNumVideoDrivers()
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetNumVideoDrivers
    name: GetNumVideoDrivers
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetNumVideoDrivers
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetNumVideoDrivers
    name: GetNumVideoDrivers
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetNumVideoDrivers
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.GetVideoDriver(System.Int32)
  commentId: M:SharpSDL3.Sdl.GetVideoDriver(System.Int32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetVideoDriver_System_Int32_
  name: GetVideoDriver(int)
  nameWithType: Sdl.GetVideoDriver(int)
  fullName: SharpSDL3.Sdl.GetVideoDriver(int)
  nameWithType.vb: Sdl.GetVideoDriver(Integer)
  fullName.vb: SharpSDL3.Sdl.GetVideoDriver(Integer)
  name.vb: GetVideoDriver(Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetVideoDriver(System.Int32)
    name: GetVideoDriver
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetVideoDriver_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetVideoDriver(System.Int32)
    name: GetVideoDriver
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetVideoDriver_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.GetCurrentVideoDriver*
  commentId: Overload:SharpSDL3.Sdl.GetCurrentVideoDriver
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetCurrentVideoDriver
  name: GetCurrentVideoDriver
  nameWithType: Sdl.GetCurrentVideoDriver
  fullName: SharpSDL3.Sdl.GetCurrentVideoDriver
- uid: SharpSDL3.Sdl.GetCurrentDisplayMode(System.UInt32)
  commentId: M:SharpSDL3.Sdl.GetCurrentDisplayMode(System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetCurrentDisplayMode_System_UInt32_
  name: GetCurrentDisplayMode(uint)
  nameWithType: Sdl.GetCurrentDisplayMode(uint)
  fullName: SharpSDL3.Sdl.GetCurrentDisplayMode(uint)
  nameWithType.vb: Sdl.GetCurrentDisplayMode(UInteger)
  fullName.vb: SharpSDL3.Sdl.GetCurrentDisplayMode(UInteger)
  name.vb: GetCurrentDisplayMode(UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetCurrentDisplayMode(System.UInt32)
    name: GetCurrentDisplayMode
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetCurrentDisplayMode_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetCurrentDisplayMode(System.UInt32)
    name: GetCurrentDisplayMode
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetCurrentDisplayMode_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.GetDesktopDisplayMode*
  commentId: Overload:SharpSDL3.Sdl.GetDesktopDisplayMode
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetDesktopDisplayMode_System_UInt32_
  name: GetDesktopDisplayMode
  nameWithType: Sdl.GetDesktopDisplayMode
  fullName: SharpSDL3.Sdl.GetDesktopDisplayMode
- uid: SharpSDL3.Sdl.GetDisplayUsableBounds(System.UInt32,SharpSDL3.Structs.Rect@)
  commentId: M:SharpSDL3.Sdl.GetDisplayUsableBounds(System.UInt32,SharpSDL3.Structs.Rect@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetDisplayUsableBounds_System_UInt32_SharpSDL3_Structs_Rect__
  name: GetDisplayUsableBounds(uint, out Rect)
  nameWithType: Sdl.GetDisplayUsableBounds(uint, out Rect)
  fullName: SharpSDL3.Sdl.GetDisplayUsableBounds(uint, out SharpSDL3.Structs.Rect)
  nameWithType.vb: Sdl.GetDisplayUsableBounds(UInteger, Rect)
  fullName.vb: SharpSDL3.Sdl.GetDisplayUsableBounds(UInteger, SharpSDL3.Structs.Rect)
  name.vb: GetDisplayUsableBounds(UInteger, Rect)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetDisplayUsableBounds(System.UInt32,SharpSDL3.Structs.Rect@)
    name: GetDisplayUsableBounds
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetDisplayUsableBounds_System_UInt32_SharpSDL3_Structs_Rect__
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: SharpSDL3.Structs.Rect
    name: Rect
    href: SharpSDL3.Structs.Rect.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetDisplayUsableBounds(System.UInt32,SharpSDL3.Structs.Rect@)
    name: GetDisplayUsableBounds
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetDisplayUsableBounds_System_UInt32_SharpSDL3_Structs_Rect__
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.Rect
    name: Rect
    href: SharpSDL3.Structs.Rect.html
  - name: )
- uid: SharpSDL3.Sdl.GetDisplayBounds*
  commentId: Overload:SharpSDL3.Sdl.GetDisplayBounds
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetDisplayBounds_System_UInt32_SharpSDL3_Structs_Rect__
  name: GetDisplayBounds
  nameWithType: Sdl.GetDisplayBounds
  fullName: SharpSDL3.Sdl.GetDisplayBounds
- uid: SharpSDL3.Sdl.GetWindowDisplayScale(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetWindowDisplayScale(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowDisplayScale_System_IntPtr_
  name: GetWindowDisplayScale(nint)
  nameWithType: Sdl.GetWindowDisplayScale(nint)
  fullName: SharpSDL3.Sdl.GetWindowDisplayScale(nint)
  nameWithType.vb: Sdl.GetWindowDisplayScale(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetWindowDisplayScale(System.IntPtr)
  name.vb: GetWindowDisplayScale(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetWindowDisplayScale(System.IntPtr)
    name: GetWindowDisplayScale
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowDisplayScale_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetWindowDisplayScale(System.IntPtr)
    name: GetWindowDisplayScale
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowDisplayScale_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GetDisplayContentScale*
  commentId: Overload:SharpSDL3.Sdl.GetDisplayContentScale
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetDisplayContentScale_System_UInt32_
  name: GetDisplayContentScale
  nameWithType: Sdl.GetDisplayContentScale
  fullName: SharpSDL3.Sdl.GetDisplayContentScale
- uid: SharpSDL3.Sdl.GetDisplayBounds(System.UInt32,SharpSDL3.Structs.Rect@)
  commentId: M:SharpSDL3.Sdl.GetDisplayBounds(System.UInt32,SharpSDL3.Structs.Rect@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetDisplayBounds_System_UInt32_SharpSDL3_Structs_Rect__
  name: GetDisplayBounds(uint, out Rect)
  nameWithType: Sdl.GetDisplayBounds(uint, out Rect)
  fullName: SharpSDL3.Sdl.GetDisplayBounds(uint, out SharpSDL3.Structs.Rect)
  nameWithType.vb: Sdl.GetDisplayBounds(UInteger, Rect)
  fullName.vb: SharpSDL3.Sdl.GetDisplayBounds(UInteger, SharpSDL3.Structs.Rect)
  name.vb: GetDisplayBounds(UInteger, Rect)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetDisplayBounds(System.UInt32,SharpSDL3.Structs.Rect@)
    name: GetDisplayBounds
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetDisplayBounds_System_UInt32_SharpSDL3_Structs_Rect__
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: SharpSDL3.Structs.Rect
    name: Rect
    href: SharpSDL3.Structs.Rect.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetDisplayBounds(System.UInt32,SharpSDL3.Structs.Rect@)
    name: GetDisplayBounds
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetDisplayBounds_System_UInt32_SharpSDL3_Structs_Rect__
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.Rect
    name: Rect
    href: SharpSDL3.Structs.Rect.html
  - name: )
- uid: SharpSDL3.Sdl.GetDisplayForPoint*
  commentId: Overload:SharpSDL3.Sdl.GetDisplayForPoint
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetDisplayForPoint_SharpSDL3_Structs_Point__
  name: GetDisplayForPoint
  nameWithType: Sdl.GetDisplayForPoint
  fullName: SharpSDL3.Sdl.GetDisplayForPoint
- uid: SharpSDL3.Structs.Point
  commentId: T:SharpSDL3.Structs.Point
  parent: SharpSDL3.Structs
  href: SharpSDL3.Structs.Point.html
  name: Point
  nameWithType: Point
  fullName: SharpSDL3.Structs.Point
- uid: SharpSDL3.Sdl.GetDisplayForRect*
  commentId: Overload:SharpSDL3.Sdl.GetDisplayForRect
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetDisplayForRect_SharpSDL3_Structs_Rect__
  name: GetDisplayForRect
  nameWithType: Sdl.GetDisplayForRect
  fullName: SharpSDL3.Sdl.GetDisplayForRect
- uid: SharpSDL3.Sdl.GetDisplayForWindow*
  commentId: Overload:SharpSDL3.Sdl.GetDisplayForWindow
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetDisplayForWindow_System_IntPtr_
  name: GetDisplayForWindow
  nameWithType: Sdl.GetDisplayForWindow
  fullName: SharpSDL3.Sdl.GetDisplayForWindow
- uid: SharpSDL3.Sdl.GetDisplayName*
  commentId: Overload:SharpSDL3.Sdl.GetDisplayName
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetDisplayName_System_UInt32_
  name: GetDisplayName
  nameWithType: Sdl.GetDisplayName
  fullName: SharpSDL3.Sdl.GetDisplayName
- uid: SharpSDL3.Sdl.GetDisplayProperties*
  commentId: Overload:SharpSDL3.Sdl.GetDisplayProperties
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetDisplayProperties_System_UInt32_
  name: GetDisplayProperties
  nameWithType: Sdl.GetDisplayProperties
  fullName: SharpSDL3.Sdl.GetDisplayProperties
- uid: SharpSDL3.Sdl.GetDisplays*
  commentId: Overload:SharpSDL3.Sdl.GetDisplays
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetDisplays
  name: GetDisplays
  nameWithType: Sdl.GetDisplays
  fullName: SharpSDL3.Sdl.GetDisplays
- uid: SharpSDL3.Sdl.GetDisplayUsableBounds*
  commentId: Overload:SharpSDL3.Sdl.GetDisplayUsableBounds
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetDisplayUsableBounds_System_UInt32_SharpSDL3_Structs_Rect__
  name: GetDisplayUsableBounds
  nameWithType: Sdl.GetDisplayUsableBounds
  fullName: SharpSDL3.Sdl.GetDisplayUsableBounds
- uid: SharpSDL3.Sdl.ClearError
  commentId: M:SharpSDL3.Sdl.ClearError
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ClearError
  name: ClearError()
  nameWithType: Sdl.ClearError()
  fullName: SharpSDL3.Sdl.ClearError()
  spec.csharp:
  - uid: SharpSDL3.Sdl.ClearError
    name: ClearError
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ClearError
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.ClearError
    name: ClearError
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ClearError
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.GetError*
  commentId: Overload:SharpSDL3.Sdl.GetError
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetError
  name: GetError
  nameWithType: Sdl.GetError
  fullName: SharpSDL3.Sdl.GetError
- uid: SharpSDL3.Sdl.SetFloatProperty(System.UInt32,System.String,System.Single)
  commentId: M:SharpSDL3.Sdl.SetFloatProperty(System.UInt32,System.String,System.Single)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetFloatProperty_System_UInt32_System_String_System_Single_
  name: SetFloatProperty(uint, string, float)
  nameWithType: Sdl.SetFloatProperty(uint, string, float)
  fullName: SharpSDL3.Sdl.SetFloatProperty(uint, string, float)
  nameWithType.vb: Sdl.SetFloatProperty(UInteger, String, Single)
  fullName.vb: SharpSDL3.Sdl.SetFloatProperty(UInteger, String, Single)
  name.vb: SetFloatProperty(UInteger, String, Single)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetFloatProperty(System.UInt32,System.String,System.Single)
    name: SetFloatProperty
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetFloatProperty_System_UInt32_System_String_System_Single_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetFloatProperty(System.UInt32,System.String,System.Single)
    name: SetFloatProperty
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetFloatProperty_System_UInt32_System_String_System_Single_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: SharpSDL3.Sdl.GetFloatProperty*
  commentId: Overload:SharpSDL3.Sdl.GetFloatProperty
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetFloatProperty_System_UInt32_System_String_System_Single_
  name: GetFloatProperty
  nameWithType: Sdl.GetFloatProperty
  fullName: SharpSDL3.Sdl.GetFloatProperty
- uid: SharpSDL3.Sdl.GetFullscreenDisplayModes*
  commentId: Overload:SharpSDL3.Sdl.GetFullscreenDisplayModes
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetFullscreenDisplayModes_System_UInt32_
  name: GetFullscreenDisplayModes
  nameWithType: Sdl.GetFullscreenDisplayModes
  fullName: SharpSDL3.Sdl.GetFullscreenDisplayModes
- uid: SharpSDL3.Sdl.GetGlobalProperties*
  commentId: Overload:SharpSDL3.Sdl.GetGlobalProperties
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGlobalProperties
  name: GetGlobalProperties
  nameWithType: Sdl.GetGlobalProperties
  fullName: SharpSDL3.Sdl.GetGlobalProperties
- uid: SharpSDL3.Sdl.SetWindowMouseGrab(System.IntPtr,System.Boolean)
  commentId: M:SharpSDL3.Sdl.SetWindowMouseGrab(System.IntPtr,System.Boolean)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowMouseGrab_System_IntPtr_System_Boolean_
  name: SetWindowMouseGrab(nint, bool)
  nameWithType: Sdl.SetWindowMouseGrab(nint, bool)
  fullName: SharpSDL3.Sdl.SetWindowMouseGrab(nint, bool)
  nameWithType.vb: Sdl.SetWindowMouseGrab(IntPtr, Boolean)
  fullName.vb: SharpSDL3.Sdl.SetWindowMouseGrab(System.IntPtr, Boolean)
  name.vb: SetWindowMouseGrab(IntPtr, Boolean)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetWindowMouseGrab(System.IntPtr,System.Boolean)
    name: SetWindowMouseGrab
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowMouseGrab_System_IntPtr_System_Boolean_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetWindowMouseGrab(System.IntPtr,System.Boolean)
    name: SetWindowMouseGrab
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowMouseGrab_System_IntPtr_System_Boolean_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: SharpSDL3.Sdl.SetWindowKeyboardGrab(System.IntPtr,System.Boolean)
  commentId: M:SharpSDL3.Sdl.SetWindowKeyboardGrab(System.IntPtr,System.Boolean)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowKeyboardGrab_System_IntPtr_System_Boolean_
  name: SetWindowKeyboardGrab(nint, bool)
  nameWithType: Sdl.SetWindowKeyboardGrab(nint, bool)
  fullName: SharpSDL3.Sdl.SetWindowKeyboardGrab(nint, bool)
  nameWithType.vb: Sdl.SetWindowKeyboardGrab(IntPtr, Boolean)
  fullName.vb: SharpSDL3.Sdl.SetWindowKeyboardGrab(System.IntPtr, Boolean)
  name.vb: SetWindowKeyboardGrab(IntPtr, Boolean)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetWindowKeyboardGrab(System.IntPtr,System.Boolean)
    name: SetWindowKeyboardGrab
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowKeyboardGrab_System_IntPtr_System_Boolean_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetWindowKeyboardGrab(System.IntPtr,System.Boolean)
    name: SetWindowKeyboardGrab
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowKeyboardGrab_System_IntPtr_System_Boolean_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: SharpSDL3.Sdl.GetGrabbedWindow*
  commentId: Overload:SharpSDL3.Sdl.GetGrabbedWindow
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetGrabbedWindow
  name: GetGrabbedWindow
  nameWithType: Sdl.GetGrabbedWindow
  fullName: SharpSDL3.Sdl.GetGrabbedWindow
- uid: SharpSDL3.Sdl.SetHint(System.String,System.String)
  commentId: M:SharpSDL3.Sdl.SetHint(System.String,System.String)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetHint_System_String_System_String_
  name: SetHint(string, string)
  nameWithType: Sdl.SetHint(string, string)
  fullName: SharpSDL3.Sdl.SetHint(string, string)
  nameWithType.vb: Sdl.SetHint(String, String)
  fullName.vb: SharpSDL3.Sdl.SetHint(String, String)
  name.vb: SetHint(String, String)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetHint(System.String,System.String)
    name: SetHint
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetHint_System_String_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetHint(System.String,System.String)
    name: SetHint
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetHint_System_String_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SharpSDL3.Sdl.SetHintWithPriority(System.String,System.String,SharpSDL3.Enums.HintPriority)
  commentId: M:SharpSDL3.Sdl.SetHintWithPriority(System.String,System.String,SharpSDL3.Enums.HintPriority)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetHintWithPriority_System_String_System_String_SharpSDL3_Enums_HintPriority_
  name: SetHintWithPriority(string, string, HintPriority)
  nameWithType: Sdl.SetHintWithPriority(string, string, HintPriority)
  fullName: SharpSDL3.Sdl.SetHintWithPriority(string, string, SharpSDL3.Enums.HintPriority)
  nameWithType.vb: Sdl.SetHintWithPriority(String, String, HintPriority)
  fullName.vb: SharpSDL3.Sdl.SetHintWithPriority(String, String, SharpSDL3.Enums.HintPriority)
  name.vb: SetHintWithPriority(String, String, HintPriority)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetHintWithPriority(System.String,System.String,SharpSDL3.Enums.HintPriority)
    name: SetHintWithPriority
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetHintWithPriority_System_String_System_String_SharpSDL3_Enums_HintPriority_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.HintPriority
    name: HintPriority
    href: SharpSDL3.Enums.HintPriority.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetHintWithPriority(System.String,System.String,SharpSDL3.Enums.HintPriority)
    name: SetHintWithPriority
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetHintWithPriority_System_String_System_String_SharpSDL3_Enums_HintPriority_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.HintPriority
    name: HintPriority
    href: SharpSDL3.Enums.HintPriority.html
  - name: )
- uid: SharpSDL3.Sdl.GetHint*
  commentId: Overload:SharpSDL3.Sdl.GetHint
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetHint_System_String_
  name: GetHint
  nameWithType: Sdl.GetHint
  fullName: SharpSDL3.Sdl.GetHint
- uid: SharpSDL3.Sdl.GetHint(System.String)
  commentId: M:SharpSDL3.Sdl.GetHint(System.String)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetHint_System_String_
  name: GetHint(string)
  nameWithType: Sdl.GetHint(string)
  fullName: SharpSDL3.Sdl.GetHint(string)
  nameWithType.vb: Sdl.GetHint(String)
  fullName.vb: SharpSDL3.Sdl.GetHint(String)
  name.vb: GetHint(String)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetHint(System.String)
    name: GetHint
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetHint_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetHint(System.String)
    name: GetHint
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetHint_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SharpSDL3.Sdl.GetHintBoolean*
  commentId: Overload:SharpSDL3.Sdl.GetHintBoolean
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetHintBoolean_System_String_System_Boolean_
  name: GetHintBoolean
  nameWithType: Sdl.GetHintBoolean
  fullName: SharpSDL3.Sdl.GetHintBoolean
- uid: SharpSDL3.Sdl.GetKeyboards*
  commentId: Overload:SharpSDL3.Sdl.GetKeyboards
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetKeyboards_System_Int32__
  name: GetKeyboards
  nameWithType: Sdl.GetKeyboards
  fullName: SharpSDL3.Sdl.GetKeyboards
- uid: SharpSDL3.Sdl.GetKeyboardFocus*
  commentId: Overload:SharpSDL3.Sdl.GetKeyboardFocus
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetKeyboardFocus
  name: GetKeyboardFocus
  nameWithType: Sdl.GetKeyboardFocus
  fullName: SharpSDL3.Sdl.GetKeyboardFocus
- uid: SharpSDL3.Sdl.GetKeyboards(System.Int32@)
  commentId: M:SharpSDL3.Sdl.GetKeyboards(System.Int32@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetKeyboards_System_Int32__
  name: GetKeyboards(out int)
  nameWithType: Sdl.GetKeyboards(out int)
  fullName: SharpSDL3.Sdl.GetKeyboards(out int)
  nameWithType.vb: Sdl.GetKeyboards(Integer)
  fullName.vb: SharpSDL3.Sdl.GetKeyboards(Integer)
  name.vb: GetKeyboards(Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetKeyboards(System.Int32@)
    name: GetKeyboards
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetKeyboards_System_Int32__
  - name: (
  - name: out
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetKeyboards(System.Int32@)
    name: GetKeyboards
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetKeyboards_System_Int32__
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.GetKeyboardNameForId*
  commentId: Overload:SharpSDL3.Sdl.GetKeyboardNameForId
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetKeyboardNameForId_System_UInt32_
  name: GetKeyboardNameForId
  nameWithType: Sdl.GetKeyboardNameForId
  fullName: SharpSDL3.Sdl.GetKeyboardNameForId
- uid: SharpSDL3.Sdl.ResetKeyboard
  commentId: M:SharpSDL3.Sdl.ResetKeyboard
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ResetKeyboard
  name: ResetKeyboard()
  nameWithType: Sdl.ResetKeyboard()
  fullName: SharpSDL3.Sdl.ResetKeyboard()
  spec.csharp:
  - uid: SharpSDL3.Sdl.ResetKeyboard
    name: ResetKeyboard
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ResetKeyboard
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.ResetKeyboard
    name: ResetKeyboard
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ResetKeyboard
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.GetKeyboardState*
  commentId: Overload:SharpSDL3.Sdl.GetKeyboardState
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetKeyboardState_System_Int32__
  name: GetKeyboardState
  nameWithType: Sdl.GetKeyboardState
  fullName: SharpSDL3.Sdl.GetKeyboardState
- uid: System.Span{System.Boolean}
  commentId: T:System.Span{System.Boolean}
  parent: System
  definition: System.Span`1
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<bool>
  nameWithType: Span<bool>
  fullName: System.Span<bool>
  nameWithType.vb: Span(Of Boolean)
  fullName.vb: System.Span(Of Boolean)
  name.vb: Span(Of Boolean)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: SharpSDL3.Sdl.GetKeyFromScancode(SharpSDL3.Enums.Scancode,SharpSDL3.Enums.KeyMod,System.Boolean)
  commentId: M:SharpSDL3.Sdl.GetKeyFromScancode(SharpSDL3.Enums.Scancode,SharpSDL3.Enums.KeyMod,System.Boolean)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetKeyFromScancode_SharpSDL3_Enums_Scancode_SharpSDL3_Enums_KeyMod_System_Boolean_
  name: GetKeyFromScancode(Scancode, KeyMod, bool)
  nameWithType: Sdl.GetKeyFromScancode(Scancode, KeyMod, bool)
  fullName: SharpSDL3.Sdl.GetKeyFromScancode(SharpSDL3.Enums.Scancode, SharpSDL3.Enums.KeyMod, bool)
  nameWithType.vb: Sdl.GetKeyFromScancode(Scancode, KeyMod, Boolean)
  fullName.vb: SharpSDL3.Sdl.GetKeyFromScancode(SharpSDL3.Enums.Scancode, SharpSDL3.Enums.KeyMod, Boolean)
  name.vb: GetKeyFromScancode(Scancode, KeyMod, Boolean)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetKeyFromScancode(SharpSDL3.Enums.Scancode,SharpSDL3.Enums.KeyMod,System.Boolean)
    name: GetKeyFromScancode
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetKeyFromScancode_SharpSDL3_Enums_Scancode_SharpSDL3_Enums_KeyMod_System_Boolean_
  - name: (
  - uid: SharpSDL3.Enums.Scancode
    name: Scancode
    href: SharpSDL3.Enums.Scancode.html
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.KeyMod
    name: KeyMod
    href: SharpSDL3.Enums.KeyMod.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetKeyFromScancode(SharpSDL3.Enums.Scancode,SharpSDL3.Enums.KeyMod,System.Boolean)
    name: GetKeyFromScancode
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetKeyFromScancode_SharpSDL3_Enums_Scancode_SharpSDL3_Enums_KeyMod_System_Boolean_
  - name: (
  - uid: SharpSDL3.Enums.Scancode
    name: Scancode
    href: SharpSDL3.Enums.Scancode.html
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.KeyMod
    name: KeyMod
    href: SharpSDL3.Enums.KeyMod.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: SharpSDL3.Sdl.GetKeyName(SharpSDL3.Enums.Keycode)
  commentId: M:SharpSDL3.Sdl.GetKeyName(SharpSDL3.Enums.Keycode)
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetKeyName_SharpSDL3_Enums_Keycode_
  name: GetKeyName(Keycode)
  nameWithType: Sdl.GetKeyName(Keycode)
  fullName: SharpSDL3.Sdl.GetKeyName(SharpSDL3.Enums.Keycode)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetKeyName(SharpSDL3.Enums.Keycode)
    name: GetKeyName
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetKeyName_SharpSDL3_Enums_Keycode_
  - name: (
  - uid: SharpSDL3.Enums.Keycode
    name: Keycode
    href: SharpSDL3.Enums.Keycode.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetKeyName(SharpSDL3.Enums.Keycode)
    name: GetKeyName
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetKeyName_SharpSDL3_Enums_Keycode_
  - name: (
  - uid: SharpSDL3.Enums.Keycode
    name: Keycode
    href: SharpSDL3.Enums.Keycode.html
  - name: )
- uid: SharpSDL3.Sdl.GetScancodeFromName(System.String)
  commentId: M:SharpSDL3.Sdl.GetScancodeFromName(System.String)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetScancodeFromName_System_String_
  name: GetScancodeFromName(string)
  nameWithType: Sdl.GetScancodeFromName(string)
  fullName: SharpSDL3.Sdl.GetScancodeFromName(string)
  nameWithType.vb: Sdl.GetScancodeFromName(String)
  fullName.vb: SharpSDL3.Sdl.GetScancodeFromName(String)
  name.vb: GetScancodeFromName(String)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetScancodeFromName(System.String)
    name: GetScancodeFromName
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetScancodeFromName_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetScancodeFromName(System.String)
    name: GetScancodeFromName
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetScancodeFromName_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SharpSDL3.Enums.Keycode
  commentId: T:SharpSDL3.Enums.Keycode
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.Keycode.html
  name: Keycode
  nameWithType: Keycode
  fullName: SharpSDL3.Enums.Keycode
- uid: SharpSDL3.Enums.Keycode.Unknown
  commentId: F:SharpSDL3.Enums.Keycode.Unknown
  href: SharpSDL3.Enums.Keycode.html#SharpSDL3_Enums_Keycode_Unknown
  name: Unknown
  nameWithType: Keycode.Unknown
  fullName: SharpSDL3.Enums.Keycode.Unknown
- uid: SharpSDL3.Sdl.GetKeyFromName*
  commentId: Overload:SharpSDL3.Sdl.GetKeyFromName
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetKeyFromName_System_String_
  name: GetKeyFromName
  nameWithType: Sdl.GetKeyFromName
  fullName: SharpSDL3.Sdl.GetKeyFromName
- uid: SharpSDL3.Sdl.GetScancodeFromKey(System.UInt32,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetScancodeFromKey(System.UInt32,System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetScancodeFromKey_System_UInt32_System_IntPtr_
  name: GetScancodeFromKey(uint, nint)
  nameWithType: Sdl.GetScancodeFromKey(uint, nint)
  fullName: SharpSDL3.Sdl.GetScancodeFromKey(uint, nint)
  nameWithType.vb: Sdl.GetScancodeFromKey(UInteger, IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetScancodeFromKey(UInteger, System.IntPtr)
  name.vb: GetScancodeFromKey(UInteger, IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetScancodeFromKey(System.UInt32,System.IntPtr)
    name: GetScancodeFromKey
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetScancodeFromKey_System_UInt32_System_IntPtr_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetScancodeFromKey(System.UInt32,System.IntPtr)
    name: GetScancodeFromKey
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetScancodeFromKey_System_UInt32_System_IntPtr_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Enums.Scancode
  commentId: T:SharpSDL3.Enums.Scancode
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.Scancode.html
  name: Scancode
  nameWithType: Scancode
  fullName: SharpSDL3.Enums.Scancode
- uid: SharpSDL3.Sdl.GetKeyFromScancode*
  commentId: Overload:SharpSDL3.Sdl.GetKeyFromScancode
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetKeyFromScancode_SharpSDL3_Enums_Scancode_SharpSDL3_Enums_KeyMod_System_Boolean_
  name: GetKeyFromScancode
  nameWithType: Sdl.GetKeyFromScancode
  fullName: SharpSDL3.Sdl.GetKeyFromScancode
- uid: SharpSDL3.Enums.KeyMod
  commentId: T:SharpSDL3.Enums.KeyMod
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.KeyMod.html
  name: KeyMod
  nameWithType: KeyMod
  fullName: SharpSDL3.Enums.KeyMod
- uid: SharpSDL3.Sdl.GetKeyFromName(System.String)
  commentId: M:SharpSDL3.Sdl.GetKeyFromName(System.String)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetKeyFromName_System_String_
  name: GetKeyFromName(string)
  nameWithType: Sdl.GetKeyFromName(string)
  fullName: SharpSDL3.Sdl.GetKeyFromName(string)
  nameWithType.vb: Sdl.GetKeyFromName(String)
  fullName.vb: SharpSDL3.Sdl.GetKeyFromName(String)
  name.vb: GetKeyFromName(String)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetKeyFromName(System.String)
    name: GetKeyFromName
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetKeyFromName_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetKeyFromName(System.String)
    name: GetKeyFromName
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetKeyFromName_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SharpSDL3.Sdl.GetKeyName*
  commentId: Overload:SharpSDL3.Sdl.GetKeyName
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetKeyName_SharpSDL3_Enums_Keycode_
  name: GetKeyName
  nameWithType: Sdl.GetKeyName
  fullName: SharpSDL3.Sdl.GetKeyName
- uid: SharpSDL3.Sdl.GetPixelFormatForMasks(System.Int32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)
  commentId: M:SharpSDL3.Sdl.GetPixelFormatForMasks(System.Int32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetPixelFormatForMasks_System_Int32_System_UInt32_System_UInt32_System_UInt32_System_UInt32_
  name: GetPixelFormatForMasks(int, uint, uint, uint, uint)
  nameWithType: Sdl.GetPixelFormatForMasks(int, uint, uint, uint, uint)
  fullName: SharpSDL3.Sdl.GetPixelFormatForMasks(int, uint, uint, uint, uint)
  nameWithType.vb: Sdl.GetPixelFormatForMasks(Integer, UInteger, UInteger, UInteger, UInteger)
  fullName.vb: SharpSDL3.Sdl.GetPixelFormatForMasks(Integer, UInteger, UInteger, UInteger, UInteger)
  name.vb: GetPixelFormatForMasks(Integer, UInteger, UInteger, UInteger, UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetPixelFormatForMasks(System.Int32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)
    name: GetPixelFormatForMasks
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetPixelFormatForMasks_System_Int32_System_UInt32_System_UInt32_System_UInt32_System_UInt32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetPixelFormatForMasks(System.Int32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)
    name: GetPixelFormatForMasks
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetPixelFormatForMasks_System_Int32_System_UInt32_System_UInt32_System_UInt32_System_UInt32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.GetMasksForPixelFormat*
  commentId: Overload:SharpSDL3.Sdl.GetMasksForPixelFormat
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetMasksForPixelFormat_SharpSDL3_Enums_PixelFormat_System_Int32__System_UInt32__System_UInt32__System_UInt32__System_UInt32__
  name: GetMasksForPixelFormat
  nameWithType: Sdl.GetMasksForPixelFormat
  fullName: SharpSDL3.Sdl.GetMasksForPixelFormat
- uid: SharpSDL3.Sdl.GetKeyboardState(System.Int32@)
  commentId: M:SharpSDL3.Sdl.GetKeyboardState(System.Int32@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetKeyboardState_System_Int32__
  name: GetKeyboardState(out int)
  nameWithType: Sdl.GetKeyboardState(out int)
  fullName: SharpSDL3.Sdl.GetKeyboardState(out int)
  nameWithType.vb: Sdl.GetKeyboardState(Integer)
  fullName.vb: SharpSDL3.Sdl.GetKeyboardState(Integer)
  name.vb: GetKeyboardState(Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetKeyboardState(System.Int32@)
    name: GetKeyboardState
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetKeyboardState_System_Int32__
  - name: (
  - name: out
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetKeyboardState(System.Int32@)
    name: GetKeyboardState
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetKeyboardState_System_Int32__
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.SetModState(SharpSDL3.Enums.KeyMod)
  commentId: M:SharpSDL3.Sdl.SetModState(SharpSDL3.Enums.KeyMod)
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetModState_SharpSDL3_Enums_KeyMod_
  name: SetModState(KeyMod)
  nameWithType: Sdl.SetModState(KeyMod)
  fullName: SharpSDL3.Sdl.SetModState(SharpSDL3.Enums.KeyMod)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetModState(SharpSDL3.Enums.KeyMod)
    name: SetModState
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetModState_SharpSDL3_Enums_KeyMod_
  - name: (
  - uid: SharpSDL3.Enums.KeyMod
    name: KeyMod
    href: SharpSDL3.Enums.KeyMod.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetModState(SharpSDL3.Enums.KeyMod)
    name: SetModState
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetModState_SharpSDL3_Enums_KeyMod_
  - name: (
  - uid: SharpSDL3.Enums.KeyMod
    name: KeyMod
    href: SharpSDL3.Enums.KeyMod.html
  - name: )
- uid: SharpSDL3.Sdl.GetModState*
  commentId: Overload:SharpSDL3.Sdl.GetModState
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetModState
  name: GetModState
  nameWithType: Sdl.GetModState
  fullName: SharpSDL3.Sdl.GetModState
- uid: SharpSDL3.Enums.DisplayOrientation.Unknown
  commentId: F:SharpSDL3.Enums.DisplayOrientation.Unknown
  href: SharpSDL3.Enums.DisplayOrientation.html#SharpSDL3_Enums_DisplayOrientation_Unknown
  name: Unknown
  nameWithType: DisplayOrientation.Unknown
  fullName: SharpSDL3.Enums.DisplayOrientation.Unknown
- uid: SharpSDL3.Sdl.GetNaturalDisplayOrientation*
  commentId: Overload:SharpSDL3.Sdl.GetNaturalDisplayOrientation
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetNaturalDisplayOrientation_System_UInt32_
  name: GetNaturalDisplayOrientation
  nameWithType: Sdl.GetNaturalDisplayOrientation
  fullName: SharpSDL3.Sdl.GetNaturalDisplayOrientation
- uid: SharpSDL3.Sdl.SetNumberProperty(System.UInt32,System.String,System.Int64)
  commentId: M:SharpSDL3.Sdl.SetNumberProperty(System.UInt32,System.String,System.Int64)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetNumberProperty_System_UInt32_System_String_System_Int64_
  name: SetNumberProperty(uint, string, long)
  nameWithType: Sdl.SetNumberProperty(uint, string, long)
  fullName: SharpSDL3.Sdl.SetNumberProperty(uint, string, long)
  nameWithType.vb: Sdl.SetNumberProperty(UInteger, String, Long)
  fullName.vb: SharpSDL3.Sdl.SetNumberProperty(UInteger, String, Long)
  name.vb: SetNumberProperty(UInteger, String, Long)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetNumberProperty(System.UInt32,System.String,System.Int64)
    name: SetNumberProperty
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetNumberProperty_System_UInt32_System_String_System_Int64_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetNumberProperty(System.UInt32,System.String,System.Int64)
    name: SetNumberProperty
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetNumberProperty_System_UInt32_System_String_System_Int64_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
- uid: SharpSDL3.Sdl.GetNumberProperty*
  commentId: Overload:SharpSDL3.Sdl.GetNumberProperty
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetNumberProperty_System_UInt32_System_String_System_Int64_
  name: GetNumberProperty
  nameWithType: Sdl.GetNumberProperty
  fullName: SharpSDL3.Sdl.GetNumberProperty
- uid: SharpSDL3.Sdl.GetNumVideoDrivers*
  commentId: Overload:SharpSDL3.Sdl.GetNumVideoDrivers
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetNumVideoDrivers
  name: GetNumVideoDrivers
  nameWithType: Sdl.GetNumVideoDrivers
  fullName: SharpSDL3.Sdl.GetNumVideoDrivers
- uid: SharpSDL3.Sdl.GetPixelFormatDetails*
  commentId: Overload:SharpSDL3.Sdl.GetPixelFormatDetails
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetPixelFormatDetails_SharpSDL3_Enums_PixelFormat_
  name: GetPixelFormatDetails
  nameWithType: Sdl.GetPixelFormatDetails
  fullName: SharpSDL3.Sdl.GetPixelFormatDetails
- uid: SharpSDL3.Sdl.GetMasksForPixelFormat(SharpSDL3.Enums.PixelFormat,System.Int32@,System.UInt32@,System.UInt32@,System.UInt32@,System.UInt32@)
  commentId: M:SharpSDL3.Sdl.GetMasksForPixelFormat(SharpSDL3.Enums.PixelFormat,System.Int32@,System.UInt32@,System.UInt32@,System.UInt32@,System.UInt32@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetMasksForPixelFormat_SharpSDL3_Enums_PixelFormat_System_Int32__System_UInt32__System_UInt32__System_UInt32__System_UInt32__
  name: GetMasksForPixelFormat(PixelFormat, out int, out uint, out uint, out uint, out uint)
  nameWithType: Sdl.GetMasksForPixelFormat(PixelFormat, out int, out uint, out uint, out uint, out uint)
  fullName: SharpSDL3.Sdl.GetMasksForPixelFormat(SharpSDL3.Enums.PixelFormat, out int, out uint, out uint, out uint, out uint)
  nameWithType.vb: Sdl.GetMasksForPixelFormat(PixelFormat, Integer, UInteger, UInteger, UInteger, UInteger)
  fullName.vb: SharpSDL3.Sdl.GetMasksForPixelFormat(SharpSDL3.Enums.PixelFormat, Integer, UInteger, UInteger, UInteger, UInteger)
  name.vb: GetMasksForPixelFormat(PixelFormat, Integer, UInteger, UInteger, UInteger, UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetMasksForPixelFormat(SharpSDL3.Enums.PixelFormat,System.Int32@,System.UInt32@,System.UInt32@,System.UInt32@,System.UInt32@)
    name: GetMasksForPixelFormat
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetMasksForPixelFormat_SharpSDL3_Enums_PixelFormat_System_Int32__System_UInt32__System_UInt32__System_UInt32__System_UInt32__
  - name: (
  - uid: SharpSDL3.Enums.PixelFormat
    name: PixelFormat
    href: SharpSDL3.Enums.PixelFormat.html
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetMasksForPixelFormat(SharpSDL3.Enums.PixelFormat,System.Int32@,System.UInt32@,System.UInt32@,System.UInt32@,System.UInt32@)
    name: GetMasksForPixelFormat
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetMasksForPixelFormat_SharpSDL3_Enums_PixelFormat_System_Int32__System_UInt32__System_UInt32__System_UInt32__System_UInt32__
  - name: (
  - uid: SharpSDL3.Enums.PixelFormat
    name: PixelFormat
    href: SharpSDL3.Enums.PixelFormat.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Enums.PixelFormat.Unknown
  commentId: F:SharpSDL3.Enums.PixelFormat.Unknown
  href: SharpSDL3.Enums.PixelFormat.html#SharpSDL3_Enums_PixelFormat_Unknown
  name: Unknown
  nameWithType: PixelFormat.Unknown
  fullName: SharpSDL3.Enums.PixelFormat.Unknown
- uid: SharpSDL3.Sdl.GetPixelFormatForMasks*
  commentId: Overload:SharpSDL3.Sdl.GetPixelFormatForMasks
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetPixelFormatForMasks_System_Int32_System_UInt32_System_UInt32_System_UInt32_System_UInt32_
  name: GetPixelFormatForMasks
  nameWithType: Sdl.GetPixelFormatForMasks
  fullName: SharpSDL3.Sdl.GetPixelFormatForMasks
- uid: SharpSDL3.Sdl.GetPixelFormatName*
  commentId: Overload:SharpSDL3.Sdl.GetPixelFormatName
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetPixelFormatName_SharpSDL3_Enums_PixelFormat_
  name: GetPixelFormatName
  nameWithType: Sdl.GetPixelFormatName
  fullName: SharpSDL3.Sdl.GetPixelFormatName
- uid: SharpSDL3.Sdl.GetBooleanProperty(System.UInt32,System.String,System.Boolean)
  commentId: M:SharpSDL3.Sdl.GetBooleanProperty(System.UInt32,System.String,System.Boolean)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetBooleanProperty_System_UInt32_System_String_System_Boolean_
  name: GetBooleanProperty(uint, string, bool)
  nameWithType: Sdl.GetBooleanProperty(uint, string, bool)
  fullName: SharpSDL3.Sdl.GetBooleanProperty(uint, string, bool)
  nameWithType.vb: Sdl.GetBooleanProperty(UInteger, String, Boolean)
  fullName.vb: SharpSDL3.Sdl.GetBooleanProperty(UInteger, String, Boolean)
  name.vb: GetBooleanProperty(UInteger, String, Boolean)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetBooleanProperty(System.UInt32,System.String,System.Boolean)
    name: GetBooleanProperty
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetBooleanProperty_System_UInt32_System_String_System_Boolean_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetBooleanProperty(System.UInt32,System.String,System.Boolean)
    name: GetBooleanProperty
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetBooleanProperty_System_UInt32_System_String_System_Boolean_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: SharpSDL3.Sdl.GetFloatProperty(System.UInt32,System.String,System.Single)
  commentId: M:SharpSDL3.Sdl.GetFloatProperty(System.UInt32,System.String,System.Single)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetFloatProperty_System_UInt32_System_String_System_Single_
  name: GetFloatProperty(uint, string, float)
  nameWithType: Sdl.GetFloatProperty(uint, string, float)
  fullName: SharpSDL3.Sdl.GetFloatProperty(uint, string, float)
  nameWithType.vb: Sdl.GetFloatProperty(UInteger, String, Single)
  fullName.vb: SharpSDL3.Sdl.GetFloatProperty(UInteger, String, Single)
  name.vb: GetFloatProperty(UInteger, String, Single)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetFloatProperty(System.UInt32,System.String,System.Single)
    name: GetFloatProperty
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetFloatProperty_System_UInt32_System_String_System_Single_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetFloatProperty(System.UInt32,System.String,System.Single)
    name: GetFloatProperty
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetFloatProperty_System_UInt32_System_String_System_Single_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: SharpSDL3.Sdl.GetNumberProperty(System.UInt32,System.String,System.Int64)
  commentId: M:SharpSDL3.Sdl.GetNumberProperty(System.UInt32,System.String,System.Int64)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetNumberProperty_System_UInt32_System_String_System_Int64_
  name: GetNumberProperty(uint, string, long)
  nameWithType: Sdl.GetNumberProperty(uint, string, long)
  fullName: SharpSDL3.Sdl.GetNumberProperty(uint, string, long)
  nameWithType.vb: Sdl.GetNumberProperty(UInteger, String, Long)
  fullName.vb: SharpSDL3.Sdl.GetNumberProperty(UInteger, String, Long)
  name.vb: GetNumberProperty(UInteger, String, Long)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetNumberProperty(System.UInt32,System.String,System.Int64)
    name: GetNumberProperty
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetNumberProperty_System_UInt32_System_String_System_Int64_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetNumberProperty(System.UInt32,System.String,System.Int64)
    name: GetNumberProperty
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetNumberProperty_System_UInt32_System_String_System_Int64_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
- uid: SharpSDL3.Sdl.GetStringProperty(System.UInt32,System.String,System.String)
  commentId: M:SharpSDL3.Sdl.GetStringProperty(System.UInt32,System.String,System.String)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetStringProperty_System_UInt32_System_String_System_String_
  name: GetStringProperty(uint, string, string)
  nameWithType: Sdl.GetStringProperty(uint, string, string)
  fullName: SharpSDL3.Sdl.GetStringProperty(uint, string, string)
  nameWithType.vb: Sdl.GetStringProperty(UInteger, String, String)
  fullName.vb: SharpSDL3.Sdl.GetStringProperty(UInteger, String, String)
  name.vb: GetStringProperty(UInteger, String, String)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetStringProperty(System.UInt32,System.String,System.String)
    name: GetStringProperty
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetStringProperty_System_UInt32_System_String_System_String_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetStringProperty(System.UInt32,System.String,System.String)
    name: GetStringProperty
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetStringProperty_System_UInt32_System_String_System_String_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SharpSDL3.Sdl.SetPointerProperty(System.UInt32,System.String,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.SetPointerProperty(System.UInt32,System.String,System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetPointerProperty_System_UInt32_System_String_System_IntPtr_
  name: SetPointerProperty(uint, string, nint)
  nameWithType: Sdl.SetPointerProperty(uint, string, nint)
  fullName: SharpSDL3.Sdl.SetPointerProperty(uint, string, nint)
  nameWithType.vb: Sdl.SetPointerProperty(UInteger, String, IntPtr)
  fullName.vb: SharpSDL3.Sdl.SetPointerProperty(UInteger, String, System.IntPtr)
  name.vb: SetPointerProperty(UInteger, String, IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetPointerProperty(System.UInt32,System.String,System.IntPtr)
    name: SetPointerProperty
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetPointerProperty_System_UInt32_System_String_System_IntPtr_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetPointerProperty(System.UInt32,System.String,System.IntPtr)
    name: SetPointerProperty
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetPointerProperty_System_UInt32_System_String_System_IntPtr_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.ClearProperty(System.UInt32,System.String)
  commentId: M:SharpSDL3.Sdl.ClearProperty(System.UInt32,System.String)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ClearProperty_System_UInt32_System_String_
  name: ClearProperty(uint, string)
  nameWithType: Sdl.ClearProperty(uint, string)
  fullName: SharpSDL3.Sdl.ClearProperty(uint, string)
  nameWithType.vb: Sdl.ClearProperty(UInteger, String)
  fullName.vb: SharpSDL3.Sdl.ClearProperty(UInteger, String)
  name.vb: ClearProperty(UInteger, String)
  spec.csharp:
  - uid: SharpSDL3.Sdl.ClearProperty(System.UInt32,System.String)
    name: ClearProperty
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ClearProperty_System_UInt32_System_String_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.ClearProperty(System.UInt32,System.String)
    name: ClearProperty
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ClearProperty_System_UInt32_System_String_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SharpSDL3.Sdl.LockProperties(System.UInt32)
  commentId: M:SharpSDL3.Sdl.LockProperties(System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LockProperties_System_UInt32_
  name: LockProperties(uint)
  nameWithType: Sdl.LockProperties(uint)
  fullName: SharpSDL3.Sdl.LockProperties(uint)
  nameWithType.vb: Sdl.LockProperties(UInteger)
  fullName.vb: SharpSDL3.Sdl.LockProperties(UInteger)
  name.vb: LockProperties(UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.LockProperties(System.UInt32)
    name: LockProperties
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LockProperties_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.LockProperties(System.UInt32)
    name: LockProperties
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LockProperties_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.UnlockProperties(System.UInt32)
  commentId: M:SharpSDL3.Sdl.UnlockProperties(System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UnlockProperties_System_UInt32_
  name: UnlockProperties(uint)
  nameWithType: Sdl.UnlockProperties(uint)
  fullName: SharpSDL3.Sdl.UnlockProperties(uint)
  nameWithType.vb: Sdl.UnlockProperties(UInteger)
  fullName.vb: SharpSDL3.Sdl.UnlockProperties(UInteger)
  name.vb: UnlockProperties(UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.UnlockProperties(System.UInt32)
    name: UnlockProperties
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UnlockProperties_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.UnlockProperties(System.UInt32)
    name: UnlockProperties
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UnlockProperties_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.GetPointerProperty*
  commentId: Overload:SharpSDL3.Sdl.GetPointerProperty
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetPointerProperty_System_UInt32_System_String_System_IntPtr_
  name: GetPointerProperty
  nameWithType: Sdl.GetPointerProperty
  fullName: SharpSDL3.Sdl.GetPointerProperty
- uid: SharpSDL3.Enums.PowerState.Error
  commentId: F:SharpSDL3.Enums.PowerState.Error
  href: SharpSDL3.Enums.PowerState.html#SharpSDL3_Enums_PowerState_Error
  name: Error
  nameWithType: PowerState.Error
  fullName: SharpSDL3.Enums.PowerState.Error
- uid: SharpSDL3.Sdl.GetPowerInfo*
  commentId: Overload:SharpSDL3.Sdl.GetPowerInfo
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetPowerInfo_System_Int32__System_Int32__
  name: GetPowerInfo
  nameWithType: Sdl.GetPowerInfo
  fullName: SharpSDL3.Sdl.GetPowerInfo
- uid: SharpSDL3.Sdl.GetPreferredLocales*
  commentId: Overload:SharpSDL3.Sdl.GetPreferredLocales
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetPreferredLocales
  name: GetPreferredLocales
  nameWithType: Sdl.GetPreferredLocales
  fullName: SharpSDL3.Sdl.GetPreferredLocales
- uid: SharpSDL3.Sdl.GetPrimaryDisplay*
  commentId: Overload:SharpSDL3.Sdl.GetPrimaryDisplay
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetPrimaryDisplay
  name: GetPrimaryDisplay
  nameWithType: Sdl.GetPrimaryDisplay
  fullName: SharpSDL3.Sdl.GetPrimaryDisplay
- uid: SharpSDL3.Sdl.HasPrimarySelectionText
  commentId: M:SharpSDL3.Sdl.HasPrimarySelectionText
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasPrimarySelectionText
  name: HasPrimarySelectionText()
  nameWithType: Sdl.HasPrimarySelectionText()
  fullName: SharpSDL3.Sdl.HasPrimarySelectionText()
  spec.csharp:
  - uid: SharpSDL3.Sdl.HasPrimarySelectionText
    name: HasPrimarySelectionText
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasPrimarySelectionText
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.HasPrimarySelectionText
    name: HasPrimarySelectionText
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasPrimarySelectionText
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.SetPrimarySelectionText(System.String)
  commentId: M:SharpSDL3.Sdl.SetPrimarySelectionText(System.String)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetPrimarySelectionText_System_String_
  name: SetPrimarySelectionText(string)
  nameWithType: Sdl.SetPrimarySelectionText(string)
  fullName: SharpSDL3.Sdl.SetPrimarySelectionText(string)
  nameWithType.vb: Sdl.SetPrimarySelectionText(String)
  fullName.vb: SharpSDL3.Sdl.SetPrimarySelectionText(String)
  name.vb: SetPrimarySelectionText(String)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetPrimarySelectionText(System.String)
    name: SetPrimarySelectionText
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetPrimarySelectionText_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetPrimarySelectionText(System.String)
    name: SetPrimarySelectionText
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetPrimarySelectionText_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SharpSDL3.Sdl.GetPrimarySelectionText*
  commentId: Overload:SharpSDL3.Sdl.GetPrimarySelectionText
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetPrimarySelectionText
  name: GetPrimarySelectionText
  nameWithType: Sdl.GetPrimarySelectionText
  fullName: SharpSDL3.Sdl.GetPrimarySelectionText
- uid: SharpSDL3.Enums.PropertyType.Invalid
  commentId: F:SharpSDL3.Enums.PropertyType.Invalid
  href: SharpSDL3.Enums.PropertyType.html#SharpSDL3_Enums_PropertyType_Invalid
  name: Invalid
  nameWithType: PropertyType.Invalid
  fullName: SharpSDL3.Enums.PropertyType.Invalid
- uid: SharpSDL3.Sdl.GetPropertyType*
  commentId: Overload:SharpSDL3.Sdl.GetPropertyType
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetPropertyType_System_UInt32_System_String_
  name: GetPropertyType
  nameWithType: Sdl.GetPropertyType
  fullName: SharpSDL3.Sdl.GetPropertyType
- uid: SharpSDL3.Enums.PropertyType
  commentId: T:SharpSDL3.Enums.PropertyType
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.PropertyType.html
  name: PropertyType
  nameWithType: PropertyType
  fullName: SharpSDL3.Enums.PropertyType
- uid: SharpSDL3.Sdl.GetRectAndLineIntersection*
  commentId: Overload:SharpSDL3.Sdl.GetRectAndLineIntersection
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRectAndLineIntersection_SharpSDL3_Structs_Rect__System_Int32__System_Int32__System_Int32__System_Int32__
  name: GetRectAndLineIntersection
  nameWithType: Sdl.GetRectAndLineIntersection
  fullName: SharpSDL3.Sdl.GetRectAndLineIntersection
- uid: SharpSDL3.Sdl.GetRectAndLineIntersectionFloat*
  commentId: Overload:SharpSDL3.Sdl.GetRectAndLineIntersectionFloat
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRectAndLineIntersectionFloat_SharpSDL3_Structs_FRect__System_Single__System_Single__System_Single__System_Single__
  name: GetRectAndLineIntersectionFloat
  nameWithType: Sdl.GetRectAndLineIntersectionFloat
  fullName: SharpSDL3.Sdl.GetRectAndLineIntersectionFloat
- uid: SharpSDL3.Sdl.GetRectEnclosingPoints*
  commentId: Overload:SharpSDL3.Sdl.GetRectEnclosingPoints
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRectEnclosingPoints_System_Span_SharpSDL3_Structs_Point__System_Int32_SharpSDL3_Structs_Rect__SharpSDL3_Structs_Rect__
  name: GetRectEnclosingPoints
  nameWithType: Sdl.GetRectEnclosingPoints
  fullName: SharpSDL3.Sdl.GetRectEnclosingPoints
- uid: System.Span{SharpSDL3.Structs.Point}
  commentId: T:System.Span{SharpSDL3.Structs.Point}
  parent: System
  definition: System.Span`1
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<Point>
  nameWithType: Span<Point>
  fullName: System.Span<SharpSDL3.Structs.Point>
  nameWithType.vb: Span(Of Point)
  fullName.vb: System.Span(Of SharpSDL3.Structs.Point)
  name.vb: Span(Of Point)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: SharpSDL3.Structs.Point
    name: Point
    href: SharpSDL3.Structs.Point.html
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: SharpSDL3.Structs.Point
    name: Point
    href: SharpSDL3.Structs.Point.html
  - name: )
- uid: SharpSDL3.Sdl.GetRectEnclosingPointsFloat*
  commentId: Overload:SharpSDL3.Sdl.GetRectEnclosingPointsFloat
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRectEnclosingPointsFloat_System_Span_SharpSDL3_Structs_FPoint__System_Int32_SharpSDL3_Structs_FRect__SharpSDL3_Structs_FRect__
  name: GetRectEnclosingPointsFloat
  nameWithType: Sdl.GetRectEnclosingPointsFloat
  fullName: SharpSDL3.Sdl.GetRectEnclosingPointsFloat
- uid: SharpSDL3.Sdl.HasRectIntersection(SharpSDL3.Structs.Rect@,SharpSDL3.Structs.Rect@)
  commentId: M:SharpSDL3.Sdl.HasRectIntersection(SharpSDL3.Structs.Rect@,SharpSDL3.Structs.Rect@)
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasRectIntersection_SharpSDL3_Structs_Rect__SharpSDL3_Structs_Rect__
  name: HasRectIntersection(ref Rect, ref Rect)
  nameWithType: Sdl.HasRectIntersection(ref Rect, ref Rect)
  fullName: SharpSDL3.Sdl.HasRectIntersection(ref SharpSDL3.Structs.Rect, ref SharpSDL3.Structs.Rect)
  nameWithType.vb: Sdl.HasRectIntersection(Rect, Rect)
  fullName.vb: SharpSDL3.Sdl.HasRectIntersection(SharpSDL3.Structs.Rect, SharpSDL3.Structs.Rect)
  name.vb: HasRectIntersection(Rect, Rect)
  spec.csharp:
  - uid: SharpSDL3.Sdl.HasRectIntersection(SharpSDL3.Structs.Rect@,SharpSDL3.Structs.Rect@)
    name: HasRectIntersection
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasRectIntersection_SharpSDL3_Structs_Rect__SharpSDL3_Structs_Rect__
  - name: (
  - name: ref
  - name: " "
  - uid: SharpSDL3.Structs.Rect
    name: Rect
    href: SharpSDL3.Structs.Rect.html
  - name: ','
  - name: " "
  - name: ref
  - name: " "
  - uid: SharpSDL3.Structs.Rect
    name: Rect
    href: SharpSDL3.Structs.Rect.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.HasRectIntersection(SharpSDL3.Structs.Rect@,SharpSDL3.Structs.Rect@)
    name: HasRectIntersection
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasRectIntersection_SharpSDL3_Structs_Rect__SharpSDL3_Structs_Rect__
  - name: (
  - uid: SharpSDL3.Structs.Rect
    name: Rect
    href: SharpSDL3.Structs.Rect.html
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.Rect
    name: Rect
    href: SharpSDL3.Structs.Rect.html
  - name: )
- uid: SharpSDL3.Sdl.GetRectIntersection*
  commentId: Overload:SharpSDL3.Sdl.GetRectIntersection
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRectIntersection_SharpSDL3_Structs_Rect__SharpSDL3_Structs_Rect__SharpSDL3_Structs_Rect__
  name: GetRectIntersection
  nameWithType: Sdl.GetRectIntersection
  fullName: SharpSDL3.Sdl.GetRectIntersection
- uid: SharpSDL3.Sdl.GetRectIntersectionFloat*
  commentId: Overload:SharpSDL3.Sdl.GetRectIntersectionFloat
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRectIntersectionFloat_SharpSDL3_Structs_FRect__SharpSDL3_Structs_FRect__SharpSDL3_Structs_FRect__
  name: GetRectIntersectionFloat
  nameWithType: Sdl.GetRectIntersectionFloat
  fullName: SharpSDL3.Sdl.GetRectIntersectionFloat
- uid: SharpSDL3.Sdl.GetRectUnion*
  commentId: Overload:SharpSDL3.Sdl.GetRectUnion
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRectUnion_SharpSDL3_Structs_Rect__SharpSDL3_Structs_Rect__SharpSDL3_Structs_Rect__
  name: GetRectUnion
  nameWithType: Sdl.GetRectUnion
  fullName: SharpSDL3.Sdl.GetRectUnion
- uid: SharpSDL3.Sdl.GetRectUnionFloat*
  commentId: Overload:SharpSDL3.Sdl.GetRectUnionFloat
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRectUnionFloat_SharpSDL3_Structs_FRect__SharpSDL3_Structs_FRect__SharpSDL3_Structs_FRect__
  name: GetRectUnionFloat
  nameWithType: Sdl.GetRectUnionFloat
  fullName: SharpSDL3.Sdl.GetRectUnionFloat
- uid: SharpSDL3.Sdl.GetPixelFormatDetails(SharpSDL3.Enums.PixelFormat)
  commentId: M:SharpSDL3.Sdl.GetPixelFormatDetails(SharpSDL3.Enums.PixelFormat)
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetPixelFormatDetails_SharpSDL3_Enums_PixelFormat_
  name: GetPixelFormatDetails(PixelFormat)
  nameWithType: Sdl.GetPixelFormatDetails(PixelFormat)
  fullName: SharpSDL3.Sdl.GetPixelFormatDetails(SharpSDL3.Enums.PixelFormat)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetPixelFormatDetails(SharpSDL3.Enums.PixelFormat)
    name: GetPixelFormatDetails
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetPixelFormatDetails_SharpSDL3_Enums_PixelFormat_
  - name: (
  - uid: SharpSDL3.Enums.PixelFormat
    name: PixelFormat
    href: SharpSDL3.Enums.PixelFormat.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetPixelFormatDetails(SharpSDL3.Enums.PixelFormat)
    name: GetPixelFormatDetails
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetPixelFormatDetails_SharpSDL3_Enums_PixelFormat_
  - name: (
  - uid: SharpSDL3.Enums.PixelFormat
    name: PixelFormat
    href: SharpSDL3.Enums.PixelFormat.html
  - name: )
- uid: SharpSDL3.Sdl.GetRgba(System.UInt32,System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetRgba(System.UInt32,System.IntPtr,System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRgba_System_UInt32_System_IntPtr_System_IntPtr_
  name: GetRgba(uint, nint, nint)
  nameWithType: Sdl.GetRgba(uint, nint, nint)
  fullName: SharpSDL3.Sdl.GetRgba(uint, nint, nint)
  nameWithType.vb: Sdl.GetRgba(UInteger, IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetRgba(UInteger, System.IntPtr, System.IntPtr)
  name.vb: GetRgba(UInteger, IntPtr, IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetRgba(System.UInt32,System.IntPtr,System.IntPtr)
    name: GetRgba
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRgba_System_UInt32_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetRgba(System.UInt32,System.IntPtr,System.IntPtr)
    name: GetRgba
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRgba_System_UInt32_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GetRgb*
  commentId: Overload:SharpSDL3.Sdl.GetRgb
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRgb_System_UInt32_System_IntPtr_System_IntPtr_
  name: GetRgb
  nameWithType: Sdl.GetRgb
  fullName: SharpSDL3.Sdl.GetRgb
- uid: SharpSDL3.Sdl.GetRgb(System.UInt32,System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetRgb(System.UInt32,System.IntPtr,System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRgb_System_UInt32_System_IntPtr_System_IntPtr_
  name: GetRgb(uint, nint, nint)
  nameWithType: Sdl.GetRgb(uint, nint, nint)
  fullName: SharpSDL3.Sdl.GetRgb(uint, nint, nint)
  nameWithType.vb: Sdl.GetRgb(UInteger, IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetRgb(UInteger, System.IntPtr, System.IntPtr)
  name.vb: GetRgb(UInteger, IntPtr, IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetRgb(System.UInt32,System.IntPtr,System.IntPtr)
    name: GetRgb
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRgb_System_UInt32_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetRgb(System.UInt32,System.IntPtr,System.IntPtr)
    name: GetRgb
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRgb_System_UInt32_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GetRgba*
  commentId: Overload:SharpSDL3.Sdl.GetRgba
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRgba_System_UInt32_System_IntPtr_System_IntPtr_
  name: GetRgba
  nameWithType: Sdl.GetRgba
  fullName: SharpSDL3.Sdl.GetRgba
- uid: SharpSDL3.Sdl.GetScancodeName(SharpSDL3.Enums.Scancode)
  commentId: M:SharpSDL3.Sdl.GetScancodeName(SharpSDL3.Enums.Scancode)
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetScancodeName_SharpSDL3_Enums_Scancode_
  name: GetScancodeName(Scancode)
  nameWithType: Sdl.GetScancodeName(Scancode)
  fullName: SharpSDL3.Sdl.GetScancodeName(SharpSDL3.Enums.Scancode)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetScancodeName(SharpSDL3.Enums.Scancode)
    name: GetScancodeName
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetScancodeName_SharpSDL3_Enums_Scancode_
  - name: (
  - uid: SharpSDL3.Enums.Scancode
    name: Scancode
    href: SharpSDL3.Enums.Scancode.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetScancodeName(SharpSDL3.Enums.Scancode)
    name: GetScancodeName
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetScancodeName_SharpSDL3_Enums_Scancode_
  - name: (
  - uid: SharpSDL3.Enums.Scancode
    name: Scancode
    href: SharpSDL3.Enums.Scancode.html
  - name: )
- uid: SharpSDL3.Sdl.GetScancodeFromKey*
  commentId: Overload:SharpSDL3.Sdl.GetScancodeFromKey
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetScancodeFromKey_System_UInt32_System_IntPtr_
  name: GetScancodeFromKey
  nameWithType: Sdl.GetScancodeFromKey
  fullName: SharpSDL3.Sdl.GetScancodeFromKey
- uid: SharpSDL3.Enums.Scancode.Unknown
  commentId: F:SharpSDL3.Enums.Scancode.Unknown
  href: SharpSDL3.Enums.Scancode.html#SharpSDL3_Enums_Scancode_Unknown
  name: Unknown
  nameWithType: Scancode.Unknown
  fullName: SharpSDL3.Enums.Scancode.Unknown
- uid: SharpSDL3.Sdl.GetScancodeFromName*
  commentId: Overload:SharpSDL3.Sdl.GetScancodeFromName
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetScancodeFromName_System_String_
  name: GetScancodeFromName
  nameWithType: Sdl.GetScancodeFromName
  fullName: SharpSDL3.Sdl.GetScancodeFromName
- uid: SharpSDL3.Sdl.SetScancodeName(SharpSDL3.Enums.Scancode,System.String)
  commentId: M:SharpSDL3.Sdl.SetScancodeName(SharpSDL3.Enums.Scancode,System.String)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetScancodeName_SharpSDL3_Enums_Scancode_System_String_
  name: SetScancodeName(Scancode, string)
  nameWithType: Sdl.SetScancodeName(Scancode, string)
  fullName: SharpSDL3.Sdl.SetScancodeName(SharpSDL3.Enums.Scancode, string)
  nameWithType.vb: Sdl.SetScancodeName(Scancode, String)
  fullName.vb: SharpSDL3.Sdl.SetScancodeName(SharpSDL3.Enums.Scancode, String)
  name.vb: SetScancodeName(Scancode, String)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetScancodeName(SharpSDL3.Enums.Scancode,System.String)
    name: SetScancodeName
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetScancodeName_SharpSDL3_Enums_Scancode_System_String_
  - name: (
  - uid: SharpSDL3.Enums.Scancode
    name: Scancode
    href: SharpSDL3.Enums.Scancode.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetScancodeName(SharpSDL3.Enums.Scancode,System.String)
    name: SetScancodeName
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetScancodeName_SharpSDL3_Enums_Scancode_System_String_
  - name: (
  - uid: SharpSDL3.Enums.Scancode
    name: Scancode
    href: SharpSDL3.Enums.Scancode.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SharpSDL3.Enums.Scancode.LGui
  commentId: F:SharpSDL3.Enums.Scancode.LGui
  href: SharpSDL3.Enums.Scancode.html#SharpSDL3_Enums_Scancode_LGui
  name: LGui
  nameWithType: Scancode.LGui
  fullName: SharpSDL3.Enums.Scancode.LGui
- uid: SharpSDL3.Enums.Scancode.NonUsBackslash
  commentId: F:SharpSDL3.Enums.Scancode.NonUsBackslash
  href: SharpSDL3.Enums.Scancode.html#SharpSDL3_Enums_Scancode_NonUsBackslash
  name: NonUsBackslash
  nameWithType: Scancode.NonUsBackslash
  fullName: SharpSDL3.Enums.Scancode.NonUsBackslash
- uid: SharpSDL3.Enums.Scancode.Return
  commentId: F:SharpSDL3.Enums.Scancode.Return
  href: SharpSDL3.Enums.Scancode.html#SharpSDL3_Enums_Scancode_Return
  name: Return
  nameWithType: Scancode.Return
  fullName: SharpSDL3.Enums.Scancode.Return
- uid: SharpSDL3.Enums.Scancode.Return2
  commentId: F:SharpSDL3.Enums.Scancode.Return2
  href: SharpSDL3.Enums.Scancode.html#SharpSDL3_Enums_Scancode_Return2
  name: Return2
  nameWithType: Scancode.Return2
  fullName: SharpSDL3.Enums.Scancode.Return2
- uid: SharpSDL3.Sdl.GetScancodeName*
  commentId: Overload:SharpSDL3.Sdl.GetScancodeName
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetScancodeName_SharpSDL3_Enums_Scancode_
  name: GetScancodeName
  nameWithType: Sdl.GetScancodeName
  fullName: SharpSDL3.Sdl.GetScancodeName
- uid: SharpSDL3.Sdl.SetStringProperty(System.UInt32,System.String,System.String)
  commentId: M:SharpSDL3.Sdl.SetStringProperty(System.UInt32,System.String,System.String)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetStringProperty_System_UInt32_System_String_System_String_
  name: SetStringProperty(uint, string, string)
  nameWithType: Sdl.SetStringProperty(uint, string, string)
  fullName: SharpSDL3.Sdl.SetStringProperty(uint, string, string)
  nameWithType.vb: Sdl.SetStringProperty(UInteger, String, String)
  fullName.vb: SharpSDL3.Sdl.SetStringProperty(UInteger, String, String)
  name.vb: SetStringProperty(UInteger, String, String)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetStringProperty(System.UInt32,System.String,System.String)
    name: SetStringProperty
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetStringProperty_System_UInt32_System_String_System_String_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetStringProperty(System.UInt32,System.String,System.String)
    name: SetStringProperty
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetStringProperty_System_UInt32_System_String_System_String_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SharpSDL3.Sdl.GetStringProperty*
  commentId: Overload:SharpSDL3.Sdl.GetStringProperty
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetStringProperty_System_UInt32_System_String_System_String_
  name: GetStringProperty
  nameWithType: Sdl.GetStringProperty
  fullName: SharpSDL3.Sdl.GetStringProperty
- uid: SharpSDL3.Sdl.GetSurfaceColorMod(System.IntPtr,System.Byte@,System.Byte@,System.Byte@)
  commentId: M:SharpSDL3.Sdl.GetSurfaceColorMod(System.IntPtr,System.Byte@,System.Byte@,System.Byte@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetSurfaceColorMod_System_IntPtr_System_Byte__System_Byte__System_Byte__
  name: GetSurfaceColorMod(nint, out byte, out byte, out byte)
  nameWithType: Sdl.GetSurfaceColorMod(nint, out byte, out byte, out byte)
  fullName: SharpSDL3.Sdl.GetSurfaceColorMod(nint, out byte, out byte, out byte)
  nameWithType.vb: Sdl.GetSurfaceColorMod(IntPtr, Byte, Byte, Byte)
  fullName.vb: SharpSDL3.Sdl.GetSurfaceColorMod(System.IntPtr, Byte, Byte, Byte)
  name.vb: GetSurfaceColorMod(IntPtr, Byte, Byte, Byte)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetSurfaceColorMod(System.IntPtr,System.Byte@,System.Byte@,System.Byte@)
    name: GetSurfaceColorMod
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetSurfaceColorMod_System_IntPtr_System_Byte__System_Byte__System_Byte__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetSurfaceColorMod(System.IntPtr,System.Byte@,System.Byte@,System.Byte@)
    name: GetSurfaceColorMod
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetSurfaceColorMod_System_IntPtr_System_Byte__System_Byte__System_Byte__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: SharpSDL3.Sdl.SetSurfaceAlphaMod(System.IntPtr,System.Byte)
  commentId: M:SharpSDL3.Sdl.SetSurfaceAlphaMod(System.IntPtr,System.Byte)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetSurfaceAlphaMod_System_IntPtr_System_Byte_
  name: SetSurfaceAlphaMod(nint, byte)
  nameWithType: Sdl.SetSurfaceAlphaMod(nint, byte)
  fullName: SharpSDL3.Sdl.SetSurfaceAlphaMod(nint, byte)
  nameWithType.vb: Sdl.SetSurfaceAlphaMod(IntPtr, Byte)
  fullName.vb: SharpSDL3.Sdl.SetSurfaceAlphaMod(System.IntPtr, Byte)
  name.vb: SetSurfaceAlphaMod(IntPtr, Byte)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetSurfaceAlphaMod(System.IntPtr,System.Byte)
    name: SetSurfaceAlphaMod
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetSurfaceAlphaMod_System_IntPtr_System_Byte_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetSurfaceAlphaMod(System.IntPtr,System.Byte)
    name: SetSurfaceAlphaMod
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetSurfaceAlphaMod_System_IntPtr_System_Byte_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: SharpSDL3.Sdl.GetSurfaceAlphaMod*
  commentId: Overload:SharpSDL3.Sdl.GetSurfaceAlphaMod
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetSurfaceAlphaMod_System_IntPtr_System_Byte__
  name: GetSurfaceAlphaMod
  nameWithType: Sdl.GetSurfaceAlphaMod
  fullName: SharpSDL3.Sdl.GetSurfaceAlphaMod
- uid: SharpSDL3.Sdl.GetSurfacePalette*
  commentId: Overload:SharpSDL3.Sdl.GetSurfacePalette
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetSurfacePalette_System_IntPtr_
  name: GetSurfacePalette
  nameWithType: Sdl.GetSurfacePalette
  fullName: SharpSDL3.Sdl.GetSurfacePalette
- uid: SharpSDL3.Sdl.SetSurfaceBlendMode(System.IntPtr,System.UInt32)
  commentId: M:SharpSDL3.Sdl.SetSurfaceBlendMode(System.IntPtr,System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetSurfaceBlendMode_System_IntPtr_System_UInt32_
  name: SetSurfaceBlendMode(nint, uint)
  nameWithType: Sdl.SetSurfaceBlendMode(nint, uint)
  fullName: SharpSDL3.Sdl.SetSurfaceBlendMode(nint, uint)
  nameWithType.vb: Sdl.SetSurfaceBlendMode(IntPtr, UInteger)
  fullName.vb: SharpSDL3.Sdl.SetSurfaceBlendMode(System.IntPtr, UInteger)
  name.vb: SetSurfaceBlendMode(IntPtr, UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetSurfaceBlendMode(System.IntPtr,System.UInt32)
    name: SetSurfaceBlendMode
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetSurfaceBlendMode_System_IntPtr_System_UInt32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetSurfaceBlendMode(System.IntPtr,System.UInt32)
    name: SetSurfaceBlendMode
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetSurfaceBlendMode_System_IntPtr_System_UInt32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.GetSurfaceBlendMode*
  commentId: Overload:SharpSDL3.Sdl.GetSurfaceBlendMode
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetSurfaceBlendMode_System_IntPtr_System_IntPtr_
  name: GetSurfaceBlendMode
  nameWithType: Sdl.GetSurfaceBlendMode
  fullName: SharpSDL3.Sdl.GetSurfaceBlendMode
- uid: SharpSDL3.Sdl.SetSurfaceClipRect(System.IntPtr,SharpSDL3.Structs.Rect@)
  commentId: M:SharpSDL3.Sdl.SetSurfaceClipRect(System.IntPtr,SharpSDL3.Structs.Rect@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetSurfaceClipRect_System_IntPtr_SharpSDL3_Structs_Rect__
  name: SetSurfaceClipRect(nint, ref Rect)
  nameWithType: Sdl.SetSurfaceClipRect(nint, ref Rect)
  fullName: SharpSDL3.Sdl.SetSurfaceClipRect(nint, ref SharpSDL3.Structs.Rect)
  nameWithType.vb: Sdl.SetSurfaceClipRect(IntPtr, Rect)
  fullName.vb: SharpSDL3.Sdl.SetSurfaceClipRect(System.IntPtr, SharpSDL3.Structs.Rect)
  name.vb: SetSurfaceClipRect(IntPtr, Rect)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetSurfaceClipRect(System.IntPtr,SharpSDL3.Structs.Rect@)
    name: SetSurfaceClipRect
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetSurfaceClipRect_System_IntPtr_SharpSDL3_Structs_Rect__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: ref
  - name: " "
  - uid: SharpSDL3.Structs.Rect
    name: Rect
    href: SharpSDL3.Structs.Rect.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetSurfaceClipRect(System.IntPtr,SharpSDL3.Structs.Rect@)
    name: SetSurfaceClipRect
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetSurfaceClipRect_System_IntPtr_SharpSDL3_Structs_Rect__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.Rect
    name: Rect
    href: SharpSDL3.Structs.Rect.html
  - name: )
- uid: SharpSDL3.Sdl.GetSurfaceClipRect*
  commentId: Overload:SharpSDL3.Sdl.GetSurfaceClipRect
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetSurfaceClipRect_System_IntPtr_SharpSDL3_Structs_Rect__
  name: GetSurfaceClipRect
  nameWithType: Sdl.GetSurfaceClipRect
  fullName: SharpSDL3.Sdl.GetSurfaceClipRect
- uid: SharpSDL3.Sdl.SetSurfaceColorKey(System.IntPtr,System.Boolean,System.UInt32)
  commentId: M:SharpSDL3.Sdl.SetSurfaceColorKey(System.IntPtr,System.Boolean,System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetSurfaceColorKey_System_IntPtr_System_Boolean_System_UInt32_
  name: SetSurfaceColorKey(nint, bool, uint)
  nameWithType: Sdl.SetSurfaceColorKey(nint, bool, uint)
  fullName: SharpSDL3.Sdl.SetSurfaceColorKey(nint, bool, uint)
  nameWithType.vb: Sdl.SetSurfaceColorKey(IntPtr, Boolean, UInteger)
  fullName.vb: SharpSDL3.Sdl.SetSurfaceColorKey(System.IntPtr, Boolean, UInteger)
  name.vb: SetSurfaceColorKey(IntPtr, Boolean, UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetSurfaceColorKey(System.IntPtr,System.Boolean,System.UInt32)
    name: SetSurfaceColorKey
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetSurfaceColorKey_System_IntPtr_System_Boolean_System_UInt32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetSurfaceColorKey(System.IntPtr,System.Boolean,System.UInt32)
    name: SetSurfaceColorKey
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetSurfaceColorKey_System_IntPtr_System_Boolean_System_UInt32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.SurfaceHasColorKey(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.SurfaceHasColorKey(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SurfaceHasColorKey_System_IntPtr_
  name: SurfaceHasColorKey(nint)
  nameWithType: Sdl.SurfaceHasColorKey(nint)
  fullName: SharpSDL3.Sdl.SurfaceHasColorKey(nint)
  nameWithType.vb: Sdl.SurfaceHasColorKey(IntPtr)
  fullName.vb: SharpSDL3.Sdl.SurfaceHasColorKey(System.IntPtr)
  name.vb: SurfaceHasColorKey(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SurfaceHasColorKey(System.IntPtr)
    name: SurfaceHasColorKey
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SurfaceHasColorKey_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SurfaceHasColorKey(System.IntPtr)
    name: SurfaceHasColorKey
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SurfaceHasColorKey_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GetSurfaceColorKey*
  commentId: Overload:SharpSDL3.Sdl.GetSurfaceColorKey
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetSurfaceColorKey_System_IntPtr_System_UInt32__
  name: GetSurfaceColorKey
  nameWithType: Sdl.GetSurfaceColorKey
  fullName: SharpSDL3.Sdl.GetSurfaceColorKey
- uid: SharpSDL3.Sdl.GetSurfaceAlphaMod(System.IntPtr,System.Byte@)
  commentId: M:SharpSDL3.Sdl.GetSurfaceAlphaMod(System.IntPtr,System.Byte@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetSurfaceAlphaMod_System_IntPtr_System_Byte__
  name: GetSurfaceAlphaMod(nint, out byte)
  nameWithType: Sdl.GetSurfaceAlphaMod(nint, out byte)
  fullName: SharpSDL3.Sdl.GetSurfaceAlphaMod(nint, out byte)
  nameWithType.vb: Sdl.GetSurfaceAlphaMod(IntPtr, Byte)
  fullName.vb: SharpSDL3.Sdl.GetSurfaceAlphaMod(System.IntPtr, Byte)
  name.vb: GetSurfaceAlphaMod(IntPtr, Byte)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetSurfaceAlphaMod(System.IntPtr,System.Byte@)
    name: GetSurfaceAlphaMod
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetSurfaceAlphaMod_System_IntPtr_System_Byte__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetSurfaceAlphaMod(System.IntPtr,System.Byte@)
    name: GetSurfaceAlphaMod
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetSurfaceAlphaMod_System_IntPtr_System_Byte__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: SharpSDL3.Sdl.SetSurfaceColorMod(System.IntPtr,System.Byte,System.Byte,System.Byte)
  commentId: M:SharpSDL3.Sdl.SetSurfaceColorMod(System.IntPtr,System.Byte,System.Byte,System.Byte)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetSurfaceColorMod_System_IntPtr_System_Byte_System_Byte_System_Byte_
  name: SetSurfaceColorMod(nint, byte, byte, byte)
  nameWithType: Sdl.SetSurfaceColorMod(nint, byte, byte, byte)
  fullName: SharpSDL3.Sdl.SetSurfaceColorMod(nint, byte, byte, byte)
  nameWithType.vb: Sdl.SetSurfaceColorMod(IntPtr, Byte, Byte, Byte)
  fullName.vb: SharpSDL3.Sdl.SetSurfaceColorMod(System.IntPtr, Byte, Byte, Byte)
  name.vb: SetSurfaceColorMod(IntPtr, Byte, Byte, Byte)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetSurfaceColorMod(System.IntPtr,System.Byte,System.Byte,System.Byte)
    name: SetSurfaceColorMod
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetSurfaceColorMod_System_IntPtr_System_Byte_System_Byte_System_Byte_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: ','
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: ','
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetSurfaceColorMod(System.IntPtr,System.Byte,System.Byte,System.Byte)
    name: SetSurfaceColorMod
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetSurfaceColorMod_System_IntPtr_System_Byte_System_Byte_System_Byte_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: SharpSDL3.Sdl.GetSurfaceColorMod*
  commentId: Overload:SharpSDL3.Sdl.GetSurfaceColorMod
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetSurfaceColorMod_System_IntPtr_System_Byte__System_Byte__System_Byte__
  name: GetSurfaceColorMod
  nameWithType: Sdl.GetSurfaceColorMod
  fullName: SharpSDL3.Sdl.GetSurfaceColorMod
- uid: SharpSDL3.Sdl.AddSurfaceAlternateImage(System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.AddSurfaceAlternateImage(System.IntPtr,System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_AddSurfaceAlternateImage_System_IntPtr_System_IntPtr_
  name: AddSurfaceAlternateImage(nint, nint)
  nameWithType: Sdl.AddSurfaceAlternateImage(nint, nint)
  fullName: SharpSDL3.Sdl.AddSurfaceAlternateImage(nint, nint)
  nameWithType.vb: Sdl.AddSurfaceAlternateImage(IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.AddSurfaceAlternateImage(System.IntPtr, System.IntPtr)
  name.vb: AddSurfaceAlternateImage(IntPtr, IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.AddSurfaceAlternateImage(System.IntPtr,System.IntPtr)
    name: AddSurfaceAlternateImage
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_AddSurfaceAlternateImage_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.AddSurfaceAlternateImage(System.IntPtr,System.IntPtr)
    name: AddSurfaceAlternateImage
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_AddSurfaceAlternateImage_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GetSurfaceImages*
  commentId: Overload:SharpSDL3.Sdl.GetSurfaceImages
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetSurfaceImages_System_IntPtr_System_Int32__
  name: GetSurfaceImages
  nameWithType: Sdl.GetSurfaceImages
  fullName: SharpSDL3.Sdl.GetSurfaceImages
- uid: SharpSDL3.Sdl.GetSurfaceProperties*
  commentId: Overload:SharpSDL3.Sdl.GetSurfaceProperties
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetSurfaceProperties_System_IntPtr_
  name: GetSurfaceProperties
  nameWithType: Sdl.GetSurfaceProperties
  fullName: SharpSDL3.Sdl.GetSurfaceProperties
- uid: SharpSDL3.Sdl.GetSystemTheme*
  commentId: Overload:SharpSDL3.Sdl.GetSystemTheme
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetSystemTheme
  name: GetSystemTheme
  nameWithType: Sdl.GetSystemTheme
  fullName: SharpSDL3.Sdl.GetSystemTheme
- uid: SharpSDL3.Enums.SystemTheme
  commentId: T:SharpSDL3.Enums.SystemTheme
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.SystemTheme.html
  name: SystemTheme
  nameWithType: SystemTheme
  fullName: SharpSDL3.Enums.SystemTheme
- uid: SharpSDL3.Sdl.SetTextInputArea(System.IntPtr,SharpSDL3.Structs.Rect@,System.Int32)
  commentId: M:SharpSDL3.Sdl.SetTextInputArea(System.IntPtr,SharpSDL3.Structs.Rect@,System.Int32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetTextInputArea_System_IntPtr_SharpSDL3_Structs_Rect__System_Int32_
  name: SetTextInputArea(nint, ref Rect, int)
  nameWithType: Sdl.SetTextInputArea(nint, ref Rect, int)
  fullName: SharpSDL3.Sdl.SetTextInputArea(nint, ref SharpSDL3.Structs.Rect, int)
  nameWithType.vb: Sdl.SetTextInputArea(IntPtr, Rect, Integer)
  fullName.vb: SharpSDL3.Sdl.SetTextInputArea(System.IntPtr, SharpSDL3.Structs.Rect, Integer)
  name.vb: SetTextInputArea(IntPtr, Rect, Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetTextInputArea(System.IntPtr,SharpSDL3.Structs.Rect@,System.Int32)
    name: SetTextInputArea
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetTextInputArea_System_IntPtr_SharpSDL3_Structs_Rect__System_Int32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: ref
  - name: " "
  - uid: SharpSDL3.Structs.Rect
    name: Rect
    href: SharpSDL3.Structs.Rect.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetTextInputArea(System.IntPtr,SharpSDL3.Structs.Rect@,System.Int32)
    name: SetTextInputArea
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetTextInputArea_System_IntPtr_SharpSDL3_Structs_Rect__System_Int32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.Rect
    name: Rect
    href: SharpSDL3.Structs.Rect.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.GetTextInputArea*
  commentId: Overload:SharpSDL3.Sdl.GetTextInputArea
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTextInputArea_System_IntPtr_SharpSDL3_Structs_Rect__System_Int32__
  name: GetTextInputArea
  nameWithType: Sdl.GetTextInputArea
  fullName: SharpSDL3.Sdl.GetTextInputArea
- uid: SharpSDL3.Sdl.GetCurrentThreadID
  commentId: M:SharpSDL3.Sdl.GetCurrentThreadID
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetCurrentThreadID
  name: GetCurrentThreadID()
  nameWithType: Sdl.GetCurrentThreadID()
  fullName: SharpSDL3.Sdl.GetCurrentThreadID()
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetCurrentThreadID
    name: GetCurrentThreadID
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetCurrentThreadID
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetCurrentThreadID
    name: GetCurrentThreadID
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetCurrentThreadID
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.GetThreadId*
  commentId: Overload:SharpSDL3.Sdl.GetThreadId
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetThreadId_System_IntPtr_
  name: GetThreadId
  nameWithType: Sdl.GetThreadId
  fullName: SharpSDL3.Sdl.GetThreadId
- uid: SharpSDL3.Sdl.GetThreadName*
  commentId: Overload:SharpSDL3.Sdl.GetThreadName
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetThreadName_System_IntPtr_
  name: GetThreadName
  nameWithType: Sdl.GetThreadName
  fullName: SharpSDL3.Sdl.GetThreadName
- uid: SharpSDL3.Enums.ThreadState
  commentId: T:SharpSDL3.Enums.ThreadState
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.ThreadState.html
  name: ThreadState
  nameWithType: ThreadState
  fullName: SharpSDL3.Enums.ThreadState
- uid: SharpSDL3.Sdl.GetThreadState*
  commentId: Overload:SharpSDL3.Sdl.GetThreadState
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetThreadState_System_IntPtr_
  name: GetThreadState
  nameWithType: Sdl.GetThreadState
  fullName: SharpSDL3.Sdl.GetThreadState
- uid: SharpSDL3.Sdl.SetTls(System.IntPtr,System.IntPtr,SharpSDL3.Delegates.SdlTlsDestructorCallback)
  commentId: M:SharpSDL3.Sdl.SetTls(System.IntPtr,System.IntPtr,SharpSDL3.Delegates.SdlTlsDestructorCallback)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetTls_System_IntPtr_System_IntPtr_SharpSDL3_Delegates_SdlTlsDestructorCallback_
  name: SetTls(nint, nint, SdlTlsDestructorCallback)
  nameWithType: Sdl.SetTls(nint, nint, Delegates.SdlTlsDestructorCallback)
  fullName: SharpSDL3.Sdl.SetTls(nint, nint, SharpSDL3.Delegates.SdlTlsDestructorCallback)
  nameWithType.vb: Sdl.SetTls(IntPtr, IntPtr, Delegates.SdlTlsDestructorCallback)
  fullName.vb: SharpSDL3.Sdl.SetTls(System.IntPtr, System.IntPtr, SharpSDL3.Delegates.SdlTlsDestructorCallback)
  name.vb: SetTls(IntPtr, IntPtr, SdlTlsDestructorCallback)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetTls(System.IntPtr,System.IntPtr,SharpSDL3.Delegates.SdlTlsDestructorCallback)
    name: SetTls
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetTls_System_IntPtr_System_IntPtr_SharpSDL3_Delegates_SdlTlsDestructorCallback_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Delegates.SdlTlsDestructorCallback
    name: SdlTlsDestructorCallback
    href: SharpSDL3.Delegates.SdlTlsDestructorCallback.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetTls(System.IntPtr,System.IntPtr,SharpSDL3.Delegates.SdlTlsDestructorCallback)
    name: SetTls
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetTls_System_IntPtr_System_IntPtr_SharpSDL3_Delegates_SdlTlsDestructorCallback_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Delegates.SdlTlsDestructorCallback
    name: SdlTlsDestructorCallback
    href: SharpSDL3.Delegates.SdlTlsDestructorCallback.html
  - name: )
- uid: SharpSDL3.Sdl.GetTls*
  commentId: Overload:SharpSDL3.Sdl.GetTls
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTls_System_IntPtr_
  name: GetTls
  nameWithType: Sdl.GetTls
  fullName: SharpSDL3.Sdl.GetTls
- uid: SharpSDL3.Sdl.GetVideoDriver*
  commentId: Overload:SharpSDL3.Sdl.GetVideoDriver
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetVideoDriver_System_Int32_
  name: GetVideoDriver
  nameWithType: Sdl.GetVideoDriver
  fullName: SharpSDL3.Sdl.GetVideoDriver
- uid: SharpSDL3.Sdl.SetWindowAspectRatio(System.IntPtr,System.Single,System.Single)
  commentId: M:SharpSDL3.Sdl.SetWindowAspectRatio(System.IntPtr,System.Single,System.Single)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowAspectRatio_System_IntPtr_System_Single_System_Single_
  name: SetWindowAspectRatio(nint, float, float)
  nameWithType: Sdl.SetWindowAspectRatio(nint, float, float)
  fullName: SharpSDL3.Sdl.SetWindowAspectRatio(nint, float, float)
  nameWithType.vb: Sdl.SetWindowAspectRatio(IntPtr, Single, Single)
  fullName.vb: SharpSDL3.Sdl.SetWindowAspectRatio(System.IntPtr, Single, Single)
  name.vb: SetWindowAspectRatio(IntPtr, Single, Single)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetWindowAspectRatio(System.IntPtr,System.Single,System.Single)
    name: SetWindowAspectRatio
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowAspectRatio_System_IntPtr_System_Single_System_Single_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetWindowAspectRatio(System.IntPtr,System.Single,System.Single)
    name: SetWindowAspectRatio
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowAspectRatio_System_IntPtr_System_Single_System_Single_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: SharpSDL3.Sdl.GetWindowAspectRatio*
  commentId: Overload:SharpSDL3.Sdl.GetWindowAspectRatio
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowAspectRatio_System_IntPtr_System_Single__System_Single__
  name: GetWindowAspectRatio
  nameWithType: Sdl.GetWindowAspectRatio
  fullName: SharpSDL3.Sdl.GetWindowAspectRatio
- uid: SharpSDL3.Sdl.GetWindowSize(System.IntPtr,System.Int32@,System.Int32@)
  commentId: M:SharpSDL3.Sdl.GetWindowSize(System.IntPtr,System.Int32@,System.Int32@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowSize_System_IntPtr_System_Int32__System_Int32__
  name: GetWindowSize(nint, out int, out int)
  nameWithType: Sdl.GetWindowSize(nint, out int, out int)
  fullName: SharpSDL3.Sdl.GetWindowSize(nint, out int, out int)
  nameWithType.vb: Sdl.GetWindowSize(IntPtr, Integer, Integer)
  fullName.vb: SharpSDL3.Sdl.GetWindowSize(System.IntPtr, Integer, Integer)
  name.vb: GetWindowSize(IntPtr, Integer, Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetWindowSize(System.IntPtr,System.Int32@,System.Int32@)
    name: GetWindowSize
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowSize_System_IntPtr_System_Int32__System_Int32__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetWindowSize(System.IntPtr,System.Int32@,System.Int32@)
    name: GetWindowSize
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowSize_System_IntPtr_System_Int32__System_Int32__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.GetWindowBordersSize*
  commentId: Overload:SharpSDL3.Sdl.GetWindowBordersSize
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowBordersSize_System_IntPtr_System_Int32__System_Int32__System_Int32__System_Int32__
  name: GetWindowBordersSize
  nameWithType: Sdl.GetWindowBordersSize
  fullName: SharpSDL3.Sdl.GetWindowBordersSize
- uid: SharpSDL3.Sdl.GetWindowDisplayScale*
  commentId: Overload:SharpSDL3.Sdl.GetWindowDisplayScale
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowDisplayScale_System_IntPtr_
  name: GetWindowDisplayScale
  nameWithType: Sdl.GetWindowDisplayScale
  fullName: SharpSDL3.Sdl.GetWindowDisplayScale
- uid: SharpSDL3.Sdl.HideWindow(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.HideWindow(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HideWindow_System_IntPtr_
  name: HideWindow(nint)
  nameWithType: Sdl.HideWindow(nint)
  fullName: SharpSDL3.Sdl.HideWindow(nint)
  nameWithType.vb: Sdl.HideWindow(IntPtr)
  fullName.vb: SharpSDL3.Sdl.HideWindow(System.IntPtr)
  name.vb: HideWindow(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.HideWindow(System.IntPtr)
    name: HideWindow
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HideWindow_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.HideWindow(System.IntPtr)
    name: HideWindow
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HideWindow_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.MaximizeWindow(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.MaximizeWindow(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_MaximizeWindow_System_IntPtr_
  name: MaximizeWindow(nint)
  nameWithType: Sdl.MaximizeWindow(nint)
  fullName: SharpSDL3.Sdl.MaximizeWindow(nint)
  nameWithType.vb: Sdl.MaximizeWindow(IntPtr)
  fullName.vb: SharpSDL3.Sdl.MaximizeWindow(System.IntPtr)
  name.vb: MaximizeWindow(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.MaximizeWindow(System.IntPtr)
    name: MaximizeWindow
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_MaximizeWindow_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.MaximizeWindow(System.IntPtr)
    name: MaximizeWindow
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_MaximizeWindow_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.MinimizeWindow(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.MinimizeWindow(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_MinimizeWindow_System_IntPtr_
  name: MinimizeWindow(nint)
  nameWithType: Sdl.MinimizeWindow(nint)
  fullName: SharpSDL3.Sdl.MinimizeWindow(nint)
  nameWithType.vb: Sdl.MinimizeWindow(IntPtr)
  fullName.vb: SharpSDL3.Sdl.MinimizeWindow(System.IntPtr)
  name.vb: MinimizeWindow(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.MinimizeWindow(System.IntPtr)
    name: MinimizeWindow
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_MinimizeWindow_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.MinimizeWindow(System.IntPtr)
    name: MinimizeWindow
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_MinimizeWindow_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.SetWindowFullscreen(System.IntPtr,System.Boolean)
  commentId: M:SharpSDL3.Sdl.SetWindowFullscreen(System.IntPtr,System.Boolean)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowFullscreen_System_IntPtr_System_Boolean_
  name: SetWindowFullscreen(nint, bool)
  nameWithType: Sdl.SetWindowFullscreen(nint, bool)
  fullName: SharpSDL3.Sdl.SetWindowFullscreen(nint, bool)
  nameWithType.vb: Sdl.SetWindowFullscreen(IntPtr, Boolean)
  fullName.vb: SharpSDL3.Sdl.SetWindowFullscreen(System.IntPtr, Boolean)
  name.vb: SetWindowFullscreen(IntPtr, Boolean)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetWindowFullscreen(System.IntPtr,System.Boolean)
    name: SetWindowFullscreen
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowFullscreen_System_IntPtr_System_Boolean_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetWindowFullscreen(System.IntPtr,System.Boolean)
    name: SetWindowFullscreen
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowFullscreen_System_IntPtr_System_Boolean_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: SharpSDL3.Sdl.ShowWindow(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.ShowWindow(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ShowWindow_System_IntPtr_
  name: ShowWindow(nint)
  nameWithType: Sdl.ShowWindow(nint)
  fullName: SharpSDL3.Sdl.ShowWindow(nint)
  nameWithType.vb: Sdl.ShowWindow(IntPtr)
  fullName.vb: SharpSDL3.Sdl.ShowWindow(System.IntPtr)
  name.vb: ShowWindow(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.ShowWindow(System.IntPtr)
    name: ShowWindow
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ShowWindow_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.ShowWindow(System.IntPtr)
    name: ShowWindow
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ShowWindow_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GetWindowFlags*
  commentId: Overload:SharpSDL3.Sdl.GetWindowFlags
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowFlags_System_IntPtr_
  name: GetWindowFlags
  nameWithType: Sdl.GetWindowFlags
  fullName: SharpSDL3.Sdl.GetWindowFlags
- uid: SharpSDL3.Sdl.GetWindowId(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetWindowId(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowId_System_IntPtr_
  name: GetWindowId(nint)
  nameWithType: Sdl.GetWindowId(nint)
  fullName: SharpSDL3.Sdl.GetWindowId(nint)
  nameWithType.vb: Sdl.GetWindowId(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetWindowId(System.IntPtr)
  name.vb: GetWindowId(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetWindowId(System.IntPtr)
    name: GetWindowId
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowId_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetWindowId(System.IntPtr)
    name: GetWindowId
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowId_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Structs.WindowEvent
  commentId: T:SharpSDL3.Structs.WindowEvent
  parent: SharpSDL3.Structs
  href: SharpSDL3.Structs.WindowEvent.html
  name: WindowEvent
  nameWithType: WindowEvent
  fullName: SharpSDL3.Structs.WindowEvent
- uid: SharpSDL3.Sdl.GetWindowFromId*
  commentId: Overload:SharpSDL3.Sdl.GetWindowFromId
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowFromId_System_UInt32_
  name: GetWindowFromId
  nameWithType: Sdl.GetWindowFromId
  fullName: SharpSDL3.Sdl.GetWindowFromId
- uid: SharpSDL3.Sdl.SetWindowFullscreenMode(System.IntPtr,SharpSDL3.Structs.DisplayMode@)
  commentId: M:SharpSDL3.Sdl.SetWindowFullscreenMode(System.IntPtr,SharpSDL3.Structs.DisplayMode@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowFullscreenMode_System_IntPtr_SharpSDL3_Structs_DisplayMode__
  name: SetWindowFullscreenMode(nint, ref DisplayMode)
  nameWithType: Sdl.SetWindowFullscreenMode(nint, ref DisplayMode)
  fullName: SharpSDL3.Sdl.SetWindowFullscreenMode(nint, ref SharpSDL3.Structs.DisplayMode)
  nameWithType.vb: Sdl.SetWindowFullscreenMode(IntPtr, DisplayMode)
  fullName.vb: SharpSDL3.Sdl.SetWindowFullscreenMode(System.IntPtr, SharpSDL3.Structs.DisplayMode)
  name.vb: SetWindowFullscreenMode(IntPtr, DisplayMode)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetWindowFullscreenMode(System.IntPtr,SharpSDL3.Structs.DisplayMode@)
    name: SetWindowFullscreenMode
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowFullscreenMode_System_IntPtr_SharpSDL3_Structs_DisplayMode__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: ref
  - name: " "
  - uid: SharpSDL3.Structs.DisplayMode
    name: DisplayMode
    href: SharpSDL3.Structs.DisplayMode.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetWindowFullscreenMode(System.IntPtr,SharpSDL3.Structs.DisplayMode@)
    name: SetWindowFullscreenMode
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowFullscreenMode_System_IntPtr_SharpSDL3_Structs_DisplayMode__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.DisplayMode
    name: DisplayMode
    href: SharpSDL3.Structs.DisplayMode.html
  - name: )
- uid: SharpSDL3.Sdl.GetWindowFullscreenMode*
  commentId: Overload:SharpSDL3.Sdl.GetWindowFullscreenMode
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowFullscreenMode_System_IntPtr_
  name: GetWindowFullscreenMode
  nameWithType: Sdl.GetWindowFullscreenMode
  fullName: SharpSDL3.Sdl.GetWindowFullscreenMode
- uid: SharpSDL3.Sdl.GetWindowFullScreenMode*
  commentId: Overload:SharpSDL3.Sdl.GetWindowFullScreenMode
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowFullScreenMode_System_IntPtr_
  name: GetWindowFullScreenMode
  nameWithType: Sdl.GetWindowFullScreenMode
  fullName: SharpSDL3.Sdl.GetWindowFullScreenMode
- uid: SharpSDL3.Sdl.GetWindowICCProfile*
  commentId: Overload:SharpSDL3.Sdl.GetWindowICCProfile
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowICCProfile_System_IntPtr_System_UIntPtr__
  name: GetWindowICCProfile
  nameWithType: Sdl.GetWindowICCProfile
  fullName: SharpSDL3.Sdl.GetWindowICCProfile
- uid: SharpSDL3.Sdl.GetWindowFromId(System.UInt32)
  commentId: M:SharpSDL3.Sdl.GetWindowFromId(System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowFromId_System_UInt32_
  name: GetWindowFromId(uint)
  nameWithType: Sdl.GetWindowFromId(uint)
  fullName: SharpSDL3.Sdl.GetWindowFromId(uint)
  nameWithType.vb: Sdl.GetWindowFromId(UInteger)
  fullName.vb: SharpSDL3.Sdl.GetWindowFromId(UInteger)
  name.vb: GetWindowFromId(UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetWindowFromId(System.UInt32)
    name: GetWindowFromId
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowFromId_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetWindowFromId(System.UInt32)
    name: GetWindowFromId
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowFromId_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.GetWindowId*
  commentId: Overload:SharpSDL3.Sdl.GetWindowId
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowId_System_IntPtr_
  name: GetWindowId
  nameWithType: Sdl.GetWindowId
  fullName: SharpSDL3.Sdl.GetWindowId
- uid: SharpSDL3.Sdl.GetWindowKeyboardGrab*
  commentId: Overload:SharpSDL3.Sdl.GetWindowKeyboardGrab
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowKeyboardGrab_System_IntPtr_
  name: GetWindowKeyboardGrab
  nameWithType: Sdl.GetWindowKeyboardGrab
  fullName: SharpSDL3.Sdl.GetWindowKeyboardGrab
- uid: SharpSDL3.Sdl.GetWindowMinimumSize(System.IntPtr,System.Int32@,System.Int32@)
  commentId: M:SharpSDL3.Sdl.GetWindowMinimumSize(System.IntPtr,System.Int32@,System.Int32@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowMinimumSize_System_IntPtr_System_Int32__System_Int32__
  name: GetWindowMinimumSize(nint, out int, out int)
  nameWithType: Sdl.GetWindowMinimumSize(nint, out int, out int)
  fullName: SharpSDL3.Sdl.GetWindowMinimumSize(nint, out int, out int)
  nameWithType.vb: Sdl.GetWindowMinimumSize(IntPtr, Integer, Integer)
  fullName.vb: SharpSDL3.Sdl.GetWindowMinimumSize(System.IntPtr, Integer, Integer)
  name.vb: GetWindowMinimumSize(IntPtr, Integer, Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetWindowMinimumSize(System.IntPtr,System.Int32@,System.Int32@)
    name: GetWindowMinimumSize
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowMinimumSize_System_IntPtr_System_Int32__System_Int32__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetWindowMinimumSize(System.IntPtr,System.Int32@,System.Int32@)
    name: GetWindowMinimumSize
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowMinimumSize_System_IntPtr_System_Int32__System_Int32__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.SetWindowMaximumSize(System.IntPtr,System.Int32,System.Int32)
  commentId: M:SharpSDL3.Sdl.SetWindowMaximumSize(System.IntPtr,System.Int32,System.Int32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowMaximumSize_System_IntPtr_System_Int32_System_Int32_
  name: SetWindowMaximumSize(nint, int, int)
  nameWithType: Sdl.SetWindowMaximumSize(nint, int, int)
  fullName: SharpSDL3.Sdl.SetWindowMaximumSize(nint, int, int)
  nameWithType.vb: Sdl.SetWindowMaximumSize(IntPtr, Integer, Integer)
  fullName.vb: SharpSDL3.Sdl.SetWindowMaximumSize(System.IntPtr, Integer, Integer)
  name.vb: SetWindowMaximumSize(IntPtr, Integer, Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetWindowMaximumSize(System.IntPtr,System.Int32,System.Int32)
    name: SetWindowMaximumSize
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowMaximumSize_System_IntPtr_System_Int32_System_Int32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetWindowMaximumSize(System.IntPtr,System.Int32,System.Int32)
    name: SetWindowMaximumSize
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowMaximumSize_System_IntPtr_System_Int32_System_Int32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.GetWindowMaximumSize*
  commentId: Overload:SharpSDL3.Sdl.GetWindowMaximumSize
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowMaximumSize_System_IntPtr_System_Int32__System_Int32__
  name: GetWindowMaximumSize
  nameWithType: Sdl.GetWindowMaximumSize
  fullName: SharpSDL3.Sdl.GetWindowMaximumSize
- uid: SharpSDL3.Sdl.GetWindowMaximumSize(System.IntPtr,System.Int32@,System.Int32@)
  commentId: M:SharpSDL3.Sdl.GetWindowMaximumSize(System.IntPtr,System.Int32@,System.Int32@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowMaximumSize_System_IntPtr_System_Int32__System_Int32__
  name: GetWindowMaximumSize(nint, out int, out int)
  nameWithType: Sdl.GetWindowMaximumSize(nint, out int, out int)
  fullName: SharpSDL3.Sdl.GetWindowMaximumSize(nint, out int, out int)
  nameWithType.vb: Sdl.GetWindowMaximumSize(IntPtr, Integer, Integer)
  fullName.vb: SharpSDL3.Sdl.GetWindowMaximumSize(System.IntPtr, Integer, Integer)
  name.vb: GetWindowMaximumSize(IntPtr, Integer, Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetWindowMaximumSize(System.IntPtr,System.Int32@,System.Int32@)
    name: GetWindowMaximumSize
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowMaximumSize_System_IntPtr_System_Int32__System_Int32__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetWindowMaximumSize(System.IntPtr,System.Int32@,System.Int32@)
    name: GetWindowMaximumSize
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowMaximumSize_System_IntPtr_System_Int32__System_Int32__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.SetWindowMinimumSize(System.IntPtr,System.Int32,System.Int32)
  commentId: M:SharpSDL3.Sdl.SetWindowMinimumSize(System.IntPtr,System.Int32,System.Int32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowMinimumSize_System_IntPtr_System_Int32_System_Int32_
  name: SetWindowMinimumSize(nint, int, int)
  nameWithType: Sdl.SetWindowMinimumSize(nint, int, int)
  fullName: SharpSDL3.Sdl.SetWindowMinimumSize(nint, int, int)
  nameWithType.vb: Sdl.SetWindowMinimumSize(IntPtr, Integer, Integer)
  fullName.vb: SharpSDL3.Sdl.SetWindowMinimumSize(System.IntPtr, Integer, Integer)
  name.vb: SetWindowMinimumSize(IntPtr, Integer, Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetWindowMinimumSize(System.IntPtr,System.Int32,System.Int32)
    name: SetWindowMinimumSize
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowMinimumSize_System_IntPtr_System_Int32_System_Int32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetWindowMinimumSize(System.IntPtr,System.Int32,System.Int32)
    name: SetWindowMinimumSize
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowMinimumSize_System_IntPtr_System_Int32_System_Int32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.GetWindowMinimumSize*
  commentId: Overload:SharpSDL3.Sdl.GetWindowMinimumSize
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowMinimumSize_System_IntPtr_System_Int32__System_Int32__
  name: GetWindowMinimumSize
  nameWithType: Sdl.GetWindowMinimumSize
  fullName: SharpSDL3.Sdl.GetWindowMinimumSize
- uid: SharpSDL3.Sdl.GetWindowMouseRect(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetWindowMouseRect(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowMouseRect_System_IntPtr_
  name: GetWindowMouseRect(nint)
  nameWithType: Sdl.GetWindowMouseRect(nint)
  fullName: SharpSDL3.Sdl.GetWindowMouseRect(nint)
  nameWithType.vb: Sdl.GetWindowMouseRect(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetWindowMouseRect(System.IntPtr)
  name.vb: GetWindowMouseRect(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetWindowMouseRect(System.IntPtr)
    name: GetWindowMouseRect
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowMouseRect_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetWindowMouseRect(System.IntPtr)
    name: GetWindowMouseRect
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowMouseRect_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.SetWindowMouseRect(System.IntPtr,SharpSDL3.Structs.Rect@)
  commentId: M:SharpSDL3.Sdl.SetWindowMouseRect(System.IntPtr,SharpSDL3.Structs.Rect@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowMouseRect_System_IntPtr_SharpSDL3_Structs_Rect__
  name: SetWindowMouseRect(nint, ref Rect)
  nameWithType: Sdl.SetWindowMouseRect(nint, ref Rect)
  fullName: SharpSDL3.Sdl.SetWindowMouseRect(nint, ref SharpSDL3.Structs.Rect)
  nameWithType.vb: Sdl.SetWindowMouseRect(IntPtr, Rect)
  fullName.vb: SharpSDL3.Sdl.SetWindowMouseRect(System.IntPtr, SharpSDL3.Structs.Rect)
  name.vb: SetWindowMouseRect(IntPtr, Rect)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetWindowMouseRect(System.IntPtr,SharpSDL3.Structs.Rect@)
    name: SetWindowMouseRect
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowMouseRect_System_IntPtr_SharpSDL3_Structs_Rect__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: ref
  - name: " "
  - uid: SharpSDL3.Structs.Rect
    name: Rect
    href: SharpSDL3.Structs.Rect.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetWindowMouseRect(System.IntPtr,SharpSDL3.Structs.Rect@)
    name: SetWindowMouseRect
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowMouseRect_System_IntPtr_SharpSDL3_Structs_Rect__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.Rect
    name: Rect
    href: SharpSDL3.Structs.Rect.html
  - name: )
- uid: SharpSDL3.Sdl.GetWindowMouseGrab*
  commentId: Overload:SharpSDL3.Sdl.GetWindowMouseGrab
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowMouseGrab_System_IntPtr_
  name: GetWindowMouseGrab
  nameWithType: Sdl.GetWindowMouseGrab
  fullName: SharpSDL3.Sdl.GetWindowMouseGrab
- uid: SharpSDL3.Sdl.GetWindowMouseGrab(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetWindowMouseGrab(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowMouseGrab_System_IntPtr_
  name: GetWindowMouseGrab(nint)
  nameWithType: Sdl.GetWindowMouseGrab(nint)
  fullName: SharpSDL3.Sdl.GetWindowMouseGrab(nint)
  nameWithType.vb: Sdl.GetWindowMouseGrab(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetWindowMouseGrab(System.IntPtr)
  name.vb: GetWindowMouseGrab(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetWindowMouseGrab(System.IntPtr)
    name: GetWindowMouseGrab
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowMouseGrab_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetWindowMouseGrab(System.IntPtr)
    name: GetWindowMouseGrab
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowMouseGrab_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GetWindowMouseRectPtr*
  commentId: Overload:SharpSDL3.Sdl.GetWindowMouseRectPtr
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowMouseRectPtr_System_IntPtr_
  name: GetWindowMouseRectPtr
  nameWithType: Sdl.GetWindowMouseRectPtr
  fullName: SharpSDL3.Sdl.GetWindowMouseRectPtr
- uid: SharpSDL3.Sdl.GetWindowMouseRect*
  commentId: Overload:SharpSDL3.Sdl.GetWindowMouseRect
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowMouseRect_System_IntPtr_
  name: GetWindowMouseRect
  nameWithType: Sdl.GetWindowMouseRect
  fullName: SharpSDL3.Sdl.GetWindowMouseRect
- uid: SharpSDL3.Sdl.SetWindowOpacity(System.IntPtr,System.Single)
  commentId: M:SharpSDL3.Sdl.SetWindowOpacity(System.IntPtr,System.Single)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowOpacity_System_IntPtr_System_Single_
  name: SetWindowOpacity(nint, float)
  nameWithType: Sdl.SetWindowOpacity(nint, float)
  fullName: SharpSDL3.Sdl.SetWindowOpacity(nint, float)
  nameWithType.vb: Sdl.SetWindowOpacity(IntPtr, Single)
  fullName.vb: SharpSDL3.Sdl.SetWindowOpacity(System.IntPtr, Single)
  name.vb: SetWindowOpacity(IntPtr, Single)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetWindowOpacity(System.IntPtr,System.Single)
    name: SetWindowOpacity
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowOpacity_System_IntPtr_System_Single_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetWindowOpacity(System.IntPtr,System.Single)
    name: SetWindowOpacity
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowOpacity_System_IntPtr_System_Single_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: SharpSDL3.Sdl.GetWindowOpacity*
  commentId: Overload:SharpSDL3.Sdl.GetWindowOpacity
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowOpacity_System_IntPtr_
  name: GetWindowOpacity
  nameWithType: Sdl.GetWindowOpacity
  fullName: SharpSDL3.Sdl.GetWindowOpacity
- uid: SharpSDL3.Sdl.GetWindowParent*
  commentId: Overload:SharpSDL3.Sdl.GetWindowParent
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowParent_System_IntPtr_
  name: GetWindowParent
  nameWithType: Sdl.GetWindowParent
  fullName: SharpSDL3.Sdl.GetWindowParent
- uid: SharpSDL3.Sdl.GetWindowPixelDensity*
  commentId: Overload:SharpSDL3.Sdl.GetWindowPixelDensity
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowPixelDensity_System_IntPtr_
  name: GetWindowPixelDensity
  nameWithType: Sdl.GetWindowPixelDensity
  fullName: SharpSDL3.Sdl.GetWindowPixelDensity
- uid: SharpSDL3.Sdl.GetWindowPixelFormat*
  commentId: Overload:SharpSDL3.Sdl.GetWindowPixelFormat
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowPixelFormat_System_IntPtr_
  name: GetWindowPixelFormat
  nameWithType: Sdl.GetWindowPixelFormat
  fullName: SharpSDL3.Sdl.GetWindowPixelFormat
- uid: SharpSDL3.Sdl.SetWindowPosition(System.IntPtr,System.Int32,System.Int32)
  commentId: M:SharpSDL3.Sdl.SetWindowPosition(System.IntPtr,System.Int32,System.Int32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowPosition_System_IntPtr_System_Int32_System_Int32_
  name: SetWindowPosition(nint, int, int)
  nameWithType: Sdl.SetWindowPosition(nint, int, int)
  fullName: SharpSDL3.Sdl.SetWindowPosition(nint, int, int)
  nameWithType.vb: Sdl.SetWindowPosition(IntPtr, Integer, Integer)
  fullName.vb: SharpSDL3.Sdl.SetWindowPosition(System.IntPtr, Integer, Integer)
  name.vb: SetWindowPosition(IntPtr, Integer, Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetWindowPosition(System.IntPtr,System.Int32,System.Int32)
    name: SetWindowPosition
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowPosition_System_IntPtr_System_Int32_System_Int32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetWindowPosition(System.IntPtr,System.Int32,System.Int32)
    name: SetWindowPosition
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowPosition_System_IntPtr_System_Int32_System_Int32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.GetWindowPosition*
  commentId: Overload:SharpSDL3.Sdl.GetWindowPosition
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowPosition_System_IntPtr_System_Int32__System_Int32__
  name: GetWindowPosition
  nameWithType: Sdl.GetWindowPosition
  fullName: SharpSDL3.Sdl.GetWindowPosition
- uid: SharpSDL3.Sdl.GetWindowProperties*
  commentId: Overload:SharpSDL3.Sdl.GetWindowProperties
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowProperties_System_IntPtr_
  name: GetWindowProperties
  nameWithType: Sdl.GetWindowProperties
  fullName: SharpSDL3.Sdl.GetWindowProperties
- uid: SharpSDL3.Sdl.GetWindows*
  commentId: Overload:SharpSDL3.Sdl.GetWindows
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindows_System_Int32__
  name: GetWindows
  nameWithType: Sdl.GetWindows
  fullName: SharpSDL3.Sdl.GetWindows
- uid: SharpSDL3.Sdl.GetWindowSafeArea*
  commentId: Overload:SharpSDL3.Sdl.GetWindowSafeArea
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowSafeArea_System_IntPtr_SharpSDL3_Structs_Rect__
  name: GetWindowSafeArea
  nameWithType: Sdl.GetWindowSafeArea
  fullName: SharpSDL3.Sdl.GetWindowSafeArea
- uid: SharpSDL3.Sdl.SetWindowSize(System.IntPtr,System.Int32,System.Int32)
  commentId: M:SharpSDL3.Sdl.SetWindowSize(System.IntPtr,System.Int32,System.Int32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowSize_System_IntPtr_System_Int32_System_Int32_
  name: SetWindowSize(nint, int, int)
  nameWithType: Sdl.SetWindowSize(nint, int, int)
  fullName: SharpSDL3.Sdl.SetWindowSize(nint, int, int)
  nameWithType.vb: Sdl.SetWindowSize(IntPtr, Integer, Integer)
  fullName.vb: SharpSDL3.Sdl.SetWindowSize(System.IntPtr, Integer, Integer)
  name.vb: SetWindowSize(IntPtr, Integer, Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetWindowSize(System.IntPtr,System.Int32,System.Int32)
    name: SetWindowSize
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowSize_System_IntPtr_System_Int32_System_Int32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetWindowSize(System.IntPtr,System.Int32,System.Int32)
    name: SetWindowSize
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowSize_System_IntPtr_System_Int32_System_Int32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.GetWindowSize*
  commentId: Overload:SharpSDL3.Sdl.GetWindowSize
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowSize_System_IntPtr_System_Int32__System_Int32__
  name: GetWindowSize
  nameWithType: Sdl.GetWindowSize
  fullName: SharpSDL3.Sdl.GetWindowSize
- uid: SharpSDL3.Sdl.GetWindowSizeInPixels*
  commentId: Overload:SharpSDL3.Sdl.GetWindowSizeInPixels
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowSizeInPixels_System_IntPtr_System_Int32__System_Int32__
  name: GetWindowSizeInPixels
  nameWithType: Sdl.GetWindowSizeInPixels
  fullName: SharpSDL3.Sdl.GetWindowSizeInPixels
- uid: SharpSDL3.Sdl.DestroyWindowSurface(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.DestroyWindowSurface(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyWindowSurface_System_IntPtr_
  name: DestroyWindowSurface(nint)
  nameWithType: Sdl.DestroyWindowSurface(nint)
  fullName: SharpSDL3.Sdl.DestroyWindowSurface(nint)
  nameWithType.vb: Sdl.DestroyWindowSurface(IntPtr)
  fullName.vb: SharpSDL3.Sdl.DestroyWindowSurface(System.IntPtr)
  name.vb: DestroyWindowSurface(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.DestroyWindowSurface(System.IntPtr)
    name: DestroyWindowSurface
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyWindowSurface_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.DestroyWindowSurface(System.IntPtr)
    name: DestroyWindowSurface
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyWindowSurface_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.UpdateWindowSurface(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.UpdateWindowSurface(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UpdateWindowSurface_System_IntPtr_
  name: UpdateWindowSurface(nint)
  nameWithType: Sdl.UpdateWindowSurface(nint)
  fullName: SharpSDL3.Sdl.UpdateWindowSurface(nint)
  nameWithType.vb: Sdl.UpdateWindowSurface(IntPtr)
  fullName.vb: SharpSDL3.Sdl.UpdateWindowSurface(System.IntPtr)
  name.vb: UpdateWindowSurface(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.UpdateWindowSurface(System.IntPtr)
    name: UpdateWindowSurface
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UpdateWindowSurface_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.UpdateWindowSurface(System.IntPtr)
    name: UpdateWindowSurface
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UpdateWindowSurface_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.UpdateWindowSurfaceRects(System.IntPtr,System.Span{SharpSDL3.Structs.Rect},System.Int32)
  commentId: M:SharpSDL3.Sdl.UpdateWindowSurfaceRects(System.IntPtr,System.Span{SharpSDL3.Structs.Rect},System.Int32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UpdateWindowSurfaceRects_System_IntPtr_System_Span_SharpSDL3_Structs_Rect__System_Int32_
  name: UpdateWindowSurfaceRects(nint, Span<Rect>, int)
  nameWithType: Sdl.UpdateWindowSurfaceRects(nint, Span<Rect>, int)
  fullName: SharpSDL3.Sdl.UpdateWindowSurfaceRects(nint, System.Span<SharpSDL3.Structs.Rect>, int)
  nameWithType.vb: Sdl.UpdateWindowSurfaceRects(IntPtr, Span(Of Rect), Integer)
  fullName.vb: SharpSDL3.Sdl.UpdateWindowSurfaceRects(System.IntPtr, System.Span(Of SharpSDL3.Structs.Rect), Integer)
  name.vb: UpdateWindowSurfaceRects(IntPtr, Span(Of Rect), Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.UpdateWindowSurfaceRects(System.IntPtr,System.Span{SharpSDL3.Structs.Rect},System.Int32)
    name: UpdateWindowSurfaceRects
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UpdateWindowSurfaceRects_System_IntPtr_System_Span_SharpSDL3_Structs_Rect__System_Int32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: SharpSDL3.Structs.Rect
    name: Rect
    href: SharpSDL3.Structs.Rect.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.UpdateWindowSurfaceRects(System.IntPtr,System.Span{SharpSDL3.Structs.Rect},System.Int32)
    name: UpdateWindowSurfaceRects
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UpdateWindowSurfaceRects_System_IntPtr_System_Span_SharpSDL3_Structs_Rect__System_Int32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: SharpSDL3.Structs.Rect
    name: Rect
    href: SharpSDL3.Structs.Rect.html
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.GetWindowSurface*
  commentId: Overload:SharpSDL3.Sdl.GetWindowSurface
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowSurface_System_IntPtr_
  name: GetWindowSurface
  nameWithType: Sdl.GetWindowSurface
  fullName: SharpSDL3.Sdl.GetWindowSurface
- uid: SharpSDL3.Sdl.SetWindowSurfaceVSync(System.IntPtr,System.Int32)
  commentId: M:SharpSDL3.Sdl.SetWindowSurfaceVSync(System.IntPtr,System.Int32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowSurfaceVSync_System_IntPtr_System_Int32_
  name: SetWindowSurfaceVSync(nint, int)
  nameWithType: Sdl.SetWindowSurfaceVSync(nint, int)
  fullName: SharpSDL3.Sdl.SetWindowSurfaceVSync(nint, int)
  nameWithType.vb: Sdl.SetWindowSurfaceVSync(IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.SetWindowSurfaceVSync(System.IntPtr, Integer)
  name.vb: SetWindowSurfaceVSync(IntPtr, Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetWindowSurfaceVSync(System.IntPtr,System.Int32)
    name: SetWindowSurfaceVSync
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowSurfaceVSync_System_IntPtr_System_Int32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetWindowSurfaceVSync(System.IntPtr,System.Int32)
    name: SetWindowSurfaceVSync
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowSurfaceVSync_System_IntPtr_System_Int32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.GetWindowSurfaceVSync*
  commentId: Overload:SharpSDL3.Sdl.GetWindowSurfaceVSync
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowSurfaceVSync_System_IntPtr_System_Int32__
  name: GetWindowSurfaceVSync
  nameWithType: Sdl.GetWindowSurfaceVSync
  fullName: SharpSDL3.Sdl.GetWindowSurfaceVSync
- uid: SharpSDL3.Sdl.SetWindowTitle(System.IntPtr,System.String)
  commentId: M:SharpSDL3.Sdl.SetWindowTitle(System.IntPtr,System.String)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowTitle_System_IntPtr_System_String_
  name: SetWindowTitle(nint, string)
  nameWithType: Sdl.SetWindowTitle(nint, string)
  fullName: SharpSDL3.Sdl.SetWindowTitle(nint, string)
  nameWithType.vb: Sdl.SetWindowTitle(IntPtr, String)
  fullName.vb: SharpSDL3.Sdl.SetWindowTitle(System.IntPtr, String)
  name.vb: SetWindowTitle(IntPtr, String)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetWindowTitle(System.IntPtr,System.String)
    name: SetWindowTitle
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowTitle_System_IntPtr_System_String_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetWindowTitle(System.IntPtr,System.String)
    name: SetWindowTitle
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowTitle_System_IntPtr_System_String_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SharpSDL3.Sdl.GetWindowTitle*
  commentId: Overload:SharpSDL3.Sdl.GetWindowTitle
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowTitle_System_IntPtr_
  name: GetWindowTitle
  nameWithType: Sdl.GetWindowTitle
  fullName: SharpSDL3.Sdl.GetWindowTitle
- uid: SharpSDL3.Sdl.StringToGUID(System.String)
  commentId: M:SharpSDL3.Sdl.StringToGUID(System.String)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_StringToGUID_System_String_
  name: StringToGUID(string)
  nameWithType: Sdl.StringToGUID(string)
  fullName: SharpSDL3.Sdl.StringToGUID(string)
  nameWithType.vb: Sdl.StringToGUID(String)
  fullName.vb: SharpSDL3.Sdl.StringToGUID(String)
  name.vb: StringToGUID(String)
  spec.csharp:
  - uid: SharpSDL3.Sdl.StringToGUID(System.String)
    name: StringToGUID
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_StringToGUID_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.StringToGUID(System.String)
    name: StringToGUID
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_StringToGUID_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SharpSDL3.Sdl.GuidToString*
  commentId: Overload:SharpSDL3.Sdl.GuidToString
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GuidToString_SharpSDL3_Structs_SdlGuid_System_String_System_Int32_
  name: GuidToString
  nameWithType: Sdl.GuidToString
  fullName: SharpSDL3.Sdl.GuidToString
- uid: SharpSDL3.Sdl.GetClipboardData(System.String)
  commentId: M:SharpSDL3.Sdl.GetClipboardData(System.String)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetClipboardData_System_String_
  name: GetClipboardData(string)
  nameWithType: Sdl.GetClipboardData(string)
  fullName: SharpSDL3.Sdl.GetClipboardData(string)
  nameWithType.vb: Sdl.GetClipboardData(String)
  fullName.vb: SharpSDL3.Sdl.GetClipboardData(String)
  name.vb: GetClipboardData(String)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetClipboardData(System.String)
    name: GetClipboardData
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetClipboardData_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetClipboardData(System.String)
    name: GetClipboardData
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetClipboardData_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SharpSDL3.Sdl.HasClipboardData*
  commentId: Overload:SharpSDL3.Sdl.HasClipboardData
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasClipboardData_System_String_
  name: HasClipboardData
  nameWithType: Sdl.HasClipboardData
  fullName: SharpSDL3.Sdl.HasClipboardData
- uid: SharpSDL3.Sdl.GetClipboardText
  commentId: M:SharpSDL3.Sdl.GetClipboardText
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetClipboardText
  name: GetClipboardText()
  nameWithType: Sdl.GetClipboardText()
  fullName: SharpSDL3.Sdl.GetClipboardText()
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetClipboardText
    name: GetClipboardText
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetClipboardText
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetClipboardText
    name: GetClipboardText
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetClipboardText
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.HasClipboardText*
  commentId: Overload:SharpSDL3.Sdl.HasClipboardText
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasClipboardText
  name: HasClipboardText
  nameWithType: Sdl.HasClipboardText
  fullName: SharpSDL3.Sdl.HasClipboardText
- uid: SharpSDL3.Sdl.HasKeyboard*
  commentId: Overload:SharpSDL3.Sdl.HasKeyboard
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasKeyboard
  name: HasKeyboard
  nameWithType: Sdl.HasKeyboard
  fullName: SharpSDL3.Sdl.HasKeyboard
- uid: SharpSDL3.Sdl.GetPrimarySelectionText
  commentId: M:SharpSDL3.Sdl.GetPrimarySelectionText
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetPrimarySelectionText
  name: GetPrimarySelectionText()
  nameWithType: Sdl.GetPrimarySelectionText()
  fullName: SharpSDL3.Sdl.GetPrimarySelectionText()
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetPrimarySelectionText
    name: GetPrimarySelectionText
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetPrimarySelectionText
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetPrimarySelectionText
    name: GetPrimarySelectionText
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetPrimarySelectionText
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.HasPrimarySelectionText*
  commentId: Overload:SharpSDL3.Sdl.HasPrimarySelectionText
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasPrimarySelectionText
  name: HasPrimarySelectionText
  nameWithType: Sdl.HasPrimarySelectionText
  fullName: SharpSDL3.Sdl.HasPrimarySelectionText
- uid: SharpSDL3.Sdl.HasProperty*
  commentId: Overload:SharpSDL3.Sdl.HasProperty
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasProperty_System_UInt32_System_String_
  name: HasProperty
  nameWithType: Sdl.HasProperty
  fullName: SharpSDL3.Sdl.HasProperty
- uid: SharpSDL3.Sdl.GetRectIntersection(SharpSDL3.Structs.Rect@,SharpSDL3.Structs.Rect@,SharpSDL3.Structs.Rect@)
  commentId: M:SharpSDL3.Sdl.GetRectIntersection(SharpSDL3.Structs.Rect@,SharpSDL3.Structs.Rect@,SharpSDL3.Structs.Rect@)
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRectIntersection_SharpSDL3_Structs_Rect__SharpSDL3_Structs_Rect__SharpSDL3_Structs_Rect__
  name: GetRectIntersection(ref Rect, ref Rect, out Rect)
  nameWithType: Sdl.GetRectIntersection(ref Rect, ref Rect, out Rect)
  fullName: SharpSDL3.Sdl.GetRectIntersection(ref SharpSDL3.Structs.Rect, ref SharpSDL3.Structs.Rect, out SharpSDL3.Structs.Rect)
  nameWithType.vb: Sdl.GetRectIntersection(Rect, Rect, Rect)
  fullName.vb: SharpSDL3.Sdl.GetRectIntersection(SharpSDL3.Structs.Rect, SharpSDL3.Structs.Rect, SharpSDL3.Structs.Rect)
  name.vb: GetRectIntersection(Rect, Rect, Rect)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetRectIntersection(SharpSDL3.Structs.Rect@,SharpSDL3.Structs.Rect@,SharpSDL3.Structs.Rect@)
    name: GetRectIntersection
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRectIntersection_SharpSDL3_Structs_Rect__SharpSDL3_Structs_Rect__SharpSDL3_Structs_Rect__
  - name: (
  - name: ref
  - name: " "
  - uid: SharpSDL3.Structs.Rect
    name: Rect
    href: SharpSDL3.Structs.Rect.html
  - name: ','
  - name: " "
  - name: ref
  - name: " "
  - uid: SharpSDL3.Structs.Rect
    name: Rect
    href: SharpSDL3.Structs.Rect.html
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: SharpSDL3.Structs.Rect
    name: Rect
    href: SharpSDL3.Structs.Rect.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetRectIntersection(SharpSDL3.Structs.Rect@,SharpSDL3.Structs.Rect@,SharpSDL3.Structs.Rect@)
    name: GetRectIntersection
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRectIntersection_SharpSDL3_Structs_Rect__SharpSDL3_Structs_Rect__SharpSDL3_Structs_Rect__
  - name: (
  - uid: SharpSDL3.Structs.Rect
    name: Rect
    href: SharpSDL3.Structs.Rect.html
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.Rect
    name: Rect
    href: SharpSDL3.Structs.Rect.html
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.Rect
    name: Rect
    href: SharpSDL3.Structs.Rect.html
  - name: )
- uid: SharpSDL3.Sdl.HasRectIntersection*
  commentId: Overload:SharpSDL3.Sdl.HasRectIntersection
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasRectIntersection_SharpSDL3_Structs_Rect__SharpSDL3_Structs_Rect__
  name: HasRectIntersection
  nameWithType: Sdl.HasRectIntersection
  fullName: SharpSDL3.Sdl.HasRectIntersection
- uid: SharpSDL3.Sdl.HasRectIntersectionFloat*
  commentId: Overload:SharpSDL3.Sdl.HasRectIntersectionFloat
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasRectIntersectionFloat_SharpSDL3_Structs_FRect__SharpSDL3_Structs_FRect__
  name: HasRectIntersectionFloat
  nameWithType: Sdl.HasRectIntersectionFloat
  fullName: SharpSDL3.Sdl.HasRectIntersectionFloat
- uid: SharpSDL3.Sdl.ScreenKeyboardShown(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.ScreenKeyboardShown(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ScreenKeyboardShown_System_IntPtr_
  name: ScreenKeyboardShown(nint)
  nameWithType: Sdl.ScreenKeyboardShown(nint)
  fullName: SharpSDL3.Sdl.ScreenKeyboardShown(nint)
  nameWithType.vb: Sdl.ScreenKeyboardShown(IntPtr)
  fullName.vb: SharpSDL3.Sdl.ScreenKeyboardShown(System.IntPtr)
  name.vb: ScreenKeyboardShown(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.ScreenKeyboardShown(System.IntPtr)
    name: ScreenKeyboardShown
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ScreenKeyboardShown_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.ScreenKeyboardShown(System.IntPtr)
    name: ScreenKeyboardShown
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ScreenKeyboardShown_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.HasScreenKeyboardSupport*
  commentId: Overload:SharpSDL3.Sdl.HasScreenKeyboardSupport
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasScreenKeyboardSupport
  name: HasScreenKeyboardSupport
  nameWithType: Sdl.HasScreenKeyboardSupport
  fullName: SharpSDL3.Sdl.HasScreenKeyboardSupport
- uid: SharpSDL3.Enums.WindowFlags.Hidden
  commentId: F:SharpSDL3.Enums.WindowFlags.Hidden
  href: SharpSDL3.Enums.WindowFlags.html#SharpSDL3_Enums_WindowFlags_Hidden
  name: Hidden
  nameWithType: WindowFlags.Hidden
  fullName: SharpSDL3.Enums.WindowFlags.Hidden
- uid: SharpSDL3.Sdl.HideWindow*
  commentId: Overload:SharpSDL3.Sdl.HideWindow
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HideWindow_System_IntPtr_
  name: HideWindow
  nameWithType: Sdl.HideWindow
  fullName: SharpSDL3.Sdl.HideWindow
- uid: SharpSDL3.Sdl.Init
  commentId: M:SharpSDL3.Sdl.Init
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_Init
  name: Init()
  nameWithType: Sdl.Init()
  fullName: SharpSDL3.Sdl.Init()
  spec.csharp:
  - uid: SharpSDL3.Sdl.Init
    name: Init
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_Init
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.Init
    name: Init
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_Init
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.InitSubSystem(SharpSDL3.Enums.InitFlags)
  commentId: M:SharpSDL3.Sdl.InitSubSystem(SharpSDL3.Enums.InitFlags)
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_InitSubSystem_SharpSDL3_Enums_InitFlags_
  name: InitSubSystem(InitFlags)
  nameWithType: Sdl.InitSubSystem(InitFlags)
  fullName: SharpSDL3.Sdl.InitSubSystem(SharpSDL3.Enums.InitFlags)
  spec.csharp:
  - uid: SharpSDL3.Sdl.InitSubSystem(SharpSDL3.Enums.InitFlags)
    name: InitSubSystem
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_InitSubSystem_SharpSDL3_Enums_InitFlags_
  - name: (
  - uid: SharpSDL3.Enums.InitFlags
    name: InitFlags
    href: SharpSDL3.Enums.InitFlags.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.InitSubSystem(SharpSDL3.Enums.InitFlags)
    name: InitSubSystem
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_InitSubSystem_SharpSDL3_Enums_InitFlags_
  - name: (
  - uid: SharpSDL3.Enums.InitFlags
    name: InitFlags
    href: SharpSDL3.Enums.InitFlags.html
  - name: )
- uid: SharpSDL3.Sdl.IOFromFile(System.String,System.String)
  commentId: M:SharpSDL3.Sdl.IOFromFile(System.String,System.String)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_IOFromFile_System_String_System_String_
  name: IOFromFile(string, string)
  nameWithType: Sdl.IOFromFile(string, string)
  fullName: SharpSDL3.Sdl.IOFromFile(string, string)
  nameWithType.vb: Sdl.IOFromFile(String, String)
  fullName.vb: SharpSDL3.Sdl.IOFromFile(String, String)
  name.vb: IOFromFile(String, String)
  spec.csharp:
  - uid: SharpSDL3.Sdl.IOFromFile(System.String,System.String)
    name: IOFromFile
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_IOFromFile_System_String_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.IOFromFile(System.String,System.String)
    name: IOFromFile
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_IOFromFile_System_String_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SharpSDL3.Enums.InitFlags.Audio
  commentId: F:SharpSDL3.Enums.InitFlags.Audio
  href: SharpSDL3.Enums.InitFlags.html#SharpSDL3_Enums_InitFlags_Audio
  name: Audio
  nameWithType: InitFlags.Audio
  fullName: SharpSDL3.Enums.InitFlags.Audio
- uid: SharpSDL3.Enums.InitFlags.Video
  commentId: F:SharpSDL3.Enums.InitFlags.Video
  href: SharpSDL3.Enums.InitFlags.html#SharpSDL3_Enums_InitFlags_Video
  name: Video
  nameWithType: InitFlags.Video
  fullName: SharpSDL3.Enums.InitFlags.Video
- uid: SharpSDL3.Enums.InitFlags.Joystick
  commentId: F:SharpSDL3.Enums.InitFlags.Joystick
  href: SharpSDL3.Enums.InitFlags.html#SharpSDL3_Enums_InitFlags_Joystick
  name: Joystick
  nameWithType: InitFlags.Joystick
  fullName: SharpSDL3.Enums.InitFlags.Joystick
- uid: SharpSDL3.Enums.InitFlags.Haptic
  commentId: F:SharpSDL3.Enums.InitFlags.Haptic
  href: SharpSDL3.Enums.InitFlags.html#SharpSDL3_Enums_InitFlags_Haptic
  name: Haptic
  nameWithType: InitFlags.Haptic
  fullName: SharpSDL3.Enums.InitFlags.Haptic
- uid: SharpSDL3.Enums.InitFlags.Gamepad
  commentId: F:SharpSDL3.Enums.InitFlags.Gamepad
  href: SharpSDL3.Enums.InitFlags.html#SharpSDL3_Enums_InitFlags_Gamepad
  name: Gamepad
  nameWithType: InitFlags.Gamepad
  fullName: SharpSDL3.Enums.InitFlags.Gamepad
- uid: SharpSDL3.Enums.InitFlags.Events
  commentId: F:SharpSDL3.Enums.InitFlags.Events
  href: SharpSDL3.Enums.InitFlags.html#SharpSDL3_Enums_InitFlags_Events
  name: Events
  nameWithType: InitFlags.Events
  fullName: SharpSDL3.Enums.InitFlags.Events
- uid: SharpSDL3.Enums.InitFlags.Sensor
  commentId: F:SharpSDL3.Enums.InitFlags.Sensor
  href: SharpSDL3.Enums.InitFlags.html#SharpSDL3_Enums_InitFlags_Sensor
  name: Sensor
  nameWithType: InitFlags.Sensor
  fullName: SharpSDL3.Enums.InitFlags.Sensor
- uid: SharpSDL3.Enums.InitFlags.Camera
  commentId: F:SharpSDL3.Enums.InitFlags.Camera
  href: SharpSDL3.Enums.InitFlags.html#SharpSDL3_Enums_InitFlags_Camera
  name: Camera
  nameWithType: InitFlags.Camera
  fullName: SharpSDL3.Enums.InitFlags.Camera
- uid: SharpSDL3.Enums.InitFlags.Everything
  commentId: F:SharpSDL3.Enums.InitFlags.Everything
  href: SharpSDL3.Enums.InitFlags.html#SharpSDL3_Enums_InitFlags_Everything
  name: Everything
  nameWithType: InitFlags.Everything
  fullName: SharpSDL3.Enums.InitFlags.Everything
- uid: SharpSDL3.Sdl.QuitSubSystem(SharpSDL3.Enums.InitFlags)
  commentId: M:SharpSDL3.Sdl.QuitSubSystem(SharpSDL3.Enums.InitFlags)
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_QuitSubSystem_SharpSDL3_Enums_InitFlags_
  name: QuitSubSystem(InitFlags)
  nameWithType: Sdl.QuitSubSystem(InitFlags)
  fullName: SharpSDL3.Sdl.QuitSubSystem(SharpSDL3.Enums.InitFlags)
  spec.csharp:
  - uid: SharpSDL3.Sdl.QuitSubSystem(SharpSDL3.Enums.InitFlags)
    name: QuitSubSystem
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_QuitSubSystem_SharpSDL3_Enums_InitFlags_
  - name: (
  - uid: SharpSDL3.Enums.InitFlags
    name: InitFlags
    href: SharpSDL3.Enums.InitFlags.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.QuitSubSystem(SharpSDL3.Enums.InitFlags)
    name: QuitSubSystem
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_QuitSubSystem_SharpSDL3_Enums_InitFlags_
  - name: (
  - uid: SharpSDL3.Enums.InitFlags
    name: InitFlags
    href: SharpSDL3.Enums.InitFlags.html
  - name: )
- uid: SharpSDL3.Enums.InitFlags
  commentId: T:SharpSDL3.Enums.InitFlags
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.InitFlags.html
  name: InitFlags
  nameWithType: InitFlags
  fullName: SharpSDL3.Enums.InitFlags
- uid: SharpSDL3.Sdl.InitSubSystem*
  commentId: Overload:SharpSDL3.Sdl.InitSubSystem
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_InitSubSystem_SharpSDL3_Enums_InitFlags_
  name: InitSubSystem
  nameWithType: Sdl.InitSubSystem
  fullName: SharpSDL3.Sdl.InitSubSystem
- uid: SharpSDL3.Sdl.RunOnMainThread(SharpSDL3.Delegates.SdlMainThreadCallback,System.IntPtr,System.Boolean)
  commentId: M:SharpSDL3.Sdl.RunOnMainThread(SharpSDL3.Delegates.SdlMainThreadCallback,System.IntPtr,System.Boolean)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RunOnMainThread_SharpSDL3_Delegates_SdlMainThreadCallback_System_IntPtr_System_Boolean_
  name: RunOnMainThread(SdlMainThreadCallback, nint, bool)
  nameWithType: Sdl.RunOnMainThread(Delegates.SdlMainThreadCallback, nint, bool)
  fullName: SharpSDL3.Sdl.RunOnMainThread(SharpSDL3.Delegates.SdlMainThreadCallback, nint, bool)
  nameWithType.vb: Sdl.RunOnMainThread(Delegates.SdlMainThreadCallback, IntPtr, Boolean)
  fullName.vb: SharpSDL3.Sdl.RunOnMainThread(SharpSDL3.Delegates.SdlMainThreadCallback, System.IntPtr, Boolean)
  name.vb: RunOnMainThread(SdlMainThreadCallback, IntPtr, Boolean)
  spec.csharp:
  - uid: SharpSDL3.Sdl.RunOnMainThread(SharpSDL3.Delegates.SdlMainThreadCallback,System.IntPtr,System.Boolean)
    name: RunOnMainThread
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RunOnMainThread_SharpSDL3_Delegates_SdlMainThreadCallback_System_IntPtr_System_Boolean_
  - name: (
  - uid: SharpSDL3.Delegates.SdlMainThreadCallback
    name: SdlMainThreadCallback
    href: SharpSDL3.Delegates.SdlMainThreadCallback.html
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.RunOnMainThread(SharpSDL3.Delegates.SdlMainThreadCallback,System.IntPtr,System.Boolean)
    name: RunOnMainThread
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RunOnMainThread_SharpSDL3_Delegates_SdlMainThreadCallback_System_IntPtr_System_Boolean_
  - name: (
  - uid: SharpSDL3.Delegates.SdlMainThreadCallback
    name: SdlMainThreadCallback
    href: SharpSDL3.Delegates.SdlMainThreadCallback.html
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: SharpSDL3.Sdl.IsMainThread*
  commentId: Overload:SharpSDL3.Sdl.IsMainThread
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_IsMainThread
  name: IsMainThread
  nameWithType: Sdl.IsMainThread
  fullName: SharpSDL3.Sdl.IsMainThread
- uid: SharpSDL3.Sdl.LoadBmp*
  commentId: Overload:SharpSDL3.Sdl.LoadBmp
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LoadBmp_System_String_
  name: LoadBmp
  nameWithType: Sdl.LoadBmp
  fullName: SharpSDL3.Sdl.LoadBmp
- uid: SharpSDL3.Sdl.LoadBmp(System.String)
  commentId: M:SharpSDL3.Sdl.LoadBmp(System.String)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LoadBmp_System_String_
  name: LoadBmp(string)
  nameWithType: Sdl.LoadBmp(string)
  fullName: SharpSDL3.Sdl.LoadBmp(string)
  nameWithType.vb: Sdl.LoadBmp(String)
  fullName.vb: SharpSDL3.Sdl.LoadBmp(String)
  name.vb: LoadBmp(String)
  spec.csharp:
  - uid: SharpSDL3.Sdl.LoadBmp(System.String)
    name: LoadBmp
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LoadBmp_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.LoadBmp(System.String)
    name: LoadBmp
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LoadBmp_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SharpSDL3.Sdl.SaveBmpIO(System.IntPtr,System.IntPtr,System.Boolean)
  commentId: M:SharpSDL3.Sdl.SaveBmpIO(System.IntPtr,System.IntPtr,System.Boolean)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SaveBmpIO_System_IntPtr_System_IntPtr_System_Boolean_
  name: SaveBmpIO(nint, nint, bool)
  nameWithType: Sdl.SaveBmpIO(nint, nint, bool)
  fullName: SharpSDL3.Sdl.SaveBmpIO(nint, nint, bool)
  nameWithType.vb: Sdl.SaveBmpIO(IntPtr, IntPtr, Boolean)
  fullName.vb: SharpSDL3.Sdl.SaveBmpIO(System.IntPtr, System.IntPtr, Boolean)
  name.vb: SaveBmpIO(IntPtr, IntPtr, Boolean)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SaveBmpIO(System.IntPtr,System.IntPtr,System.Boolean)
    name: SaveBmpIO
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SaveBmpIO_System_IntPtr_System_IntPtr_System_Boolean_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SaveBmpIO(System.IntPtr,System.IntPtr,System.Boolean)
    name: SaveBmpIO
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SaveBmpIO_System_IntPtr_System_IntPtr_System_Boolean_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: SharpSDL3.Sdl.LoadBmpIO*
  commentId: Overload:SharpSDL3.Sdl.LoadBmpIO
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LoadBmpIO_System_IntPtr_System_Boolean_
  name: LoadBmpIO
  nameWithType: Sdl.LoadBmpIO
  fullName: SharpSDL3.Sdl.LoadBmpIO
- uid: SharpSDL3.Sdl.LoadObject(System.String)
  commentId: M:SharpSDL3.Sdl.LoadObject(System.String)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LoadObject_System_String_
  name: LoadObject(string)
  nameWithType: Sdl.LoadObject(string)
  fullName: SharpSDL3.Sdl.LoadObject(string)
  nameWithType.vb: Sdl.LoadObject(String)
  fullName.vb: SharpSDL3.Sdl.LoadObject(String)
  name.vb: LoadObject(String)
  spec.csharp:
  - uid: SharpSDL3.Sdl.LoadObject(System.String)
    name: LoadObject
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LoadObject_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.LoadObject(System.String)
    name: LoadObject
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LoadObject_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SharpSDL3.Sdl.UnloadObject(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.UnloadObject(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UnloadObject_System_IntPtr_
  name: UnloadObject(nint)
  nameWithType: Sdl.UnloadObject(nint)
  fullName: SharpSDL3.Sdl.UnloadObject(nint)
  nameWithType.vb: Sdl.UnloadObject(IntPtr)
  fullName.vb: SharpSDL3.Sdl.UnloadObject(System.IntPtr)
  name.vb: UnloadObject(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.UnloadObject(System.IntPtr)
    name: UnloadObject
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UnloadObject_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.UnloadObject(System.IntPtr)
    name: UnloadObject
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UnloadObject_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.LoadFunction*
  commentId: Overload:SharpSDL3.Sdl.LoadFunction
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LoadFunction_System_IntPtr_System_String_
  name: LoadFunction
  nameWithType: Sdl.LoadFunction
  fullName: SharpSDL3.Sdl.LoadFunction
- uid: SharpSDL3.Sdl.LoadFunction(System.IntPtr,System.String)
  commentId: M:SharpSDL3.Sdl.LoadFunction(System.IntPtr,System.String)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LoadFunction_System_IntPtr_System_String_
  name: LoadFunction(nint, string)
  nameWithType: Sdl.LoadFunction(nint, string)
  fullName: SharpSDL3.Sdl.LoadFunction(nint, string)
  nameWithType.vb: Sdl.LoadFunction(IntPtr, String)
  fullName.vb: SharpSDL3.Sdl.LoadFunction(System.IntPtr, String)
  name.vb: LoadFunction(IntPtr, String)
  spec.csharp:
  - uid: SharpSDL3.Sdl.LoadFunction(System.IntPtr,System.String)
    name: LoadFunction
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LoadFunction_System_IntPtr_System_String_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.LoadFunction(System.IntPtr,System.String)
    name: LoadFunction
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LoadFunction_System_IntPtr_System_String_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SharpSDL3.Sdl.LoadObject*
  commentId: Overload:SharpSDL3.Sdl.LoadObject
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LoadObject_System_String_
  name: LoadObject
  nameWithType: Sdl.LoadObject
  fullName: SharpSDL3.Sdl.LoadObject
- uid: SharpSDL3.Sdl.LockProperties*
  commentId: Overload:SharpSDL3.Sdl.LockProperties
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LockProperties_System_UInt32_
  name: LockProperties
  nameWithType: Sdl.LockProperties
  fullName: SharpSDL3.Sdl.LockProperties
- uid: SharpSDL3.Sdl.UnlockSurface(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.UnlockSurface(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UnlockSurface_System_IntPtr_
  name: UnlockSurface(nint)
  nameWithType: Sdl.UnlockSurface(nint)
  fullName: SharpSDL3.Sdl.UnlockSurface(nint)
  nameWithType.vb: Sdl.UnlockSurface(IntPtr)
  fullName.vb: SharpSDL3.Sdl.UnlockSurface(System.IntPtr)
  name.vb: UnlockSurface(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.UnlockSurface(System.IntPtr)
    name: UnlockSurface
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UnlockSurface_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.UnlockSurface(System.IntPtr)
    name: UnlockSurface
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UnlockSurface_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.LockSurface(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.LockSurface(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LockSurface_System_IntPtr_
  name: LockSurface(nint)
  nameWithType: Sdl.LockSurface(nint)
  fullName: SharpSDL3.Sdl.LockSurface(nint)
  nameWithType.vb: Sdl.LockSurface(IntPtr)
  fullName.vb: SharpSDL3.Sdl.LockSurface(System.IntPtr)
  name.vb: LockSurface(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.LockSurface(System.IntPtr)
    name: LockSurface
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LockSurface_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.LockSurface(System.IntPtr)
    name: LockSurface
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LockSurface_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.LockSurface*
  commentId: Overload:SharpSDL3.Sdl.LockSurface
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LockSurface_System_IntPtr_
  name: LockSurface
  nameWithType: Sdl.LockSurface
  fullName: SharpSDL3.Sdl.LockSurface
- uid: SharpSDL3.Sdl.Malloc*
  commentId: Overload:SharpSDL3.Sdl.Malloc
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_Malloc_System_UIntPtr_
  name: Malloc
  nameWithType: Sdl.Malloc
  fullName: SharpSDL3.Sdl.Malloc
- uid: SharpSDL3.Sdl.MapSurfaceRgb(System.IntPtr,System.Byte,System.Byte,System.Byte)
  commentId: M:SharpSDL3.Sdl.MapSurfaceRgb(System.IntPtr,System.Byte,System.Byte,System.Byte)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_MapSurfaceRgb_System_IntPtr_System_Byte_System_Byte_System_Byte_
  name: MapSurfaceRgb(nint, byte, byte, byte)
  nameWithType: Sdl.MapSurfaceRgb(nint, byte, byte, byte)
  fullName: SharpSDL3.Sdl.MapSurfaceRgb(nint, byte, byte, byte)
  nameWithType.vb: Sdl.MapSurfaceRgb(IntPtr, Byte, Byte, Byte)
  fullName.vb: SharpSDL3.Sdl.MapSurfaceRgb(System.IntPtr, Byte, Byte, Byte)
  name.vb: MapSurfaceRgb(IntPtr, Byte, Byte, Byte)
  spec.csharp:
  - uid: SharpSDL3.Sdl.MapSurfaceRgb(System.IntPtr,System.Byte,System.Byte,System.Byte)
    name: MapSurfaceRgb
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_MapSurfaceRgb_System_IntPtr_System_Byte_System_Byte_System_Byte_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: ','
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: ','
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.MapSurfaceRgb(System.IntPtr,System.Byte,System.Byte,System.Byte)
    name: MapSurfaceRgb
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_MapSurfaceRgb_System_IntPtr_System_Byte_System_Byte_System_Byte_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: SharpSDL3.Sdl.MapRgb*
  commentId: Overload:SharpSDL3.Sdl.MapRgb
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_MapRgb_System_IntPtr_System_IntPtr_System_Byte_System_Byte_System_Byte_
  name: MapRgb
  nameWithType: Sdl.MapRgb
  fullName: SharpSDL3.Sdl.MapRgb
- uid: SharpSDL3.Sdl.MapSurfaceRgba(System.IntPtr,System.Byte,System.Byte,System.Byte,System.Byte)
  commentId: M:SharpSDL3.Sdl.MapSurfaceRgba(System.IntPtr,System.Byte,System.Byte,System.Byte,System.Byte)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_MapSurfaceRgba_System_IntPtr_System_Byte_System_Byte_System_Byte_System_Byte_
  name: MapSurfaceRgba(nint, byte, byte, byte, byte)
  nameWithType: Sdl.MapSurfaceRgba(nint, byte, byte, byte, byte)
  fullName: SharpSDL3.Sdl.MapSurfaceRgba(nint, byte, byte, byte, byte)
  nameWithType.vb: Sdl.MapSurfaceRgba(IntPtr, Byte, Byte, Byte, Byte)
  fullName.vb: SharpSDL3.Sdl.MapSurfaceRgba(System.IntPtr, Byte, Byte, Byte, Byte)
  name.vb: MapSurfaceRgba(IntPtr, Byte, Byte, Byte, Byte)
  spec.csharp:
  - uid: SharpSDL3.Sdl.MapSurfaceRgba(System.IntPtr,System.Byte,System.Byte,System.Byte,System.Byte)
    name: MapSurfaceRgba
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_MapSurfaceRgba_System_IntPtr_System_Byte_System_Byte_System_Byte_System_Byte_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: ','
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: ','
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: ','
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.MapSurfaceRgba(System.IntPtr,System.Byte,System.Byte,System.Byte,System.Byte)
    name: MapSurfaceRgba
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_MapSurfaceRgba_System_IntPtr_System_Byte_System_Byte_System_Byte_System_Byte_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: SharpSDL3.Sdl.MapRgba*
  commentId: Overload:SharpSDL3.Sdl.MapRgba
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_MapRgba_System_IntPtr_System_IntPtr_System_Byte_System_Byte_System_Byte_System_Byte_
  name: MapRgba
  nameWithType: Sdl.MapRgba
  fullName: SharpSDL3.Sdl.MapRgba
- uid: SharpSDL3.Sdl.MapSurfaceRgb*
  commentId: Overload:SharpSDL3.Sdl.MapSurfaceRgb
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_MapSurfaceRgb_System_IntPtr_System_Byte_System_Byte_System_Byte_
  name: MapSurfaceRgb
  nameWithType: Sdl.MapSurfaceRgb
  fullName: SharpSDL3.Sdl.MapSurfaceRgb
- uid: SharpSDL3.Sdl.MapSurfaceRgba*
  commentId: Overload:SharpSDL3.Sdl.MapSurfaceRgba
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_MapSurfaceRgba_System_IntPtr_System_Byte_System_Byte_System_Byte_System_Byte_
  name: MapSurfaceRgba
  nameWithType: Sdl.MapSurfaceRgba
  fullName: SharpSDL3.Sdl.MapSurfaceRgba
- uid: SharpSDL3.Sdl.RestoreWindow(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.RestoreWindow(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RestoreWindow_System_IntPtr_
  name: RestoreWindow(nint)
  nameWithType: Sdl.RestoreWindow(nint)
  fullName: SharpSDL3.Sdl.RestoreWindow(nint)
  nameWithType.vb: Sdl.RestoreWindow(IntPtr)
  fullName.vb: SharpSDL3.Sdl.RestoreWindow(System.IntPtr)
  name.vb: RestoreWindow(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.RestoreWindow(System.IntPtr)
    name: RestoreWindow
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RestoreWindow_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.RestoreWindow(System.IntPtr)
    name: RestoreWindow
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RestoreWindow_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.SyncWindow(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.SyncWindow(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SyncWindow_System_IntPtr_
  name: SyncWindow(nint)
  nameWithType: Sdl.SyncWindow(nint)
  fullName: SharpSDL3.Sdl.SyncWindow(nint)
  nameWithType.vb: Sdl.SyncWindow(IntPtr)
  fullName.vb: SharpSDL3.Sdl.SyncWindow(System.IntPtr)
  name.vb: SyncWindow(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SyncWindow(System.IntPtr)
    name: SyncWindow
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SyncWindow_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SyncWindow(System.IntPtr)
    name: SyncWindow
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SyncWindow_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Enums.WindowFlags.Resizable
  commentId: F:SharpSDL3.Enums.WindowFlags.Resizable
  href: SharpSDL3.Enums.WindowFlags.html#SharpSDL3_Enums_WindowFlags_Resizable
  name: Resizable
  nameWithType: WindowFlags.Resizable
  fullName: SharpSDL3.Enums.WindowFlags.Resizable
- uid: SharpSDL3.Sdl.MaximizeWindow*
  commentId: Overload:SharpSDL3.Sdl.MaximizeWindow
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_MaximizeWindow_System_IntPtr_
  name: MaximizeWindow
  nameWithType: Sdl.MaximizeWindow
  fullName: SharpSDL3.Sdl.MaximizeWindow
- uid: SharpSDL3.Sdl.MinimizeWindow*
  commentId: Overload:SharpSDL3.Sdl.MinimizeWindow
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_MinimizeWindow_System_IntPtr_
  name: MinimizeWindow
  nameWithType: Sdl.MinimizeWindow
  fullName: SharpSDL3.Sdl.MinimizeWindow
- uid: SharpSDL3.Sdl.OutOfMemory*
  commentId: Overload:SharpSDL3.Sdl.OutOfMemory
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_OutOfMemory
  name: OutOfMemory
  nameWithType: Sdl.OutOfMemory
  fullName: SharpSDL3.Sdl.OutOfMemory
- uid: SharpSDL3.Sdl.PremultiplyAlpha*
  commentId: Overload:SharpSDL3.Sdl.PremultiplyAlpha
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_PremultiplyAlpha_System_Int32_System_Int32_SharpSDL3_Enums_PixelFormat_System_IntPtr_System_Int32_SharpSDL3_Enums_PixelFormat_System_IntPtr_System_Int32_System_Boolean_
  name: PremultiplyAlpha
  nameWithType: Sdl.PremultiplyAlpha
  fullName: SharpSDL3.Sdl.PremultiplyAlpha
- uid: SharpSDL3.Sdl.PremultiplySurfaceAlpha*
  commentId: Overload:SharpSDL3.Sdl.PremultiplySurfaceAlpha
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_PremultiplySurfaceAlpha_System_IntPtr_System_Boolean_
  name: PremultiplySurfaceAlpha
  nameWithType: Sdl.PremultiplySurfaceAlpha
  fullName: SharpSDL3.Sdl.PremultiplySurfaceAlpha
- uid: SharpSDL3.Sdl.Quit*
  commentId: Overload:SharpSDL3.Sdl.Quit
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_Quit
  name: Quit
  nameWithType: Sdl.Quit
  fullName: SharpSDL3.Sdl.Quit
- uid: SharpSDL3.Sdl.QuitSubSystem*
  commentId: Overload:SharpSDL3.Sdl.QuitSubSystem
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_QuitSubSystem_SharpSDL3_Enums_InitFlags_
  name: QuitSubSystem
  nameWithType: Sdl.QuitSubSystem
  fullName: SharpSDL3.Sdl.QuitSubSystem
- uid: SharpSDL3.Sdl.RaiseWindow*
  commentId: Overload:SharpSDL3.Sdl.RaiseWindow
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RaiseWindow_System_IntPtr_
  name: RaiseWindow
  nameWithType: Sdl.RaiseWindow
  fullName: SharpSDL3.Sdl.RaiseWindow
- uid: SharpSDL3.Sdl.ReadSurfacePixel*
  commentId: Overload:SharpSDL3.Sdl.ReadSurfacePixel
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReadSurfacePixel_System_IntPtr_System_Int32_System_Int32_System_Byte__System_Byte__System_Byte__System_Byte__
  name: ReadSurfacePixel
  nameWithType: Sdl.ReadSurfacePixel
  fullName: SharpSDL3.Sdl.ReadSurfacePixel
- uid: SharpSDL3.Sdl.ReadSurfacePixelFloat*
  commentId: Overload:SharpSDL3.Sdl.ReadSurfacePixelFloat
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReadSurfacePixelFloat_System_IntPtr_System_Int32_System_Int32_System_Single__System_Single__System_Single__System_Single__
  name: ReadSurfacePixelFloat
  nameWithType: Sdl.ReadSurfacePixelFloat
  fullName: SharpSDL3.Sdl.ReadSurfacePixelFloat
- uid: SharpSDL3.Sdl.AddHintCallback(System.String,SharpSDL3.Delegates.SdlHintCallback,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.AddHintCallback(System.String,SharpSDL3.Delegates.SdlHintCallback,System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_AddHintCallback_System_String_SharpSDL3_Delegates_SdlHintCallback_System_IntPtr_
  name: AddHintCallback(string, SdlHintCallback, nint)
  nameWithType: Sdl.AddHintCallback(string, Delegates.SdlHintCallback, nint)
  fullName: SharpSDL3.Sdl.AddHintCallback(string, SharpSDL3.Delegates.SdlHintCallback, nint)
  nameWithType.vb: Sdl.AddHintCallback(String, Delegates.SdlHintCallback, IntPtr)
  fullName.vb: SharpSDL3.Sdl.AddHintCallback(String, SharpSDL3.Delegates.SdlHintCallback, System.IntPtr)
  name.vb: AddHintCallback(String, SdlHintCallback, IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.AddHintCallback(System.String,SharpSDL3.Delegates.SdlHintCallback,System.IntPtr)
    name: AddHintCallback
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_AddHintCallback_System_String_SharpSDL3_Delegates_SdlHintCallback_System_IntPtr_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: SharpSDL3.Delegates.SdlHintCallback
    name: SdlHintCallback
    href: SharpSDL3.Delegates.SdlHintCallback.html
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.AddHintCallback(System.String,SharpSDL3.Delegates.SdlHintCallback,System.IntPtr)
    name: AddHintCallback
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_AddHintCallback_System_String_SharpSDL3_Delegates_SdlHintCallback_System_IntPtr_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: SharpSDL3.Delegates.SdlHintCallback
    name: SdlHintCallback
    href: SharpSDL3.Delegates.SdlHintCallback.html
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.RemoveHintCallback*
  commentId: Overload:SharpSDL3.Sdl.RemoveHintCallback
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RemoveHintCallback_System_String_SharpSDL3_Delegates_SdlHintCallback_System_IntPtr_
  name: RemoveHintCallback
  nameWithType: Sdl.RemoveHintCallback
  fullName: SharpSDL3.Sdl.RemoveHintCallback
- uid: SharpSDL3.Sdl.RemoveSurfaceAlternateImages*
  commentId: Overload:SharpSDL3.Sdl.RemoveSurfaceAlternateImages
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RemoveSurfaceAlternateImages_System_IntPtr_
  name: RemoveSurfaceAlternateImages
  nameWithType: Sdl.RemoveSurfaceAlternateImages
  fullName: SharpSDL3.Sdl.RemoveSurfaceAlternateImages
- uid: SharpSDL3.Sdl.ResetHints
  commentId: M:SharpSDL3.Sdl.ResetHints
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ResetHints
  name: ResetHints()
  nameWithType: Sdl.ResetHints()
  fullName: SharpSDL3.Sdl.ResetHints()
  spec.csharp:
  - uid: SharpSDL3.Sdl.ResetHints
    name: ResetHints
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ResetHints
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.ResetHints
    name: ResetHints
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ResetHints
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.ResetHint*
  commentId: Overload:SharpSDL3.Sdl.ResetHint
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ResetHint_System_String_
  name: ResetHint
  nameWithType: Sdl.ResetHint
  fullName: SharpSDL3.Sdl.ResetHint
- uid: SharpSDL3.Sdl.ResetHint(System.String)
  commentId: M:SharpSDL3.Sdl.ResetHint(System.String)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ResetHint_System_String_
  name: ResetHint(string)
  nameWithType: Sdl.ResetHint(string)
  fullName: SharpSDL3.Sdl.ResetHint(string)
  nameWithType.vb: Sdl.ResetHint(String)
  fullName.vb: SharpSDL3.Sdl.ResetHint(String)
  name.vb: ResetHint(String)
  spec.csharp:
  - uid: SharpSDL3.Sdl.ResetHint(System.String)
    name: ResetHint
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ResetHint_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.ResetHint(System.String)
    name: ResetHint
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ResetHint_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SharpSDL3.Sdl.ResetHints*
  commentId: Overload:SharpSDL3.Sdl.ResetHints
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ResetHints
  name: ResetHints
  nameWithType: Sdl.ResetHints
  fullName: SharpSDL3.Sdl.ResetHints
- uid: SharpSDL3.Sdl.ResetKeyboard*
  commentId: Overload:SharpSDL3.Sdl.ResetKeyboard
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ResetKeyboard
  name: ResetKeyboard
  nameWithType: Sdl.ResetKeyboard
  fullName: SharpSDL3.Sdl.ResetKeyboard
- uid: SharpSDL3.Sdl.RestoreWindow*
  commentId: Overload:SharpSDL3.Sdl.RestoreWindow
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RestoreWindow_System_IntPtr_
  name: RestoreWindow
  nameWithType: Sdl.RestoreWindow
  fullName: SharpSDL3.Sdl.RestoreWindow
- uid: SharpSDL3.Sdl.SetMainReady
  commentId: M:SharpSDL3.Sdl.SetMainReady
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetMainReady
  name: SetMainReady()
  nameWithType: Sdl.SetMainReady()
  fullName: SharpSDL3.Sdl.SetMainReady()
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetMainReady
    name: SetMainReady
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetMainReady
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetMainReady
    name: SetMainReady
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetMainReady
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.RunApp*
  commentId: Overload:SharpSDL3.Sdl.RunApp
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RunApp_System_Int32_System_IntPtr_SharpSDL3_Delegates_SdlMainFunc_System_IntPtr_
  name: RunApp
  nameWithType: Sdl.RunApp
  fullName: SharpSDL3.Sdl.RunApp
- uid: SharpSDL3.Delegates.SdlMainFunc
  commentId: T:SharpSDL3.Delegates.SdlMainFunc
  parent: SharpSDL3
  href: SharpSDL3.Delegates.html
  name: Delegates.SdlMainFunc
  nameWithType: Delegates.SdlMainFunc
  fullName: SharpSDL3.Delegates.SdlMainFunc
  spec.csharp:
  - uid: SharpSDL3.Delegates
    name: Delegates
    href: SharpSDL3.Delegates.html
  - name: .
  - uid: SharpSDL3.Delegates.SdlMainFunc
    name: SdlMainFunc
    href: SharpSDL3.Delegates.SdlMainFunc.html
  spec.vb:
  - uid: SharpSDL3.Delegates
    name: Delegates
    href: SharpSDL3.Delegates.html
  - name: .
  - uid: SharpSDL3.Delegates.SdlMainFunc
    name: SdlMainFunc
    href: SharpSDL3.Delegates.SdlMainFunc.html
- uid: SharpSDL3.Sdl.IsMainThread
  commentId: M:SharpSDL3.Sdl.IsMainThread
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_IsMainThread
  name: IsMainThread()
  nameWithType: Sdl.IsMainThread()
  fullName: SharpSDL3.Sdl.IsMainThread()
  spec.csharp:
  - uid: SharpSDL3.Sdl.IsMainThread
    name: IsMainThread
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_IsMainThread
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.IsMainThread
    name: IsMainThread
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_IsMainThread
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.RunOnMainThread*
  commentId: Overload:SharpSDL3.Sdl.RunOnMainThread
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RunOnMainThread_SharpSDL3_Delegates_SdlMainThreadCallback_System_IntPtr_System_Boolean_
  name: RunOnMainThread
  nameWithType: Sdl.RunOnMainThread
  fullName: SharpSDL3.Sdl.RunOnMainThread
- uid: SharpSDL3.Delegates.SdlMainThreadCallback
  commentId: T:SharpSDL3.Delegates.SdlMainThreadCallback
  parent: SharpSDL3
  href: SharpSDL3.Delegates.html
  name: Delegates.SdlMainThreadCallback
  nameWithType: Delegates.SdlMainThreadCallback
  fullName: SharpSDL3.Delegates.SdlMainThreadCallback
  spec.csharp:
  - uid: SharpSDL3.Delegates
    name: Delegates
    href: SharpSDL3.Delegates.html
  - name: .
  - uid: SharpSDL3.Delegates.SdlMainThreadCallback
    name: SdlMainThreadCallback
    href: SharpSDL3.Delegates.SdlMainThreadCallback.html
  spec.vb:
  - uid: SharpSDL3.Delegates
    name: Delegates
    href: SharpSDL3.Delegates.html
  - name: .
  - uid: SharpSDL3.Delegates.SdlMainThreadCallback
    name: SdlMainThreadCallback
    href: SharpSDL3.Delegates.SdlMainThreadCallback.html
- uid: SharpSDL3.Sdl.SaveBmp*
  commentId: Overload:SharpSDL3.Sdl.SaveBmp
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SaveBmp_System_IntPtr_System_String_
  name: SaveBmp
  nameWithType: Sdl.SaveBmp
  fullName: SharpSDL3.Sdl.SaveBmp
- uid: SharpSDL3.Sdl.LoadBmpIO(System.IntPtr,System.Boolean)
  commentId: M:SharpSDL3.Sdl.LoadBmpIO(System.IntPtr,System.Boolean)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LoadBmpIO_System_IntPtr_System_Boolean_
  name: LoadBmpIO(nint, bool)
  nameWithType: Sdl.LoadBmpIO(nint, bool)
  fullName: SharpSDL3.Sdl.LoadBmpIO(nint, bool)
  nameWithType.vb: Sdl.LoadBmpIO(IntPtr, Boolean)
  fullName.vb: SharpSDL3.Sdl.LoadBmpIO(System.IntPtr, Boolean)
  name.vb: LoadBmpIO(IntPtr, Boolean)
  spec.csharp:
  - uid: SharpSDL3.Sdl.LoadBmpIO(System.IntPtr,System.Boolean)
    name: LoadBmpIO
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LoadBmpIO_System_IntPtr_System_Boolean_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.LoadBmpIO(System.IntPtr,System.Boolean)
    name: LoadBmpIO
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LoadBmpIO_System_IntPtr_System_Boolean_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: SharpSDL3.Sdl.SaveBmp(System.IntPtr,System.String)
  commentId: M:SharpSDL3.Sdl.SaveBmp(System.IntPtr,System.String)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SaveBmp_System_IntPtr_System_String_
  name: SaveBmp(nint, string)
  nameWithType: Sdl.SaveBmp(nint, string)
  fullName: SharpSDL3.Sdl.SaveBmp(nint, string)
  nameWithType.vb: Sdl.SaveBmp(IntPtr, String)
  fullName.vb: SharpSDL3.Sdl.SaveBmp(System.IntPtr, String)
  name.vb: SaveBmp(IntPtr, String)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SaveBmp(System.IntPtr,System.String)
    name: SaveBmp
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SaveBmp_System_IntPtr_System_String_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SaveBmp(System.IntPtr,System.String)
    name: SaveBmp
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SaveBmp_System_IntPtr_System_String_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SharpSDL3.Sdl.SaveBmpIO*
  commentId: Overload:SharpSDL3.Sdl.SaveBmpIO
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SaveBmpIO_System_IntPtr_System_IntPtr_System_Boolean_
  name: SaveBmpIO
  nameWithType: Sdl.SaveBmpIO
  fullName: SharpSDL3.Sdl.SaveBmpIO
- uid: SharpSDL3.Sdl.ScaleSurface*
  commentId: Overload:SharpSDL3.Sdl.ScaleSurface
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ScaleSurface_System_IntPtr_System_Int32_System_Int32_SharpSDL3_Enums_ScaleMode_
  name: ScaleSurface
  nameWithType: Sdl.ScaleSurface
  fullName: SharpSDL3.Sdl.ScaleSurface
- uid: SharpSDL3.Sdl.HasScreenKeyboardSupport
  commentId: M:SharpSDL3.Sdl.HasScreenKeyboardSupport
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasScreenKeyboardSupport
  name: HasScreenKeyboardSupport()
  nameWithType: Sdl.HasScreenKeyboardSupport()
  fullName: SharpSDL3.Sdl.HasScreenKeyboardSupport()
  spec.csharp:
  - uid: SharpSDL3.Sdl.HasScreenKeyboardSupport
    name: HasScreenKeyboardSupport
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasScreenKeyboardSupport
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.HasScreenKeyboardSupport
    name: HasScreenKeyboardSupport
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_HasScreenKeyboardSupport
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.ScreenKeyboardShown*
  commentId: Overload:SharpSDL3.Sdl.ScreenKeyboardShown
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ScreenKeyboardShown_System_IntPtr_
  name: ScreenKeyboardShown
  nameWithType: Sdl.ScreenKeyboardShown
  fullName: SharpSDL3.Sdl.ScreenKeyboardShown
- uid: SharpSDL3.Sdl.ScreenSaverEnabled*
  commentId: Overload:SharpSDL3.Sdl.ScreenSaverEnabled
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ScreenSaverEnabled
  name: ScreenSaverEnabled
  nameWithType: Sdl.ScreenSaverEnabled
  fullName: SharpSDL3.Sdl.ScreenSaverEnabled
- uid: SharpSDL3.Sdl.SetAppMetadata*
  commentId: Overload:SharpSDL3.Sdl.SetAppMetadata
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetAppMetadata_System_String_System_String_System_String_
  name: SetAppMetadata
  nameWithType: Sdl.SetAppMetadata
  fullName: SharpSDL3.Sdl.SetAppMetadata
- uid: SharpSDL3.Sdl.GetAppMetadataProperty(System.String)
  commentId: M:SharpSDL3.Sdl.GetAppMetadataProperty(System.String)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAppMetadataProperty_System_String_
  name: GetAppMetadataProperty(string)
  nameWithType: Sdl.GetAppMetadataProperty(string)
  fullName: SharpSDL3.Sdl.GetAppMetadataProperty(string)
  nameWithType.vb: Sdl.GetAppMetadataProperty(String)
  fullName.vb: SharpSDL3.Sdl.GetAppMetadataProperty(String)
  name.vb: GetAppMetadataProperty(String)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetAppMetadataProperty(System.String)
    name: GetAppMetadataProperty
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAppMetadataProperty_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetAppMetadataProperty(System.String)
    name: GetAppMetadataProperty
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetAppMetadataProperty_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SharpSDL3.Sdl.SetAppMetadataProperty*
  commentId: Overload:SharpSDL3.Sdl.SetAppMetadataProperty
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetAppMetadataProperty_System_String_System_String_
  name: SetAppMetadataProperty
  nameWithType: Sdl.SetAppMetadataProperty
  fullName: SharpSDL3.Sdl.SetAppMetadataProperty
- uid: SharpSDL3.Sdl.SetBooleanProperty*
  commentId: Overload:SharpSDL3.Sdl.SetBooleanProperty
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetBooleanProperty_System_UInt32_System_String_System_Boolean_
  name: SetBooleanProperty
  nameWithType: Sdl.SetBooleanProperty
  fullName: SharpSDL3.Sdl.SetBooleanProperty
- uid: SharpSDL3.Sdl.ClearClipboardData
  commentId: M:SharpSDL3.Sdl.ClearClipboardData
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ClearClipboardData
  name: ClearClipboardData()
  nameWithType: Sdl.ClearClipboardData()
  fullName: SharpSDL3.Sdl.ClearClipboardData()
  spec.csharp:
  - uid: SharpSDL3.Sdl.ClearClipboardData
    name: ClearClipboardData
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ClearClipboardData
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.ClearClipboardData
    name: ClearClipboardData
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ClearClipboardData
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.SetClipboardData*
  commentId: Overload:SharpSDL3.Sdl.SetClipboardData
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetClipboardData_SharpSDL3_Delegates_SdlClipboardDataCallback_SharpSDL3_Delegates_SdlClipboardCleanupCallback_System_IntPtr_System_IntPtr_System_UIntPtr_
  name: SetClipboardData
  nameWithType: Sdl.SetClipboardData
  fullName: SharpSDL3.Sdl.SetClipboardData
- uid: SharpSDL3.Delegates.SdlClipboardDataCallback
  commentId: T:SharpSDL3.Delegates.SdlClipboardDataCallback
  parent: SharpSDL3
  href: SharpSDL3.Delegates.html
  name: Delegates.SdlClipboardDataCallback
  nameWithType: Delegates.SdlClipboardDataCallback
  fullName: SharpSDL3.Delegates.SdlClipboardDataCallback
  spec.csharp:
  - uid: SharpSDL3.Delegates
    name: Delegates
    href: SharpSDL3.Delegates.html
  - name: .
  - uid: SharpSDL3.Delegates.SdlClipboardDataCallback
    name: SdlClipboardDataCallback
    href: SharpSDL3.Delegates.SdlClipboardDataCallback.html
  spec.vb:
  - uid: SharpSDL3.Delegates
    name: Delegates
    href: SharpSDL3.Delegates.html
  - name: .
  - uid: SharpSDL3.Delegates.SdlClipboardDataCallback
    name: SdlClipboardDataCallback
    href: SharpSDL3.Delegates.SdlClipboardDataCallback.html
- uid: SharpSDL3.Delegates.SdlClipboardCleanupCallback
  commentId: T:SharpSDL3.Delegates.SdlClipboardCleanupCallback
  parent: SharpSDL3
  href: SharpSDL3.Delegates.html
  name: Delegates.SdlClipboardCleanupCallback
  nameWithType: Delegates.SdlClipboardCleanupCallback
  fullName: SharpSDL3.Delegates.SdlClipboardCleanupCallback
  spec.csharp:
  - uid: SharpSDL3.Delegates
    name: Delegates
    href: SharpSDL3.Delegates.html
  - name: .
  - uid: SharpSDL3.Delegates.SdlClipboardCleanupCallback
    name: SdlClipboardCleanupCallback
    href: SharpSDL3.Delegates.SdlClipboardCleanupCallback.html
  spec.vb:
  - uid: SharpSDL3.Delegates
    name: Delegates
    href: SharpSDL3.Delegates.html
  - name: .
  - uid: SharpSDL3.Delegates.SdlClipboardCleanupCallback
    name: SdlClipboardCleanupCallback
    href: SharpSDL3.Delegates.SdlClipboardCleanupCallback.html
- uid: SharpSDL3.Sdl.SetClipboardText*
  commentId: Overload:SharpSDL3.Sdl.SetClipboardText
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetClipboardText_System_String_
  name: SetClipboardText
  nameWithType: Sdl.SetClipboardText
  fullName: SharpSDL3.Sdl.SetClipboardText
- uid: SharpSDL3.Sdl.SetCurrentThreadPriority*
  commentId: Overload:SharpSDL3.Sdl.SetCurrentThreadPriority
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetCurrentThreadPriority_SharpSDL3_Enums_ThreadPriority_
  name: SetCurrentThreadPriority
  nameWithType: Sdl.SetCurrentThreadPriority
  fullName: SharpSDL3.Sdl.SetCurrentThreadPriority
- uid: SharpSDL3.Enums.ThreadPriority
  commentId: T:SharpSDL3.Enums.ThreadPriority
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.ThreadPriority.html
  name: ThreadPriority
  nameWithType: ThreadPriority
  fullName: SharpSDL3.Enums.ThreadPriority
- uid: SharpSDL3.Sdl.SetError*
  commentId: Overload:SharpSDL3.Sdl.SetError
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetError_System_String_System_Object___
  name: SetError
  nameWithType: Sdl.SetError
  fullName: SharpSDL3.Sdl.SetError
- uid: System.Object[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object[]
  nameWithType: object[]
  fullName: object[]
  nameWithType.vb: Object()
  fullName.vb: Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.SetFloatProperty*
  commentId: Overload:SharpSDL3.Sdl.SetFloatProperty
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetFloatProperty_System_UInt32_System_String_System_Single_
  name: SetFloatProperty
  nameWithType: Sdl.SetFloatProperty
  fullName: SharpSDL3.Sdl.SetFloatProperty
- uid: SharpSDL3.Sdl.SetHint*
  commentId: Overload:SharpSDL3.Sdl.SetHint
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetHint_System_String_System_String_
  name: SetHint
  nameWithType: Sdl.SetHint
  fullName: SharpSDL3.Sdl.SetHint
- uid: SharpSDL3.Sdl.SetHintWithPriority*
  commentId: Overload:SharpSDL3.Sdl.SetHintWithPriority
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetHintWithPriority_System_String_System_String_SharpSDL3_Enums_HintPriority_
  name: SetHintWithPriority
  nameWithType: Sdl.SetHintWithPriority
  fullName: SharpSDL3.Sdl.SetHintWithPriority
- uid: SharpSDL3.Enums.HintPriority
  commentId: T:SharpSDL3.Enums.HintPriority
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.HintPriority.html
  name: HintPriority
  nameWithType: HintPriority
  fullName: SharpSDL3.Enums.HintPriority
- uid: SharpSDL3.Sdl.SetMainReady*
  commentId: Overload:SharpSDL3.Sdl.SetMainReady
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetMainReady
  name: SetMainReady
  nameWithType: Sdl.SetMainReady
  fullName: SharpSDL3.Sdl.SetMainReady
- uid: SharpSDL3.Sdl.GetModState
  commentId: M:SharpSDL3.Sdl.GetModState
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetModState
  name: GetModState()
  nameWithType: Sdl.GetModState()
  fullName: SharpSDL3.Sdl.GetModState()
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetModState
    name: GetModState
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetModState
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetModState
    name: GetModState
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetModState
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.SetModState*
  commentId: Overload:SharpSDL3.Sdl.SetModState
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetModState_SharpSDL3_Enums_KeyMod_
  name: SetModState
  nameWithType: Sdl.SetModState
  fullName: SharpSDL3.Sdl.SetModState
- uid: SharpSDL3.Sdl.SetNumberProperty*
  commentId: Overload:SharpSDL3.Sdl.SetNumberProperty
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetNumberProperty_System_UInt32_System_String_System_Int64_
  name: SetNumberProperty
  nameWithType: Sdl.SetNumberProperty
  fullName: SharpSDL3.Sdl.SetNumberProperty
- uid: SharpSDL3.Sdl.SetPaletteColors*
  commentId: Overload:SharpSDL3.Sdl.SetPaletteColors
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetPaletteColors_System_IntPtr_System_Span_SharpSDL3_Structs_Color__System_Int32_System_Int32_
  name: SetPaletteColors
  nameWithType: Sdl.SetPaletteColors
  fullName: SharpSDL3.Sdl.SetPaletteColors
- uid: System.Span{SharpSDL3.Structs.Color}
  commentId: T:System.Span{SharpSDL3.Structs.Color}
  parent: System
  definition: System.Span`1
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<Color>
  nameWithType: Span<Color>
  fullName: System.Span<SharpSDL3.Structs.Color>
  nameWithType.vb: Span(Of Color)
  fullName.vb: System.Span(Of SharpSDL3.Structs.Color)
  name.vb: Span(Of Color)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: SharpSDL3.Structs.Color
    name: Color
    href: SharpSDL3.Structs.Color.html
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: SharpSDL3.Structs.Color
    name: Color
    href: SharpSDL3.Structs.Color.html
  - name: )
- uid: SharpSDL3.Sdl.GetPointerProperty(System.UInt32,System.String,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetPointerProperty(System.UInt32,System.String,System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetPointerProperty_System_UInt32_System_String_System_IntPtr_
  name: GetPointerProperty(uint, string, nint)
  nameWithType: Sdl.GetPointerProperty(uint, string, nint)
  fullName: SharpSDL3.Sdl.GetPointerProperty(uint, string, nint)
  nameWithType.vb: Sdl.GetPointerProperty(UInteger, String, IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetPointerProperty(UInteger, String, System.IntPtr)
  name.vb: GetPointerProperty(UInteger, String, IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetPointerProperty(System.UInt32,System.String,System.IntPtr)
    name: GetPointerProperty
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetPointerProperty_System_UInt32_System_String_System_IntPtr_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetPointerProperty(System.UInt32,System.String,System.IntPtr)
    name: GetPointerProperty
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetPointerProperty_System_UInt32_System_String_System_IntPtr_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.SetPointerProperty*
  commentId: Overload:SharpSDL3.Sdl.SetPointerProperty
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetPointerProperty_System_UInt32_System_String_System_IntPtr_
  name: SetPointerProperty
  nameWithType: Sdl.SetPointerProperty
  fullName: SharpSDL3.Sdl.SetPointerProperty
- uid: SharpSDL3.Sdl.SetPointerPropertyWithCleanup*
  commentId: Overload:SharpSDL3.Sdl.SetPointerPropertyWithCleanup
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetPointerPropertyWithCleanup_System_UInt32_System_String_System_IntPtr_SharpSDL3_Delegates_SdlCleanupPropertyCallback_System_IntPtr_
  name: SetPointerPropertyWithCleanup
  nameWithType: Sdl.SetPointerPropertyWithCleanup
  fullName: SharpSDL3.Sdl.SetPointerPropertyWithCleanup
- uid: SharpSDL3.Delegates.SdlCleanupPropertyCallback
  commentId: T:SharpSDL3.Delegates.SdlCleanupPropertyCallback
  parent: SharpSDL3
  href: SharpSDL3.Delegates.html
  name: Delegates.SdlCleanupPropertyCallback
  nameWithType: Delegates.SdlCleanupPropertyCallback
  fullName: SharpSDL3.Delegates.SdlCleanupPropertyCallback
  spec.csharp:
  - uid: SharpSDL3.Delegates
    name: Delegates
    href: SharpSDL3.Delegates.html
  - name: .
  - uid: SharpSDL3.Delegates.SdlCleanupPropertyCallback
    name: SdlCleanupPropertyCallback
    href: SharpSDL3.Delegates.SdlCleanupPropertyCallback.html
  spec.vb:
  - uid: SharpSDL3.Delegates
    name: Delegates
    href: SharpSDL3.Delegates.html
  - name: .
  - uid: SharpSDL3.Delegates.SdlCleanupPropertyCallback
    name: SdlCleanupPropertyCallback
    href: SharpSDL3.Delegates.SdlCleanupPropertyCallback.html
- uid: SharpSDL3.Sdl.SetPrimarySelectionText*
  commentId: Overload:SharpSDL3.Sdl.SetPrimarySelectionText
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetPrimarySelectionText_System_String_
  name: SetPrimarySelectionText
  nameWithType: Sdl.SetPrimarySelectionText
  fullName: SharpSDL3.Sdl.SetPrimarySelectionText
- uid: SharpSDL3.Sdl.SetScancodeName*
  commentId: Overload:SharpSDL3.Sdl.SetScancodeName
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetScancodeName_SharpSDL3_Enums_Scancode_System_String_
  name: SetScancodeName
  nameWithType: Sdl.SetScancodeName
  fullName: SharpSDL3.Sdl.SetScancodeName
- uid: SharpSDL3.Sdl.SetStringProperty*
  commentId: Overload:SharpSDL3.Sdl.SetStringProperty
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetStringProperty_System_UInt32_System_String_System_String_
  name: SetStringProperty
  nameWithType: Sdl.SetStringProperty
  fullName: SharpSDL3.Sdl.SetStringProperty
- uid: SharpSDL3.Sdl.SetSurfaceAlphaMod*
  commentId: Overload:SharpSDL3.Sdl.SetSurfaceAlphaMod
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetSurfaceAlphaMod_System_IntPtr_System_Byte_
  name: SetSurfaceAlphaMod
  nameWithType: Sdl.SetSurfaceAlphaMod
  fullName: SharpSDL3.Sdl.SetSurfaceAlphaMod
- uid: SharpSDL3.Sdl.GetSurfaceBlendMode(System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetSurfaceBlendMode(System.IntPtr,System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetSurfaceBlendMode_System_IntPtr_System_IntPtr_
  name: GetSurfaceBlendMode(nint, nint)
  nameWithType: Sdl.GetSurfaceBlendMode(nint, nint)
  fullName: SharpSDL3.Sdl.GetSurfaceBlendMode(nint, nint)
  nameWithType.vb: Sdl.GetSurfaceBlendMode(IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetSurfaceBlendMode(System.IntPtr, System.IntPtr)
  name.vb: GetSurfaceBlendMode(IntPtr, IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetSurfaceBlendMode(System.IntPtr,System.IntPtr)
    name: GetSurfaceBlendMode
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetSurfaceBlendMode_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetSurfaceBlendMode(System.IntPtr,System.IntPtr)
    name: GetSurfaceBlendMode
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetSurfaceBlendMode_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.SetSurfaceBlendMode*
  commentId: Overload:SharpSDL3.Sdl.SetSurfaceBlendMode
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetSurfaceBlendMode_System_IntPtr_System_UInt32_
  name: SetSurfaceBlendMode
  nameWithType: Sdl.SetSurfaceBlendMode
  fullName: SharpSDL3.Sdl.SetSurfaceBlendMode
- uid: SharpSDL3.Sdl.GetSurfaceClipRect(System.IntPtr,SharpSDL3.Structs.Rect@)
  commentId: M:SharpSDL3.Sdl.GetSurfaceClipRect(System.IntPtr,SharpSDL3.Structs.Rect@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetSurfaceClipRect_System_IntPtr_SharpSDL3_Structs_Rect__
  name: GetSurfaceClipRect(nint, out Rect)
  nameWithType: Sdl.GetSurfaceClipRect(nint, out Rect)
  fullName: SharpSDL3.Sdl.GetSurfaceClipRect(nint, out SharpSDL3.Structs.Rect)
  nameWithType.vb: Sdl.GetSurfaceClipRect(IntPtr, Rect)
  fullName.vb: SharpSDL3.Sdl.GetSurfaceClipRect(System.IntPtr, SharpSDL3.Structs.Rect)
  name.vb: GetSurfaceClipRect(IntPtr, Rect)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetSurfaceClipRect(System.IntPtr,SharpSDL3.Structs.Rect@)
    name: GetSurfaceClipRect
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetSurfaceClipRect_System_IntPtr_SharpSDL3_Structs_Rect__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: SharpSDL3.Structs.Rect
    name: Rect
    href: SharpSDL3.Structs.Rect.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetSurfaceClipRect(System.IntPtr,SharpSDL3.Structs.Rect@)
    name: GetSurfaceClipRect
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetSurfaceClipRect_System_IntPtr_SharpSDL3_Structs_Rect__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.Rect
    name: Rect
    href: SharpSDL3.Structs.Rect.html
  - name: )
- uid: SharpSDL3.Sdl.SetSurfaceClipRect*
  commentId: Overload:SharpSDL3.Sdl.SetSurfaceClipRect
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetSurfaceClipRect_System_IntPtr_SharpSDL3_Structs_Rect__
  name: SetSurfaceClipRect
  nameWithType: Sdl.SetSurfaceClipRect
  fullName: SharpSDL3.Sdl.SetSurfaceClipRect
- uid: SharpSDL3.Sdl.GetSurfaceColorKey(System.IntPtr,System.UInt32@)
  commentId: M:SharpSDL3.Sdl.GetSurfaceColorKey(System.IntPtr,System.UInt32@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetSurfaceColorKey_System_IntPtr_System_UInt32__
  name: GetSurfaceColorKey(nint, out uint)
  nameWithType: Sdl.GetSurfaceColorKey(nint, out uint)
  fullName: SharpSDL3.Sdl.GetSurfaceColorKey(nint, out uint)
  nameWithType.vb: Sdl.GetSurfaceColorKey(IntPtr, UInteger)
  fullName.vb: SharpSDL3.Sdl.GetSurfaceColorKey(System.IntPtr, UInteger)
  name.vb: GetSurfaceColorKey(IntPtr, UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetSurfaceColorKey(System.IntPtr,System.UInt32@)
    name: GetSurfaceColorKey
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetSurfaceColorKey_System_IntPtr_System_UInt32__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetSurfaceColorKey(System.IntPtr,System.UInt32@)
    name: GetSurfaceColorKey
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetSurfaceColorKey_System_IntPtr_System_UInt32__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.SetSurfaceRLE(System.IntPtr,System.Boolean)
  commentId: M:SharpSDL3.Sdl.SetSurfaceRLE(System.IntPtr,System.Boolean)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetSurfaceRLE_System_IntPtr_System_Boolean_
  name: SetSurfaceRLE(nint, bool)
  nameWithType: Sdl.SetSurfaceRLE(nint, bool)
  fullName: SharpSDL3.Sdl.SetSurfaceRLE(nint, bool)
  nameWithType.vb: Sdl.SetSurfaceRLE(IntPtr, Boolean)
  fullName.vb: SharpSDL3.Sdl.SetSurfaceRLE(System.IntPtr, Boolean)
  name.vb: SetSurfaceRLE(IntPtr, Boolean)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetSurfaceRLE(System.IntPtr,System.Boolean)
    name: SetSurfaceRLE
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetSurfaceRLE_System_IntPtr_System_Boolean_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetSurfaceRLE(System.IntPtr,System.Boolean)
    name: SetSurfaceRLE
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetSurfaceRLE_System_IntPtr_System_Boolean_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: SharpSDL3.Sdl.SetSurfaceColorKey*
  commentId: Overload:SharpSDL3.Sdl.SetSurfaceColorKey
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetSurfaceColorKey_System_IntPtr_System_Boolean_System_UInt32_
  name: SetSurfaceColorKey
  nameWithType: Sdl.SetSurfaceColorKey
  fullName: SharpSDL3.Sdl.SetSurfaceColorKey
- uid: SharpSDL3.Sdl.SetSurfaceColorMod*
  commentId: Overload:SharpSDL3.Sdl.SetSurfaceColorMod
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetSurfaceColorMod_System_IntPtr_System_Byte_System_Byte_System_Byte_
  name: SetSurfaceColorMod
  nameWithType: Sdl.SetSurfaceColorMod
  fullName: SharpSDL3.Sdl.SetSurfaceColorMod
- uid: SharpSDL3.Sdl.SetSurfaceColorspace*
  commentId: Overload:SharpSDL3.Sdl.SetSurfaceColorspace
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetSurfaceColorspace_System_IntPtr_SharpSDL3_Enums_Colorspace_
  name: SetSurfaceColorspace
  nameWithType: Sdl.SetSurfaceColorspace
  fullName: SharpSDL3.Sdl.SetSurfaceColorspace
- uid: SharpSDL3.Sdl.GetSurfacePalette(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetSurfacePalette(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetSurfacePalette_System_IntPtr_
  name: GetSurfacePalette(nint)
  nameWithType: Sdl.GetSurfacePalette(nint)
  fullName: SharpSDL3.Sdl.GetSurfacePalette(nint)
  nameWithType.vb: Sdl.GetSurfacePalette(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetSurfacePalette(System.IntPtr)
  name.vb: GetSurfacePalette(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetSurfacePalette(System.IntPtr)
    name: GetSurfacePalette
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetSurfacePalette_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetSurfacePalette(System.IntPtr)
    name: GetSurfacePalette
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetSurfacePalette_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.SetSurfacePalette*
  commentId: Overload:SharpSDL3.Sdl.SetSurfacePalette
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetSurfacePalette_System_IntPtr_System_IntPtr_
  name: SetSurfacePalette
  nameWithType: Sdl.SetSurfacePalette
  fullName: SharpSDL3.Sdl.SetSurfacePalette
- uid: SharpSDL3.Sdl.SetSurfaceRLE*
  commentId: Overload:SharpSDL3.Sdl.SetSurfaceRLE
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetSurfaceRLE_System_IntPtr_System_Boolean_
  name: SetSurfaceRLE
  nameWithType: Sdl.SetSurfaceRLE
  fullName: SharpSDL3.Sdl.SetSurfaceRLE
- uid: SharpSDL3.Sdl.GetTextInputArea(System.IntPtr,SharpSDL3.Structs.Rect@,System.Int32@)
  commentId: M:SharpSDL3.Sdl.GetTextInputArea(System.IntPtr,SharpSDL3.Structs.Rect@,System.Int32@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTextInputArea_System_IntPtr_SharpSDL3_Structs_Rect__System_Int32__
  name: GetTextInputArea(nint, out Rect, out int)
  nameWithType: Sdl.GetTextInputArea(nint, out Rect, out int)
  fullName: SharpSDL3.Sdl.GetTextInputArea(nint, out SharpSDL3.Structs.Rect, out int)
  nameWithType.vb: Sdl.GetTextInputArea(IntPtr, Rect, Integer)
  fullName.vb: SharpSDL3.Sdl.GetTextInputArea(System.IntPtr, SharpSDL3.Structs.Rect, Integer)
  name.vb: GetTextInputArea(IntPtr, Rect, Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetTextInputArea(System.IntPtr,SharpSDL3.Structs.Rect@,System.Int32@)
    name: GetTextInputArea
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTextInputArea_System_IntPtr_SharpSDL3_Structs_Rect__System_Int32__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: SharpSDL3.Structs.Rect
    name: Rect
    href: SharpSDL3.Structs.Rect.html
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetTextInputArea(System.IntPtr,SharpSDL3.Structs.Rect@,System.Int32@)
    name: GetTextInputArea
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTextInputArea_System_IntPtr_SharpSDL3_Structs_Rect__System_Int32__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.Rect
    name: Rect
    href: SharpSDL3.Structs.Rect.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.SetTextInputArea*
  commentId: Overload:SharpSDL3.Sdl.SetTextInputArea
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetTextInputArea_System_IntPtr_SharpSDL3_Structs_Rect__System_Int32_
  name: SetTextInputArea
  nameWithType: Sdl.SetTextInputArea
  fullName: SharpSDL3.Sdl.SetTextInputArea
- uid: SharpSDL3.Sdl.GetTls(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetTls(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTls_System_IntPtr_
  name: GetTls(nint)
  nameWithType: Sdl.GetTls(nint)
  fullName: SharpSDL3.Sdl.GetTls(nint)
  nameWithType.vb: Sdl.GetTls(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetTls(System.IntPtr)
  name.vb: GetTls(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetTls(System.IntPtr)
    name: GetTls
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTls_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetTls(System.IntPtr)
    name: GetTls
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTls_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.SetTls*
  commentId: Overload:SharpSDL3.Sdl.SetTls
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetTls_System_IntPtr_System_IntPtr_SharpSDL3_Delegates_SdlTlsDestructorCallback_
  name: SetTls
  nameWithType: Sdl.SetTls
  fullName: SharpSDL3.Sdl.SetTls
- uid: SharpSDL3.Delegates.SdlTlsDestructorCallback
  commentId: T:SharpSDL3.Delegates.SdlTlsDestructorCallback
  parent: SharpSDL3
  href: SharpSDL3.Delegates.html
  name: Delegates.SdlTlsDestructorCallback
  nameWithType: Delegates.SdlTlsDestructorCallback
  fullName: SharpSDL3.Delegates.SdlTlsDestructorCallback
  spec.csharp:
  - uid: SharpSDL3.Delegates
    name: Delegates
    href: SharpSDL3.Delegates.html
  - name: .
  - uid: SharpSDL3.Delegates.SdlTlsDestructorCallback
    name: SdlTlsDestructorCallback
    href: SharpSDL3.Delegates.SdlTlsDestructorCallback.html
  spec.vb:
  - uid: SharpSDL3.Delegates
    name: Delegates
    href: SharpSDL3.Delegates.html
  - name: .
  - uid: SharpSDL3.Delegates.SdlTlsDestructorCallback
    name: SdlTlsDestructorCallback
    href: SharpSDL3.Delegates.SdlTlsDestructorCallback.html
- uid: SharpSDL3.Sdl.GetWindowFlags(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetWindowFlags(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowFlags_System_IntPtr_
  name: GetWindowFlags(nint)
  nameWithType: Sdl.GetWindowFlags(nint)
  fullName: SharpSDL3.Sdl.GetWindowFlags(nint)
  nameWithType.vb: Sdl.GetWindowFlags(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetWindowFlags(System.IntPtr)
  name.vb: GetWindowFlags(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetWindowFlags(System.IntPtr)
    name: GetWindowFlags
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowFlags_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetWindowFlags(System.IntPtr)
    name: GetWindowFlags
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowFlags_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.SetWindowAlwaysOnTop*
  commentId: Overload:SharpSDL3.Sdl.SetWindowAlwaysOnTop
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowAlwaysOnTop_System_IntPtr_System_Boolean_
  name: SetWindowAlwaysOnTop
  nameWithType: Sdl.SetWindowAlwaysOnTop
  fullName: SharpSDL3.Sdl.SetWindowAlwaysOnTop
- uid: SharpSDL3.Sdl.GetWindowAspectRatio(System.IntPtr,System.Single@,System.Single@)
  commentId: M:SharpSDL3.Sdl.GetWindowAspectRatio(System.IntPtr,System.Single@,System.Single@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowAspectRatio_System_IntPtr_System_Single__System_Single__
  name: GetWindowAspectRatio(nint, out float, out float)
  nameWithType: Sdl.GetWindowAspectRatio(nint, out float, out float)
  fullName: SharpSDL3.Sdl.GetWindowAspectRatio(nint, out float, out float)
  nameWithType.vb: Sdl.GetWindowAspectRatio(IntPtr, Single, Single)
  fullName.vb: SharpSDL3.Sdl.GetWindowAspectRatio(System.IntPtr, Single, Single)
  name.vb: GetWindowAspectRatio(IntPtr, Single, Single)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetWindowAspectRatio(System.IntPtr,System.Single@,System.Single@)
    name: GetWindowAspectRatio
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowAspectRatio_System_IntPtr_System_Single__System_Single__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetWindowAspectRatio(System.IntPtr,System.Single@,System.Single@)
    name: GetWindowAspectRatio
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowAspectRatio_System_IntPtr_System_Single__System_Single__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: SharpSDL3.Sdl.SetWindowAspectRatio*
  commentId: Overload:SharpSDL3.Sdl.SetWindowAspectRatio
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowAspectRatio_System_IntPtr_System_Single_System_Single_
  name: SetWindowAspectRatio
  nameWithType: Sdl.SetWindowAspectRatio
  fullName: SharpSDL3.Sdl.SetWindowAspectRatio
- uid: SharpSDL3.Sdl.SetWindowBordered*
  commentId: Overload:SharpSDL3.Sdl.SetWindowBordered
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowBordered_System_IntPtr_System_Boolean_
  name: SetWindowBordered
  nameWithType: Sdl.SetWindowBordered
  fullName: SharpSDL3.Sdl.SetWindowBordered
- uid: SharpSDL3.Sdl.SetWindowFocusable*
  commentId: Overload:SharpSDL3.Sdl.SetWindowFocusable
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowFocusable_System_IntPtr_System_Boolean_
  name: SetWindowFocusable
  nameWithType: Sdl.SetWindowFocusable
  fullName: SharpSDL3.Sdl.SetWindowFocusable
- uid: SharpSDL3.Sdl.GetWindowFullscreenMode(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetWindowFullscreenMode(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowFullscreenMode_System_IntPtr_
  name: GetWindowFullscreenMode(nint)
  nameWithType: Sdl.GetWindowFullscreenMode(nint)
  fullName: SharpSDL3.Sdl.GetWindowFullscreenMode(nint)
  nameWithType.vb: Sdl.GetWindowFullscreenMode(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetWindowFullscreenMode(System.IntPtr)
  name.vb: GetWindowFullscreenMode(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetWindowFullscreenMode(System.IntPtr)
    name: GetWindowFullscreenMode
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowFullscreenMode_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetWindowFullscreenMode(System.IntPtr)
    name: GetWindowFullscreenMode
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowFullscreenMode_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.SetWindowFullscreen*
  commentId: Overload:SharpSDL3.Sdl.SetWindowFullscreen
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowFullscreen_System_IntPtr_System_Boolean_
  name: SetWindowFullscreen
  nameWithType: Sdl.SetWindowFullscreen
  fullName: SharpSDL3.Sdl.SetWindowFullscreen
- uid: SharpSDL3.Sdl.SetWindowFullscreenMode*
  commentId: Overload:SharpSDL3.Sdl.SetWindowFullscreenMode
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowFullscreenMode_System_IntPtr_SharpSDL3_Structs_DisplayMode__
  name: SetWindowFullscreenMode
  nameWithType: Sdl.SetWindowFullscreenMode
  fullName: SharpSDL3.Sdl.SetWindowFullscreenMode
- uid: SharpSDL3.Sdl.SetWindowHitTest*
  commentId: Overload:SharpSDL3.Sdl.SetWindowHitTest
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowHitTest_System_IntPtr_SharpSDL3_Delegates_SdlHitTest_System_IntPtr_
  name: SetWindowHitTest
  nameWithType: Sdl.SetWindowHitTest
  fullName: SharpSDL3.Sdl.SetWindowHitTest
- uid: SharpSDL3.Delegates.SdlHitTest
  commentId: T:SharpSDL3.Delegates.SdlHitTest
  parent: SharpSDL3
  href: SharpSDL3.Delegates.html
  name: Delegates.SdlHitTest
  nameWithType: Delegates.SdlHitTest
  fullName: SharpSDL3.Delegates.SdlHitTest
  spec.csharp:
  - uid: SharpSDL3.Delegates
    name: Delegates
    href: SharpSDL3.Delegates.html
  - name: .
  - uid: SharpSDL3.Delegates.SdlHitTest
    name: SdlHitTest
    href: SharpSDL3.Delegates.SdlHitTest.html
  spec.vb:
  - uid: SharpSDL3.Delegates
    name: Delegates
    href: SharpSDL3.Delegates.html
  - name: .
  - uid: SharpSDL3.Delegates.SdlHitTest
    name: SdlHitTest
    href: SharpSDL3.Delegates.SdlHitTest.html
- uid: SharpSDL3.Sdl.SetWindowIcon*
  commentId: Overload:SharpSDL3.Sdl.SetWindowIcon
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowIcon_System_IntPtr_System_IntPtr_
  name: SetWindowIcon
  nameWithType: Sdl.SetWindowIcon
  fullName: SharpSDL3.Sdl.SetWindowIcon
- uid: SharpSDL3.Sdl.GetWindowKeyboardGrab(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetWindowKeyboardGrab(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowKeyboardGrab_System_IntPtr_
  name: GetWindowKeyboardGrab(nint)
  nameWithType: Sdl.GetWindowKeyboardGrab(nint)
  fullName: SharpSDL3.Sdl.GetWindowKeyboardGrab(nint)
  nameWithType.vb: Sdl.GetWindowKeyboardGrab(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetWindowKeyboardGrab(System.IntPtr)
  name.vb: GetWindowKeyboardGrab(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetWindowKeyboardGrab(System.IntPtr)
    name: GetWindowKeyboardGrab
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowKeyboardGrab_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetWindowKeyboardGrab(System.IntPtr)
    name: GetWindowKeyboardGrab
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowKeyboardGrab_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.SetWindowKeyboardGrab*
  commentId: Overload:SharpSDL3.Sdl.SetWindowKeyboardGrab
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowKeyboardGrab_System_IntPtr_System_Boolean_
  name: SetWindowKeyboardGrab
  nameWithType: Sdl.SetWindowKeyboardGrab
  fullName: SharpSDL3.Sdl.SetWindowKeyboardGrab
- uid: SharpSDL3.Sdl.SetWindowMaximumSize*
  commentId: Overload:SharpSDL3.Sdl.SetWindowMaximumSize
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowMaximumSize_System_IntPtr_System_Int32_System_Int32_
  name: SetWindowMaximumSize
  nameWithType: Sdl.SetWindowMaximumSize
  fullName: SharpSDL3.Sdl.SetWindowMaximumSize
- uid: SharpSDL3.Sdl.SetWindowMinimumSize*
  commentId: Overload:SharpSDL3.Sdl.SetWindowMinimumSize
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowMinimumSize_System_IntPtr_System_Int32_System_Int32_
  name: SetWindowMinimumSize
  nameWithType: Sdl.SetWindowMinimumSize
  fullName: SharpSDL3.Sdl.SetWindowMinimumSize
- uid: SharpSDL3.Sdl.SetWindowParent(System.IntPtr,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.SetWindowParent(System.IntPtr,System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowParent_System_IntPtr_System_IntPtr_
  name: SetWindowParent(nint, nint)
  nameWithType: Sdl.SetWindowParent(nint, nint)
  fullName: SharpSDL3.Sdl.SetWindowParent(nint, nint)
  nameWithType.vb: Sdl.SetWindowParent(IntPtr, IntPtr)
  fullName.vb: SharpSDL3.Sdl.SetWindowParent(System.IntPtr, System.IntPtr)
  name.vb: SetWindowParent(IntPtr, IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetWindowParent(System.IntPtr,System.IntPtr)
    name: SetWindowParent
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowParent_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetWindowParent(System.IntPtr,System.IntPtr)
    name: SetWindowParent
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowParent_System_IntPtr_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.SetWindowModal*
  commentId: Overload:SharpSDL3.Sdl.SetWindowModal
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowModal_System_IntPtr_System_Boolean_
  name: SetWindowModal
  nameWithType: Sdl.SetWindowModal
  fullName: SharpSDL3.Sdl.SetWindowModal
- uid: SharpSDL3.Sdl.SetWindowMouseGrab*
  commentId: Overload:SharpSDL3.Sdl.SetWindowMouseGrab
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowMouseGrab_System_IntPtr_System_Boolean_
  name: SetWindowMouseGrab
  nameWithType: Sdl.SetWindowMouseGrab
  fullName: SharpSDL3.Sdl.SetWindowMouseGrab
- uid: SharpSDL3.Sdl.SetWindowMouseRect*
  commentId: Overload:SharpSDL3.Sdl.SetWindowMouseRect
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowMouseRect_System_IntPtr_SharpSDL3_Structs_Rect__
  name: SetWindowMouseRect
  nameWithType: Sdl.SetWindowMouseRect
  fullName: SharpSDL3.Sdl.SetWindowMouseRect
- uid: SharpSDL3.Sdl.GetWindowOpacity(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetWindowOpacity(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowOpacity_System_IntPtr_
  name: GetWindowOpacity(nint)
  nameWithType: Sdl.GetWindowOpacity(nint)
  fullName: SharpSDL3.Sdl.GetWindowOpacity(nint)
  nameWithType.vb: Sdl.GetWindowOpacity(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetWindowOpacity(System.IntPtr)
  name.vb: GetWindowOpacity(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetWindowOpacity(System.IntPtr)
    name: GetWindowOpacity
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowOpacity_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetWindowOpacity(System.IntPtr)
    name: GetWindowOpacity
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowOpacity_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.SetWindowOpacity*
  commentId: Overload:SharpSDL3.Sdl.SetWindowOpacity
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowOpacity_System_IntPtr_System_Single_
  name: SetWindowOpacity
  nameWithType: Sdl.SetWindowOpacity
  fullName: SharpSDL3.Sdl.SetWindowOpacity
- uid: SharpSDL3.Sdl.SetWindowModal(System.IntPtr,System.Boolean)
  commentId: M:SharpSDL3.Sdl.SetWindowModal(System.IntPtr,System.Boolean)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowModal_System_IntPtr_System_Boolean_
  name: SetWindowModal(nint, bool)
  nameWithType: Sdl.SetWindowModal(nint, bool)
  fullName: SharpSDL3.Sdl.SetWindowModal(nint, bool)
  nameWithType.vb: Sdl.SetWindowModal(IntPtr, Boolean)
  fullName.vb: SharpSDL3.Sdl.SetWindowModal(System.IntPtr, Boolean)
  name.vb: SetWindowModal(IntPtr, Boolean)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetWindowModal(System.IntPtr,System.Boolean)
    name: SetWindowModal
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowModal_System_IntPtr_System_Boolean_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetWindowModal(System.IntPtr,System.Boolean)
    name: SetWindowModal
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowModal_System_IntPtr_System_Boolean_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: SharpSDL3.Sdl.SetWindowParent*
  commentId: Overload:SharpSDL3.Sdl.SetWindowParent
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowParent_System_IntPtr_System_IntPtr_
  name: SetWindowParent
  nameWithType: Sdl.SetWindowParent
  fullName: SharpSDL3.Sdl.SetWindowParent
- uid: SharpSDL3.Sdl.GetWindowPosition(System.IntPtr,System.Int32@,System.Int32@)
  commentId: M:SharpSDL3.Sdl.GetWindowPosition(System.IntPtr,System.Int32@,System.Int32@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowPosition_System_IntPtr_System_Int32__System_Int32__
  name: GetWindowPosition(nint, out int, out int)
  nameWithType: Sdl.GetWindowPosition(nint, out int, out int)
  fullName: SharpSDL3.Sdl.GetWindowPosition(nint, out int, out int)
  nameWithType.vb: Sdl.GetWindowPosition(IntPtr, Integer, Integer)
  fullName.vb: SharpSDL3.Sdl.GetWindowPosition(System.IntPtr, Integer, Integer)
  name.vb: GetWindowPosition(IntPtr, Integer, Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetWindowPosition(System.IntPtr,System.Int32@,System.Int32@)
    name: GetWindowPosition
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowPosition_System_IntPtr_System_Int32__System_Int32__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetWindowPosition(System.IntPtr,System.Int32@,System.Int32@)
    name: GetWindowPosition
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowPosition_System_IntPtr_System_Int32__System_Int32__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.SetWindowPosition*
  commentId: Overload:SharpSDL3.Sdl.SetWindowPosition
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowPosition_System_IntPtr_System_Int32_System_Int32_
  name: SetWindowPosition
  nameWithType: Sdl.SetWindowPosition
  fullName: SharpSDL3.Sdl.SetWindowPosition
- uid: SharpSDL3.Sdl.SetWindowResizable*
  commentId: Overload:SharpSDL3.Sdl.SetWindowResizable
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowResizable_System_IntPtr_System_Boolean_
  name: SetWindowResizable
  nameWithType: Sdl.SetWindowResizable
  fullName: SharpSDL3.Sdl.SetWindowResizable
- uid: SharpSDL3.Sdl.SetWindowShape*
  commentId: Overload:SharpSDL3.Sdl.SetWindowShape
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowShape_System_IntPtr_System_IntPtr_
  name: SetWindowShape
  nameWithType: Sdl.SetWindowShape
  fullName: SharpSDL3.Sdl.SetWindowShape
- uid: SharpSDL3.Sdl.SetWindowSize*
  commentId: Overload:SharpSDL3.Sdl.SetWindowSize
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowSize_System_IntPtr_System_Int32_System_Int32_
  name: SetWindowSize
  nameWithType: Sdl.SetWindowSize
  fullName: SharpSDL3.Sdl.SetWindowSize
- uid: SharpSDL3.Sdl.GetWindowSurfaceVSync(System.IntPtr,System.Int32@)
  commentId: M:SharpSDL3.Sdl.GetWindowSurfaceVSync(System.IntPtr,System.Int32@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowSurfaceVSync_System_IntPtr_System_Int32__
  name: GetWindowSurfaceVSync(nint, out int)
  nameWithType: Sdl.GetWindowSurfaceVSync(nint, out int)
  fullName: SharpSDL3.Sdl.GetWindowSurfaceVSync(nint, out int)
  nameWithType.vb: Sdl.GetWindowSurfaceVSync(IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.GetWindowSurfaceVSync(System.IntPtr, Integer)
  name.vb: GetWindowSurfaceVSync(IntPtr, Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetWindowSurfaceVSync(System.IntPtr,System.Int32@)
    name: GetWindowSurfaceVSync
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowSurfaceVSync_System_IntPtr_System_Int32__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetWindowSurfaceVSync(System.IntPtr,System.Int32@)
    name: GetWindowSurfaceVSync
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowSurfaceVSync_System_IntPtr_System_Int32__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.SetWindowSurfaceVSync*
  commentId: Overload:SharpSDL3.Sdl.SetWindowSurfaceVSync
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowSurfaceVSync_System_IntPtr_System_Int32_
  name: SetWindowSurfaceVSync
  nameWithType: Sdl.SetWindowSurfaceVSync
  fullName: SharpSDL3.Sdl.SetWindowSurfaceVSync
- uid: SharpSDL3.Sdl.GetWindowTitle(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetWindowTitle(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowTitle_System_IntPtr_
  name: GetWindowTitle(nint)
  nameWithType: Sdl.GetWindowTitle(nint)
  fullName: SharpSDL3.Sdl.GetWindowTitle(nint)
  nameWithType.vb: Sdl.GetWindowTitle(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetWindowTitle(System.IntPtr)
  name.vb: GetWindowTitle(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetWindowTitle(System.IntPtr)
    name: GetWindowTitle
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowTitle_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetWindowTitle(System.IntPtr)
    name: GetWindowTitle
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetWindowTitle_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.SetWindowTitle*
  commentId: Overload:SharpSDL3.Sdl.SetWindowTitle
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetWindowTitle_System_IntPtr_System_String_
  name: SetWindowTitle
  nameWithType: Sdl.SetWindowTitle
  fullName: SharpSDL3.Sdl.SetWindowTitle
- uid: SharpSDL3.Sdl.RaiseWindow(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.RaiseWindow(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RaiseWindow_System_IntPtr_
  name: RaiseWindow(nint)
  nameWithType: Sdl.RaiseWindow(nint)
  fullName: SharpSDL3.Sdl.RaiseWindow(nint)
  nameWithType.vb: Sdl.RaiseWindow(IntPtr)
  fullName.vb: SharpSDL3.Sdl.RaiseWindow(System.IntPtr)
  name.vb: RaiseWindow(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.RaiseWindow(System.IntPtr)
    name: RaiseWindow
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RaiseWindow_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.RaiseWindow(System.IntPtr)
    name: RaiseWindow
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RaiseWindow_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.ShowWindow*
  commentId: Overload:SharpSDL3.Sdl.ShowWindow
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ShowWindow_System_IntPtr_
  name: ShowWindow
  nameWithType: Sdl.ShowWindow
  fullName: SharpSDL3.Sdl.ShowWindow
- uid: SharpSDL3.Sdl.ShowWindowSystemMenu*
  commentId: Overload:SharpSDL3.Sdl.ShowWindowSystemMenu
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ShowWindowSystemMenu_System_IntPtr_System_Int32_System_Int32_
  name: ShowWindowSystemMenu
  nameWithType: Sdl.ShowWindowSystemMenu
  fullName: SharpSDL3.Sdl.ShowWindowSystemMenu
- uid: SharpSDL3.Sdl.SizeOf*
  commentId: Overload:SharpSDL3.Sdl.SizeOf
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SizeOf__1
  name: SizeOf
  nameWithType: Sdl.SizeOf
  fullName: SharpSDL3.Sdl.SizeOf
- uid: SharpSDL3.Sdl.StartTextInputWithProperties(System.IntPtr,System.UInt32)
  commentId: M:SharpSDL3.Sdl.StartTextInputWithProperties(System.IntPtr,System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_StartTextInputWithProperties_System_IntPtr_System_UInt32_
  name: StartTextInputWithProperties(nint, uint)
  nameWithType: Sdl.StartTextInputWithProperties(nint, uint)
  fullName: SharpSDL3.Sdl.StartTextInputWithProperties(nint, uint)
  nameWithType.vb: Sdl.StartTextInputWithProperties(IntPtr, UInteger)
  fullName.vb: SharpSDL3.Sdl.StartTextInputWithProperties(System.IntPtr, UInteger)
  name.vb: StartTextInputWithProperties(IntPtr, UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.StartTextInputWithProperties(System.IntPtr,System.UInt32)
    name: StartTextInputWithProperties
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_StartTextInputWithProperties_System_IntPtr_System_UInt32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.StartTextInputWithProperties(System.IntPtr,System.UInt32)
    name: StartTextInputWithProperties
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_StartTextInputWithProperties_System_IntPtr_System_UInt32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.TextInputActive(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.TextInputActive(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_TextInputActive_System_IntPtr_
  name: TextInputActive(nint)
  nameWithType: Sdl.TextInputActive(nint)
  fullName: SharpSDL3.Sdl.TextInputActive(nint)
  nameWithType.vb: Sdl.TextInputActive(IntPtr)
  fullName.vb: SharpSDL3.Sdl.TextInputActive(System.IntPtr)
  name.vb: TextInputActive(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.TextInputActive(System.IntPtr)
    name: TextInputActive
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_TextInputActive_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.TextInputActive(System.IntPtr)
    name: TextInputActive
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_TextInputActive_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.StartTextInput*
  commentId: Overload:SharpSDL3.Sdl.StartTextInput
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_StartTextInput_System_IntPtr_
  name: StartTextInput
  nameWithType: Sdl.StartTextInput
  fullName: SharpSDL3.Sdl.StartTextInput
- uid: SharpSDL3.Sdl.StartTextInputWithProperties*
  commentId: Overload:SharpSDL3.Sdl.StartTextInputWithProperties
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_StartTextInputWithProperties_System_IntPtr_System_UInt32_
  name: StartTextInputWithProperties
  nameWithType: Sdl.StartTextInputWithProperties
  fullName: SharpSDL3.Sdl.StartTextInputWithProperties
- uid: SharpSDL3.Sdl.StopTextInput*
  commentId: Overload:SharpSDL3.Sdl.StopTextInput
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_StopTextInput_System_IntPtr_
  name: StopTextInput
  nameWithType: Sdl.StopTextInput
  fullName: SharpSDL3.Sdl.StopTextInput
- uid: SharpSDL3.Sdl.StringToGUID*
  commentId: Overload:SharpSDL3.Sdl.StringToGUID
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_StringToGUID_System_String_
  name: StringToGUID
  nameWithType: Sdl.StringToGUID
  fullName: SharpSDL3.Sdl.StringToGUID
- uid: SharpSDL3.Sdl.SurfaceHasAlternateImages*
  commentId: Overload:SharpSDL3.Sdl.SurfaceHasAlternateImages
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SurfaceHasAlternateImages_System_IntPtr_
  name: SurfaceHasAlternateImages
  nameWithType: Sdl.SurfaceHasAlternateImages
  fullName: SharpSDL3.Sdl.SurfaceHasAlternateImages
- uid: SharpSDL3.Sdl.SurfaceHasColorKey*
  commentId: Overload:SharpSDL3.Sdl.SurfaceHasColorKey
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SurfaceHasColorKey_System_IntPtr_
  name: SurfaceHasColorKey
  nameWithType: Sdl.SurfaceHasColorKey
  fullName: SharpSDL3.Sdl.SurfaceHasColorKey
- uid: SharpSDL3.Sdl.SurfaceHasRLE*
  commentId: Overload:SharpSDL3.Sdl.SurfaceHasRLE
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SurfaceHasRLE_System_IntPtr_
  name: SurfaceHasRLE
  nameWithType: Sdl.SurfaceHasRLE
  fullName: SharpSDL3.Sdl.SurfaceHasRLE
- uid: SharpSDL3.Sdl.SyncWindow*
  commentId: Overload:SharpSDL3.Sdl.SyncWindow
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SyncWindow_System_IntPtr_
  name: SyncWindow
  nameWithType: Sdl.SyncWindow
  fullName: SharpSDL3.Sdl.SyncWindow
- uid: SharpSDL3.Sdl.TextInputActive*
  commentId: Overload:SharpSDL3.Sdl.TextInputActive
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_TextInputActive_System_IntPtr_
  name: TextInputActive
  nameWithType: Sdl.TextInputActive
  fullName: SharpSDL3.Sdl.TextInputActive
- uid: SharpSDL3.Sdl.UnloadObject*
  commentId: Overload:SharpSDL3.Sdl.UnloadObject
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UnloadObject_System_IntPtr_
  name: UnloadObject
  nameWithType: Sdl.UnloadObject
  fullName: SharpSDL3.Sdl.UnloadObject
- uid: SharpSDL3.Sdl.UnlockProperties*
  commentId: Overload:SharpSDL3.Sdl.UnlockProperties
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UnlockProperties_System_UInt32_
  name: UnlockProperties
  nameWithType: Sdl.UnlockProperties
  fullName: SharpSDL3.Sdl.UnlockProperties
- uid: SharpSDL3.Sdl.UnlockSurface*
  commentId: Overload:SharpSDL3.Sdl.UnlockSurface
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UnlockSurface_System_IntPtr_
  name: UnlockSurface
  nameWithType: Sdl.UnlockSurface
  fullName: SharpSDL3.Sdl.UnlockSurface
- uid: SharpSDL3.Sdl.UpdateWindowSurface*
  commentId: Overload:SharpSDL3.Sdl.UpdateWindowSurface
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UpdateWindowSurface_System_IntPtr_
  name: UpdateWindowSurface
  nameWithType: Sdl.UpdateWindowSurface
  fullName: SharpSDL3.Sdl.UpdateWindowSurface
- uid: SharpSDL3.Sdl.UpdateWindowSurfaceRects*
  commentId: Overload:SharpSDL3.Sdl.UpdateWindowSurfaceRects
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UpdateWindowSurfaceRects_System_IntPtr_System_Span_SharpSDL3_Structs_Rect__System_Int32_
  name: UpdateWindowSurfaceRects
  nameWithType: Sdl.UpdateWindowSurfaceRects
  fullName: SharpSDL3.Sdl.UpdateWindowSurfaceRects
- uid: SharpSDL3.Structs.Rect[]
  isExternal: true
  href: SharpSDL3.Structs.Rect.html
  name: Rect[]
  nameWithType: Rect[]
  fullName: SharpSDL3.Structs.Rect[]
  nameWithType.vb: Rect()
  fullName.vb: SharpSDL3.Structs.Rect()
  name.vb: Rect()
  spec.csharp:
  - uid: SharpSDL3.Structs.Rect
    name: Rect
    href: SharpSDL3.Structs.Rect.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SharpSDL3.Structs.Rect
    name: Rect
    href: SharpSDL3.Structs.Rect.html
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.DetachThread(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.DetachThread(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DetachThread_System_IntPtr_
  name: DetachThread(nint)
  nameWithType: Sdl.DetachThread(nint)
  fullName: SharpSDL3.Sdl.DetachThread(nint)
  nameWithType.vb: Sdl.DetachThread(IntPtr)
  fullName.vb: SharpSDL3.Sdl.DetachThread(System.IntPtr)
  name.vb: DetachThread(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.DetachThread(System.IntPtr)
    name: DetachThread
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DetachThread_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.DetachThread(System.IntPtr)
    name: DetachThread
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DetachThread_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.WaitThread*
  commentId: Overload:SharpSDL3.Sdl.WaitThread
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WaitThread_System_IntPtr_System_IntPtr_
  name: WaitThread
  nameWithType: Sdl.WaitThread
  fullName: SharpSDL3.Sdl.WaitThread
- uid: SharpSDL3.Sdl.WasInit*
  commentId: Overload:SharpSDL3.Sdl.WasInit
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WasInit_SharpSDL3_Enums_InitFlags_
  name: WasInit
  nameWithType: Sdl.WasInit
  fullName: SharpSDL3.Sdl.WasInit
- uid: SharpSDL3.Sdl.WindowHasSurface*
  commentId: Overload:SharpSDL3.Sdl.WindowHasSurface
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WindowHasSurface_System_IntPtr_
  name: WindowHasSurface
  nameWithType: Sdl.WindowHasSurface
  fullName: SharpSDL3.Sdl.WindowHasSurface
- uid: SharpSDL3.Sdl.WriteSurfacePixel*
  commentId: Overload:SharpSDL3.Sdl.WriteSurfacePixel
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WriteSurfacePixel_System_IntPtr_System_Int32_System_Int32_System_Byte_System_Byte_System_Byte_System_Byte_
  name: WriteSurfacePixel
  nameWithType: Sdl.WriteSurfacePixel
  fullName: SharpSDL3.Sdl.WriteSurfacePixel
- uid: SharpSDL3.Sdl.WriteSurfacePixelFloat*
  commentId: Overload:SharpSDL3.Sdl.WriteSurfacePixelFloat
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WriteSurfacePixelFloat_System_IntPtr_System_Int32_System_Int32_System_Single_System_Single_System_Single_System_Single_
  name: WriteSurfacePixelFloat
  nameWithType: Sdl.WriteSurfacePixelFloat
  fullName: SharpSDL3.Sdl.WriteSurfacePixelFloat
- uid: SharpSDL3.Sdl.Create*
  commentId: Overload:SharpSDL3.Sdl.Create
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_Create_System_UInt32_
  name: Create
  nameWithType: Sdl.Create
  fullName: SharpSDL3.Sdl.Create
- uid: SharpSDL3.Sdl.Destroy*
  commentId: Overload:SharpSDL3.Sdl.Destroy
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_Destroy_System_IntPtr_
  name: Destroy
  nameWithType: Sdl.Destroy
  fullName: SharpSDL3.Sdl.Destroy
- uid: SharpSDL3.Sdl.GetValue*
  commentId: Overload:SharpSDL3.Sdl.GetValue
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetValue_System_IntPtr_
  name: GetValue
  nameWithType: Sdl.GetValue
  fullName: SharpSDL3.Sdl.GetValue
- uid: SharpSDL3.Sdl.Signal*
  commentId: Overload:SharpSDL3.Sdl.Signal
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_Signal_System_IntPtr_
  name: Signal
  nameWithType: Sdl.Signal
  fullName: SharpSDL3.Sdl.Signal
- uid: SharpSDL3.Sdl.TryWait*
  commentId: Overload:SharpSDL3.Sdl.TryWait
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_TryWait_System_IntPtr_
  name: TryWait
  nameWithType: Sdl.TryWait
  fullName: SharpSDL3.Sdl.TryWait
- uid: SharpSDL3.Sdl.Wait*
  commentId: Overload:SharpSDL3.Sdl.Wait
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_Wait_System_IntPtr_
  name: Wait
  nameWithType: Sdl.Wait
  fullName: SharpSDL3.Sdl.Wait
- uid: SharpSDL3.Sdl.WaitTimeout*
  commentId: Overload:SharpSDL3.Sdl.WaitTimeout
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WaitTimeout_System_IntPtr_System_Int32_
  name: WaitTimeout
  nameWithType: Sdl.WaitTimeout
  fullName: SharpSDL3.Sdl.WaitTimeout
- uid: SharpSDL3.Sdl.CloseSensor*
  commentId: Overload:SharpSDL3.Sdl.CloseSensor
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CloseSensor_System_IntPtr_
  name: CloseSensor
  nameWithType: Sdl.CloseSensor
  fullName: SharpSDL3.Sdl.CloseSensor
- uid: SharpSDL3.Sdl.GetSensorData*
  commentId: Overload:SharpSDL3.Sdl.GetSensorData
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetSensorData_System_IntPtr_System_IntPtr_System_Int32_
  name: GetSensorData
  nameWithType: Sdl.GetSensorData
  fullName: SharpSDL3.Sdl.GetSensorData
- uid: SharpSDL3.Sdl.GetSensorFromID*
  commentId: Overload:SharpSDL3.Sdl.GetSensorFromID
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetSensorFromID_System_UInt32_
  name: GetSensorFromID
  nameWithType: Sdl.GetSensorFromID
  fullName: SharpSDL3.Sdl.GetSensorFromID
- uid: SharpSDL3.Sdl.GetSensorID*
  commentId: Overload:SharpSDL3.Sdl.GetSensorID
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetSensorID_System_IntPtr_
  name: GetSensorID
  nameWithType: Sdl.GetSensorID
  fullName: SharpSDL3.Sdl.GetSensorID
- uid: SharpSDL3.Sdl.GetSensorName*
  commentId: Overload:SharpSDL3.Sdl.GetSensorName
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetSensorName_System_IntPtr_
  name: GetSensorName
  nameWithType: Sdl.GetSensorName
  fullName: SharpSDL3.Sdl.GetSensorName
- uid: SharpSDL3.Sdl.GetSensorNameForID*
  commentId: Overload:SharpSDL3.Sdl.GetSensorNameForID
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetSensorNameForID_System_UInt32_
  name: GetSensorNameForID
  nameWithType: Sdl.GetSensorNameForID
  fullName: SharpSDL3.Sdl.GetSensorNameForID
- uid: SharpSDL3.Sdl.GetSensorNonPortableType*
  commentId: Overload:SharpSDL3.Sdl.GetSensorNonPortableType
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetSensorNonPortableType_System_IntPtr_
  name: GetSensorNonPortableType
  nameWithType: Sdl.GetSensorNonPortableType
  fullName: SharpSDL3.Sdl.GetSensorNonPortableType
- uid: SharpSDL3.Sdl.GetSensorNonPortableTypeForID*
  commentId: Overload:SharpSDL3.Sdl.GetSensorNonPortableTypeForID
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetSensorNonPortableTypeForID_System_UInt32_
  name: GetSensorNonPortableTypeForID
  nameWithType: Sdl.GetSensorNonPortableTypeForID
  fullName: SharpSDL3.Sdl.GetSensorNonPortableTypeForID
- uid: SharpSDL3.Sdl.GetSensorProperties*
  commentId: Overload:SharpSDL3.Sdl.GetSensorProperties
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetSensorProperties_System_IntPtr_
  name: GetSensorProperties
  nameWithType: Sdl.GetSensorProperties
  fullName: SharpSDL3.Sdl.GetSensorProperties
- uid: SharpSDL3.Sdl.GetSensors*
  commentId: Overload:SharpSDL3.Sdl.GetSensors
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetSensors_System_Int32__
  name: GetSensors
  nameWithType: Sdl.GetSensors
  fullName: SharpSDL3.Sdl.GetSensors
- uid: SharpSDL3.Sdl.GetSensorType*
  commentId: Overload:SharpSDL3.Sdl.GetSensorType
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetSensorType_System_IntPtr_
  name: GetSensorType
  nameWithType: Sdl.GetSensorType
  fullName: SharpSDL3.Sdl.GetSensorType
- uid: SharpSDL3.Sdl.GetSensorTypeForID*
  commentId: Overload:SharpSDL3.Sdl.GetSensorTypeForID
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetSensorTypeForID_System_UInt32_
  name: GetSensorTypeForID
  nameWithType: Sdl.GetSensorTypeForID
  fullName: SharpSDL3.Sdl.GetSensorTypeForID
- uid: SharpSDL3.Sdl.OpenSensor*
  commentId: Overload:SharpSDL3.Sdl.OpenSensor
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_OpenSensor_System_UInt32_
  name: OpenSensor
  nameWithType: Sdl.OpenSensor
  fullName: SharpSDL3.Sdl.OpenSensor
- uid: SharpSDL3.Sdl.UpdateSensors*
  commentId: Overload:SharpSDL3.Sdl.UpdateSensors
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UpdateSensors
  name: UpdateSensors
  nameWithType: Sdl.UpdateSensors
  fullName: SharpSDL3.Sdl.UpdateSensors
- uid: SharpSDL3.Sdl.OpenFileStorage(System.String)
  commentId: M:SharpSDL3.Sdl.OpenFileStorage(System.String)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_OpenFileStorage_System_String_
  name: OpenFileStorage(string)
  nameWithType: Sdl.OpenFileStorage(string)
  fullName: SharpSDL3.Sdl.OpenFileStorage(string)
  nameWithType.vb: Sdl.OpenFileStorage(String)
  fullName.vb: SharpSDL3.Sdl.OpenFileStorage(String)
  name.vb: OpenFileStorage(String)
  spec.csharp:
  - uid: SharpSDL3.Sdl.OpenFileStorage(System.String)
    name: OpenFileStorage
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_OpenFileStorage_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.OpenFileStorage(System.String)
    name: OpenFileStorage
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_OpenFileStorage_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SharpSDL3.Sdl.OpenStorage(SharpSDL3.Structs.StorageInterface@,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.OpenStorage(SharpSDL3.Structs.StorageInterface@,System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_OpenStorage_SharpSDL3_Structs_StorageInterface__System_IntPtr_
  name: OpenStorage(ref StorageInterface, nint)
  nameWithType: Sdl.OpenStorage(ref StorageInterface, nint)
  fullName: SharpSDL3.Sdl.OpenStorage(ref SharpSDL3.Structs.StorageInterface, nint)
  nameWithType.vb: Sdl.OpenStorage(StorageInterface, IntPtr)
  fullName.vb: SharpSDL3.Sdl.OpenStorage(SharpSDL3.Structs.StorageInterface, System.IntPtr)
  name.vb: OpenStorage(StorageInterface, IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.OpenStorage(SharpSDL3.Structs.StorageInterface@,System.IntPtr)
    name: OpenStorage
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_OpenStorage_SharpSDL3_Structs_StorageInterface__System_IntPtr_
  - name: (
  - name: ref
  - name: " "
  - uid: SharpSDL3.Structs.StorageInterface
    name: StorageInterface
    href: SharpSDL3.Structs.StorageInterface.html
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.OpenStorage(SharpSDL3.Structs.StorageInterface@,System.IntPtr)
    name: OpenStorage
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_OpenStorage_SharpSDL3_Structs_StorageInterface__System_IntPtr_
  - name: (
  - uid: SharpSDL3.Structs.StorageInterface
    name: StorageInterface
    href: SharpSDL3.Structs.StorageInterface.html
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.OpenTitleStorage(System.String,System.UInt32)
  commentId: M:SharpSDL3.Sdl.OpenTitleStorage(System.String,System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_OpenTitleStorage_System_String_System_UInt32_
  name: OpenTitleStorage(string, uint)
  nameWithType: Sdl.OpenTitleStorage(string, uint)
  fullName: SharpSDL3.Sdl.OpenTitleStorage(string, uint)
  nameWithType.vb: Sdl.OpenTitleStorage(String, UInteger)
  fullName.vb: SharpSDL3.Sdl.OpenTitleStorage(String, UInteger)
  name.vb: OpenTitleStorage(String, UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.OpenTitleStorage(System.String,System.UInt32)
    name: OpenTitleStorage
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_OpenTitleStorage_System_String_System_UInt32_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.OpenTitleStorage(System.String,System.UInt32)
    name: OpenTitleStorage
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_OpenTitleStorage_System_String_System_UInt32_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.OpenUserStorage(System.String,System.String,System.UInt32)
  commentId: M:SharpSDL3.Sdl.OpenUserStorage(System.String,System.String,System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_OpenUserStorage_System_String_System_String_System_UInt32_
  name: OpenUserStorage(string, string, uint)
  nameWithType: Sdl.OpenUserStorage(string, string, uint)
  fullName: SharpSDL3.Sdl.OpenUserStorage(string, string, uint)
  nameWithType.vb: Sdl.OpenUserStorage(String, String, UInteger)
  fullName.vb: SharpSDL3.Sdl.OpenUserStorage(String, String, UInteger)
  name.vb: OpenUserStorage(String, String, UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.OpenUserStorage(System.String,System.String,System.UInt32)
    name: OpenUserStorage
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_OpenUserStorage_System_String_System_String_System_UInt32_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.OpenUserStorage(System.String,System.String,System.UInt32)
    name: OpenUserStorage
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_OpenUserStorage_System_String_System_String_System_UInt32_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.CloseStorage*
  commentId: Overload:SharpSDL3.Sdl.CloseStorage
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CloseStorage_System_IntPtr_
  name: CloseStorage
  nameWithType: Sdl.CloseStorage
  fullName: SharpSDL3.Sdl.CloseStorage
- uid: SharpSDL3.Sdl.CopyStorageFile*
  commentId: Overload:SharpSDL3.Sdl.CopyStorageFile
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CopyStorageFile_System_IntPtr_System_String_System_String_
  name: CopyStorageFile
  nameWithType: Sdl.CopyStorageFile
  fullName: SharpSDL3.Sdl.CopyStorageFile
- uid: SharpSDL3.Sdl.CreateStorageDirectory*
  commentId: Overload:SharpSDL3.Sdl.CreateStorageDirectory
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateStorageDirectory_System_IntPtr_System_String_
  name: CreateStorageDirectory
  nameWithType: Sdl.CreateStorageDirectory
  fullName: SharpSDL3.Sdl.CreateStorageDirectory
- uid: SharpSDL3.Sdl.EnumerateStorageDirectory*
  commentId: Overload:SharpSDL3.Sdl.EnumerateStorageDirectory
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_EnumerateStorageDirectory_System_IntPtr_System_String_SharpSDL3_Delegates_SdlEnumerateDirectoryCallback_System_IntPtr_
  name: EnumerateStorageDirectory
  nameWithType: Sdl.EnumerateStorageDirectory
  fullName: SharpSDL3.Sdl.EnumerateStorageDirectory
- uid: SharpSDL3.Sdl.ReadStorageFile(System.IntPtr,System.String,System.IntPtr,System.UInt64)
  commentId: M:SharpSDL3.Sdl.ReadStorageFile(System.IntPtr,System.String,System.IntPtr,System.UInt64)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReadStorageFile_System_IntPtr_System_String_System_IntPtr_System_UInt64_
  name: ReadStorageFile(nint, string, nint, ulong)
  nameWithType: Sdl.ReadStorageFile(nint, string, nint, ulong)
  fullName: SharpSDL3.Sdl.ReadStorageFile(nint, string, nint, ulong)
  nameWithType.vb: Sdl.ReadStorageFile(IntPtr, String, IntPtr, ULong)
  fullName.vb: SharpSDL3.Sdl.ReadStorageFile(System.IntPtr, String, System.IntPtr, ULong)
  name.vb: ReadStorageFile(IntPtr, String, IntPtr, ULong)
  spec.csharp:
  - uid: SharpSDL3.Sdl.ReadStorageFile(System.IntPtr,System.String,System.IntPtr,System.UInt64)
    name: ReadStorageFile
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReadStorageFile_System_IntPtr_System_String_System_IntPtr_System_UInt64_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.ReadStorageFile(System.IntPtr,System.String,System.IntPtr,System.UInt64)
    name: ReadStorageFile
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReadStorageFile_System_IntPtr_System_String_System_IntPtr_System_UInt64_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: SharpSDL3.Sdl.GetStorageFileSize*
  commentId: Overload:SharpSDL3.Sdl.GetStorageFileSize
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetStorageFileSize_System_IntPtr_System_String_
  name: GetStorageFileSize
  nameWithType: Sdl.GetStorageFileSize
  fullName: SharpSDL3.Sdl.GetStorageFileSize
- uid: SharpSDL3.Sdl.GetStoragePathInfo*
  commentId: Overload:SharpSDL3.Sdl.GetStoragePathInfo
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetStoragePathInfo_System_IntPtr_System_String_
  name: GetStoragePathInfo
  nameWithType: Sdl.GetStoragePathInfo
  fullName: SharpSDL3.Sdl.GetStoragePathInfo
- uid: SharpSDL3.Sdl.WriteStorageFile(System.IntPtr,System.String,System.IntPtr,System.UInt64)
  commentId: M:SharpSDL3.Sdl.WriteStorageFile(System.IntPtr,System.String,System.IntPtr,System.UInt64)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WriteStorageFile_System_IntPtr_System_String_System_IntPtr_System_UInt64_
  name: WriteStorageFile(nint, string, nint, ulong)
  nameWithType: Sdl.WriteStorageFile(nint, string, nint, ulong)
  fullName: SharpSDL3.Sdl.WriteStorageFile(nint, string, nint, ulong)
  nameWithType.vb: Sdl.WriteStorageFile(IntPtr, String, IntPtr, ULong)
  fullName.vb: SharpSDL3.Sdl.WriteStorageFile(System.IntPtr, String, System.IntPtr, ULong)
  name.vb: WriteStorageFile(IntPtr, String, IntPtr, ULong)
  spec.csharp:
  - uid: SharpSDL3.Sdl.WriteStorageFile(System.IntPtr,System.String,System.IntPtr,System.UInt64)
    name: WriteStorageFile
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WriteStorageFile_System_IntPtr_System_String_System_IntPtr_System_UInt64_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.WriteStorageFile(System.IntPtr,System.String,System.IntPtr,System.UInt64)
    name: WriteStorageFile
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WriteStorageFile_System_IntPtr_System_String_System_IntPtr_System_UInt64_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: SharpSDL3.Sdl.GetStorageSpaceRemaining*
  commentId: Overload:SharpSDL3.Sdl.GetStorageSpaceRemaining
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetStorageSpaceRemaining_System_IntPtr_
  name: GetStorageSpaceRemaining
  nameWithType: Sdl.GetStorageSpaceRemaining
  fullName: SharpSDL3.Sdl.GetStorageSpaceRemaining
- uid: SharpSDL3.Sdl.GlobStorageDirectory*
  commentId: Overload:SharpSDL3.Sdl.GlobStorageDirectory
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GlobStorageDirectory_System_IntPtr_System_String_System_String_SharpSDL3_Enums_GlobFlags_System_Int32__
  name: GlobStorageDirectory
  nameWithType: Sdl.GlobStorageDirectory
  fullName: SharpSDL3.Sdl.GlobStorageDirectory
- uid: SharpSDL3.Enums.GlobFlags
  commentId: T:SharpSDL3.Enums.GlobFlags
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.GlobFlags.html
  name: GlobFlags
  nameWithType: GlobFlags
  fullName: SharpSDL3.Enums.GlobFlags
- uid: SharpSDL3.Sdl.IsStorageReady*
  commentId: Overload:SharpSDL3.Sdl.IsStorageReady
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_IsStorageReady_System_IntPtr_
  name: IsStorageReady
  nameWithType: Sdl.IsStorageReady
  fullName: SharpSDL3.Sdl.IsStorageReady
- uid: SharpSDL3.Sdl.CloseStorage(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.CloseStorage(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CloseStorage_System_IntPtr_
  name: CloseStorage(nint)
  nameWithType: Sdl.CloseStorage(nint)
  fullName: SharpSDL3.Sdl.CloseStorage(nint)
  nameWithType.vb: Sdl.CloseStorage(IntPtr)
  fullName.vb: SharpSDL3.Sdl.CloseStorage(System.IntPtr)
  name.vb: CloseStorage(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.CloseStorage(System.IntPtr)
    name: CloseStorage
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CloseStorage_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.CloseStorage(System.IntPtr)
    name: CloseStorage
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CloseStorage_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GetStorageFileSize(System.IntPtr,System.String)
  commentId: M:SharpSDL3.Sdl.GetStorageFileSize(System.IntPtr,System.String)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetStorageFileSize_System_IntPtr_System_String_
  name: GetStorageFileSize(nint, string)
  nameWithType: Sdl.GetStorageFileSize(nint, string)
  fullName: SharpSDL3.Sdl.GetStorageFileSize(nint, string)
  nameWithType.vb: Sdl.GetStorageFileSize(IntPtr, String)
  fullName.vb: SharpSDL3.Sdl.GetStorageFileSize(System.IntPtr, String)
  name.vb: GetStorageFileSize(IntPtr, String)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetStorageFileSize(System.IntPtr,System.String)
    name: GetStorageFileSize
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetStorageFileSize_System_IntPtr_System_String_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetStorageFileSize(System.IntPtr,System.String)
    name: GetStorageFileSize
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetStorageFileSize_System_IntPtr_System_String_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SharpSDL3.Sdl.GetStorageSpaceRemaining(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetStorageSpaceRemaining(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetStorageSpaceRemaining_System_IntPtr_
  name: GetStorageSpaceRemaining(nint)
  nameWithType: Sdl.GetStorageSpaceRemaining(nint)
  fullName: SharpSDL3.Sdl.GetStorageSpaceRemaining(nint)
  nameWithType.vb: Sdl.GetStorageSpaceRemaining(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetStorageSpaceRemaining(System.IntPtr)
  name.vb: GetStorageSpaceRemaining(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetStorageSpaceRemaining(System.IntPtr)
    name: GetStorageSpaceRemaining
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetStorageSpaceRemaining_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetStorageSpaceRemaining(System.IntPtr)
    name: GetStorageSpaceRemaining
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetStorageSpaceRemaining_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.OpenFileStorage*
  commentId: Overload:SharpSDL3.Sdl.OpenFileStorage
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_OpenFileStorage_System_String_
  name: OpenFileStorage
  nameWithType: Sdl.OpenFileStorage
  fullName: SharpSDL3.Sdl.OpenFileStorage
- uid: SharpSDL3.Sdl.OpenStorage*
  commentId: Overload:SharpSDL3.Sdl.OpenStorage
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_OpenStorage_SharpSDL3_Structs_StorageInterface__System_IntPtr_
  name: OpenStorage
  nameWithType: Sdl.OpenStorage
  fullName: SharpSDL3.Sdl.OpenStorage
- uid: SharpSDL3.Structs.StorageInterface
  commentId: T:SharpSDL3.Structs.StorageInterface
  parent: SharpSDL3.Structs
  href: SharpSDL3.Structs.StorageInterface.html
  name: StorageInterface
  nameWithType: StorageInterface
  fullName: SharpSDL3.Structs.StorageInterface
- uid: SharpSDL3.Sdl.OpenTitleStorage*
  commentId: Overload:SharpSDL3.Sdl.OpenTitleStorage
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_OpenTitleStorage_System_String_System_UInt32_
  name: OpenTitleStorage
  nameWithType: Sdl.OpenTitleStorage
  fullName: SharpSDL3.Sdl.OpenTitleStorage
- uid: SharpSDL3.Sdl.OpenUserStorage*
  commentId: Overload:SharpSDL3.Sdl.OpenUserStorage
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_OpenUserStorage_System_String_System_String_System_UInt32_
  name: OpenUserStorage
  nameWithType: Sdl.OpenUserStorage
  fullName: SharpSDL3.Sdl.OpenUserStorage
- uid: SharpSDL3.Sdl.ReadStorageFile*
  commentId: Overload:SharpSDL3.Sdl.ReadStorageFile
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ReadStorageFile_System_IntPtr_System_String_System_IntPtr_System_UInt64_
  name: ReadStorageFile
  nameWithType: Sdl.ReadStorageFile
  fullName: SharpSDL3.Sdl.ReadStorageFile
- uid: SharpSDL3.Sdl.RemoveStoragePath*
  commentId: Overload:SharpSDL3.Sdl.RemoveStoragePath
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RemoveStoragePath_System_IntPtr_System_String_
  name: RemoveStoragePath
  nameWithType: Sdl.RemoveStoragePath
  fullName: SharpSDL3.Sdl.RemoveStoragePath
- uid: SharpSDL3.Sdl.RenameStoragePath*
  commentId: Overload:SharpSDL3.Sdl.RenameStoragePath
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RenameStoragePath_System_IntPtr_System_String_System_String_
  name: RenameStoragePath
  nameWithType: Sdl.RenameStoragePath
  fullName: SharpSDL3.Sdl.RenameStoragePath
- uid: SharpSDL3.Sdl.WriteStorageFile*
  commentId: Overload:SharpSDL3.Sdl.WriteStorageFile
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_WriteStorageFile_System_IntPtr_System_String_System_IntPtr_System_UInt64_
  name: WriteStorageFile
  nameWithType: Sdl.WriteStorageFile
  fullName: SharpSDL3.Sdl.WriteStorageFile
- uid: SharpSDL3.Sdl.DateTimeToTime*
  commentId: Overload:SharpSDL3.Sdl.DateTimeToTime
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DateTimeToTime_SharpSDL3_Structs_DateTime__System_IntPtr_
  name: DateTimeToTime
  nameWithType: Sdl.DateTimeToTime
  fullName: SharpSDL3.Sdl.DateTimeToTime
- uid: SharpSDL3.Structs.DateTime
  commentId: T:SharpSDL3.Structs.DateTime
  parent: SharpSDL3.Structs
  href: SharpSDL3.Structs.DateTime.html
  name: DateTime
  nameWithType: DateTime
  fullName: SharpSDL3.Structs.DateTime
- uid: SharpSDL3.Sdl.GetCurrentTime*
  commentId: Overload:SharpSDL3.Sdl.GetCurrentTime
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetCurrentTime_System_IntPtr_
  name: GetCurrentTime
  nameWithType: Sdl.GetCurrentTime
  fullName: SharpSDL3.Sdl.GetCurrentTime
- uid: SharpSDL3.Sdl.GetDateTimeLocalePreferences*
  commentId: Overload:SharpSDL3.Sdl.GetDateTimeLocalePreferences
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetDateTimeLocalePreferences_SharpSDL3_Enums_DateFormat__SharpSDL3_Enums_TimeFormat__
  name: GetDateTimeLocalePreferences
  nameWithType: Sdl.GetDateTimeLocalePreferences
  fullName: SharpSDL3.Sdl.GetDateTimeLocalePreferences
- uid: SharpSDL3.Enums.DateFormat
  commentId: T:SharpSDL3.Enums.DateFormat
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.DateFormat.html
  name: DateFormat
  nameWithType: DateFormat
  fullName: SharpSDL3.Enums.DateFormat
- uid: SharpSDL3.Enums.TimeFormat
  commentId: T:SharpSDL3.Enums.TimeFormat
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.TimeFormat.html
  name: TimeFormat
  nameWithType: TimeFormat
  fullName: SharpSDL3.Enums.TimeFormat
- uid: SharpSDL3.Sdl.GetDayOfWeek*
  commentId: Overload:SharpSDL3.Sdl.GetDayOfWeek
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetDayOfWeek_System_Int32_System_Int32_System_Int32_
  name: GetDayOfWeek
  nameWithType: Sdl.GetDayOfWeek
  fullName: SharpSDL3.Sdl.GetDayOfWeek
- uid: SharpSDL3.Sdl.GetDayOfYear*
  commentId: Overload:SharpSDL3.Sdl.GetDayOfYear
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetDayOfYear_System_Int32_System_Int32_System_Int32_
  name: GetDayOfYear
  nameWithType: Sdl.GetDayOfYear
  fullName: SharpSDL3.Sdl.GetDayOfYear
- uid: SharpSDL3.Sdl.GetDaysInMonth*
  commentId: Overload:SharpSDL3.Sdl.GetDaysInMonth
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetDaysInMonth_System_Int32_System_Int32_
  name: GetDaysInMonth
  nameWithType: Sdl.GetDaysInMonth
  fullName: SharpSDL3.Sdl.GetDaysInMonth
- uid: SharpSDL3.Sdl.GetMonth*
  commentId: Overload:SharpSDL3.Sdl.GetMonth
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetMonth_System_Int32_System_Boolean_
  name: GetMonth
  nameWithType: Sdl.GetMonth
  fullName: SharpSDL3.Sdl.GetMonth
- uid: SharpSDL3.Sdl.GetSandbox*
  commentId: Overload:SharpSDL3.Sdl.GetSandbox
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetSandbox
  name: GetSandbox
  nameWithType: Sdl.GetSandbox
  fullName: SharpSDL3.Sdl.GetSandbox
- uid: SharpSDL3.Enums.Sandbox
  commentId: T:SharpSDL3.Enums.Sandbox
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.Sandbox.html
  name: Sandbox
  nameWithType: Sandbox
  fullName: SharpSDL3.Enums.Sandbox
- uid: SharpSDL3.Sdl.IsTablet*
  commentId: Overload:SharpSDL3.Sdl.IsTablet
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_IsTablet
  name: IsTablet
  nameWithType: Sdl.IsTablet
  fullName: SharpSDL3.Sdl.IsTablet
- uid: SharpSDL3.Sdl.IsTV*
  commentId: Overload:SharpSDL3.Sdl.IsTV
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_IsTV
  name: IsTV
  nameWithType: Sdl.IsTV
  fullName: SharpSDL3.Sdl.IsTV
- uid: SharpSDL3.Sdl.OnApplicationDidEnterBackground*
  commentId: Overload:SharpSDL3.Sdl.OnApplicationDidEnterBackground
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_OnApplicationDidEnterBackground
  name: OnApplicationDidEnterBackground
  nameWithType: Sdl.OnApplicationDidEnterBackground
  fullName: SharpSDL3.Sdl.OnApplicationDidEnterBackground
- uid: SharpSDL3.Sdl.OnApplicationDidEnterForeground*
  commentId: Overload:SharpSDL3.Sdl.OnApplicationDidEnterForeground
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_OnApplicationDidEnterForeground
  name: OnApplicationDidEnterForeground
  nameWithType: Sdl.OnApplicationDidEnterForeground
  fullName: SharpSDL3.Sdl.OnApplicationDidEnterForeground
- uid: SharpSDL3.Sdl.OnApplicationDidReceiveMemoryWarning*
  commentId: Overload:SharpSDL3.Sdl.OnApplicationDidReceiveMemoryWarning
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_OnApplicationDidReceiveMemoryWarning
  name: OnApplicationDidReceiveMemoryWarning
  nameWithType: Sdl.OnApplicationDidReceiveMemoryWarning
  fullName: SharpSDL3.Sdl.OnApplicationDidReceiveMemoryWarning
- uid: SharpSDL3.Sdl.OnApplicationWillEnterBackground*
  commentId: Overload:SharpSDL3.Sdl.OnApplicationWillEnterBackground
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_OnApplicationWillEnterBackground
  name: OnApplicationWillEnterBackground
  nameWithType: Sdl.OnApplicationWillEnterBackground
  fullName: SharpSDL3.Sdl.OnApplicationWillEnterBackground
- uid: SharpSDL3.Sdl.OnApplicationWillEnterForeground*
  commentId: Overload:SharpSDL3.Sdl.OnApplicationWillEnterForeground
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_OnApplicationWillEnterForeground
  name: OnApplicationWillEnterForeground
  nameWithType: Sdl.OnApplicationWillEnterForeground
  fullName: SharpSDL3.Sdl.OnApplicationWillEnterForeground
- uid: SharpSDL3.Sdl.OnApplicationWillTerminate*
  commentId: Overload:SharpSDL3.Sdl.OnApplicationWillTerminate
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_OnApplicationWillTerminate
  name: OnApplicationWillTerminate
  nameWithType: Sdl.OnApplicationWillTerminate
  fullName: SharpSDL3.Sdl.OnApplicationWillTerminate
- uid: SharpSDL3.Sdl.TimeFromWindows*
  commentId: Overload:SharpSDL3.Sdl.TimeFromWindows
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_TimeFromWindows_System_UInt32_System_UInt32_
  name: TimeFromWindows
  nameWithType: Sdl.TimeFromWindows
  fullName: SharpSDL3.Sdl.TimeFromWindows
- uid: SharpSDL3.Sdl.TimeToDateTime*
  commentId: Overload:SharpSDL3.Sdl.TimeToDateTime
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_TimeToDateTime_System_Int64_SharpSDL3_Structs_DateTime__System_Boolean_
  name: TimeToDateTime
  nameWithType: Sdl.TimeToDateTime
  fullName: SharpSDL3.Sdl.TimeToDateTime
- uid: SharpSDL3.Sdl.TimeToWindows*
  commentId: Overload:SharpSDL3.Sdl.TimeToWindows
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_TimeToWindows_System_Int64_System_UInt32__System_UInt32__
  name: TimeToWindows
  nameWithType: Sdl.TimeToWindows
  fullName: SharpSDL3.Sdl.TimeToWindows
- uid: SharpSDL3.Sdl.CreateTextureWithProperties(System.IntPtr,System.UInt32)
  commentId: M:SharpSDL3.Sdl.CreateTextureWithProperties(System.IntPtr,System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateTextureWithProperties_System_IntPtr_System_UInt32_
  name: CreateTextureWithProperties(nint, uint)
  nameWithType: Sdl.CreateTextureWithProperties(nint, uint)
  fullName: SharpSDL3.Sdl.CreateTextureWithProperties(nint, uint)
  nameWithType.vb: Sdl.CreateTextureWithProperties(IntPtr, UInteger)
  fullName.vb: SharpSDL3.Sdl.CreateTextureWithProperties(System.IntPtr, UInteger)
  name.vb: CreateTextureWithProperties(IntPtr, UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.CreateTextureWithProperties(System.IntPtr,System.UInt32)
    name: CreateTextureWithProperties
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateTextureWithProperties_System_IntPtr_System_UInt32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.CreateTextureWithProperties(System.IntPtr,System.UInt32)
    name: CreateTextureWithProperties
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateTextureWithProperties_System_IntPtr_System_UInt32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.DestroyTexture(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.DestroyTexture(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyTexture_System_IntPtr_
  name: DestroyTexture(nint)
  nameWithType: Sdl.DestroyTexture(nint)
  fullName: SharpSDL3.Sdl.DestroyTexture(nint)
  nameWithType.vb: Sdl.DestroyTexture(IntPtr)
  fullName.vb: SharpSDL3.Sdl.DestroyTexture(System.IntPtr)
  name.vb: DestroyTexture(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.DestroyTexture(System.IntPtr)
    name: DestroyTexture
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyTexture_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.DestroyTexture(System.IntPtr)
    name: DestroyTexture
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyTexture_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GetTextureSize(System.IntPtr,System.Single@,System.Single@)
  commentId: M:SharpSDL3.Sdl.GetTextureSize(System.IntPtr,System.Single@,System.Single@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTextureSize_System_IntPtr_System_Single__System_Single__
  name: GetTextureSize(nint, out float, out float)
  nameWithType: Sdl.GetTextureSize(nint, out float, out float)
  fullName: SharpSDL3.Sdl.GetTextureSize(nint, out float, out float)
  nameWithType.vb: Sdl.GetTextureSize(IntPtr, Single, Single)
  fullName.vb: SharpSDL3.Sdl.GetTextureSize(System.IntPtr, Single, Single)
  name.vb: GetTextureSize(IntPtr, Single, Single)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetTextureSize(System.IntPtr,System.Single@,System.Single@)
    name: GetTextureSize
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTextureSize_System_IntPtr_System_Single__System_Single__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetTextureSize(System.IntPtr,System.Single@,System.Single@)
    name: GetTextureSize
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTextureSize_System_IntPtr_System_Single__System_Single__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: SharpSDL3.Sdl.UpdateTexture(System.IntPtr,SharpSDL3.Structs.Rect@,System.IntPtr,System.Int32)
  commentId: M:SharpSDL3.Sdl.UpdateTexture(System.IntPtr,SharpSDL3.Structs.Rect@,System.IntPtr,System.Int32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UpdateTexture_System_IntPtr_SharpSDL3_Structs_Rect__System_IntPtr_System_Int32_
  name: UpdateTexture(nint, ref Rect, nint, int)
  nameWithType: Sdl.UpdateTexture(nint, ref Rect, nint, int)
  fullName: SharpSDL3.Sdl.UpdateTexture(nint, ref SharpSDL3.Structs.Rect, nint, int)
  nameWithType.vb: Sdl.UpdateTexture(IntPtr, Rect, IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.UpdateTexture(System.IntPtr, SharpSDL3.Structs.Rect, System.IntPtr, Integer)
  name.vb: UpdateTexture(IntPtr, Rect, IntPtr, Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.UpdateTexture(System.IntPtr,SharpSDL3.Structs.Rect@,System.IntPtr,System.Int32)
    name: UpdateTexture
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UpdateTexture_System_IntPtr_SharpSDL3_Structs_Rect__System_IntPtr_System_Int32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: ref
  - name: " "
  - uid: SharpSDL3.Structs.Rect
    name: Rect
    href: SharpSDL3.Structs.Rect.html
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.UpdateTexture(System.IntPtr,SharpSDL3.Structs.Rect@,System.IntPtr,System.Int32)
    name: UpdateTexture
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UpdateTexture_System_IntPtr_SharpSDL3_Structs_Rect__System_IntPtr_System_Int32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.Rect
    name: Rect
    href: SharpSDL3.Structs.Rect.html
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.CreateTexture*
  commentId: Overload:SharpSDL3.Sdl.CreateTexture
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateTexture_System_IntPtr_SharpSDL3_Enums_PixelFormat_SharpSDL3_Enums_TextureAccess_System_Int32_System_Int32_
  name: CreateTexture
  nameWithType: Sdl.CreateTexture
  fullName: SharpSDL3.Sdl.CreateTexture
- uid: SharpSDL3.Enums.TextureAccess
  commentId: T:SharpSDL3.Enums.TextureAccess
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.TextureAccess.html
  name: TextureAccess
  nameWithType: TextureAccess
  fullName: SharpSDL3.Enums.TextureAccess
- uid: SharpSDL3.Sdl.CreateTextureFromSurface*
  commentId: Overload:SharpSDL3.Sdl.CreateTextureFromSurface
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateTextureFromSurface_System_IntPtr_System_IntPtr_
  name: CreateTextureFromSurface
  nameWithType: Sdl.CreateTextureFromSurface
  fullName: SharpSDL3.Sdl.CreateTextureFromSurface
- uid: SharpSDL3.Sdl.CreateTextureWithProperties*
  commentId: Overload:SharpSDL3.Sdl.CreateTextureWithProperties
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateTextureWithProperties_System_IntPtr_System_UInt32_
  name: CreateTextureWithProperties
  nameWithType: Sdl.CreateTextureWithProperties
  fullName: SharpSDL3.Sdl.CreateTextureWithProperties
- uid: SharpSDL3.Sdl.GetTextureAlphaMod*
  commentId: Overload:SharpSDL3.Sdl.GetTextureAlphaMod
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTextureAlphaMod_System_IntPtr_System_Byte__
  name: GetTextureAlphaMod
  nameWithType: Sdl.GetTextureAlphaMod
  fullName: SharpSDL3.Sdl.GetTextureAlphaMod
- uid: SharpSDL3.Sdl.GetTextureAlphaModFloat(System.IntPtr,System.Single@)
  commentId: M:SharpSDL3.Sdl.GetTextureAlphaModFloat(System.IntPtr,System.Single@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTextureAlphaModFloat_System_IntPtr_System_Single__
  name: GetTextureAlphaModFloat(nint, out float)
  nameWithType: Sdl.GetTextureAlphaModFloat(nint, out float)
  fullName: SharpSDL3.Sdl.GetTextureAlphaModFloat(nint, out float)
  nameWithType.vb: Sdl.GetTextureAlphaModFloat(IntPtr, Single)
  fullName.vb: SharpSDL3.Sdl.GetTextureAlphaModFloat(System.IntPtr, Single)
  name.vb: GetTextureAlphaModFloat(IntPtr, Single)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetTextureAlphaModFloat(System.IntPtr,System.Single@)
    name: GetTextureAlphaModFloat
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTextureAlphaModFloat_System_IntPtr_System_Single__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetTextureAlphaModFloat(System.IntPtr,System.Single@)
    name: GetTextureAlphaModFloat
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTextureAlphaModFloat_System_IntPtr_System_Single__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: SharpSDL3.Sdl.GetTextureColorMod(System.IntPtr,System.Byte@,System.Byte@,System.Byte@)
  commentId: M:SharpSDL3.Sdl.GetTextureColorMod(System.IntPtr,System.Byte@,System.Byte@,System.Byte@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTextureColorMod_System_IntPtr_System_Byte__System_Byte__System_Byte__
  name: GetTextureColorMod(nint, out byte, out byte, out byte)
  nameWithType: Sdl.GetTextureColorMod(nint, out byte, out byte, out byte)
  fullName: SharpSDL3.Sdl.GetTextureColorMod(nint, out byte, out byte, out byte)
  nameWithType.vb: Sdl.GetTextureColorMod(IntPtr, Byte, Byte, Byte)
  fullName.vb: SharpSDL3.Sdl.GetTextureColorMod(System.IntPtr, Byte, Byte, Byte)
  name.vb: GetTextureColorMod(IntPtr, Byte, Byte, Byte)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetTextureColorMod(System.IntPtr,System.Byte@,System.Byte@,System.Byte@)
    name: GetTextureColorMod
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTextureColorMod_System_IntPtr_System_Byte__System_Byte__System_Byte__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetTextureColorMod(System.IntPtr,System.Byte@,System.Byte@,System.Byte@)
    name: GetTextureColorMod
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTextureColorMod_System_IntPtr_System_Byte__System_Byte__System_Byte__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: SharpSDL3.Sdl.SetTextureAlphaMod(System.IntPtr,System.Byte)
  commentId: M:SharpSDL3.Sdl.SetTextureAlphaMod(System.IntPtr,System.Byte)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetTextureAlphaMod_System_IntPtr_System_Byte_
  name: SetTextureAlphaMod(nint, byte)
  nameWithType: Sdl.SetTextureAlphaMod(nint, byte)
  fullName: SharpSDL3.Sdl.SetTextureAlphaMod(nint, byte)
  nameWithType.vb: Sdl.SetTextureAlphaMod(IntPtr, Byte)
  fullName.vb: SharpSDL3.Sdl.SetTextureAlphaMod(System.IntPtr, Byte)
  name.vb: SetTextureAlphaMod(IntPtr, Byte)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetTextureAlphaMod(System.IntPtr,System.Byte)
    name: SetTextureAlphaMod
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetTextureAlphaMod_System_IntPtr_System_Byte_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetTextureAlphaMod(System.IntPtr,System.Byte)
    name: SetTextureAlphaMod
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetTextureAlphaMod_System_IntPtr_System_Byte_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: SharpSDL3.Sdl.GetTextureAlphaModFloat*
  commentId: Overload:SharpSDL3.Sdl.GetTextureAlphaModFloat
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTextureAlphaModFloat_System_IntPtr_System_Single__
  name: GetTextureAlphaModFloat
  nameWithType: Sdl.GetTextureAlphaModFloat
  fullName: SharpSDL3.Sdl.GetTextureAlphaModFloat
- uid: SharpSDL3.Sdl.GetTextureAlphaMod(System.IntPtr,System.Byte@)
  commentId: M:SharpSDL3.Sdl.GetTextureAlphaMod(System.IntPtr,System.Byte@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTextureAlphaMod_System_IntPtr_System_Byte__
  name: GetTextureAlphaMod(nint, out byte)
  nameWithType: Sdl.GetTextureAlphaMod(nint, out byte)
  fullName: SharpSDL3.Sdl.GetTextureAlphaMod(nint, out byte)
  nameWithType.vb: Sdl.GetTextureAlphaMod(IntPtr, Byte)
  fullName.vb: SharpSDL3.Sdl.GetTextureAlphaMod(System.IntPtr, Byte)
  name.vb: GetTextureAlphaMod(IntPtr, Byte)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetTextureAlphaMod(System.IntPtr,System.Byte@)
    name: GetTextureAlphaMod
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTextureAlphaMod_System_IntPtr_System_Byte__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetTextureAlphaMod(System.IntPtr,System.Byte@)
    name: GetTextureAlphaMod
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTextureAlphaMod_System_IntPtr_System_Byte__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: SharpSDL3.Sdl.GetTextureColorModFloat(System.IntPtr,System.Single@,System.Single@,System.Single@)
  commentId: M:SharpSDL3.Sdl.GetTextureColorModFloat(System.IntPtr,System.Single@,System.Single@,System.Single@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTextureColorModFloat_System_IntPtr_System_Single__System_Single__System_Single__
  name: GetTextureColorModFloat(nint, out float, out float, out float)
  nameWithType: Sdl.GetTextureColorModFloat(nint, out float, out float, out float)
  fullName: SharpSDL3.Sdl.GetTextureColorModFloat(nint, out float, out float, out float)
  nameWithType.vb: Sdl.GetTextureColorModFloat(IntPtr, Single, Single, Single)
  fullName.vb: SharpSDL3.Sdl.GetTextureColorModFloat(System.IntPtr, Single, Single, Single)
  name.vb: GetTextureColorModFloat(IntPtr, Single, Single, Single)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetTextureColorModFloat(System.IntPtr,System.Single@,System.Single@,System.Single@)
    name: GetTextureColorModFloat
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTextureColorModFloat_System_IntPtr_System_Single__System_Single__System_Single__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetTextureColorModFloat(System.IntPtr,System.Single@,System.Single@,System.Single@)
    name: GetTextureColorModFloat
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTextureColorModFloat_System_IntPtr_System_Single__System_Single__System_Single__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: SharpSDL3.Sdl.SetTextureAlphaModFloat(System.IntPtr,System.Single)
  commentId: M:SharpSDL3.Sdl.SetTextureAlphaModFloat(System.IntPtr,System.Single)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetTextureAlphaModFloat_System_IntPtr_System_Single_
  name: SetTextureAlphaModFloat(nint, float)
  nameWithType: Sdl.SetTextureAlphaModFloat(nint, float)
  fullName: SharpSDL3.Sdl.SetTextureAlphaModFloat(nint, float)
  nameWithType.vb: Sdl.SetTextureAlphaModFloat(IntPtr, Single)
  fullName.vb: SharpSDL3.Sdl.SetTextureAlphaModFloat(System.IntPtr, Single)
  name.vb: SetTextureAlphaModFloat(IntPtr, Single)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetTextureAlphaModFloat(System.IntPtr,System.Single)
    name: SetTextureAlphaModFloat
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetTextureAlphaModFloat_System_IntPtr_System_Single_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetTextureAlphaModFloat(System.IntPtr,System.Single)
    name: SetTextureAlphaModFloat
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetTextureAlphaModFloat_System_IntPtr_System_Single_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: SharpSDL3.Sdl.GetTextureBlendMode*
  commentId: Overload:SharpSDL3.Sdl.GetTextureBlendMode
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTextureBlendMode_System_IntPtr_System_IntPtr_
  name: GetTextureBlendMode
  nameWithType: Sdl.GetTextureBlendMode
  fullName: SharpSDL3.Sdl.GetTextureBlendMode
- uid: SharpSDL3.Sdl.GetTextureColorMod*
  commentId: Overload:SharpSDL3.Sdl.GetTextureColorMod
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTextureColorMod_System_IntPtr_System_Byte__System_Byte__System_Byte__
  name: GetTextureColorMod
  nameWithType: Sdl.GetTextureColorMod
  fullName: SharpSDL3.Sdl.GetTextureColorMod
- uid: SharpSDL3.Sdl.SetTextureColorMod(System.IntPtr,System.Byte,System.Byte,System.Byte)
  commentId: M:SharpSDL3.Sdl.SetTextureColorMod(System.IntPtr,System.Byte,System.Byte,System.Byte)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetTextureColorMod_System_IntPtr_System_Byte_System_Byte_System_Byte_
  name: SetTextureColorMod(nint, byte, byte, byte)
  nameWithType: Sdl.SetTextureColorMod(nint, byte, byte, byte)
  fullName: SharpSDL3.Sdl.SetTextureColorMod(nint, byte, byte, byte)
  nameWithType.vb: Sdl.SetTextureColorMod(IntPtr, Byte, Byte, Byte)
  fullName.vb: SharpSDL3.Sdl.SetTextureColorMod(System.IntPtr, Byte, Byte, Byte)
  name.vb: SetTextureColorMod(IntPtr, Byte, Byte, Byte)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetTextureColorMod(System.IntPtr,System.Byte,System.Byte,System.Byte)
    name: SetTextureColorMod
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetTextureColorMod_System_IntPtr_System_Byte_System_Byte_System_Byte_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: ','
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: ','
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetTextureColorMod(System.IntPtr,System.Byte,System.Byte,System.Byte)
    name: SetTextureColorMod
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetTextureColorMod_System_IntPtr_System_Byte_System_Byte_System_Byte_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: SharpSDL3.Sdl.GetTextureColorModFloat*
  commentId: Overload:SharpSDL3.Sdl.GetTextureColorModFloat
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTextureColorModFloat_System_IntPtr_System_Single__System_Single__System_Single__
  name: GetTextureColorModFloat
  nameWithType: Sdl.GetTextureColorModFloat
  fullName: SharpSDL3.Sdl.GetTextureColorModFloat
- uid: SharpSDL3.Sdl.SetTextureColorModFloat(System.IntPtr,System.Single,System.Single,System.Single)
  commentId: M:SharpSDL3.Sdl.SetTextureColorModFloat(System.IntPtr,System.Single,System.Single,System.Single)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetTextureColorModFloat_System_IntPtr_System_Single_System_Single_System_Single_
  name: SetTextureColorModFloat(nint, float, float, float)
  nameWithType: Sdl.SetTextureColorModFloat(nint, float, float, float)
  fullName: SharpSDL3.Sdl.SetTextureColorModFloat(nint, float, float, float)
  nameWithType.vb: Sdl.SetTextureColorModFloat(IntPtr, Single, Single, Single)
  fullName.vb: SharpSDL3.Sdl.SetTextureColorModFloat(System.IntPtr, Single, Single, Single)
  name.vb: SetTextureColorModFloat(IntPtr, Single, Single, Single)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetTextureColorModFloat(System.IntPtr,System.Single,System.Single,System.Single)
    name: SetTextureColorModFloat
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetTextureColorModFloat_System_IntPtr_System_Single_System_Single_System_Single_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetTextureColorModFloat(System.IntPtr,System.Single,System.Single,System.Single)
    name: SetTextureColorModFloat
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetTextureColorModFloat_System_IntPtr_System_Single_System_Single_System_Single_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: SharpSDL3.Sdl.GetTextureProperties*
  commentId: Overload:SharpSDL3.Sdl.GetTextureProperties
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTextureProperties_System_IntPtr_
  name: GetTextureProperties
  nameWithType: Sdl.GetTextureProperties
  fullName: SharpSDL3.Sdl.GetTextureProperties
- uid: SharpSDL3.Sdl.GetTextureScaleMode*
  commentId: Overload:SharpSDL3.Sdl.GetTextureScaleMode
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTextureScaleMode_System_IntPtr_SharpSDL3_Enums_ScaleMode__
  name: GetTextureScaleMode
  nameWithType: Sdl.GetTextureScaleMode
  fullName: SharpSDL3.Sdl.GetTextureScaleMode
- uid: SharpSDL3.Sdl.SetTextureScaleMode(System.IntPtr,SharpSDL3.Enums.ScaleMode)
  commentId: M:SharpSDL3.Sdl.SetTextureScaleMode(System.IntPtr,SharpSDL3.Enums.ScaleMode)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetTextureScaleMode_System_IntPtr_SharpSDL3_Enums_ScaleMode_
  name: SetTextureScaleMode(nint, ScaleMode)
  nameWithType: Sdl.SetTextureScaleMode(nint, ScaleMode)
  fullName: SharpSDL3.Sdl.SetTextureScaleMode(nint, SharpSDL3.Enums.ScaleMode)
  nameWithType.vb: Sdl.SetTextureScaleMode(IntPtr, ScaleMode)
  fullName.vb: SharpSDL3.Sdl.SetTextureScaleMode(System.IntPtr, SharpSDL3.Enums.ScaleMode)
  name.vb: SetTextureScaleMode(IntPtr, ScaleMode)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetTextureScaleMode(System.IntPtr,SharpSDL3.Enums.ScaleMode)
    name: SetTextureScaleMode
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetTextureScaleMode_System_IntPtr_SharpSDL3_Enums_ScaleMode_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.ScaleMode
    name: ScaleMode
    href: SharpSDL3.Enums.ScaleMode.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetTextureScaleMode(System.IntPtr,SharpSDL3.Enums.ScaleMode)
    name: SetTextureScaleMode
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetTextureScaleMode_System_IntPtr_SharpSDL3_Enums_ScaleMode_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.ScaleMode
    name: ScaleMode
    href: SharpSDL3.Enums.ScaleMode.html
  - name: )
- uid: SharpSDL3.Sdl.GetTextureSize*
  commentId: Overload:SharpSDL3.Sdl.GetTextureSize
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTextureSize_System_IntPtr_System_Single__System_Single__
  name: GetTextureSize
  nameWithType: Sdl.GetTextureSize
  fullName: SharpSDL3.Sdl.GetTextureSize
- uid: SharpSDL3.Structs.Vector2
  commentId: T:SharpSDL3.Structs.Vector2
  parent: SharpSDL3.Structs
  href: SharpSDL3.Structs.Vector2.html
  name: Vector2
  nameWithType: Vector2
  fullName: SharpSDL3.Structs.Vector2
- uid: SharpSDL3.Sdl.LockTextureToSurface(System.IntPtr,SharpSDL3.Structs.Rect@,System.IntPtr@)
  commentId: M:SharpSDL3.Sdl.LockTextureToSurface(System.IntPtr,SharpSDL3.Structs.Rect@,System.IntPtr@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LockTextureToSurface_System_IntPtr_SharpSDL3_Structs_Rect__System_IntPtr__
  name: LockTextureToSurface(nint, ref Rect, out nint)
  nameWithType: Sdl.LockTextureToSurface(nint, ref Rect, out nint)
  fullName: SharpSDL3.Sdl.LockTextureToSurface(nint, ref SharpSDL3.Structs.Rect, out nint)
  nameWithType.vb: Sdl.LockTextureToSurface(IntPtr, Rect, IntPtr)
  fullName.vb: SharpSDL3.Sdl.LockTextureToSurface(System.IntPtr, SharpSDL3.Structs.Rect, System.IntPtr)
  name.vb: LockTextureToSurface(IntPtr, Rect, IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.LockTextureToSurface(System.IntPtr,SharpSDL3.Structs.Rect@,System.IntPtr@)
    name: LockTextureToSurface
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LockTextureToSurface_System_IntPtr_SharpSDL3_Structs_Rect__System_IntPtr__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: ref
  - name: " "
  - uid: SharpSDL3.Structs.Rect
    name: Rect
    href: SharpSDL3.Structs.Rect.html
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.LockTextureToSurface(System.IntPtr,SharpSDL3.Structs.Rect@,System.IntPtr@)
    name: LockTextureToSurface
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LockTextureToSurface_System_IntPtr_SharpSDL3_Structs_Rect__System_IntPtr__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.Rect
    name: Rect
    href: SharpSDL3.Structs.Rect.html
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.UnlockTexture(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.UnlockTexture(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UnlockTexture_System_IntPtr_
  name: UnlockTexture(nint)
  nameWithType: Sdl.UnlockTexture(nint)
  fullName: SharpSDL3.Sdl.UnlockTexture(nint)
  nameWithType.vb: Sdl.UnlockTexture(IntPtr)
  fullName.vb: SharpSDL3.Sdl.UnlockTexture(System.IntPtr)
  name.vb: UnlockTexture(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.UnlockTexture(System.IntPtr)
    name: UnlockTexture
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UnlockTexture_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.UnlockTexture(System.IntPtr)
    name: UnlockTexture
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UnlockTexture_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.LockTexture*
  commentId: Overload:SharpSDL3.Sdl.LockTexture
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LockTexture_System_IntPtr_SharpSDL3_Structs_Rect__System_IntPtr__System_Int32__
  name: LockTexture
  nameWithType: Sdl.LockTexture
  fullName: SharpSDL3.Sdl.LockTexture
- uid: SharpSDL3.Sdl.LockTexture(System.IntPtr,SharpSDL3.Structs.Rect@,System.IntPtr@,System.Int32@)
  commentId: M:SharpSDL3.Sdl.LockTexture(System.IntPtr,SharpSDL3.Structs.Rect@,System.IntPtr@,System.Int32@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LockTexture_System_IntPtr_SharpSDL3_Structs_Rect__System_IntPtr__System_Int32__
  name: LockTexture(nint, ref Rect, out nint, out int)
  nameWithType: Sdl.LockTexture(nint, ref Rect, out nint, out int)
  fullName: SharpSDL3.Sdl.LockTexture(nint, ref SharpSDL3.Structs.Rect, out nint, out int)
  nameWithType.vb: Sdl.LockTexture(IntPtr, Rect, IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.LockTexture(System.IntPtr, SharpSDL3.Structs.Rect, System.IntPtr, Integer)
  name.vb: LockTexture(IntPtr, Rect, IntPtr, Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.LockTexture(System.IntPtr,SharpSDL3.Structs.Rect@,System.IntPtr@,System.Int32@)
    name: LockTexture
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LockTexture_System_IntPtr_SharpSDL3_Structs_Rect__System_IntPtr__System_Int32__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: ref
  - name: " "
  - uid: SharpSDL3.Structs.Rect
    name: Rect
    href: SharpSDL3.Structs.Rect.html
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.LockTexture(System.IntPtr,SharpSDL3.Structs.Rect@,System.IntPtr@,System.Int32@)
    name: LockTexture
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LockTexture_System_IntPtr_SharpSDL3_Structs_Rect__System_IntPtr__System_Int32__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.Rect
    name: Rect
    href: SharpSDL3.Structs.Rect.html
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.LockTextureToSurface*
  commentId: Overload:SharpSDL3.Sdl.LockTextureToSurface
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_LockTextureToSurface_System_IntPtr_SharpSDL3_Structs_Rect__System_IntPtr__
  name: LockTextureToSurface
  nameWithType: Sdl.LockTextureToSurface
  fullName: SharpSDL3.Sdl.LockTextureToSurface
- uid: SharpSDL3.Sdl.SetTextureAlphaMod*
  commentId: Overload:SharpSDL3.Sdl.SetTextureAlphaMod
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetTextureAlphaMod_System_IntPtr_System_Byte_
  name: SetTextureAlphaMod
  nameWithType: Sdl.SetTextureAlphaMod
  fullName: SharpSDL3.Sdl.SetTextureAlphaMod
- uid: SharpSDL3.Sdl.SetTextureAlphaModFloat*
  commentId: Overload:SharpSDL3.Sdl.SetTextureAlphaModFloat
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetTextureAlphaModFloat_System_IntPtr_System_Single_
  name: SetTextureAlphaModFloat
  nameWithType: Sdl.SetTextureAlphaModFloat
  fullName: SharpSDL3.Sdl.SetTextureAlphaModFloat
- uid: SharpSDL3.Sdl.SetTextureBlendMode*
  commentId: Overload:SharpSDL3.Sdl.SetTextureBlendMode
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetTextureBlendMode_System_IntPtr_System_UInt32_
  name: SetTextureBlendMode
  nameWithType: Sdl.SetTextureBlendMode
  fullName: SharpSDL3.Sdl.SetTextureBlendMode
- uid: SharpSDL3.Sdl.SetTextureColorMod*
  commentId: Overload:SharpSDL3.Sdl.SetTextureColorMod
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetTextureColorMod_System_IntPtr_System_Byte_System_Byte_System_Byte_
  name: SetTextureColorMod
  nameWithType: Sdl.SetTextureColorMod
  fullName: SharpSDL3.Sdl.SetTextureColorMod
- uid: SharpSDL3.Sdl.SetTextureColorModFloat*
  commentId: Overload:SharpSDL3.Sdl.SetTextureColorModFloat
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetTextureColorModFloat_System_IntPtr_System_Single_System_Single_System_Single_
  name: SetTextureColorModFloat
  nameWithType: Sdl.SetTextureColorModFloat
  fullName: SharpSDL3.Sdl.SetTextureColorModFloat
- uid: SharpSDL3.Sdl.GetTextureScaleMode(System.IntPtr,SharpSDL3.Enums.ScaleMode@)
  commentId: M:SharpSDL3.Sdl.GetTextureScaleMode(System.IntPtr,SharpSDL3.Enums.ScaleMode@)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTextureScaleMode_System_IntPtr_SharpSDL3_Enums_ScaleMode__
  name: GetTextureScaleMode(nint, out ScaleMode)
  nameWithType: Sdl.GetTextureScaleMode(nint, out ScaleMode)
  fullName: SharpSDL3.Sdl.GetTextureScaleMode(nint, out SharpSDL3.Enums.ScaleMode)
  nameWithType.vb: Sdl.GetTextureScaleMode(IntPtr, ScaleMode)
  fullName.vb: SharpSDL3.Sdl.GetTextureScaleMode(System.IntPtr, SharpSDL3.Enums.ScaleMode)
  name.vb: GetTextureScaleMode(IntPtr, ScaleMode)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetTextureScaleMode(System.IntPtr,SharpSDL3.Enums.ScaleMode@)
    name: GetTextureScaleMode
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTextureScaleMode_System_IntPtr_SharpSDL3_Enums_ScaleMode__
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: SharpSDL3.Enums.ScaleMode
    name: ScaleMode
    href: SharpSDL3.Enums.ScaleMode.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetTextureScaleMode(System.IntPtr,SharpSDL3.Enums.ScaleMode@)
    name: GetTextureScaleMode
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTextureScaleMode_System_IntPtr_SharpSDL3_Enums_ScaleMode__
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.ScaleMode
    name: ScaleMode
    href: SharpSDL3.Enums.ScaleMode.html
  - name: )
- uid: SharpSDL3.Sdl.SetTextureScaleMode*
  commentId: Overload:SharpSDL3.Sdl.SetTextureScaleMode
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetTextureScaleMode_System_IntPtr_SharpSDL3_Enums_ScaleMode_
  name: SetTextureScaleMode
  nameWithType: Sdl.SetTextureScaleMode
  fullName: SharpSDL3.Sdl.SetTextureScaleMode
- uid: SharpSDL3.Sdl.UnlockTexture*
  commentId: Overload:SharpSDL3.Sdl.UnlockTexture
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UnlockTexture_System_IntPtr_
  name: UnlockTexture
  nameWithType: Sdl.UnlockTexture
  fullName: SharpSDL3.Sdl.UnlockTexture
- uid: SharpSDL3.Sdl.UpdateYUVTexture(System.IntPtr,SharpSDL3.Structs.Rect@,System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.IntPtr,System.Int32)
  commentId: M:SharpSDL3.Sdl.UpdateYUVTexture(System.IntPtr,SharpSDL3.Structs.Rect@,System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.IntPtr,System.Int32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UpdateYUVTexture_System_IntPtr_SharpSDL3_Structs_Rect__System_IntPtr_System_Int32_System_IntPtr_System_Int32_System_IntPtr_System_Int32_
  name: UpdateYUVTexture(nint, ref Rect, nint, int, nint, int, nint, int)
  nameWithType: Sdl.UpdateYUVTexture(nint, ref Rect, nint, int, nint, int, nint, int)
  fullName: SharpSDL3.Sdl.UpdateYUVTexture(nint, ref SharpSDL3.Structs.Rect, nint, int, nint, int, nint, int)
  nameWithType.vb: Sdl.UpdateYUVTexture(IntPtr, Rect, IntPtr, Integer, IntPtr, Integer, IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.UpdateYUVTexture(System.IntPtr, SharpSDL3.Structs.Rect, System.IntPtr, Integer, System.IntPtr, Integer, System.IntPtr, Integer)
  name.vb: UpdateYUVTexture(IntPtr, Rect, IntPtr, Integer, IntPtr, Integer, IntPtr, Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.UpdateYUVTexture(System.IntPtr,SharpSDL3.Structs.Rect@,System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.IntPtr,System.Int32)
    name: UpdateYUVTexture
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UpdateYUVTexture_System_IntPtr_SharpSDL3_Structs_Rect__System_IntPtr_System_Int32_System_IntPtr_System_Int32_System_IntPtr_System_Int32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: ref
  - name: " "
  - uid: SharpSDL3.Structs.Rect
    name: Rect
    href: SharpSDL3.Structs.Rect.html
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.UpdateYUVTexture(System.IntPtr,SharpSDL3.Structs.Rect@,System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.IntPtr,System.Int32)
    name: UpdateYUVTexture
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UpdateYUVTexture_System_IntPtr_SharpSDL3_Structs_Rect__System_IntPtr_System_Int32_System_IntPtr_System_Int32_System_IntPtr_System_Int32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.Rect
    name: Rect
    href: SharpSDL3.Structs.Rect.html
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.UpdateNVTexture*
  commentId: Overload:SharpSDL3.Sdl.UpdateNVTexture
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UpdateNVTexture_System_IntPtr_SharpSDL3_Structs_Rect__System_IntPtr_System_Int32_System_IntPtr_System_Int32_
  name: UpdateNVTexture
  nameWithType: Sdl.UpdateNVTexture
  fullName: SharpSDL3.Sdl.UpdateNVTexture
- uid: SharpSDL3.Sdl.UpdateNVTexture(System.IntPtr,SharpSDL3.Structs.Rect@,System.IntPtr,System.Int32,System.IntPtr,System.Int32)
  commentId: M:SharpSDL3.Sdl.UpdateNVTexture(System.IntPtr,SharpSDL3.Structs.Rect@,System.IntPtr,System.Int32,System.IntPtr,System.Int32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UpdateNVTexture_System_IntPtr_SharpSDL3_Structs_Rect__System_IntPtr_System_Int32_System_IntPtr_System_Int32_
  name: UpdateNVTexture(nint, ref Rect, nint, int, nint, int)
  nameWithType: Sdl.UpdateNVTexture(nint, ref Rect, nint, int, nint, int)
  fullName: SharpSDL3.Sdl.UpdateNVTexture(nint, ref SharpSDL3.Structs.Rect, nint, int, nint, int)
  nameWithType.vb: Sdl.UpdateNVTexture(IntPtr, Rect, IntPtr, Integer, IntPtr, Integer)
  fullName.vb: SharpSDL3.Sdl.UpdateNVTexture(System.IntPtr, SharpSDL3.Structs.Rect, System.IntPtr, Integer, System.IntPtr, Integer)
  name.vb: UpdateNVTexture(IntPtr, Rect, IntPtr, Integer, IntPtr, Integer)
  spec.csharp:
  - uid: SharpSDL3.Sdl.UpdateNVTexture(System.IntPtr,SharpSDL3.Structs.Rect@,System.IntPtr,System.Int32,System.IntPtr,System.Int32)
    name: UpdateNVTexture
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UpdateNVTexture_System_IntPtr_SharpSDL3_Structs_Rect__System_IntPtr_System_Int32_System_IntPtr_System_Int32_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - name: ref
  - name: " "
  - uid: SharpSDL3.Structs.Rect
    name: Rect
    href: SharpSDL3.Structs.Rect.html
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.UpdateNVTexture(System.IntPtr,SharpSDL3.Structs.Rect@,System.IntPtr,System.Int32,System.IntPtr,System.Int32)
    name: UpdateNVTexture
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UpdateNVTexture_System_IntPtr_SharpSDL3_Structs_Rect__System_IntPtr_System_Int32_System_IntPtr_System_Int32_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: SharpSDL3.Structs.Rect
    name: Rect
    href: SharpSDL3.Structs.Rect.html
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SharpSDL3.Sdl.UpdateTexture*
  commentId: Overload:SharpSDL3.Sdl.UpdateTexture
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UpdateTexture_System_IntPtr_SharpSDL3_Structs_Rect__System_IntPtr_System_Int32_
  name: UpdateTexture
  nameWithType: Sdl.UpdateTexture
  fullName: SharpSDL3.Sdl.UpdateTexture
- uid: SharpSDL3.Sdl.UpdateYUVTexture*
  commentId: Overload:SharpSDL3.Sdl.UpdateYUVTexture
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_UpdateYUVTexture_System_IntPtr_SharpSDL3_Structs_Rect__System_IntPtr_System_Int32_System_IntPtr_System_Int32_System_IntPtr_System_Int32_
  name: UpdateYUVTexture
  nameWithType: Sdl.UpdateYUVTexture
  fullName: SharpSDL3.Sdl.UpdateYUVTexture
- uid: SharpSDL3.Sdl.AddTimerNS(System.UInt64,SharpSDL3.Delegates.SdlNsTimerCallback,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.AddTimerNS(System.UInt64,SharpSDL3.Delegates.SdlNsTimerCallback,System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_AddTimerNS_System_UInt64_SharpSDL3_Delegates_SdlNsTimerCallback_System_IntPtr_
  name: AddTimerNS(ulong, SdlNsTimerCallback, nint)
  nameWithType: Sdl.AddTimerNS(ulong, Delegates.SdlNsTimerCallback, nint)
  fullName: SharpSDL3.Sdl.AddTimerNS(ulong, SharpSDL3.Delegates.SdlNsTimerCallback, nint)
  nameWithType.vb: Sdl.AddTimerNS(ULong, Delegates.SdlNsTimerCallback, IntPtr)
  fullName.vb: SharpSDL3.Sdl.AddTimerNS(ULong, SharpSDL3.Delegates.SdlNsTimerCallback, System.IntPtr)
  name.vb: AddTimerNS(ULong, SdlNsTimerCallback, IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.AddTimerNS(System.UInt64,SharpSDL3.Delegates.SdlNsTimerCallback,System.IntPtr)
    name: AddTimerNS
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_AddTimerNS_System_UInt64_SharpSDL3_Delegates_SdlNsTimerCallback_System_IntPtr_
  - name: (
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: SharpSDL3.Delegates.SdlNsTimerCallback
    name: SdlNsTimerCallback
    href: SharpSDL3.Delegates.SdlNsTimerCallback.html
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.AddTimerNS(System.UInt64,SharpSDL3.Delegates.SdlNsTimerCallback,System.IntPtr)
    name: AddTimerNS
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_AddTimerNS_System_UInt64_SharpSDL3_Delegates_SdlNsTimerCallback_System_IntPtr_
  - name: (
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: SharpSDL3.Delegates.SdlNsTimerCallback
    name: SdlNsTimerCallback
    href: SharpSDL3.Delegates.SdlNsTimerCallback.html
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.RemoveTimer(System.UInt32)
  commentId: M:SharpSDL3.Sdl.RemoveTimer(System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RemoveTimer_System_UInt32_
  name: RemoveTimer(uint)
  nameWithType: Sdl.RemoveTimer(uint)
  fullName: SharpSDL3.Sdl.RemoveTimer(uint)
  nameWithType.vb: Sdl.RemoveTimer(UInteger)
  fullName.vb: SharpSDL3.Sdl.RemoveTimer(UInteger)
  name.vb: RemoveTimer(UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.RemoveTimer(System.UInt32)
    name: RemoveTimer
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RemoveTimer_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.RemoveTimer(System.UInt32)
    name: RemoveTimer
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RemoveTimer_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.AddTimer*
  commentId: Overload:SharpSDL3.Sdl.AddTimer
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_AddTimer_System_UInt32_SharpSDL3_Delegates_SdlTimerCallback_System_IntPtr_
  name: AddTimer
  nameWithType: Sdl.AddTimer
  fullName: SharpSDL3.Sdl.AddTimer
- uid: SharpSDL3.Delegates.SdlTimerCallback
  commentId: T:SharpSDL3.Delegates.SdlTimerCallback
  parent: SharpSDL3
  href: SharpSDL3.Delegates.html
  name: Delegates.SdlTimerCallback
  nameWithType: Delegates.SdlTimerCallback
  fullName: SharpSDL3.Delegates.SdlTimerCallback
  spec.csharp:
  - uid: SharpSDL3.Delegates
    name: Delegates
    href: SharpSDL3.Delegates.html
  - name: .
  - uid: SharpSDL3.Delegates.SdlTimerCallback
    name: SdlTimerCallback
    href: SharpSDL3.Delegates.SdlTimerCallback.html
  spec.vb:
  - uid: SharpSDL3.Delegates
    name: Delegates
    href: SharpSDL3.Delegates.html
  - name: .
  - uid: SharpSDL3.Delegates.SdlTimerCallback
    name: SdlTimerCallback
    href: SharpSDL3.Delegates.SdlTimerCallback.html
- uid: SharpSDL3.Sdl.AddTimer(System.UInt32,SharpSDL3.Delegates.SdlTimerCallback,System.IntPtr)
  commentId: M:SharpSDL3.Sdl.AddTimer(System.UInt32,SharpSDL3.Delegates.SdlTimerCallback,System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_AddTimer_System_UInt32_SharpSDL3_Delegates_SdlTimerCallback_System_IntPtr_
  name: AddTimer(uint, SdlTimerCallback, nint)
  nameWithType: Sdl.AddTimer(uint, Delegates.SdlTimerCallback, nint)
  fullName: SharpSDL3.Sdl.AddTimer(uint, SharpSDL3.Delegates.SdlTimerCallback, nint)
  nameWithType.vb: Sdl.AddTimer(UInteger, Delegates.SdlTimerCallback, IntPtr)
  fullName.vb: SharpSDL3.Sdl.AddTimer(UInteger, SharpSDL3.Delegates.SdlTimerCallback, System.IntPtr)
  name.vb: AddTimer(UInteger, SdlTimerCallback, IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.AddTimer(System.UInt32,SharpSDL3.Delegates.SdlTimerCallback,System.IntPtr)
    name: AddTimer
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_AddTimer_System_UInt32_SharpSDL3_Delegates_SdlTimerCallback_System_IntPtr_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: SharpSDL3.Delegates.SdlTimerCallback
    name: SdlTimerCallback
    href: SharpSDL3.Delegates.SdlTimerCallback.html
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.AddTimer(System.UInt32,SharpSDL3.Delegates.SdlTimerCallback,System.IntPtr)
    name: AddTimer
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_AddTimer_System_UInt32_SharpSDL3_Delegates_SdlTimerCallback_System_IntPtr_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: SharpSDL3.Delegates.SdlTimerCallback
    name: SdlTimerCallback
    href: SharpSDL3.Delegates.SdlTimerCallback.html
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.AddTimerNS*
  commentId: Overload:SharpSDL3.Sdl.AddTimerNS
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_AddTimerNS_System_UInt64_SharpSDL3_Delegates_SdlNsTimerCallback_System_IntPtr_
  name: AddTimerNS
  nameWithType: Sdl.AddTimerNS
  fullName: SharpSDL3.Sdl.AddTimerNS
- uid: SharpSDL3.Delegates.SdlNsTimerCallback
  commentId: T:SharpSDL3.Delegates.SdlNsTimerCallback
  parent: SharpSDL3
  href: SharpSDL3.Delegates.html
  name: Delegates.SdlNsTimerCallback
  nameWithType: Delegates.SdlNsTimerCallback
  fullName: SharpSDL3.Delegates.SdlNsTimerCallback
  spec.csharp:
  - uid: SharpSDL3.Delegates
    name: Delegates
    href: SharpSDL3.Delegates.html
  - name: .
  - uid: SharpSDL3.Delegates.SdlNsTimerCallback
    name: SdlNsTimerCallback
    href: SharpSDL3.Delegates.SdlNsTimerCallback.html
  spec.vb:
  - uid: SharpSDL3.Delegates
    name: Delegates
    href: SharpSDL3.Delegates.html
  - name: .
  - uid: SharpSDL3.Delegates.SdlNsTimerCallback
    name: SdlNsTimerCallback
    href: SharpSDL3.Delegates.SdlNsTimerCallback.html
- uid: SharpSDL3.Sdl.DelayNS(System.UInt64)
  commentId: M:SharpSDL3.Sdl.DelayNS(System.UInt64)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DelayNS_System_UInt64_
  name: DelayNS(ulong)
  nameWithType: Sdl.DelayNS(ulong)
  fullName: SharpSDL3.Sdl.DelayNS(ulong)
  nameWithType.vb: Sdl.DelayNS(ULong)
  fullName.vb: SharpSDL3.Sdl.DelayNS(ULong)
  name.vb: DelayNS(ULong)
  spec.csharp:
  - uid: SharpSDL3.Sdl.DelayNS(System.UInt64)
    name: DelayNS
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DelayNS_System_UInt64_
  - name: (
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.DelayNS(System.UInt64)
    name: DelayNS
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DelayNS_System_UInt64_
  - name: (
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: SharpSDL3.Sdl.DelayPrecise(System.UInt64)
  commentId: M:SharpSDL3.Sdl.DelayPrecise(System.UInt64)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DelayPrecise_System_UInt64_
  name: DelayPrecise(ulong)
  nameWithType: Sdl.DelayPrecise(ulong)
  fullName: SharpSDL3.Sdl.DelayPrecise(ulong)
  nameWithType.vb: Sdl.DelayPrecise(ULong)
  fullName.vb: SharpSDL3.Sdl.DelayPrecise(ULong)
  name.vb: DelayPrecise(ULong)
  spec.csharp:
  - uid: SharpSDL3.Sdl.DelayPrecise(System.UInt64)
    name: DelayPrecise
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DelayPrecise_System_UInt64_
  - name: (
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.DelayPrecise(System.UInt64)
    name: DelayPrecise
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DelayPrecise_System_UInt64_
  - name: (
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: SharpSDL3.Sdl.Delay*
  commentId: Overload:SharpSDL3.Sdl.Delay
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_Delay_System_UInt32_
  name: Delay
  nameWithType: Sdl.Delay
  fullName: SharpSDL3.Sdl.Delay
- uid: SharpSDL3.Sdl.Delay(System.UInt32)
  commentId: M:SharpSDL3.Sdl.Delay(System.UInt32)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_Delay_System_UInt32_
  name: Delay(uint)
  nameWithType: Sdl.Delay(uint)
  fullName: SharpSDL3.Sdl.Delay(uint)
  nameWithType.vb: Sdl.Delay(UInteger)
  fullName.vb: SharpSDL3.Sdl.Delay(UInteger)
  name.vb: Delay(UInteger)
  spec.csharp:
  - uid: SharpSDL3.Sdl.Delay(System.UInt32)
    name: Delay
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_Delay_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.Delay(System.UInt32)
    name: Delay
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_Delay_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: SharpSDL3.Sdl.DelayNS*
  commentId: Overload:SharpSDL3.Sdl.DelayNS
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DelayNS_System_UInt64_
  name: DelayNS
  nameWithType: Sdl.DelayNS
  fullName: SharpSDL3.Sdl.DelayNS
- uid: SharpSDL3.Sdl.DelayPrecise*
  commentId: Overload:SharpSDL3.Sdl.DelayPrecise
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DelayPrecise_System_UInt64_
  name: DelayPrecise
  nameWithType: Sdl.DelayPrecise
  fullName: SharpSDL3.Sdl.DelayPrecise
- uid: SharpSDL3.Sdl.GetPerformanceFrequency
  commentId: M:SharpSDL3.Sdl.GetPerformanceFrequency
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetPerformanceFrequency
  name: GetPerformanceFrequency()
  nameWithType: Sdl.GetPerformanceFrequency()
  fullName: SharpSDL3.Sdl.GetPerformanceFrequency()
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetPerformanceFrequency
    name: GetPerformanceFrequency
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetPerformanceFrequency
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetPerformanceFrequency
    name: GetPerformanceFrequency
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetPerformanceFrequency
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.GetPerformanceCounter*
  commentId: Overload:SharpSDL3.Sdl.GetPerformanceCounter
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetPerformanceCounter
  name: GetPerformanceCounter
  nameWithType: Sdl.GetPerformanceCounter
  fullName: SharpSDL3.Sdl.GetPerformanceCounter
- uid: SharpSDL3.Sdl.GetPerformanceCounter
  commentId: M:SharpSDL3.Sdl.GetPerformanceCounter
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetPerformanceCounter
  name: GetPerformanceCounter()
  nameWithType: Sdl.GetPerformanceCounter()
  fullName: SharpSDL3.Sdl.GetPerformanceCounter()
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetPerformanceCounter
    name: GetPerformanceCounter
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetPerformanceCounter
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetPerformanceCounter
    name: GetPerformanceCounter
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetPerformanceCounter
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.GetPerformanceFrequency*
  commentId: Overload:SharpSDL3.Sdl.GetPerformanceFrequency
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetPerformanceFrequency
  name: GetPerformanceFrequency
  nameWithType: Sdl.GetPerformanceFrequency
  fullName: SharpSDL3.Sdl.GetPerformanceFrequency
- uid: SharpSDL3.Sdl.GetTicks*
  commentId: Overload:SharpSDL3.Sdl.GetTicks
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTicks
  name: GetTicks
  nameWithType: Sdl.GetTicks
  fullName: SharpSDL3.Sdl.GetTicks
- uid: SharpSDL3.Sdl.GetTicksNS*
  commentId: Overload:SharpSDL3.Sdl.GetTicksNS
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTicksNS
  name: GetTicksNS
  nameWithType: Sdl.GetTicksNS
  fullName: SharpSDL3.Sdl.GetTicksNS
- uid: SharpSDL3.Sdl.RemoveTimer*
  commentId: Overload:SharpSDL3.Sdl.RemoveTimer
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RemoveTimer_System_UInt32_
  name: RemoveTimer
  nameWithType: Sdl.RemoveTimer
  fullName: SharpSDL3.Sdl.RemoveTimer
- uid: SharpSDL3.Sdl.GetTouchDeviceName*
  commentId: Overload:SharpSDL3.Sdl.GetTouchDeviceName
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTouchDeviceName_System_UInt64_
  name: GetTouchDeviceName
  nameWithType: Sdl.GetTouchDeviceName
  fullName: SharpSDL3.Sdl.GetTouchDeviceName
- uid: SharpSDL3.Sdl.GetTouchDevices*
  commentId: Overload:SharpSDL3.Sdl.GetTouchDevices
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTouchDevices
  name: GetTouchDevices
  nameWithType: Sdl.GetTouchDevices
  fullName: SharpSDL3.Sdl.GetTouchDevices
- uid: SharpSDL3.Sdl.GetTouchDeviceType*
  commentId: Overload:SharpSDL3.Sdl.GetTouchDeviceType
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTouchDeviceType_System_UInt64_
  name: GetTouchDeviceType
  nameWithType: Sdl.GetTouchDeviceType
  fullName: SharpSDL3.Sdl.GetTouchDeviceType
- uid: SharpSDL3.Enums.TouchDeviceType
  commentId: T:SharpSDL3.Enums.TouchDeviceType
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.TouchDeviceType.html
  name: TouchDeviceType
  nameWithType: TouchDeviceType
  fullName: SharpSDL3.Enums.TouchDeviceType
- uid: SharpSDL3.Sdl.GetTouchFingers*
  commentId: Overload:SharpSDL3.Sdl.GetTouchFingers
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTouchFingers_System_UInt64_
  name: GetTouchFingers
  nameWithType: Sdl.GetTouchFingers
  fullName: SharpSDL3.Sdl.GetTouchFingers
- uid: SharpSDL3.Sdl.ClickTrayEntry*
  commentId: Overload:SharpSDL3.Sdl.ClickTrayEntry
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_ClickTrayEntry_System_IntPtr_
  name: ClickTrayEntry
  nameWithType: Sdl.ClickTrayEntry
  fullName: SharpSDL3.Sdl.ClickTrayEntry
- uid: SharpSDL3.Sdl.CreateTrayMenu(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.CreateTrayMenu(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateTrayMenu_System_IntPtr_
  name: CreateTrayMenu(nint)
  nameWithType: Sdl.CreateTrayMenu(nint)
  fullName: SharpSDL3.Sdl.CreateTrayMenu(nint)
  nameWithType.vb: Sdl.CreateTrayMenu(IntPtr)
  fullName.vb: SharpSDL3.Sdl.CreateTrayMenu(System.IntPtr)
  name.vb: CreateTrayMenu(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.CreateTrayMenu(System.IntPtr)
    name: CreateTrayMenu
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateTrayMenu_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.CreateTrayMenu(System.IntPtr)
    name: CreateTrayMenu
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateTrayMenu_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GetTrayMenu(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetTrayMenu(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTrayMenu_System_IntPtr_
  name: GetTrayMenu(nint)
  nameWithType: Sdl.GetTrayMenu(nint)
  fullName: SharpSDL3.Sdl.GetTrayMenu(nint)
  nameWithType.vb: Sdl.GetTrayMenu(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetTrayMenu(System.IntPtr)
  name.vb: GetTrayMenu(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetTrayMenu(System.IntPtr)
    name: GetTrayMenu
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTrayMenu_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetTrayMenu(System.IntPtr)
    name: GetTrayMenu
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTrayMenu_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.DestroyTray(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.DestroyTray(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyTray_System_IntPtr_
  name: DestroyTray(nint)
  nameWithType: Sdl.DestroyTray(nint)
  fullName: SharpSDL3.Sdl.DestroyTray(nint)
  nameWithType.vb: Sdl.DestroyTray(IntPtr)
  fullName.vb: SharpSDL3.Sdl.DestroyTray(System.IntPtr)
  name.vb: DestroyTray(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.DestroyTray(System.IntPtr)
    name: DestroyTray
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyTray_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.DestroyTray(System.IntPtr)
    name: DestroyTray
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyTray_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.CreateTray*
  commentId: Overload:SharpSDL3.Sdl.CreateTray
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateTray_System_IntPtr_System_String_
  name: CreateTray
  nameWithType: Sdl.CreateTray
  fullName: SharpSDL3.Sdl.CreateTray
- uid: SharpSDL3.Sdl.CreateTray(System.IntPtr,System.String)
  commentId: M:SharpSDL3.Sdl.CreateTray(System.IntPtr,System.String)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateTray_System_IntPtr_System_String_
  name: CreateTray(nint, string)
  nameWithType: Sdl.CreateTray(nint, string)
  fullName: SharpSDL3.Sdl.CreateTray(nint, string)
  nameWithType.vb: Sdl.CreateTray(IntPtr, String)
  fullName.vb: SharpSDL3.Sdl.CreateTray(System.IntPtr, String)
  name.vb: CreateTray(IntPtr, String)
  spec.csharp:
  - uid: SharpSDL3.Sdl.CreateTray(System.IntPtr,System.String)
    name: CreateTray
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateTray_System_IntPtr_System_String_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.CreateTray(System.IntPtr,System.String)
    name: CreateTray
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateTray_System_IntPtr_System_String_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SharpSDL3.Sdl.GetTrayMenuParentTray(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetTrayMenuParentTray(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTrayMenuParentTray_System_IntPtr_
  name: GetTrayMenuParentTray(nint)
  nameWithType: Sdl.GetTrayMenuParentTray(nint)
  fullName: SharpSDL3.Sdl.GetTrayMenuParentTray(nint)
  nameWithType.vb: Sdl.GetTrayMenuParentTray(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetTrayMenuParentTray(System.IntPtr)
  name.vb: GetTrayMenuParentTray(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetTrayMenuParentTray(System.IntPtr)
    name: GetTrayMenuParentTray
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTrayMenuParentTray_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetTrayMenuParentTray(System.IntPtr)
    name: GetTrayMenuParentTray
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTrayMenuParentTray_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.CreateTrayMenu*
  commentId: Overload:SharpSDL3.Sdl.CreateTrayMenu
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateTrayMenu_System_IntPtr_
  name: CreateTrayMenu
  nameWithType: Sdl.CreateTrayMenu
  fullName: SharpSDL3.Sdl.CreateTrayMenu
- uid: SharpSDL3.Sdl.InsertTrayEntryAt(System.IntPtr,System.Int32,System.String,SharpSDL3.Enums.TrayEntryFlags)
  commentId: M:SharpSDL3.Sdl.InsertTrayEntryAt(System.IntPtr,System.Int32,System.String,SharpSDL3.Enums.TrayEntryFlags)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_InsertTrayEntryAt_System_IntPtr_System_Int32_System_String_SharpSDL3_Enums_TrayEntryFlags_
  name: InsertTrayEntryAt(nint, int, string, TrayEntryFlags)
  nameWithType: Sdl.InsertTrayEntryAt(nint, int, string, TrayEntryFlags)
  fullName: SharpSDL3.Sdl.InsertTrayEntryAt(nint, int, string, SharpSDL3.Enums.TrayEntryFlags)
  nameWithType.vb: Sdl.InsertTrayEntryAt(IntPtr, Integer, String, TrayEntryFlags)
  fullName.vb: SharpSDL3.Sdl.InsertTrayEntryAt(System.IntPtr, Integer, String, SharpSDL3.Enums.TrayEntryFlags)
  name.vb: InsertTrayEntryAt(IntPtr, Integer, String, TrayEntryFlags)
  spec.csharp:
  - uid: SharpSDL3.Sdl.InsertTrayEntryAt(System.IntPtr,System.Int32,System.String,SharpSDL3.Enums.TrayEntryFlags)
    name: InsertTrayEntryAt
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_InsertTrayEntryAt_System_IntPtr_System_Int32_System_String_SharpSDL3_Enums_TrayEntryFlags_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.TrayEntryFlags
    name: TrayEntryFlags
    href: SharpSDL3.Enums.TrayEntryFlags.html
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.InsertTrayEntryAt(System.IntPtr,System.Int32,System.String,SharpSDL3.Enums.TrayEntryFlags)
    name: InsertTrayEntryAt
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_InsertTrayEntryAt_System_IntPtr_System_Int32_System_String_SharpSDL3_Enums_TrayEntryFlags_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: SharpSDL3.Enums.TrayEntryFlags
    name: TrayEntryFlags
    href: SharpSDL3.Enums.TrayEntryFlags.html
  - name: )
- uid: SharpSDL3.Sdl.GetTraySubmenu(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetTraySubmenu(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTraySubmenu_System_IntPtr_
  name: GetTraySubmenu(nint)
  nameWithType: Sdl.GetTraySubmenu(nint)
  fullName: SharpSDL3.Sdl.GetTraySubmenu(nint)
  nameWithType.vb: Sdl.GetTraySubmenu(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetTraySubmenu(System.IntPtr)
  name.vb: GetTraySubmenu(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetTraySubmenu(System.IntPtr)
    name: GetTraySubmenu
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTraySubmenu_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetTraySubmenu(System.IntPtr)
    name: GetTraySubmenu
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTraySubmenu_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GetTrayMenuParentEntry(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetTrayMenuParentEntry(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTrayMenuParentEntry_System_IntPtr_
  name: GetTrayMenuParentEntry(nint)
  nameWithType: Sdl.GetTrayMenuParentEntry(nint)
  fullName: SharpSDL3.Sdl.GetTrayMenuParentEntry(nint)
  nameWithType.vb: Sdl.GetTrayMenuParentEntry(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetTrayMenuParentEntry(System.IntPtr)
  name.vb: GetTrayMenuParentEntry(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetTrayMenuParentEntry(System.IntPtr)
    name: GetTrayMenuParentEntry
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTrayMenuParentEntry_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetTrayMenuParentEntry(System.IntPtr)
    name: GetTrayMenuParentEntry
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTrayMenuParentEntry_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.CreateTraySubmenu*
  commentId: Overload:SharpSDL3.Sdl.CreateTraySubmenu
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateTraySubmenu_System_IntPtr_
  name: CreateTraySubmenu
  nameWithType: Sdl.CreateTraySubmenu
  fullName: SharpSDL3.Sdl.CreateTraySubmenu
- uid: SharpSDL3.Sdl.DestroyTray*
  commentId: Overload:SharpSDL3.Sdl.DestroyTray
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_DestroyTray_System_IntPtr_
  name: DestroyTray
  nameWithType: Sdl.DestroyTray
  fullName: SharpSDL3.Sdl.DestroyTray
- uid: SharpSDL3.Sdl.RemoveTrayEntry(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.RemoveTrayEntry(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RemoveTrayEntry_System_IntPtr_
  name: RemoveTrayEntry(nint)
  nameWithType: Sdl.RemoveTrayEntry(nint)
  fullName: SharpSDL3.Sdl.RemoveTrayEntry(nint)
  nameWithType.vb: Sdl.RemoveTrayEntry(IntPtr)
  fullName.vb: SharpSDL3.Sdl.RemoveTrayEntry(System.IntPtr)
  name.vb: RemoveTrayEntry(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.RemoveTrayEntry(System.IntPtr)
    name: RemoveTrayEntry
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RemoveTrayEntry_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.RemoveTrayEntry(System.IntPtr)
    name: RemoveTrayEntry
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RemoveTrayEntry_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GetTrayEntries*
  commentId: Overload:SharpSDL3.Sdl.GetTrayEntries
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTrayEntries_System_IntPtr_
  name: GetTrayEntries
  nameWithType: Sdl.GetTrayEntries
  fullName: SharpSDL3.Sdl.GetTrayEntries
- uid: SharpSDL3.Sdl.GetTrayEntries(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetTrayEntries(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTrayEntries_System_IntPtr_
  name: GetTrayEntries(nint)
  nameWithType: Sdl.GetTrayEntries(nint)
  fullName: SharpSDL3.Sdl.GetTrayEntries(nint)
  nameWithType.vb: Sdl.GetTrayEntries(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetTrayEntries(System.IntPtr)
  name.vb: GetTrayEntries(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetTrayEntries(System.IntPtr)
    name: GetTrayEntries
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTrayEntries_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetTrayEntries(System.IntPtr)
    name: GetTrayEntries
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTrayEntries_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.SetTrayEntryChecked(System.IntPtr,System.Boolean)
  commentId: M:SharpSDL3.Sdl.SetTrayEntryChecked(System.IntPtr,System.Boolean)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetTrayEntryChecked_System_IntPtr_System_Boolean_
  name: SetTrayEntryChecked(nint, bool)
  nameWithType: Sdl.SetTrayEntryChecked(nint, bool)
  fullName: SharpSDL3.Sdl.SetTrayEntryChecked(nint, bool)
  nameWithType.vb: Sdl.SetTrayEntryChecked(IntPtr, Boolean)
  fullName.vb: SharpSDL3.Sdl.SetTrayEntryChecked(System.IntPtr, Boolean)
  name.vb: SetTrayEntryChecked(IntPtr, Boolean)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetTrayEntryChecked(System.IntPtr,System.Boolean)
    name: SetTrayEntryChecked
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetTrayEntryChecked_System_IntPtr_System_Boolean_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetTrayEntryChecked(System.IntPtr,System.Boolean)
    name: SetTrayEntryChecked
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetTrayEntryChecked_System_IntPtr_System_Boolean_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: SharpSDL3.Sdl.GetTrayEntryChecked*
  commentId: Overload:SharpSDL3.Sdl.GetTrayEntryChecked
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTrayEntryChecked_System_IntPtr_
  name: GetTrayEntryChecked
  nameWithType: Sdl.GetTrayEntryChecked
  fullName: SharpSDL3.Sdl.GetTrayEntryChecked
- uid: SharpSDL3.Sdl.SetTrayEntryEnabled(System.IntPtr,System.Boolean)
  commentId: M:SharpSDL3.Sdl.SetTrayEntryEnabled(System.IntPtr,System.Boolean)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetTrayEntryEnabled_System_IntPtr_System_Boolean_
  name: SetTrayEntryEnabled(nint, bool)
  nameWithType: Sdl.SetTrayEntryEnabled(nint, bool)
  fullName: SharpSDL3.Sdl.SetTrayEntryEnabled(nint, bool)
  nameWithType.vb: Sdl.SetTrayEntryEnabled(IntPtr, Boolean)
  fullName.vb: SharpSDL3.Sdl.SetTrayEntryEnabled(System.IntPtr, Boolean)
  name.vb: SetTrayEntryEnabled(IntPtr, Boolean)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetTrayEntryEnabled(System.IntPtr,System.Boolean)
    name: SetTrayEntryEnabled
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetTrayEntryEnabled_System_IntPtr_System_Boolean_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetTrayEntryEnabled(System.IntPtr,System.Boolean)
    name: SetTrayEntryEnabled
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetTrayEntryEnabled_System_IntPtr_System_Boolean_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: SharpSDL3.Sdl.GetTrayEntryEnabled*
  commentId: Overload:SharpSDL3.Sdl.GetTrayEntryEnabled
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTrayEntryEnabled_System_IntPtr_
  name: GetTrayEntryEnabled
  nameWithType: Sdl.GetTrayEntryEnabled
  fullName: SharpSDL3.Sdl.GetTrayEntryEnabled
- uid: SharpSDL3.Sdl.SetTrayEntryLabel(System.IntPtr,System.String)
  commentId: M:SharpSDL3.Sdl.SetTrayEntryLabel(System.IntPtr,System.String)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetTrayEntryLabel_System_IntPtr_System_String_
  name: SetTrayEntryLabel(nint, string)
  nameWithType: Sdl.SetTrayEntryLabel(nint, string)
  fullName: SharpSDL3.Sdl.SetTrayEntryLabel(nint, string)
  nameWithType.vb: Sdl.SetTrayEntryLabel(IntPtr, String)
  fullName.vb: SharpSDL3.Sdl.SetTrayEntryLabel(System.IntPtr, String)
  name.vb: SetTrayEntryLabel(IntPtr, String)
  spec.csharp:
  - uid: SharpSDL3.Sdl.SetTrayEntryLabel(System.IntPtr,System.String)
    name: SetTrayEntryLabel
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetTrayEntryLabel_System_IntPtr_System_String_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.SetTrayEntryLabel(System.IntPtr,System.String)
    name: SetTrayEntryLabel
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetTrayEntryLabel_System_IntPtr_System_String_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SharpSDL3.Sdl.GetTrayEntryLabel*
  commentId: Overload:SharpSDL3.Sdl.GetTrayEntryLabel
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTrayEntryLabel_System_IntPtr_
  name: GetTrayEntryLabel
  nameWithType: Sdl.GetTrayEntryLabel
  fullName: SharpSDL3.Sdl.GetTrayEntryLabel
- uid: SharpSDL3.Sdl.GetTrayEntryParent*
  commentId: Overload:SharpSDL3.Sdl.GetTrayEntryParent
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTrayEntryParent_System_IntPtr_
  name: GetTrayEntryParent
  nameWithType: Sdl.GetTrayEntryParent
  fullName: SharpSDL3.Sdl.GetTrayEntryParent
- uid: SharpSDL3.Sdl.GetTrayMenu*
  commentId: Overload:SharpSDL3.Sdl.GetTrayMenu
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTrayMenu_System_IntPtr_
  name: GetTrayMenu
  nameWithType: Sdl.GetTrayMenu
  fullName: SharpSDL3.Sdl.GetTrayMenu
- uid: SharpSDL3.Sdl.CreateTraySubmenu(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.CreateTraySubmenu(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateTraySubmenu_System_IntPtr_
  name: CreateTraySubmenu(nint)
  nameWithType: Sdl.CreateTraySubmenu(nint)
  fullName: SharpSDL3.Sdl.CreateTraySubmenu(nint)
  nameWithType.vb: Sdl.CreateTraySubmenu(IntPtr)
  fullName.vb: SharpSDL3.Sdl.CreateTraySubmenu(System.IntPtr)
  name.vb: CreateTraySubmenu(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.CreateTraySubmenu(System.IntPtr)
    name: CreateTraySubmenu
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateTraySubmenu_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.CreateTraySubmenu(System.IntPtr)
    name: CreateTraySubmenu
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_CreateTraySubmenu_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.GetTrayMenuParentEntry*
  commentId: Overload:SharpSDL3.Sdl.GetTrayMenuParentEntry
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTrayMenuParentEntry_System_IntPtr_
  name: GetTrayMenuParentEntry
  nameWithType: Sdl.GetTrayMenuParentEntry
  fullName: SharpSDL3.Sdl.GetTrayMenuParentEntry
- uid: SharpSDL3.Sdl.GetTrayMenuParentTray*
  commentId: Overload:SharpSDL3.Sdl.GetTrayMenuParentTray
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTrayMenuParentTray_System_IntPtr_
  name: GetTrayMenuParentTray
  nameWithType: Sdl.GetTrayMenuParentTray
  fullName: SharpSDL3.Sdl.GetTrayMenuParentTray
- uid: SharpSDL3.Sdl.GetTraySubmenu*
  commentId: Overload:SharpSDL3.Sdl.GetTraySubmenu
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTraySubmenu_System_IntPtr_
  name: GetTraySubmenu
  nameWithType: Sdl.GetTraySubmenu
  fullName: SharpSDL3.Sdl.GetTraySubmenu
- uid: SharpSDL3.Enums.TrayEntryFlags
  commentId: T:SharpSDL3.Enums.TrayEntryFlags
  parent: SharpSDL3.Enums
  href: SharpSDL3.Enums.TrayEntryFlags.html
  name: TrayEntryFlags
  nameWithType: TrayEntryFlags
  fullName: SharpSDL3.Enums.TrayEntryFlags
- uid: SharpSDL3.Sdl.GetTrayEntryParent(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetTrayEntryParent(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTrayEntryParent_System_IntPtr_
  name: GetTrayEntryParent(nint)
  nameWithType: Sdl.GetTrayEntryParent(nint)
  fullName: SharpSDL3.Sdl.GetTrayEntryParent(nint)
  nameWithType.vb: Sdl.GetTrayEntryParent(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetTrayEntryParent(System.IntPtr)
  name.vb: GetTrayEntryParent(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetTrayEntryParent(System.IntPtr)
    name: GetTrayEntryParent
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTrayEntryParent_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetTrayEntryParent(System.IntPtr)
    name: GetTrayEntryParent
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTrayEntryParent_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.InsertTrayEntryAt*
  commentId: Overload:SharpSDL3.Sdl.InsertTrayEntryAt
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_InsertTrayEntryAt_System_IntPtr_System_Int32_System_String_SharpSDL3_Enums_TrayEntryFlags_
  name: InsertTrayEntryAt
  nameWithType: Sdl.InsertTrayEntryAt
  fullName: SharpSDL3.Sdl.InsertTrayEntryAt
- uid: SharpSDL3.Sdl.RemoveTrayEntry*
  commentId: Overload:SharpSDL3.Sdl.RemoveTrayEntry
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_RemoveTrayEntry_System_IntPtr_
  name: RemoveTrayEntry
  nameWithType: Sdl.RemoveTrayEntry
  fullName: SharpSDL3.Sdl.RemoveTrayEntry
- uid: SharpSDL3.Sdl.SetTrayEntryCallback*
  commentId: Overload:SharpSDL3.Sdl.SetTrayEntryCallback
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetTrayEntryCallback_System_IntPtr_SharpSDL3_Delegates_SdlTrayCallback_System_IntPtr_
  name: SetTrayEntryCallback
  nameWithType: Sdl.SetTrayEntryCallback
  fullName: SharpSDL3.Sdl.SetTrayEntryCallback
- uid: SharpSDL3.Delegates.SdlTrayCallback
  commentId: T:SharpSDL3.Delegates.SdlTrayCallback
  parent: SharpSDL3
  href: SharpSDL3.Delegates.html
  name: Delegates.SdlTrayCallback
  nameWithType: Delegates.SdlTrayCallback
  fullName: SharpSDL3.Delegates.SdlTrayCallback
  spec.csharp:
  - uid: SharpSDL3.Delegates
    name: Delegates
    href: SharpSDL3.Delegates.html
  - name: .
  - uid: SharpSDL3.Delegates.SdlTrayCallback
    name: SdlTrayCallback
    href: SharpSDL3.Delegates.SdlTrayCallback.html
  spec.vb:
  - uid: SharpSDL3.Delegates
    name: Delegates
    href: SharpSDL3.Delegates.html
  - name: .
  - uid: SharpSDL3.Delegates.SdlTrayCallback
    name: SdlTrayCallback
    href: SharpSDL3.Delegates.SdlTrayCallback.html
- uid: SharpSDL3.Sdl.GetTrayEntryChecked(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetTrayEntryChecked(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTrayEntryChecked_System_IntPtr_
  name: GetTrayEntryChecked(nint)
  nameWithType: Sdl.GetTrayEntryChecked(nint)
  fullName: SharpSDL3.Sdl.GetTrayEntryChecked(nint)
  nameWithType.vb: Sdl.GetTrayEntryChecked(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetTrayEntryChecked(System.IntPtr)
  name.vb: GetTrayEntryChecked(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetTrayEntryChecked(System.IntPtr)
    name: GetTrayEntryChecked
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTrayEntryChecked_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetTrayEntryChecked(System.IntPtr)
    name: GetTrayEntryChecked
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTrayEntryChecked_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.SetTrayEntryChecked*
  commentId: Overload:SharpSDL3.Sdl.SetTrayEntryChecked
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetTrayEntryChecked_System_IntPtr_System_Boolean_
  name: SetTrayEntryChecked
  nameWithType: Sdl.SetTrayEntryChecked
  fullName: SharpSDL3.Sdl.SetTrayEntryChecked
- uid: SharpSDL3.Sdl.GetTrayEntryEnabled(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetTrayEntryEnabled(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTrayEntryEnabled_System_IntPtr_
  name: GetTrayEntryEnabled(nint)
  nameWithType: Sdl.GetTrayEntryEnabled(nint)
  fullName: SharpSDL3.Sdl.GetTrayEntryEnabled(nint)
  nameWithType.vb: Sdl.GetTrayEntryEnabled(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetTrayEntryEnabled(System.IntPtr)
  name.vb: GetTrayEntryEnabled(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetTrayEntryEnabled(System.IntPtr)
    name: GetTrayEntryEnabled
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTrayEntryEnabled_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetTrayEntryEnabled(System.IntPtr)
    name: GetTrayEntryEnabled
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTrayEntryEnabled_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.SetTrayEntryEnabled*
  commentId: Overload:SharpSDL3.Sdl.SetTrayEntryEnabled
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetTrayEntryEnabled_System_IntPtr_System_Boolean_
  name: SetTrayEntryEnabled
  nameWithType: Sdl.SetTrayEntryEnabled
  fullName: SharpSDL3.Sdl.SetTrayEntryEnabled
- uid: SharpSDL3.Sdl.GetTrayEntryLabel(System.IntPtr)
  commentId: M:SharpSDL3.Sdl.GetTrayEntryLabel(System.IntPtr)
  isExternal: true
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTrayEntryLabel_System_IntPtr_
  name: GetTrayEntryLabel(nint)
  nameWithType: Sdl.GetTrayEntryLabel(nint)
  fullName: SharpSDL3.Sdl.GetTrayEntryLabel(nint)
  nameWithType.vb: Sdl.GetTrayEntryLabel(IntPtr)
  fullName.vb: SharpSDL3.Sdl.GetTrayEntryLabel(System.IntPtr)
  name.vb: GetTrayEntryLabel(IntPtr)
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetTrayEntryLabel(System.IntPtr)
    name: GetTrayEntryLabel
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTrayEntryLabel_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetTrayEntryLabel(System.IntPtr)
    name: GetTrayEntryLabel
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetTrayEntryLabel_System_IntPtr_
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: SharpSDL3.Sdl.SetTrayEntryLabel*
  commentId: Overload:SharpSDL3.Sdl.SetTrayEntryLabel
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetTrayEntryLabel_System_IntPtr_System_String_
  name: SetTrayEntryLabel
  nameWithType: Sdl.SetTrayEntryLabel
  fullName: SharpSDL3.Sdl.SetTrayEntryLabel
- uid: SharpSDL3.Sdl.SetTrayIcon*
  commentId: Overload:SharpSDL3.Sdl.SetTrayIcon
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetTrayIcon_System_IntPtr_System_IntPtr_
  name: SetTrayIcon
  nameWithType: Sdl.SetTrayIcon
  fullName: SharpSDL3.Sdl.SetTrayIcon
- uid: SharpSDL3.Sdl.SetTrayTooltip*
  commentId: Overload:SharpSDL3.Sdl.SetTrayTooltip
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_SetTrayTooltip_System_IntPtr_System_String_
  name: SetTrayTooltip
  nameWithType: Sdl.SetTrayTooltip
  fullName: SharpSDL3.Sdl.SetTrayTooltip
- uid: SharpSDL3.Sdl.GetVersion
  commentId: M:SharpSDL3.Sdl.GetVersion
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetVersion
  name: GetVersion()
  nameWithType: Sdl.GetVersion()
  fullName: SharpSDL3.Sdl.GetVersion()
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetVersion
    name: GetVersion
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetVersion
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetVersion
    name: GetVersion
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetVersion
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.GetRevision*
  commentId: Overload:SharpSDL3.Sdl.GetRevision
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRevision
  name: GetRevision
  nameWithType: Sdl.GetRevision
  fullName: SharpSDL3.Sdl.GetRevision
- uid: SharpSDL3.Sdl.GetRevision
  commentId: M:SharpSDL3.Sdl.GetRevision
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRevision
  name: GetRevision()
  nameWithType: Sdl.GetRevision()
  fullName: SharpSDL3.Sdl.GetRevision()
  spec.csharp:
  - uid: SharpSDL3.Sdl.GetRevision
    name: GetRevision
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRevision
  - name: (
  - name: )
  spec.vb:
  - uid: SharpSDL3.Sdl.GetRevision
    name: GetRevision
    href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetRevision
  - name: (
  - name: )
- uid: SharpSDL3.Sdl.GetVersion*
  commentId: Overload:SharpSDL3.Sdl.GetVersion
  href: SharpSDL3.Sdl.html#SharpSDL3_Sdl_GetVersion
  name: GetVersion
  nameWithType: Sdl.GetVersion
  fullName: SharpSDL3.Sdl.GetVersion
